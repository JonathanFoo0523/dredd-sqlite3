-- Time: 2024/06/11 05:21:11
-- Database: database1
-- Database version: 3.40.0
-- seed value: 3688041301
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ANALYZE vt1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=351430682,9');\n; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1638638606); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1569126429,9');\n; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt1 SET (c0, c1, c1)=('1569126429', 0X348c520b, '-520700373'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 533223795);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '38812'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27971'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '6275'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM main; -- 4ms;
INSERT INTO vt0(vt0) VALUES('merge=-9223372036854775808,15');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 40275620); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ANALYZE; -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT LEAD(vt0.c0, ((NOT (vt1.c1)) IN (((vt1.c1) BETWEEN (vt0.c0) AND ('-584810766')), CAST(vt1.c0 AS TEXT))), ((vt0.c0 COLLATE RTRIM) NOTNULL)) OVER () FROM vt1, vt0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX RTRIM; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
VACUUM; -- 2ms;
ANALYZE temp; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2614'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '14651'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-675419457,13');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (0.28540695129022986); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0 UNINDEXED); -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '43933'); -- 1ms;
INSERT OR IGNORE INTO vt2 VALUES (x'0d0f'); -- 0ms;
UPDATE OR IGNORE vt2 SET c0=-909446005 WHERE ((((((vt2.c0)%(x'')))AND(vt2.c0)))OR(SQLITE_VERSION())); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT v0.c0, vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c0 IN ()) THEN (vt1.c1 IN ()) WHEN (((vt1.c1))==((x''))) THEN ((((((((((((vt1.c0)OR(vt1.c1)))AND('881611275')))OR(v0.c0)))OR(vt1.c1)))AND(v0.c0)))AND(v0.c0)) WHEN ((((vt1.c0)AND(vt1.c1)))OR('0.28540695129022986')) THEN CASE WHEN vt1.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 ELSE v0.c0 END ELSE ((vt1.c1)OR(vt1.c1)) END;
SELECT ALL v0.c0, vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c0 IN ()) THEN (vt1.c1 IN ()) WHEN (((vt1.c1))=((x''))) THEN ((((((((((((vt1.c0)OR(vt1.c1)))AND('881611275')))OR(v0.c0)))OR(vt1.c1)))AND(v0.c0)))AND(v0.c0)) WHEN ((((vt1.c0)AND(vt1.c1)))OR('0.28540695129022986')) THEN CASE WHEN vt1.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 ELSE v0.c0 END ELSE ((vt1.c1)OR(vt1.c1)) END WHERE (TYPEOF((v0.c0 IN (vt1.c0)))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c0 IN ()) THEN (vt1.c1 IN ()) WHEN (((vt1.c1))==((x''))) THEN ((((((((((((vt1.c0)OR(vt1.c1)))AND('881611275')))OR(v0.c0)))OR(vt1.c1)))AND(v0.c0)))AND(v0.c0)) WHEN ((((vt1.c0)AND(vt1.c1)))OR('0.28540695129022986')) THEN CASE WHEN vt1.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 ELSE v0.c0 END ELSE ((vt1.c1)OR(vt1.c1)) END WHERE ((NOT (TYPEOF((v0.c0 IN (vt1.c0)))))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c0 IN ()) THEN (vt1.c1 IN ()) WHEN (((vt1.c1))==((x''))) THEN ((((((((((((vt1.c0)OR(vt1.c1)))AND('881611275')))OR(v0.c0)))OR(vt1.c1)))AND(v0.c0)))AND(v0.c0)) WHEN ((((vt1.c0)AND(vt1.c1)))OR('0.28540695129022986')) THEN CASE WHEN vt1.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 ELSE v0.c0 END ELSE ((vt1.c1)OR(vt1.c1)) END WHERE (((TYPEOF((v0.c0 IN (vt1.c0)))) ISNULL));
SELECT v0.c0, vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN (v0.c0 IN ()) THEN (vt1.c1 IN ()) WHEN (((vt1.c1))==((x''))) THEN ((((((((((((vt1.c0)OR(vt1.c1)))AND('881611275')))OR(v0.c0)))OR(vt1.c1)))AND(v0.c0)))AND(v0.c0)) WHEN ((((vt1.c0)AND(vt1.c1)))OR('0.28540695129022986')) THEN CASE WHEN vt1.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 ELSE v0.c0 END ELSE ((vt1.c1)OR(vt1.c1)) END;
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM v0, vt0, vt2, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM v0, vt0, vt2, vt1 NOT INDEXED WHERE (json_type((((vt0.c0))==((vt2.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM v0, vt0, vt2, vt1 WHERE ((NOT (json_type((((vt0.c0))=((vt2.c0))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM v0, vt0, vt2, vt1 NOT INDEXED WHERE (((json_type((((vt0.c0))==((vt2.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM v0, vt0, vt2, vt1;
SELECT ALL vt2.c0, v0.c0, vt1.c1, vt1.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt1.c1, vt1.c0;
SELECT vt2.c0, v0.c0, vt1.c1, vt1.c0 FROM v0, vt1, vt2 NOT INDEXED, vt0 WHERE ((((v0.c0, v0.c0, vt0.c0))<=((vt1.c1, vt0.c0, vt1.c0))) COLLATE BINARY) GROUP BY vt2.c0, v0.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt2.c0, v0.c0, vt1.c1, vt1.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT ((((v0.c0, v0.c0, vt0.c0))<=((vt1.c1, vt0.c0, vt1.c0))) COLLATE BINARY))) GROUP BY vt2.c0, v0.c0, vt1.c1, vt1.c0 UNION SELECT vt2.c0, v0.c0, vt1.c1, vt1.c0 FROM v0, vt1, vt2, vt0 WHERE ((((((v0.c0, v0.c0, vt0.c0))<=((vt1.c1, vt0.c0, vt1.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt2.c0, v0.c0, vt1.c1, vt1.c0;
SELECT ALL vt2.c0, v0.c0, vt1.c1, vt1.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt1.c1, vt1.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0;
SELECT v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING vt1.c0 UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0;
SELECT v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING vt1.c0 UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0;
SELECT ALL * FROM v0, vt0, vt2, vt1;
SELECT ALL * FROM v0, vt0, vt2, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) UNION ALL SELECT * FROM v0, vt0, vt2, vt1 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)))) UNION ALL SELECT ALL * FROM v0, vt0, vt2, vt1 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL));
SELECT ALL * FROM v0, vt0, vt2, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, vt2.c0, v0.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON (+ (((99616319)%(v0.c0)))) FULL OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c1 THEN vt2.c0 ELSE v0.c0 END AS INTEGER);
SELECT DISTINCT vt1.c0, vt1.c1, vt2.c0, v0.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON (+ (((99616319)%(v0.c0)))) FULL OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c1 THEN vt2.c0 ELSE v0.c0 END AS INTEGER) WHERE (x'') UNION SELECT DISTINCT vt1.c0, vt1.c1, vt2.c0, v0.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON (+ (((99616319)%(v0.c0)))) FULL OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c1 THEN vt2.c0 ELSE v0.c0 END AS INTEGER) WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt2.c0, v0.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON (+ (((99616319)%(v0.c0)))) FULL OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c1 THEN vt2.c0 ELSE v0.c0 END AS INTEGER) WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, vt2.c0, v0.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON (+ (((99616319)%(v0.c0)))) FULL OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c1 THEN vt2.c0 ELSE v0.c0 END AS INTEGER);
SELECT v0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM vt1, vt0, vt2 NOT INDEXED, v0 NOT INDEXED WHERE ((+ ((vt2.c0 IN ())))) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 WHERE ((NOT ((+ ((vt2.c0 IN ())))))) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 WHERE ((((+ ((vt2.c0 IN ())))) ISNULL)) GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY v0.c0, vt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(MAX(vt1.c1)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MAX(vt1.c1)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(MAX(vt1.c1))) ISNULL);
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0 WHERE (((vt0.c0)AND(((((vt0.c0)OR(v0.c0)))AND(vt2.c0))))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0 WHERE ((NOT (((vt0.c0)AND(((((vt0.c0)OR(v0.c0)))AND(vt2.c0))))))) UNION ALL SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0 WHERE (((((vt0.c0)AND(((((vt0.c0)OR(v0.c0)))AND(vt2.c0))))) ISNULL));
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0;
SELECT DISTINCT vt1.c1, vt2.c0, v0.c0 FROM v0, vt2, vt0 LEFT OUTER JOIN vt1 ON (~ (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))));
SELECT DISTINCT vt1.c1, vt2.c0, v0.c0 FROM v0, vt2, vt0 LEFT OUTER JOIN vt1 ON (~ (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE ((~ (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c1, vt2.c0, v0.c0 FROM v0, vt2, vt0 LEFT OUTER JOIN vt1 ON (~ (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE ((NOT ((~ (v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c1, vt2.c0, v0.c0 FROM v0, vt2, vt0 LEFT OUTER JOIN vt1 ON (~ (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE ((((~ (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c1, vt2.c0, v0.c0 FROM v0, vt2, vt0 LEFT OUTER JOIN vt1 ON (~ (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))));
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2, v0, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2, v0, vt0 WHERE (x'e83c') GROUP BY vt1.c0, vt2.c0, vt0.c0 UNION SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2, v0, vt0 WHERE ((NOT (x'e83c'))) GROUP BY vt1.c0, vt2.c0, vt0.c0 UNION SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2, v0, vt0 WHERE (((x'e83c') ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2, v0, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING '99616319' UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ('99616319')) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (('99616319') ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING '99616319' UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ('99616319')) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (('99616319') ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL * FROM vt2, v0, vt0, vt1;
SELECT * FROM vt2, v0, vt0, vt1 WHERE ((((vt0.c0 IN ())) BETWEEN ('W(#WZ\n') AND (((vt1.c1)||(vt0.c0))))) UNION ALL SELECT ALL * FROM vt2, v0, vt0, vt1 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN ('W(#WZ\n') AND (((vt1.c1)||(vt0.c0))))))) UNION ALL SELECT * FROM vt2, v0, vt0, vt1 WHERE ((((((vt0.c0 IN ())) BETWEEN ('W(#WZ\n') AND (((vt1.c1)||(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt2, v0, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE ((((((((vt2.c0))=((vt2.c0))))AND((+ (vt2.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT ((((((((vt2.c0))=((vt2.c0))))AND((+ (vt2.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((((((((((vt2.c0))=((vt2.c0))))AND((+ (vt2.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1, vt2 INNER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0))) LEFT OUTER JOIN v0 ON ((((v0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE NOCASE GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1, vt2 INNER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0))) LEFT OUTER JOIN v0 ON ((((v0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE NOCASE WHERE (((((vt2.c0 IN ())))>((((((vt1.c1)OR(v0.c0)))OR(vt1.c0)))))) GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0 UNION SELECT vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1, vt2 INNER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0))) LEFT OUTER JOIN v0 ON ((((v0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE NOCASE WHERE ((NOT (((((vt2.c0 IN ())))>((((((vt1.c1)OR(v0.c0)))OR(vt1.c0)))))))) GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0 UNION SELECT vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1 NOT INDEXED, vt2 INNER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0))) LEFT OUTER JOIN v0 ON ((((v0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE NOCASE WHERE (((((((vt2.c0 IN ())))>((((((vt1.c1)OR(v0.c0)))OR(vt1.c0)))))) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1, vt2 INNER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0))) LEFT OUTER JOIN v0 ON ((((v0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE NOCASE GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0;
SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0;
SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt0 FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY v0.c0, vt2.c0, vt1.c0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON JULIANDAY(CAST(vt0.c0 AS TEXT), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)), ((((vt1.c0)OR(0.18237725379548375)))AND('-1593090295'))) CROSS JOIN vt0 ON ((((vt0.c0))==((vt2.c0))) IN ());
SELECT vt1.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON JULIANDAY(CAST(vt0.c0 AS TEXT), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)), ((((vt1.c0)OR(0.18237725379548375)))AND('-1593090295'))) CROSS JOIN vt0 ON ((((vt0.c0))==((vt2.c0))) IN ()) WHERE (((((((vt2.c0)<=(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(x'84b1'))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON JULIANDAY(CAST(vt0.c0 AS TEXT), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)), ((((vt1.c0)OR(0.18237725379548375)))AND('-1593090295'))) CROSS JOIN vt0 ON ((((vt0.c0))==((vt2.c0))) IN ()) WHERE ((NOT (((((((vt2.c0)<=(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(x'84b1'))))) UNION ALL SELECT vt1.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON JULIANDAY(CAST(vt0.c0 AS TEXT), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)), ((((vt1.c0)OR(0.18237725379548375)))AND('-1593090295'))) CROSS JOIN vt0 ON ((((vt0.c0))=((vt2.c0))) IN ()) WHERE (((((((((vt2.c0)<=(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(x'84b1'))) ISNULL));
SELECT ALL vt1.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON JULIANDAY(CAST(vt0.c0 AS TEXT), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)), ((((vt1.c0)OR(0.18237725379548375)))AND('-1593090295'))) CROSS JOIN vt0 ON ((((vt0.c0))==((vt2.c0))) IN ());
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, v0, vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, v0, vt2, vt1 WHERE ((((NOT (vt2.c0)))OR(((vt1.c1)<(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, v0, vt2, vt1 WHERE ((NOT ((((NOT (vt2.c0)))OR(((vt1.c1)<(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, v0, vt2, vt1 WHERE ((((((NOT (vt2.c0)))OR(((vt1.c1)<(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, v0, vt2, vt1;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((((vt1.c0)=(vt1.c0)))OR(((vt1.c0)||(vt2.c0)))))AND(((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)))) LEFT OUTER JOIN vt2 ON '-32465624' GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0;
SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((((vt1.c0)==(vt1.c0)))OR(((vt1.c0)||(vt2.c0)))))AND(((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)))) LEFT OUTER JOIN vt2 ON '-32465624' WHERE (((CAST(vt2.c0 AS INTEGER))&((NOT (v0.c0))))) GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((((vt1.c0)==(vt1.c0)))OR(((vt1.c0)||(vt2.c0)))))AND(((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)))) LEFT OUTER JOIN vt2 ON '-32465624' WHERE ((NOT (((CAST(vt2.c0 AS INTEGER))&((NOT (v0.c0))))))) GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((((vt1.c0)==(vt1.c0)))OR(((vt1.c0)||(vt2.c0)))))AND(((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)))) LEFT OUTER JOIN vt2 ON '-32465624' WHERE (((((CAST(vt2.c0 AS INTEGER))&((NOT (v0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((((vt1.c0)=(vt1.c0)))OR(((vt1.c0)||(vt2.c0)))))AND(((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)))) LEFT OUTER JOIN vt2 ON '-32465624' GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((MAX('6,XY_ꘁ,亽E')) BETWEEN (vt0.c0) AND (AVG(MIN(TOTAL(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((MAX('6,XY_ꘁ,亽E')) BETWEEN (vt0.c0) AND (AVG(MIN(TOTAL(TOTAL(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((MAX('6,XY_ꘁ,亽E')) BETWEEN (vt0.c0) AND (AVG(MIN(TOTAL(TOTAL(vt0.c0)))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((((((vt1.c0)AND(v0.c0)))AND(vt1.c1)))LIKE(((vt1.c1)AND(v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((((((vt1.c0)AND(v0.c0)))AND(vt1.c1)))LIKE(((vt1.c1)AND(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((((((vt1.c0)AND(v0.c0)))AND(vt1.c1)))LIKE(((vt1.c1)AND(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1 WHERE ((((vt1.c1))<=((vt1.c0))) COLLATE BINARY) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, vt1 NOT INDEXED WHERE ((NOT ((((vt1.c1))<=((vt1.c0))) COLLATE BINARY))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0 NOT INDEXED, vt1 WHERE ((((((vt1.c1))<=((vt1.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt2.c0, v0.c0, vt1.c1 FROM v0 CROSS JOIN vt2 ON CAST(vt0.c0 AS REAL) COLLATE RTRIM FULL OUTER JOIN vt1 ON ((((((((vt1.c1 COLLATE RTRIM)AND('')))AND(CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt2.c0)))OR(((vt1.c1)+(vt2.c0)))) INNER JOIN vt0 ON CASE (+ (vt1.c1))  WHEN '666790488' THEN ((vt0.c0)%(vt0.c0)) WHEN ((vt2.c0)<=(vt1.c1)) THEN CAST(vt1.c1 AS TEXT) WHEN vt0.c0 THEN CAST(v0.c0 AS INTEGER) END GROUP BY vt2.c0, v0.c0, vt1.c1;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON TRIM(DISTINCT TYPEOF(DISTINCT v0.c0), ((0xffffffffa96bbf39) BETWEEN (vt1.c1) AND (x''))) FULL OUTER JOIN vt2 ON (+ (((v0.c0) NOTNULL))) FULL OUTER JOIN v0 ON ((x'')GLOB(x'63a7'));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((CAST(v0.c0 AS REAL))AND(((0.7173385859241187)<<(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))AND((NULL IN ()))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((CAST(v0.c0 AS REAL))AND(((0.7173385859241187)<<(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))AND((NULL IN ()))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((CAST(v0.c0 AS REAL))AND(((0.7173385859241187)<<(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))AND((NULL IN ()))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT ((((((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 WHERE ((NOT (LOWER(DISTINCT ((((((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 WHERE (((LOWER(DISTINCT ((((((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt2, vt1 CROSS JOIN v0 ON UNLIKELY(DISTINCT json_remove(vt1.c1, vt2.c0)) GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON (((NOT (vt2.c0))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((vt1.c0) NOT NULL)));
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 WHERE (vt1.c1) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1 FROM vt1 NOT INDEXED, vt0 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0)*(vt1.c1))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0)*(vt1.c1))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0)*(vt1.c1))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING (((('501366538')AND(COUNT(*))))AND(GROUP_CONCAT(0.5146166757270698))) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING (NOT ((((('501366538')AND(COUNT(*))))AND(GROUP_CONCAT(0.5146166757270698))) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING (((((('501366538')AND(COUNT(*))))AND(GROUP_CONCAT(0.5146166757270698))) COLLATE RTRIM) ISNULL);
SELECT vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING (((('501366538')AND(COUNT(*))))AND(GROUP_CONCAT(0.5146166757270698))) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING (NOT ((((('501366538')AND(COUNT(*))))AND(GROUP_CONCAT(0.5146166757270698))) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING (((((('501366538')AND(COUNT(*))))AND(GROUP_CONCAT(0.5146166757270698))) COLLATE RTRIM) ISNULL);
SELECT vt1.c0 FROM vt1 INNER JOIN vt2 ON RTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0))) INNER JOIN v0 ON ((vt1.c1)>=(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0 COLLATE RTRIM)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)IS(vt1.c1))))<>(((+ (vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0)IS(vt1.c1))))<>(((+ (vt1.c1)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0)IS(vt1.c1))))<>(((+ (vt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CASE 0.8211672466500978  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.4768943447626951 END END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CASE 0.8211672466500978  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.4768943447626951 END END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CASE 0.8211672466500978  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.4768943447626951 END END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(MAX(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(MAX(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(MAX(vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(MAX(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(MAX(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(MAX(vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0, vt0, vt2;
SELECT v0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE (((((vt1.c1)AND((((vt0.c0, vt1.c1, v0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, '')) AND ((vt0.c0, vt1.c0, vt0.c0))))))AND(LENGTH(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE ((NOT (((((vt1.c1)AND((((vt0.c0, vt1.c1, v0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, '')) AND ((vt0.c0, vt1.c0, vt0.c0))))))AND(LENGTH(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE (((((((vt1.c1)AND((((vt0.c0, vt1.c1, v0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, '')) AND ((vt0.c0, vt1.c0, vt0.c0))))))AND(LENGTH(v0.c0)))) ISNULL));
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0, vt0, vt2;
SELECT DISTINCT * FROM v0, vt2, vt1;
SELECT DISTINCT * FROM v0, vt2, vt1 WHERE ((vt1.c0 COLLATE RTRIM IN (CAST(vt1.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, vt2, vt1 WHERE ((NOT ((vt1.c0 COLLATE RTRIM IN (CAST(vt1.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM v0, vt2, vt1 WHERE ((((vt1.c0 COLLATE RTRIM IN (CAST(vt1.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt1;
SELECT vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt2 WHERE (((((vt1.c1)&(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) NOT NULL)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt2 WHERE ((NOT (((((vt1.c1)&(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) NOT NULL)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt2 WHERE (((((((vt1.c1)&(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1;
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT vt0.c0, vt0.c0)) BETWEEN ((- (vt0.c0))) AND (vt0.c0 COLLATE BINARY)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT vt0.c0, vt0.c0)) BETWEEN ((- (vt0.c0))) AND (vt0.c0 COLLATE BINARY)) GROUP BY v0.c0 HAVING MIN(((AVG(vt0.c0))/(TOTAL(SUM(v0.c0))))) UNION ALL SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT vt0.c0, vt0.c0)) BETWEEN ((- (vt0.c0))) AND (vt0.c0 COLLATE BINARY)) GROUP BY v0.c0 HAVING (NOT (MIN(((AVG(vt0.c0))/(TOTAL(SUM(v0.c0))))))) UNION ALL SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT vt0.c0, vt0.c0)) BETWEEN ((- (vt0.c0))) AND (vt0.c0 COLLATE BINARY)) GROUP BY v0.c0 HAVING ((MIN(((AVG(vt0.c0))/(TOTAL(SUM(v0.c0)))))) ISNULL);
SELECT vt2.c0 FROM vt0 INNER JOIN vt2 ON ((v0.c0)<=(v0.c0)) COLLATE NOCASE FULL OUTER JOIN v0 ON (~ (vt2.c0)) COLLATE NOCASE;
SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1, v0;
SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1, v0 WHERE ((((+ (v0.c0)))+(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN '\1' THEN '-584810766' ELSE v0.c0 END))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1, v0 WHERE ((NOT ((((+ (v0.c0)))+(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN '\1' THEN '-584810766' ELSE v0.c0 END))))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1, v0 WHERE ((((((+ (v0.c0)))+(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN '\1' THEN '-584810766' ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING CAST(MIN(SUM(MIN(GROUP_CONCAT(vt0.c0)))) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MIN(SUM(MIN(GROUP_CONCAT(vt0.c0)))) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING ((CAST(MIN(SUM(MIN(GROUP_CONCAT(vt0.c0)))) AS BLOB)) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((0.3644218285756037)GLOB((- (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((0.3644218285756037)GLOB((- (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((0.3644218285756037)GLOB((- (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) NOT NULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CAST(v0.c0 AS TEXT)) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CAST(v0.c0 AS TEXT)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt2.c0, vt1.c1, v0.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, v0.c0;
SELECT ALL vt2.c0, vt1.c1, v0.c0 FROM vt0, vt2, v0, vt1 WHERE ((((((vt0.c0))!=((v0.c0))))LIKE((('-1095773533') NOTNULL)))) GROUP BY vt2.c0, vt1.c1, v0.c0 UNION SELECT ALL vt2.c0, vt1.c1, v0.c0 FROM vt0, vt2, v0, vt1 WHERE ((NOT ((((((vt0.c0))<>((v0.c0))))LIKE((('-1095773533') NOTNULL)))))) GROUP BY vt2.c0, vt1.c1, v0.c0 UNION SELECT ALL vt2.c0, vt1.c1, v0.c0 FROM vt0, vt2, v0, vt1 WHERE ((((((((vt0.c0))!=((v0.c0))))LIKE((('-1095773533') NOTNULL)))) ISNULL)) GROUP BY vt2.c0, vt1.c1, v0.c0;
SELECT ALL vt2.c0, vt1.c1, v0.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, v0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB) GROUP BY vt0.c0 HAVING ((SUM(MIN(v0.c0))) NOT BETWEEN (COUNT(*)) AND (((vt0.c0)LIKE(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB) GROUP BY vt0.c0 HAVING (NOT (((SUM(MIN(v0.c0))) NOT BETWEEN (COUNT(*)) AND (((vt0.c0)LIKE(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB) GROUP BY vt0.c0 HAVING ((((SUM(MIN(v0.c0))) NOT BETWEEN (COUNT(*)) AND (((vt0.c0)LIKE(vt0.c0))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(x'')))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(x'')))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(x'')))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((vt2.c0 COLLATE NOCASE)>>('-520700373')) LEFT OUTER JOIN vt2 ON NULLIF(((0.41292578124725654) NOT BETWEEN (vt2.c0) AND (x'37df')), CAST(vt0.c0 AS TEXT)) GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT * FROM vt0, vt1, vt2;
SELECT * FROM vt0, vt1, vt2 WHERE ((((NOT (vt1.c0)))%(((vt1.c1) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, vt1, vt2 WHERE ((NOT ((((NOT (vt1.c0)))%(((vt1.c1) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt0, vt1, vt2 WHERE ((((((NOT (vt1.c0)))%(((vt1.c1) IS FALSE)))) ISNULL));
SELECT * FROM vt0, vt1, vt2;
SELECT DISTINCT * FROM v0, vt1, vt0 CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)AND(0.7702276268524921)))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c1)))OR(v0.c0))));
SELECT DISTINCT * FROM v0, vt1, vt0 CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)AND(0.7702276268524921)))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c1)))OR(v0.c0)))) WHERE (vt1.c1) UNION SELECT DISTINCT * FROM v0, vt1, vt0 CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)AND(0.7702276268524921)))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c1)))OR(v0.c0)))) WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)AND(0.7702276268524921)))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c1)))OR(v0.c0)))) WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0 CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)AND(0.7702276268524921)))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c1)))OR(v0.c0))));
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))=(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))==(vt0.c0 COLLATE BINARY)) WHERE (ABS(((vt1.c0) BETWEEN (vt1.c0) AND (x'0148')))) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))==(vt0.c0 COLLATE BINARY)) WHERE ((NOT (ABS(((vt1.c0) BETWEEN (vt1.c0) AND (x'0148')))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt1, vt2 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))==(vt0.c0 COLLATE BINARY)) WHERE (((ABS(((vt1.c0) BETWEEN (vt1.c0) AND (x'0148')))) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))=(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt1.c1 FROM vt2, vt1 CROSS JOIN v0 ON ((((v0.c0)!=(vt0.c0)))LIKE(((v0.c0) IS FALSE))) RIGHT OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN vt1.c1 END)OR(vt1.c0 COLLATE NOCASE)))AND(CAST(v0.c0 AS BLOB))) GROUP BY vt1.c1;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) ISNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(v0.c0 AS TEXT) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, v0.c0)) END) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) ISNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(v0.c0 AS TEXT) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, v0.c0)) END))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) ISNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(v0.c0 AS TEXT) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, v0.c0)) END) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((vt1.c1 IN ()))OR(json_quote(vt1.c1))))AND(vt1.c0 COLLATE BINARY)))OR((vt1.c1 IN (vt1.c0)))))OR(vt1.c0))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED WHERE ((NOT ((((((((((vt1.c1 IN ()))OR(json_quote(vt1.c1))))AND(vt1.c0 COLLATE BINARY)))OR((vt1.c1 IN (vt1.c0)))))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((((((vt1.c1 IN ()))OR(json_quote(vt1.c1))))AND(vt1.c0 COLLATE BINARY)))OR((vt1.c1 IN (vt1.c0)))))OR(vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED NATURAL JOIN vt1 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((+ (vt1.c0 COLLATE BINARY))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((NOT ((+ (vt1.c0 COLLATE BINARY))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((((+ (vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED NATURAL JOIN vt1 GROUP BY v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))!=((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))<>((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING NULL UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))<>((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))!=((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))!=((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))<>((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING NULL UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))<>((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))!=((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- ((((vt0.c0))!=((v0.c0))))) RIGHT OUTER JOIN vt2 ON NULL GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL MAX(((v0.c0)-((v0.c0 IN ())))) FROM v0, vt2;
SELECT ALL * FROM v0 CROSS JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(NULL)))OR((('1655561826') NOTNULL)));
SELECT * FROM v0 CROSS JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(NULL)))OR((('1655561826') NOTNULL))) WHERE (((CAST(vt2.c0 AS NUMERIC)) ISNULL)) UNION ALL SELECT * FROM v0 CROSS JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(NULL)))OR((('1655561826') NOTNULL))) WHERE ((NOT (((CAST(vt2.c0 AS NUMERIC)) ISNULL)))) UNION ALL SELECT * FROM v0 CROSS JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(NULL)))OR((('1655561826') NOTNULL))) WHERE (((((CAST(vt2.c0 AS NUMERIC)) ISNULL)) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(NULL)))OR((('1655561826') NOTNULL)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ((- (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ((- (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (NULLIF(DISTINCT CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0)<<(vt2.c0)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (NULLIF(DISTINCT CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0)<<(vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((NULLIF(DISTINCT CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0)<<(vt2.c0)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS REAL)) IS TRUE)) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((CAST(vt2.c0 AS REAL)) IS TRUE)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((((CAST(vt2.c0 AS REAL)) IS TRUE)) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT vt1.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((((vt1.c0)GLOB(vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)GLOB(vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt0, vt1;
SELECT ALL vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c1;
SELECT vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING TOTAL(LIKELY(DISTINCT COUNT(vt2.c0))) UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT (TOTAL(LIKELY(DISTINCT COUNT(vt2.c0))))) UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((TOTAL(LIKELY(DISTINCT COUNT(vt2.c0)))) ISNULL);
SELECT vt1.c1, vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)LIKE(vt2.c0)) COLLATE BINARY;
SELECT vt1.c1, vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)LIKE(vt2.c0)) COLLATE BINARY WHERE ((+ ((((vt1.c1, vt2.c0, vt2.c0))>=((vt0.c0, vt0.c0, vt2.c0)))))) UNION ALL SELECT ALL vt1.c1, vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)LIKE(vt2.c0)) COLLATE BINARY WHERE ((NOT ((+ ((((vt1.c1, vt2.c0, vt2.c0))>=((vt0.c0, vt0.c0, vt2.c0)))))))) UNION ALL SELECT ALL vt1.c1, vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)LIKE(vt2.c0)) COLLATE BINARY WHERE ((((+ ((((vt1.c1, vt2.c0, vt2.c0))>=((vt0.c0, vt0.c0, vt2.c0)))))) ISNULL));
SELECT vt1.c1, vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)LIKE(vt2.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((((vt1.c1 IN (vt2.c0)))>(vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((NOT ((((vt1.c1 IN (vt2.c0)))>(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((((((vt1.c1 IN (vt2.c0)))>(vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT ALL vt1.c0, vt1.c1 FROM v0, vt2, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM v0, vt2, vt1 WHERE (CASE json_object(vt2.c0, NULL)  WHEN ABS(vt1.c0) THEN (v0.c0 IN (vt1.c0)) ELSE ((vt1.c1)OR(v0.c0)) END) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM v0, vt2, vt1 WHERE ((NOT (CASE json_object(vt2.c0, NULL)  WHEN ABS(vt1.c0) THEN (v0.c0 IN (vt1.c0)) ELSE ((vt1.c1)OR(v0.c0)) END))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM v0, vt2, vt1 WHERE (((CASE json_object(vt2.c0, NULL)  WHEN ABS(vt1.c0) THEN (v0.c0 IN (vt1.c0)) ELSE ((vt1.c1)OR(v0.c0)) END) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM v0, vt2, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((COUNT(vt1.c1))>>(COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT (((COUNT(vt1.c1))>>(COUNT(*))))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((((COUNT(vt1.c1))>>(COUNT(*)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((COUNT(vt1.c1))>>(COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT (((COUNT(vt1.c1))>>(COUNT(*))))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((((COUNT(vt1.c1))>>(COUNT(*)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL MIN(((NULL) NOT BETWEEN (((((v0.c0)OR(vt1.c0)))AND(vt2.c0))) AND ((vt2.c0 IN (vt1.c1))))) FROM vt0, vt1, vt2, v0 ORDER BY json_insert((((vt1.c1))>=((vt0.c0))), (NOT ('')), (vt2.c0 IN ())) DESC;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c1) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt2.c0)))AND(vt1.c1)))&(((((vt1.c1)AND('')))OR(vt1.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE ((NOT (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt2.c0)))AND(vt1.c1)))&(((((vt1.c1)AND('')))OR(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt2.c0)))AND(vt1.c1)))&(((((vt1.c1)AND('')))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt2, vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((NULL)&(((vt2.c0) NOTNULL)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((NULL)&(((vt2.c0) NOTNULL)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((NULL)&(((vt2.c0) NOTNULL)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt2 ON ((x'')&((~ (vt1.c0)))) GROUP BY vt1.c1, vt2.c0, vt1.c0;
SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt2 ON ((x'')&((~ (vt1.c0)))) GROUP BY vt1.c1, vt2.c0, vt1.c0 HAVING (((- (vt1.c1)))-(((MAX(AVG(COUNT(*))))<<(SUM(COUNT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt2 ON ((x'')&((~ (vt1.c0)))) GROUP BY vt1.c1, vt2.c0, vt1.c0 HAVING (NOT ((((- (vt1.c1)))-(((MAX(AVG(COUNT(*))))<<(SUM(COUNT(vt1.c0)))))))) UNION ALL SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt2 ON ((x'')&((~ (vt1.c0)))) GROUP BY vt1.c1, vt2.c0, vt1.c0 HAVING (((((- (vt1.c1)))-(((MAX(AVG(COUNT(*))))<<(SUM(COUNT(vt1.c0))))))) ISNULL);
SELECT TOTAL(((((((vt0.c0)AND(vt0.c0)))OR(v0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ('-751759086'))) FROM vt0, v0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 WHERE (NULL) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 WHERE (((NULL) ISNULL));
SELECT vt0.c0, vt2.c0 FROM vt2, vt0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1 NOT INDEXED, v0 WHERE ((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN (('', (vt1.c1 IN ()), (NOT (v0.c0)))) AND ((((v0.c0)LIKE(vt1.c0)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0))), ((((v0.c0)OR(vt1.c1)))AND(vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN (('', (vt1.c1 IN ()), (NOT (v0.c0)))) AND ((((v0.c0)LIKE(vt1.c0)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0))), ((((v0.c0)OR(vt1.c1)))AND(vt1.c1)))))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN (('', (vt1.c1 IN ()), (NOT (v0.c0)))) AND ((((v0.c0)LIKE(vt1.c0)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0))), ((((v0.c0)OR(vt1.c1)))AND(vt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((x'', vt1.c1, '279497204')) BETWEEN ((CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((vt1.c0)||(vt0.c0)), json_object(vt1.c0, vt1.c0))) AND (((((vt1.c1))<=((vt1.c0))), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))), ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1))))) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((x'', vt1.c1, '279497204')) BETWEEN ((CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((vt1.c0)||(vt0.c0)), json_object(vt1.c0, vt1.c0))) AND (((((vt1.c1))<=((vt1.c0))), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))), ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1))))) WHERE (((((vt1.c1) IS FALSE)) NOTNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((x'', vt1.c1, '279497204')) BETWEEN ((CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((vt1.c0)||(vt0.c0)), json_object(vt1.c0, vt1.c0))) AND (((((vt1.c1))<=((vt1.c0))), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))), ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1))))) WHERE ((NOT (((((vt1.c1) IS FALSE)) NOTNULL)))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((x'', vt1.c1, '279497204')) BETWEEN ((CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((vt1.c0)||(vt0.c0)), json_object(vt1.c0, vt1.c0))) AND (((((vt1.c1))<=((vt1.c0))), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))), ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1))))) WHERE (((((((vt1.c1) IS FALSE)) NOTNULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((x'', vt1.c1, '279497204')) BETWEEN ((CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((vt1.c0)||(vt0.c0)), json_object(vt1.c0, vt1.c0))) AND (((((vt1.c1))<=((vt1.c0))), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))), ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1))))) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (v0.c0 IN ()) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c0 IN ()) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 IN ()) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (v0.c0 IN ()) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c0 IN ()) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 IN ()) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(NULL)))>=((vt1.c1 IN ())))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((NOT (((((((vt1.c0)AND(vt1.c1)))AND(NULL)))>=((vt1.c1 IN ())))))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((vt1.c0)AND(vt1.c1)))AND(NULL)))>=((vt1.c1 IN ())))) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1) BETWEEN ((+ (-833830897))) AND (IFNULL(vt1.c0, vt0.c0)));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1) BETWEEN ((+ (-833830897))) AND (IFNULL(vt1.c0, vt0.c0))) WHERE (CAST(((x'3554') IS TRUE) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1) BETWEEN ((+ (-833830897))) AND (IFNULL(vt1.c0, vt0.c0))) WHERE ((NOT (CAST(((x'3554') IS TRUE) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1) BETWEEN ((+ (-833830897))) AND (IFNULL(vt1.c0, vt0.c0))) WHERE (((CAST(((x'3554') IS TRUE) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1) BETWEEN ((+ (-833830897))) AND (IFNULL(vt1.c0, vt0.c0)));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((0.41292578124725654) NOT NULL)) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((0.41292578124725654) NOT NULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((0.41292578124725654) NOT NULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING AVG(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (AVG(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((AVG(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0 NOT INDEXED, v0 LEFT OUTER JOIN vt2 ON NULL;
SELECT * FROM vt0, v0 LEFT OUTER JOIN vt2 ON NULL WHERE (CAST(NULL AS INTEGER)) UNION ALL SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt2 ON NULL WHERE ((NOT (CAST(NULL AS INTEGER)))) UNION ALL SELECT * FROM vt0, v0 LEFT OUTER JOIN vt2 ON NULL WHERE (((CAST(NULL AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED, v0 LEFT OUTER JOIN vt2 ON NULL;
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt2;
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt2 WHERE (((((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))|(((((vt2.c0)OR(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt2 WHERE ((NOT (((((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))|(((((vt2.c0)OR(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt2 WHERE (((((((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))|(((((vt2.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (CAST((vt2.c0 IN ()) AS NUMERIC)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (CAST((vt2.c0 IN ()) AS NUMERIC)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((CAST((vt2.c0 IN ()) AS NUMERIC)) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL * FROM vt1, v0, vt0, vt2;
SELECT * FROM vt1, v0, vt0, vt2 WHERE (((vt2.c0 COLLATE BINARY) ISNULL)) UNION ALL SELECT * FROM vt1, v0, vt0, vt2 WHERE ((NOT (((vt2.c0 COLLATE BINARY) ISNULL)))) UNION ALL SELECT * FROM vt1, v0, vt0, vt2 WHERE (((((vt2.c0 COLLATE BINARY) ISNULL)) ISNULL));
SELECT ALL * FROM vt1, v0, vt0, vt2;
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0, vt1.c0 FROM vt0, vt2, vt1 INNER JOIN v0 ON CASE WHEN ((vt0.c0)IS NOT(x'')) THEN (~ (vt2.c0)) ELSE (vt2.c0 IN ()) END;
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0, vt1.c0 FROM vt0, vt2, vt1 INNER JOIN v0 ON CASE WHEN ((vt0.c0)IS NOT(x'')) THEN (~ (vt2.c0)) ELSE (vt2.c0 IN ()) END WHERE (((((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN 1.910756543E9 THEN vt1.c1 WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)AND(((vt2.c0)>=(v0.c0)))))OR(vt1.c1))) UNION SELECT DISTINCT vt2.c0, vt0.c0, v0.c0, vt1.c0 FROM vt0, vt2, vt1 INNER JOIN v0 ON CASE WHEN ((vt0.c0)IS NOT(x'')) THEN (~ (vt2.c0)) ELSE (vt2.c0 IN ()) END WHERE ((NOT (((((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN 1.910756543E9 THEN vt1.c1 WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)AND(((vt2.c0)>=(v0.c0)))))OR(vt1.c1))))) UNION SELECT DISTINCT vt2.c0, vt0.c0, v0.c0, vt1.c0 FROM vt0, vt2, vt1 INNER JOIN v0 ON CASE WHEN ((vt0.c0)IS NOT(x'')) THEN (~ (vt2.c0)) ELSE (vt2.c0 IN ()) END WHERE (((((((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN 1.910756543E9 THEN vt1.c1 WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)AND(((vt2.c0)>=(v0.c0)))))OR(vt1.c1))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0, vt1.c0 FROM vt0, vt2, vt1 INNER JOIN v0 ON CASE WHEN ((vt0.c0)IS NOT(x'')) THEN (~ (vt2.c0)) ELSE (vt2.c0 IN ()) END;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, vt2 CROSS JOIN v0 ON vt1.c0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, vt2 CROSS JOIN v0 ON vt1.c0 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL)) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, vt2 CROSS JOIN v0 ON vt1.c0 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL)))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, vt2 CROSS JOIN v0 ON vt1.c0 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, vt2 CROSS JOIN v0 ON vt1.c0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 NOT INDEXED, v0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((NOT (v0.c0)) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((NOT (v0.c0)) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((NOT (v0.c0)) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((((((((((vt1.c1))<>((vt1.c1))))OR(NULL)))OR((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((x''))))))AND((~ (vt1.c1)))))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))OR(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)))AND(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((((((((((((vt1.c1))<>((vt1.c1))))OR(NULL)))OR((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((x''))))))AND((~ (vt1.c1)))))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))OR(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)))AND(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((((((((((((vt1.c1))!=((vt1.c1))))OR(NULL)))OR((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((x''))))))AND((~ (vt1.c1)))))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))OR(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)))AND(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((('0.7173385859241187' IN ()))IS(CASE WHEN v0.c0 THEN vt0.c0 END))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((('0.7173385859241187' IN ()))IS(CASE WHEN v0.c0 THEN vt0.c0 END))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((('0.7173385859241187' IN ()))IS(CASE WHEN v0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt1.c1, vt0.c0 FROM vt1, vt2 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT ((vt2.c0)<(vt1.c0)), (((vt1.c1, v0.c0, vt2.c0))<((vt1.c0, vt1.c1, vt0.c0)))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((((vt1.c0)OR(vt1.c1)))AND(vt2.c0))) GROUP BY v0.c0, vt1.c1, vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN ())))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt2, v0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt2, v0 NATURAL JOIN vt1 WHERE ((((((+ (v0.c0)))AND(((vt1.c1) NOT NULL))))OR(x''))) UNION SELECT DISTINCT * FROM vt2, v0 NATURAL JOIN vt1 WHERE ((NOT ((((((+ (v0.c0)))AND(((vt1.c1) NOT NULL))))OR(x''))))) UNION SELECT DISTINCT * FROM vt2, v0 NATURAL JOIN vt1 WHERE ((((((((+ (v0.c0)))AND(((vt1.c1) NOT NULL))))OR(x''))) ISNULL));
SELECT DISTINCT * FROM vt2, v0 NATURAL JOIN vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((~ (((vt1.c1) IS FALSE)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((~ (((vt1.c1) IS FALSE)))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((~ (((vt1.c1) IS FALSE)))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM vt0, vt2, v0, vt1 GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM vt0, vt2, v0, vt1 GROUP BY v0.c0, vt1.c1 HAVING COUNT((((v0.c0, MAX(x'99d1'), SUM(MIN(MAX(vt0.c0)))))==((AVG(vt1.c1), MIN(GROUP_CONCAT(vt2.c0)), vt2.c0)))) UNION ALL SELECT ALL v0.c0, vt1.c1 FROM vt0, vt2, v0, vt1 GROUP BY v0.c0, vt1.c1 HAVING (NOT (COUNT((((v0.c0, MAX(x'99d1'), SUM(MIN(MAX(vt0.c0)))))==((AVG(vt1.c1), MIN(GROUP_CONCAT(vt2.c0)), vt2.c0)))))) UNION ALL SELECT ALL v0.c0, vt1.c1 FROM vt0, vt2, v0, vt1 GROUP BY v0.c0, vt1.c1 HAVING ((COUNT((((v0.c0, MAX(x'99d1'), SUM(MIN(MAX(vt0.c0)))))==((AVG(vt1.c1), MIN(GROUP_CONCAT(vt2.c0)), vt2.c0))))) ISNULL);
SELECT * FROM v0, vt0, vt2, vt1;
SELECT ALL * FROM v0, vt0, vt2, vt1 WHERE (UNICODE(CASE vt1.c1  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)) UNION ALL SELECT * FROM v0, vt0, vt2, vt1 WHERE ((NOT (UNICODE(CASE vt1.c1  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)))) UNION ALL SELECT * FROM v0, vt0, vt2, vt1 WHERE (((UNICODE(CASE vt1.c1  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)) ISNULL));
SELECT * FROM v0, vt0, vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1, v0;
SELECT DISTINCT * FROM vt2, vt1, v0 WHERE ((('-909446005')OR(((((v0.c0)AND('2045266779')))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt2, vt1, v0 WHERE ((NOT ((('-909446005')OR(((((v0.c0)AND('2045266779')))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt2, vt1, v0 WHERE ((((('-909446005')OR(((((v0.c0)AND('2045266779')))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, v0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (0.18237725379548375) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (0.18237725379548375))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((0.18237725379548375) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((ABS(v0.c0))AND(((v0.c0) ISNULL))))OR(RTRIM(v0.c0))))OR(((v0.c0)=(v0.c0)))))AND(x''))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((ABS(v0.c0))AND(((v0.c0) ISNULL))))OR(RTRIM(v0.c0))))OR(((v0.c0)==(v0.c0)))))AND(x''))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((((ABS(v0.c0))AND(((v0.c0) ISNULL))))OR(RTRIM(v0.c0))))OR(((v0.c0)==(v0.c0)))))AND(x''))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((+ (((vt1.c0)<(vt1.c1))))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT ((+ (((vt1.c0)<(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((((+ (((vt1.c0)<(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 INNER JOIN v0 ON ((((((((CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0)))))AND(vt2.c0)))OR((((vt0.c0))>=((vt2.c0))))))AND(((vt2.c0) NOT BETWEEN ('1569126429') AND (v0.c0)))) GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 INNER JOIN v0 ON ((((((((CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0)))))AND(vt2.c0)))OR((((vt0.c0))>=((vt2.c0))))))AND(((vt2.c0) NOT BETWEEN ('1569126429') AND (v0.c0)))) WHERE (((CASE WHEN vt0.c0 THEN '303128678' ELSE v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM))) GROUP BY v0.c0, vt2.c0, vt0.c0 UNION SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 INNER JOIN v0 ON ((((((((CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0)))))AND(vt2.c0)))OR((((vt0.c0))>=((vt2.c0))))))AND(((vt2.c0) NOT BETWEEN ('1569126429') AND (v0.c0)))) WHERE ((NOT (((CASE WHEN vt0.c0 THEN '303128678' ELSE v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM))))) GROUP BY v0.c0, vt2.c0, vt0.c0 UNION SELECT v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 INNER JOIN v0 ON ((((((((CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0)))))AND(vt2.c0)))OR((((vt0.c0))>=((vt2.c0))))))AND(((vt2.c0) NOT BETWEEN ('1569126429') AND (v0.c0)))) WHERE (((((CASE WHEN vt0.c0 THEN '303128678' ELSE v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 INNER JOIN v0 ON ((((((((CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0)))))AND(vt2.c0)))OR((((vt0.c0))>=((vt2.c0))))))AND(((vt2.c0) NOT BETWEEN ('1569126429') AND (v0.c0)))) GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((COUNT(*))>>(((((vt2.c0)AND(v0.c0)))AND(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING (NOT (((COUNT(*))>>(((((vt2.c0)AND(v0.c0)))AND(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((((COUNT(*))>>(((((vt2.c0)AND(v0.c0)))AND(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT ALL v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((COUNT(*))>>(((((vt2.c0)AND(v0.c0)))AND(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING (NOT (((COUNT(*))>>(((((vt2.c0)AND(v0.c0)))AND(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((((COUNT(*))>>(((((vt2.c0)AND(v0.c0)))AND(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT ALL v0.c0, vt2.c0 FROM vt1, v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (CAST(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) AS INTEGER)) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CAST(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) AS INTEGER)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((CAST(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) AS INTEGER)) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE ((v0.c0)GLOB(v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE ((v0.c0)GLOB(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE ((v0.c0)GLOB(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c1, vt2.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON CASE WHEN (((vt2.c0, vt1.c1, ''))>=((vt2.c0, vt2.c0, vt2.c0))) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE ((vt1.c1)IS(v0.c0)) END GROUP BY vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON CASE WHEN (((vt2.c0, vt1.c1, ''))>=((vt2.c0, vt2.c0, vt2.c0))) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE ((vt1.c1)IS(v0.c0)) END WHERE ((PRINTF(vt1.c0) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt2.c0)))))) GROUP BY vt1.c1, vt2.c0 UNION SELECT ALL vt1.c1, vt2.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON CASE WHEN (((vt2.c0, vt1.c1, ''))>=((vt2.c0, vt2.c0, vt2.c0))) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE ((vt1.c1)IS(v0.c0)) END WHERE ((NOT ((PRINTF(vt1.c0) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt2.c0)))))))) GROUP BY vt1.c1, vt2.c0 UNION SELECT vt1.c1, vt2.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON CASE WHEN (((vt2.c0, vt1.c1, ''))>=((vt2.c0, vt2.c0, vt2.c0))) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE ((vt1.c1)IS(v0.c0)) END WHERE ((((PRINTF(vt1.c0) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt2.c0)))))) ISNULL)) GROUP BY vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON CASE WHEN (((vt2.c0, vt1.c1, ''))>=((vt2.c0, vt2.c0, vt2.c0))) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE ((vt1.c1)IS(v0.c0)) END GROUP BY vt1.c1, vt2.c0;
SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0;
SELECT v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING CASE TOTAL(GROUP_CONCAT(SUM(TOTAL(TOTAL(TOTAL(x''))))))  WHEN vt1.c0 THEN vt1.c1 WHEN TOTAL(COUNT(vt1.c1)) THEN vt1.c1 WHEN TOTAL(vt1.c1) THEN GROUP_CONCAT(vt1.c0) WHEN MAX(v0.c0) THEN v0.c0 WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(vt2.c0) ELSE COUNT(*) END COLLATE BINARY UNION ALL SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING (NOT (CASE TOTAL(GROUP_CONCAT(SUM(TOTAL(TOTAL(TOTAL(x''))))))  WHEN vt1.c0 THEN vt1.c1 WHEN TOTAL(COUNT(vt1.c1)) THEN vt1.c1 WHEN TOTAL(vt1.c1) THEN GROUP_CONCAT(vt1.c0) WHEN MAX(v0.c0) THEN v0.c0 WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(vt2.c0) ELSE COUNT(*) END COLLATE BINARY)) UNION ALL SELECT v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING ((CASE TOTAL(GROUP_CONCAT(SUM(TOTAL(TOTAL(TOTAL(x''))))))  WHEN vt1.c0 THEN vt1.c1 WHEN TOTAL(COUNT(vt1.c1)) THEN vt1.c1 WHEN TOTAL(vt1.c1) THEN GROUP_CONCAT(vt1.c0) WHEN MAX(v0.c0) THEN v0.c0 WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(vt2.c0) ELSE COUNT(*) END COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt2, vt0, vt1 CROSS JOIN v0 ON TRIM(DISTINCT 0.42325029249997737, UNLIKELY(NULL));
SELECT ALL vt0.c0 FROM vt2, vt0, vt1 CROSS JOIN v0 ON TRIM(DISTINCT 0.42325029249997737, UNLIKELY(NULL)) WHERE (SUBSTR(vt2.c0, vt1.c0) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt2, vt0, vt1 CROSS JOIN v0 ON TRIM(DISTINCT 0.42325029249997737, UNLIKELY(NULL)) WHERE ((NOT (SUBSTR(vt2.c0, vt1.c0) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt2, vt0, vt1 CROSS JOIN v0 ON TRIM(DISTINCT 0.42325029249997737, UNLIKELY(NULL)) WHERE (((SUBSTR(vt2.c0, vt1.c0) COLLATE BINARY) ISNULL));
SELECT vt0.c0 FROM vt2, vt0, vt1 CROSS JOIN v0 ON TRIM(DISTINCT 0.42325029249997737, UNLIKELY(NULL));
SELECT DISTINCT * FROM v0, vt2, vt1 INNER JOIN vt0 ON ((((vt0.c0)%(vt1.c1))) NOT BETWEEN (v0.c0) AND (vt1.c0));
SELECT DISTINCT * FROM v0, vt2, vt1 INNER JOIN vt0 ON ((((vt0.c0)%(vt1.c1))) NOT BETWEEN (v0.c0) AND (vt1.c0)) WHERE (((CASE WHEN v0.c0 THEN NULL ELSE vt2.c0 END)OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt2, vt1 INNER JOIN vt0 ON ((((vt0.c0)%(vt1.c1))) NOT BETWEEN (v0.c0) AND (vt1.c0)) WHERE ((NOT (((CASE WHEN v0.c0 THEN NULL ELSE vt2.c0 END)OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt2, vt1 INNER JOIN vt0 ON ((((vt0.c0)%(vt1.c1))) NOT BETWEEN (v0.c0) AND (vt1.c0)) WHERE (((((CASE WHEN v0.c0 THEN NULL ELSE vt2.c0 END)OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt1 INNER JOIN vt0 ON ((((vt0.c0)%(vt1.c1))) NOT BETWEEN (v0.c0) AND (vt1.c0));
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((((vt2.c0)IS(vt2.c0)))>=(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0)IS(vt2.c0)))>=(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((((vt2.c0)IS(vt2.c0)))>=(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT v0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((((((vt2.c0)OR(x'')))OR(v0.c0))) BETWEEN (((((NULL)OR(v0.c0)))AND(vt2.c0))) AND ((('')==(vt2.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((((((vt2.c0)OR(x'')))OR(v0.c0))) BETWEEN (((((NULL)OR(v0.c0)))AND(vt2.c0))) AND ((('')=(vt2.c0)))) GROUP BY v0.c0 HAVING ((((CAST(MAX(TOTAL(MAX(v0.c0))) AS INTEGER))AND(COALESCE(SUM(NULL), COUNT(*), vt2.c0, MIN(v0.c0)))))AND(TOTAL(COUNT(SUM(COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((((((vt2.c0)OR(x'')))OR(v0.c0))) BETWEEN (((((NULL)OR(v0.c0)))AND(vt2.c0))) AND ((('')=(vt2.c0)))) GROUP BY v0.c0 HAVING (NOT (((((CAST(MAX(TOTAL(MAX(v0.c0))) AS INTEGER))AND(COALESCE(SUM(NULL), COUNT(*), vt2.c0, MIN(v0.c0)))))AND(TOTAL(COUNT(SUM(COUNT(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((((((vt2.c0)OR(x'')))OR(v0.c0))) BETWEEN (((((NULL)OR(v0.c0)))AND(vt2.c0))) AND ((('')==(vt2.c0)))) GROUP BY v0.c0 HAVING ((((((CAST(MAX(TOTAL(MAX(v0.c0))) AS INTEGER))AND(COALESCE(SUM(NULL), COUNT(*), vt2.c0, MIN(v0.c0)))))AND(TOTAL(COUNT(SUM(COUNT(v0.c0))))))) ISNULL);
SELECT * FROM v0, vt0, vt2;
SELECT ALL * FROM v0, vt0, vt2 WHERE ((((((v0.c0)AND(vt0.c0)))AND(vt2.c0)) IN ())) UNION ALL SELECT ALL * FROM v0, vt0, vt2 WHERE ((NOT ((((((v0.c0)AND(vt0.c0)))AND(vt2.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0, vt0, vt2 WHERE ((((((((v0.c0)AND(vt0.c0)))AND(vt2.c0)) IN ())) ISNULL));
SELECT * FROM v0, vt0, vt2;
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM vt2, vt0, v0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM vt2, vt0, v0, vt1 WHERE (((((((v0.c0)=(vt1.c1)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (0x22ccdd40)))))OR(-1.452556487E9))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM vt2, vt0, v0, vt1 WHERE ((NOT (((((((v0.c0)=(vt1.c1)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (0x22ccdd40)))))OR(-1.452556487E9))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM vt2, vt0, v0, vt1 WHERE (((((((((v0.c0)=(vt1.c1)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (0X22ccdd40)))))OR(-1.452556487E9))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt1.c1 FROM vt2, vt0, v0, vt1;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MAX(AVG(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MAX(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MAX(AVG(v0.c0))) ISNULL);
SELECT * FROM vt2, vt0, v0, vt1;
SELECT * FROM vt2, vt0, v0, vt1 WHERE (CAST((vt0.c0 IN ()) AS REAL)) UNION ALL SELECT ALL * FROM vt2, vt0, v0, vt1 WHERE ((NOT (CAST((vt0.c0 IN ()) AS REAL)))) UNION ALL SELECT ALL * FROM vt2, vt0, v0, vt1 WHERE (((CAST((vt0.c0 IN ()) AS REAL)) ISNULL));
SELECT * FROM vt2, vt0, v0, vt1;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((((vt1.c0 IN (vt1.c1, '157356104')))OR((- (vt1.c1)))))OR(0.5348177586639636))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((((vt1.c0 IN (vt1.c1, '157356104')))OR((- (vt1.c1)))))OR(0.5348177586639636))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((((vt1.c0 IN (vt1.c1, '157356104')))OR((- (vt1.c1)))))OR(0.5348177586639636))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt0.c0, v0.c0, vt2.c0;
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt2, vt0, vt1, v0 WHERE ((NULL COLLATE NOCASE IN ())) GROUP BY vt0.c0, v0.c0, vt2.c0 UNION SELECT ALL vt0.c0, v0.c0, vt2.c0 FROM vt2, vt0, vt1, v0 WHERE ((NOT ((NULL COLLATE NOCASE IN ())))) GROUP BY vt0.c0, v0.c0, vt2.c0 UNION SELECT ALL vt0.c0, v0.c0, vt2.c0 FROM vt2, vt0, vt1, v0 WHERE ((((NULL COLLATE NOCASE IN ())) ISNULL)) GROUP BY vt0.c0, v0.c0, vt2.c0;
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt0.c0, v0.c0, vt2.c0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2, v0 GROUP BY vt1.c1, vt1.c0, vt2.c0;
SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2, v0 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING MAX((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((AVG(vt2.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2, v0 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING (NOT (MAX((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((AVG(vt2.c0))))))) UNION ALL SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2, v0 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING ((MAX((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((AVG(vt2.c0)))))) ISNULL);
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (((((((vt2.c0)OR(vt1.c0)))OR(vt1.c1)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((vt1.c1))), ((vt0.c0)>>(vt0.c0))))>((((((vt1.c0)OR(vt0.c0)))AND(NULL)), CAST(v0.c0 AS TEXT), (((vt2.c0))<((NULL)))))) RIGHT OUTER JOIN vt1 ON ((((vt2.c0) NOTNULL)) IS TRUE) CROSS JOIN v0 ON ((((((vt1.c0)AND(vt2.c0)))AND(vt1.c1)))==(x''));
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2;
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0 NOT INDEXED, vt1, vt2 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN NULLIF(DISTINCT vt1.c0, 0x296bd99d) WHEN 'm' THEN (vt1.c1 IN (v0.c0, vt1.c0)) WHEN (((vt2.c0))==((v0.c0))) THEN ((v0.c0)<=(v0.c0)) END) UNION SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2 WHERE ((NOT (CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN NULLIF(DISTINCT vt1.c0, 0X296bd99d) WHEN 'm' THEN (vt1.c1 IN (v0.c0, vt1.c0)) WHEN (((vt2.c0))==((v0.c0))) THEN ((v0.c0)<=(v0.c0)) END))) UNION SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2 WHERE (((CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN NULLIF(DISTINCT vt1.c0, 0x296bd99d) WHEN 'm' THEN (vt1.c1 IN (v0.c0, vt1.c0)) WHEN (((vt2.c0))==((v0.c0))) THEN ((v0.c0)<=(v0.c0)) END) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2;
SELECT ALL vt1.c1 FROM v0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM v0, vt1 WHERE (LIKELIHOOD(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))), 0.5590584994783399)) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM v0, vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))), 0.5590584994783399)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM v0, vt1 WHERE (((LIKELIHOOD(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))), 0.5590584994783399)) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM v0, vt1 GROUP BY vt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(vt0.c0))) BETWEEN ((vt0.c0)) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((MAX(TOTAL(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((AVG(vt0.c0))) BETWEEN ((vt0.c0)) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((MAX(TOTAL(vt0.c0)))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((AVG(vt0.c0))) BETWEEN ((vt0.c0)) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((MAX(TOTAL(vt0.c0))))))))) ISNULL);
SELECT ALL vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (vt1.c1) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c1, '^x', vt1.c1, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c1, vt1.c1, vt1.c1, '\ricdj', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1, 0.12104356113005954, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c1))), CAST(vt1.c1 AS BLOB), ((NULL) NOT NULL), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), (vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((vt1.c1 COLLATE RTRIM, (NOT (vt1.c0)), ((vt1.c1) NOT NULL), ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), ((vt1.c1) ISNULL))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c1, '^x', vt1.c1, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c1, vt1.c1, vt1.c1, '\ricdj', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1, 0.12104356113005954, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c1))), CAST(vt1.c1 AS BLOB), ((NULL) NOT NULL), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), (vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((vt1.c1 COLLATE RTRIM, (NOT (vt1.c0)), ((vt1.c1) NOT NULL), ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), ((vt1.c1) ISNULL))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c1, '^x', vt1.c1, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c1, vt1.c1, vt1.c1, '\ricdj', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1, 0.12104356113005954, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c1))), CAST(vt1.c1 AS BLOB), ((NULL) NOT NULL), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), (vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((vt1.c1 COLLATE RTRIM, (NOT (vt1.c0)), ((vt1.c1) NOT NULL), ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), ((vt1.c1) ISNULL))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt0.c0 FROM vt2 NOT INDEXED, v0 RIGHT OUTER JOIN vt1 ON ((CHANGES())GLOB(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FULL OUTER JOIN vt0 ON ((((vt0.c0)IS(v0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt1.c1)))) GROUP BY vt1.c1, vt0.c0;
SELECT v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY v0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY v0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY v0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 NATURAL JOIN vt2;
SELECT v0.c0 FROM v0 NATURAL JOIN vt2 WHERE (CASE WHEN CAST(-2046764007 AS NUMERIC) THEN NULL ELSE ((((vt2.c0)AND(v0.c0)))OR(v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt2 WHERE ((NOT (CASE WHEN CAST(-2046764007 AS NUMERIC) THEN NULL ELSE ((((vt2.c0)AND(v0.c0)))OR(v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt2 WHERE (((CASE WHEN CAST(-2046764007 AS NUMERIC) THEN NULL ELSE ((((vt2.c0)AND(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0 NATURAL JOIN vt2;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE (((((vt2.c0) IS TRUE))|((vt0.c0 IN (vt2.c0))))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((NOT (((((vt2.c0) IS TRUE))|((vt0.c0 IN (vt2.c0))))))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE (((((((vt2.c0) IS TRUE))|((vt0.c0 IN (vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (json_remove(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)), ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)), ((vt1.c1) NOT BETWEEN (x'') AND (vt1.c0)), x'')) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (json_remove(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)), ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)), ((vt1.c1) NOT BETWEEN (x'') AND (vt1.c0)), x'')))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((json_remove(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)), ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)), ((vt1.c1) NOT BETWEEN (x'') AND (vt1.c0)), x'')) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING LOWER(vt2.c0) COLLATE RTRIM UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (LOWER(vt2.c0) COLLATE RTRIM)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((LOWER(vt2.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING LOWER(vt2.c0) COLLATE RTRIM UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (LOWER(vt2.c0) COLLATE RTRIM)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((LOWER(vt2.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT * FROM vt0, vt2, v0, vt1;
SELECT ALL * FROM vt0, vt2, v0, vt1 WHERE ((~ (NULL)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, vt2, v0, vt1 WHERE ((NOT ((~ (NULL)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, vt2, v0, vt1 WHERE ((((~ (NULL)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, vt2, v0, vt1;
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM v0 INNER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((x''))) CROSS JOIN vt0 ON ((((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(UPPER(0.8336932696888564))))OR(((vt1.c1)<(vt2.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(CAST(vt2.c0 AS BLOB))) CROSS JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN (LTRIM(v0.c0, v0.c0)));
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM v0 INNER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((x''))) CROSS JOIN vt0 ON ((((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(UPPER(0.8336932696888564))))OR(((vt1.c1)<(vt2.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(CAST(vt2.c0 AS BLOB))) CROSS JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN (LTRIM(v0.c0, v0.c0))) WHERE ((- (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM v0 INNER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((x''))) CROSS JOIN vt0 ON ((((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(UPPER(0.8336932696888564))))OR(((vt1.c1)<(vt2.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(CAST(vt2.c0 AS BLOB))) CROSS JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN (LTRIM(v0.c0, v0.c0))) WHERE ((NOT ((- (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM v0 INNER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((x''))) CROSS JOIN vt0 ON ((((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(UPPER(0.8336932696888564))))OR(((vt1.c1)<(vt2.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(CAST(vt2.c0 AS BLOB))) CROSS JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN (LTRIM(v0.c0, v0.c0))) WHERE ((((- (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM v0 INNER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((x''))) CROSS JOIN vt0 ON ((((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(UPPER(0.8336932696888564))))OR(((vt1.c1)<(vt2.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(CAST(vt2.c0 AS BLOB))) CROSS JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN (LTRIM(v0.c0, v0.c0)));
SELECT v0.c0, vt1.c1 FROM v0, vt2 LEFT OUTER JOIN vt1 ON vt1.c1 GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM v0, vt2 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE (vt1.c0) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM v0, vt2 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE ((NOT (vt1.c0))) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM v0, vt2 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE (((vt1.c0) ISNULL)) GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM v0, vt2 LEFT OUTER JOIN vt1 ON vt1.c1 GROUP BY v0.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)<<(((v0.c0)%(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(1.910756543E9 AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(1.910756543E9 AS BLOB)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(1.910756543E9 AS BLOB)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1 WHERE (((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((v0.c0)||(v0.c0))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1 WHERE ((NOT (((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((v0.c0)||(v0.c0))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1 WHERE (((((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((v0.c0)||(v0.c0))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1;
SELECT ALL vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE WHEN SUBSTR(vt2.c0, vt1.c1) THEN (((vt1.c0))>=((vt2.c0))) END GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE WHEN SUBSTR(vt2.c0, vt1.c1) THEN (((vt1.c0))>=((vt2.c0))) END WHERE ((((vt2.c0, vt2.c0, vt1.c1)) NOT BETWEEN ((((((vt1.c1)AND(0.33807500400029056)))AND(vt1.c0)), ((vt1.c0) IS TRUE), vt2.c0)) AND ((vt1.c1, vt1.c1, LTRIM(vt1.c1, vt1.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE WHEN SUBSTR(vt2.c0, vt1.c1) THEN (((vt1.c0))>=((vt2.c0))) END WHERE ((NOT ((((vt2.c0, vt2.c0, vt1.c1)) NOT BETWEEN ((((((vt1.c1)AND(0.33807500400029056)))AND(vt1.c0)), ((vt1.c0) IS TRUE), vt2.c0)) AND ((vt1.c1, vt1.c1, LTRIM(vt1.c1, vt1.c0))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE WHEN SUBSTR(vt2.c0, vt1.c1) THEN (((vt1.c0))>=((vt2.c0))) END WHERE ((((((vt2.c0, vt2.c0, vt1.c1)) NOT BETWEEN ((((((vt1.c1)AND(0.33807500400029056)))AND(vt1.c0)), ((vt1.c0) IS TRUE), vt2.c0)) AND ((vt1.c1, vt1.c1, LTRIM(vt1.c1, vt1.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE WHEN SUBSTR(vt2.c0, vt1.c1) THEN (((vt1.c0))>=((vt2.c0))) END GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1 NATURAL JOIN vt2;
SELECT vt2.c0 FROM vt1 NATURAL JOIN vt2 WHERE ((((('W(#WZ\n')/(vt1.c1)))>=(((vt1.c0) ISNULL)))) UNION ALL SELECT ALL vt2.c0 FROM vt1 NATURAL JOIN vt2 WHERE ((NOT ((((('W(#WZ\n')/(vt1.c1)))>=(((vt1.c0) ISNULL)))))) UNION ALL SELECT ALL vt2.c0 FROM vt1 NATURAL JOIN vt2 WHERE ((((((('W(#WZ\n')/(vt1.c1)))>=(((vt1.c0) ISNULL)))) ISNULL));
SELECT vt2.c0 FROM vt1 NATURAL JOIN vt2;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON vt1.c0;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON vt1.c0 WHERE (((CASE v0.c0  WHEN '1286663965' THEN v0.c0 WHEN 'uv' THEN vt1.c0 WHEN vt1.c1 THEN NULL END) NOT BETWEEN ((+ (v0.c0))) AND (((vt1.c1) NOT BETWEEN (vt0.c0) AND (NULL))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON vt1.c0 WHERE ((NOT (((CASE v0.c0  WHEN '1286663965' THEN v0.c0 WHEN 'uv' THEN vt1.c0 WHEN vt1.c1 THEN NULL END) NOT BETWEEN ((+ (v0.c0))) AND (((vt1.c1) NOT BETWEEN (vt0.c0) AND (NULL))))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON vt1.c0 WHERE (((((CASE v0.c0  WHEN '1286663965' THEN v0.c0 WHEN 'uv' THEN vt1.c0 WHEN vt1.c1 THEN NULL END) NOT BETWEEN ((+ (v0.c0))) AND (((vt1.c1) NOT BETWEEN (vt0.c0) AND (NULL))))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON vt1.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(((((((((vt1.c1)OR(NULL)))AND(vt1.c1)))AND(0.6894258329402841)))AND(vt1.c0)))))OR(((((v0.c0)OR(v0.c0)))OR(vt1.c0))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(((((((((vt1.c1)OR(NULL)))AND(vt1.c1)))AND(0.6894258329402841)))AND(vt1.c0)))))OR(((((v0.c0)OR(v0.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(((((((((vt1.c1)OR(NULL)))AND(vt1.c1)))AND(0.6894258329402841)))AND(vt1.c0)))))OR(((((v0.c0)OR(v0.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt2.c0 HAVING ((((vt0.c0)AND(MIN(MIN(TOTAL(AVG(TOTAL(vt2.c0))))))))>(((0.394076290728694) NOT BETWEEN (v0.c0) AND (vt0.c0)))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((((vt0.c0)AND(MIN(MIN(TOTAL(AVG(TOTAL(vt2.c0))))))))>(((0.394076290728694) NOT BETWEEN (v0.c0) AND (vt0.c0)))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt2.c0 HAVING ((((((vt0.c0)AND(MIN(MIN(TOTAL(AVG(TOTAL(vt2.c0))))))))>(((0.394076290728694) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((('rI1u')%((((v0.c0, v0.c0, v0.c0))<((x'c210', x'', v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((('rI1u')%((((v0.c0, v0.c0, v0.c0))<((x'c210', x'', v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((('rI1u')%((((v0.c0, v0.c0, v0.c0))<((x'c210', x'', v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0;
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0 WHERE (((CASE v0.c0  WHEN vt2.c0 THEN v0.c0 END) BETWEEN (((vt2.c0)IS NOT(vt2.c0))) AND (vt2.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0 WHERE ((NOT (((CASE v0.c0  WHEN vt2.c0 THEN v0.c0 END) BETWEEN (((vt2.c0)IS NOT(vt2.c0))) AND (vt2.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0 WHERE (((((CASE v0.c0  WHEN vt2.c0 THEN v0.c0 END) BETWEEN (((vt2.c0)IS NOT(vt2.c0))) AND (vt2.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0;
SELECT ALL vt1.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2, vt1, vt0 WHERE ((((((vt0.c0, vt2.c0, vt1.c1)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))))||(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt2, vt1, vt0 WHERE ((NOT ((((((vt0.c0, vt2.c0, vt1.c1)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))))||(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt2, vt1, vt0 WHERE ((((((((vt0.c0, vt2.c0, vt1.c1)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))))||(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(vt1.c0 AS REAL) COLLATE BINARY INNER JOIN vt0 ON ((vt2.c0) IS FALSE) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(vt1.c0 AS REAL) COLLATE BINARY INNER JOIN vt0 ON ((vt2.c0) IS FALSE) GROUP BY vt1.c0 HAVING (NOT (((((((((vt0.c0)OR(vt1.c0)))AND(MIN(MAX(GROUP_CONCAT(TOTAL(vt1.c1)))))))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(vt1.c0 AS REAL) COLLATE BINARY INNER JOIN vt0 ON ((vt2.c0) IS FALSE) GROUP BY vt1.c0 HAVING (NOT ((NOT (((((((((vt0.c0)OR(vt1.c0)))AND(MIN(MAX(GROUP_CONCAT(TOTAL(vt1.c1)))))))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(vt1.c0 AS REAL) COLLATE BINARY INNER JOIN vt0 ON ((vt2.c0) IS FALSE) GROUP BY vt1.c0 HAVING (((NOT (((((((((vt0.c0)OR(vt1.c0)))AND(MIN(MAX(GROUP_CONCAT(TOTAL(vt1.c1)))))))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt1, vt2, v0;
SELECT ALL * FROM vt1, vt2, v0 WHERE (json_array(((v0.c0)<=(vt1.c1)), ((vt1.c1)OR(vt1.c0)), json_array_length(vt2.c0, vt1.c0), (((vt1.c1, vt1.c0, vt2.c0))<>((vt2.c0, x'', 0.08237099354294619))))) UNION ALL SELECT * FROM vt1, vt2, v0 WHERE ((NOT (json_array(((v0.c0)<=(vt1.c1)), ((vt1.c1)OR(vt1.c0)), json_array_length(vt2.c0, vt1.c0), (((vt1.c1, vt1.c0, vt2.c0))!=((vt2.c0, x'', 0.08237099354294619))))))) UNION ALL SELECT * FROM vt1, vt2, v0 WHERE (((json_array(((v0.c0)<=(vt1.c1)), ((vt1.c1)OR(vt1.c0)), json_array_length(vt2.c0, vt1.c0), (((vt1.c1, vt1.c0, vt2.c0))<>((vt2.c0, x'', 0.08237099354294619))))) ISNULL));
SELECT ALL * FROM vt1, vt2, v0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CASE CASE WHEN vt2.c0 THEN vt2.c0 END  WHEN x'' THEN TYPEOF(vt2.c0) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE NOCASE WHEN (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) THEN CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END ELSE (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) END) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CASE CASE WHEN vt2.c0 THEN vt2.c0 END  WHEN x'' THEN TYPEOF(vt2.c0) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE NOCASE WHEN (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) THEN CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END ELSE (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) END))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CASE CASE WHEN vt2.c0 THEN vt2.c0 END  WHEN x'' THEN TYPEOF(vt2.c0) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE NOCASE WHEN (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) THEN CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END ELSE (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) END) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c1 FROM vt2 CROSS JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN vt1 ON (((((vt2.c0)) NOT BETWEEN ((vt1.c1)) AND (('-520700373')))) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND (vt2.c0)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2 CROSS JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN vt1 ON (((((vt2.c0)) NOT BETWEEN ((vt1.c1)) AND (('-520700373')))) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND (vt2.c0)) WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((json_extract(v0.c0, vt2.c0, vt1.c0, v0.c0), (+ (vt1.c1)), ((vt2.c0) NOTNULL))) AND ((vt2.c0, 370920758, ((0X12116066)*(vt1.c0)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt2 CROSS JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN vt1 ON (((((vt2.c0)) NOT BETWEEN ((vt1.c1)) AND (('-520700373')))) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND (vt2.c0)) WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((json_extract(v0.c0, vt2.c0, vt1.c0, v0.c0), (+ (vt1.c1)), ((vt2.c0) NOTNULL))) AND ((vt2.c0, 370920758, ((0X12116066)*(vt1.c0)))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt2 CROSS JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN vt1 ON (((((vt2.c0)) NOT BETWEEN ((vt1.c1)) AND (('-520700373')))) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND (vt2.c0)) WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((json_extract(v0.c0, vt2.c0, vt1.c0, v0.c0), (+ (vt1.c1)), ((vt2.c0) NOTNULL))) AND ((vt2.c0, 370920758, ((0X12116066)*(vt1.c0)))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt2 CROSS JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN vt1 ON (((((vt2.c0)) NOT BETWEEN ((vt1.c1)) AND (('-520700373')))) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND (vt2.c0)) GROUP BY vt1.c1;
SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1, vt2.c0 HAVING TOTAL(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1, vt2.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1, vt2.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (- (((v0.c0)>(vt1.c0))));
SELECT ALL v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (- (((v0.c0)>(vt1.c0)))) WHERE (((((((((CAST('1012213423' AS NUMERIC))OR(CAST(vt1.c1 AS TEXT))))AND((vt1.c0 IN ()))))OR(TRIM(DISTINCT vt2.c0))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (- (((v0.c0)>(vt1.c0)))) WHERE ((NOT (((((((((CAST('1012213423' AS NUMERIC))OR(CAST(vt1.c1 AS TEXT))))AND((vt1.c0 IN ()))))OR(TRIM(DISTINCT vt2.c0))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (- (((v0.c0)>(vt1.c0)))) WHERE (((((((((((CAST('1012213423' AS NUMERIC))OR(CAST(vt1.c1 AS TEXT))))AND((vt1.c0 IN ()))))OR(TRIM(DISTINCT vt2.c0))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))) ISNULL));
SELECT ALL v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (- (((v0.c0)>(vt1.c0))));
SELECT DISTINCT v0.c0, vt2.c0 FROM vt1, vt2, vt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0, vt2.c0 FROM vt1, vt2, vt0 NATURAL JOIN v0 WHERE ('1012213423') UNION SELECT DISTINCT v0.c0, vt2.c0 FROM vt1, vt2, vt0 NATURAL JOIN v0 WHERE ((NOT ('1012213423'))) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM vt1, vt2, vt0 NATURAL JOIN v0 WHERE ((('1012213423') ISNULL));
SELECT DISTINCT v0.c0, vt2.c0 FROM vt1, vt2, vt0 NATURAL JOIN v0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE (v0.c0) GROUP BY vt1.c0, vt1.c1, v0.c0 UNION SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE ((NOT (v0.c0))) GROUP BY vt1.c0, vt1.c1, v0.c0 UNION SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE (((v0.c0) ISNULL)) GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0 HAVING vt0.c0 UNION ALL SELECT vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0 HAVING vt0.c0 UNION ALL SELECT vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT MAX(((((v0.c0)IS NOT(v0.c0))) BETWEEN (((vt0.c0)LIKE(x''))) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) FROM v0, vt0;
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (((LIKELY(vt2.c0)) IS FALSE)) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (((LIKELY(vt2.c0)) IS FALSE)))) UNION ALL SELECT ALL * FROM vt2 WHERE (((((LIKELY(vt2.c0)) IS FALSE)) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) ISNULL))!=(((v0.c0) BETWEEN (v0.c0) AND (0x3998a44d))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) ISNULL))!=(((v0.c0) BETWEEN (v0.c0) AND (0X3998a44d))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) ISNULL))!=(((v0.c0) BETWEEN (v0.c0) AND (0x3998a44d))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (((vt0.c0) IS TRUE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0 NOT INDEXED, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0 HAVING ((AVG(vt1.c1)) NOTNULL) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0 HAVING (NOT (((AVG(vt1.c1)) NOTNULL))) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0 HAVING ((((AVG(vt1.c1)) NOTNULL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0 NOT INDEXED, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0 HAVING ((AVG(vt1.c1)) NOTNULL) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0 HAVING (NOT (((AVG(vt1.c1)) NOTNULL))) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0 HAVING ((((AVG(vt1.c1)) NOTNULL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt2.c0 FROM vt1, v0, vt0 INNER JOIN vt2 ON (((((vt1.c1)<=(vt2.c0))))>((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt2.c0;
SELECT * FROM v0, vt0, vt1;
SELECT * FROM v0, vt0, vt1 WHERE ((NOT (json_array('&k', v0.c0)))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((NOT ((NOT (json_array('&k', v0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((((NOT (json_array('&k', v0.c0)))) ISNULL));
SELECT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt1, v0, vt0, vt2;
SELECT DISTINCT * FROM vt1, v0, vt0, vt2 WHERE (((((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (x'3d77b2d4') AND (((vt1.c1)<<(vt1.c1))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0, vt2 WHERE ((NOT (((((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (x'3d77b2d4') AND (((vt1.c1)<<(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0, vt2 WHERE (((((((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (x'3d77b2d4') AND (((vt1.c1)<<(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0, vt2;
SELECT ALL v0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt0 CROSS JOIN vt2 ON ((((((((((vt0.c0) NOTNULL))OR(((((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))OR(vt1.c0)))OR(vt1.c1)))))OR(vt1.c0)))AND(((x'ee92') NOTNULL))))AND((- (0.9785287228214576)))) RIGHT OUTER JOIN v0 ON (((vt2.c0, vt0.c0, x'8f5a')) BETWEEN ((CAST(vt2.c0 AS TEXT), CAST(vt1.c1 AS TEXT), (NOT (v0.c0)))) AND ((((vt1.c0) IS TRUE), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), 0Xffffffffd7bdeabf))) GROUP BY v0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c0;
SELECT ALL v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0 HAVING (vt2.c0 IN ()) UNION ALL SELECT v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0 HAVING (NOT ((vt2.c0 IN ()))) UNION ALL SELECT ALL v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0 HAVING (((vt2.c0 IN ())) ISNULL);
SELECT ALL v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0 HAVING (vt2.c0 IN ()) UNION ALL SELECT v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0 HAVING (NOT ((vt2.c0 IN ()))) UNION ALL SELECT ALL v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0 HAVING (((vt2.c0 IN ())) ISNULL);
SELECT ALL v0.c0 FROM vt1, vt2 INNER JOIN v0 ON ((((TRIM(vt1.c1, v0.c0))AND((vt2.c0 IN ()))))AND(CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY v0.c0;
SELECT TOTAL(TRIM((- (vt0.c0)))) FROM vt0 ORDER BY (((((vt0.c0))<=((vt0.c0)))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)*(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0)+(vt0.c0)), CAST(x'' AS BLOB))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULLIF(((vt0.c0)+(vt0.c0)), CAST(x'' AS BLOB))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((NULLIF(((vt0.c0)+(vt0.c0)), CAST(x'' AS BLOB))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt2, vt1, v0;
SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE (((vt1.c1)&(((vt1.c1)<(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE ((NOT (((vt1.c1)&(((vt1.c1)<(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE (((((vt1.c1)&(((vt1.c1)<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, vt1, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED, vt0 WHERE (v0.c0 COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (CAST(x'' AS TEXT)) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CAST(x'' AS TEXT)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST(x'' AS TEXT)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING TOTAL(COUNT(COUNT(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (TOTAL(COUNT(COUNT(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((TOTAL(COUNT(COUNT(vt2.c0)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)>(NULL)) AS NUMERIC)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(((v0.c0)>(NULL)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(((v0.c0)>(NULL)) AS NUMERIC)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((vt0.c0)AND(TYPEOF(DISTINCT v0.c0))))OR(HEX(v0.c0))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(x'f67d'))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((((((vt0.c0)AND(TYPEOF(DISTINCT v0.c0))))OR(HEX(v0.c0))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(x'f67d'))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((((vt0.c0)AND(TYPEOF(DISTINCT v0.c0))))OR(HEX(v0.c0))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(x'f67d'))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt1, vt0 WHERE ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)<=(vt2.c0))))) GROUP BY vt2.c0, v0.c0, vt0.c0 UNION SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt1, vt0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)<=(vt2.c0))))))) GROUP BY vt2.c0, v0.c0, vt0.c0 UNION SELECT vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt1, vt0 WHERE ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)<=(vt2.c0))))) ISNULL)) GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1;
SELECT vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1 HAVING 861946401 UNION ALL SELECT vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1 HAVING (NOT (861946401)) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1 HAVING ((861946401) ISNULL);
SELECT ALL vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1;
SELECT vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1 HAVING 861946401 UNION ALL SELECT vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1 HAVING (NOT (861946401)) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1 HAVING ((861946401) ISNULL);
SELECT ALL vt2.c0, vt0.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c1;
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c0 IN ()) IN ())))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((((vt1.c0 IN ()) IN ())) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ()))&(((((vt0.c0)OR(vt0.c0)))AND('572234001'))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))&(((((vt0.c0)OR(vt0.c0)))AND('572234001'))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ()))&(((((vt0.c0)OR(vt0.c0)))AND('572234001'))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0 INNER JOIN v0 ON ((vt2.c0 COLLATE NOCASE)IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) RIGHT OUTER JOIN vt2 ON CASE CAST(vt2.c0 AS TEXT)  WHEN ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)) THEN (+ (vt2.c0)) WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 THEN 5.83851328E8 WHEN ((vt2.c0) IS FALSE) THEN vt0.c0 COLLATE NOCASE END GROUP BY vt0.c0, v0.c0, vt2.c0;
SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)==(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)=(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0 HAVING GROUP_CONCAT((NOT (vt2.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)==(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((NOT (vt2.c0))))) UNION ALL SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)==(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((NOT (vt2.c0)))) ISNULL);
SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)==(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)=(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0 HAVING GROUP_CONCAT((NOT (vt2.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)==(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((NOT (vt2.c0))))) UNION ALL SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)==(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((NOT (vt2.c0)))) ISNULL);
SELECT vt0.c0 FROM v0, vt1, vt0 RIGHT OUTER JOIN vt2 ON (((0.8207398227425826, v0.c0, vt2.c0)) NOT BETWEEN ((((vt1.c0)>>(NULL)), (v0.c0 IN (0.3585016641000429, vt0.c0)), ((vt2.c0)==(v0.c0)))) AND (((- (NULL)), (((x''))<((vt1.c0))), (~ (vt0.c0))))) GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (TRIM(DISTINCT (((vt0.c0, vt0.c0, vt0.c0, '1623581225', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (TRIM(DISTINCT (((vt0.c0, vt0.c0, vt0.c0, '1623581225', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END)))) UNION ALL SELECT * FROM vt0 WHERE (((TRIM(DISTINCT (((vt0.c0, vt0.c0, vt0.c0, '1623581225', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN v0 ON 0.349238413914737 CROSS JOIN vt1 ON ((~ (vt1.c0)) IN ((vt1.c1 IN ()), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END));
SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN v0 ON 0.349238413914737 CROSS JOIN vt1 ON ((~ (vt1.c0)) IN ((vt1.c1 IN ()), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END)) WHERE ('kG%H?') UNION SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN v0 ON 0.349238413914737 CROSS JOIN vt1 ON ((~ (vt1.c0)) IN ((vt1.c1 IN ()), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END)) WHERE ((NOT ('kG%H?'))) UNION SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN v0 ON 0.349238413914737 CROSS JOIN vt1 ON ((~ (vt1.c0)) IN ((vt1.c1 IN ()), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END)) WHERE ((('kG%H?') ISNULL));
SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN v0 ON 0.349238413914737 CROSS JOIN vt1 ON ((~ (vt1.c0)) IN ((vt1.c1 IN ()), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END));
SELECT ALL vt0.c0, v0.c0, vt1.c0, vt1.c1, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON (((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, vt1.c1))) COLLATE RTRIM LEFT OUTER JOIN v0 ON 0.0406719366732925 GROUP BY vt0.c0, v0.c0, vt1.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING AVG(MIN(COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (AVG(MIN(COUNT(*))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG(MIN(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c0, vt0.c0, 0.011170928196016616))>(('2045266779', vt1.c1, vt1.c0))))))AND(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((((vt0.c0 IN ()))OR((((vt0.c0, vt0.c0, 0.011170928196016616))>(('2045266779', vt1.c1, vt1.c0))))))AND(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((((vt0.c0 IN ()))OR((((vt0.c0, vt0.c0, 0.011170928196016616))>(('2045266779', vt1.c1, vt1.c0))))))AND(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, vt2;
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((((CAST(vt2.c0 AS TEXT)))=(((NOT (vt2.c0)))))) UNION SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((NOT ((((CAST(vt2.c0 AS TEXT)))==(((NOT (vt2.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((((((CAST(vt2.c0 AS TEXT)))=(((NOT (vt2.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, vt2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((NULL)OR(CASE WHEN v0.c0 THEN 0.17063968821505393 END)))AND(MAX(v0.c0, 0.09733083688021393)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((NOT (((((NULL)OR(CASE WHEN v0.c0 THEN 0.17063968821505393 END)))AND(MAX(v0.c0, 0.09733083688021393)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((NULL)OR(CASE WHEN v0.c0 THEN 0.17063968821505393 END)))AND(MAX(v0.c0, 0.09733083688021393)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((COUNT(TOTAL(SUM(vt2.c0))) COLLATE BINARY))>((GROUP_CONCAT(MAX(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((COUNT(TOTAL(SUM(vt2.c0))) COLLATE BINARY))>((GROUP_CONCAT(MAX(vt2.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((COUNT(TOTAL(SUM(vt2.c0))) COLLATE BINARY))>((GROUP_CONCAT(MAX(vt2.c0)))))) ISNULL);
SELECT vt1.c1 FROM v0, vt1;
SELECT vt1.c1 FROM v0, vt1 WHERE (CASE WHEN json_insert(vt1.c1, vt1.c1, vt1.c1) THEN -644913039 END) UNION ALL SELECT ALL vt1.c1 FROM v0, vt1 WHERE ((NOT (CASE WHEN json_insert(vt1.c1, vt1.c1, vt1.c1) THEN -644913039 END))) UNION ALL SELECT ALL vt1.c1 FROM v0, vt1 WHERE (((CASE WHEN json_insert(vt1.c1, vt1.c1, vt1.c1) THEN -644913039 END) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON ((((vt2.c0)OR(((0.1883439061818427)OR(vt2.c0)))))AND((NOT (vt1.c1)))) LEFT OUTER JOIN vt2 ON (((((vt1.c0))<>((x'3804')))) IS FALSE);
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON ((((vt2.c0)OR(((0.1883439061818427)OR(vt2.c0)))))AND((NOT (vt1.c1)))) LEFT OUTER JOIN vt2 ON (((((vt1.c0))<>((x'3804')))) IS FALSE) WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)=(vt1.c0)))) AND (((- (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON ((((vt2.c0)OR(((0.1883439061818427)OR(vt2.c0)))))AND((NOT (vt1.c1)))) LEFT OUTER JOIN vt2 ON (((((vt1.c0))<>((x'3804')))) IS FALSE) WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0)=(vt1.c0)))) AND (((- (v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON ((((vt2.c0)OR(((0.1883439061818427)OR(vt2.c0)))))AND((NOT (vt1.c1)))) LEFT OUTER JOIN vt2 ON (((((vt1.c0))<>((x'3804')))) IS FALSE) WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0)=(vt1.c0)))) AND (((- (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON ((((vt2.c0)OR(((0.1883439061818427)OR(vt2.c0)))))AND((NOT (vt1.c1)))) LEFT OUTER JOIN vt2 ON (((((vt1.c0))<>((x'3804')))) IS FALSE);
SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt1, vt2 WHERE (CASE ((vt2.c0) IS FALSE)  WHEN (((vt1.c1))>=((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c1)))OR(vt2.c0)))AND(vt2.c0)))OR(vt1.c1)) ELSE (NOT (vt2.c0)) END) GROUP BY vt2.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt1, vt2 WHERE ((NOT (CASE ((vt2.c0) IS FALSE)  WHEN (((vt1.c1))>=((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c1)))OR(vt2.c0)))AND(vt2.c0)))OR(vt1.c1)) ELSE (NOT (vt2.c0)) END))) GROUP BY vt2.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt1, vt2 WHERE (((CASE ((vt2.c0) IS FALSE)  WHEN (((vt1.c1))>=((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c1)))OR(vt2.c0)))AND(vt2.c0)))OR(vt1.c1)) ELSE (NOT (vt2.c0)) END) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT v0.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY v0.c0, vt0.c0 HAVING SUM(MAX(vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(MAX(vt0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(MAX(vt0.c0))) ISNULL);
SELECT vt1.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (json_type(vt0.c0)));
SELECT vt1.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (json_type(vt0.c0))) WHERE (881611275) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (json_type(vt0.c0))) WHERE ((NOT (881611275))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (json_type(vt0.c0))) WHERE (((881611275) ISNULL));
SELECT vt1.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (json_type(vt0.c0)));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt2 ON LIKELY(DISTINCT vt2.c0 COLLATE BINARY);
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt2 ON LIKELY(DISTINCT vt2.c0 COLLATE BINARY) WHERE (((CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END)=((~ (vt2.c0))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt2 ON LIKELY(DISTINCT vt2.c0 COLLATE BINARY) WHERE ((NOT (((CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END)=((~ (vt2.c0))))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt2 ON LIKELY(DISTINCT vt2.c0 COLLATE BINARY) WHERE (((((CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END)==((~ (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt2 ON LIKELY(DISTINCT vt2.c0 COLLATE BINARY);
SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE (TYPEOF(vt0.c0)) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE ((NOT (TYPEOF(vt0.c0)))) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE (((TYPEOF(vt0.c0)) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING IFNULL(COUNT(*), COUNT(*)) UNION ALL SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING (NOT (IFNULL(COUNT(*), COUNT(*)))) UNION ALL SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING ((IFNULL(COUNT(*), COUNT(*))) ISNULL);
SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING IFNULL(COUNT(*), COUNT(*)) UNION ALL SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING (NOT (IFNULL(COUNT(*), COUNT(*)))) UNION ALL SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING ((IFNULL(COUNT(*), COUNT(*))) ISNULL);
SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ()) LEFT OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt2 ON ((((vt2.c0) ISNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 END) AND (HEX(vt1.c1)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ()) LEFT OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt2 ON ((((vt2.c0) ISNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 END) AND (HEX(vt1.c1))) WHERE (TRIM(DISTINCT v0.c0 COLLATE RTRIM, (((vt1.c1)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ()) LEFT OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt2 ON ((((vt2.c0) ISNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 END) AND (HEX(vt1.c1))) WHERE ((NOT (TRIM(DISTINCT v0.c0 COLLATE RTRIM, (((vt1.c1)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ()) LEFT OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt2 ON ((((vt2.c0) ISNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 END) AND (HEX(vt1.c1))) WHERE (((TRIM(DISTINCT v0.c0 COLLATE RTRIM, (((vt1.c1)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))))) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ()) LEFT OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt2 ON ((((vt2.c0) ISNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 END) AND (HEX(vt1.c1)));
SELECT DISTINCT * FROM vt2, v0;
SELECT DISTINCT * FROM vt2, v0 WHERE (((((v0.c0 IN ())))>((v0.c0)))) UNION SELECT DISTINCT * FROM vt2, v0 WHERE ((NOT (((((v0.c0 IN ())))>((v0.c0)))))) UNION SELECT DISTINCT * FROM vt2, v0 WHERE (((((((v0.c0 IN ())))>((v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt2, v0;
SELECT ALL vt2.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM v0, vt0, vt2 WHERE (((((vt0.c0)<(vt0.c0)))|('IJ->[1'))) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM v0, vt0, vt2 WHERE ((NOT (((((vt0.c0)<(vt0.c0)))|('IJ->[1'))))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM v0, vt0, vt2 WHERE (((((((vt0.c0)<(vt0.c0)))|('IJ->[1'))) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT ALL v0.c0, vt2.c0, vt0.c0, vt1.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((((((((vt0.c0, vt1.c0, NULL, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0, vt1.c0, vt1.c1)) AND ((vt1.c1, 1940108829, vt0.c0, vt2.c0, v0.c0))))AND(vt0.c0)))AND((- (vt2.c0)))))AND((v0.c0 IN (vt1.c0, v0.c0)))))OR((+ (vt2.c0)))) RIGHT OUTER JOIN v0 ON ((((vt2.c0) IS TRUE)) NOT NULL) LEFT OUTER JOIN vt2 ON ((((((v0.c0)AND(v0.c0)))AND('3Fvfa,&&N')))GLOB(x'')) GROUP BY v0.c0, vt2.c0, vt0.c0, vt1.c0, vt1.c1;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (0xffffffffcf35ab08) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (0Xffffffffcf35ab08))) UNION ALL SELECT * FROM vt0, v0 WHERE (((0Xffffffffcf35ab08) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON vt1.c1;
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON vt1.c1 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))|(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN x'8a0c' THEN vt1.c1 END))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON vt1.c1 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))|(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN x'8a0c' THEN vt1.c1 END))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON vt1.c1 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))|(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN x'8a0c' THEN vt1.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON vt1.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (CAST(vt2.c0 AS NUMERIC) COLLATE BINARY) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CAST(vt2.c0 AS NUMERIC) COLLATE BINARY))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS NUMERIC) COLLATE BINARY) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c1, v0.c0, vt2.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 ELSE vt1.c1 END)) FULL OUTER JOIN vt2 ON CAST(CASE WHEN '> ' THEN vt1.c0 END AS TEXT) GROUP BY vt1.c1, v0.c0, vt2.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt1.c1 IN ()))<(CASE WHEN vt1.c1 THEN vt1.c0 END)) INNER JOIN vt1 ON TYPEOF(((vt2.c0) NOTNULL));
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt1.c1 IN ()))<(CASE WHEN vt1.c1 THEN vt1.c0 END)) INNER JOIN vt1 ON TYPEOF(((vt2.c0) NOTNULL)) WHERE (CASE WHEN rtreenode(vt0.c0, vt2.c0) THEN ((vt1.c0)<(x'')) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt2.c0))) END) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt1.c1 IN ()))<(CASE WHEN vt1.c1 THEN vt1.c0 END)) INNER JOIN vt1 ON TYPEOF(((vt2.c0) NOTNULL)) WHERE ((NOT (CASE WHEN rtreenode(vt0.c0, vt2.c0) THEN ((vt1.c0)<(x'')) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt2.c0))) END))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt1.c1 IN ()))<(CASE WHEN vt1.c1 THEN vt1.c0 END)) INNER JOIN vt1 ON TYPEOF(((vt2.c0) NOTNULL)) WHERE (((CASE WHEN rtreenode(vt0.c0, vt2.c0) THEN ((vt1.c0)<(x'')) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt2.c0))) END) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt1.c1 IN ()))<(CASE WHEN vt1.c1 THEN vt1.c0 END)) INNER JOIN vt1 ON TYPEOF(((vt2.c0) NOTNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((((vt2.c0)|(vt2.c0)))>=(((NULL)>>(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0)|(vt2.c0)))>=(((NULL)>>(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((((((vt2.c0)|(vt2.c0)))>=(((NULL)>>(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt1.c0, vt1.c1, vt2.c0, vt0.c0;
SELECT vt1.c0, vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt1.c0, vt1.c1, vt2.c0, vt0.c0 HAVING SUM(COUNT(v0.c0) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt1.c0, vt1.c1, vt2.c0, vt0.c0 HAVING (NOT (SUM(COUNT(v0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt1.c0, vt1.c1, vt2.c0, vt0.c0 HAVING ((SUM(COUNT(v0.c0) COLLATE NOCASE)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((v0.c0))))<>(((vt0.c0)GLOB(x''))));
SELECT ALL vt0.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((v0.c0))))<>(((vt0.c0)GLOB(x'')))) WHERE (UPPER(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)) UNION ALL SELECT vt0.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((v0.c0))))<>(((vt0.c0)GLOB(x'')))) WHERE ((NOT (UPPER(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((v0.c0))))!=(((vt0.c0)GLOB(x'')))) WHERE (((UPPER(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)) ISNULL));
SELECT vt0.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((v0.c0))))<>(((vt0.c0)GLOB(x''))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((-1952226606) NOT BETWEEN ((('1224863068') NOT BETWEEN (vt2.c0) AND (NULL))) AND ((vt2.c0 IN ())))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((-1952226606) NOT BETWEEN ((('1224863068') NOT BETWEEN (vt2.c0) AND (NULL))) AND ((vt2.c0 IN ())))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((((-1952226606) NOT BETWEEN ((('1224863068') NOT BETWEEN (vt2.c0) AND (NULL))) AND ((vt2.c0 IN ())))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING LIKELY(vt1.c1 COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (LIKELY(vt1.c1 COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((LIKELY(vt1.c1 COLLATE BINARY)) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING LIKELY(vt1.c1 COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (LIKELY(vt1.c1 COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((LIKELY(vt1.c1 COLLATE BINARY)) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt2, vt0;
SELECT * FROM vt2, vt0 WHERE (TRIM(vt2.c0 COLLATE BINARY, ((((vt2.c0)OR(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT ALL * FROM vt2, vt0 WHERE ((NOT (TRIM(vt2.c0 COLLATE BINARY, ((((vt2.c0)OR(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt2, vt0 WHERE (((TRIM(vt2.c0 COLLATE BINARY, ((((vt2.c0)OR(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT ALL * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((((((vt1.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c1))<=((vt1.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)))) BETWEEN (SQLITE_VERSION()) AND (vt2.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT ((((((vt1.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c1))<=((vt1.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)))) BETWEEN (SQLITE_VERSION()) AND (vt2.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((((((((vt1.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c1))<=((vt1.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)))) BETWEEN (SQLITE_VERSION()) AND (vt2.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (0.8062872624088823) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (0.8062872624088823))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((0.8062872624088823) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0;
SELECT vt1.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING SUM(SUM(vt0.c0)) UNION ALL SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (NOT (SUM(SUM(vt0.c0)))) UNION ALL SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING ((SUM(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0, vt2, v0;
SELECT * FROM vt0, vt2, v0 WHERE (json_extract(CAST(vt2.c0 AS BLOB), ((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0)), (NOT (v0.c0)), vt2.c0 COLLATE BINARY)) UNION ALL SELECT * FROM vt0, vt2, v0 WHERE ((NOT (json_extract(CAST(vt2.c0 AS BLOB), ((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0)), (NOT (v0.c0)), vt2.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt0, vt2, v0 WHERE (((json_extract(CAST(vt2.c0 AS BLOB), ((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0)), (NOT (v0.c0)), vt2.c0 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM vt0, vt2, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((+ (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE (((vt1.c1 IN ()) IN ())) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE ((NOT (((vt1.c1 IN ()) IN ())))) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE (((((vt1.c1 IN ()) IN ())) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(MAX(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MAX(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MAX(v0.c0))) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (CAST((~ (vt1.c1)) AS INTEGER)) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (CAST((~ (vt1.c1)) AS INTEGER)))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((CAST((~ (vt1.c1)) AS INTEGER)) ISNULL));
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (CAST((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, 0.5330410955105138, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, 0.5330410955105138, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, 0.5330410955105138, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0, 0.28004703059573255, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, LOWER(DISTINCT v0.c0), LIKELIHOOD(v0.c0, 0.32252119965121595), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((~ (v0.c0)), CAST(v0.c0 AS INTEGER), (v0.c0 IN ()), ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL)), ((v0.c0) NOTNULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, 0.28004703059573255, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, LOWER(DISTINCT v0.c0), LIKELIHOOD(v0.c0, 0.32252119965121595), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((~ (v0.c0)), CAST(v0.c0 AS INTEGER), (v0.c0 IN ()), ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL)), ((v0.c0) NOTNULL))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, 0.28004703059573255, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, LOWER(DISTINCT v0.c0), LIKELIHOOD(v0.c0, 0.32252119965121595), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((~ (v0.c0)), CAST(v0.c0 AS INTEGER), (v0.c0 IN ()), ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL)), ((v0.c0) NOTNULL))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM vt0, v0, vt2;
SELECT ALL * FROM vt0, v0, vt2 WHERE (((((((((vt0.c0)OR((((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS NUMERIC))))AND(vt2.c0 COLLATE BINARY)))AND((vt2.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0, v0, vt2 WHERE ((NOT (((((((((vt0.c0)OR((((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS NUMERIC))))AND(vt2.c0 COLLATE BINARY)))AND((vt2.c0 IN ())))))) UNION ALL SELECT * FROM vt0, v0, vt2 WHERE (((((((((((vt0.c0)OR((((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS NUMERIC))))AND(vt2.c0 COLLATE BINARY)))AND((vt2.c0 IN ())))) ISNULL));
SELECT * FROM vt0, v0, vt2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (highlight((vt0.c0 IN ()), (vt0.c0 IN (vt0.c0, vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ()))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (highlight((vt0.c0 IN ()), (vt0.c0 IN (vt0.c0, vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((highlight((vt0.c0 IN ()), (vt0.c0 IN (vt0.c0, vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, vt2.c0 FROM v0 FULL OUTER JOIN vt2 ON ((((vt1.c0)<(vt1.c0))) IS TRUE) FULL OUTER JOIN vt1 ON CASE vt2.c0  WHEN '' COLLATE BINARY THEN ((NULL) NOT NULL) END GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0 HAVING CASE COUNT(*)  WHEN TOTAL(vt0.c0) THEN COUNT(*) WHEN MIN(vt1.c1) THEN ((v0.c0) IS FALSE) WHEN TOTAL(MAX(vt1.c0)) THEN COUNT(vt0.c0) ELSE COUNT(*) END UNION ALL SELECT vt1.c1, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0 HAVING (NOT (CASE COUNT(*)  WHEN TOTAL(vt0.c0) THEN COUNT(*) WHEN MIN(vt1.c1) THEN ((v0.c0) IS FALSE) WHEN TOTAL(MAX(vt1.c0)) THEN COUNT(vt0.c0) ELSE COUNT(*) END)) UNION ALL SELECT vt1.c1, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0 HAVING ((CASE COUNT(*)  WHEN TOTAL(vt0.c0) THEN COUNT(*) WHEN MIN(vt1.c1) THEN ((v0.c0) IS FALSE) WHEN TOTAL(MAX(vt1.c0)) THEN COUNT(vt0.c0) ELSE COUNT(*) END) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((NOT (vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((((NOT (vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt0;
SELECT DISTINCT vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt0 WHERE (((((vt2.c0)IS(v0.c0)))<=(((vt2.c0)IS NOT(vt2.c0))))) UNION SELECT DISTINCT vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt0 WHERE ((NOT (((((vt2.c0)IS(v0.c0)))<=(((vt2.c0)IS NOT(vt2.c0))))))) UNION SELECT DISTINCT vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt0 WHERE (((((((vt2.c0)IS(v0.c0)))<=(((vt2.c0)IS NOT(vt2.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))OR(x''))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER))OR(x''))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(x''))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING MAX(CAST(GROUP_CONCAT(AVG(v0.c0)) AS NUMERIC)) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING (NOT (MAX(CAST(GROUP_CONCAT(AVG(v0.c0)) AS NUMERIC)))) UNION ALL SELECT v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((MAX(CAST(GROUP_CONCAT(AVG(v0.c0)) AS NUMERIC))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0)<<(v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)<<(v0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0)<<(v0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt1.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ('.寇U') UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((NOT ('.寇U'))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((('.寇U') ISNULL));
SELECT DISTINCT vt1.c1 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((0xffffffffb7b4de63, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS TEXT), ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE RTRIM)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((0Xffffffffb7b4de63, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS TEXT), ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE RTRIM)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((0xffffffffb7b4de63, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS TEXT), ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING COUNT(NULL) UNION ALL SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING ((COUNT(NULL)) ISNULL);
SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING COUNT(NULL) UNION ALL SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING ((COUNT(NULL)) ISNULL);
SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT MIN(x'e7dedcb28d47') FROM vt1 ORDER BY 0.6399519608318982, (NOT ('156934035'))  NULLS LAST, (((vt1.c0)-(vt1.c1)) IN ((((0Xffffffff936d1dbc, vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))), (+ (vt1.c0)))) DESC;
SELECT ALL * FROM vt1, vt2, vt0, v0;
SELECT ALL * FROM vt1, vt2, vt0, v0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN '-2063167250' ELSE v0.c0 END) ISNULL)) UNION ALL SELECT ALL * FROM vt1, vt2, vt0, v0 WHERE ((NOT (((CASE vt0.c0  WHEN vt1.c0 THEN '-2063167250' ELSE v0.c0 END) ISNULL)))) UNION ALL SELECT * FROM vt1, vt2, vt0, v0 WHERE (((((CASE vt0.c0  WHEN vt1.c0 THEN '-2063167250' ELSE v0.c0 END) ISNULL)) ISNULL));
SELECT ALL * FROM vt1, vt2, vt0, v0;
SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt2 CROSS JOIN vt1 ON UPPER(((((vt1.c1)OR(vt0.c0)))AND(v0.c0)));
SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt2 CROSS JOIN vt1 ON UPPER(((((vt1.c1)OR(vt0.c0)))AND(v0.c0))) WHERE ((((((+ (vt1.c0)))OR(HEX(vt1.c0))))OR(LENGTH(v0.c0)))) UNION SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt2 CROSS JOIN vt1 ON UPPER(((((vt1.c1)OR(vt0.c0)))AND(v0.c0))) WHERE ((NOT ((((((+ (vt1.c0)))OR(HEX(vt1.c0))))OR(LENGTH(v0.c0)))))) UNION SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt2 CROSS JOIN vt1 ON UPPER(((((vt1.c1)OR(vt0.c0)))AND(v0.c0))) WHERE ((((((((+ (vt1.c0)))OR(HEX(vt1.c0))))OR(LENGTH(v0.c0)))) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt2 CROSS JOIN vt1 ON UPPER(((((vt1.c1)OR(vt0.c0)))AND(v0.c0)));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS INTEGER))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS INTEGER))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS INTEGER))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, vt2.c0 HAVING (((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), COUNT(*), COUNT(vt2.c0)))>=((MIN(vt0.c0), (('-909446005') NOT NULL), ((MAX(vt2.c0))/(COUNT(COUNT(*))))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, vt2.c0 HAVING (NOT ((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), COUNT(*), COUNT(vt2.c0)))>=((MIN(vt0.c0), (('-909446005') NOT NULL), ((MAX(vt2.c0))/(COUNT(COUNT(*))))))))) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, vt2.c0 HAVING (((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), COUNT(*), COUNT(vt2.c0)))>=((MIN(vt0.c0), (('-909446005') NOT NULL), ((MAX(vt2.c0))/(COUNT(COUNT(*)))))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN v0.c0 THEN (v0.c0 IN (v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE v0.c0 COLLATE BINARY  WHEN v0.c0 THEN (v0.c0 IN (v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0 COLLATE BINARY  WHEN v0.c0 THEN (v0.c0 IN (v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt2, v0, vt1 INNER JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM vt2, v0 NOT INDEXED, vt1 INNER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN ((vt1.c1)GLOB(vt0.c0)) THEN ((((vt1.c1)OR(v0.c0)))OR(vt0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN vt1.c0 COLLATE NOCASE WHEN ((((((((vt2.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c1)) THEN vt1.c0 END) UNION SELECT DISTINCT * FROM vt2 NOT INDEXED, v0, vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((NOT (CASE WHEN ((vt1.c1)GLOB(vt0.c0)) THEN ((((vt1.c1)OR(v0.c0)))OR(vt0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN vt1.c0 COLLATE NOCASE WHEN ((((((((vt2.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c1)) THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt2, v0, vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((CASE WHEN ((vt1.c1)GLOB(vt0.c0)) THEN ((((vt1.c1)OR(v0.c0)))OR(vt0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN vt1.c0 COLLATE NOCASE WHEN ((((((((vt2.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c1)) THEN vt1.c0 END) ISNULL));
SELECT DISTINCT * FROM vt2, v0, vt1 INNER JOIN vt0 ON vt0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((+ (((vt2.c0) NOT NULL)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((+ (((vt2.c0) NOT NULL)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((+ (((vt2.c0) NOT NULL)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE AVG(vt0.c0) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE AVG(vt0.c0) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE AVG(vt0.c0) END)) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1, v0;
SELECT DISTINCT * FROM vt2, vt0, vt1, v0 WHERE (((vt2.c0)AND(vt2.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt2, vt0, vt1, v0 WHERE ((NOT (((vt2.c0)AND(vt2.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1, v0 WHERE (((((vt2.c0)AND(vt2.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, vt1, v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((vt0.c0))>=((NULL))) IN (vt0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0))>=((NULL))) IN (vt0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((vt0.c0))>=((NULL))) IN (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt1.c1, vt0.c0, vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (NOT (x'b3df')) INNER JOIN vt0 ON v0.c0 INNER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN (((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))) AND (('1302979961'))) GROUP BY vt1.c1, vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (NOT (x'b3df')) INNER JOIN vt0 ON v0.c0 INNER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN (((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))) AND (('1302979961'))) GROUP BY vt1.c1, vt0.c0, vt2.c0, v0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT vt1.c1, vt0.c0, vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (NOT (x'b3df')) INNER JOIN vt0 ON v0.c0 INNER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN (((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))) AND (('1302979961'))) GROUP BY vt1.c1, vt0.c0, vt2.c0, v0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT vt1.c1, vt0.c0, vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (NOT (x'b3df')) INNER JOIN vt0 ON v0.c0 INNER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN (((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))) AND (('1302979961'))) GROUP BY vt1.c1, vt0.c0, vt2.c0, v0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt2, v0, vt1, vt0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt2, v0, vt1, vt0 WHERE ((((vt1.c1 IN ())) NOT NULL)) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt2, v0, vt1, vt0 WHERE ((NOT ((((vt1.c1 IN ())) NOT NULL)))) UNION ALL SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt2, v0, vt1, vt0 WHERE ((((((vt1.c1 IN ())) NOT NULL)) ISNULL));
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt2, v0, vt1, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, '583851328')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN ((((v0.c0))<>((v0.c0)))) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, '583851328')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN ((((v0.c0))!=((v0.c0)))) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0, v0.c0, '583851328')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN ((((v0.c0))<>((v0.c0)))) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt1.c1 FROM v0 RIGHT OUTER JOIN vt1 ON CASE CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 END  WHEN CASE vt1.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN (v0.c0 IN (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0)) END GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM v0 RIGHT OUTER JOIN vt1 ON CASE CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 END  WHEN CASE vt1.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN (v0.c0 IN (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0)) END GROUP BY vt1.c0, vt1.c1 HAVING SUM(COUNT(GROUP_CONCAT(SUM(NULL)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM v0 RIGHT OUTER JOIN vt1 ON CASE CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 END  WHEN CASE vt1.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN (v0.c0 IN (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0)) END GROUP BY vt1.c0, vt1.c1 HAVING (NOT (SUM(COUNT(GROUP_CONCAT(SUM(NULL)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM v0 RIGHT OUTER JOIN vt1 ON CASE CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 END  WHEN CASE vt1.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN (v0.c0 IN (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0)) END GROUP BY vt1.c0, vt1.c1 HAVING ((SUM(COUNT(GROUP_CONCAT(SUM(NULL))))) ISNULL);
SELECT ALL * FROM vt1, v0, vt0, vt2;
SELECT ALL * FROM vt1, v0, vt0, vt2 WHERE ((('1867140394') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, v0, vt0, vt2 WHERE ((NOT ((('1867140394') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, v0, vt0, vt2 WHERE ((((('1867140394') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, v0, vt0, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) FULL OUTER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((((vt1.c0)/(vt1.c1)))) AND ((((vt1.c1)+(x''))))) LEFT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt2.c0))) AND (CAST(vt0.c0 AS NUMERIC))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) FULL OUTER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((((vt1.c0)/(vt1.c1)))) AND ((((vt1.c1)+(x''))))) LEFT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt2.c0))) AND (CAST(vt0.c0 AS NUMERIC))) WHERE (((vt1.c0)<<(v0.c0)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) FULL OUTER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((((vt1.c0)/(vt1.c1)))) AND ((((vt1.c1)+(x''))))) LEFT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt2.c0))) AND (CAST(vt0.c0 AS NUMERIC))) WHERE ((NOT (((vt1.c0)<<(v0.c0)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) FULL OUTER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((((vt1.c0)/(vt1.c1)))) AND ((((vt1.c1)+(x''))))) LEFT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt2.c0))) AND (CAST(vt0.c0 AS NUMERIC))) WHERE (((((vt1.c0)<<(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) FULL OUTER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((((vt1.c0)/(vt1.c1)))) AND ((((vt1.c1)+(x''))))) LEFT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt2.c0))) AND (CAST(vt0.c0 AS NUMERIC))) GROUP BY v0.c0;
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c1))) NOT NULL) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c1))) NOT NULL))) UNION ALL SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c1))) NOT NULL)) ISNULL);
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c1))) NOT NULL) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c1))) NOT NULL))) UNION ALL SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c1))) NOT NULL)) ISNULL);
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0 INNER JOIN v0 ON x'c93d';
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0 INNER JOIN v0 ON x'c93d' WHERE ((~ (UPPER(vt1.c0)))) UNION ALL SELECT vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0 INNER JOIN v0 ON x'c93d' WHERE ((NOT ((~ (UPPER(vt1.c0)))))) UNION ALL SELECT vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0 INNER JOIN v0 ON x'c93d' WHERE ((((~ (UPPER(vt1.c0)))) ISNULL));
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0 INNER JOIN v0 ON x'c93d';
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE (((((CAST(vt1.c1 AS REAL))OR(805744179)))OR((v0.c0 IN ())))) UNION SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE ((NOT (((((CAST(vt1.c1 AS REAL))OR(805744179)))OR((v0.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE (((((((CAST(vt1.c1 AS REAL))OR(805744179)))OR((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM v0, vt1;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1, vt2.c0 FROM vt2 LEFT OUTER JOIN v0 ON CASE ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c0))  WHEN (NOT ('1555244818')) THEN load_extension(vt1.c1, v0.c0) END LEFT OUTER JOIN vt1 ON ((vt0.c0)|(v0.c0)) COLLATE NOCASE CROSS JOIN vt0 ON (((+ (NULL)))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt2.c0;
SELECT vt2.c0 FROM vt0 LEFT OUTER JOIN vt2 ON (((vt0.c0 IN (vt0.c0, v0.c0)))-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt2.c0 THEN v0.c0 END)) CROSS JOIN v0 ON (+ (NULL)) GROUP BY vt2.c0;
SELECT vt0.c0 FROM vt0, vt2;
SELECT vt0.c0 FROM vt0, vt2 WHERE (((((vt0.c0)>=(vt0.c0))) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0, vt2 WHERE ((NOT (((((vt0.c0)>=(vt0.c0))) NOTNULL)))) UNION ALL SELECT vt0.c0 FROM vt0, vt2 WHERE (((((((vt0.c0)>=(vt0.c0))) NOTNULL)) ISNULL));
SELECT vt0.c0 FROM vt0, vt2;
SELECT DISTINCT v0.c0, vt2.c0 FROM v0, vt2;
SELECT DISTINCT v0.c0, vt2.c0 FROM v0, vt2 WHERE ((vt2.c0 IN (v0.c0, vt2.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM v0, vt2 WHERE ((NOT ((vt2.c0 IN (v0.c0, vt2.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM v0, vt2 WHERE ((((vt2.c0 IN (v0.c0, vt2.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0, vt2.c0 FROM v0, vt2;
SELECT vt2.c0 FROM vt0, vt2 INNER JOIN v0 ON (- (((((vt0.c0)AND(vt2.c0)))OR(v0.c0)))) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 INNER JOIN v0 ON (- (((((vt0.c0)AND(vt2.c0)))OR(v0.c0)))) WHERE (CASE ((vt2.c0)%(vt2.c0))  WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN ((vt2.c0)+(vt0.c0)) END) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt0, vt2 INNER JOIN v0 ON (- (((((vt0.c0)AND(vt2.c0)))OR(v0.c0)))) WHERE ((NOT (CASE ((vt2.c0)%(vt2.c0))  WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN ((vt2.c0)+(vt0.c0)) END))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt0, vt2 INNER JOIN v0 ON (- (((((vt0.c0)AND(vt2.c0)))OR(v0.c0)))) WHERE (((CASE ((vt2.c0)%(vt2.c0))  WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN ((vt2.c0)+(vt0.c0)) END) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 INNER JOIN v0 ON (- (((((vt0.c0)AND(vt2.c0)))OR(v0.c0)))) GROUP BY vt2.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING CAST((((-4.82750196E8))>=((vt1.c0))) AS REAL) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING (NOT (CAST((((-4.82750196E8))>=((vt1.c0))) AS REAL))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING ((CAST((((-4.82750196E8))>=((vt1.c0))) AS REAL)) ISNULL);
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING CAST((((-4.82750196E8))>=((vt1.c0))) AS REAL) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING (NOT (CAST((((-4.82750196E8))>=((vt1.c0))) AS REAL))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING ((CAST((((-4.82750196E8))>=((vt1.c0))) AS REAL)) ISNULL);
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0 NOT INDEXED;
SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0 WHERE ((~ ((vt2.c0 IN ())))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0 WHERE ((NOT ((~ ((vt2.c0 IN ())))))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0 WHERE ((((~ ((vt2.c0 IN ())))) ISNULL));
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0 NOT INDEXED;
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((((((rtreenode(vt1.c0, vt1.c0))OR((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((0X38d26f85))))))OR(((v0.c0) BETWEEN (0.028836641231904436) AND (0.7695361056483653)))))OR((vt1.c0 IN ()))))AND((v0.c0 IN (vt1.c0, vt1.c1))))) UNION SELECT DISTINCT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (((((((((rtreenode(vt1.c0, vt1.c0))OR((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((0x38d26f85))))))OR(((v0.c0) BETWEEN (0.028836641231904436) AND (0.7695361056483653)))))OR((vt1.c0 IN ()))))AND((v0.c0 IN (vt1.c0, vt1.c1))))))) UNION SELECT DISTINCT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((((((((rtreenode(vt1.c0, vt1.c0))OR((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((0X38d26f85))))))OR(((v0.c0) BETWEEN (0.028836641231904436) AND (0.7695361056483653)))))OR((vt1.c0 IN ()))))AND((v0.c0 IN (vt1.c0, vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE (CASE ((vt1.c1)>=(vt1.c0))  WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 ELSE (v0.c0 IN (vt1.c1)) END) GROUP BY vt1.c1, vt1.c0, v0.c0 UNION SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (CASE ((vt1.c1)>=(vt1.c0))  WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 ELSE (v0.c0 IN (vt1.c1)) END))) GROUP BY vt1.c1, vt1.c0, v0.c0 UNION SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE (((CASE ((vt1.c1)>=(vt1.c0))  WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 ELSE (v0.c0 IN (vt1.c1)) END) ISNULL)) GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 NOT INDEXED GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 NOT INDEXED GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT vt0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, vt0.c0 FROM vt0, vt2;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 WHERE (((((vt2.c0)OR(0.7981912305609286)))AND(((0Xffffffffecb73870) NOTNULL)))) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((NOT (((((vt2.c0)OR(0.7981912305609286)))AND(((0xffffffffecb73870) NOTNULL)))))) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 WHERE (((((((vt2.c0)OR(0.7981912305609286)))AND(((0Xffffffffecb73870) NOTNULL)))) ISNULL));
SELECT vt2.c0, vt0.c0 FROM vt0, vt2;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))*(UPPER(DISTINCT v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))*(UPPER(DISTINCT v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))*(UPPER(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE (0.5952496218055148) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE ((NOT (0.5952496218055148))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE (((0.5952496218055148) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)IS(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)IS(vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)IS(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)IS(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)IS(vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)IS(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL((NOT ((((('')AND(vt0.c0)))OR(vt2.c0))))) FROM vt0, vt2, v0;
SELECT * FROM vt2, vt1, v0 FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM)>>((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0)))));
SELECT * FROM vt2, vt1, v0 FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM)>>((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0))))) WHERE ((((NOT (v0.c0)))>=(NULL))) UNION ALL SELECT ALL * FROM vt2, vt1, v0 FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM)>>((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0))))) WHERE ((NOT ((((NOT (v0.c0)))>=(NULL))))) UNION ALL SELECT ALL * FROM vt2, vt1, v0 FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM)>>((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0))))) WHERE ((((((NOT (v0.c0)))>=(NULL))) ISNULL));
SELECT * FROM vt2, vt1, v0 FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM)>>((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0)))));
SELECT DISTINCT * FROM vt0, vt1, vt2;
SELECT DISTINCT * FROM vt0, vt1, vt2 WHERE (CASE WHEN CAST(vt1.c1 AS BLOB) THEN vt1.c1 ELSE ((('{}', '-1115194206', x'')) BETWEEN ((vt1.c1, vt1.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, vt1.c1))) END) UNION SELECT DISTINCT * FROM vt0, vt1, vt2 WHERE ((NOT (CASE WHEN CAST(vt1.c1 AS BLOB) THEN vt1.c1 ELSE ((('{}', '-1115194206', x'')) BETWEEN ((vt1.c1, vt1.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, vt1.c1))) END))) UNION SELECT DISTINCT * FROM vt0, vt1, vt2 WHERE (((CASE WHEN CAST(vt1.c1 AS BLOB) THEN vt1.c1 ELSE ((('{}', '-1115194206', x'')) BETWEEN ((vt1.c1, vt1.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, vt1.c1))) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, vt2;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 WHERE (((((((vt1.c0) IS FALSE))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt1.c0)<<(vt1.c1))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, v0 WHERE ((NOT (((((((vt1.c0) IS FALSE))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt1.c0)<<(vt1.c1))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0 WHERE (((((((((vt1.c0) IS FALSE))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt1.c0)<<(vt1.c1))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((+ (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((+ (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((+ (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((+ (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((+ (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((+ (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt1, vt2, v0 FULL OUTER JOIN vt0 ON (((vt0.c0)/(vt1.c0)) IN ());
SELECT * FROM vt1, vt2, v0 FULL OUTER JOIN vt0 ON (((vt0.c0)/(vt1.c0)) IN ()) WHERE ((v0.c0 IN ()) COLLATE BINARY) UNION ALL SELECT * FROM vt1, vt2 NOT INDEXED, v0 FULL OUTER JOIN vt0 ON (((vt0.c0)/(vt1.c0)) IN ()) WHERE ((NOT ((v0.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, vt2, v0 FULL OUTER JOIN vt0 ON (((vt0.c0)/(vt1.c0)) IN ()) WHERE ((((v0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT * FROM vt1, vt2, v0 FULL OUTER JOIN vt0 ON (((vt0.c0)/(vt1.c0)) IN ());
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'00d7') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x'00d7'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'00d7') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (CASE WHEN (((vt1.c1))<((vt1.c0))) THEN ((v0.c0)IS NOT(v0.c0)) END) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (CASE WHEN (((vt1.c1))<((vt1.c0))) THEN ((v0.c0)IS NOT(v0.c0)) END))) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((CASE WHEN (((vt1.c1))<((vt1.c0))) THEN ((v0.c0)IS NOT(v0.c0)) END) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (SUM(GROUP_CONCAT(vt1.c0)) IN ()) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((SUM(GROUP_CONCAT(vt1.c0)) IN ()))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((SUM(GROUP_CONCAT(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (SUM(GROUP_CONCAT(vt1.c0)) IN ()) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((SUM(GROUP_CONCAT(vt1.c0)) IN ()))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((SUM(GROUP_CONCAT(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS INTEGER)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS INTEGER)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt2 ON ((NULL)IS((+ (v0.c0))));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt2 ON ((NULL)IS((+ (v0.c0)))) WHERE ((NOT (CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt2 ON ((NULL)IS((+ (v0.c0)))) WHERE ((NOT ((NOT (CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt2 ON ((NULL)IS((+ (v0.c0)))) WHERE ((((NOT (CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt2 ON ((NULL)IS((+ (v0.c0))));
SELECT ALL vt0.c0, vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0, vt2.c0, vt1.c1;
SELECT vt0.c0, vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt0, vt2 WHERE (vt2.c0) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt0 NOT INDEXED, vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt0, vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0, vt2.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MAX(GROUP_CONCAT(COUNT(*))))||(((vt1.c1) NOT BETWEEN (AVG(SUM(vt1.c1))) AND (GROUP_CONCAT(SUM(MIN(COUNT(*)))))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((MAX(GROUP_CONCAT(COUNT(*))))||(((vt1.c1) NOT BETWEEN (AVG(SUM(vt1.c1))) AND (GROUP_CONCAT(SUM(MIN(COUNT(*)))))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((MAX(GROUP_CONCAT(COUNT(*))))||(((vt1.c1) NOT BETWEEN (AVG(SUM(vt1.c1))) AND (GROUP_CONCAT(SUM(MIN(COUNT(*))))))))) ISNULL);
SELECT ALL vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (CAST('pj' AS INTEGER)) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (CAST('pj' AS INTEGER)))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((CAST('pj' AS INTEGER)) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE ((NOT (vt2.c0)) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((NOT (vt2.c0)) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((NOT (vt2.c0)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt1, vt2 GROUP BY v0.c0, vt1.c0, vt2.c0, vt1.c1;
SELECT v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt1, vt2 WHERE (((((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0))) ISNULL)) GROUP BY v0.c0, vt1.c0, vt2.c0, vt1.c1 UNION SELECT v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt1, vt2 WHERE ((NOT (((((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0))) ISNULL)))) GROUP BY v0.c0, vt1.c0, vt2.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt1, vt2 WHERE (((((((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0, vt1.c0, vt2.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c0, vt2.c0, vt1.c1 FROM v0, vt1, vt2 GROUP BY v0.c0, vt1.c0, vt2.c0, vt1.c1;
SELECT v0.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY v0.c0, vt0.c0 HAVING (((']i', (((MAX(MIN(COUNT(*)))))=((MIN(AVG(vt0.c0))))), MIN(TOTAL(AVG(v0.c0)))))<((TRIM(vt2.c0), '-1821565508', ((GROUP_CONCAT(COUNT(*))) NOT BETWEEN (vt0.c0) AND (AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((']i', (((MAX(MIN(COUNT(*)))))=((MIN(AVG(vt0.c0))))), MIN(TOTAL(AVG(v0.c0)))))<((TRIM(vt2.c0), '-1821565508', ((GROUP_CONCAT(COUNT(*))) NOT BETWEEN (vt0.c0) AND (AVG(v0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt2 GROUP BY v0.c0, vt0.c0 HAVING (((((']i', (((MAX(MIN(COUNT(*)))))=((MIN(AVG(vt0.c0))))), MIN(TOTAL(AVG(v0.c0)))))<((TRIM(vt2.c0), '-1821565508', ((GROUP_CONCAT(COUNT(*))) NOT BETWEEN (vt0.c0) AND (AVG(v0.c0))))))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt0, vt2, vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt2, vt1 WHERE (0.8847722754464808 COLLATE RTRIM) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt2, vt1 WHERE ((NOT (0.8847722754464808 COLLATE RTRIM))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt2, vt1 WHERE (((0.8847722754464808 COLLATE RTRIM) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt0, vt2, vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))+(vt2.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2 NOT INDEXED WHERE ((NOT (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))+(vt2.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))+(vt2.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT v0.c0 FROM vt0, v0, vt2 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, vt2 WHERE (CASE (- (v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN ((NULL) BETWEEN (v0.c0) AND (x'')) ELSE ((0.08687305978631565)+(vt2.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, vt2 WHERE ((NOT (CASE (- (v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN ((NULL) BETWEEN (v0.c0) AND (x'')) ELSE ((0.08687305978631565)+(vt2.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0, vt2 WHERE (((CASE (- (v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN ((NULL) BETWEEN (v0.c0) AND (x'')) ELSE ((0.08687305978631565)+(vt2.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, vt2 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING SUM(MIN(vt1.c1)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (SUM(MIN(vt1.c1)) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((SUM(MIN(vt1.c1)) COLLATE BINARY) ISNULL);
SELECT * FROM v0, vt2;
SELECT * FROM v0, vt2 WHERE ((((v0.c0, v0.c0, vt2.c0)) BETWEEN ((((vt2.c0) IS FALSE), ((vt2.c0) BETWEEN (v0.c0) AND (vt2.c0)), CASE WHEN v0.c0 THEN vt2.c0 END)) AND ((v0.c0, ((((v0.c0)OR(vt2.c0)))AND(vt2.c0)), (((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))))) UNION ALL SELECT ALL * FROM v0, vt2 WHERE ((NOT ((((v0.c0, v0.c0, vt2.c0)) BETWEEN ((((vt2.c0) IS FALSE), ((vt2.c0) BETWEEN (v0.c0) AND (vt2.c0)), CASE WHEN v0.c0 THEN vt2.c0 END)) AND ((v0.c0, ((((v0.c0)OR(vt2.c0)))AND(vt2.c0)), (((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))))))) UNION ALL SELECT ALL * FROM v0, vt2 NOT INDEXED WHERE ((((((v0.c0, v0.c0, vt2.c0)) BETWEEN ((((vt2.c0) IS FALSE), ((vt2.c0) BETWEEN (v0.c0) AND (vt2.c0)), CASE WHEN v0.c0 THEN vt2.c0 END)) AND ((v0.c0, ((((v0.c0)OR(vt2.c0)))AND(vt2.c0)), (((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))))) ISNULL));
SELECT * FROM v0, vt2;
SELECT DISTINCT v0.c0 FROM vt2, v0;
SELECT DISTINCT v0.c0 FROM vt2, v0 WHERE (((v0.c0) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM vt2, v0 WHERE ((NOT (((v0.c0) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM vt2, v0 WHERE (((((v0.c0) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM vt2, v0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.c1 COLLATE NOCASE END) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c1 THEN vt1.c1 COLLATE NOCASE END))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c1 COLLATE NOCASE END) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(COUNT(vt0.c0))) BETWEEN (COUNT(*)) AND (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((MAX(COUNT(vt0.c0))) BETWEEN (COUNT(*)) AND (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (((MAX(COUNT(vt0.c0))) BETWEEN (COUNT(*)) AND (vt0.c0))))) ISNULL);
SELECT ALL * FROM vt2, vt1, v0;
SELECT ALL * FROM vt2, vt1, v0 WHERE (CASE WHEN '' THEN CAST(vt1.c1 AS TEXT) END) UNION ALL SELECT ALL * FROM vt2, vt1, v0 WHERE ((NOT (CASE WHEN '' THEN CAST(vt1.c1 AS TEXT) END))) UNION ALL SELECT ALL * FROM vt2, vt1, v0 WHERE (((CASE WHEN '' THEN CAST(vt1.c1 AS TEXT) END) ISNULL));
SELECT ALL * FROM vt2, vt1, v0;
SELECT DISTINCT vt1.c1, v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM vt2, v0, vt1 CROSS JOIN vt0 ON vt1.c1;
SELECT DISTINCT vt1.c1, v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM vt2, v0, vt1 CROSS JOIN vt0 ON vt1.c1 WHERE (CAST(v0.c0 AS REAL)) UNION SELECT DISTINCT vt1.c1, v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM vt2, v0, vt1 CROSS JOIN vt0 ON vt1.c1 WHERE ((NOT (CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT vt1.c1, v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM vt2, v0, vt1 CROSS JOIN vt0 ON vt1.c1 WHERE (((CAST(v0.c0 AS REAL)) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM vt2, v0, vt1 CROSS JOIN vt0 ON vt1.c1;
SELECT vt1.c1 FROM vt2, vt1 RIGHT OUTER JOIN v0 ON (~ (((v0.c0) ISNULL))) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2, vt1 RIGHT OUTER JOIN v0 ON (~ (((v0.c0) ISNULL))) WHERE (MAX(LOWER(vt1.c0), vt2.c0 COLLATE RTRIM)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt2, vt1 RIGHT OUTER JOIN v0 ON (~ (((v0.c0) ISNULL))) WHERE ((NOT (MAX(LOWER(vt1.c0), vt2.c0 COLLATE RTRIM)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt2, vt1 RIGHT OUTER JOIN v0 ON (~ (((v0.c0) ISNULL))) WHERE (((MAX(LOWER(vt1.c0), vt2.c0 COLLATE RTRIM)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2, vt1 RIGHT OUTER JOIN v0 ON (~ (((v0.c0) ISNULL))) GROUP BY vt1.c1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(TOTAL(vt0.c0)))OR((((vt0.c0))>((TOTAL(729346673)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((MIN(TOTAL(vt0.c0)))OR((((vt0.c0))>((TOTAL(729346673)))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((MIN(TOTAL(vt0.c0)))OR((((vt0.c0))>((TOTAL(729346673))))))) ISNULL);
SELECT ALL vt2.c0, v0.c0 FROM vt1, vt2 FULL OUTER JOIN v0 ON vt1.c1;
SELECT ALL vt2.c0, v0.c0 FROM vt1, vt2 FULL OUTER JOIN v0 ON vt1.c1 WHERE (CASE ((((((((((((vt1.c1)OR(v0.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))  WHEN (('') NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((((vt1.c1)AND(vt2.c0)))OR(vt1.c0)) ELSE ((vt2.c0) IS TRUE) END) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM vt1, vt2 FULL OUTER JOIN v0 ON vt1.c1 WHERE ((NOT (CASE ((((((((((((vt1.c1)OR(v0.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))  WHEN (('') NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((((vt1.c1)AND(vt2.c0)))OR(vt1.c0)) ELSE ((vt2.c0) IS TRUE) END))) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM vt1, vt2 FULL OUTER JOIN v0 ON vt1.c1 WHERE (((CASE ((((((((((((vt1.c1)OR(v0.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))  WHEN (('') NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((((vt1.c1)AND(vt2.c0)))OR(vt1.c0)) ELSE ((vt2.c0) IS TRUE) END) ISNULL));
SELECT ALL vt2.c0, v0.c0 FROM vt1, vt2 FULL OUTER JOIN v0 ON vt1.c1;
SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, vt2, v0;
SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt2.c0))) NOT BETWEEN (v0.c0) AND ((- (vt2.c0))))) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE ((NOT (((((v0.c0) BETWEEN (vt0.c0) AND (vt2.c0))) NOT BETWEEN (v0.c0) AND ((- (vt2.c0))))))) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (vt2.c0))) NOT BETWEEN (v0.c0) AND ((- (vt2.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, vt2, v0;
SELECT vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) ISNULL) GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0;
SELECT vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE (CAST(CASE v0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END AS REAL)) GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE ((NOT (CAST(CASE v0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END AS REAL)))) GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0 UNION SELECT vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE (((CAST(CASE v0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END AS REAL)) ISNULL)) GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0;
SELECT vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) ISNULL) GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0;
SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0 HAVING (((((((((((((TOTAL(vt2.c0) IN ()))OR(TOTAL(vt2.c0))))OR(COUNT(*))))AND((TOTAL(COUNT(*)) IN ()))))AND(SUM(vt1.c1))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0 HAVING (NOT ((((((((((((((TOTAL(vt2.c0) IN ()))OR(TOTAL(vt2.c0))))OR(COUNT(*))))AND((TOTAL(COUNT(*)) IN ()))))AND(SUM(vt1.c1))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0 HAVING (((((((((((((((TOTAL(vt2.c0) IN ()))OR(TOTAL(vt2.c0))))OR(COUNT(*))))AND((TOTAL(COUNT(*)) IN ()))))AND(SUM(vt1.c1))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0;
SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0 HAVING (((((((((((((TOTAL(vt2.c0) IN ()))OR(TOTAL(vt2.c0))))OR(COUNT(*))))AND((TOTAL(COUNT(*)) IN ()))))AND(SUM(vt1.c1))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0 HAVING (NOT ((((((((((((((TOTAL(vt2.c0) IN ()))OR(TOTAL(vt2.c0))))OR(COUNT(*))))AND((TOTAL(COUNT(*)) IN ()))))AND(SUM(vt1.c1))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0 HAVING (((((((((((((((TOTAL(vt2.c0) IN ()))OR(TOTAL(vt2.c0))))OR(COUNT(*))))AND((TOTAL(COUNT(*)) IN ()))))AND(SUM(vt1.c1))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0;
SELECT ALL * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL))&(((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0))));
SELECT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL))&(((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))) WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL))&(((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))) WHERE ((NOT ((NOT (CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL))&(((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))) WHERE ((((NOT (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL))&(((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0))));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((~ (((v0.c0)<=(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((~ (((v0.c0)<=(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((~ (((v0.c0)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.1565147587405613 INNER JOIN vt2 ON (((((((((~ (vt0.c0)))AND(((v0.c0) IS TRUE))))AND(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((0X5f0063f) NOT NULL))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.1565147587405613 INNER JOIN vt2 ON (((((((((~ (vt0.c0)))AND(((v0.c0) IS TRUE))))AND(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((0X5f0063f) NOT NULL))) WHERE ((((((x'')) BETWEEN ((vt0.c0)) AND ((vt2.c0))))IS NOT(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.1565147587405613 INNER JOIN vt2 ON (((((((((~ (vt0.c0)))AND(((v0.c0) IS TRUE))))AND(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((0x5f0063f) NOT NULL))) WHERE ((NOT ((((((x'')) BETWEEN ((vt0.c0)) AND ((vt2.c0))))IS NOT(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.1565147587405613 INNER JOIN vt2 ON (((((((((~ (vt0.c0)))AND(((v0.c0) IS TRUE))))AND(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((0X5f0063f) NOT NULL))) WHERE ((((((((x'')) BETWEEN ((vt0.c0)) AND ((vt2.c0))))IS NOT(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.1565147587405613 INNER JOIN vt2 ON (((((((((~ (vt0.c0)))AND(((v0.c0) IS TRUE))))AND(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((0X5f0063f) NOT NULL))) GROUP BY vt0.c0;
SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1 NOT INDEXED, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1 NOT INDEXED, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((('1655561826')<>(NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT ((('1655561826')<>(NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((('1655561826')!=(NULL))) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM v0 FULL OUTER JOIN vt2 ON x'' INNER JOIN vt0 ON ((((vt1.c1)IS(vt2.c0)))>=(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) RIGHT OUTER JOIN vt1 ON ((ROUND(vt1.c1, vt1.c0))<=(((x'')OR('1286663965'))));
SELECT vt1.c1, vt2.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM v0, vt0, vt1, vt2 WHERE (x'') GROUP BY vt1.c1, vt2.c0 UNION SELECT vt1.c1, vt2.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT (x''))) GROUP BY vt1.c1, vt2.c0 UNION SELECT vt1.c1, vt2.c0 FROM v0, vt0, vt1, vt2 WHERE (((x'') ISNULL)) GROUP BY vt1.c1, vt2.c0;
SELECT vt1.c1, vt2.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt1.c1, vt2.c0;
SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt2 ON (NULL COLLATE RTRIM IN ()) GROUP BY vt1.c1, vt1.c0, vt2.c0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt2 ON (NULL COLLATE RTRIM IN ()) GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING COUNT(((COUNT(*))<(MAX(SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt2 ON (NULL COLLATE RTRIM IN ()) GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING (NOT (COUNT(((COUNT(*))<(MAX(SUM(vt1.c0))))))) UNION ALL SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt2 ON (NULL COLLATE RTRIM IN ()) GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING ((COUNT(((COUNT(*))<(MAX(SUM(vt1.c0)))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, vt2.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON ((((((((((v0.c0)AND(NULL)))OR(vt2.c0)))OR(0Xffffffffdca17c4e)))AND(0.18001387847031314))) BETWEEN (CASE v0.c0  WHEN vt2.c0 THEN vt1.c1 END) AND (vt1.c1 COLLATE BINARY)) LEFT OUTER JOIN v0 ON CASE (v0.c0 IN ())  WHEN vt1.c0 COLLATE BINARY THEN (((vt1.c0))<=((vt1.c1))) END;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE NOCASE) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE NOCASE))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0 HAVING NULL UNION ALL SELECT ALL v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0 HAVING NULL UNION ALL SELECT ALL v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL * FROM vt1, vt0, vt2, v0;
SELECT ALL * FROM vt1, vt0, vt2, v0 WHERE (((CAST(vt1.c1 AS TEXT)) BETWEEN (CASE x'4533fb86'  WHEN vt0.c0 THEN vt1.c1 END) AND (((((((((vt1.c1)AND(vt2.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(v0.c0))))) UNION ALL SELECT * FROM vt1 NOT INDEXED, vt0, vt2, v0 WHERE ((NOT (((CAST(vt1.c1 AS TEXT)) BETWEEN (CASE x'4533fb86'  WHEN vt0.c0 THEN vt1.c1 END) AND (((((((((vt1.c1)AND(vt2.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt0, vt2, v0 WHERE (((((CAST(vt1.c1 AS TEXT)) BETWEEN (CASE x'4533fb86'  WHEN vt0.c0 THEN vt1.c1 END) AND (((((((((vt1.c1)AND(vt2.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0, vt2, v0;
SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM v0, vt0, vt2;
SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM v0, vt0, vt2 WHERE ((((vt2.c0 IN ())) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((v0.c0)OR(vt2.c0)))AND(v0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM v0, vt0, vt2 WHERE ((NOT ((((vt2.c0 IN ())) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((v0.c0)OR(vt2.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM v0, vt0, vt2 WHERE ((((((vt2.c0 IN ())) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((v0.c0)OR(vt2.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM v0, vt0, vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (CASE (vt2.c0 IN ())  WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END THEN TOTAL_CHANGES() END) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CASE (vt2.c0 IN ())  WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END THEN TOTAL_CHANGES() END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE (vt2.c0 IN ())  WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END THEN TOTAL_CHANGES() END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt1.c0, vt2.c0;
SELECT v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING (((((((AVG(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) NOT BETWEEN ((COUNT(COUNT(*)))) AND ((x''))))AND(CAST(vt1.c0 AS REAL))))AND(TOTAL(vt2.c0))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING (NOT ((((((((AVG(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) NOT BETWEEN ((COUNT(COUNT(*)))) AND ((x''))))AND(CAST(vt1.c0 AS REAL))))AND(TOTAL(vt2.c0))))) UNION ALL SELECT v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING (((((((((AVG(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) NOT BETWEEN ((COUNT(COUNT(*)))) AND ((x''))))AND(CAST(vt1.c0 AS REAL))))AND(TOTAL(vt2.c0)))) ISNULL);
SELECT ALL MAX(CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)) FROM vt0 ORDER BY CAST(x'' AS BLOB) DESC, ((LIKE(vt0.c0, vt0.c0, 'C'))||(0.6174270723530167)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>((((vt0.c0))<>((vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))>((((vt0.c0))<>((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))>((((vt0.c0))!=((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((NOT (((vt2.c0)&(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((NOT ((NOT (((vt2.c0)&(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((((NOT (((vt2.c0)&(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB))/(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))/(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))/(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((IFNULL(DISTINCT vt1.c1, vt1.c1)) BETWEEN (((MAX(vt1.c0))<=(vt1.c0))) AND (CAST(vt1.c1 AS NUMERIC))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((IFNULL(DISTINCT vt1.c1, vt1.c1)) BETWEEN (((MAX(vt1.c0))<=(vt1.c0))) AND (CAST(vt1.c1 AS NUMERIC))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((IFNULL(DISTINCT vt1.c1, vt1.c1)) BETWEEN (((MAX(vt1.c0))<=(vt1.c0))) AND (CAST(vt1.c1 AS NUMERIC)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((IFNULL(DISTINCT vt1.c1, vt1.c1)) BETWEEN (((MAX(vt1.c0))<=(vt1.c0))) AND (CAST(vt1.c1 AS NUMERIC))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((IFNULL(DISTINCT vt1.c1, vt1.c1)) BETWEEN (((MAX(vt1.c0))<=(vt1.c0))) AND (CAST(vt1.c1 AS NUMERIC))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((IFNULL(DISTINCT vt1.c1, vt1.c1)) BETWEEN (((MAX(vt1.c0))<=(vt1.c0))) AND (CAST(vt1.c1 AS NUMERIC)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM vt2, v0;
SELECT ALL * FROM vt2, v0 WHERE (((((((((((vt2.c0)AND(v0.c0)))AND(vt2.c0)))AND(v0.c0)))AND(v0.c0)))GLOB((((v0.c0, v0.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0)))))) UNION ALL SELECT ALL * FROM vt2, v0 WHERE ((NOT (((((((((((vt2.c0)AND(v0.c0)))AND(vt2.c0)))AND(v0.c0)))AND(v0.c0)))GLOB((((v0.c0, v0.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0)))))))) UNION ALL SELECT * FROM vt2, v0 WHERE (((((((((((((vt2.c0)AND(v0.c0)))AND(vt2.c0)))AND(v0.c0)))AND(v0.c0)))GLOB((((v0.c0, v0.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0)))))) ISNULL));
SELECT ALL * FROM vt2, v0;
SELECT DISTINCT vt1.c1, vt0.c0, vt1.c0, v0.c0, vt2.c0 FROM v0, vt1, vt2, vt0;
SELECT DISTINCT vt1.c1, vt0.c0, vt1.c0, v0.c0, vt2.c0 FROM v0, vt1, vt2, vt0 WHERE (((vt2.c0) ISNULL)) UNION SELECT DISTINCT vt1.c1, vt0.c0, vt1.c0, v0.c0, vt2.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT (((vt2.c0) ISNULL)))) UNION SELECT DISTINCT vt1.c1, vt0.c0, vt1.c0, v0.c0, vt2.c0 FROM v0, vt1, vt2, vt0 WHERE (((((vt2.c0) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0, vt1.c0, v0.c0, vt2.c0 FROM v0, vt1, vt2, vt0;
SELECT ALL vt2.c0, v0.c0 FROM v0, vt2 GROUP BY vt2.c0, v0.c0;
SELECT ALL vt2.c0, v0.c0 FROM v0, vt2 WHERE (((((((vt2.c0) NOT NULL))AND(v0.c0 COLLATE RTRIM)))AND(CASE v0.c0  WHEN vt2.c0 THEN vt2.c0 END))) GROUP BY vt2.c0, v0.c0 UNION SELECT vt2.c0, v0.c0 FROM v0, vt2 WHERE ((NOT (((((((vt2.c0) NOT NULL))AND(v0.c0 COLLATE RTRIM)))AND(CASE v0.c0  WHEN vt2.c0 THEN vt2.c0 END))))) GROUP BY vt2.c0, v0.c0 UNION SELECT vt2.c0, v0.c0 FROM v0, vt2 WHERE (((((((((vt2.c0) NOT NULL))AND(v0.c0 COLLATE RTRIM)))AND(CASE v0.c0  WHEN vt2.c0 THEN vt2.c0 END))) ISNULL)) GROUP BY vt2.c0, v0.c0;
SELECT ALL vt2.c0, v0.c0 FROM v0, vt2 GROUP BY vt2.c0, v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(0.5232145038079936) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(0.5232145038079936))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(0.5232145038079936)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(0.5232145038079936) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(0.5232145038079936))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(0.5232145038079936)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt2, vt0;
SELECT ALL * FROM vt2, vt0 WHERE (CAST(CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 END AS NUMERIC)) UNION ALL SELECT * FROM vt2, vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt2, vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 END AS NUMERIC)) ISNULL));
SELECT * FROM vt2, vt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt2 ON UNLIKELY(((vt1.c0)>(''))) INNER JOIN vt1 ON (((~ (vt1.c0))) NOTNULL);
SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt1.c1, vt2.c0, vt1.c0;
SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN '-520700373' END)) AND ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) GROUP BY vt1.c1, vt2.c0, vt1.c0 UNION SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN '-520700373' END)) AND ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))))) GROUP BY vt1.c1, vt2.c0, vt1.c0 UNION SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN '-520700373' END)) AND ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ISNULL)) GROUP BY vt1.c1, vt2.c0, vt1.c0;
SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt1.c1, vt2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c1)<>(vt2.c0)) IN ()) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c1)!=(vt2.c0)) IN ()) GROUP BY vt1.c0 HAVING ((MAX(AVG(vt1.c1)) COLLATE BINARY) NOT BETWEEN (0.24989962401167864) AND (MAX(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c1)<>(vt2.c0)) IN ()) GROUP BY vt1.c0 HAVING (NOT (((MAX(AVG(vt1.c1)) COLLATE BINARY) NOT BETWEEN (0.24989962401167864) AND (MAX(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c1)<>(vt2.c0)) IN ()) GROUP BY vt1.c0 HAVING ((((MAX(AVG(vt1.c1)) COLLATE BINARY) NOT BETWEEN (0.24989962401167864) AND (MAX(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1, vt2;
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1, vt2 WHERE ((- (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT ((- (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1, vt2 NOT INDEXED WHERE ((((- (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1, vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (vt2.c0) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (+ (MAX(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT ((+ (MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (((+ (MAX(vt0.c0)))) ISNULL);
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (+ (MAX(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT ((+ (MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (((+ (MAX(vt0.c0)))) ISNULL);
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT * FROM vt0, vt1, vt2;
SELECT ALL * FROM vt0, vt1, vt2 WHERE ((((vt2.c0)) NOT BETWEEN ((ABS(DISTINCT vt1.c0))) AND ((((vt1.c1)<(vt0.c0)))))) UNION ALL SELECT * FROM vt0, vt1, vt2 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((ABS(DISTINCT vt1.c0))) AND ((((vt1.c1)<(vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, vt1, vt2 WHERE ((((((vt2.c0)) NOT BETWEEN ((ABS(DISTINCT vt1.c0))) AND ((((vt1.c1)<(vt0.c0)))))) ISNULL));
SELECT * FROM vt0, vt1, vt2;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON ((((vt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL);
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON ((((vt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL) WHERE (((((v0.c0)|(v0.c0)))-(CAST(vt1.c1 AS INTEGER)))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON ((((vt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL) WHERE ((NOT (((((v0.c0)|(v0.c0)))-(CAST(vt1.c1 AS INTEGER)))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON ((((vt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL) WHERE (((((((v0.c0)|(v0.c0)))-(CAST(vt1.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON ((((vt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL);
SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1 WHERE (vt1.c0) GROUP BY vt2.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt2.c0, vt1.c0, vt1.c1 UNION SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0;
SELECT vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0 HAVING MAX(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END) UNION ALL SELECT vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0 HAVING (NOT (MAX(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0 HAVING ((MAX(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END)) ISNULL);
SELECT vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0;
SELECT vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0 HAVING MAX(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END) UNION ALL SELECT vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0 HAVING (NOT (MAX(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0 HAVING ((MAX(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END)) ISNULL);
SELECT vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0;
SELECT ALL * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE (((((vt1.c0)<=(v0.c0)))=(v0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT (((((vt1.c0)<=(v0.c0)))==(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE (((((((vt1.c0)<=(v0.c0)))=(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (CASE WHEN 0.5516588187589154 THEN CASE WHEN v0.c0 THEN x'' END ELSE ((vt0.c0)/(vt0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN 0.5516588187589154 THEN CASE WHEN v0.c0 THEN x'' END ELSE ((vt0.c0)/(vt0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((CASE WHEN 0.5516588187589154 THEN CASE WHEN v0.c0 THEN x'' END ELSE ((vt0.c0)/(vt0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SUM(vt1.c1)) UNION ALL SELECT ALL vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt1.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SUM(vt1.c1))) ISNULL);
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE ((ABS(vt2.c0) IN ())) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT ((ABS(vt2.c0) IN ())))) UNION ALL SELECT ALL * FROM vt2 WHERE ((((ABS(vt2.c0) IN ())) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT vt0.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) NOT BETWEEN (0.7455995642224291) AND (vt0.c0))));
SELECT DISTINCT vt0.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) NOT BETWEEN (0.7455995642224291) AND (vt0.c0)))) WHERE (((CASE vt1.c1  WHEN vt1.c1 THEN v0.c0 END) NOTNULL)) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) NOT BETWEEN (0.7455995642224291) AND (vt0.c0)))) WHERE ((NOT (((CASE vt1.c1  WHEN vt1.c1 THEN v0.c0 END) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) NOT BETWEEN (0.7455995642224291) AND (vt0.c0)))) WHERE (((((CASE vt1.c1  WHEN vt1.c1 THEN v0.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) NOT BETWEEN (0.7455995642224291) AND (vt0.c0))));
SELECT ALL vt1.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt2, vt1, vt0 WHERE (vt2.c0) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt2, vt1, vt0 WHERE ((NOT (vt2.c0))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt2 NOT INDEXED, vt1, vt0 WHERE (((vt2.c0) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c1;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING MAX(AVG(NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(AVG(NULL)))) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING ((MAX(AVG(NULL))) ISNULL);
SELECT ALL SUM(((((vt1.c1) NOT BETWEEN (vt0.c0) AND (0.7700827790942723)))<=(0.4933867593875594))) FROM vt1, vt0, vt2;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('') UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((('') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt2, vt1, vt0, v0;
SELECT DISTINCT * FROM vt2, vt1, vt0, v0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))||(((vt0.c0)IS(vt0.c0))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0, v0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))||(((vt0.c0)IS(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0, v0 WHERE (((((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))||(((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((LIKELIHOOD(DISTINCT vt1.c0, 0.28783694307951246))AND(((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))))OR((- (vt1.c1)))))AND(((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))))OR('-393780601'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((LIKELIHOOD(DISTINCT vt1.c0, 0.28783694307951246))AND(((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))))OR((- (vt1.c1)))))AND(((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))))OR('-393780601'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((LIKELIHOOD(DISTINCT vt1.c0, 0.28783694307951246))AND(((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))))OR((- (vt1.c1)))))AND(((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))))OR('-393780601'))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING GROUP_CONCAT(CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 END) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 END))) UNION ALL SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 END)) ISNULL);
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING GROUP_CONCAT(CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 END) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 END))) UNION ALL SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 END)) ISNULL);
SELECT vt2.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL * FROM vt2, v0, vt0, vt1;
SELECT * FROM vt2, v0, vt0, vt1 WHERE (v0.c0) UNION ALL SELECT * FROM vt2, v0, vt0, vt1 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt2, v0, vt0, vt1 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM vt2, v0, vt0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)==(vt0.c0)))<(CAST(vt1.c1 AS INTEGER)))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((((vt1.c0)=(vt0.c0)))<(CAST(vt1.c1 AS INTEGER)))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)=(vt0.c0)))<(CAST(vt1.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0, vt2 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0, vt2 WHERE (0.614702318312661) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0, vt2 WHERE ((NOT (0.614702318312661))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0, vt2 WHERE (((0.614702318312661) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0, vt2 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING MIN(json_insert(vt2.c0, vt2.c0, vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING (NOT (MIN(json_insert(vt2.c0, vt2.c0, vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING ((MIN(json_insert(vt2.c0, vt2.c0, vt2.c0))) ISNULL);
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING MIN(json_insert(vt2.c0, vt2.c0, vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING (NOT (MIN(json_insert(vt2.c0, vt2.c0, vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING ((MIN(json_insert(vt2.c0, vt2.c0, vt2.c0))) ISNULL);
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0;
SELECT TOTAL(((-1882275903) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) AND (((vt1.c1) IS FALSE)))) FROM vt1;
SELECT ALL * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON vt2.c0;
SELECT ALL * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON vt2.c0 WHERE (((((vt2.c0) BETWEEN (x'add51070') AND (vt2.c0))) IS FALSE)) UNION ALL SELECT * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON vt2.c0 WHERE ((NOT (((((vt2.c0) BETWEEN (x'add51070') AND (vt2.c0))) IS FALSE)))) UNION ALL SELECT * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON vt2.c0 WHERE (((((((vt2.c0) BETWEEN (x'add51070') AND (vt2.c0))) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON vt2.c0;
SELECT DISTINCT * FROM vt0, vt2, v0, vt1;
SELECT DISTINCT * FROM vt0, vt2, v0, vt1 WHERE (((v0.c0 IN ()) IN (UPPER(vt0.c0), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt2, v0, vt1 WHERE ((NOT (((v0.c0 IN ()) IN (UPPER(vt0.c0), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt2, v0, vt1 WHERE (((((v0.c0 IN ()) IN (UPPER(vt0.c0), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, v0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN v0 ON ((JULIANDAY(vt0.c0, v0.c0, v0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((NOT ('1935969607'))) AND ((((vt2.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0, vt2.c0;
SELECT v0.c0 FROM v0, vt1, vt2, vt0;
SELECT v0.c0 FROM v0, vt1, vt2, vt0 WHERE ((((('K{t{2!d')OR(vt2.c0)))-((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT ((((('K{t{2!d')OR(vt2.c0)))-((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0, vt1, vt2, vt0 WHERE ((((((('K{t{2!d')OR(vt2.c0)))-((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0, vt1, vt2, vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((((((((v0.c0)||(v0.c0)))AND(((vt1.c1)LIKE(vt1.c0)))))AND((((vt2.c0, vt2.c0, vt0.c0))<=((vt1.c1, vt2.c0, vt0.c0))))))AND(RTRIM(v0.c0))))AND(CAST(vt2.c0 AS REAL))) RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN ()))>=(((((vt1.c0)OR(v0.c0)))OR(vt0.c0)))) FULL OUTER JOIN vt2 ON (((((((((((vt1.c1)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0))))>((((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0)))));
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 WHERE (vt1.c0) GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING ((CASE COUNT(SUM(SUM(vt2.c0)))  WHEN vt2.c0 THEN GROUP_CONCAT(vt1.c0) WHEN MIN(MIN(vt1.c0)) THEN MIN(vt1.c0) WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN SUM(vt1.c0) THEN vt2.c0 END)OR(MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING (NOT (((CASE COUNT(SUM(SUM(vt2.c0)))  WHEN vt2.c0 THEN GROUP_CONCAT(vt1.c0) WHEN MIN(MIN(vt1.c0)) THEN MIN(vt1.c0) WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN SUM(vt1.c0) THEN vt2.c0 END)OR(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING ((((CASE COUNT(SUM(SUM(vt2.c0)))  WHEN vt2.c0 THEN GROUP_CONCAT(vt1.c0) WHEN MIN(MIN(vt1.c0)) THEN MIN(vt1.c0) WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN SUM(vt1.c0) THEN vt2.c0 END)OR(MIN(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS TEXT)))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((CAST((vt1.c0 IN ()) AS TEXT)) ISNULL));
SELECT ALL * FROM vt0, v0, vt1;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c0)))OR('.avT]dli'))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c0)))OR('.avT]dli'))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c0)))OR('.avT]dli'))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 WHERE (HEX(DISTINCT ((vt2.c0)=(vt1.c0)))) GROUP BY vt0.c0, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 WHERE ((NOT (HEX(DISTINCT ((vt2.c0)=(vt1.c0)))))) GROUP BY vt0.c0, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 WHERE (((HEX(DISTINCT ((vt2.c0)==(vt1.c0)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT('-1544828014') UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT('-1544828014'))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT('-1544828014')) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT('-1544828014') UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT('-1544828014'))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT('-1544828014')) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(((v0.c0) NOT NULL))))OR(CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0 COLLATE RTRIM)OR(((v0.c0) NOT NULL))))OR(CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0 COLLATE RTRIM)OR(((v0.c0) NOT NULL))))OR(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt1, vt2, v0;
SELECT DISTINCT * FROM vt1, vt2, v0 WHERE (DATETIME(vt1.c1, vt2.c0, vt1.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, vt2, v0 WHERE ((NOT (DATETIME(vt1.c1, vt2.c0, vt1.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt2, v0 WHERE (((DATETIME(vt1.c1, vt2.c0, vt1.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, v0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1 GROUP BY vt1.c1, vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1 WHERE (CAST(CAST(v0.c0 AS TEXT) AS REAL)) GROUP BY vt1.c1, vt1.c0, vt2.c0, v0.c0 UNION SELECT vt1.c1, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1 WHERE ((NOT (CAST(CAST(v0.c0 AS TEXT) AS REAL)))) GROUP BY vt1.c1, vt1.c0, vt2.c0, v0.c0 UNION SELECT vt1.c1, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1 WHERE (((CAST(CAST(v0.c0 AS TEXT) AS REAL)) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1 GROUP BY vt1.c1, vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG(vt1.c1)))<=((MIN(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((AVG(vt1.c1)))<=((MIN(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((AVG(vt1.c1)))<=((MIN(COUNT(*)))))) ISNULL);
SELECT * FROM vt1, vt2, v0;
SELECT ALL * FROM vt1, vt2, v0 WHERE ((((v0.c0) IS TRUE) IN ())) UNION ALL SELECT ALL * FROM vt1, vt2, v0 WHERE ((NOT ((((v0.c0) IS TRUE) IN ())))) UNION ALL SELECT * FROM vt1, vt2, v0 WHERE ((((((v0.c0) IS TRUE) IN ())) ISNULL));
SELECT * FROM vt1, vt2, v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c1 IN (vt1.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c1 IN (vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c1 IN (vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON ((((((((((vt0.c0)>=(vt1.c1)))OR(((vt1.c1)<(vt0.c0)))))OR(0.9391309981375288)))AND((vt1.c1 IN (vt1.c1, vt1.c1)))))AND((- (0xffffffffb3cb9b62)))) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON ((((((((((vt0.c0)>=(vt1.c1)))OR(((vt1.c1)<(vt0.c0)))))OR(0.9391309981375288)))AND((vt1.c1 IN (vt1.c1, vt1.c1)))))AND((- (0xffffffffb3cb9b62)))) WHERE (CASE ((vt1.c0)LIKE(vt0.c0))  WHEN ((((vt2.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((((v0.c0)AND(0.5161925569392374)))AND(vt1.c1)) ELSE ((NULL) IS TRUE) END) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON ((((((((((vt0.c0)>=(vt1.c1)))OR(((vt1.c1)<(vt0.c0)))))OR(0.9391309981375288)))AND((vt1.c1 IN (vt1.c1, vt1.c1)))))AND((- (0Xffffffffb3cb9b62)))) WHERE ((NOT (CASE ((vt1.c0)LIKE(vt0.c0))  WHEN ((((vt2.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((((v0.c0)AND(0.5161925569392374)))AND(vt1.c1)) ELSE ((NULL) IS TRUE) END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON ((((((((((vt0.c0)>=(vt1.c1)))OR(((vt1.c1)<(vt0.c0)))))OR(0.9391309981375288)))AND((vt1.c1 IN (vt1.c1, vt1.c1)))))AND((- (0xffffffffb3cb9b62)))) WHERE (((CASE ((vt1.c0)LIKE(vt0.c0))  WHEN ((((vt2.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((((v0.c0)AND(0.5161925569392374)))AND(vt1.c1)) ELSE ((NULL) IS TRUE) END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON ((((((((((vt0.c0)>=(vt1.c1)))OR(((vt1.c1)<(vt0.c0)))))OR(0.9391309981375288)))AND((vt1.c1 IN (vt1.c1, vt1.c1)))))AND((- (0xffffffffb3cb9b62)))) GROUP BY vt2.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING AVG((v0.c0 IN ())) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING (NOT (AVG((v0.c0 IN ())))) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING ((AVG((v0.c0 IN ()))) ISNULL);
SELECT ALL vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING AVG((v0.c0 IN ())) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING (NOT (AVG((v0.c0 IN ())))) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING ((AVG((v0.c0 IN ()))) ISNULL);
SELECT ALL vt2.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE ((((((vt2.c0))<>((vt2.c0))))||(LAST_INSERT_ROWID()))) UNION ALL SELECT * FROM vt2 WHERE ((NOT ((((((vt2.c0))!=((vt2.c0))))||(LAST_INSERT_ROWID()))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((((((((vt2.c0))!=((vt2.c0))))||(LAST_INSERT_ROWID()))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (ABS(DISTINCT 0.8062872624088823) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (ABS(DISTINCT 0.8062872624088823) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((ABS(DISTINCT 0.8062872624088823) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS INTEGER)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(CAST(v0.c0 AS BLOB) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((CAST(CAST(v0.c0 AS BLOB) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0 HAVING MIN(((v0.c0)IS(vt0.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0 HAVING (NOT (MIN(((v0.c0)IS(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0 HAVING ((MIN(((v0.c0)IS(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0 HAVING MIN(((v0.c0)IS(vt0.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0 HAVING (NOT (MIN(((v0.c0)IS(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0 HAVING ((MIN(((v0.c0)IS(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM v0, vt2 FULL OUTER JOIN vt0 ON LIKELIHOOD((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))), 0.4918102901523941) GROUP BY vt0.c0;
SELECT ALL * FROM vt1, v0, vt2;
SELECT * FROM vt1, v0, vt2 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1, v0, vt2 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1, v0, vt2 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1, v0, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (1.218160049E9) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (1.218160049E9))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((1.218160049E9) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt2, vt0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt2, vt0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING MAX(AVG(SUM(MAX(AVG(vt1.c0))))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt2, vt0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING (NOT (MAX(AVG(SUM(MAX(AVG(vt1.c0))))))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 FROM v0, vt2, vt0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1, vt2.c0 HAVING ((MAX(AVG(SUM(MAX(AVG(vt1.c0)))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, '黰\Mꪃu[')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((((vt0.c0, vt0.c0, '黰\Mꪃu[')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((((vt0.c0, vt0.c0, '黰\Mꪃu[')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE (CASE CASE WHEN vt1.c1 THEN vt1.c1 END  WHEN ((vt1.c0)<<(v0.c0)) THEN vt1.c0 WHEN (NOT (v0.c0)) THEN ((vt1.c1)/(vt1.c0)) WHEN vt1.c1 COLLATE BINARY THEN ((v0.c0)||(v0.c0)) WHEN 0.3585016641000429 COLLATE NOCASE THEN ((vt1.c0)+(vt1.c1)) WHEN (NOT (vt1.c0)) THEN (- (v0.c0)) ELSE TRIM(DISTINCT v0.c0) END) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((NOT (CASE CASE WHEN vt1.c1 THEN vt1.c1 END  WHEN ((vt1.c0)<<(v0.c0)) THEN vt1.c0 WHEN (NOT (v0.c0)) THEN ((vt1.c1)/(vt1.c0)) WHEN vt1.c1 COLLATE BINARY THEN ((v0.c0)||(v0.c0)) WHEN 0.3585016641000429 COLLATE NOCASE THEN ((vt1.c0)+(vt1.c1)) WHEN (NOT (vt1.c0)) THEN (- (v0.c0)) ELSE TRIM(DISTINCT v0.c0) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE (((CASE CASE WHEN vt1.c1 THEN vt1.c1 END  WHEN ((vt1.c0)<<(v0.c0)) THEN vt1.c0 WHEN (NOT (v0.c0)) THEN ((vt1.c1)/(vt1.c0)) WHEN vt1.c1 COLLATE BINARY THEN ((v0.c0)||(v0.c0)) WHEN 0.3585016641000429 COLLATE NOCASE THEN ((vt1.c0)+(vt1.c1)) WHEN (NOT (vt1.c0)) THEN (- (v0.c0)) ELSE TRIM(DISTINCT v0.c0) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN '-1132427031' ELSE (~ (x'')) END) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN '-1132427031' ELSE (~ (x'')) END))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN '-1132427031' ELSE (~ (x'')) END) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1 HAVING MIN(SUM(vt1.c0)) UNION ALL SELECT vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1 HAVING (NOT (MIN(SUM(vt1.c0)))) UNION ALL SELECT vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1 HAVING ((MIN(SUM(vt1.c0))) ISNULL);
SELECT ALL SUM(vt1.c0) FROM vt2, vt0, vt1, v0 ORDER BY (((~ (vt1.c1)))<>(((v0.c0) IS TRUE))), (+ (v0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS LAST, ((CASE 0.23154110466004896  WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END) NOTNULL)  NULLS LAST;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('2c7K?]x')) AS NUMERIC)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('2c7K?]x')) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('2c7K?]x')) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt2, v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt2, v0, vt1 WHERE (((((vt1.c1)AND(json_type(vt0.c0))))OR((~ (vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt2, v0, vt1 WHERE ((NOT (((((vt1.c1)AND(json_type(vt0.c0))))OR((~ (vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt2, v0, vt1 WHERE (((((((vt1.c1)AND(json_type(vt0.c0))))OR((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt2, v0, vt1;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt2 WHERE (((((vt0.c0)GLOB(NULL))) NOTNULL)) GROUP BY vt2.c0, v0.c0, vt0.c0 UNION SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt2 WHERE ((NOT (((((vt0.c0)GLOB(NULL))) NOTNULL)))) GROUP BY vt2.c0, v0.c0, vt0.c0 UNION SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt2 WHERE (((((((vt0.c0)GLOB(NULL))) NOTNULL)) ISNULL)) GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 NATURAL JOIN vt1;
SELECT vt0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE (COALESCE(UNLIKELY(vt1.c1), (vt1.c0 IN ()), ((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)), (- (vt1.c1)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((NOT (COALESCE(UNLIKELY(vt1.c1), (vt1.c0 IN ()), ((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)), (- (vt1.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE (((COALESCE(UNLIKELY(vt1.c1), (vt1.c0 IN ()), ((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)), (- (vt1.c1)))) ISNULL));
SELECT ALL vt0.c0 FROM v0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c1 FROM vt2, vt1;
SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE ((vt1.c0 IN (((vt1.c0)AND(vt2.c0)), ((vt2.c0)/(vt1.c1))))) UNION SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE ((NOT ((vt1.c0 IN (((vt1.c0)AND(vt2.c0)), ((vt2.c0)/(vt1.c1))))))) UNION SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE ((((vt1.c0 IN (((vt1.c0)AND(vt2.c0)), ((vt2.c0)/(vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt2, vt1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (HEX(DISTINCT vt2.c0)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((NOT (HEX(DISTINCT vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((NOT (HEX(DISTINCT vt2.c0)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0, vt1.c0 FROM vt2 CROSS JOIN v0 ON ((((((v0.c0)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (((vt0.c0)LIKE(vt2.c0))) AND (vt1.c1)) INNER JOIN vt1 ON 0.23582117046341178 FULL OUTER JOIN vt0 ON TIME(((vt2.c0)||(v0.c0)), CAST(vt2.c0 AS REAL), (+ (vt0.c0))) GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt0, vt2, v0;
SELECT * FROM vt0 NOT INDEXED, vt2, v0 WHERE (((((v0.c0)AND(vt2.c0)))OR(-453884907)) COLLATE BINARY) UNION ALL SELECT * FROM vt0, vt2, v0 WHERE ((NOT (((((v0.c0)AND(vt2.c0)))OR(-453884907)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, vt2, v0 WHERE (((((((v0.c0)AND(vt2.c0)))OR(-453884907)) COLLATE BINARY) ISNULL));
SELECT * FROM vt0, vt2, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ()))||(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))||(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ()))||(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('-247804566') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('-247804566'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('-247804566') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING CAST(((((AVG(vt2.c0))OR(COUNT(*))))OR(vt0.c0)) AS REAL) UNION ALL SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((((AVG(vt2.c0))OR(COUNT(*))))OR(vt0.c0)) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING ((CAST(((((AVG(vt2.c0))OR(COUNT(*))))OR(vt0.c0)) AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING CAST(((((AVG(vt2.c0))OR(COUNT(*))))OR(vt0.c0)) AS REAL) UNION ALL SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((((AVG(vt2.c0))OR(COUNT(*))))OR(vt0.c0)) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING ((CAST(((((AVG(vt2.c0))OR(COUNT(*))))OR(vt0.c0)) AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((LIKELY(v0.c0))&(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) FROM v0, vt0, vt2, vt1 ORDER BY TRIM(((vt0.c0)<>(NULL))) ASC;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(SQLITE_COMPILEOPTION_GET(v0.c0))))AND(((v0.c0)-(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(SQLITE_COMPILEOPTION_GET(v0.c0))))AND(((v0.c0)-(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(SQLITE_COMPILEOPTION_GET(v0.c0))))AND(((v0.c0)-(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (CAST(((vt2.c0)=(vt1.c1)) AS REAL)) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (CAST(((vt2.c0)==(vt1.c1)) AS REAL)))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((CAST(((vt2.c0)==(vt1.c1)) AS REAL)) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0))<>((vt2.c0))))<(CAST(vt2.c0 AS BLOB)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((((vt2.c0))!=((vt2.c0))))<(CAST(vt2.c0 AS BLOB)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((((((((vt2.c0))!=((vt2.c0))))<(CAST(vt2.c0 AS BLOB)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(GROUP_CONCAT(COUNT(COUNT(SUM(TOTAL(vt0.c0)))))) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(COUNT(SUM(TOTAL(vt0.c0)))))) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(COUNT(SUM(TOTAL(vt0.c0)))))) COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt2, v0, vt0;
SELECT ALL * FROM vt2, v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) UNION ALL SELECT * FROM vt2, v0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)))) UNION ALL SELECT ALL * FROM vt2, v0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) ISNULL));
SELECT ALL * FROM vt2, v0, vt0;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt1, vt2;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt1, vt2 WHERE ('994924144') UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT ('994924144'))) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt1, vt2 WHERE ((('994924144') ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt1, vt2;
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE (CASE WHEN (((NULL))<((NULL))) THEN CAST(vt2.c0 AS TEXT) WHEN vt1.c1 THEN CAST(861047193 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN 0X4cb0ef1d END) GROUP BY vt0.c0, vt2.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE ((NOT (CASE WHEN (((NULL))<((NULL))) THEN CAST(vt2.c0 AS TEXT) WHEN vt1.c1 THEN CAST(861047193 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN 0X4cb0ef1d END))) GROUP BY vt0.c0, vt2.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE (((CASE WHEN (((NULL))<((NULL))) THEN CAST(vt2.c0 AS TEXT) WHEN vt1.c1 THEN CAST(861047193 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN 0x4cb0ef1d END) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt1.c0, vt2.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1, v0.c0;
SELECT vt1.c0, vt2.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1, v0.c0 HAVING (((COUNT(vt1.c1), (((SUM(COUNT(TOTAL(COUNT(*))))))<((AVG(v0.c0)))), SUM(GROUP_CONCAT(MIN(v0.c0)))))>=((((GROUP_CONCAT(SUM(vt1.c1))) NOT NULL), TOTAL(v0.c0), ((vt1.c1)>=(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1, v0.c0 HAVING (NOT ((((COUNT(vt1.c1), (((SUM(COUNT(TOTAL(COUNT(*))))))<((AVG(v0.c0)))), SUM(GROUP_CONCAT(MIN(v0.c0)))))>=((((GROUP_CONCAT(SUM(vt1.c1))) NOT NULL), TOTAL(v0.c0), ((vt1.c1)>=(COUNT(*)))))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1, v0.c0 HAVING (((((COUNT(vt1.c1), (((SUM(COUNT(TOTAL(COUNT(*))))))<((AVG(v0.c0)))), SUM(GROUP_CONCAT(MIN(v0.c0)))))>=((((GROUP_CONCAT(SUM(vt1.c1))) NOT NULL), TOTAL(v0.c0), ((vt1.c1)>=(COUNT(*))))))) ISNULL);
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE ((((vt2.c0)) BETWEEN ((vt2.c0 COLLATE BINARY)) AND (((((vt2.c0))>=((vt2.c0))))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT ((((vt2.c0)) BETWEEN ((vt2.c0 COLLATE BINARY)) AND (((((vt2.c0))>=((vt2.c0))))))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((((((vt2.c0)) BETWEEN ((vt2.c0 COLLATE BINARY)) AND (((((vt2.c0))>=((vt2.c0))))))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt2, vt0;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt2, vt0 WHERE ((((- (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt2, vt0 WHERE ((NOT ((((- (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt2, vt0 WHERE ((((((- (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt2, vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (TYPEOF(vt2.c0) COLLATE NOCASE) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (TYPEOF(vt2.c0) COLLATE NOCASE))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((TYPEOF(vt2.c0) COLLATE NOCASE) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0, vt1.c1 FROM vt2, vt1 LEFT OUTER JOIN v0 ON 0.27442117568455804 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt2, vt1 LEFT OUTER JOIN v0 ON 0.27442117568455804 GROUP BY vt1.c0, vt1.c1 HAVING ((MAX(GROUP_CONCAT(AVG(MAX(TOTAL(vt1.c0))))))>=((((vt1.c0, vt1.c0, MIN(GROUP_CONCAT(x'7afc')), vt2.c0, COUNT(GROUP_CONCAT(v0.c0)))) BETWEEN ((MIN(v0.c0), COUNT(*), MIN(vt1.c0), COUNT(*), COUNT(SUM(AVG(GROUP_CONCAT(v0.c0)))))) AND ((COUNT(*), COUNT(COUNT(AVG(x''))), GROUP_CONCAT(SUM(vt1.c1)), vt2.c0, vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt2, vt1 LEFT OUTER JOIN v0 ON 0.27442117568455804 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((MAX(GROUP_CONCAT(AVG(MAX(TOTAL(vt1.c0))))))>=((((vt1.c0, vt1.c0, MIN(GROUP_CONCAT(x'7afc')), vt2.c0, COUNT(GROUP_CONCAT(v0.c0)))) BETWEEN ((MIN(v0.c0), COUNT(*), MIN(vt1.c0), COUNT(*), COUNT(SUM(AVG(GROUP_CONCAT(v0.c0)))))) AND ((COUNT(*), COUNT(COUNT(AVG(x''))), GROUP_CONCAT(SUM(vt1.c1)), vt2.c0, vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt2, vt1 LEFT OUTER JOIN v0 ON 0.27442117568455804 GROUP BY vt1.c0, vt1.c1 HAVING ((((MAX(GROUP_CONCAT(AVG(MAX(TOTAL(vt1.c0))))))>=((((vt1.c0, vt1.c0, MIN(GROUP_CONCAT(x'7afc')), vt2.c0, COUNT(GROUP_CONCAT(v0.c0)))) BETWEEN ((MIN(v0.c0), COUNT(*), MIN(vt1.c0), COUNT(*), COUNT(SUM(AVG(GROUP_CONCAT(v0.c0)))))) AND ((COUNT(*), COUNT(COUNT(AVG(x''))), GROUP_CONCAT(SUM(vt1.c1)), vt2.c0, vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (x'') UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND((NOT (vt1.c0)))))AND(((vt1.c1)AND(v0.c0)))))OR(((vt1.c1)+(v0.c0)))))OR(NULL COLLATE RTRIM));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND((NOT (vt1.c0)))))AND(((vt1.c1)AND(v0.c0)))))OR(((vt1.c1)+(v0.c0)))))OR(NULL COLLATE RTRIM)) WHERE (CAST((NOT (vt1.c1)) AS REAL)) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND((NOT (vt1.c0)))))AND(((vt1.c1)AND(v0.c0)))))OR(((vt1.c1)+(v0.c0)))))OR(NULL COLLATE RTRIM)) WHERE ((NOT (CAST((NOT (vt1.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND((NOT (vt1.c0)))))AND(((vt1.c1)AND(v0.c0)))))OR(((vt1.c1)+(v0.c0)))))OR(NULL COLLATE RTRIM)) WHERE (((CAST((NOT (vt1.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND((NOT (vt1.c0)))))AND(((vt1.c1)AND(v0.c0)))))OR(((vt1.c1)+(v0.c0)))))OR(NULL COLLATE RTRIM));
SELECT ALL vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 WHERE (((vt2.c0 COLLATE BINARY)|(UPPER(vt2.c0)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt0 WHERE ((NOT (((vt2.c0 COLLATE BINARY)|(UPPER(vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt0 WHERE (((((vt2.c0 COLLATE BINARY)|(UPPER(vt2.c0)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT ALL v0.c0, vt2.c0, vt1.c0, vt1.c1 FROM vt2 RIGHT OUTER JOIN vt1 ON (((((((vt1.c1, v0.c0, vt2.c0))<=((vt1.c1, v0.c0, vt1.c0))))AND(vt1.c1)))AND(UPPER(vt2.c0))) RIGHT OUTER JOIN v0 ON 'ﴤ9n&PUG' GROUP BY v0.c0, vt2.c0, vt1.c0, vt1.c1;
SELECT * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c1)))+((NOT (vt1.c0))));
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c1)))+((NOT (vt1.c0)))) WHERE (((LOWER(DISTINCT vt1.c1))-(((v0.c0)<<(vt1.c0))))) UNION ALL SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c1)))+((NOT (vt1.c0)))) WHERE ((NOT (((LOWER(DISTINCT vt1.c1))-(((v0.c0)<<(vt1.c0))))))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c1)))+((NOT (vt1.c0)))) WHERE (((((LOWER(DISTINCT vt1.c1))-(((v0.c0)<<(vt1.c0))))) ISNULL));
SELECT * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c1)))+((NOT (vt1.c0))));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (+ (CAST(vt1.c0 AS BLOB)));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (+ (CAST(vt1.c0 AS BLOB))) WHERE (IFNULL('-0.0', (NULL IN ()))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (+ (CAST(vt1.c0 AS BLOB))) WHERE ((NOT (IFNULL('-0.0', (NULL IN ()))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (+ (CAST(vt1.c0 AS BLOB))) WHERE (((IFNULL('-0.0', (NULL IN ()))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (+ (CAST(vt1.c0 AS BLOB)));
SELECT ALL v0.c0, vt1.c1 FROM vt0 NOT INDEXED, v0, vt1 GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE, ((vt1.c1)<(vt1.c0)))) GROUP BY v0.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((NOT (TRIM(DISTINCT vt0.c0 COLLATE NOCASE, ((vt1.c1)<(vt1.c0)))))) GROUP BY v0.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE (((TRIM(DISTINCT vt0.c0 COLLATE NOCASE, ((vt1.c1)<(vt1.c0)))) ISNULL)) GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM vt0 NOT INDEXED, v0, vt1 GROUP BY v0.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1 HAVING AVG(((vt1.c1)GLOB(vt1.c1))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1 HAVING (NOT (AVG(((vt1.c1)GLOB(vt1.c1))))) UNION ALL SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1 HAVING ((AVG(((vt1.c1)GLOB(vt1.c1)))) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1 HAVING AVG(((vt1.c1)GLOB(vt1.c1))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1 HAVING (NOT (AVG(((vt1.c1)GLOB(vt1.c1))))) UNION ALL SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1 HAVING ((AVG(((vt1.c1)GLOB(vt1.c1)))) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt2, vt1, v0 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT * FROM v0, vt0, vt1;
SELECT ALL * FROM v0, vt0, vt1 WHERE ((((((vt0.c0, vt1.c1, vt1.c1))<=((vt1.c1, vt1.c0, vt1.c0))))<(((vt1.c1)<=(v0.c0))))) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((NOT ((((((vt0.c0, vt1.c1, vt1.c1))<=((vt1.c1, vt1.c0, vt1.c0))))<(((vt1.c1)<=(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((((((((vt0.c0, vt1.c1, vt1.c1))<=((vt1.c1, vt1.c0, vt1.c0))))<(((vt1.c1)<=(v0.c0))))) ISNULL));
SELECT * FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c1)OR(vt1.c1))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (vt1.c1))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (((((vt1.c1)OR(vt1.c1))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (vt1.c1))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS NUMERIC)) BETWEEN ((~ (vt2.c0))) AND (vt2.c0 COLLATE BINARY))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((CAST(vt2.c0 AS NUMERIC)) BETWEEN ((~ (vt2.c0))) AND (vt2.c0 COLLATE BINARY))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((CAST(vt2.c0 AS NUMERIC)) BETWEEN ((~ (vt2.c0))) AND (vt2.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((CHANGES()) BETWEEN (((vt2.c0)>>(vt2.c0))) AND ((((vt2.c0))=((vt2.c0))))) GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((CHANGES()) BETWEEN (((vt2.c0)>>(vt2.c0))) AND ((((vt2.c0))=((vt2.c0))))) GROUP BY v0.c0, vt2.c0 HAVING SUM(MIN(vt2.c0)) UNION ALL SELECT v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((CHANGES()) BETWEEN (((vt2.c0)>>(vt2.c0))) AND ((((vt2.c0))=((vt2.c0))))) GROUP BY v0.c0, vt2.c0 HAVING (NOT (SUM(MIN(vt2.c0)))) UNION ALL SELECT v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((CHANGES()) BETWEEN (((vt2.c0)>>(vt2.c0))) AND ((((vt2.c0))==((vt2.c0))))) GROUP BY v0.c0, vt2.c0 HAVING ((SUM(MIN(vt2.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON '';
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON '' WHERE (((TYPEOF(vt2.c0))>((vt2.c0 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON '' WHERE ((NOT (((TYPEOF(vt2.c0))>((vt2.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON '' WHERE (((((TYPEOF(vt2.c0))>((vt2.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON '';
SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0;
SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, v0 NOT INDEXED, vt0 WHERE ('-1938942678') GROUP BY vt1.c1, vt2.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, v0, vt0 WHERE ((NOT ('-1938942678'))) GROUP BY vt1.c1, vt2.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, v0, vt0 WHERE ((('-1938942678') ISNULL)) GROUP BY vt1.c1, vt2.c0, vt0.c0;
SELECT vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c1, vt2.c0, vt0.c0;
SELECT ALL v0.c0 FROM vt2, vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt2, vt0, v0 GROUP BY v0.c0 HAVING CASE AVG(MAX(vt0.c0))  WHEN TOTAL(SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt2.c0))))))) THEN MAX(SUM(MIN(MIN(MAX('0.8257072932271007'))))) END UNION ALL SELECT v0.c0 FROM vt2, vt0, v0 GROUP BY v0.c0 HAVING (NOT (CASE AVG(MAX(vt0.c0))  WHEN TOTAL(SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt2.c0))))))) THEN MAX(SUM(MIN(MIN(MAX('0.8257072932271007'))))) END)) UNION ALL SELECT ALL v0.c0 FROM vt2, vt0, v0 GROUP BY v0.c0 HAVING ((CASE AVG(MAX(vt0.c0))  WHEN TOTAL(SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt2.c0))))))) THEN MAX(SUM(MIN(MIN(MAX('0.8257072932271007'))))) END) ISNULL);
SELECT * FROM vt2 INNER JOIN v0 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (NULL) AND (((v0.c0)&(v0.c0))));
SELECT * FROM vt2 INNER JOIN v0 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (NULL) AND (((v0.c0)&(v0.c0)))) WHERE ((('䭛V-F%*yCn')<((('729346673') NOT NULL)))) UNION ALL SELECT * FROM vt2 INNER JOIN v0 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (NULL) AND (((v0.c0)&(v0.c0)))) WHERE ((NOT ((('䭛V-F%*yCn')<((('729346673') NOT NULL)))))) UNION ALL SELECT ALL * FROM vt2 INNER JOIN v0 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (NULL) AND (((v0.c0)&(v0.c0)))) WHERE ((((('䭛V-F%*yCn')<((('729346673') NOT NULL)))) ISNULL));
SELECT * FROM vt2 INNER JOIN v0 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (NULL) AND (((v0.c0)&(v0.c0))));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt1.c0))) BETWEEN ((- (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1)))));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt1.c0))) BETWEEN ((- (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))))) WHERE ((((vt1.c0)-(vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt1.c0))) BETWEEN ((- (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))))) WHERE ((NOT ((((vt1.c0)-(vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt1.c0))) BETWEEN ((- (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))))) WHERE ((((((vt1.c0)-(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt1.c0))) BETWEEN ((- (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1)))));
SELECT ALL vt1.c1 FROM vt0, vt1, v0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1, v0 WHERE (TRIM((- (vt1.c1)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1, v0 WHERE ((NOT (TRIM((- (vt1.c1)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1, v0 WHERE (((TRIM((- (vt1.c1)))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1, v0 GROUP BY vt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(CASE WHEN COUNT(*) THEN COUNT(*) END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CASE WHEN COUNT(*) THEN COUNT(*) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(CASE WHEN COUNT(*) THEN COUNT(*) END)) ISNULL);
SELECT * FROM vt0, vt2, vt1;
SELECT ALL * FROM vt0, vt2, vt1 WHERE (CAST(vt2.c0 COLLATE BINARY AS BLOB)) UNION ALL SELECT * FROM vt0, vt2, vt1 WHERE ((NOT (CAST(vt2.c0 COLLATE BINARY AS BLOB)))) UNION ALL SELECT ALL * FROM vt0, vt2, vt1 WHERE (((CAST(vt2.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT * FROM vt0, vt2, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((6.98323335E8) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((6.98323335E8) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((6.98323335E8) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt2, vt1 RIGHT OUTER JOIN vt0 ON 0.5661190365548349 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt2, vt1 RIGHT OUTER JOIN vt0 ON 0.5661190365548349 WHERE (v0.c0) GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt2, vt1 RIGHT OUTER JOIN vt0 ON 0.5661190365548349 WHERE ((NOT (v0.c0))) GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt2, vt1 RIGHT OUTER JOIN vt0 ON 0.5661190365548349 WHERE (((v0.c0) ISNULL)) GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt2, vt1 RIGHT OUTER JOIN vt0 ON 0.5661190365548349 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST('Us42K㸒a' COLLATE NOCASE AS NUMERIC) INNER JOIN vt2 ON CAST(((vt1.c1)GLOB(vt1.c1)) AS TEXT) GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST('Us42K㸒a' COLLATE NOCASE AS NUMERIC) INNER JOIN vt2 ON CAST(((vt1.c1)GLOB(vt1.c1)) AS TEXT) GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0 HAVING ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (MIN(vt1.c1))))GLOB(GROUP_CONCAT(MAX(MAX(SUM(AVG(vt1.c0))))))) UNION ALL SELECT vt0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST('Us42K㸒a' COLLATE NOCASE AS NUMERIC) INNER JOIN vt2 ON CAST(((vt1.c1)GLOB(vt1.c1)) AS TEXT) GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0 HAVING (NOT (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (MIN(vt1.c1))))GLOB(GROUP_CONCAT(MAX(MAX(SUM(AVG(vt1.c0))))))))) UNION ALL SELECT vt0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST('Us42K㸒a' COLLATE NOCASE AS NUMERIC) INNER JOIN vt2 ON CAST(((vt1.c1)GLOB(vt1.c1)) AS TEXT) GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0 HAVING ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (MIN(vt1.c1))))GLOB(GROUP_CONCAT(MAX(MAX(SUM(AVG(vt1.c0)))))))) ISNULL);
SELECT ALL * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE (((ROUND(NULL, vt0.c0)) NOT NULL)) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT (((ROUND(NULL, vt0.c0)) NOT NULL)))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE (((((ROUND(NULL, vt0.c0)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM v0, vt0, vt2, vt1;
SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE (CAST(((v0.c0)IS(v0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE ((NOT (CAST(((v0.c0)IS(v0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE (((CAST(((v0.c0)IS(v0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt2, vt1;
SELECT vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt0.c0 INNER JOIN vt2 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))OR(v0.c0)), HEX(vt1.c1), vt2.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END, (+ (vt0.c0)), CAST(0X176efe18 AS REAL)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt0.c0 INNER JOIN vt2 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))OR(v0.c0)), HEX(vt1.c1), vt2.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END, (+ (vt0.c0)), CAST(0X176efe18 AS REAL)))) WHERE (0.5204203942208894) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt0.c0 INNER JOIN vt2 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))OR(v0.c0)), HEX(vt1.c1), vt2.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END, (+ (vt0.c0)), CAST(0X176efe18 AS REAL)))) WHERE ((NOT (0.5204203942208894))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt0.c0 INNER JOIN vt2 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))OR(v0.c0)), HEX(vt1.c1), vt2.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END, (+ (vt0.c0)), CAST(0x176efe18 AS REAL)))) WHERE (((0.5204203942208894) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt0.c0 INNER JOIN vt2 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))OR(v0.c0)), HEX(vt1.c1), vt2.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END, (+ (vt0.c0)), CAST(0X176efe18 AS REAL)))) GROUP BY vt0.c0;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt0, vt2 NATURAL JOIN vt1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt0, vt2 NATURAL JOIN vt1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING GROUP_CONCAT(((COUNT(*))|(v0.c0))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt0, vt2 NATURAL JOIN vt1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(*))|(v0.c0))))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt0, vt2 NATURAL JOIN vt1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING ((GROUP_CONCAT(((COUNT(*))|(v0.c0)))) ISNULL);
SELECT vt1.c1, vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON ((((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) ISNULL);
SELECT ALL vt1.c1, vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON ((((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) ISNULL) WHERE (vt2.c0) UNION ALL SELECT vt1.c1, vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON ((((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) ISNULL) WHERE ((NOT (vt2.c0))) UNION ALL SELECT vt1.c1, vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON ((((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) ISNULL) WHERE (((vt2.c0) ISNULL));
SELECT vt1.c1, vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON ((((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) ISNULL);
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((CASE v0.c0  WHEN '0.47544662966857953' THEN vt1.c0 WHEN x'' THEN vt1.c1 WHEN v0.c0 THEN 0.630076837548708 ELSE vt1.c0 END IN ())) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((CASE v0.c0  WHEN '0.47544662966857953' THEN vt1.c0 WHEN x'' THEN vt1.c1 WHEN v0.c0 THEN 0.630076837548708 ELSE vt1.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((CASE v0.c0  WHEN '0.47544662966857953' THEN vt1.c0 WHEN x'' THEN vt1.c1 WHEN v0.c0 THEN 0.630076837548708 ELSE vt1.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((NULLIF(vt2.c0, vt2.c0))<>(CAST('1701133986' AS BLOB)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((NULLIF(vt2.c0, vt2.c0))<>(CAST('1701133986' AS BLOB)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((NULLIF(vt2.c0, vt2.c0))!=(CAST('1701133986' AS BLOB)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING '-194305594' UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT ('-194305594')) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (('-194305594') ISNULL);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING '-194305594' UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT ('-194305594')) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (('-194305594') ISNULL);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt2, v0 INNER JOIN vt1 ON SQLITE_VERSION() GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)/(((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))AND(NULL))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0)/(((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))AND(NULL))))))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0)/(((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))AND(NULL))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM v0, vt1, vt2;
SELECT DISTINCT vt1.c0, vt1.c1 FROM v0, vt1, vt2 WHERE ((((v0.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END)))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM v0, vt1, vt2 WHERE ((NOT ((((v0.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END)))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM v0, vt1, vt2 WHERE ((((((v0.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END)))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM v0, vt1, vt2;
SELECT ALL vt1.c1, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c1, vt2.c0;
SELECT vt1.c1, vt2.c0 FROM vt0, vt2, v0, vt1 WHERE (((((((vt2.c0)AND(v0.c0)))AND(v0.c0)))!=(((((vt2.c0)AND(0.5069858119924082)))AND(v0.c0))))) GROUP BY vt1.c1, vt2.c0 UNION SELECT ALL vt1.c1, vt2.c0 FROM vt0, vt2, v0, vt1 WHERE ((NOT (((((((vt2.c0)AND(v0.c0)))AND(v0.c0)))<>(((((vt2.c0)AND(0.5069858119924082)))AND(v0.c0))))))) GROUP BY vt1.c1, vt2.c0 UNION SELECT vt1.c1, vt2.c0 FROM vt0, vt2, v0, vt1 WHERE (((((((((vt2.c0)AND(v0.c0)))AND(v0.c0)))<>(((((vt2.c0)AND(0.5069858119924082)))AND(v0.c0))))) ISNULL)) GROUP BY vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c1, vt2.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING SUM(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((SUM(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (UNLIKELY(((vt0.c0) BETWEEN (v0.c0) AND (x'')))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (UNLIKELY(((vt0.c0) BETWEEN (v0.c0) AND (x'')))))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((UNLIKELY(((vt0.c0) BETWEEN (v0.c0) AND (x'')))) ISNULL));
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE (CASE (('Xؿ') BETWEEN (vt2.c0) AND (vt1.c0))  WHEN (((vt2.c0, vt1.c1, vt1.c1, vt2.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c1, vt2.c0, vt1.c1, vt1.c1)) AND ((vt2.c0, vt1.c1, vt2.c0, vt1.c1, vt1.c1))) THEN (vt1.c1 IN ()) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (CASE (('Xؿ') BETWEEN (vt2.c0) AND (vt1.c0))  WHEN (((vt2.c0, vt1.c1, vt1.c1, vt2.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c1, vt2.c0, vt1.c1, vt1.c1)) AND ((vt2.c0, vt1.c1, vt2.c0, vt1.c1, vt1.c1))) THEN (vt1.c1 IN ()) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((CASE (('Xؿ') BETWEEN (vt2.c0) AND (vt1.c0))  WHEN (((vt2.c0, vt1.c1, vt1.c1, vt2.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c1, vt2.c0, vt1.c1, vt1.c1)) AND ((vt2.c0, vt1.c1, vt2.c0, vt1.c1, vt1.c1))) THEN (vt1.c1 IN ()) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT ALL v0.c0, vt1.c1 FROM vt1, v0 GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM vt1, v0 WHERE (((((((((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))AND(('Dpǜ' IN (v0.c0)))))OR(vt1.c1)))OR((((vt1.c1, v0.c0, vt1.c1))>((vt1.c0, vt1.c1, vt1.c0))))))AND('鮝'))) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT (((((((((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))AND(('Dpǜ' IN (v0.c0)))))OR(vt1.c1)))OR((((vt1.c1, v0.c0, vt1.c1))>((vt1.c0, vt1.c1, vt1.c0))))))AND('鮝'))))) GROUP BY v0.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c1 FROM vt1, v0 WHERE (((((((((((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))AND(('Dpǜ' IN (v0.c0)))))OR(vt1.c1)))OR((((vt1.c1, v0.c0, vt1.c1))>((vt1.c0, vt1.c1, vt1.c0))))))AND('鮝'))) ISNULL)) GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM vt1, v0 GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0;
SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0;
SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0;
SELECT vt0.c0 FROM vt2, vt1 NATURAL JOIN vt0;
SELECT vt0.c0 FROM vt2, vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))AND('572180606')))AND(vt2.c0))) UNION ALL SELECT vt0.c0 FROM vt2, vt1 NATURAL JOIN vt0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))AND('572180606')))AND(vt2.c0))))) UNION ALL SELECT vt0.c0 FROM vt2, vt1 NATURAL JOIN vt0 WHERE (((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))AND('572180606')))AND(vt2.c0))) ISNULL));
SELECT vt0.c0 FROM vt2, vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON TRIM(((vt2.c0)&(vt0.c0)), ((vt2.c0) IS FALSE));
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON TRIM(((vt2.c0)&(vt0.c0)), ((vt2.c0) IS FALSE)) WHERE (((LIKELIHOOD(v0.c0, 0.6972939257607804))-(((0.27442117568455804)<=(vt2.c0))))) UNION SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON TRIM(((vt2.c0)&(vt0.c0)), ((vt2.c0) IS FALSE)) WHERE ((NOT (((LIKELIHOOD(v0.c0, 0.6972939257607804))-(((0.27442117568455804)<=(vt2.c0))))))) UNION SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON TRIM(((vt2.c0)&(vt0.c0)), ((vt2.c0) IS FALSE)) WHERE (((((LIKELIHOOD(v0.c0, 0.6972939257607804))-(((0.27442117568455804)<=(vt2.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON TRIM(((vt2.c0)&(vt0.c0)), ((vt2.c0) IS FALSE));
SELECT ALL vt1.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, vt2, v0 WHERE (HEX((NOT (vt2.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0, vt2, v0 WHERE ((NOT (HEX((NOT (vt2.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, vt2, v0 WHERE (((HEX((NOT (vt2.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((MAX(vt2.c0))OR(((COUNT(GROUP_CONCAT(MAX(vt2.c0))))GLOB(vt2.c0)))))AND((NOT (vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((((MAX(vt2.c0))OR(((COUNT(GROUP_CONCAT(MAX(vt2.c0))))GLOB(vt2.c0)))))AND((NOT (vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((((MAX(vt2.c0))OR(((COUNT(GROUP_CONCAT(MAX(vt2.c0))))GLOB(vt2.c0)))))AND((NOT (vt2.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (('()P' IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (('()P' IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE (((('()P' IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT v0.c0 FROM v0, vt2, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL);
SELECT DISTINCT v0.c0 FROM v0, vt2, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) WHERE (MAX(v0.c0, vt1.c0) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0, vt2, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) WHERE ((NOT (MAX(v0.c0, vt1.c0) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0, vt2, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) WHERE (((MAX(v0.c0, vt1.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt2, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL);
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON 0.9264519066649444 CROSS JOIN vt2 ON vt2.c0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON 0.9264519066649444 CROSS JOIN vt2 ON vt2.c0 WHERE (json_remove((vt1.c1 IN (vt1.c0)), ((vt1.c1) ISNULL), json_array(vt2.c0, vt1.c1), ((vt1.c1)<(x'')))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON 0.9264519066649444 CROSS JOIN vt2 ON vt2.c0 WHERE ((NOT (json_remove((vt1.c1 IN (vt1.c0)), ((vt1.c1) ISNULL), json_array(vt2.c0, vt1.c1), ((vt1.c1)<(x'')))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON 0.9264519066649444 CROSS JOIN vt2 ON vt2.c0 WHERE (((json_remove((vt1.c1 IN (vt1.c0)), ((vt1.c1) ISNULL), json_array(vt2.c0, vt1.c1), ((vt1.c1)<(x'')))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON 0.9264519066649444 CROSS JOIN vt2 ON vt2.c0 GROUP BY v0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (MAX(vt2.c0) IN (((vt2.c0)>>(vt2.c0)), MIN(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((MAX(vt2.c0) IN (((vt2.c0)>>(vt2.c0)), MIN(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((MAX(vt2.c0) IN (((vt2.c0)>>(vt2.c0)), MIN(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (MAX(vt2.c0) IN (((vt2.c0)>>(vt2.c0)), MIN(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((MAX(vt2.c0) IN (((vt2.c0)>>(vt2.c0)), MIN(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((MAX(vt2.c0) IN (((vt2.c0)>>(vt2.c0)), MIN(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2;
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2 WHERE (0.7694532842909952) UNION SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2 WHERE ((NOT (0.7694532842909952))) UNION SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2 WHERE (((0.7694532842909952) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 WHERE ((((((vt2.c0) NOTNULL)))<(((((vt2.c0))<((vt2.c0))))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0 WHERE ((NOT ((((((vt2.c0) NOTNULL)))<(((((vt2.c0))<((vt2.c0))))))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt2, vt0 WHERE ((((((((vt2.c0) NOTNULL)))<(((((vt2.c0))<((vt2.c0))))))) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING TOTAL(SUM(TOTAL(x''))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (TOTAL(SUM(TOTAL(x''))))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((TOTAL(SUM(TOTAL(x'')))) ISNULL);
SELECT ALL * FROM vt2, v0, vt0 NATURAL JOIN vt1;
SELECT * FROM vt2, v0, vt0 NATURAL JOIN vt1 WHERE (TRIM(((vt0.c0)AND(vt1.c0)), vt0.c0 COLLATE NOCASE)) UNION ALL SELECT * FROM vt2, v0, vt0 NATURAL JOIN vt1 WHERE ((NOT (TRIM(((vt0.c0)AND(vt1.c0)), vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT * FROM vt2, v0, vt0 NATURAL JOIN vt1 WHERE (((TRIM(((vt0.c0)AND(vt1.c0)), vt0.c0 COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM vt2, v0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM v0, vt2 FULL OUTER JOIN vt0 ON (~ ('-2046764007'));
SELECT DISTINCT * FROM v0, vt2 FULL OUTER JOIN vt0 ON (~ ('-2046764007')) WHERE ((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))>=((x'30dac95487ac')))) UNION SELECT DISTINCT * FROM v0, vt2 FULL OUTER JOIN vt0 ON (~ ('-2046764007')) WHERE ((NOT ((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))>=((x'30dac95487ac')))))) UNION SELECT DISTINCT * FROM v0, vt2 FULL OUTER JOIN vt0 ON (~ ('-2046764007')) WHERE ((((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))>=((x'30dac95487ac')))) ISNULL));
SELECT DISTINCT * FROM v0, vt2 FULL OUTER JOIN vt0 ON (~ ('-2046764007'));
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT vt1.c0, v0.c0, vt1.c1 FROM v0, vt0, vt1 WHERE (json(CAST(v0.c0 AS REAL))) GROUP BY vt1.c0, v0.c0, vt1.c1 UNION SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM v0, vt0, vt1 WHERE ((NOT (json(CAST(v0.c0 AS REAL))))) GROUP BY vt1.c0, v0.c0, vt1.c1 UNION SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM v0, vt0, vt1 WHERE (((json(CAST(v0.c0 AS REAL))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt2 ON 0.8811500174883339;
SELECT ALL vt2.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt2 ON 0.8811500174883339 WHERE ((((((vt1.c0))>=((v0.c0))))IS NOT(vt1.c0))) UNION ALL SELECT vt2.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt2 ON 0.8811500174883339 WHERE ((NOT ((((((vt1.c0))>=((v0.c0))))IS NOT(vt1.c0))))) UNION ALL SELECT vt2.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt2 ON 0.8811500174883339 WHERE ((((((((vt1.c0))>=((v0.c0))))IS NOT(vt1.c0))) ISNULL));
SELECT ALL vt2.c0, vt1.c1 FROM v0, vt1 LEFT OUTER JOIN vt2 ON 0.8811500174883339;
SELECT DISTINCT * FROM vt1, v0, vt0, vt2;
SELECT DISTINCT * FROM vt1, v0, vt0, vt2 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, v0, vt0, vt2 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, v0, vt0, vt2 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0, vt2;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, vt1 INNER JOIN vt2 ON CAST((- (vt0.c0)) AS INTEGER) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0, vt1 INNER JOIN vt2 ON CAST((- (vt0.c0)) AS INTEGER) WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0, vt1 INNER JOIN vt2 ON CAST((- (vt0.c0)) AS INTEGER) WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) NOTNULL)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, vt1 NOT INDEXED INNER JOIN vt2 ON CAST((- (vt0.c0)) AS INTEGER) WHERE (((((CAST(vt1.c0 AS TEXT)) NOTNULL)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, vt1 INNER JOIN vt2 ON CAST((- (vt0.c0)) AS INTEGER) GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((0.03334081180906312) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ('-1020114961'))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((0.03334081180906312) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ('-1020114961'))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((0.03334081180906312) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ('-1020114961'))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON v0.c0 CROSS JOIN vt1 ON 0.5532161880124168 FULL OUTER JOIN v0 ON (CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END IN ());
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((x'', ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)||(v0.c0)), ((v0.c0)/(v0.c0)), v0.c0))>((x'' COLLATE BINARY, CASE WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN ()), ((((NULL)OR(v0.c0)))AND(v0.c0)), DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((x'', ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)||(v0.c0)), ((v0.c0)/(v0.c0)), v0.c0))>((x'' COLLATE BINARY, CASE WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN ()), ((((NULL)OR(v0.c0)))AND(v0.c0)), DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((x'', ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)||(v0.c0)), ((v0.c0)/(v0.c0)), v0.c0))>((x'' COLLATE BINARY, CASE WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN ()), ((((NULL)OR(v0.c0)))AND(v0.c0)), DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MAX(CAST(GROUP_CONCAT(COUNT(*)) AS NUMERIC)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MAX(CAST(GROUP_CONCAT(COUNT(*)) AS NUMERIC)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MAX(CAST(GROUP_CONCAT(COUNT(*)) AS NUMERIC))) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (x'')))) AND (((+ (0.07847450180166016)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN (((~ (x'')))) AND (((+ (0.07847450180166016)))))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (((~ (x'')))) AND (((+ (0.07847450180166016)))))) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'3a14')))AND(vt0.c0)))OR(0.26392613106439045)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)=(vt0.c0))) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'3a14')))AND(vt0.c0)))OR(0.26392613106439045)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'3a14')))AND(vt0.c0)))OR(0.26392613106439045)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (v0.c0)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((~ (v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((GROUP_CONCAT(SUM(SUM(vt1.c1))) COLLATE NOCASE)/(CAST(vt1.c0 AS BLOB))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (((GROUP_CONCAT(SUM(SUM(vt1.c1))) COLLATE NOCASE)/(CAST(vt1.c0 AS BLOB))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((GROUP_CONCAT(SUM(SUM(vt1.c1))) COLLATE NOCASE)/(CAST(vt1.c0 AS BLOB)))) ISNULL);
SELECT ALL * FROM vt2, vt0, v0;
SELECT * FROM vt2, vt0, v0 WHERE ((((((((((((v0.c0, vt0.c0, v0.c0, vt2.c0, vt2.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, vt2.c0, x'')) AND ((vt2.c0, vt2.c0, x'cdd5', v0.c0, v0.c0))))AND((vt2.c0 IN ()))))OR(LOWER(v0.c0))))AND((((vt0.c0))<=((vt0.c0))))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(v0.c0))))) UNION ALL SELECT * FROM vt2, vt0, v0 WHERE ((NOT ((((((((((((v0.c0, vt0.c0, v0.c0, vt2.c0, vt2.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, vt2.c0, x'')) AND ((vt2.c0, vt2.c0, x'cdd5', v0.c0, v0.c0))))AND((vt2.c0 IN ()))))OR(LOWER(v0.c0))))AND((((vt0.c0))<=((vt0.c0))))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL * FROM vt2, vt0, v0 WHERE ((((((((((((((v0.c0, vt0.c0, v0.c0, vt2.c0, vt2.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, vt2.c0, x'')) AND ((vt2.c0, vt2.c0, x'cdd5', v0.c0, v0.c0))))AND((vt2.c0 IN ()))))OR(LOWER(v0.c0))))AND((((vt0.c0))<=((vt0.c0))))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL * FROM vt2, vt0, v0;
SELECT DISTINCT * FROM vt0, vt2, vt1, v0;
SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, vt1, v0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 WHERE ((((((((((vt2.c0 IN (vt1.c0, vt2.c0)))OR(((x'')>=(vt1.c1)))))OR(json_array(vt1.c0, vt1.c0, vt1.c1, vt1.c0))))OR(vt2.c0 COLLATE NOCASE)))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE ((NOT ((((((((((vt2.c0 IN (vt1.c0, vt2.c0)))OR(((x'')>=(vt1.c1)))))OR(json_array(vt1.c0, vt1.c0, vt1.c1, vt1.c0))))OR(vt2.c0 COLLATE NOCASE)))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt1 WHERE ((((((((((((vt2.c0 IN (vt1.c0, vt2.c0)))OR(((x'')>=(vt1.c1)))))OR(json_array(vt1.c0, vt1.c0, vt1.c1, vt1.c0))))OR(vt2.c0 COLLATE NOCASE)))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(((((((((AVG(MAX(TOTAL(SUM(COUNT(*))))))AND(v0.c0)))OR(MAX(COUNT(*)))))AND(v0.c0)))AND(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(((((((((AVG(MAX(TOTAL(SUM(COUNT(*))))))AND(v0.c0)))OR(MAX(COUNT(*)))))AND(v0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(((((((((AVG(MAX(TOTAL(SUM(COUNT(*))))))AND(v0.c0)))OR(MAX(COUNT(*)))))AND(v0.c0)))AND(v0.c0)))) ISNULL);
SELECT vt2.c0 FROM v0, vt2, vt0, vt1;
SELECT vt2.c0 FROM v0, vt2, vt0, vt1 WHERE (((NULL)LIKE((vt1.c0 IN (v0.c0))))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt2, vt0, vt1 WHERE ((NOT (((NULL)LIKE((vt1.c0 IN (v0.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt2, vt0, vt1 WHERE (((((NULL)LIKE((vt1.c0 IN (v0.c0))))) ISNULL));
SELECT vt2.c0 FROM v0, vt2, vt0, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((((LOWER(DISTINCT vt1.c1))OR((((vt1.c1))<=((vt0.c0))))))OR(((vt0.c0)<<(vt2.c0)))))AND((((vt2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt2.c0))))))AND((+ (vt2.c0)))) INNER JOIN vt2 ON ((((((((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))AND(((((vt1.c1)OR(vt2.c0)))OR(vt1.c1)))))OR(CAST(vt1.c1 AS INTEGER))))OR(((vt1.c0)IS NOT(vt2.c0)))))AND(((vt2.c0) BETWEEN (861946401) AND (vt2.c0))));
SELECT vt1.c0, v0.c0, vt0.c0, vt2.c0 FROM vt0, v0 CROSS JOIN vt2 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END FULL OUTER JOIN vt1 ON UPPER(DISTINCT ((vt2.c0) IS FALSE)) GROUP BY vt1.c0, v0.c0, vt0.c0, vt2.c0;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1 HAVING vt2.c0 UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1 HAVING ((vt2.c0) ISNULL);
SELECT vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1 HAVING vt2.c0 UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1 HAVING ((vt2.c0) ISNULL);
SELECT vt0.c0, vt1.c1 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0, vt1.c1;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE (v0.c0) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0, v0;
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, v0 WHERE (((((vt1.c0) IS FALSE))IS(v0.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((vt1.c0) IS FALSE))IS(v0.c0 COLLATE RTRIM))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, v0 WHERE (((((((vt1.c0) IS FALSE))IS(v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0, vt2.c0;
SELECT vt1.c1, vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0, vt2.c0 HAVING (((COUNT(SUM(COUNT(*))), vt1.c1, MIN(vt0.c0))) NOT BETWEEN ((SUM(vt1.c1), COUNT(0.8081665115939669), CASE WHEN COUNT(*) THEN GROUP_CONCAT(AVG(TOTAL(GROUP_CONCAT(AVG(COUNT(*)))))) WHEN vt0.c0 THEN SUM(MIN(vt1.c1)) WHEN vt1.c0 THEN vt0.c0 WHEN COUNT(*) THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 END)) AND ((MIN(COUNT(*)), SUM(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(*)))))), COUNT(*)))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0, vt2.c0 HAVING (NOT ((((COUNT(SUM(COUNT(*))), vt1.c1, MIN(vt0.c0))) NOT BETWEEN ((SUM(vt1.c1), COUNT(0.8081665115939669), CASE WHEN COUNT(*) THEN GROUP_CONCAT(AVG(TOTAL(GROUP_CONCAT(AVG(COUNT(*)))))) WHEN vt0.c0 THEN SUM(MIN(vt1.c1)) WHEN vt1.c0 THEN vt0.c0 WHEN COUNT(*) THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 END)) AND ((MIN(COUNT(*)), SUM(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(*)))))), COUNT(*)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0, vt2.c0 HAVING (((((COUNT(SUM(COUNT(*))), vt1.c1, MIN(vt0.c0))) NOT BETWEEN ((SUM(vt1.c1), COUNT(0.8081665115939669), CASE WHEN COUNT(*) THEN GROUP_CONCAT(AVG(TOTAL(GROUP_CONCAT(AVG(COUNT(*)))))) WHEN vt0.c0 THEN SUM(MIN(vt1.c1)) WHEN vt1.c0 THEN vt0.c0 WHEN COUNT(*) THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 END)) AND ((MIN(COUNT(*)), SUM(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(*)))))), COUNT(*))))) ISNULL);
SELECT ALL SUM(vt1.c0 COLLATE BINARY) FROM vt1, v0 ORDER BY ((((v0.c0 COLLATE RTRIM)OR(((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(UNLIKELY(DISTINCT vt1.c1)));
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), CAST(vt0.c0 AS INTEGER), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((((vt0.c0))>=((vt0.c0))), (vt0.c0 IN ()), CAST(vt0.c0 AS REAL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), CAST(vt0.c0 AS INTEGER), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((((vt0.c0))>=((vt0.c0))), (vt0.c0 IN ()), CAST(vt0.c0 AS REAL))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), CAST(vt0.c0 AS INTEGER), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((((vt0.c0))>=((vt0.c0))), (vt0.c0 IN ()), CAST(vt0.c0 AS REAL))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM vt2 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt0.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, vt2, v0 WHERE (v0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, vt2, v0 WHERE ((NOT (v0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, vt2, v0 WHERE (((v0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt2 ON json_quote(((vt0.c0)=(v0.c0))) INNER JOIN vt0 ON (((((v0.c0)>(vt0.c0)), ((vt2.c0)+(vt2.c0)), LOWER(DISTINCT vt2.c0)))<>((((vt0.c0) NOT NULL), x'', (+ (vt2.c0)))));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (CAST(((')}[7W6郮')&(vt1.c0)) AS REAL)) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CAST(((')}[7W6郮')&(vt1.c0)) AS REAL)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((CAST(((')}[7W6郮')&(vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1, vt2, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2, v0 WHERE ((- (CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt2, v0 WHERE ((NOT ((- (CASE WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt2, v0 WHERE ((((- (CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2, v0 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(vt2.c0) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(vt2.c0)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(vt2.c0) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(vt2.c0)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL * FROM v0, vt1, vt0;
SELECT * FROM v0, vt1, vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE x''  WHEN (((x''))<((vt0.c0))) THEN CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 END ELSE (~ (vt1.c1)) END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE x''  WHEN (((x''))<((vt0.c0))) THEN CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 END ELSE (~ (vt1.c1)) END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE x''  WHEN (((x''))<((vt0.c0))) THEN CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 END ELSE (~ (vt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c1 END AS BLOB) RIGHT OUTER JOIN vt2 ON NULLIF(((v0.c0)>(vt1.c1)), ((vt2.c0) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c1 END AS BLOB) RIGHT OUTER JOIN vt2 ON NULLIF(((v0.c0)>(vt1.c1)), ((vt2.c0) ISNULL)) WHERE ((((((vt1.c0) ISNULL), CASE vt1.c0  WHEN v0.c0 THEN vt2.c0 END, ((vt1.c1) BETWEEN (vt2.c0) AND (vt2.c0)), ((v0.c0)IS(vt2.c0)), vt1.c0 COLLATE BINARY))>=((x'1cbc', CASE WHEN v0.c0 THEN vt2.c0 END, ABS(DISTINCT vt2.c0), CAST(0xffffffffe8876287 AS REAL), ((vt1.c1) BETWEEN (vt2.c0) AND (vt1.c1)))))) GROUP BY vt2.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c1 END AS BLOB) RIGHT OUTER JOIN vt2 ON NULLIF(((v0.c0)>(vt1.c1)), ((vt2.c0) ISNULL)) WHERE ((NOT ((((((vt1.c0) ISNULL), CASE vt1.c0  WHEN v0.c0 THEN vt2.c0 END, ((vt1.c1) BETWEEN (vt2.c0) AND (vt2.c0)), ((v0.c0)IS(vt2.c0)), vt1.c0 COLLATE BINARY))>=((x'1cbc', CASE WHEN v0.c0 THEN vt2.c0 END, ABS(DISTINCT vt2.c0), CAST(0xffffffffe8876287 AS REAL), ((vt1.c1) BETWEEN (vt2.c0) AND (vt1.c1)))))))) GROUP BY vt2.c0, vt1.c0, vt1.c1 UNION SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c1 END AS BLOB) RIGHT OUTER JOIN vt2 ON NULLIF(((v0.c0)>(vt1.c1)), ((vt2.c0) ISNULL)) WHERE ((((((((vt1.c0) ISNULL), CASE vt1.c0  WHEN v0.c0 THEN vt2.c0 END, ((vt1.c1) BETWEEN (vt2.c0) AND (vt2.c0)), ((v0.c0)IS(vt2.c0)), vt1.c0 COLLATE BINARY))>=((x'1cbc', CASE WHEN v0.c0 THEN vt2.c0 END, ABS(DISTINCT vt2.c0), CAST(0Xffffffffe8876287 AS REAL), ((vt1.c1) BETWEEN (vt2.c0) AND (vt1.c1)))))) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c1 END AS BLOB) RIGHT OUTER JOIN vt2 ON NULLIF(((v0.c0)>(vt1.c1)), ((vt2.c0) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0;
SELECT vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0 HAVING SUM(v0.c0) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0 HAVING ((SUM(v0.c0)) ISNULL);
SELECT ALL vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0;
SELECT vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0 HAVING SUM(v0.c0) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0 HAVING ((SUM(v0.c0)) ISNULL);
SELECT ALL vt2.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON NULL GROUP BY vt2.c0, vt1.c1, vt0.c0;
SELECT * FROM v0, vt1, vt2, vt0;
SELECT * FROM v0, vt1, vt2, vt0 WHERE ((+ (((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))) UNION ALL SELECT ALL * FROM v0, vt1, vt2, vt0 WHERE ((NOT ((+ (((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))))) UNION ALL SELECT * FROM v0, vt1, vt2, vt0 WHERE ((((+ (((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))) ISNULL));
SELECT * FROM v0, vt1, vt2, vt0;
SELECT DISTINCT vt2.c0, vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2;
SELECT DISTINCT vt2.c0, vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE (((((vt2.c0)&(vt2.c0)))<((- (vt2.c0))))) UNION SELECT DISTINCT vt2.c0, vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE ((NOT (((((vt2.c0)&(vt2.c0)))<((- (vt2.c0))))))) UNION SELECT DISTINCT vt2.c0, vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE (((((((vt2.c0)&(vt2.c0)))<((- (vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1;
SELECT v0.c0, vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, vt1.c1, (NOT (NULL)))) AND (((+ (NULL)), ((vt0.c0) ISNULL), vt1.c0 COLLATE RTRIM)))) GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, vt1.c1, (NOT (NULL)))) AND (((+ (NULL)), ((vt0.c0) ISNULL), vt1.c0 COLLATE RTRIM)))))) GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, vt1.c1, (NOT (NULL)))) AND (((+ (NULL)), ((vt0.c0) ISNULL), vt1.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt1.c1;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (vt0.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((vt2.c0) IS FALSE) GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT v0.c0, vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (vt0.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((vt2.c0) IS FALSE) GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING AVG((+ (AVG(v0.c0)))) UNION ALL SELECT v0.c0, vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (vt0.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((vt2.c0) IS FALSE) GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING (NOT (AVG((+ (AVG(v0.c0)))))) UNION ALL SELECT v0.c0, vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (vt0.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((vt2.c0) IS FALSE) GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING ((AVG((+ (AVG(v0.c0))))) ISNULL);
SELECT vt2.c0 FROM vt2, v0;
SELECT ALL vt2.c0 FROM vt2, v0 WHERE ((((v0.c0, v0.c0, '-1821565508')) BETWEEN (((v0.c0 IN ()), TRIM(vt2.c0, vt2.c0), (~ (vt2.c0)))) AND ((((v0.c0)LIKE(vt2.c0)), ('Vs	}Kq' IN ()), LIKELIHOOD(vt2.c0, 0.4293919129414805))))) UNION ALL SELECT vt2.c0 FROM vt2, v0 WHERE ((NOT ((((v0.c0, v0.c0, '-1821565508')) BETWEEN (((v0.c0 IN ()), TRIM(vt2.c0, vt2.c0), (~ (vt2.c0)))) AND ((((v0.c0)LIKE(vt2.c0)), ('Vs	}Kq' IN ()), LIKELIHOOD(vt2.c0, 0.4293919129414805))))))) UNION ALL SELECT vt2.c0 FROM vt2, v0 WHERE ((((((v0.c0, v0.c0, '-1821565508')) BETWEEN (((v0.c0 IN ()), TRIM(vt2.c0, vt2.c0), (~ (vt2.c0)))) AND ((((v0.c0)LIKE(vt2.c0)), ('Vs	}Kq' IN ()), LIKELIHOOD(vt2.c0, 0.4293919129414805))))) ISNULL));
SELECT vt2.c0 FROM vt2, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((- (((x'')IS NOT(vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT ((- (((x'')IS NOT(vt0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((- (((x'')IS NOT(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (((vt0.c0, vt1.c1, vt2.c0)) NOT BETWEEN (((((v0.c0, vt0.c0, vt2.c0))<=((5.72234001E8, vt1.c1, v0.c0))), vt1.c0 COLLATE BINARY, ((('xؿ'))>((vt2.c0))))) AND ((CASE WHEN v0.c0 THEN vt2.c0 ELSE v0.c0 END, ((v0.c0)&(vt0.c0)), UNLIKELY(DISTINCT vt2.c0)))) LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE BINARY)<>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (x'c989')))) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING MIN(GROUP_CONCAT(0.4315702075508453)) UNION ALL SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING (NOT (MIN(GROUP_CONCAT(0.4315702075508453)))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING ((MIN(GROUP_CONCAT(0.4315702075508453))) ISNULL);
SELECT MIN(((vt2.c0)>=(vt2.c0 COLLATE BINARY))) FROM vt0, vt1, vt2 ORDER BY ((GLOB(vt2.c0, vt2.c0))OR(CASE WHEN vt2.c0 THEN '273903366' END)) ASC  NULLS LAST, '' ASC  NULLS FIRST;
SELECT ALL vt2.c0, vt1.c0 FROM v0, vt1, vt2;
SELECT ALL vt2.c0, vt1.c0 FROM v0, vt1, vt2 WHERE ((((vt1.c0 COLLATE BINARY))==(((+ (vt1.c1)))))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM v0, vt1, vt2 WHERE ((NOT ((((vt1.c0 COLLATE BINARY))=(((+ (vt1.c1)))))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM v0, vt1, vt2 WHERE ((((((vt1.c0 COLLATE BINARY))==(((+ (vt1.c1)))))) ISNULL));
SELECT ALL vt2.c0, vt1.c0 FROM v0, vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((((vt2.c0)IS(vt0.c0)))>>(0X6bc23dc0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT (((((vt2.c0)IS(vt0.c0)))>>(0X6bc23dc0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((((((vt2.c0)IS(vt0.c0)))>>(0X6bc23dc0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT ALL vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, v0.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt1, v0 WHERE (((((vt1.c1, vt1.c0, v0.c0))>=((v0.c0, vt1.c1, vt1.c0))) IN (x''))) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c1, vt1.c0, v0.c0))>=((v0.c0, vt1.c1, vt1.c0))) IN (x''))))) GROUP BY vt1.c1, v0.c0 UNION SELECT vt1.c1, v0.c0 FROM vt1, v0 WHERE (((((((vt1.c1, vt1.c0, v0.c0))>=((v0.c0, vt1.c1, vt1.c0))) IN (x''))) ISNULL)) GROUP BY vt1.c1, v0.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, v0.c0;
SELECT vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0 HAVING ((((vt1.c1) IS FALSE)) BETWEEN (MIN(vt1.c1)) AND (MAX(vt1.c0))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0 HAVING (NOT (((((vt1.c1) IS FALSE)) BETWEEN (MIN(vt1.c1)) AND (MAX(vt1.c0))))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0 HAVING ((((((vt1.c1) IS FALSE)) BETWEEN (MIN(vt1.c1)) AND (MAX(vt1.c0)))) ISNULL);
SELECT vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0 HAVING ((((vt1.c1) IS FALSE)) BETWEEN (MIN(vt1.c1)) AND (MAX(vt1.c0))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0 HAVING (NOT (((((vt1.c1) IS FALSE)) BETWEEN (MIN(vt1.c1)) AND (MAX(vt1.c0))))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0 HAVING ((((((vt1.c1) IS FALSE)) BETWEEN (MIN(vt1.c1)) AND (MAX(vt1.c0)))) ISNULL);
SELECT vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt1.c0))) AS INTEGER) GROUP BY vt2.c0, vt1.c0;
SELECT ALL SUM(NULL) FROM vt1, v0 ORDER BY json_type(((vt1.c0) NOTNULL))  NULLS FIRST;
SELECT * FROM vt1, v0;
SELECT * FROM vt1 NOT INDEXED, v0 WHERE ((((NULL))<((((vt1.c0) NOTNULL))))) ORDER BY ((~ (vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE ((NOT ((((NULL))<((((vt1.c0) NOTNULL))))))) ORDER BY ((~ (vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE ((((((NULL))<((((vt1.c0) NOTNULL))))) ISNULL)) ORDER BY ((~ (vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1, v0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CASE WHEN (((vt2.c0, x'', NULL)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) THEN (+ (vt2.c0)) WHEN CAST(vt2.c0 AS INTEGER) THEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE x'' END WHEN (- (vt2.c0)) THEN ((vt2.c0)||(vt2.c0)) ELSE x'' END) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CASE WHEN (((vt2.c0, x'', NULL)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) THEN (+ (vt2.c0)) WHEN CAST(vt2.c0 AS INTEGER) THEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE x'' END WHEN (- (vt2.c0)) THEN ((vt2.c0)||(vt2.c0)) ELSE x'' END))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CASE WHEN (((vt2.c0, x'', NULL)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) THEN (+ (vt2.c0)) WHEN CAST(vt2.c0 AS INTEGER) THEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE x'' END WHEN (- (vt2.c0)) THEN ((vt2.c0)||(vt2.c0)) ELSE x'' END) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt0, vt2 WHERE (TRIM(CAST(vt1.c0 AS TEXT))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt0, vt2 WHERE ((NOT (TRIM(CAST(vt1.c0 AS TEXT))))) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt1, vt0, vt2 WHERE (((TRIM(CAST(vt1.c0 AS TEXT))) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0;
SELECT vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0;
SELECT vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c1, vt0.c0, vt2.c0;
SELECT vt1.c0 FROM v0, vt1, vt0, vt2;
SELECT ALL vt1.c0 FROM v0, vt1, vt0, vt2 WHERE ((((((((('N{jP_vz!!')AND((+ (vt1.c1)))))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1, vt0, vt2 WHERE ((NOT ((((((((('N{jP_vz!!')AND((+ (vt1.c1)))))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR(((v0.c0) NOT NULL)))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1, vt0, vt2 WHERE ((((((((((('N{jP_vz!!')AND((+ (vt1.c1)))))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR(((v0.c0) NOT NULL)))) ISNULL));
SELECT vt1.c0 FROM v0, vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((((vt2.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT (((((vt2.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((((((vt2.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((~ (vt1.c1)))>((- (vt1.c1))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((~ (vt1.c1)))>((- (vt1.c1))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((~ (vt1.c1)))>((- (vt1.c1))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING HEX(DISTINCT TOTAL(COUNT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (HEX(DISTINCT TOTAL(COUNT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((HEX(DISTINCT TOTAL(COUNT(v0.c0)))) ISNULL);
SELECT * FROM vt0, vt1, vt2;
SELECT ALL * FROM vt0, vt1, vt2 WHERE (CASE WHEN (- (vt2.c0)) THEN ((vt0.c0) IS FALSE) END) UNION ALL SELECT * FROM vt0, vt1, vt2 WHERE ((NOT (CASE WHEN (- (vt2.c0)) THEN ((vt0.c0) IS FALSE) END))) UNION ALL SELECT ALL * FROM vt0, vt1, vt2 WHERE (((CASE WHEN (- (vt2.c0)) THEN ((vt0.c0) IS FALSE) END) ISNULL));
SELECT * FROM vt0, vt1, vt2;
SELECT DISTINCT * FROM v0, vt2;
SELECT DISTINCT * FROM v0, vt2 WHERE ((~ ((((vt2.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((vt2.c0, v0.c0, vt2.c0)))))) UNION SELECT DISTINCT * FROM v0, vt2 WHERE ((NOT ((~ ((((vt2.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((vt2.c0, v0.c0, vt2.c0)))))))) UNION SELECT DISTINCT * FROM v0, vt2 WHERE ((((~ ((((vt2.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((vt2.c0, v0.c0, vt2.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt2;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (x'3eef') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (x'3eef'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((x'3eef') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0;
SELECT ALL * FROM vt2, vt0, vt1;
SELECT ALL * FROM vt2, vt0, vt1 WHERE ((((((((vt1.c1, NULL, vt2.c0, vt2.c0, NULL)) NOT BETWEEN ((vt1.c1, vt0.c0, vt2.c0, vt0.c0, vt2.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt1.c1, vt2.c0))))OR(vt0.c0)))AND(json_type(vt1.c1)))) UNION ALL SELECT ALL * FROM vt2, vt0, vt1 WHERE ((NOT ((((((((vt1.c1, NULL, vt2.c0, vt2.c0, NULL)) NOT BETWEEN ((vt1.c1, vt0.c0, vt2.c0, vt0.c0, vt2.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt1.c1, vt2.c0))))OR(vt0.c0)))AND(json_type(vt1.c1)))))) UNION ALL SELECT ALL * FROM vt2, vt0, vt1 WHERE ((((((((((vt1.c1, NULL, vt2.c0, vt2.c0, NULL)) NOT BETWEEN ((vt1.c1, vt0.c0, vt2.c0, vt0.c0, vt2.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt1.c1, vt2.c0))))OR(vt0.c0)))AND(json_type(vt1.c1)))) ISNULL));
SELECT ALL * FROM vt2, vt0, vt1;
SELECT DISTINCT vt0.c0 FROM v0, vt0, vt2;
SELECT DISTINCT vt0.c0 FROM v0, vt0, vt2 WHERE (vt2.c0) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0, vt2 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0, vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0, vt2;
SELECT vt1.c0, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt1.c0, vt1.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE ((+ ((((vt2.c0))>=((vt1.c0)))))) GROUP BY vt1.c0, vt1.c1, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE ((NOT ((+ ((((vt2.c0))>=((vt1.c0)))))))) GROUP BY vt1.c0, vt1.c1, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE ((((+ ((((vt2.c0))>=((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0, v0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt1.c0, vt1.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (+ (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)))) INNER JOIN vt0 ON (((vt1.c0, 0.13460440248772565, NULL)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END, ABS(v0.c0), ((0xfffffffff6968a9b)*(vt1.c0)))) AND (((NOT (vt1.c1)), vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END))) GROUP BY vt1.c1, vt0.c0, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS REAL) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 NOT INDEXED WHERE (((vt1.c1 COLLATE RTRIM) NOTNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c1 COLLATE RTRIM) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c1 COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt2.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM v0, vt0, vt1, vt2 WHERE ((((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(vt1.c1)))AND(vt2.c0)))) AND (((vt0.c0 IN ()))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(vt1.c1)))AND(vt2.c0)))) AND (((vt0.c0 IN ()))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM v0, vt0, vt1, vt2 WHERE ((((((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(vt1.c1)))AND(vt2.c0)))) AND (((vt0.c0 IN ()))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt2.c0;
SELECT vt1.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN (x'd36c' IN ()) THEN vt0.c0 WHEN ((vt1.c0) NOT NULL) THEN (vt1.c1 IN ()) WHEN (((vt1.c0))==((vt1.c1))) THEN ((vt1.c1)OR(vt0.c0)) END GROUP BY vt1.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN (x'd36c' IN ()) THEN vt0.c0 WHEN ((vt1.c0) NOT NULL) THEN (vt1.c1 IN ()) WHEN (((vt1.c0))=((vt1.c1))) THEN ((vt1.c1)OR(vt0.c0)) END GROUP BY vt1.c1, vt2.c0, vt0.c0, vt1.c0 HAVING GROUP_CONCAT(MIN(MAX(0.24091029410020592))) UNION ALL SELECT vt1.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN (x'd36c' IN ()) THEN vt0.c0 WHEN ((vt1.c0) NOT NULL) THEN (vt1.c1 IN ()) WHEN (((vt1.c0))==((vt1.c1))) THEN ((vt1.c1)OR(vt0.c0)) END GROUP BY vt1.c1, vt2.c0, vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(MAX(0.24091029410020592))))) UNION ALL SELECT vt1.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN (x'd36c' IN ()) THEN vt0.c0 WHEN ((vt1.c0) NOT NULL) THEN (vt1.c1 IN ()) WHEN (((vt1.c0))==((vt1.c1))) THEN ((vt1.c1)OR(vt0.c0)) END GROUP BY vt1.c1, vt2.c0, vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(MIN(MAX(0.24091029410020592)))) ISNULL);
SELECT vt2.c0, v0.c0 FROM v0, vt1, vt2;
SELECT vt2.c0, v0.c0 FROM v0, vt1, vt2 WHERE ((((vt2.c0 IN ())) NOTNULL)) UNION ALL SELECT vt2.c0, v0.c0 FROM v0, vt1, vt2 WHERE ((NOT ((((vt2.c0 IN ())) NOTNULL)))) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM v0, vt1, vt2 WHERE ((((((vt2.c0 IN ())) NOTNULL)) ISNULL));
SELECT vt2.c0, v0.c0 FROM v0, vt1, vt2;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((((966304845)|(vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT ((((966304845)|(vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((((((966304845)|(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((+ ('1202624128'))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((+ ('1202624128'))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((+ ('1202624128'))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c1)AND(v0.c0)))OR(vt2.c0)))IS NOT(((vt1.c1) BETWEEN (vt1.c1) AND (vt2.c0)))) INNER JOIN v0 ON (+ (v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt2 ON CAST(CASE WHEN vt1.c0 THEN NULL END AS NUMERIC) GROUP BY vt0.c0;
SELECT * FROM vt0, v0, vt2, vt1;
SELECT ALL * FROM vt0, v0, vt2, vt1 WHERE (((((((((TRIM(v0.c0))AND((vt2.c0 IN (vt1.c0)))))AND(((vt1.c1)IS(v0.c0)))))AND(NULL)))AND(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) UNION ALL SELECT * FROM vt0 NOT INDEXED, v0, vt2, vt1 WHERE ((NOT (((((((((TRIM(v0.c0))AND((vt2.c0 IN (vt1.c0)))))AND(((vt1.c1)IS(v0.c0)))))AND(NULL)))AND(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))))) UNION ALL SELECT * FROM vt0, v0, vt2, vt1 WHERE (((((((((((TRIM(v0.c0))AND((vt2.c0 IN (vt1.c0)))))AND(((vt1.c1)IS(v0.c0)))))AND(NULL)))AND(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ISNULL));
SELECT * FROM vt0, v0, vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1, v0;
SELECT DISTINCT * FROM vt2, vt1, v0 WHERE (CASE WHEN ((vt2.c0) NOTNULL) THEN ((v0.c0)+(v0.c0)) END) UNION SELECT DISTINCT * FROM vt2, vt1, v0 WHERE ((NOT (CASE WHEN ((vt2.c0) NOTNULL) THEN ((v0.c0)+(v0.c0)) END))) UNION SELECT DISTINCT * FROM vt2, vt1, v0 WHERE (((CASE WHEN ((vt2.c0) NOTNULL) THEN ((v0.c0)+(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, v0;
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM v0, vt1, vt2, vt0 WHERE (((NOT (x'')) IN ((~ (vt2.c0))))) GROUP BY vt1.c0, vt2.c0, v0.c0 UNION SELECT vt1.c0, vt2.c0, v0.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT (((NOT (x'')) IN ((~ (vt2.c0))))))) GROUP BY vt1.c0, vt2.c0, v0.c0 UNION SELECT vt1.c0, vt2.c0, v0.c0 FROM v0, vt1, vt2, vt0 WHERE (((((NOT (x'')) IN ((~ (vt2.c0))))) ISNULL)) GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c1;
SELECT vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c1 HAVING CAST(MAX(MAX(SUM(MIN(vt1.c0)))) AS BLOB) UNION ALL SELECT ALL vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c1 HAVING (NOT (CAST(MAX(MAX(SUM(MIN(vt1.c0)))) AS BLOB))) UNION ALL SELECT vt2.c0, vt1.c1 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c1 HAVING ((CAST(MAX(MAX(SUM(MIN(vt1.c0)))) AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (vt0.c0)))|(((vt0.c0) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0)))|(((vt0.c0) IS FALSE)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0)))|(((vt0.c0) IS FALSE)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM v0 INNER JOIN vt2 ON (+ ((- (v0.c0)))) INNER JOIN vt1 ON vt2.c0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM v0 INNER JOIN vt2 ON (+ ((- (v0.c0)))) INNER JOIN vt1 ON vt2.c0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM v0 INNER JOIN vt2 ON (+ ((- (v0.c0)))) INNER JOIN vt1 ON vt2.c0 WHERE ((NOT ((NOT (x''))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM v0 INNER JOIN vt2 ON (+ ((- (v0.c0)))) INNER JOIN vt1 ON vt2.c0 WHERE ((((NOT (x''))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM v0 INNER JOIN vt2 ON (+ ((- (v0.c0)))) INNER JOIN vt1 ON vt2.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0)||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0)||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0)||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt2.c0, v0.c0 FROM vt0, v0, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0;
SELECT vt0.c0, vt2.c0, v0.c0 FROM vt0, v0, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING (((IFNULL(v0.c0, COUNT(*)), SUM(vt2.c0), v0.c0 COLLATE RTRIM))>=((((v0.c0)/(SUM(vt2.c0))), (+ (AVG(vt0.c0))), TOTAL(MAX(vt2.c0))))) UNION ALL SELECT vt0.c0, vt2.c0, v0.c0 FROM vt0, v0, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING (NOT ((((IFNULL(v0.c0, COUNT(*)), SUM(vt2.c0), v0.c0 COLLATE RTRIM))>=((((v0.c0)/(SUM(vt2.c0))), (+ (AVG(vt0.c0))), TOTAL(MAX(vt2.c0))))))) UNION ALL SELECT vt0.c0, vt2.c0, v0.c0 FROM vt0, v0, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0 HAVING (((((IFNULL(v0.c0, COUNT(*)), SUM(vt2.c0), v0.c0 COLLATE RTRIM))>=((((v0.c0)/(SUM(vt2.c0))), (+ (AVG(vt0.c0))), TOTAL(MAX(vt2.c0)))))) ISNULL);
SELECT ALL vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON CHANGES() FULL OUTER JOIN vt0 ON (+ (NULL)) COLLATE NOCASE COLLATE NOCASE;
SELECT ALL vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON CHANGES() FULL OUTER JOIN vt0 ON (+ (NULL)) COLLATE NOCASE COLLATE NOCASE WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c0)))AND(0.3792593405945015)))OR(vt2.c0 COLLATE BINARY))) UNION ALL SELECT vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON CHANGES() FULL OUTER JOIN vt0 ON (+ (NULL)) COLLATE NOCASE COLLATE NOCASE WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c0)))AND(0.3792593405945015)))OR(vt2.c0 COLLATE BINARY))))) UNION ALL SELECT vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON CHANGES() FULL OUTER JOIN vt0 ON (+ (NULL)) COLLATE NOCASE COLLATE NOCASE WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c0)))AND(0.3792593405945015)))OR(vt2.c0 COLLATE BINARY))) ISNULL));
SELECT ALL vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON CHANGES() FULL OUTER JOIN vt0 ON (+ (NULL)) COLLATE NOCASE COLLATE NOCASE;
SELECT DISTINCT vt1.c1, vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2, vt0;
SELECT DISTINCT vt1.c1, vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2, vt0 WHERE (0Xfffffffff6695277 COLLATE RTRIM) UNION SELECT DISTINCT vt1.c1, vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT (0xfffffffff6695277 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c1, vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2, vt0 WHERE (((0Xfffffffff6695277 COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM v0, vt1, vt2, vt0;
SELECT ALL vt2.c0 FROM v0 FULL OUTER JOIN vt0 ON vt2.c0 RIGHT OUTER JOIN vt1 ON ((vt2.c0 COLLATE NOCASE)LIKE(CASE WHEN vt1.c0 THEN vt2.c0 END)) INNER JOIN vt2 ON 0.48646828567041867 GROUP BY vt2.c0;
SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1;
SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1 HAVING MAX(vt1.c0) UNION ALL SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1 HAVING (NOT (MAX(vt1.c0))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1 HAVING ((MAX(vt1.c0)) ISNULL);
SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1;
SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1 HAVING MAX(vt1.c0) UNION ALL SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1 HAVING (NOT (MAX(vt1.c0))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1 HAVING ((MAX(vt1.c0)) ISNULL);
SELECT vt0.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0, v0.c0, vt1.c1;
SELECT vt0.c0 FROM vt0, v0, vt1, vt2;
SELECT vt0.c0 FROM vt0, v0, vt1, vt2 WHERE (((((((vt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, x'', v0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0)))))<=((((vt2.c0)<<(vt2.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0, vt1, vt2 WHERE ((NOT (((((((vt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, x'', v0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0)))))<=((((vt2.c0)<<(vt2.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0, vt1, vt2 WHERE (((((((((vt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, x'', v0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0)))))<=((((vt2.c0)<<(vt2.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0, v0, vt1, vt2;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CASE ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))  WHEN ((v0.c0)>=(v0.c0)) THEN (+ (v0.c0)) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CASE ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))  WHEN ((v0.c0)>=(v0.c0)) THEN (+ (v0.c0)) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED WHERE (((CASE ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))  WHEN ((v0.c0)>=(v0.c0)) THEN (+ (v0.c0)) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1 FROM v0, vt1, vt0 WHERE (IFNULL((vt1.c0 IN ()), vt1.c1 COLLATE BINARY)) GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1 UNION SELECT vt1.c0, v0.c0, vt0.c0, vt1.c1 FROM v0, vt1, vt0 WHERE ((NOT (IFNULL((vt1.c0 IN ()), vt1.c1 COLLATE BINARY)))) GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1 UNION SELECT vt1.c0, v0.c0, vt0.c0, vt1.c1 FROM v0, vt1, vt0 WHERE (((IFNULL((vt1.c0 IN ()), vt1.c1 COLLATE BINARY)) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1;
SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0;
SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0;
SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0;
SELECT ALL * FROM vt2, vt0;
SELECT * FROM vt2, vt0 WHERE (CAST(LOWER(vt0.c0) AS INTEGER)) UNION ALL SELECT * FROM vt2, vt0 WHERE ((NOT (CAST(LOWER(vt0.c0) AS INTEGER)))) UNION ALL SELECT * FROM vt2, vt0 WHERE (((CAST(LOWER(vt0.c0) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt2, vt0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (CAST(((v0.c0)<<(vt1.c1)) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (CAST(((v0.c0)<<(vt1.c1)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((CAST(((v0.c0)<<(vt1.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (('' IN ())) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT (('' IN ())))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (((('' IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)%((((vt1.c1))!=((vt1.c0))))) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)%((((vt1.c1))<>((vt1.c0))))) GROUP BY vt2.c0 HAVING MAX(AVG(SUM(vt1.c0))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)%((((vt1.c1))!=((vt1.c0))))) GROUP BY vt2.c0 HAVING (NOT (MAX(AVG(SUM(vt1.c0))))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)%((((vt1.c1))<>((vt1.c0))))) GROUP BY vt2.c0 HAVING ((MAX(AVG(SUM(vt1.c0)))) ISNULL);
SELECT * FROM vt1, v0, vt2;
SELECT ALL * FROM vt1, v0, vt2 WHERE (((CASE vt1.c1  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c1 WHEN NULL THEN v0.c0 END) NOT BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (((v0.c0)>>(vt2.c0))))) UNION ALL SELECT ALL * FROM vt1, v0, vt2 WHERE ((NOT (((CASE vt1.c1  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c1 WHEN NULL THEN v0.c0 END) NOT BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (((v0.c0)>>(vt2.c0))))))) UNION ALL SELECT * FROM vt1, v0, vt2 WHERE (((((CASE vt1.c1  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c1 WHEN NULL THEN v0.c0 END) NOT BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (((v0.c0)>>(vt2.c0))))) ISNULL));
SELECT * FROM vt1, v0, vt2;
SELECT DISTINCT * FROM vt2, v0;
SELECT DISTINCT * FROM vt2, v0 WHERE ('') UNION SELECT DISTINCT * FROM vt2, v0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt2, v0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt2, v0;
SELECT ALL vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt0, vt2, vt1 WHERE ((((vt1.c0) ISNULL) IN (CAST(vt1.c1 AS INTEGER), CAST(vt2.c0 AS NUMERIC)))) GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt0, vt2, vt1 WHERE ((NOT ((((vt1.c0) ISNULL) IN (CAST(vt1.c1 AS INTEGER), CAST(vt2.c0 AS NUMERIC)))))) GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt0, vt2, vt1 WHERE ((((((vt1.c0) ISNULL) IN (CAST(vt1.c1 AS INTEGER), CAST(vt2.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1 FROM v0, vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0;
SELECT vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0 HAVING vt2.c0 UNION ALL SELECT vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0 HAVING ((vt2.c0) ISNULL);
SELECT vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0;
SELECT vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0 HAVING vt2.c0 UNION ALL SELECT vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0 HAVING ((vt2.c0) ISNULL);
SELECT vt2.c0, v0.c0 FROM v0 FULL OUTER JOIN vt2 ON CASE CASE v0.c0  WHEN vt2.c0 THEN v0.c0 ELSE 0.6512228140597295 END  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) END GROUP BY vt2.c0, v0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((- (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((- (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((- (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt2.c0 FROM vt2 NOT INDEXED;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR('0.12104356113005954')))AND(vt2.c0))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR('0.12104356113005954')))AND(vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR('0.12104356113005954')))AND(vt2.c0))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2 NOT INDEXED;
SELECT ALL v0.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt0, v0, vt1, vt2 WHERE ((((((vt2.c0, vt0.c0, vt2.c0))<=((vt1.c0, v0.c0, vt1.c1)))) NOTNULL)) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt0, v0, vt1, vt2 WHERE ((NOT ((((((vt2.c0, vt0.c0, vt2.c0))<=((vt1.c0, v0.c0, vt1.c1)))) NOTNULL)))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt0, v0, vt1, vt2 WHERE ((((((((vt2.c0, vt0.c0, vt2.c0))<=((vt1.c0, v0.c0, vt1.c1)))) NOTNULL)) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(COUNT(vt0.c0)))) ISNULL);
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE ((((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END))>=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) UNION ALL SELECT * FROM vt2 WHERE ((NOT ((((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END))>=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((((((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END))>=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM vt0, vt2, v0;
SELECT DISTINCT * FROM vt0, vt2, v0 WHERE (((((COALESCE(v0.c0, vt0.c0))OR((+ (vt2.c0)))))OR(v0.c0))) UNION SELECT DISTINCT * FROM vt0, vt2, v0 WHERE ((NOT (((((COALESCE(v0.c0, vt0.c0))OR((+ (vt2.c0)))))OR(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt2, v0 WHERE (((((((COALESCE(v0.c0, vt0.c0))OR((+ (vt2.c0)))))OR(v0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, v0;
SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt0, vt2 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt0, vt2 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(MIN(v0.c0)))) IS TRUE) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((TOTAL(GROUP_CONCAT(MIN(v0.c0)))) IS TRUE))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((TOTAL(GROUP_CONCAT(MIN(v0.c0)))) IS TRUE)) ISNULL);
SELECT * FROM vt0, v0, vt1, vt2;
SELECT ALL * FROM vt0, v0, vt1, vt2 WHERE ((CAST(v0.c0 AS INTEGER) IN (CASE vt1.c0  WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0, v0, vt1, vt2 WHERE ((NOT ((CAST(v0.c0 AS INTEGER) IN (CASE vt1.c0  WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0, v0, vt1, vt2 WHERE ((((CAST(v0.c0 AS INTEGER) IN (CASE vt1.c0  WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM vt0, v0, vt1, vt2;
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0 WHERE (LOWER(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) UNION SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0 WHERE ((NOT (LOWER(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0 WHERE (((LOWER(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0;
SELECT vt2.c0, vt1.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0;
SELECT vt2.c0, vt1.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 WHERE (((v0.c0)>(x'3706')) COLLATE RTRIM) GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0 UNION SELECT ALL vt2.c0, vt1.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 WHERE ((NOT (((v0.c0)>(x'3706')) COLLATE RTRIM))) GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0 UNION SELECT vt2.c0, vt1.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 WHERE (((((v0.c0)>(x'3706')) COLLATE RTRIM) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0;
SELECT vt2.c0, vt1.c0, vt1.c1, v0.c0 FROM vt1, v0, vt2 GROUP BY vt2.c0, vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING ((AVG(vt2.c0)) BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c1) IS FALSE))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING (NOT (((AVG(vt2.c0)) BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c1) IS FALSE))))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING ((((AVG(vt2.c0)) BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c1) IS FALSE)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING ((AVG(vt2.c0)) BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c1) IS FALSE))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING (NOT (((AVG(vt2.c0)) BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c1) IS FALSE))))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING ((((AVG(vt2.c0)) BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c1) IS FALSE)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT vt1.c0 FROM vt1, vt2;
SELECT ALL vt1.c0 FROM vt1, vt2 WHERE (CAST(vt2.c0 AS TEXT) COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1, vt2 WHERE ((NOT (CAST(vt2.c0 AS TEXT) COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 WHERE (((CAST(vt2.c0 AS TEXT) COLLATE BINARY) ISNULL));
SELECT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT NULL);
SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT NULL) WHERE ((((+ (vt2.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT NULL) WHERE ((NOT ((((+ (vt2.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT NULL) WHERE ((((((+ (vt2.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT NULL);
SELECT vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt0, vt2, vt1 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt0, vt2, vt1 WHERE (((((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, v0, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, v0, vt2 GROUP BY vt2.c0 HAVING TOTAL(SUM(GROUP_CONCAT(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt1, v0, vt2 GROUP BY vt2.c0 HAVING (NOT (TOTAL(SUM(GROUP_CONCAT(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, v0, vt2 GROUP BY vt2.c0 HAVING ((TOTAL(SUM(GROUP_CONCAT(vt2.c0)))) ISNULL);
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE ((((vt2.c0 COLLATE BINARY))<=((0X1933e9ec)))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT ((((vt2.c0 COLLATE BINARY))<=((0X1933e9ec)))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((((((vt2.c0 COLLATE BINARY))<=((0X1933e9ec)))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (('~a2cI6' IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (('~a2cI6' IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((('~a2cI6' IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt2 WHERE ((- (CAST(vt2.c0 AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2 WHERE ((NOT ((- (CAST(vt2.c0 AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt2 WHERE ((((- (CAST(vt2.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((MIN(COUNT(MIN(SUM(vt1.c0)))))>>(COUNT(vt1.c1)))) BETWEEN (TOTAL(vt1.c1)) AND ((- (COUNT(*))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((((MIN(COUNT(MIN(SUM(vt1.c0)))))>>(COUNT(vt1.c1)))) BETWEEN (TOTAL(vt1.c1)) AND ((- (COUNT(*))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((((MIN(COUNT(MIN(SUM(vt1.c0)))))>>(COUNT(vt1.c1)))) BETWEEN (TOTAL(vt1.c1)) AND ((- (COUNT(*)))))) ISNULL);
SELECT * FROM vt2, vt0, v0;
SELECT * FROM vt2, vt0, v0 WHERE (((((((vt2.c0)OR(v0.c0)))AND(vt2.c0))) BETWEEN ((NOT (v0.c0))) AND (((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt2, vt0, v0 WHERE ((NOT (((((((vt2.c0)OR(v0.c0)))AND(vt2.c0))) BETWEEN ((NOT (v0.c0))) AND (((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt2, vt0, v0 WHERE (((((((((vt2.c0)OR(v0.c0)))AND(vt2.c0))) BETWEEN ((NOT (v0.c0))) AND (((v0.c0) BETWEEN (vt2.c0) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt2, vt0, v0;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (CASE ((vt2.c0) IS TRUE)  WHEN ((((((((vt2.c0)OR(9.33609372E8)))AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt2.c0) ISNULL) WHEN CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END THEN vt2.c0 WHEN (((vt2.c0))>=((vt2.c0))) THEN (NOT (vt2.c0)) ELSE (+ (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (CASE ((vt2.c0) IS TRUE)  WHEN ((((((((vt2.c0)OR(9.33609372E8)))AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt2.c0) ISNULL) WHEN CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END THEN vt2.c0 WHEN (((vt2.c0))>=((vt2.c0))) THEN (NOT (vt2.c0)) ELSE (+ (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((CASE ((vt2.c0) IS TRUE)  WHEN ((((((((vt2.c0)OR(9.33609372E8)))AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt2.c0) ISNULL) WHEN CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END THEN vt2.c0 WHEN (((vt2.c0))>=((vt2.c0))) THEN (NOT (vt2.c0)) ELSE (+ (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)IS(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 ELSE (~ (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)IS(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 ELSE (~ (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)IS(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 ELSE (~ (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT vt0.c0, vt2.c0 FROM vt2, vt0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 WHERE (CAST(vt2.c0 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0 WHERE ((NOT (CAST(vt2.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 WHERE (((CAST(vt2.c0 AS NUMERIC)) ISNULL));
SELECT vt0.c0, vt2.c0 FROM vt2, vt0;
