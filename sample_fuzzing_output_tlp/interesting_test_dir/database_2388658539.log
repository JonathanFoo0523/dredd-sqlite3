-- Time: 2024/06/10 04:30:22
-- Database: database39
-- Database version: 3.40.0
-- seed value: 2388658539
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=1526272104,7');\n; -- 0ms;
ANALYZE vt0; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL (+ (((-1969739570) ISNULL))), (((((vt0.c0) NOT NULL), LTRIM(0xfffffffffbf2f46b, x''), vt0.c0))<((((vt0.c0)*(vt0.c0)), (+ (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))), TOTAL(((vt0.c0)LIKE(vt0.c0))) FROM vt0 WHERE (((((1495583646)AND('1311369584'))) IS TRUE)) GROUP BY vt0.c0 HAVING (((x'', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY; -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE CASE ((vt0.c0)|(vt0.c0))  WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-509524882,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50286'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 109313586); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''), (0.3656166365342154), (NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=('1063816792') WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0 COLLATE BINARY)); -- 3ms;
UPDATE OR IGNORE vt0 SET c0=0.04458983954245166, c0=0.724609982259252 WHERE (('q?') BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (NULL)); -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('x^Fxvⴞ T') WHERE vt0.c0; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1159258565,15');\n; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(NULL) WHERE (((('')OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('D!'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1024308365);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=(1.159258565E9) WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<(((vt0.c0 IN (vt0.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44965'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA application_id = 5075420355653110772; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59833'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '25311'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('1252435116'), (0.38748786115180667), (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.2612196257255651; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(2046242505) WHERE ((vt0.c0)<(((vt0.c0) IS FALSE))); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.38748786115180667), (x''), (NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 440900028); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '25384'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (''), (''), (2.046242505E9); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=-1.024308365E9 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) IS FALSE))); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.9134410258129882); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'0f1f5ed0'), ('1890895361'), (0.004726441399036885); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
UPDATE OR FAIL rt0 SET c0=NULL WHERE TRIM(DISTINCT ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))); -- 0ms;
UPDATE OR REPLACE rt0 SET (c2)=(x'857d') WHERE CAST(CAST(rt0.c0 AS BLOB) AS INTEGER); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
VACUUM main; -- 1ms;
PRAGMA temp.recursive_triggers; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-67963797,8');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA automatic_index; -- 0ms;
ANALYZE main; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20030'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL WHERE json_array(vt0.c0, vt0.c0) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=0X55719a17; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
DELETE FROM vt0; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
UPDATE rt0 SET (c0)=(')쮞p瓝A4'); -- 0ms;
COMMIT; -- 1ms;
PRAGMA short_column_names = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '4'); -- 0ms;
VACUUM; -- 1ms;
PRAGMA cell_size_check = false; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
END; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.3544827726081251), (0.07084249937522835), (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7663413448216436; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0Xffffffffb602cf2d); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
PRAGMA cache_spill = -5872428495867574741; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0xffffffff8fbf74dd); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1241329875'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (0.09703038240817474), (x''); -- 1ms;
UPDATE vt1 SET (c0, c0)=(403708646, -6.7963797E7); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'21ae'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -840140366);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX BINARY; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((CAST(rt0.c0 AS INTEGER) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((((CAST(rt0.c0 AS INTEGER) IN ())) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c0 FROM vt1, rt0 INNER JOIN vt0 ON CASE ((rt0.c1) BETWEEN (0.2612196257255651) AND (rt0.c1))  WHEN ((vt1.c0)<<(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN UNICODE(rt0.c1) THEN ((rt0.c1)-(vt0.c0)) WHEN (~ (rt0.c0)) THEN ((rt0.c1)>>(rt0.c0)) ELSE (((vt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c1, vt0.c0, NULL))) END;
SELECT DISTINCT rt0.c0 FROM vt1, rt0 INNER JOIN vt0 ON CASE ((rt0.c1) BETWEEN (0.2612196257255651) AND (rt0.c1))  WHEN ((vt1.c0)<<(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN UNICODE(rt0.c1) THEN ((rt0.c1)-(vt0.c0)) WHEN (~ (rt0.c0)) THEN ((rt0.c1)>>(rt0.c0)) ELSE (((vt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c1, vt0.c0, NULL))) END WHERE (((vt0.c0) NOTNULL)) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 INNER JOIN vt0 ON CASE ((rt0.c1) BETWEEN (0.2612196257255651) AND (rt0.c1))  WHEN ((vt1.c0)<<(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN UNICODE(rt0.c1) THEN ((rt0.c1)-(vt0.c0)) WHEN (~ (rt0.c0)) THEN ((rt0.c1)>>(rt0.c0)) ELSE (((vt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c1, vt0.c0, NULL))) END WHERE ((NOT (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 INNER JOIN vt0 ON CASE ((rt0.c1) BETWEEN (0.2612196257255651) AND (rt0.c1))  WHEN ((vt1.c0)<<(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN UNICODE(rt0.c1) THEN ((rt0.c1)-(vt0.c0)) WHEN (~ (rt0.c0)) THEN ((rt0.c1)>>(rt0.c0)) ELSE (((vt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c1, vt0.c0, NULL))) END WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1, rt0 INNER JOIN vt0 ON CASE ((rt0.c1) BETWEEN (0.2612196257255651) AND (rt0.c1))  WHEN ((vt1.c0)<<(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END WHEN UNICODE(rt0.c1) THEN ((rt0.c1)-(vt0.c0)) WHEN (~ (rt0.c0)) THEN ((rt0.c1)>>(rt0.c0)) ELSE (((vt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c1, vt0.c0, NULL))) END;
SELECT rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0, vt1 WHERE (((((((((((((TRIM(DISTINCT vt1.c0))AND(CAST(vt0.c0 AS TEXT))))OR(vt1.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 ELSE '' END)))AND((- (rt0.c1)))))AND(('P2lobRz' IN ()))))AND(DATETIME(vt0.c0, rt0.c1, vt1.c0)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((((((((((TRIM(DISTINCT vt1.c0))AND(CAST(vt0.c0 AS TEXT))))OR(vt1.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 ELSE '' END)))AND((- (rt0.c1)))))AND(('P2lobRz' IN ()))))AND(DATETIME(vt0.c0, rt0.c1, vt1.c0)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0, vt1 WHERE (((((((((((((((TRIM(DISTINCT vt1.c0))AND(CAST(vt0.c0 AS TEXT))))OR(vt1.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 ELSE '' END)))AND((- (rt0.c1)))))AND(('P2lobRz' IN ()))))AND(DATETIME(vt0.c0, rt0.c1, vt1.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((((COUNT(*)))==((COUNT(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(NULL)))))))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0 HAVING (NOT (((((COUNT(*)))==((COUNT(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(NULL)))))))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((((((COUNT(*)))=((COUNT(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(NULL)))))))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((((COUNT(*)))==((COUNT(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(NULL)))))))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0 HAVING (NOT (((((COUNT(*)))==((COUNT(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(NULL)))))))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((((((COUNT(*)))=((COUNT(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(NULL)))))))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, CAST(vt0.c0 AS BLOB), vt1.c0)) AND ((0x6456c0e4 COLLATE NOCASE, ((vt0.c0)!=(vt1.c0)), ((vt0.c0)|(vt1.c0)))))) UNION ALL SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, CAST(vt0.c0 AS BLOB), vt1.c0)) AND ((0X6456c0e4 COLLATE NOCASE, ((vt0.c0)!=(vt1.c0)), ((vt0.c0)|(vt1.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, CAST(vt0.c0 AS BLOB), vt1.c0)) AND ((0x6456c0e4 COLLATE NOCASE, ((vt0.c0)<>(vt1.c0)), ((vt0.c0)|(vt1.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (TRIM(DISTINCT ((rt0.c2)OR(rt0.c0)))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (TRIM(DISTINCT ((rt0.c2)OR(rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((TRIM(DISTINCT ((rt0.c2)OR(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((~ (vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((~ (vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((~ (vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING LIKELIHOOD(DISTINCT SUM(COUNT('-931779298')), 0.757733406548474) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (LIKELIHOOD(DISTINCT SUM(COUNT('-931779298')), 0.757733406548474))) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING ((LIKELIHOOD(DISTINCT SUM(COUNT('-931779298')), 0.757733406548474)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c2)))AND((rt0.c2 IN ()))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c0)+(rt0.c0)))))AND(((0.8257616999111216)IS NOT(rt0.c1)))) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c2)))AND((rt0.c2 IN ()))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c0)+(rt0.c0)))))AND(((0.8257616999111216)IS NOT(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING COUNT(CASE rt0.c0  WHEN rt0.c2 THEN MAX(rt0.c1) WHEN TOTAL(COUNT(*)) THEN rt0.c1 WHEN rt0.c1 THEN COUNT(*) ELSE AVG(rt0.c2) END) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c2)))AND((rt0.c2 IN ()))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c0)+(rt0.c0)))))AND(((0.8257616999111216)IS NOT(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING (NOT (COUNT(CASE rt0.c0  WHEN rt0.c2 THEN MAX(rt0.c1) WHEN TOTAL(COUNT(*)) THEN rt0.c1 WHEN rt0.c1 THEN COUNT(*) ELSE AVG(rt0.c2) END))) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c2)))AND((rt0.c2 IN ()))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c0)+(rt0.c0)))))AND(((0.8257616999111216)IS NOT(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((COUNT(CASE rt0.c0  WHEN rt0.c2 THEN MAX(rt0.c1) WHEN TOTAL(COUNT(*)) THEN rt0.c1 WHEN rt0.c1 THEN COUNT(*) ELSE AVG(rt0.c2) END)) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL END AS REAL)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL END AS REAL)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL END AS REAL)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 NOT INDEXED WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) ISNULL)) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((vt1.c0 IN ()))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((vt1.c0 IN ()))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((vt1.c0 IN ()))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING TOTAL(((rt0.c2) IS FALSE)) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING (NOT (TOTAL(((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING ((TOTAL(((rt0.c2) IS FALSE))) ISNULL);
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING TOTAL(((rt0.c2) IS FALSE)) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING (NOT (TOTAL(((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING ((TOTAL(((rt0.c2) IS FALSE))) ISNULL);
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((rt0.c1 COLLATE BINARY IN ())) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((rt0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 WHERE (((NULL) NOTNULL) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((NULL) NOTNULL) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 WHERE (((((NULL) NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING MIN(MAX(rt0.c1)) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(MAX(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING ((MIN(MAX(rt0.c1))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE (LIKELIHOOD(LIKE(rt0.c2, rt0.c1, '0'), 0.4341362056606274)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (LIKELIHOOD(LIKE(rt0.c2, rt0.c1, '0'), 0.4341362056606274)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((LIKELIHOOD(LIKE(rt0.c2, rt0.c1, '0'), 0.4341362056606274)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((- (0xffffffff83ff2d23))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((- (0Xffffffff83ff2d23))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((- (0Xffffffff83ff2d23))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((rt0.c1))>=((rt0.c0))) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1))>=((rt0.c0))) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((((rt0.c1))>=((rt0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (((NOT (vt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((NOT (vt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((NOT (vt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (((NOT (vt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((NOT (vt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((NOT (vt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c1))<>((rt0.c1, rt0.c1, rt0.c2))))IS(((rt0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((((rt0.c0, rt0.c1, rt0.c1))!=((rt0.c1, rt0.c1, rt0.c2))))IS(((rt0.c0) IS TRUE)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c0, rt0.c1, rt0.c1))<>((rt0.c1, rt0.c1, rt0.c2))))IS(((rt0.c0) IS TRUE)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS BLOB)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS BLOB)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((TOTAL(AVG(TOTAL(AVG(TOTAL(rt0.c0)))))) IS TRUE) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1 FROM rt0 NOT INDEXED, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (((TOTAL(AVG(TOTAL(AVG(TOTAL(rt0.c0)))))) IS TRUE))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((((TOTAL(AVG(TOTAL(AVG(TOTAL(rt0.c0)))))) IS TRUE)) ISNULL);
SELECT * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (rt0.c0) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT ALL vt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) ISNULL) THEN rt0.c1 COLLATE RTRIM ELSE (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END LEFT OUTER JOIN rt0 ON '-64734660' GROUP BY vt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1 FROM vt1, rt0 NOT INDEXED, vt0;
SELECT ALL vt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE (rt0.c1) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE (((rt0.c1) ISNULL));
SELECT vt0.c0, rt0.c1 FROM vt1, rt0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (0.4178021268457395)))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (0.4178021268457395)))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE NOCASE)) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (0.4178021268457395)))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE NOCASE)) WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (0.4178021268457395)))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE NOCASE)) WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((- (0.4178021268457395)))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE NOCASE));
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (UNICODE(((vt1.c0)%(rt0.c2)))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (UNICODE(((vt1.c0)%(rt0.c2)))))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((UNICODE(((vt1.c0)%(rt0.c2)))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (+ (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((+ (COUNT(COUNT(vt0.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((+ (COUNT(COUNT(vt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1)==(rt0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)==(rt0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)==(rt0.c0))) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0;
SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE (CAST(json_quote(rt0.c0) AS BLOB)) UNION SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE ((NOT (CAST(json_quote(rt0.c0) AS BLOB)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE (((CAST(json_quote(rt0.c0) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 NOT INDEXED WHERE ((NOT (CAST((rt0.c1 IN ()) AS NUMERIC)))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 WHERE (((CAST((rt0.c1 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING TOTAL(TOTAL(rt0.c1)) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (TOTAL(TOTAL(rt0.c1)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING ((TOTAL(TOTAL(rt0.c1))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED WHERE (((((rt0.c2 IN ()) IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((((0xffffffffdca3d6d4)AND((((rt0.c1))<=((vt0.c0))))))OR((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (((((0xffffffffdca3d6d4)AND((((rt0.c1))<=((vt0.c0))))))OR((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((((((0xffffffffdca3d6d4)AND((((rt0.c1))<=((vt0.c0))))))OR((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CHANGES() COLLATE NOCASE) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CHANGES() COLLATE NOCASE))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CHANGES() COLLATE NOCASE) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN ((- (rt0.c1))) AND (x''))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) BETWEEN ((- (rt0.c1))) AND (x''))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((((vt1.c0 COLLATE RTRIM) BETWEEN ((- (rt0.c1))) AND (x''))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED, rt0;
SELECT rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT ((+ (CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE ((((+ (CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1;
SELECT ALL vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0;
SELECT ALL vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0;
SELECT ALL vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((IFNULL(vt1.c0, vt1.c0)) IS FALSE);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((IFNULL(vt1.c0, vt1.c0)) IS FALSE) WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((+ (vt1.c0)))))) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON ((IFNULL(vt1.c0, vt1.c0)) IS FALSE) WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((+ (vt1.c0)))))))) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON ((IFNULL(vt1.c0, vt1.c0)) IS FALSE) WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((+ (vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((IFNULL(vt1.c0, vt1.c0)) IS FALSE);
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c1)IS(rt0.c1)))+((NOT (vt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 NOT INDEXED WHERE ((NOT (((((rt0.c1)IS(rt0.c1)))+((NOT (vt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c1)IS(rt0.c1)))+((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)<<(((rt0.c1) IS TRUE)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)<<(((rt0.c1) IS TRUE)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)<<(((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0 HAVING MAX((COUNT(TOTAL(-1.024308365E9)) IN (rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (MAX((COUNT(TOTAL(-1.024308365E9)) IN (rt0.c1))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0 HAVING ((MAX((COUNT(TOTAL(-1.024308365E9)) IN (rt0.c1)))) ISNULL);
SELECT rt0.c2, vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON LTRIM((NOT (rt0.c0))) LEFT OUTER JOIN vt0 ON ((((- (rt0.c1)), vt0.c0 COLLATE NOCASE, ((x'')<>(rt0.c0))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c2 COLLATE NOCASE, rt0.c2)));
SELECT rt0.c2, vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON LTRIM((NOT (rt0.c0))) LEFT OUTER JOIN vt0 ON ((((- (rt0.c1)), vt0.c0 COLLATE NOCASE, ((x'')!=(rt0.c0))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c2 COLLATE NOCASE, rt0.c2))) WHERE ((((NOT (vt1.c0)))GLOB(CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT rt0.c2, vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON LTRIM((NOT (rt0.c0))) LEFT OUTER JOIN vt0 ON ((((- (rt0.c1)), vt0.c0 COLLATE NOCASE, ((x'')<>(rt0.c0))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c2 COLLATE NOCASE, rt0.c2))) WHERE ((NOT ((((NOT (vt1.c0)))GLOB(CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON LTRIM((NOT (rt0.c0))) LEFT OUTER JOIN vt0 ON ((((- (rt0.c1)), vt0.c0 COLLATE NOCASE, ((x'')!=(rt0.c0))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c2 COLLATE NOCASE, rt0.c2))) WHERE ((((((NOT (vt1.c0)))GLOB(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT rt0.c2, vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON LTRIM((NOT (rt0.c0))) LEFT OUTER JOIN vt0 ON ((((- (rt0.c1)), vt0.c0 COLLATE NOCASE, ((x'')<>(rt0.c0))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c2 COLLATE NOCASE, rt0.c2)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((NULL, (((rt0.c2, vt1.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, vt1.c0)) AND ((rt0.c2, vt0.c0, rt0.c1))), CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END)) AND (('', ((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL)), CASE WHEN rt0.c2 THEN rt0.c1 END)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT ((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((NULL, (((rt0.c2, vt1.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, vt1.c0)) AND ((rt0.c2, vt0.c0, rt0.c1))), CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END)) AND (('', ((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL)), CASE WHEN rt0.c2 THEN rt0.c1 END)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((NULL, (((rt0.c2, vt1.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, vt1.c0)) AND ((rt0.c2, vt0.c0, rt0.c1))), CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END)) AND (('', ((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL)), CASE WHEN rt0.c2 THEN rt0.c1 END)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c0;
SELECT ALL * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN (CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)OR(rt0.c2)))AND(0.7814740619842764))))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN (CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)OR(rt0.c2)))AND(0.7814740619842764))))))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN (CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)OR(rt0.c2)))AND(0.7814740619842764))))) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((~ ((((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((~ ((((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1)))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((~ ((((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING SUM(((rt0.c0)+(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (SUM(((rt0.c0)+(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(((rt0.c0)+(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING SUM(((rt0.c0)+(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (SUM(((rt0.c0)+(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(((rt0.c0)+(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL TOTAL(((CAST(rt0.c0 AS REAL)) NOTNULL)) FROM rt0, vt1, vt0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOTNULL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) NOTNULL)))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (QUOTE(CAST(vt1.c0 AS REAL))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 NOT INDEXED, vt1, rt0 WHERE ((NOT (QUOTE(CAST(vt1.c0 AS REAL))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (((QUOTE(CAST(vt1.c0 AS REAL))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 WHERE (CAST(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) AS NUMERIC)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (CAST(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) AS NUMERIC)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 WHERE (((CAST(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING LIKELY(DISTINCT (- (SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (LIKELY(DISTINCT (- (SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING ((LIKELY(DISTINCT (- (SUM(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING LIKELY(DISTINCT (- (SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (LIKELY(DISTINCT (- (SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING ((LIKELY(DISTINCT (- (SUM(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((((((((((CASE x''  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)IS(vt1.c0)))))AND((vt1.c0 IN ()))))OR((- (vt1.c0)))))OR('0.004726441399036885')))OR(vt1.c0)))AND((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((((((((CASE x''  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)IS(vt1.c0)))))AND((vt1.c0 IN ()))))OR((- (vt1.c0)))))OR('0.004726441399036885')))OR(vt1.c0)))AND((vt1.c0 IN ())))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((((((((CASE x''  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)IS(vt1.c0)))))AND((vt1.c0 IN ()))))OR((- (vt1.c0)))))OR('0.004726441399036885')))OR(vt1.c0)))AND((vt1.c0 IN ())))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((rt0.c0) NOTNULL) IN ())) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT ((((rt0.c0) NOTNULL) IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((((rt0.c0) NOTNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) END GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) END WHERE ((TRIM(rt0.c0) IN ())) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) END WHERE ((NOT ((TRIM(rt0.c0) IN ())))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) END WHERE ((((TRIM(rt0.c0) IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) END GROUP BY vt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1 HAVING SUM(AVG(COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(AVG(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1 HAVING ((SUM(AVG(COUNT(*)))) ISNULL);
SELECT * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0)==(rt0.c2))) NOT NULL)) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (((((rt0.c0)=(rt0.c2))) NOT NULL)))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE (((((((rt0.c0)=(rt0.c2))) NOT NULL)) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'') NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((x'') NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((x'') NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (rt0.c2) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE ((NOT (rt0.c2))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE (((rt0.c2) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (((((TOTAL(rt0.c1) IN ()))OR(MIN(x''))))AND((((vt0.c0, MIN(MAX(SUM(MIN(rt0.c2)))), AVG(vt0.c0))) NOT BETWEEN ((rt0.c0, COUNT(*), GROUP_CONCAT(vt0.c0))) AND ((MIN(COUNT(vt0.c0)), AVG(vt0.c0), MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((((TOTAL(rt0.c1) IN ()))OR(MIN(x''))))AND((((vt0.c0, MIN(MAX(SUM(MIN(rt0.c2)))), AVG(vt0.c0))) NOT BETWEEN ((rt0.c0, COUNT(*), GROUP_CONCAT(vt0.c0))) AND ((MIN(COUNT(vt0.c0)), AVG(vt0.c0), MIN(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (((((((TOTAL(rt0.c1) IN ()))OR(MIN(x''))))AND((((vt0.c0, MIN(MAX(SUM(MIN(rt0.c2)))), AVG(vt0.c0))) NOT BETWEEN ((rt0.c0, COUNT(*), GROUP_CONCAT(vt0.c0))) AND ((MIN(COUNT(vt0.c0)), AVG(vt0.c0), MIN(vt0.c0))))))) ISNULL);
SELECT * FROM rt0 CROSS JOIN vt0 ON NULL;
SELECT * FROM rt0 CROSS JOIN vt0 ON NULL WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END END) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON NULL WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END END))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON NULL WHERE (((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END END) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON NULL;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON rt0.c0 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)<((rt0.c2 IN ())));
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((- ((x'dfe1' IN ())))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((- ((x'dfe1' IN ())))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((- ((x'dfe1' IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL('s)Ta9L'))) NOTNULL) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((COUNT(TOTAL('s)Ta9L'))) NOTNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((COUNT(TOTAL('s)Ta9L'))) NOTNULL)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) NOT NULL))) AND (((rt0.c1 IN ()))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c1) NOT NULL))) AND (((rt0.c1 IN ()))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c1) NOT NULL))) AND (((rt0.c1 IN ()))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c2 COLLATE BINARY)||((rt0.c1 IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)||((rt0.c1 IN ())))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c2 COLLATE BINARY)||((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))=(((vt0.c0) IS TRUE))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))=(((vt0.c0) IS TRUE))) GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(GROUP_CONCAT(SUM(vt0.c0)))) NOTNULL) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt0.c0) IS TRUE))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((MAX(GROUP_CONCAT(SUM(vt0.c0)))) NOTNULL))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt0.c0) IS TRUE))) GROUP BY vt0.c0, vt1.c0 HAVING ((((MAX(GROUP_CONCAT(SUM(vt0.c0)))) NOTNULL)) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (UNICODE(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (UNICODE(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((UNICODE(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END) IS FALSE) RIGHT OUTER JOIN vt1 ON 1.252435116E9;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END) IS FALSE) RIGHT OUTER JOIN vt1 ON 1.252435116E9 WHERE ((((NOT (rt0.c1)))=((NOT (rt0.c2))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END) IS FALSE) RIGHT OUTER JOIN vt1 ON 1.252435116E9 WHERE ((NOT ((((NOT (rt0.c1)))==((NOT (rt0.c2))))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END) IS FALSE) RIGHT OUTER JOIN vt1 ON 1.252435116E9 WHERE ((((((NOT (rt0.c1)))=((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END) IS FALSE) RIGHT OUTER JOIN vt1 ON 1.252435116E9;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 WHERE (UPPER(DISTINCT (rt0.c0 IN (rt0.c0, rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT (UPPER(DISTINCT (rt0.c0 IN (rt0.c0, rt0.c0)))))) GROUP BY rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 WHERE (((UPPER(DISTINCT (rt0.c0 IN (rt0.c0, rt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT MAX((((rt0.c1 IN (vt1.c0, rt0.c0))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((((((((vt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))))) FROM vt1, vt0, rt0;
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c0)||(((vt0.c0)IS NOT(vt0.c0)))) FULL OUTER JOIN vt0 ON (((~ (vt1.c0))) BETWEEN ('M3%m/cN壡-') AND (((0.8156281098592719)<=(rt0.c1))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (ABS(x'' COLLATE RTRIM)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (ABS(x'' COLLATE RTRIM)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((ABS(x'' COLLATE RTRIM)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(COUNT(TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(TOTAL(COUNT(*))))) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))) NOT NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))) NOT NULL)))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))) NOT NULL)) ISNULL));
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (LIKELIHOOD(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(-1117635055)), 0.9743438339102635)) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (LIKELIHOOD(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(-1117635055)), 0.9743438339102635)))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((LIKELIHOOD(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(-1117635055)), 0.9743438339102635)) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)!=(rt0.c2))))<=((CASE WHEN vt0.c0 THEN 0Xc0347bf END))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)<>(rt0.c2))))<=((CASE WHEN vt0.c0 THEN 0xc0347bf END))) WHERE (CAST(rt0.c2 COLLATE NOCASE AS NUMERIC)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)!=(rt0.c2))))<=((CASE WHEN vt0.c0 THEN 0Xc0347bf END))) WHERE ((NOT (CAST(rt0.c2 COLLATE NOCASE AS NUMERIC)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)<>(rt0.c2))))<=((CASE WHEN vt0.c0 THEN 0xc0347bf END))) WHERE (((CAST(rt0.c2 COLLATE NOCASE AS NUMERIC)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)!=(rt0.c2))))<=((CASE WHEN vt0.c0 THEN 0Xc0347bf END))) GROUP BY rt0.c1;
SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON (((('16223576') NOT NULL)) NOT NULL) CROSS JOIN vt0 ON CAST((((vt1.c0))<(('췩l'))) AS TEXT);
SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON (((('16223576') NOT NULL)) NOT NULL) CROSS JOIN vt0 ON CAST((((vt1.c0))<(('췩l'))) AS TEXT) WHERE (CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)<>(vt1.c0)) WHEN 0.8937714598570309 THEN ((rt0.c1)<(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN x'' ELSE ((rt0.c0)>=(vt1.c0)) END) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON (((('16223576') NOT NULL)) NOT NULL) CROSS JOIN vt0 ON CAST((((vt1.c0))<(('췩l'))) AS TEXT) WHERE ((NOT (CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)!=(vt1.c0)) WHEN 0.8937714598570309 THEN ((rt0.c1)<(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN x'' ELSE ((rt0.c0)>=(vt1.c0)) END))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON (((('16223576') NOT NULL)) NOT NULL) CROSS JOIN vt0 ON CAST((((vt1.c0))<(('췩l'))) AS TEXT) WHERE (((CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)<>(vt1.c0)) WHEN 0.8937714598570309 THEN ((rt0.c1)<(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN x'' ELSE ((rt0.c0)>=(vt1.c0)) END) ISNULL));
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON (((('16223576') NOT NULL)) NOT NULL) CROSS JOIN vt0 ON CAST((((vt1.c0))<(('췩l'))) AS TEXT);
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1 HAVING ')쮞P瓝A4' UNION ALL SELECT rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1 HAVING (NOT (')쮞P瓝A4')) UNION ALL SELECT ALL rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1 HAVING ((')쮞P瓝A4') ISNULL);
SELECT ALL rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1 HAVING ')쮞P瓝A4' UNION ALL SELECT rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1 HAVING (NOT (')쮞P瓝A4')) UNION ALL SELECT ALL rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1 HAVING ((')쮞P瓝A4') ISNULL);
SELECT ALL rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON (0.8891407664449377 IN (vt1.c0, x'd0d5')) COLLATE BINARY GROUP BY rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1;
SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE (((((rt0.c0) NOTNULL))AND(((rt0.c2) ISNULL)))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))AND(((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE (((((((rt0.c0) NOTNULL))AND(((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, vt1, rt0;
SELECT ALL vt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('c\r'))) BETWEEN (((vt0.c0)&(vt1.c0))) AND (CASE WHEN rt0.c2 THEN '+4tmQ쵅I撑' ELSE vt1.c0 END)) CROSS JOIN vt0 ON (((((x'f5896edf05d6')) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (NULL)) GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c2 HAVING (CASE WHEN SUM(MIN(MAX(GROUP_CONCAT(TOTAL(vt1.c0))))) THEN MAX(GROUP_CONCAT(vt0.c0)) ELSE MAX(MIN(rt0.c1)) END IN (COUNT(*), MIN(MAX(rt0.c2)))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c2 HAVING (NOT ((CASE WHEN SUM(MIN(MAX(GROUP_CONCAT(TOTAL(vt1.c0))))) THEN MAX(GROUP_CONCAT(vt0.c0)) ELSE MAX(MIN(rt0.c1)) END IN (COUNT(*), MIN(MAX(rt0.c2)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c2 HAVING (((CASE WHEN SUM(MIN(MAX(GROUP_CONCAT(TOTAL(vt1.c0))))) THEN MAX(GROUP_CONCAT(vt0.c0)) ELSE MAX(MIN(rt0.c1)) END IN (COUNT(*), MIN(MAX(rt0.c2))))) ISNULL);
SELECT * FROM vt0, vt1, rt0;
SELECT * FROM vt0, vt1, rt0 WHERE (((((rt0.c0)>=(vt0.c0)))/(((rt0.c0)|(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (((((rt0.c0)>=(vt0.c0)))/(((rt0.c0)|(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((rt0.c0)>=(vt0.c0)))/(((rt0.c0)|(vt0.c0))))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)OR(rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)OR(rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)OR(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((rt0.c2) BETWEEN (TRIM(x'')) AND (CAST(rt0.c1 AS REAL))) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((rt0.c2) BETWEEN (TRIM(x'')) AND (CAST(rt0.c1 AS REAL))) WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))  WHEN (((rt0.c1))==((rt0.c1))) THEN vt1.c0 END) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((rt0.c2) BETWEEN (TRIM(x'')) AND (CAST(rt0.c1 AS REAL))) WHERE ((NOT (CASE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))  WHEN (((rt0.c1))==((rt0.c1))) THEN vt1.c0 END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((rt0.c2) BETWEEN (TRIM(x'')) AND (CAST(rt0.c1 AS REAL))) WHERE (((CASE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))  WHEN (((rt0.c1))=((rt0.c1))) THEN vt1.c0 END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((rt0.c2) BETWEEN (TRIM(x'')) AND (CAST(rt0.c1 AS REAL))) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN ()))>=((NOT (rt0.c1)))) FULL OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND ('1383805782')) GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN ()))>=((NOT (rt0.c1)))) FULL OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND ('1383805782')) GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((((GROUP_CONCAT(MIN(rt0.c0)))OR(((vt1.c0) NOT BETWEEN (GROUP_CONCAT(rt0.c0)) AND (MIN(SUM(GROUP_CONCAT(COUNT(vt1.c0)))))))))OR((- (SUM('-2080428765'))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN ()))>=((NOT (rt0.c1)))) FULL OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND ('1383805782')) GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (((((GROUP_CONCAT(MIN(rt0.c0)))OR(((vt1.c0) NOT BETWEEN (GROUP_CONCAT(rt0.c0)) AND (MIN(SUM(GROUP_CONCAT(COUNT(vt1.c0)))))))))OR((- (SUM('-2080428765'))))))) UNION ALL SELECT rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN ()))>=((NOT (rt0.c1)))) FULL OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND ('1383805782')) GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((((((GROUP_CONCAT(MIN(rt0.c0)))OR(((vt1.c0) NOT BETWEEN (GROUP_CONCAT(rt0.c0)) AND (MIN(SUM(GROUP_CONCAT(COUNT(vt1.c0)))))))))OR((- (SUM('-2080428765')))))) ISNULL);
SELECT rt0.c1 FROM rt0, vt1;
SELECT rt0.c1 FROM rt0, vt1 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) UNION ALL SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT ((rt0.c1 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c1 IN ()) COLLATE NOCASE) ISNULL));
SELECT rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LIKELY(DISTINCT vt1.c0) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LIKELY(DISTINCT vt1.c0) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LIKELY(DISTINCT vt1.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY) ISNULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(LOWER(DISTINCT rt0.c0) AS TEXT) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(LOWER(DISTINCT rt0.c0) AS TEXT))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(LOWER(DISTINCT rt0.c0) AS TEXT)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(LOWER(DISTINCT rt0.c0) AS TEXT) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(LOWER(DISTINCT rt0.c0) AS TEXT))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(LOWER(DISTINCT rt0.c0) AS TEXT)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL MIN(rt0.c2) FROM vt0, rt0, vt1 ORDER BY ((SUBSTR('?6?', NULL))&(rt0.c0)) DESC  NULLS LAST, vt0.c0  NULLS LAST;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE (0.04519593809350486) UNION ALL SELECT rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT (0.04519593809350486))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE (((0.04519593809350486) ISNULL));
SELECT ALL rt0.c1 FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE ((((vt1.c0, '', vt1.c0)) BETWEEN ((((rt0.c2)||(NULL)), (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), '-744062387')) AND ((((rt0.c1)<(rt0.c0)), (((vt1.c0, vt1.c0, rt0.c0))<((rt0.c2, rt0.c1, rt0.c0))), (+ (rt0.c1)))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT ((((vt1.c0, '', vt1.c0)) BETWEEN ((((rt0.c2)||(NULL)), (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), '-744062387')) AND ((((rt0.c1)<(rt0.c0)), (((vt1.c0, vt1.c0, rt0.c0))<((rt0.c2, rt0.c1, rt0.c0))), (+ (rt0.c1)))))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE ((((((vt1.c0, '', vt1.c0)) BETWEEN ((((rt0.c2)||(NULL)), (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), '-744062387')) AND ((((rt0.c1)<(rt0.c0)), (((vt1.c0, vt1.c0, rt0.c0))<((rt0.c2, rt0.c1, rt0.c0))), (+ (rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (('')<>(CAST(vt0.c0 AS INTEGER))) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (('')!=(CAST(vt0.c0 AS INTEGER))) WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (('')!=(CAST(vt0.c0 AS INTEGER))) WHERE ((NOT ((((rt0.c1 IN ())) ISNULL)))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (('')<>(CAST(vt0.c0 AS INTEGER))) WHERE ((((((rt0.c1 IN ())) ISNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (('')<>(CAST(vt0.c0 AS INTEGER))) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX((((COUNT(*), vt0.c0, vt0.c0)) BETWEEN ((SUM(x'1b1c'), COUNT(TOTAL(COUNT(vt0.c0))), AVG(vt0.c0))) AND ((vt0.c0, MAX(vt0.c0), COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX((((COUNT(*), vt0.c0, vt0.c0)) BETWEEN ((SUM(x'1b1c'), COUNT(TOTAL(COUNT(vt0.c0))), AVG(vt0.c0))) AND ((vt0.c0, MAX(vt0.c0), COUNT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX((((COUNT(*), vt0.c0, vt0.c0)) BETWEEN ((SUM(x'1b1c'), COUNT(TOTAL(COUNT(vt0.c0))), AVG(vt0.c0))) AND ((vt0.c0, MAX(vt0.c0), COUNT(vt0.c0)))))) ISNULL);
SELECT ALL TOTAL((- ((rt0.c1 IN (rt0.c0))))) FROM vt0, rt0, vt1 ORDER BY (((+ (rt0.c2)))LIKE(((vt0.c0)<=(vt1.c0)))) DESC  NULLS FIRST, (- (0.004726441399036885)), NULLIF(SQLITE_VERSION(), ((vt1.c0)&(rt0.c0)));
SELECT vt1.c0, rt0.c0 FROM vt0, rt0, vt1;
SELECT vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE (UNICODE(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (UNICODE(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE (((UNICODE(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) ISNULL));
SELECT vt1.c0, rt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((NOT (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((((NOT (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt0, rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (TRIM(((vt1.c0)&(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (TRIM(((vt1.c0)&(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((TRIM(((vt1.c0)&(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING CASE (((COUNT(*)))==((vt1.c0)))  WHEN MAX(GROUP_CONCAT(0.25798991979329255)) THEN (((vt1.c0, COUNT(*), SUM(vt1.c0)))>=((SUM(vt1.c0), MIN(vt0.c0), COUNT(*)))) END UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CASE (((COUNT(*)))=((vt1.c0)))  WHEN MAX(GROUP_CONCAT(0.25798991979329255)) THEN (((vt1.c0, COUNT(*), SUM(vt1.c0)))>=((SUM(vt1.c0), MIN(vt0.c0), COUNT(*)))) END)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((CASE (((COUNT(*)))==((vt1.c0)))  WHEN MAX(GROUP_CONCAT(0.25798991979329255)) THEN (((vt1.c0, COUNT(*), SUM(vt1.c0)))>=((SUM(vt1.c0), MIN(vt0.c0), COUNT(*)))) END) ISNULL);
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE (UPPER(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE ((NOT (UPPER(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE (((UPPER(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))) ISNULL));
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((0.13861901801531828) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (((rt0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (((0.13861901801531828) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (((rt0.c1) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((((0.13861901801531828) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (((rt0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))/(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0 IN ()))/(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c0 IN ()))/(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MIN((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c0)>(rt0.c0)), NULL COLLATE BINARY, rt0.c0 COLLATE NOCASE)) AND ((('' IN ()), '7ₑjbV_Y-L', (+ ('-1241329875')))))) FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))%(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) ASC;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS REAL) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS REAL) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM vt1, rt0 NOT INDEXED WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (CASE WHEN '' THEN vt1.c0 WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) THEN rt0.c1 WHEN '16223576' THEN ((vt1.c0) ISNULL) END) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CASE WHEN '' THEN vt1.c0 WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) THEN rt0.c1 WHEN '16223576' THEN ((vt1.c0) ISNULL) END))) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((CASE WHEN '' THEN vt1.c0 WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) THEN rt0.c1 WHEN '16223576' THEN ((vt1.c0) ISNULL) END) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING x'5d01' UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (x'5d01')) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((x'5d01') ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING x'5d01' UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (x'5d01')) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((x'5d01') ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN '&?' THEN ((vt0.c0)&(vt1.c0)) ELSE (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, 0.11725638717846754)) AND ((vt0.c0, vt1.c0, vt1.c0))) END) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN '&?' THEN ((vt0.c0)&(vt1.c0)) ELSE (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, 0.11725638717846754)) AND ((vt0.c0, vt1.c0, vt1.c0))) END))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN '&?' THEN ((vt0.c0)&(vt1.c0)) ELSE (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, 0.11725638717846754)) AND ((vt0.c0, vt1.c0, vt1.c0))) END) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((+ (ABS('557967322')))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT ((+ (ABS('557967322')))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((((+ (ABS('557967322')))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID()) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING UPPER(DISTINCT GROUP_CONCAT(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (UPPER(DISTINCT GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((UPPER(DISTINCT GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))==((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT ((((vt1.c0))=((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE ((((NOT ((((vt1.c0))==((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN '' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)/(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN '' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)/(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN '' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)/(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MAX(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MAX(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MAX(vt1.c0))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1, vt0;
SELECT rt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (CAST(((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE (((CAST(((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)) AS NUMERIC)) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0 WHERE (CASE WHEN DATE(vt1.c0, x'9b6e486e', '385515160', vt0.c0, vt1.c0) THEN UNLIKELY(rt0.c1) END) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (CASE WHEN DATE(vt1.c0, x'9b6e486e', '385515160', vt0.c0, vt1.c0) THEN UNLIKELY(rt0.c1) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0 WHERE (((CASE WHEN DATE(vt1.c0, x'9b6e486e', '385515160', vt0.c0, vt1.c0) THEN UNLIKELY(rt0.c1) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0;
SELECT vt0.c0, vt1.c0 FROM vt1 NOT INDEXED CROSS JOIN vt0 ON ((((((''))>((vt1.c0)))))>((((vt0.c0)/(vt0.c0))))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((((((''))>((vt1.c0)))))>((((vt0.c0)/(vt0.c0))))) WHERE (((('1328158170' IN (vt1.c0))) BETWEEN (TRIM(vt0.c0, vt0.c0)) AND (NULL))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((((((''))>((vt1.c0)))))>((((vt0.c0)/(vt0.c0))))) WHERE ((NOT (((('1328158170' IN (vt1.c0))) BETWEEN (TRIM(vt0.c0, vt0.c0)) AND (NULL))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((((((''))>((vt1.c0)))))>((((vt0.c0)/(vt0.c0))))) WHERE (((((('1328158170' IN (vt1.c0))) BETWEEN (TRIM(vt0.c0, vt0.c0)) AND (NULL))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 NOT INDEXED CROSS JOIN vt0 ON ((((((''))>((vt1.c0)))))>((((vt0.c0)/(vt0.c0))))) GROUP BY vt0.c0, vt1.c0;
SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (('0.6284299318951262')-(((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (('0.6284299318951262')-(((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0 HAVING ((AVG(MIN(rt0.c1)))<=(((rt0.c1) NOT BETWEEN (vt1.c0) AND (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (('0.6284299318951262')-(((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0 HAVING (NOT (((AVG(MIN(rt0.c1)))<=(((rt0.c1) NOT BETWEEN (vt1.c0) AND (GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (('0.6284299318951262')-(((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0 HAVING ((((AVG(MIN(rt0.c1)))<=(((rt0.c1) NOT BETWEEN (vt1.c0) AND (GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((- (NULL COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- (NULL COLLATE NOCASE))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((- (NULL COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((- (TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((- (TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((- (TOTAL(vt1.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (((CAST(rt0.c1 AS BLOB)))==(((rt0.c1 IN ()))));
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (((CAST(rt0.c1 AS BLOB)))==(((rt0.c1 IN ())))) WHERE (CAST(((x'')>=(vt0.c0)) AS BLOB)) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (((CAST(rt0.c1 AS BLOB)))=(((rt0.c1 IN ())))) WHERE ((NOT (CAST(((x'')>=(vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (((CAST(rt0.c1 AS BLOB)))==(((rt0.c1 IN ())))) WHERE (((CAST(((x'')>=(vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (((CAST(rt0.c1 AS BLOB)))==(((rt0.c1 IN ()))));
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (UNLIKELY(DISTINCT (((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c2))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT (((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c2))=((rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c2))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((UNLIKELY(DISTINCT (((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c0) IS TRUE))AND('')))AND(rt0.c1)))AND(rt0.c2)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))) GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (x'82a6') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (x'82a6'))) UNION SELECT DISTINCT * FROM vt1 WHERE (((x'82a6') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE (COALESCE(DISTINCT CAST(vt1.c0 AS INTEGER), rt0.c1 COLLATE NOCASE, ((rt0.c2) NOT NULL), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (x'9a63')))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (COALESCE(DISTINCT CAST(vt1.c0 AS INTEGER), rt0.c1 COLLATE NOCASE, ((rt0.c2) NOT NULL), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (x'9a63')))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE (((COALESCE(DISTINCT CAST(vt1.c0 AS INTEGER), rt0.c1 COLLATE NOCASE, ((rt0.c2) NOT NULL), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (x'9a63')))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(AVG(TOTAL(rt0.c0)))) IS FALSE) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((GROUP_CONCAT(AVG(TOTAL(rt0.c0)))) IS FALSE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(AVG(TOTAL(rt0.c0)))) IS FALSE)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) ISNULL)) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'8740', x'', vt1.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '7+^F^%b' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'8740', x'', vt1.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '7+^F^%b' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'8740', x'', vt1.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '7+^F^%b' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING GROUP_CONCAT((- (MAX(COUNT(AVG(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT((- (MAX(COUNT(AVG(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT((- (MAX(COUNT(AVG(rt0.c0))))))) ISNULL);
SELECT ALL MIN((COALESCE(rt0.c0, rt0.c1) IN ())) FROM vt1, rt0;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON vt1.c0;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((((rt0.c1)LIKE(rt0.c1)) IN ((rt0.c2 IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT ((((rt0.c1)LIKE(rt0.c1)) IN ((rt0.c2 IN ())))))) UNION ALL SELECT * FROM rt0, vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((((((rt0.c1)LIKE(rt0.c1)) IN ((rt0.c2 IN ())))) ISNULL));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((rt0.c2)-(vt1.c0))) BETWEEN (((((rt0.c1)OR(0.48827213791415447)))AND(vt0.c0))) AND (CAST(rt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((((rt0.c2)-(vt1.c0))) BETWEEN (((((rt0.c1)OR(0.48827213791415447)))AND(vt0.c0))) AND (CAST(rt0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((rt0.c2)-(vt1.c0))) BETWEEN (((((rt0.c1)OR(0.48827213791415447)))AND(vt0.c0))) AND (CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN ((((x'', rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c2)))) AND (((rt0.c1)AND(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) NOT BETWEEN ((((x'', rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c2)))) AND (((rt0.c1)AND(rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c0))) NOT BETWEEN ((((x'', rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c2)))) AND (((rt0.c1)AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ());
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE ((((NOT (rt0.c2))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (((rt0.c0) IS TRUE)))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE ((NOT ((((NOT (rt0.c2))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (((rt0.c0) IS TRUE)))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE ((((((NOT (rt0.c2))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (((rt0.c0) IS TRUE)))) ISNULL));
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ());
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('1809381734') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('1809381734'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('1809381734') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))>((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) GROUP BY vt1.c0, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))>((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))))) GROUP BY vt1.c0, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))>((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt1, vt0 INNER JOIN rt0 ON '1739768681' GROUP BY vt1.c0, rt0.c2, vt0.c0;
SELECT vt1.c0, rt0.c2, vt0.c0 FROM vt1, vt0 INNER JOIN rt0 ON '1739768681' GROUP BY vt1.c0, rt0.c2, vt0.c0 HAVING TOTAL(((vt0.c0)IS(AVG(SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt1, vt0 INNER JOIN rt0 ON '1739768681' GROUP BY vt1.c0, rt0.c2, vt0.c0 HAVING (NOT (TOTAL(((vt0.c0)IS(AVG(SUM(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt1, vt0 INNER JOIN rt0 ON '1739768681' GROUP BY vt1.c0, rt0.c2, vt0.c0 HAVING ((TOTAL(((vt0.c0)IS(AVG(SUM(vt1.c0)))))) ISNULL);
SELECT * FROM rt0, vt0, vt1;
SELECT * FROM rt0, vt0, vt1 WHERE ((((('')AND((rt0.c2 IN ()))))OR(json_remove(rt0.c2, rt0.c2)))) UNION ALL SELECT * FROM rt0, vt0 NOT INDEXED, vt1 WHERE ((NOT ((((('')AND((rt0.c2 IN ()))))OR(json_remove(rt0.c2, rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((('')AND((rt0.c2 IN ()))))OR(json_remove(rt0.c2, rt0.c2)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(rt0.c0);
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(rt0.c0) WHERE (0.9232426337290287) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(rt0.c0) WHERE ((NOT (0.9232426337290287))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(rt0.c0) WHERE (((0.9232426337290287) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(rt0.c0);
SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, vt1.c0;
SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) GROUP BY vt0.c0, rt0.c0, vt1.c0 UNION SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)))) GROUP BY vt0.c0, rt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) ISNULL)) GROUP BY vt0.c0, rt0.c0, vt1.c0;
SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(COUNT(*))))<>((COUNT(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT ((((TOTAL(COUNT(*))))!=((COUNT(MAX(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((TOTAL(COUNT(*))))!=((COUNT(MAX(vt0.c0)))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) ISNULL)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((((((((((rt0.c1) ISNULL))AND(rt0.c0)))OR(((vt1.c0) NOTNULL))))AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((((((((((((((rt0.c1) ISNULL))AND(rt0.c0)))OR(((vt1.c0) NOTNULL))))AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((((((((((((rt0.c1) ISNULL))AND(rt0.c0)))OR(((vt1.c0) NOTNULL))))AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (((- (vt1.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 NOT INDEXED INNER JOIN vt1 ON (((- (vt1.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((- (CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (((- (vt1.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((NOT ((- (CASE WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (((- (vt1.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((((- (CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (((- (vt1.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(COUNT(SUM(COUNT(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((NOT (AVG(COUNT(SUM(COUNT(rt0.c0)))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((NOT (AVG(COUNT(SUM(COUNT(rt0.c0))))))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c0)<=(vt1.c0)) AS REAL)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((-75926102)) NOT BETWEEN ((JULIANDAY(rt0.c0, 0.8257746742367645, rt0.c1, rt0.c1, rt0.c0))) AND ((((rt0.c1)&(rt0.c1)))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((-75926102)) NOT BETWEEN ((JULIANDAY(rt0.c0, 0.8257746742367645, rt0.c1, rt0.c1, rt0.c0))) AND ((((rt0.c1)&(rt0.c1)))))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((-75926102)) NOT BETWEEN ((JULIANDAY(rt0.c0, 0.8257746742367645, rt0.c1, rt0.c1, rt0.c0))) AND ((((rt0.c1)&(rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0 HAVING SUM((rt0.c1 IN ())) UNION ALL SELECT vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((rt0.c1 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0 HAVING ((SUM((rt0.c1 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0 HAVING SUM((rt0.c1 IN ())) UNION ALL SELECT vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((rt0.c1 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0 HAVING ((SUM((rt0.c1 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM vt1, rt0;
SELECT rt0.c1 FROM vt1, rt0 WHERE ((((- (rt0.c1)))=((vt1.c0 IN ())))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((- (rt0.c1)))=((vt1.c0 IN ())))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((((((- (rt0.c1)))=((vt1.c0 IN ())))) ISNULL));
SELECT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((0X14d6eb4f)) AND ((((rt0.c0) NOTNULL))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((0x14d6eb4f)) AND ((((rt0.c0) NOTNULL))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((0X14d6eb4f)) AND ((((rt0.c0) NOTNULL))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((((vt0.c0)) NOT BETWEEN ((SUM(vt0.c0))) AND ((COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((((vt0.c0)) NOT BETWEEN ((SUM(vt0.c0))) AND ((COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((((vt0.c0)) NOT BETWEEN ((SUM(vt0.c0))) AND ((COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)==(rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-744062387'))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)==(rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-744062387'))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((rt0.c1)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND ((vt0.c0)))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)==(rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-744062387'))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((NOT ((((rt0.c1)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)==(rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-744062387'))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((((rt0.c1)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND ((vt0.c0)))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)==(rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-744062387'))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (CASE WHEN rt0.c2 THEN vt1.c0 ELSE 'X^FXVႾ T' END COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c2 THEN vt1.c0 ELSE 'X^FXVႾ T' END COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN vt1.c0 ELSE 'X^FXVႾ T' END COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((NOT (vt0.c0)), vt1.c0 COLLATE NOCASE, TRIM(vt0.c0)))=((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((NOT (vt0.c0)), vt1.c0 COLLATE NOCASE, TRIM(vt0.c0)))==((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((NOT (vt0.c0)), vt1.c0 COLLATE NOCASE, TRIM(vt0.c0)))=((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((vt0.c0)OR(rt0.c0)))OR(MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (((((vt0.c0)OR(rt0.c0)))OR(MAX(rt0.c0))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((((vt0.c0)OR(rt0.c0)))OR(MAX(rt0.c0)))) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((vt0.c0)OR(rt0.c0)))OR(MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (((((vt0.c0)OR(rt0.c0)))OR(MAX(rt0.c0))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((((vt0.c0)OR(rt0.c0)))OR(MAX(rt0.c0)))) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL TOTAL((((rt0.c0)>(rt0.c2)) IN ((~ (rt0.c2))))) FROM vt0, rt0, vt1 ORDER BY (((- (vt0.c0)))<>(((rt0.c0) NOTNULL)));
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NULL IN ())) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT ((NULL IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((NULL IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (SQLITE_COMPILEOPTION_USED(NULL)) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(NULL)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((SQLITE_COMPILEOPTION_USED(NULL)) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(COUNT(vt1.c0)) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(COUNT(vt1.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(LOWER(DISTINCT vt1.c0) AS NUMERIC)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(LOWER(DISTINCT vt1.c0) AS NUMERIC)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(LOWER(DISTINCT vt1.c0) AS NUMERIC)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((+ (IFNULL(vt0.c0, vt1.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT ((+ (IFNULL(vt0.c0, vt1.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((((+ (IFNULL(vt0.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((highlight(rt0.c1, rt0.c0, '-1819095575', 0.564192126808172) IN ((~ (rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((highlight(rt0.c1, rt0.c0, '-1819095575', 0.564192126808172) IN ((~ (rt0.c1))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((highlight(rt0.c1, rt0.c0, '-1819095575', 0.564192126808172) IN ((~ (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING ((((AVG(vt1.c0))OR(((AVG(rt0.c1)) ISNULL))))OR(((GROUP_CONCAT(rt0.c1))&(vt1.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((AVG(vt1.c0))OR(((AVG(rt0.c1)) ISNULL))))OR(((GROUP_CONCAT(rt0.c1))&(vt1.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING ((((((AVG(vt1.c0))OR(((AVG(rt0.c1)) ISNULL))))OR(((GROUP_CONCAT(rt0.c1))&(vt1.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING ((((AVG(vt1.c0))OR(((AVG(rt0.c1)) ISNULL))))OR(((GROUP_CONCAT(rt0.c1))&(vt1.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((AVG(vt1.c0))OR(((AVG(rt0.c1)) ISNULL))))OR(((GROUP_CONCAT(rt0.c1))&(vt1.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING ((((((AVG(vt1.c0))OR(((AVG(rt0.c1)) ISNULL))))OR(((GROUP_CONCAT(rt0.c1))&(vt1.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) ELSE vt0.c0 END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) ELSE vt0.c0 END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) WHERE ((((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))OR(NULL)))OR(vt1.c0)))AND('-1')))AND(rt0.c0)) IN ((vt1.c0 IN (vt1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) WHERE ((NOT ((((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))OR(NULL)))OR(vt1.c0)))AND('-1')))AND(rt0.c0)) IN ((vt1.c0 IN (vt1.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) WHERE ((((((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))OR(NULL)))OR(vt1.c0)))AND('-1')))AND(rt0.c0)) IN ((vt1.c0 IN (vt1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((AVG(SUM(vt1.c0))) NOT NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((AVG(SUM(vt1.c0))) NOT NULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((AVG(SUM(vt1.c0))) NOT NULL))) ISNULL);
SELECT ALL * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((- (rt0.c2))) NOT NULL)) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT ((((- (rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((- (rt0.c2))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', 'C!')))) AND (CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', 'C!')))) AND (CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', 'C!')))) AND (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN vt1 ON (((((rt0.c0 IN ()))OR((vt1.c0 IN ()))))AND(0x4518e1c5)) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN vt1 ON (((((rt0.c0 IN ()))OR((vt1.c0 IN ()))))AND(0X4518e1c5)) WHERE (json_remove(((('G7p')) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN vt1 ON (((((rt0.c0 IN ()))OR((vt1.c0 IN ()))))AND(0x4518e1c5)) WHERE ((NOT (json_remove(((('G7p')) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN vt1 ON (((((rt0.c0 IN ()))OR((vt1.c0 IN ()))))AND(0X4518e1c5)) WHERE (((json_remove(((('G7p')) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN vt1 ON (((((rt0.c0 IN ()))OR((vt1.c0 IN ()))))AND(0x4518e1c5)) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MIN(''))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((NOT (MIN(''))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((NOT (MIN('')))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MIN(''))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((NOT (MIN(''))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((NOT (MIN('')))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((+ (vt1.c0)))LIKE(vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((+ (vt1.c0)))LIKE(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))LIKE(vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (1.32815817E9) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (1.32815817E9))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((1.32815817E9) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 WHERE ((((vt1.c0 IN (rt0.c0, vt1.c0))) NOT NULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((vt1.c0 IN (rt0.c0, vt1.c0))) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, rt0 WHERE ((((((vt1.c0 IN (rt0.c0, vt1.c0))) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0 HAVING TYPEOF(((((AVG(GROUP_CONCAT(rt0.c0)))OR(rt0.c0)))OR(vt1.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (TYPEOF(((((AVG(GROUP_CONCAT(rt0.c0)))OR(rt0.c0)))OR(vt1.c0))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TYPEOF(((((AVG(GROUP_CONCAT(rt0.c0)))OR(rt0.c0)))OR(vt1.c0)))) ISNULL);
SELECT * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((((vt0.c0)<>(rt0.c0)))AND(CAST(x'' AS BLOB))))OR(((((((((x'')AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((NOT (((((((vt0.c0)!=(rt0.c0)))AND(CAST(x'' AS BLOB))))OR(((((((((x'')AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((((((vt0.c0)!=(rt0.c0)))AND(CAST(x'' AS BLOB))))OR(((((((((x'')AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1, rt0.c0))) NOT BETWEEN (rt0.c0) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c1, rt0.c0))) NOT BETWEEN (rt0.c0) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c1 IN (rt0.c1, rt0.c0))) NOT BETWEEN (rt0.c0) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING ((rt0.c2) NOT BETWEEN (MIN(rt0.c0)) AND (((rt0.c0)&(vt1.c0)))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((rt0.c2) NOT BETWEEN (MIN(rt0.c0)) AND (((rt0.c0)&(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING ((((rt0.c2) NOT BETWEEN (MIN(rt0.c0)) AND (((rt0.c0)&(vt1.c0))))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING ((rt0.c2) NOT BETWEEN (MIN(rt0.c0)) AND (((rt0.c0)&(vt1.c0)))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((rt0.c2) NOT BETWEEN (MIN(rt0.c0)) AND (((rt0.c0)&(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING ((((rt0.c2) NOT BETWEEN (MIN(rt0.c0)) AND (((rt0.c0)&(vt1.c0))))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT * FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN ((0.1008758876476985)) AND ((CAST('|V?X4' AS NUMERIC)))) LEFT OUTER JOIN rt0 ON ((((((')쮞p瓝a4'))>((rt0.c1)))))==((((rt0.c1)GLOB(rt0.c1)))));
SELECT * FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN ((0.1008758876476985)) AND ((CAST('|V?X4' AS NUMERIC)))) LEFT OUTER JOIN rt0 ON ((((((')쮞p瓝a4'))>((rt0.c1)))))=((((rt0.c1)GLOB(rt0.c1))))) WHERE (((((rt0.c2) IS FALSE)) NOT NULL)) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN ((0.1008758876476985)) AND ((CAST('|V?X4' AS NUMERIC)))) LEFT OUTER JOIN rt0 ON ((((((')쮞p瓝a4'))>((rt0.c1)))))==((((rt0.c1)GLOB(rt0.c1))))) WHERE ((NOT (((((rt0.c2) IS FALSE)) NOT NULL)))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN ((0.1008758876476985)) AND ((CAST('|V?X4' AS NUMERIC)))) LEFT OUTER JOIN rt0 ON ((((((')쮞p瓝a4'))>((rt0.c1)))))=((((rt0.c1)GLOB(rt0.c1))))) WHERE (((((((rt0.c2) IS FALSE)) NOT NULL)) ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN ((0.1008758876476985)) AND ((CAST('|V?X4' AS NUMERIC)))) LEFT OUTER JOIN rt0 ON ((((((')쮞p瓝a4'))>((rt0.c1)))))==((((rt0.c1)GLOB(rt0.c1)))));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN '1369997637' END) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.11725638717846754)))));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN '1369997637' END) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.11725638717846754))))) WHERE ((((+ (vt0.c0)))<>((NOT (x'025b'))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN '1369997637' END) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.11725638717846754))))) WHERE ((NOT ((((+ (vt0.c0)))<>((NOT (x'025b'))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN '1369997637' END) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.11725638717846754))))) WHERE ((((((+ (vt0.c0)))!=((NOT (x'025b'))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN '1369997637' END) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.11725638717846754)))));
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0) IS FALSE), (((vt0.c0))<>((vt1.c0))))) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0) IS FALSE), (((vt0.c0))<>((vt1.c0))))) WHERE (vt1.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0) IS FALSE), (((vt0.c0))!=((vt1.c0))))) WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0) IS FALSE), (((vt0.c0))<>((vt1.c0))))) WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0) IS FALSE), (((vt0.c0))<>((vt1.c0))))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (((((rt0.c0, COUNT(SUM(GROUP_CONCAT(MIN(MAX(rt0.c2))))), GROUP_CONCAT(MIN(SUM(0.0016975785323027903)))))==((MIN(GROUP_CONCAT(MAX(vt0.c0))), rt0.c0, GROUP_CONCAT(COUNT(rt0.c2))))))|(CAST(MAX(TOTAL(MIN(rt0.c2))) AS TEXT))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (NOT ((((((rt0.c0, COUNT(SUM(GROUP_CONCAT(MIN(MAX(rt0.c2))))), GROUP_CONCAT(MIN(SUM(0.0016975785323027903)))))==((MIN(GROUP_CONCAT(MAX(vt0.c0))), rt0.c0, GROUP_CONCAT(COUNT(rt0.c2))))))|(CAST(MAX(TOTAL(MIN(rt0.c2))) AS TEXT))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (((((((rt0.c0, COUNT(SUM(GROUP_CONCAT(MIN(MAX(rt0.c2))))), GROUP_CONCAT(MIN(SUM(0.0016975785323027903)))))=((MIN(GROUP_CONCAT(MAX(vt0.c0))), rt0.c0, GROUP_CONCAT(COUNT(rt0.c2))))))|(CAST(MAX(TOTAL(MIN(rt0.c2))) AS TEXT)))) ISNULL);
SELECT rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (TRIM(DISTINCT ((vt0.c0)|(rt0.c0)), '-1117635055')) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT (TRIM(DISTINCT ((vt0.c0)|(rt0.c0)), '-1117635055')))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((TRIM(DISTINCT ((vt0.c0)|(rt0.c0)), '-1117635055')) ISNULL));
SELECT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE ('%j/pﵗ') UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ('%j/pﵗ'))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE ((('%j/pﵗ') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt1, vt0, rt0;
SELECT rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE (TRIM(DISTINCT rt0.c0) COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((NOT (TRIM(DISTINCT rt0.c0) COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE (((TRIM(DISTINCT rt0.c0) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c0 GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) NOT BETWEEN ((((vt1.c0, vt1.c0, SUM(vt1.c0)))>((MIN(vt0.c0), vt0.c0, vt0.c0)))) AND (((COUNT(AVG(vt1.c0)))>=(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN ((((vt1.c0, vt1.c0, SUM(vt1.c0)))>((MIN(vt0.c0), vt0.c0, vt0.c0)))) AND (((COUNT(AVG(vt1.c0)))>=(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((COUNT(*)) NOT BETWEEN ((((vt1.c0, vt1.c0, SUM(vt1.c0)))>((MIN(vt0.c0), vt0.c0, vt0.c0)))) AND (((COUNT(AVG(vt1.c0)))>=(vt1.c0))))) ISNULL);
SELECT ALL SUM(vt0.c0) FROM vt0, vt1 ORDER BY json_valid(vt1.c0 COLLATE BINARY)  NULLS FIRST;
SELECT vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ()))&(((rt0.c2) IS FALSE)));
SELECT vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ()))&(((rt0.c2) IS FALSE))) WHERE (((((((((rt0.c2 COLLATE BINARY)OR(((rt0.c1) IS FALSE))))AND((rt0.c2 IN (rt0.c1)))))OR((vt0.c0 IN ()))))OR(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ()))&(((rt0.c2) IS FALSE))) WHERE ((NOT (((((((((rt0.c2 COLLATE BINARY)OR(((rt0.c1) IS FALSE))))AND((rt0.c2 IN (rt0.c1)))))OR((vt0.c0 IN ()))))OR(CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ()))&(((rt0.c2) IS FALSE))) WHERE (((((((((((rt0.c2 COLLATE BINARY)OR(((rt0.c1) IS FALSE))))AND((rt0.c2 IN (rt0.c1)))))OR((vt0.c0 IN ()))))OR(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ()))&(((rt0.c2) IS FALSE)));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST('-1320839304' AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST('-1320839304' AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST('-1320839304' AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0, vt1 WHERE (NULLIF(DISTINCT MIN(rt0.c0, rt0.c1), CASE WHEN vt1.c0 THEN x'fa25' WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (NULLIF(DISTINCT MIN(rt0.c0, rt0.c1), CASE WHEN vt1.c0 THEN x'fa25' WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0, vt1 WHERE (((NULLIF(DISTINCT MIN(rt0.c0, rt0.c1), CASE WHEN vt1.c0 THEN x'fa25' WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CAST(rt0.c1 AS REAL) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CAST(rt0.c1 AS REAL) COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CAST(rt0.c1 AS REAL) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CAST(rt0.c1 AS REAL) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CAST(rt0.c1 AS REAL) COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CAST(rt0.c1 AS REAL) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ('\F') UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ('\F'))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((('\F') ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1) NOTNULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE '-1929513661' END)))AND(((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))) RIGHT OUTER JOIN vt1 ON vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN ((('') NOTNULL)) AND (json_insert(rt0.c0, NULL, rt0.c1)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) NOT BETWEEN ((('') NOTNULL)) AND (json_insert(rt0.c0, NULL, rt0.c1)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c0))) NOT BETWEEN ((('') NOTNULL)) AND (json_insert(rt0.c0, NULL, rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING MAX('') UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(''))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX('')) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING MAX('') UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(''))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX('')) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON 'x}' RIGHT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c1 FROM vt0, rt0, vt1;
SELECT vt1.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE ((((((((((0.9603390931570258)OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)) IN ())) UNION ALL SELECT vt1.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT ((((((((((0.9603390931570258)OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)) IN ())))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE ((((((((((((0.9603390931570258)OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)) IN ())) ISNULL));
SELECT ALL vt1.c0, rt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((0Xffffffffe075484b) BETWEEN (vt1.c0) AND (rt0.c1)))AND(((rt0.c2) IS TRUE))))OR(vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((((0Xffffffffe075484b) BETWEEN (vt1.c0) AND (rt0.c1)))AND(((rt0.c2) IS TRUE))))OR(vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((0xffffffffe075484b) BETWEEN (vt1.c0) AND (rt0.c1)))AND(((rt0.c2) IS TRUE))))OR(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((('-797611128')AND(rt0.c2)))OR(rt0.c0))) BETWEEN ((rt0.c0 IN ())) AND ((rt0.c1 IN ())))) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((((('-797611128')AND(rt0.c2)))OR(rt0.c0))) BETWEEN ((rt0.c0 IN ())) AND ((rt0.c1 IN ())))))) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((((('-797611128')AND(rt0.c2)))OR(rt0.c0))) BETWEEN ((rt0.c0 IN ())) AND ((rt0.c1 IN ())))) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt0.c0))) NOTNULL) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt0.c0))) NOTNULL) GROUP BY rt0.c1 HAVING GROUP_CONCAT(MIN(SUM(MAX(AVG(COUNT(SUM(COUNT(*)))))))) UNION ALL SELECT rt0.c1 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt0.c0))) NOTNULL) GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(SUM(MAX(AVG(COUNT(SUM(COUNT(*)))))))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt0.c0))) NOTNULL) GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(MIN(SUM(MAX(AVG(COUNT(SUM(COUNT(*))))))))) ISNULL);
SELECT TOTAL(((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)AND((('365702407') NOT NULL))))OR(vt1.c0 COLLATE RTRIM))) FROM vt0, rt0, vt1 ORDER BY (- (((((rt0.c2)AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST, CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((vt0.c0)||(rt0.c2)) ELSE ((vt0.c0)&(vt0.c0)) END, ((HEX(DISTINCT vt0.c0))*(((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))) DESC;
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((x'') ISNULL)))==((((rt0.c0)>=(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((((((x'') ISNULL)))=((((rt0.c0)>=(rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((((x'') ISNULL)))=((((rt0.c0)>=(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0 HAVING (~ (SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0 HAVING (NOT ((~ (SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0 HAVING (((~ (SUM(rt0.c2)))) ISNULL);
SELECT rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0 HAVING (~ (SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0 HAVING (NOT ((~ (SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0 HAVING (((~ (SUM(rt0.c2)))) ISNULL);
SELECT rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0;
SELECT ALL TOTAL(((vt1.c0)|(IFNULL(rt0.c1, rt0.c2)))) FROM vt1, rt0, vt0;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((NULL IN (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((NULL IN (CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((NULL IN (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (rt0.c1) AND ((- (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((NULL) NOT BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (rt0.c1) AND ((- (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((((NULL) NOT BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (rt0.c1) AND ((- (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE (((CAST(vt1.c0 AS INTEGER)) BETWEEN ((((vt1.c0))>((rt0.c0)))) AND (CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER)) BETWEEN ((((vt1.c0))>((rt0.c0)))) AND (CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE (((((CAST(vt1.c0 AS INTEGER)) BETWEEN ((((vt1.c0))>((rt0.c0)))) AND (CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (- (((rt0.c0)AND(rt0.c1)))) RIGHT OUTER JOIN rt0 ON CAST(vt1.c0 AS REAL);
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((vt1.c0)>>(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (((vt1.c0)>>(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((((vt1.c0)>>(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (UPPER(DISTINCT (rt0.c0 IN (rt0.c2)))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (UPPER(DISTINCT (rt0.c0 IN (rt0.c2)))))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((UPPER(DISTINCT (rt0.c0 IN (rt0.c2)))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CAST(vt1.c0 AS REAL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(vt1.c0 AS REAL))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CAST(vt1.c0 AS REAL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(vt1.c0 AS REAL))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT SUM((('y᱾of{') NOTNULL)) FROM vt1, vt0;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt1, rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt1, rt0, vt0 WHERE (CAST(((vt1.c0)>>(rt0.c1)) AS TEXT)) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (CAST(((vt1.c0)>>(rt0.c1)) AS TEXT)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt1, rt0, vt0 WHERE (((CAST(((vt1.c0)>>(rt0.c1)) AS TEXT)) ISNULL));
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON -1912304352 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON -1912304352 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON -1912304352 WHERE ((NOT ((+ (CAST(vt0.c0 AS TEXT)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON -1912304352 WHERE ((((+ (CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON -1912304352 GROUP BY rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((SUM(vt0.c0)) NOT NULL))AND(((MAX(GROUP_CONCAT(vt0.c0)))==(vt0.c0)))))OR(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((SUM(vt0.c0)) NOT NULL))AND(((MAX(GROUP_CONCAT(vt0.c0)))==(vt0.c0)))))OR(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((SUM(vt0.c0)) NOT NULL))AND(((MAX(GROUP_CONCAT(vt0.c0)))==(vt0.c0)))))OR(MIN(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((('5')>>(CASE WHEN vt0.c0 THEN x'7026' ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED WHERE ((NOT ((('5')>>(CASE WHEN vt0.c0 THEN x'7026' ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((('5')>>(CASE WHEN vt0.c0 THEN x'7026' ELSE vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (CAST(vt0.c0 AS INTEGER)) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING MIN(MIN(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (MIN(MIN(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((MIN(MIN(COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ('C\r') UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ('C\r'))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((('C\r') ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((('232847153')*(vt0.c0)))-(((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((('232847153')*(vt0.c0)))-(((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((('232847153')*(vt0.c0)))-(((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON IFNULL(rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON IFNULL(rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) WHERE (((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c2) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON IFNULL(rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c2) NOTNULL)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON IFNULL(rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) WHERE (((((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c2) NOTNULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON IFNULL(rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) GROUP BY rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING CASE x'61ee'  WHEN ((MAX(AVG(rt0.c1))) BETWEEN (rt0.c1) AND (AVG(GROUP_CONCAT(MIN(rt0.c2))))) THEN TOTAL(SUM(vt0.c0)) END UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (CASE x'61ee'  WHEN ((MAX(AVG(rt0.c1))) BETWEEN (rt0.c1) AND (AVG(GROUP_CONCAT(MIN(rt0.c2))))) THEN TOTAL(SUM(vt0.c0)) END)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((CASE x'61ee'  WHEN ((MAX(AVG(rt0.c1))) BETWEEN (rt0.c1) AND (AVG(GROUP_CONCAT(MIN(rt0.c2))))) THEN TOTAL(SUM(vt0.c0)) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((HEX(DISTINCT vt0.c0)))<((((vt0.c0)<=(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((HEX(DISTINCT vt0.c0)))<((((vt0.c0)<=(vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((HEX(DISTINCT vt0.c0)))<((((vt0.c0)<=(vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT NULL))|(rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL))|(rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOT NULL))|(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c2)+(rt0.c1)))AND(((rt0.c2)*('V1')))))AND(((vt1.c0) IS TRUE)))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c2)+(rt0.c1)))AND(((rt0.c2)*('V1')))))AND(((vt1.c0) IS TRUE)))))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((((((rt0.c2)+(rt0.c1)))AND(((rt0.c2)*('V1')))))AND(((vt1.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)/(rt0.c2)) IN ()) CROSS JOIN vt1 ON ((((NOT (rt0.c2))))>((UPPER(DISTINCT vt0.c0)))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)/(rt0.c2)) IN ()) CROSS JOIN vt1 ON ((((NOT (rt0.c2))))>((UPPER(DISTINCT vt0.c0)))) GROUP BY rt0.c2 HAVING COUNT(((((GROUP_CONCAT(COUNT(*)))OR(vt0.c0)))AND(vt1.c0))) UNION ALL SELECT rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)/(rt0.c2)) IN ()) CROSS JOIN vt1 ON ((((NOT (rt0.c2))))>((UPPER(DISTINCT vt0.c0)))) GROUP BY rt0.c2 HAVING (NOT (COUNT(((((GROUP_CONCAT(COUNT(*)))OR(vt0.c0)))AND(vt1.c0))))) UNION ALL SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)/(rt0.c2)) IN ()) CROSS JOIN vt1 ON ((((NOT (rt0.c2))))>((UPPER(DISTINCT vt0.c0)))) GROUP BY rt0.c2 HAVING ((COUNT(((((GROUP_CONCAT(COUNT(*)))OR(vt0.c0)))AND(vt1.c0)))) ISNULL);
SELECT * FROM vt0, vt1, rt0;
SELECT * FROM vt0, vt1, rt0 WHERE (((((rt0.c0)+(vt1.c0)))-(((rt0.c2)!=('T['))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (((((rt0.c0)+(vt1.c0)))-(((rt0.c2)<>('T['))))))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE (((((((rt0.c0)+(vt1.c0)))-(((rt0.c2)!=('T['))))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON TOTAL_CHANGES() LEFT OUTER JOIN vt1 ON ((RTRIM(rt0.c1))GLOB(CASE 0.307478456638121  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON TOTAL_CHANGES() LEFT OUTER JOIN vt1 ON ((RTRIM(rt0.c1))GLOB(CASE 0.307478456638121  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) WHERE (((((rt0.c2)<<(rt0.c1))) NOT BETWEEN (vt1.c0) AND (((rt0.c0)||(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON TOTAL_CHANGES() LEFT OUTER JOIN vt1 ON ((RTRIM(rt0.c1))GLOB(CASE 0.307478456638121  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) WHERE ((NOT (((((rt0.c2)<<(rt0.c1))) NOT BETWEEN (vt1.c0) AND (((rt0.c0)||(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON TOTAL_CHANGES() LEFT OUTER JOIN vt1 ON ((RTRIM(rt0.c1))GLOB(CASE 0.307478456638121  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) WHERE (((((((rt0.c2)<<(rt0.c1))) NOT BETWEEN (vt1.c0) AND (((rt0.c0)||(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON TOTAL_CHANGES() LEFT OUTER JOIN vt1 ON ((RTRIM(rt0.c1))GLOB(CASE 0.307478456638121  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<<(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)<<(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)<<(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1))<=((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1))<=((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1))<=((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0 WHERE (0.5976268196967421) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (0.5976268196967421))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0 WHERE (((0.5976268196967421) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 NOT INDEXED GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((vt1.c0) BETWEEN ('迹퇿') AND (rt0.c0)))OR(((vt1.c0)IS NOT(rt0.c1)))))AND(((0Xde0f731) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((((vt1.c0) BETWEEN ('迹퇿') AND (rt0.c0)))OR(((vt1.c0)IS NOT(rt0.c1)))))AND(((0Xde0f731) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((((vt1.c0) BETWEEN ('迹퇿') AND (rt0.c0)))OR(((vt1.c0)IS NOT(rt0.c1)))))AND(((0xde0f731) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 NOT INDEXED GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (((rt0.c1, rt0.c0, rt0.c2, MIN(rt0.c1), rt0.c0)) NOT BETWEEN ((COUNT(MIN(rt0.c2)), MIN(vt1.c0), AVG(TOTAL(MIN(rt0.c0))), x'c21e', CASE rt0.c1  WHEN COUNT(*) THEN rt0.c0 ELSE AVG(rt0.c2) END)) AND ((((SUM(COUNT(rt0.c0)))/(GROUP_CONCAT(rt0.c2))), ((COUNT(AVG(rt0.c2)))IS(rt0.c0)), GROUP_CONCAT(MAX(MIN(COUNT(TOTAL(TOTAL(SUM(rt0.c0))))))), TOTAL(AVG(MIN(rt0.c1))), MIN(MIN(COUNT(rt0.c2)))))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT ((((rt0.c1, rt0.c0, rt0.c2, MIN(rt0.c1), rt0.c0)) NOT BETWEEN ((COUNT(MIN(rt0.c2)), MIN(vt1.c0), AVG(TOTAL(MIN(rt0.c0))), x'c21e', CASE rt0.c1  WHEN COUNT(*) THEN rt0.c0 ELSE AVG(rt0.c2) END)) AND ((((SUM(COUNT(rt0.c0)))/(GROUP_CONCAT(rt0.c2))), ((COUNT(AVG(rt0.c2)))IS(rt0.c0)), GROUP_CONCAT(MAX(MIN(COUNT(TOTAL(TOTAL(SUM(rt0.c0))))))), TOTAL(AVG(MIN(rt0.c1))), MIN(MIN(COUNT(rt0.c2)))))))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (((((rt0.c1, rt0.c0, rt0.c2, MIN(rt0.c1), rt0.c0)) NOT BETWEEN ((COUNT(MIN(rt0.c2)), MIN(vt1.c0), AVG(TOTAL(MIN(rt0.c0))), x'c21e', CASE rt0.c1  WHEN COUNT(*) THEN rt0.c0 ELSE AVG(rt0.c2) END)) AND ((((SUM(COUNT(rt0.c0)))/(GROUP_CONCAT(rt0.c2))), ((COUNT(AVG(rt0.c2)))IS(rt0.c0)), GROUP_CONCAT(MAX(MIN(COUNT(TOTAL(TOTAL(SUM(rt0.c0))))))), TOTAL(AVG(MIN(rt0.c1))), MIN(MIN(COUNT(rt0.c2))))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1))>((x'a50d'))), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((')쮞p瓝A4'))), (((rt0.c0))!=((0.4443993125348744))))) AND ((((rt0.c2)||(rt0.c2)), rt0.c2, (+ (rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1))>((x'a50d'))), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((')쮞p瓝A4'))), (((rt0.c0))!=((0.4443993125348744))))) AND ((((rt0.c2)||(rt0.c2)), rt0.c2, (+ (rt0.c1)))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1))>((x'a50d'))), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((')쮞p瓝A4'))), (((rt0.c0))!=((0.4443993125348744))))) AND ((((rt0.c2)||(rt0.c2)), rt0.c2, (+ (rt0.c1)))))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (-1.52186479E9) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (-1.52186479E9))) UNION SELECT DISTINCT * FROM vt1 WHERE (((-1.52186479E9) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(*))/(COUNT(rt0.c1))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (((COUNT(*))/(COUNT(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((((COUNT(*))/(COUNT(rt0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(*))/(COUNT(rt0.c1))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (((COUNT(*))/(COUNT(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((((COUNT(*))/(COUNT(rt0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT * FROM vt1, rt0, vt0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (rt0.c0 COLLATE NOCASE) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL));
SELECT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ('5釃') UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ('5釃'))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((('5釃') ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (TYPEOF(rt0.c1))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (TYPEOF(rt0.c1))) WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (TYPEOF(rt0.c1))) WHERE ((NOT (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (TYPEOF(rt0.c1))) WHERE (((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (TYPEOF(rt0.c1))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM)LIKE(((rt0.c1) NOTNULL))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM)LIKE(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING SUM(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM)LIKE(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM)LIKE(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING ((SUM(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (UPPER(DISTINCT vt0.c0) COLLATE NOCASE) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((NOT (UPPER(DISTINCT vt0.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE (((UPPER(DISTINCT vt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0, vt1 WHERE (((x'')==((((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((x'')==((((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, vt1.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0, vt1 WHERE (((((x'')==((((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, vt1.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((vt1.c0) IS FALSE)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((vt1.c0) IS FALSE))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((vt1.c0) IS FALSE)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((vt1.c0) IS FALSE))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1 INNER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c0))) ISNULL);
SELECT * FROM vt1 INNER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c0))) ISNULL) WHERE (x'0325') UNION ALL SELECT * FROM vt1 INNER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c0))) ISNULL) WHERE ((NOT (x'0325'))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c0))) ISNULL) WHERE (((x'0325') ISNULL));
SELECT * FROM vt1 INNER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c0))) ISNULL);
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((vt0.c0 COLLATE NOCASE IN (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN (((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((vt0.c0 COLLATE NOCASE IN (((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)>=((((vt1.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((vt1.c0, 0.7387355567301336, vt1.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)>=((((vt1.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((vt1.c0, 0.7387355567301336, vt1.c0)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)>=((((vt1.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((vt1.c0, 0.7387355567301336, vt1.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) BETWEEN (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (MIN(vt0.c0)))) AND (CAST(vt0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) BETWEEN (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (MIN(vt0.c0)))) AND (CAST(vt0.c0 AS INTEGER))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) BETWEEN (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (MIN(vt0.c0)))) AND (CAST(vt0.c0 AS INTEGER)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) BETWEEN (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (MIN(vt0.c0)))) AND (CAST(vt0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) BETWEEN (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (MIN(vt0.c0)))) AND (CAST(vt0.c0 AS INTEGER))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) BETWEEN (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (MIN(vt0.c0)))) AND (CAST(vt0.c0 AS INTEGER)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((NOT (((vt0.c0) NOTNULL)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((NOT (((vt0.c0) NOTNULL)))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c2)<>(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c2)!=(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c2)<>(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL))-((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))-((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL))-((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING AVG(((MIN(MIN(rt0.c0)))<(MAX(TOTAL(MAX(MAX(vt1.c0))))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (AVG(((MIN(MIN(rt0.c0)))<(MAX(TOTAL(MAX(MAX(vt1.c0))))))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING ((AVG(((MIN(MIN(rt0.c0)))<(MAX(TOTAL(MAX(MAX(vt1.c0)))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0 NOT INDEXED, vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((COALESCE(vt0.c0, rt0.c1, vt0.c0, -643165759))IS NOT(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((COALESCE(vt0.c0, rt0.c1, vt0.c0, -643165759))IS NOT(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((COALESCE(vt0.c0, rt0.c1, vt0.c0, -643165759))IS NOT(rt0.c0))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0 NOT INDEXED, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((x'faf2', rt0.c1, x'43619b77'))))) AND ((((rt0.c1)<=(rt0.c1)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((x'faf2', rt0.c1, x'43619b77'))))) AND ((((rt0.c1)<=(rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN (((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((x'faf2', rt0.c1, x'43619b77'))))) AND ((((rt0.c1)<=(rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 WHERE ((((((vt1.c0)<(rt0.c0))))>=((vt0.c0)))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 NOT INDEXED WHERE ((NOT ((((((vt1.c0)<(rt0.c0))))>=((vt0.c0)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 WHERE ((((((((vt1.c0)<(rt0.c0))))>=((vt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((GROUP_CONCAT(vt0.c0)) BETWEEN (MAX(GROUP_CONCAT(MIN(vt1.c0)))) AND (GROUP_CONCAT(rt0.c2))))OR((rt0.c0 IN ()))))OR(CASE SUM(vt1.c0)  WHEN rt0.c0 THEN SUM(AVG(rt0.c0)) WHEN rt0.c0 THEN COUNT(*) WHEN rt0.c1 THEN AVG(COUNT(*)) ELSE COUNT(COUNT(*)) END)) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((((((GROUP_CONCAT(vt0.c0)) BETWEEN (MAX(GROUP_CONCAT(MIN(vt1.c0)))) AND (GROUP_CONCAT(rt0.c2))))OR((rt0.c0 IN ()))))OR(CASE SUM(vt1.c0)  WHEN rt0.c0 THEN SUM(AVG(rt0.c0)) WHEN rt0.c0 THEN COUNT(*) WHEN rt0.c1 THEN AVG(COUNT(*)) ELSE COUNT(COUNT(*)) END)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((((GROUP_CONCAT(vt0.c0)) BETWEEN (MAX(GROUP_CONCAT(MIN(vt1.c0)))) AND (GROUP_CONCAT(rt0.c2))))OR((rt0.c0 IN ()))))OR(CASE SUM(vt1.c0)  WHEN rt0.c0 THEN SUM(AVG(rt0.c0)) WHEN rt0.c0 THEN COUNT(*) WHEN rt0.c1 THEN AVG(COUNT(*)) ELSE COUNT(COUNT(*)) END))) ISNULL);
SELECT * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((rt0.c2 COLLATE BINARY)>(SUBSTR(vt0.c0, rt0.c1)))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((NOT (((rt0.c2 COLLATE BINARY)>(SUBSTR(vt0.c0, rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((rt0.c2 COLLATE BINARY)>(SUBSTR(vt0.c0, rt0.c1)))) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((NULLIF(vt1.c0, x''))<>((vt1.c0 IN (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED WHERE ((NOT (((NULLIF(vt1.c0, x''))!=((vt1.c0 IN (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((NULLIF(vt1.c0, x''))<>((vt1.c0 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (0.36078478040541706) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (0.36078478040541706))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((0.36078478040541706) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, COUNT(vt0.c0), TOTAL(vt0.c0)))<>((TOTAL(vt0.c0), MAX(SUM(vt0.c0)), COUNT(MIN(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, COUNT(vt0.c0), TOTAL(vt0.c0)))!=((TOTAL(vt0.c0), MAX(SUM(vt0.c0)), COUNT(MIN(MIN(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, COUNT(vt0.c0), TOTAL(vt0.c0)))<>((TOTAL(vt0.c0), MAX(SUM(vt0.c0)), COUNT(MIN(MIN(vt0.c0))))))) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1 WHERE ((((NOT (rt0.c1)))|((~ (rt0.c1))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT ((((NOT (rt0.c1)))|((~ (rt0.c1))))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1 WHERE ((((((NOT (rt0.c1)))|((~ (rt0.c1))))) ISNULL));
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((rt0.c0)%('403708646')) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((rt0.c0)%('403708646')) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((rt0.c0)%('403708646')) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(((vt0.c0)==(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)=(((vt0.c0)=(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)=(((vt0.c0)=(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((+ (rt0.c0))) ISNULL) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((+ (rt0.c0))) ISNULL))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((+ (rt0.c0))) ISNULL)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((+ (rt0.c0))) ISNULL) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((+ (rt0.c0))) ISNULL))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((+ (rt0.c0))) ISNULL)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((~ (vt0.c0)) IN ())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((~ (vt0.c0)) IN ())))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((~ (vt0.c0)) IN ())) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c0, rt0.c2))<((rt0.c1, x'', vt0.c0)))) RIGHT OUTER JOIN vt1 ON ((-1.348978951E9 IN (rt0.c1)) IN ());
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c0, rt0.c2))<((rt0.c1, x'', vt0.c0)))) RIGHT OUTER JOIN vt1 ON ((-1.348978951E9 IN (rt0.c1)) IN ()) WHERE ((((rt0.c0)) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND (((vt1.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c0, rt0.c2))<((rt0.c1, x'', vt0.c0)))) RIGHT OUTER JOIN vt1 ON ((-1.348978951E9 IN (rt0.c1)) IN ()) WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND (((vt1.c0 IN ()))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c0, rt0.c2))<((rt0.c1, x'', vt0.c0)))) RIGHT OUTER JOIN vt1 ON ((-1.348978951E9 IN (rt0.c1)) IN ()) WHERE ((((((rt0.c0)) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND (((vt1.c0 IN ()))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c0, rt0.c2))<((rt0.c1, x'', vt0.c0)))) RIGHT OUTER JOIN vt1 ON ((-1.348978951E9 IN (rt0.c1)) IN ());
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((x'')AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((x'')AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((x'')AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0 HAVING COUNT((((TOTAL(rt0.c0), vt1.c0, vt0.c0)) NOT BETWEEN ((MAX(vt1.c0), vt1.c0, GROUP_CONCAT(rt0.c2))) AND ((TOTAL(rt0.c1), rt0.c2, COUNT(*))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (COUNT((((TOTAL(rt0.c0), vt1.c0, vt0.c0)) NOT BETWEEN ((MAX(vt1.c0), vt1.c0, GROUP_CONCAT(rt0.c2))) AND ((TOTAL(rt0.c1), rt0.c2, COUNT(*))))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0 HAVING ((COUNT((((TOTAL(rt0.c0), vt1.c0, vt0.c0)) NOT BETWEEN ((MAX(vt1.c0), vt1.c0, GROUP_CONCAT(rt0.c2))) AND ((TOTAL(rt0.c1), rt0.c2, COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (CASE ''  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN NULLIF(vt0.c0, vt0.c0) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ''  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN NULLIF(vt0.c0, vt0.c0) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE ''  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN NULLIF(vt0.c0, vt0.c0) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'2be0' ELSE rt0.c1 END AS INTEGER);
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'2be0' ELSE rt0.c1 END AS INTEGER) WHERE (CASE WHEN '-267485992' THEN CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END WHEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) THEN 0.4836221736623192 WHEN rt0.c2 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (NOT ('-840140366')) WHEN CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END THEN CAST('1159258565' AS BLOB) WHEN ((rt0.c2)!=(vt0.c0)) THEN (((rt0.c1)) BETWEEN ((NULL)) AND ((vt1.c0))) WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END END) UNION SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'2be0' ELSE rt0.c1 END AS INTEGER) WHERE ((NOT (CASE WHEN '-267485992' THEN CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END WHEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) THEN 0.4836221736623192 WHEN rt0.c2 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (NOT ('-840140366')) WHEN CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END THEN CAST('1159258565' AS BLOB) WHEN ((rt0.c2)<>(vt0.c0)) THEN (((rt0.c1)) BETWEEN ((NULL)) AND ((vt1.c0))) WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END END))) UNION SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'2be0' ELSE rt0.c1 END AS INTEGER) WHERE (((CASE WHEN '-267485992' THEN CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END WHEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) THEN 0.4836221736623192 WHEN rt0.c2 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (NOT ('-840140366')) WHEN CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END THEN CAST('1159258565' AS BLOB) WHEN ((rt0.c2)<>(vt0.c0)) THEN (((rt0.c1)) BETWEEN ((NULL)) AND ((vt1.c0))) WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END END) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'2be0' ELSE rt0.c1 END AS INTEGER);
SELECT vt1.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN UPPER(DISTINCT vt1.c0) END GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN UPPER(DISTINCT vt1.c0) END WHERE ((((vt1.c0 IN ())) NOT BETWEEN (rt0.c1) AND ((x'' IN (rt0.c0))))) GROUP BY vt1.c0, rt0.c2, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN UPPER(DISTINCT vt1.c0) END WHERE ((NOT ((((vt1.c0 IN ())) NOT BETWEEN (rt0.c1) AND ((x'' IN (rt0.c0))))))) GROUP BY vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN UPPER(DISTINCT vt1.c0) END WHERE ((((((vt1.c0 IN ())) NOT BETWEEN (rt0.c1) AND ((x'' IN (rt0.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN UPPER(DISTINCT vt1.c0) END GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0 HAVING MIN(rt0.c2 COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0 HAVING (NOT (MIN(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0 HAVING ((MIN(rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0 HAVING MIN(rt0.c2 COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0 HAVING (NOT (MIN(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0 HAVING ((MIN(rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT rt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)AND(CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0)>=(vt0.c0)))AND(((x'')IS NOT(vt0.c0)))))OR(LIKELY(vt1.c0))))AND((((rt0.c2))<=((vt1.c0))))))OR(CAST(rt0.c2 AS TEXT))) GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (NULLIF(rt0.c2, NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULLIF(rt0.c2, NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((NULLIF(rt0.c2, NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((rt0.c0 COLLATE BINARY)<>(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)<>(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0 COLLATE BINARY)!=(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN rt0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (TRIM(DISTINCT ((rt0.c1)IS(vt1.c0)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE ((NOT (TRIM(DISTINCT ((rt0.c1)IS(vt1.c0)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (((TRIM(DISTINCT ((rt0.c1)IS(vt1.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1 HAVING TOTAL(vt0.c0) COLLATE RTRIM UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1 HAVING (NOT (TOTAL(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1 HAVING ((TOTAL(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1 HAVING TOTAL(vt0.c0) COLLATE RTRIM UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1 HAVING (NOT (TOTAL(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1 HAVING ((TOTAL(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT vt1.c0, rt0.c1 FROM vt1 INNER JOIN vt0 ON (((((rt0.c1))<((rt0.c1)))) BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN rt0 ON x'' GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0))>=((vt1.c0))))AND((+ (vt1.c0)))))OR((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((((vt1.c0))>=((vt1.c0))))AND((+ (vt1.c0)))))OR((NOT (vt0.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((((vt1.c0))>=((vt1.c0))))AND((+ (vt1.c0)))))OR((NOT (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt0, vt1, rt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END) NOTNULL)) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt0, vt1, rt0 WHERE ((NOT (((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt0, vt1, rt0 NOT INDEXED WHERE (((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt0, vt1, rt0;
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))<((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN vt1 ON '4z' GROUP BY vt0.c0, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))<((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN vt1 ON '4z' WHERE ((((- (vt0.c0))) IS FALSE)) GROUP BY vt0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))<((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN vt1 ON '4z' WHERE ((NOT ((((- (vt0.c0))) IS FALSE)))) GROUP BY vt0.c0, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))<((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN vt1 ON '4z' WHERE ((((((- (vt0.c0))) IS FALSE)) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))<((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN vt1 ON '4z' GROUP BY vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0 COLLATE RTRIM)OR(((vt1.c0)OR(vt1.c0)))))OR(((vt1.c0)/(vt1.c0)))))AND((vt1.c0 IN (vt1.c0)))))AND(CAST(NULL AS INTEGER)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((((vt1.c0 COLLATE RTRIM)OR(((vt1.c0)OR(vt1.c0)))))OR(((vt1.c0)/(vt1.c0)))))AND((vt1.c0 IN (vt1.c0)))))AND(CAST(NULL AS INTEGER)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((((vt1.c0 COLLATE RTRIM)OR(((vt1.c0)OR(vt1.c0)))))OR(((vt1.c0)/(vt1.c0)))))AND((vt1.c0 IN (vt1.c0)))))AND(CAST(NULL AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((vt0.c0)LIKE(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((NOT (((vt0.c0)LIKE(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((((NOT (((vt0.c0)LIKE(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt1, rt0, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) WHERE (vt0.c0) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING ((GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c0) ISNULL))IS(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))IS(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c0) ISNULL))IS(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<(((vt0.c0)IS NOT(NULL))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<(((vt0.c0)IS NOT(NULL))))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<(((vt0.c0)IS NOT(NULL))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ('&E.vt') GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT ('&E.vt'))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((('&E.vt') ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT((('x}')<(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT((('x}')<(vt0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT((('x}')<(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT((('x}')<(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT((('x}')<(vt0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT((('x}')<(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (UNLIKELY(vt1.c0 COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (UNLIKELY(vt1.c0 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((UNLIKELY(vt1.c0 COLLATE BINARY)) ISNULL));
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.004172426632274462 END END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.004172426632274462 END END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.004172426632274462 END END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL)) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL)) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MIN(CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN(CAST(rt0.c1 AS INTEGER))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MIN(CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN(CAST(rt0.c1 AS INTEGER))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (x'574edd1e') AND (json_remove(vt1.c0, rt0.c1)));
SELECT DISTINCT * FROM vt1, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (x'574edd1e') AND (json_remove(vt1.c0, rt0.c1))) WHERE ((((((rt0.c2)=(rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), CAST(vt0.c0 AS BLOB)))>=((((vt1.c0)/(vt0.c0)), ((rt0.c0) ISNULL), rt0.c2 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt1, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (x'574edd1e') AND (json_remove(vt1.c0, rt0.c1))) WHERE ((NOT ((((((rt0.c2)=(rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), CAST(vt0.c0 AS BLOB)))>=((((vt1.c0)/(vt0.c0)), ((rt0.c0) ISNULL), rt0.c2 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM vt1, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (x'574edd1e') AND (json_remove(vt1.c0, rt0.c1))) WHERE ((((((((rt0.c2)=(rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), CAST(vt0.c0 AS BLOB)))>=((((vt1.c0)/(vt0.c0)), ((rt0.c0) ISNULL), rt0.c2 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (x'574edd1e') AND (json_remove(vt1.c0, rt0.c1)));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN (((rt0.c2))<((rt0.c0))) THEN (~ (rt0.c1)) WHEN (rt0.c1 IN ()) THEN ((rt0.c1) BETWEEN (x'') AND (rt0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN (('|~')*(rt0.c1)) ELSE CAST(rt0.c2 AS REAL) END) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c2))<((rt0.c0))) THEN (~ (rt0.c1)) WHEN (rt0.c1 IN ()) THEN ((rt0.c1) BETWEEN (x'') AND (rt0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN (('|~')*(rt0.c1)) ELSE CAST(rt0.c2 AS REAL) END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN (((rt0.c2))<((rt0.c0))) THEN (~ (rt0.c1)) WHEN (rt0.c1 IN ()) THEN ((rt0.c1) BETWEEN (x'') AND (rt0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN (('|~')*(rt0.c1)) ELSE CAST(rt0.c2 AS REAL) END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*))+(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*))+(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((COUNT(*))+(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*))+(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*))+(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((COUNT(*))+(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND((NOT (vt1.c0)))))OR(((vt1.c0) ISNULL))))OR(CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((CAST(vt1.c0 AS INTEGER))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND((NOT (vt1.c0)))))OR(((vt1.c0) ISNULL))))OR(CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((((CAST(vt1.c0 AS INTEGER))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND((NOT (vt1.c0)))))OR(((vt1.c0) ISNULL))))OR(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0 HAVING CASE (((COUNT(*)))<>((x'3d3cec91')))  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0) IS TRUE) WHEN TOTAL(rt0.c0) THEN MIN(rt0.c0) WHEN COUNT(*) THEN COUNT(rt0.c1) ELSE GROUP_CONCAT(rt0.c0) END UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CASE (((COUNT(*)))<>((x'3d3cec91')))  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0) IS TRUE) WHEN TOTAL(rt0.c0) THEN MIN(rt0.c0) WHEN COUNT(*) THEN COUNT(rt0.c1) ELSE GROUP_CONCAT(rt0.c0) END)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE (((COUNT(*)))!=((x'3d3cec91')))  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0) IS TRUE) WHEN TOTAL(rt0.c0) THEN MIN(rt0.c0) WHEN COUNT(*) THEN COUNT(rt0.c1) ELSE GROUP_CONCAT(rt0.c0) END) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0 HAVING CASE (((COUNT(*)))<>((x'3d3cec91')))  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0) IS TRUE) WHEN TOTAL(rt0.c0) THEN MIN(rt0.c0) WHEN COUNT(*) THEN COUNT(rt0.c1) ELSE GROUP_CONCAT(rt0.c0) END UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CASE (((COUNT(*)))<>((x'3d3cec91')))  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0) IS TRUE) WHEN TOTAL(rt0.c0) THEN MIN(rt0.c0) WHEN COUNT(*) THEN COUNT(rt0.c1) ELSE GROUP_CONCAT(rt0.c0) END)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE (((COUNT(*)))!=((x'3d3cec91')))  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0) IS TRUE) WHEN TOTAL(rt0.c0) THEN MIN(rt0.c0) WHEN COUNT(*) THEN COUNT(rt0.c1) ELSE GROUP_CONCAT(rt0.c0) END) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((- ((vt1.c0 IN ())))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT ((- ((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((- ((vt1.c0 IN ())))) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) BETWEEN (COUNT(*)) AND (vt1.c0)))AND(MAX(vt1.c0))))AND((COUNT(vt1.c0) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((vt1.c0) BETWEEN (COUNT(*)) AND (vt1.c0)))AND(MAX(vt1.c0))))AND((COUNT(vt1.c0) IN ()))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((vt1.c0) BETWEEN (COUNT(*)) AND (vt1.c0)))AND(MAX(vt1.c0))))AND((COUNT(vt1.c0) IN ())))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) BETWEEN (COUNT(*)) AND (vt1.c0)))AND(MAX(vt1.c0))))AND((COUNT(vt1.c0) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((vt1.c0) BETWEEN (COUNT(*)) AND (vt1.c0)))AND(MAX(vt1.c0))))AND((COUNT(vt1.c0) IN ()))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((vt1.c0) BETWEEN (COUNT(*)) AND (vt1.c0)))AND(MAX(vt1.c0))))AND((COUNT(vt1.c0) IN ())))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)>=((rt0.c2 IN ('-1614458854'))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)>=((rt0.c2 IN ('-1614458854'))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)>=((rt0.c2 IN ('-1614458854'))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c1)<(LOWER(vt0.c0))) INNER JOIN vt1 ON 0xffffffffbe2f775f;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c1)<(LOWER(vt0.c0))) INNER JOIN vt1 ON 0Xffffffffbe2f775f WHERE (((CAST(rt0.c2 AS TEXT))<((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c1)<(LOWER(vt0.c0))) INNER JOIN vt1 ON 0Xffffffffbe2f775f WHERE ((NOT (((CAST(rt0.c2 AS TEXT))<((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c1)<(LOWER(vt0.c0))) INNER JOIN vt1 ON 0xffffffffbe2f775f WHERE (((((CAST(rt0.c2 AS TEXT))<((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c1)<(LOWER(vt0.c0))) INNER JOIN vt1 ON 0xffffffffbe2f775f;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE (CASE (((rt0.c0))<((rt0.c1)))  WHEN ((rt0.c1)*(rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c0)) ELSE ((rt0.c2) NOT NULL) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT (CASE (((rt0.c0))<((rt0.c1)))  WHEN ((rt0.c1)*(rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c0)) ELSE ((rt0.c2) NOT NULL) END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0, vt1 WHERE (((CASE (((rt0.c0))<((rt0.c1)))  WHEN ((rt0.c1)*(rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c0)) ELSE ((rt0.c2) NOT NULL) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(TOTAL(COUNT(vt0.c0)) AS BLOB) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(TOTAL(COUNT(vt0.c0)) AS BLOB) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(TOTAL(COUNT(vt0.c0)) AS BLOB) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(TOTAL(COUNT(vt0.c0)) AS BLOB) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(TOTAL(COUNT(vt0.c0)) AS BLOB) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(TOTAL(COUNT(vt0.c0)) AS BLOB) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1)OR(rt0.c1)) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c1)OR(rt0.c1)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c1)OR(rt0.c1)) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))IS(MAX(vt0.c0, vt0.c0, vt1.c0, vt1.c0)));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))IS(MAX(vt0.c0, vt0.c0, vt1.c0, vt1.c0))) WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))IS(MAX(vt0.c0, vt0.c0, vt1.c0, vt1.c0))) WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))IS(MAX(vt0.c0, vt0.c0, vt1.c0, vt1.c0))) WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))IS(MAX(vt0.c0, vt0.c0, vt1.c0, vt1.c0)));
SELECT vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0, rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0))/(MIN(vt1.c0)))) IS FALSE) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT (((((COUNT(vt1.c0))/(MIN(vt1.c0)))) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 HAVING ((((((COUNT(vt1.c0))/(MIN(vt1.c0)))) IS FALSE)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0))/(MIN(vt1.c0)))) IS FALSE) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT (((((COUNT(vt1.c0))/(MIN(vt1.c0)))) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 HAVING ((((((COUNT(vt1.c0))/(MIN(vt1.c0)))) IS FALSE)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(rt0.c2)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((('1940444899') NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((('1940444899') NOTNULL)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((('1940444899') NOTNULL)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT);
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) WHERE (HEX((x'' IN ()))) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) WHERE ((NOT (HEX((x'' IN ()))))) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) WHERE (((HEX((x'' IN ()))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING COUNT(COUNT(AVG(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(COUNT(AVG(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(COUNT(AVG(MAX(vt0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (vt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0 WHERE (UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (TRIM(((rt0.c0) IS FALSE))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TRIM(((rt0.c0) IS FALSE))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM(((rt0.c0) IS FALSE))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(COUNT(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c0, vt1.c0)) NOT BETWEEN ((COALESCE(DISTINCT rt0.c1, rt0.c2), CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN '-1496431717' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END, ((rt0.c0)<<(rt0.c2)))) AND ((x'', ((rt0.c0)LIKE(rt0.c2)), CASE x''  WHEN rt0.c2 THEN vt1.c0 END)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c1, rt0.c0, vt1.c0)) NOT BETWEEN ((COALESCE(DISTINCT rt0.c1, rt0.c2), CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN '-1496431717' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END, ((rt0.c0)<<(rt0.c2)))) AND ((x'', ((rt0.c0)LIKE(rt0.c2)), CASE x''  WHEN rt0.c2 THEN vt1.c0 END)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c1, rt0.c0, vt1.c0)) NOT BETWEEN ((COALESCE(DISTINCT rt0.c1, rt0.c2), CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN '-1496431717' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END, ((rt0.c0)<<(rt0.c2)))) AND ((x'', ((rt0.c0)LIKE(rt0.c2)), CASE x''  WHEN rt0.c2 THEN vt1.c0 END)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(UNLIKELY('+|	2U	匀'))))OR((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(UNLIKELY('+|	2U	匀'))))OR((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(UNLIKELY('+|	2U	匀'))))OR((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (CAST(x'' AS BLOB)) GROUP BY vt1.c0, vt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (CAST(x'' AS BLOB)))) GROUP BY vt1.c0, vt0.c0, rt0.c1 UNION SELECT vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, rt0.c1;
SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING ((((((((MAX(vt1.c0))AND(MAX(TOTAL(0Xfffffffffb7975aa)))))AND(rt0.c0)))AND(GROUP_CONCAT(rt0.c1))))AND(MIN(rt0.c2))) UNION ALL SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING (NOT (((((((((MAX(vt1.c0))AND(MAX(TOTAL(0xfffffffffb7975aa)))))AND(rt0.c0)))AND(GROUP_CONCAT(rt0.c1))))AND(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING ((((((((((MAX(vt1.c0))AND(MAX(TOTAL(0xfffffffffb7975aa)))))AND(rt0.c0)))AND(GROUP_CONCAT(rt0.c1))))AND(MIN(rt0.c2)))) ISNULL);
SELECT vt0.c0, rt0.c1 FROM vt0, rt0, vt1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE (((((((((((vt1.c0) IS TRUE))AND((~ (rt0.c0)))))AND(((rt0.c2)/(x'5b15bb46f335')))))AND(((rt0.c2)>=(rt0.c1)))))AND(((rt0.c1)|(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (((((((((((vt1.c0) IS TRUE))AND((~ (rt0.c0)))))AND(((rt0.c2)/(x'5b15bb46f335')))))AND(((rt0.c2)>=(rt0.c1)))))AND(((rt0.c1)|(rt0.c1))))))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE (((((((((((((vt1.c0) IS TRUE))AND((~ (rt0.c0)))))AND(((rt0.c2)/(x'5b15bb46f335')))))AND(((rt0.c2)>=(rt0.c1)))))AND(((rt0.c1)|(rt0.c1))))) ISNULL));
SELECT vt0.c0, rt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) UNION SELECT DISTINCT vt0.c0 FROM rt0 NOT INDEXED, vt0 WHERE ((NOT ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1;
SELECT vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1 WHERE (CASE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN TRIM('0.9674742710731575') THEN ((rt0.c1)<<(rt0.c2)) ELSE CAST(rt0.c1 AS INTEGER) END) UNION ALL SELECT vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1 NOT INDEXED WHERE ((NOT (CASE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN TRIM('0.9674742710731575') THEN ((rt0.c1)<<(rt0.c2)) ELSE CAST(rt0.c1 AS INTEGER) END))) UNION ALL SELECT vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1 WHERE (((CASE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN TRIM('0.9674742710731575') THEN ((rt0.c1)<<(rt0.c2)) ELSE CAST(rt0.c1 AS INTEGER) END) ISNULL));
SELECT vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((LIKELIHOOD(DISTINCT vt0.c0, 0.03348399876057184), (- (vt0.c0)), (NOT (vt0.c0))))=((((vt0.c0) IS TRUE), 774649380, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.03348399876057184), (- (vt0.c0)), (NOT (vt0.c0))))==((((vt0.c0) IS TRUE), 774649380, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((LIKELIHOOD(DISTINCT vt0.c0, 0.03348399876057184), (- (vt0.c0)), (NOT (vt0.c0))))==((((vt0.c0) IS TRUE), 774649380, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ('-1320839304') GROUP BY rt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ('-1320839304'))) GROUP BY rt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((('-1320839304') ISNULL)) GROUP BY rt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((vt0.c0)<>(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt0 ON CASE WHEN ((((vt1.c0)AND(2008850420)))AND(rt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN (NOT (rt0.c2)) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN (((vt0.c0))<>((rt0.c2))) THEN ((rt0.c0)!=(rt0.c0)) END GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 NOT INDEXED WHERE (rt0.c1 COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ('r5暈v\npA') UNION SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT ('r5暈v\npA'))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((('r5暈v\npA') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (0.1941214335120841))) GROUP BY vt1.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT ((NOT (0.1941214335120841))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((((NOT (0.1941214335120841))) ISNULL)) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING MAX(CAST(COUNT(*) AS BLOB)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (MAX(CAST(COUNT(*) AS BLOB)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING ((MAX(CAST(COUNT(*) AS BLOB))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN LOWER(vt0.c0) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN '' END THEN (vt0.c0 IN ()) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN LOWER(vt0.c0) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN '' END THEN (vt0.c0 IN ()) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN LOWER(vt0.c0) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN '' END THEN (vt0.c0 IN ()) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT NULL);
SELECT DISTINCT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT NULL) WHERE (((((((vt1.c0) IS FALSE))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c0)IS NOT(-1963735508))))) UNION SELECT DISTINCT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT NULL) WHERE ((NOT (((((((vt1.c0) IS FALSE))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c0)IS NOT(-1963735508))))))) UNION SELECT DISTINCT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT NULL) WHERE (((((((((vt1.c0) IS FALSE))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c0)IS NOT(-1963735508))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT NULL);
SELECT rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CASE 0Xffffffffa3a1e576 COLLATE BINARY  WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) END GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CASE 0Xffffffffa3a1e576 COLLATE BINARY  WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) END WHERE ((((rt0.c1 IN ()))||(((vt1.c0) BETWEEN (vt0.c0) AND (''))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CASE 0Xffffffffa3a1e576 COLLATE BINARY  WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) END WHERE ((NOT ((((rt0.c1 IN ()))||(((vt1.c0) BETWEEN (vt0.c0) AND (''))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CASE 0Xffffffffa3a1e576 COLLATE BINARY  WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) END WHERE ((((((rt0.c1 IN ()))||(((vt1.c0) BETWEEN (vt0.c0) AND (''))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CASE 0Xffffffffa3a1e576 COLLATE BINARY  WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) END GROUP BY rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING JULIANDAY(TOTAL(MAX(rt0.c1)) COLLATE BINARY, MAX(SUM(rt0.c2)), MAX(COUNT(*)), GROUP_CONCAT(COUNT(*)), ((GROUP_CONCAT(rt0.c1)) IS TRUE)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (JULIANDAY(TOTAL(MAX(rt0.c1)) COLLATE BINARY, MAX(SUM(rt0.c2)), MAX(COUNT(*)), GROUP_CONCAT(COUNT(*)), ((GROUP_CONCAT(rt0.c1)) IS TRUE)))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((JULIANDAY(TOTAL(MAX(rt0.c1)) COLLATE BINARY, MAX(SUM(rt0.c2)), MAX(COUNT(*)), GROUP_CONCAT(COUNT(*)), ((GROUP_CONCAT(rt0.c1)) IS TRUE))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((rt0.c2 IN (rt0.c1))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((NOT ((rt0.c2 IN (rt0.c1))))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((NOT ((rt0.c2 IN (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((((rt0.c1, rt0.c1, vt1.c0)) BETWEEN ((((rt0.c0)<(rt0.c0)), ((x'bb1183c6') IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)GLOB(vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (rt0.c2) AND (0.4757737942304733)))))) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT ((((rt0.c1, rt0.c1, vt1.c0)) BETWEEN ((((rt0.c0)<(rt0.c0)), ((x'bb1183c6') IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)GLOB(vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (rt0.c2) AND (0.4757737942304733)))))))) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((((((rt0.c1, rt0.c1, vt1.c0)) BETWEEN ((((rt0.c0)<(rt0.c0)), ((x'bb1183c6') IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)GLOB(vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (rt0.c2) AND (0.4757737942304733)))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING SUM(AVG(vt1.c0)) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING (NOT (SUM(AVG(vt1.c0)))) UNION ALL SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING ((SUM(AVG(vt1.c0))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0, vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0, vt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY) ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0, vt0 WHERE (((((rt0.c1 COLLATE BINARY) ISNULL)) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 LEFT OUTER JOIN rt0 ON vt0.c0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE (x'') UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 LEFT OUTER JOIN rt0 ON vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)|(x'67a3')))>>(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)|(x'67a3')))>>(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)|(x'67a3')))>>(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(0.8343304492529677) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(0.8343304492529677))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(0.8343304492529677)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(0.8343304492529677) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(0.8343304492529677))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(0.8343304492529677)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt0 CROSS JOIN vt1 ON QUOTE(((rt0.c2)<<(vt1.c0)));
SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON QUOTE(((rt0.c2)<<(vt1.c0))) WHERE (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END) BETWEEN (((rt0.c0)OR(rt0.c1))) AND (((rt0.c0)LIKE(rt0.c1))))) UNION ALL SELECT * FROM vt0, rt0 CROSS JOIN vt1 ON QUOTE(((rt0.c2)<<(vt1.c0))) WHERE ((NOT (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END) BETWEEN (((rt0.c0)OR(rt0.c1))) AND (((rt0.c0)LIKE(rt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON QUOTE(((rt0.c2)<<(vt1.c0))) WHERE (((((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END) BETWEEN (((rt0.c0)OR(rt0.c1))) AND (((rt0.c0)LIKE(rt0.c1))))) ISNULL));
SELECT * FROM vt0, rt0 CROSS JOIN vt1 ON QUOTE(((rt0.c2)<<(vt1.c0)));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE WHEN NULL THEN (rt0.c2 IN ()) WHEN (((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((0.04012629708940929, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))) THEN ((((vt0.c0)OR(rt0.c1)))AND(0.9674742710731575)) WHEN ((rt0.c2)<>(rt0.c0)) THEN (NOT (rt0.c1)) ELSE (rt0.c2 IN (rt0.c2, x'')) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN NULL THEN (rt0.c2 IN ()) WHEN (((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((0.04012629708940929, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))) THEN ((((vt0.c0)OR(rt0.c1)))AND(0.9674742710731575)) WHEN ((rt0.c2)<>(rt0.c0)) THEN (NOT (rt0.c1)) ELSE (rt0.c2 IN (rt0.c2, x'')) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN NULL THEN (rt0.c2 IN ()) WHEN (((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((0.04012629708940929, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))) THEN ((((vt0.c0)OR(rt0.c1)))AND(0.9674742710731575)) WHEN ((rt0.c2)!=(rt0.c0)) THEN (NOT (rt0.c1)) ELSE (rt0.c2 IN (rt0.c2, x'')) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE ('843509049') GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT ('843509049'))) GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE ((('843509049') ISNULL)) GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)>>(SUM('0.2839282206129442'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)>>(SUM('0.2839282206129442'))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)>>(SUM('0.2839282206129442')))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)>>(SUM('0.2839282206129442'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)>>(SUM('0.2839282206129442'))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)>>(SUM('0.2839282206129442')))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ('-1901851960') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('-1901851960'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('-1901851960') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (SUBSTR(CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, x'')) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (SUBSTR(CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, x'')))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((SUBSTR(CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, x'')) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END  WHEN x'' THEN ((NULL)>>(vt0.c0)) WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN vt0.c0 END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END  WHEN x'' THEN ((NULL)>>(vt0.c0)) WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END  WHEN x'' THEN ((NULL)>>(vt0.c0)) WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING TYPEOF(DISTINCT TOTAL(vt0.c0) COLLATE BINARY) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (TYPEOF(DISTINCT TOTAL(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((TYPEOF(DISTINCT TOTAL(vt0.c0) COLLATE BINARY)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING TYPEOF(DISTINCT TOTAL(vt0.c0) COLLATE BINARY) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (TYPEOF(DISTINCT TOTAL(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((TYPEOF(DISTINCT TOTAL(vt0.c0) COLLATE BINARY)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0)OR(0.6295829194856056)))OR((~ (vt0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)OR(0.6295829194856056)))OR((~ (vt0.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)OR(0.6295829194856056)))OR((~ (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c1 AS TEXT) COLLATE BINARY;
SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c1 AS TEXT) COLLATE BINARY WHERE (json_array_length(rt0.c0, x'9a35') COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c1 AS TEXT) COLLATE BINARY WHERE ((NOT (json_array_length(rt0.c0, x'9a35') COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c1 AS TEXT) COLLATE BINARY WHERE (((json_array_length(rt0.c0, x'9a35') COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c1 AS TEXT) COLLATE BINARY;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(((vt1.c0)<(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY vt1.c0;
SELECT vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0;
SELECT vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NULL IN (((vt1.c0)>=(rt0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT ((NULL IN (((vt1.c0)>=(rt0.c0))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((((NULL IN (((vt1.c0)>=(rt0.c0))))) ISNULL));
SELECT vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c2 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt1, vt0, rt0 WHERE (CAST(((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (CAST(((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2 FROM vt1, vt0, rt0 WHERE (((CAST(((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt1, vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (x'0ce3'))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (x'0ce3'))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 NOT INDEXED, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (x'0ce3'))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c2 HAVING SUM(COUNT(*)) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c2 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c2 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT vt1.c0, rt0.c0 FROM rt0, vt1, vt0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE ((((rt0.c2 IN ()))>(CASE vt0.c0  WHEN rt0.c0 THEN 122342477 ELSE rt0.c2 END))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((((rt0.c2 IN ()))>(CASE vt0.c0  WHEN rt0.c0 THEN 122342477 ELSE rt0.c2 END))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1, vt0 NOT INDEXED WHERE ((((((rt0.c2 IN ()))>(CASE vt0.c0  WHEN rt0.c0 THEN 122342477 ELSE rt0.c2 END))) ISNULL));
SELECT vt1.c0, rt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((+ ((NOT (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ ((NOT (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((+ ((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))&((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))&((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))&((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0 HAVING GROUP_CONCAT('-1320839304') UNION ALL SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT('-1320839304'))) UNION ALL SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT('-1320839304')) ISNULL);
SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0 HAVING GROUP_CONCAT('-1320839304') UNION ALL SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT('-1320839304'))) UNION ALL SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT('-1320839304')) ISNULL);
SELECT vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0, vt1, vt0;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT))OR((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT (((CAST(vt1.c0 AS TEXT))OR((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c2 FROM rt0, vt1, vt0 WHERE (((((CAST(vt1.c0 AS TEXT))OR((rt0.c0 IN ())))) ISNULL));
SELECT rt0.c2 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))  WHEN ((((x'936d')AND(NULL)))AND(rt0.c0)) THEN (((0X6203a947))=((rt0.c0))) END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))  WHEN ((((x'936d')AND(NULL)))AND(rt0.c0)) THEN (((0x6203a947))==((rt0.c0))) END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))  WHEN ((((x'936d')AND(NULL)))AND(rt0.c0)) THEN (((0x6203a947))=((rt0.c0))) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN (((rt0.c1)<(rt0.c0))) AND ((((NULL))<=((rt0.c1))))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN (((rt0.c1)<(rt0.c0))) AND ((((NULL))<=((rt0.c1))))) WHERE (NULL) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN (((rt0.c1)<(rt0.c0))) AND ((((NULL))<=((rt0.c1))))) WHERE ((NOT (NULL))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN (((rt0.c1)<(rt0.c0))) AND ((((NULL))<=((rt0.c1))))) WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN (((rt0.c1)<(rt0.c0))) AND ((((NULL))<=((rt0.c1))))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(IFNULL(((NULL)-(vt1.c0)), 0.686144875272802)) FROM vt0, rt0, vt1;
SELECT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST((vt0.c0 IN ()) AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CAST((vt0.c0 IN ()) AS REAL)) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (QUOTE(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (QUOTE(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (QUOTE(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c0)>>(rt0.c2)))%(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)>>(rt0.c2)))%(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c0)>>(rt0.c2)))%(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(COUNT(MAX(rt0.c2)))) NOT BETWEEN (((MIN(COUNT(vt0.c0)))+(rt0.c0))) AND (-1.240794294E9)) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((MIN(COUNT(MAX(rt0.c2)))) NOT BETWEEN (((MIN(COUNT(vt0.c0)))+(rt0.c0))) AND (-1.240794294E9)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((MIN(COUNT(MAX(rt0.c2)))) NOT BETWEEN (((MIN(COUNT(vt0.c0)))+(rt0.c0))) AND (-1.240794294E9))) ISNULL);
SELECT * FROM rt0, vt0, vt1;
SELECT * FROM rt0, vt0, vt1 WHERE ((~ (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((NOT ((~ (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((((~ (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE (NULL) GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (NULL))) GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 NOT INDEXED GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING CAST(((vt1.c0)<<(vt0.c0)) AS INTEGER) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (CAST(((vt1.c0)<<(vt0.c0)) AS INTEGER))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING ((CAST(((vt1.c0)<<(vt0.c0)) AS INTEGER)) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 NOT INDEXED GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING CAST(((vt1.c0)<<(vt0.c0)) AS INTEGER) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (CAST(((vt1.c0)<<(vt0.c0)) AS INTEGER))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING ((CAST(((vt1.c0)<<(vt0.c0)) AS INTEGER)) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c2, vt0.c0 FROM vt0, vt1, rt0;
SELECT rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE (CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY))) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE (((CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) ISNULL));
SELECT rt0.c2, vt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT (NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT (NULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 WHERE (IFNULL(DISTINCT NULLIF(rt0.c0, rt0.c0), ((vt1.c0)=(vt1.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0, vt1 WHERE ((NOT (IFNULL(DISTINCT NULLIF(rt0.c0, rt0.c0), ((vt1.c0)=(vt1.c0)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0, vt1 WHERE (((IFNULL(DISTINCT NULLIF(rt0.c0, rt0.c0), ((vt1.c0)=(vt1.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING ((COUNT(rt0.c2)) ISNULL) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 NOT INDEXED, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (((COUNT(rt0.c2)) ISNULL))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING ((((COUNT(rt0.c2)) ISNULL)) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING ((COUNT(rt0.c2)) ISNULL) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 NOT INDEXED, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (((COUNT(rt0.c2)) ISNULL))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING ((((COUNT(rt0.c2)) ISNULL)) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c0, rt0.c2, rt0.c2))>((rt0.c2, 0.9027789279725, rt0.c1))), RTRIM(rt0.c2), LIKELY(rt0.c2)))<(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), (((rt0.c0))>=((rt0.c0))), (NOT ('-1800732182')))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c0, rt0.c2, rt0.c2))>((rt0.c2, 0.9027789279725, rt0.c1))), RTRIM(rt0.c2), LIKELY(rt0.c2)))<(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), (((rt0.c0))>=((rt0.c0))), (NOT ('-1800732182')))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((((((rt0.c0, rt0.c2, rt0.c2))>((rt0.c2, 0.9027789279725, rt0.c1))), RTRIM(rt0.c2), LIKELY(rt0.c2)))<(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), (((rt0.c0))>=((rt0.c0))), (NOT ('-1800732182')))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN '-516256594' THEN '' ELSE vt1.c0 END COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN '-516256594' THEN '' ELSE vt1.c0 END COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN '-516256594' THEN '' ELSE vt1.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0 HAVING (SUM(vt0.c0) IN ()) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT ((SUM(vt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0 HAVING (((SUM(vt0.c0) IN ())) ISNULL);
SELECT rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0 HAVING (SUM(vt0.c0) IN ()) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT ((SUM(vt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0 HAVING (((SUM(vt0.c0) IN ())) ISNULL);
SELECT rt0.c1, vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c0))>=((rt0.c1)))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((((rt0.c1)OR(x'')))OR(vt1.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c0))>=((rt0.c1)))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((((rt0.c1)OR(x'')))OR(vt1.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 NOT INDEXED WHERE ((((((((rt0.c0))>=((rt0.c1)))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((((rt0.c1)OR(x'')))OR(vt1.c0))))) ISNULL));
SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LIKELY((~ ('467132648')))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LIKELY((~ ('467132648')))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LIKELY((~ ('467132648')))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) IS FALSE) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) IS FALSE) WHERE (ABS(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) IS FALSE) WHERE ((NOT (ABS(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) IS FALSE) WHERE (((ABS(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) IS FALSE) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING ((SUM(AVG(AVG(vt0.c0)))) BETWEEN (((SUM(MAX(MAX(MIN(vt1.c0))))) NOTNULL)) AND (GROUP_CONCAT(MIN(rt0.c2)) COLLATE RTRIM)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, vt1 FULL OUTER JOIN vt0 ON CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (((SUM(AVG(AVG(vt0.c0)))) BETWEEN (((SUM(MAX(MAX(MIN(vt1.c0))))) NOTNULL)) AND (GROUP_CONCAT(MIN(rt0.c2)) COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING ((((SUM(AVG(AVG(vt0.c0)))) BETWEEN (((SUM(MAX(MAX(MIN(vt1.c0))))) NOTNULL)) AND (GROUP_CONCAT(MIN(rt0.c2)) COLLATE RTRIM))) ISNULL);
SELECT ALL TOTAL('-1173117896') FROM rt0, vt1;
SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2))==((vt0.c0)))))>=((((rt0.c2)IS(rt0.c2))))) LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c0)AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) AS INTEGER);
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2))=((vt0.c0)))))>=((((rt0.c2)IS(rt0.c2))))) LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c0)AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) AS INTEGER) WHERE (CASE LAST_INSERT_ROWID()  WHEN ((rt0.c1) IS TRUE) THEN '0.09703038240817474' END) UNION ALL SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2))=((vt0.c0)))))>=((((rt0.c2)IS(rt0.c2))))) LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c0)AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) AS INTEGER) WHERE ((NOT (CASE LAST_INSERT_ROWID()  WHEN ((rt0.c1) IS TRUE) THEN '0.09703038240817474' END))) UNION ALL SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2))==((vt0.c0)))))>=((((rt0.c2)IS(rt0.c2))))) LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c0)AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) AS INTEGER) WHERE (((CASE LAST_INSERT_ROWID()  WHEN ((rt0.c1) IS TRUE) THEN '0.09703038240817474' END) ISNULL));
SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2))==((vt0.c0)))))>=((((rt0.c2)IS(rt0.c2))))) LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c0)AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) AS INTEGER);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('1128856534') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ('1128856534'))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('1128856534') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('', vt1.c0, vt1.c0, vt1.c0, '-664658818')) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('', vt1.c0, vt1.c0, vt1.c0, '-664658818')) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('', vt1.c0, vt1.c0, vt1.c0, '-664658818')) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING AVG(TOTAL(TOTAL(SUM(MAX(AVG(TOTAL(AVG(COUNT(*))))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (AVG(TOTAL(TOTAL(SUM(MAX(AVG(TOTAL(AVG(COUNT(*))))))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING ((AVG(TOTAL(TOTAL(SUM(MAX(AVG(TOTAL(AVG(COUNT(*)))))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM))=((vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE RTRIM))=((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE RTRIM))==((vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)IS NOT(((rt0.c1)IS(vt0.c0))));
SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)IS NOT(((rt0.c1)IS(vt0.c0)))) WHERE (((((0.34993498736690765 IN ())))>(('656113281')))) UNION SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)IS NOT(((rt0.c1)IS(vt0.c0)))) WHERE ((NOT (((((0.34993498736690765 IN ())))>(('656113281')))))) UNION SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)IS NOT(((rt0.c1)IS(vt0.c0)))) WHERE (((((((0.34993498736690765 IN ())))>(('656113281')))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)IS NOT(((rt0.c1)IS(vt0.c0))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)|(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)|(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT('-1819095575') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT('-1819095575'))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT('-1819095575')) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT('-1819095575') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT('-1819095575'))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT('-1819095575')) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)<=(vt1.c0)) IN (((vt1.c0)/(vt1.c0)), vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)<=(vt1.c0)) IN (((vt1.c0)/(vt1.c0)), vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0)) IN (((vt1.c0)/(vt1.c0)), vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON DATE(CAST(vt1.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1) NOT NULL), COALESCE(rt0.c2, rt0.c1), ((rt0.c1)==(rt0.c2))) CROSS JOIN vt0 ON rt0.c1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON DATE(CAST(vt1.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1) NOT NULL), COALESCE(rt0.c2, rt0.c1), ((rt0.c1)==(rt0.c2))) CROSS JOIN vt0 ON rt0.c1 WHERE ((CASE WHEN vt1.c0 THEN '' END IN (0Xfffffffffbf2f46b, DATETIME(rt0.c2, vt1.c0, rt0.c2)))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON DATE(CAST(vt1.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1) NOT NULL), COALESCE(rt0.c2, rt0.c1), ((rt0.c1)==(rt0.c2))) CROSS JOIN vt0 ON rt0.c1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN '' END IN (0Xfffffffffbf2f46b, DATETIME(rt0.c2, vt1.c0, rt0.c2)))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON DATE(CAST(vt1.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1) NOT NULL), COALESCE(rt0.c2, rt0.c1), ((rt0.c1)=(rt0.c2))) CROSS JOIN vt0 ON rt0.c1 WHERE ((((CASE WHEN vt1.c0 THEN '' END IN (0xfffffffffbf2f46b, DATETIME(rt0.c2, vt1.c0, rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON DATE(CAST(vt1.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1) NOT NULL), COALESCE(rt0.c2, rt0.c1), ((rt0.c1)==(rt0.c2))) CROSS JOIN vt0 ON rt0.c1;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE (((rt0.c0)LIKE(CAST(rt0.c2 AS TEXT)))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((rt0.c0)LIKE(CAST(rt0.c2 AS TEXT)))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((rt0.c0)LIKE(CAST(rt0.c2 AS TEXT)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((MIN(rt0.c2), rt0.c1, rt0.c0)) BETWEEN ((TOTAL(rt0.c2), MAX(TOTAL(rt0.c1)) COLLATE BINARY, SUM(rt0.c1))) AND ((TOTAL(MAX(GROUP_CONCAT(COUNT(GROUP_CONCAT(TOTAL(rt0.c2)))))), rt0.c0, GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((MIN(rt0.c2), rt0.c1, rt0.c0)) BETWEEN ((TOTAL(rt0.c2), MAX(TOTAL(rt0.c1)) COLLATE BINARY, SUM(rt0.c1))) AND ((TOTAL(MAX(GROUP_CONCAT(COUNT(GROUP_CONCAT(TOTAL(rt0.c2)))))), rt0.c0, GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((MIN(rt0.c2), rt0.c1, rt0.c0)) BETWEEN ((TOTAL(rt0.c2), MAX(TOTAL(rt0.c1)) COLLATE BINARY, SUM(rt0.c1))) AND ((TOTAL(MAX(GROUP_CONCAT(COUNT(GROUP_CONCAT(TOTAL(rt0.c2)))))), rt0.c0, GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (CAST((vt1.c0 IN (vt0.c0)) AS BLOB)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT (CAST((vt1.c0 IN (vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((CAST((vt1.c0 IN (vt0.c0)) AS BLOB)) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c1 IN ()) IN ())) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((rt0.c1 IN ()) IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c1 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (('222952098')IS('͍	?fM~针Ef')) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (('222952098')IS('͍	?fM~针Ef')) WHERE ((- (vt1.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (('222952098')IS('͍	?fM~针Ef')) WHERE ((NOT ((- (vt1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (('222952098')IS('͍	?fM~针Ef')) WHERE ((((- (vt1.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (('222952098')IS('͍	?fM~针Ef')) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(vt0.c0))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((((0.313377704937136, rt0.c2, 0.5016246825485798)) NOT BETWEEN (((rt0.c0 IN ()), (((rt0.c1))>((rt0.c0))), (+ (rt0.c2)))) AND ((TRIM(DISTINCT rt0.c2, rt0.c2), x'799b', ((vt1.c0)LIKE(0.09604340769203412)))))) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN 0.9391543602742161 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((0.313377704937136, rt0.c2, 0.5016246825485798)) NOT BETWEEN (((rt0.c0 IN ()), (((rt0.c1))>((rt0.c0))), (+ (rt0.c2)))) AND ((TRIM(DISTINCT rt0.c2, rt0.c2), x'799b', ((vt1.c0)LIKE(0.09604340769203412)))))))) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN 0.9391543602742161 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((((((0.313377704937136, rt0.c2, 0.5016246825485798)) NOT BETWEEN (((rt0.c0 IN ()), (((rt0.c1))>((rt0.c0))), (+ (rt0.c2)))) AND ((TRIM(DISTINCT rt0.c2, rt0.c2), x'799b', ((vt1.c0)LIKE(0.09604340769203412)))))) ISNULL)) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN 0.9391543602742161 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt1, vt0 WHERE (((((vt0.c0 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (((rt0.c2, vt1.c0, MAX(MIN('-512772453')))) NOT BETWEEN ((((rt0.c1)*(COUNT(*))), TOTAL(TOTAL(rt0.c1)) COLLATE NOCASE, TOTAL(SUM(COUNT(MAX(rt0.c1)))))) AND ((COUNT(rt0.c2), ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)), (((rt0.c2, NULL, rt0.c2)) NOT BETWEEN ((GROUP_CONCAT(rt0.c1), MIN(MAX(rt0.c1)), SUM(rt0.c2))) AND (('167579292', SUM(vt1.c0), AVG(NULL))))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT ((((rt0.c2, vt1.c0, MAX(MIN('-512772453')))) NOT BETWEEN ((((rt0.c1)*(COUNT(*))), TOTAL(TOTAL(rt0.c1)) COLLATE NOCASE, TOTAL(SUM(COUNT(MAX(rt0.c1)))))) AND ((COUNT(rt0.c2), ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)), (((rt0.c2, NULL, rt0.c2)) NOT BETWEEN ((GROUP_CONCAT(rt0.c1), MIN(MAX(rt0.c1)), SUM(rt0.c2))) AND (('167579292', SUM(vt1.c0), AVG(NULL))))))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (((((rt0.c2, vt1.c0, MAX(MIN('-512772453')))) NOT BETWEEN ((((rt0.c1)*(COUNT(*))), TOTAL(TOTAL(rt0.c1)) COLLATE NOCASE, TOTAL(SUM(COUNT(MAX(rt0.c1)))))) AND ((COUNT(rt0.c2), ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)), (((rt0.c2, NULL, rt0.c2)) NOT BETWEEN ((GROUP_CONCAT(rt0.c1), MIN(MAX(rt0.c1)), SUM(rt0.c2))) AND (('167579292', SUM(vt1.c0), AVG(NULL)))))))) ISNULL);
SELECT rt0.c2, vt1.c0 FROM vt1, rt0, vt0;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE (((UNLIKELY(rt0.c0))GLOB(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((UNLIKELY(rt0.c0))GLOB(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT rt0.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE (((((UNLIKELY(rt0.c0))GLOB(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT rt0.c2, vt1.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END)IS(vt0.c0))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt1.c0 END)IS(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt1.c0 END)IS(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (UPPER(vt1.c0)) AND (ABS(NULL)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (UPPER(vt1.c0)) AND (ABS(NULL)))))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE (((((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (UPPER(vt1.c0)) AND (ABS(NULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN ('') AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) NOT BETWEEN ('') AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0))) NOT BETWEEN ('') AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING CASE WHEN MIN(TOTAL(MAX(NULL))) THEN MIN(vt1.c0) WHEN ABS(DISTINCT vt1.c0) THEN AVG(rt0.c0) WHEN MAX(SUM(SUM(TOTAL(rt0.c2)))) THEN ((((COUNT(*))AND(MAX(rt0.c1))))AND(rt0.c0)) END UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (CASE WHEN MIN(TOTAL(MAX(NULL))) THEN MIN(vt1.c0) WHEN ABS(DISTINCT vt1.c0) THEN AVG(rt0.c0) WHEN MAX(SUM(SUM(TOTAL(rt0.c2)))) THEN ((((COUNT(*))AND(MAX(rt0.c1))))AND(rt0.c0)) END)) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING ((CASE WHEN MIN(TOTAL(MAX(NULL))) THEN MIN(vt1.c0) WHEN ABS(DISTINCT vt1.c0) THEN AVG(rt0.c0) WHEN MAX(SUM(SUM(TOTAL(rt0.c2)))) THEN ((((COUNT(*))AND(MAX(rt0.c1))))AND(rt0.c0)) END) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.02369594045808976)) NOT BETWEEN (((vt1.c0)<<(rt0.c2))) AND ((~ (vt1.c0))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((LIKELIHOOD(DISTINCT rt0.c1, 0.02369594045808976)) NOT BETWEEN (((vt1.c0)<<(rt0.c2))) AND ((~ (vt1.c0))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c1, 0.02369594045808976)) NOT BETWEEN (((vt1.c0)<<(rt0.c2))) AND ((~ (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)*(vt1.c0)) COLLATE NOCASE GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)*(vt1.c0)) COLLATE NOCASE WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)*(vt1.c0)) COLLATE NOCASE WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)*(vt1.c0)) COLLATE NOCASE WHERE (((((vt0.c0 COLLATE RTRIM) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)*(vt1.c0)) COLLATE NOCASE GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 HAVING COUNT(CAST(rt0.c0 AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 HAVING (NOT (COUNT(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 HAVING ((COUNT(CAST(rt0.c0 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 HAVING COUNT(CAST(rt0.c0 AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 HAVING (NOT (COUNT(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 HAVING ((COUNT(CAST(rt0.c0 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((0.7031406516490799)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)+(vt0.c0)), vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((0.7031406516490799)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)+(vt0.c0)), vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((0.7031406516490799)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)+(vt0.c0)), vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((DATETIME(rt0.c0, rt0.c1, 0.16313933571513972))AND(((rt0.c1)IS(rt0.c0)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((DATETIME(rt0.c0, rt0.c1, 0.16313933571513972))AND(((rt0.c1)IS(rt0.c0)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((DATETIME(rt0.c0, rt0.c1, 0.16313933571513972))AND(((rt0.c1)IS(rt0.c0)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1 CROSS JOIN rt0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND ('0.9674742710731575')) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((rt0.c1)>>(vt0.c0)) IN (rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1 CROSS JOIN rt0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND ('0.9674742710731575')) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((rt0.c1)>>(vt0.c0)) IN (rt0.c2 COLLATE BINARY)) WHERE (((rt0.c1 IN ()) IN (((((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1 CROSS JOIN rt0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND ('0.9674742710731575')) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((rt0.c1)>>(vt0.c0)) IN (rt0.c2 COLLATE BINARY)) WHERE ((NOT (((rt0.c1 IN ()) IN (((((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c2))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1 CROSS JOIN rt0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND ('0.9674742710731575')) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((rt0.c1)>>(vt0.c0)) IN (rt0.c2 COLLATE BINARY)) WHERE (((((rt0.c1 IN ()) IN (((((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1 CROSS JOIN rt0 ON CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND ('0.9674742710731575')) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((rt0.c1)>>(vt0.c0)) IN (rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((- (vt1.c0)))AND((('632053800') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)/(vt0.c0)))))AND((rt0.c2 IN ()))))AND(((((vt0.c0)AND(x'decb')))AND(vt1.c0)))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((- (vt1.c0)))AND((('632053800') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)/(vt0.c0)))))AND((rt0.c2 IN ()))))AND(((((vt0.c0)AND(x'decb')))AND(vt1.c0)))) GROUP BY rt0.c0 HAVING ((MIN(SUM(SUM(rt0.c1))))>(COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((- (vt1.c0)))AND((('632053800') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)/(vt0.c0)))))AND((rt0.c2 IN ()))))AND(((((vt0.c0)AND(x'decb')))AND(vt1.c0)))) GROUP BY rt0.c0 HAVING (NOT (((MIN(SUM(SUM(rt0.c1))))>(COUNT(*))))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((- (vt1.c0)))AND((('632053800') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)/(vt0.c0)))))AND((rt0.c2 IN ()))))AND(((((vt0.c0)AND(x'decb')))AND(vt1.c0)))) GROUP BY rt0.c0 HAVING ((((MIN(SUM(SUM(rt0.c1))))>(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0, vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE (UPPER(DISTINCT UPPER(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (UPPER(DISTINCT UPPER(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE (((UPPER(DISTINCT UPPER(rt0.c0))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)*(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN (vt1.c0)) ELSE vt1.c0 END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)*(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN (vt1.c0)) ELSE vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)*(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN (vt1.c0)) ELSE vt1.c0 END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (rt0.c2) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(AVG(SUM(MAX(vt1.c0)))))||(TRIM(DISTINCT vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((MAX(AVG(SUM(MAX(vt1.c0)))))||(TRIM(DISTINCT vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((MAX(AVG(SUM(MAX(vt1.c0)))))||(TRIM(DISTINCT vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, 0xffffffffbac1d513, vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, 0xffffffffbac1d513, vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, 0xffffffffbac1d513, vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(LTRIM(rt0.c2, rt0.c0))))OR(((rt0.c2) ISNULL))))AND(rt0.c1 COLLATE NOCASE)))AND((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((((rt0.c2 IN ()))AND(LTRIM(rt0.c2, rt0.c0))))OR(((rt0.c2) ISNULL))))AND(rt0.c1 COLLATE NOCASE)))AND((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((((rt0.c2 IN ()))AND(LTRIM(rt0.c2, rt0.c0))))OR(((rt0.c2) ISNULL))))AND(rt0.c1 COLLATE NOCASE)))AND((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN x'514b' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ABS('Kc') WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1199701097))) WHEN (- (x'')) THEN 0.26754598503564053 ELSE 0.8829723145529107 END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN x'514b' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ABS('Kc') WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1199701097))) WHEN (- (x'')) THEN 0.26754598503564053 ELSE 0.8829723145529107 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN CASE vt0.c0  WHEN x'514b' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ABS('Kc') WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1199701097))) WHEN (- (x'')) THEN 0.26754598503564053 ELSE 0.8829723145529107 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0 HAVING ((((rt0.c0)/(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((MIN(rt0.c2) IN (COUNT(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (((((rt0.c0)/(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((MIN(rt0.c2) IN (COUNT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0 HAVING ((((((rt0.c0)/(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((MIN(rt0.c2) IN (COUNT(rt0.c0)))))) ISNULL);
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0 HAVING ((((rt0.c0)/(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((MIN(rt0.c2) IN (COUNT(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (((((rt0.c0)/(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((MIN(rt0.c2) IN (COUNT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0 HAVING ((((((rt0.c0)/(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((MIN(rt0.c2) IN (COUNT(rt0.c0)))))) ISNULL);
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (x'', vt0.c0))) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (x'', vt0.c0))) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (x'', vt0.c0))) NOTNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((rt0.c0 IN (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((NOT ((rt0.c0 IN (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((NOT ((rt0.c0 IN (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt1.c0) BETWEEN ('-1630529099') AND (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(x'584f')))AND(x'')) ELSE (vt0.c0 IN (vt0.c0)) END) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN ((vt1.c0) BETWEEN ('-1630529099') AND (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(x'584f')))AND(x'')) ELSE (vt0.c0 IN (vt0.c0)) END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((CASE WHEN ((vt1.c0) BETWEEN ('-1630529099') AND (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(x'584f')))AND(x'')) ELSE (vt0.c0 IN (vt0.c0)) END) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING COUNT(((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING ((COUNT(((((vt1.c0)AND(rt0.c1)))OR(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING COUNT(((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING ((COUNT(((((vt1.c0)AND(rt0.c1)))OR(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c1, vt1.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c2 INNER JOIN vt1 ON json_patch(SQLITE_COMPILEOPTION_USED(rt0.c2), ((rt0.c2)LIKE(rt0.c2)));
SELECT rt0.c1, vt1.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c2 INNER JOIN vt1 ON json_patch(SQLITE_COMPILEOPTION_USED(rt0.c2), ((rt0.c2)LIKE(rt0.c2))) WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE)) UNION ALL SELECT rt0.c1, vt1.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c2 INNER JOIN vt1 ON json_patch(SQLITE_COMPILEOPTION_USED(rt0.c2), ((rt0.c2)LIKE(rt0.c2))) WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE)))) UNION ALL SELECT rt0.c1, vt1.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c2 INNER JOIN vt1 ON json_patch(SQLITE_COMPILEOPTION_USED(rt0.c2), ((rt0.c2)LIKE(rt0.c2))) WHERE (((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE)) ISNULL));
SELECT rt0.c1, vt1.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c2 INNER JOIN vt1 ON json_patch(SQLITE_COMPILEOPTION_USED(rt0.c2), ((rt0.c2)LIKE(rt0.c2)));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (json_array(CASE WHEN rt0.c2 THEN vt0.c0 END, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c1) NOTNULL), NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (json_array(CASE WHEN rt0.c2 THEN vt0.c0 END, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c1) NOTNULL), NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((json_array(CASE WHEN rt0.c2 THEN vt0.c0 END, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c1) NOTNULL), NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER) COLLATE BINARY))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(SUM(TOTAL(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(SUM(TOTAL(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(COUNT(SUM(TOTAL(GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS TRUE)))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)&((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)&((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((-2070243379))) COLLATE BINARY GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((-2070243379))) COLLATE BINARY GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING MAX(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((-2070243379))) COLLATE BINARY GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (MAX(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((-2070243379))) COLLATE BINARY GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((MAX(TOTAL(rt0.c1))) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((~ (((rt0.c0) IS TRUE)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((~ (((rt0.c0) IS TRUE)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((((~ (((rt0.c0) IS TRUE)))) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((vt0.c0, vt1.c0, vt1.c0, 0.21564573846385027, rt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0) ISNULL), CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 'AJ' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c2)&(rt0.c0)), ((vt0.c0)*(vt1.c0)))) AND ((((rt0.c0)>(vt0.c0)), (- (vt0.c0)), 0.9027789279725, ((vt0.c0)<=(vt1.c0)), rt0.c0)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((((vt0.c0, vt1.c0, vt1.c0, 0.21564573846385027, rt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0) ISNULL), CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 'AJ' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c2)&(rt0.c0)), ((vt0.c0)*(vt1.c0)))) AND ((((rt0.c0)>(vt0.c0)), (- (vt0.c0)), 0.9027789279725, ((vt0.c0)<=(vt1.c0)), rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((vt0.c0, vt1.c0, vt1.c0, 0.21564573846385027, rt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0) ISNULL), CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 'AJ' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c2)&(rt0.c0)), ((vt0.c0)*(vt1.c0)))) AND ((((rt0.c0)>(vt0.c0)), (- (vt0.c0)), 0.9027789279725, ((vt0.c0)<=(vt1.c0)), rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(NULL)) THEN LIKELY(vt1.c0) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)/(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt1.c0) IS FALSE) THEN '' WHEN ((vt1.c0) BETWEEN (0.64051312404265) AND (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(NULL)) THEN LIKELY(vt1.c0) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)/(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt1.c0) IS FALSE) THEN '' WHEN ((vt1.c0) BETWEEN (0.64051312404265) AND (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(NULL)) THEN LIKELY(vt1.c0) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)/(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt1.c0) IS FALSE) THEN '' WHEN ((vt1.c0) BETWEEN (0.64051312404265) AND (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)))) AND ((TRIM(DISTINCT '-1127022185')))) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)))) AND ((TRIM(DISTINCT '-1127022185')))) GROUP BY rt0.c0, vt0.c0 HAVING TOTAL((((rt0.c2))>((AVG(GROUP_CONCAT(COUNT(rt0.c1))))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)))) AND ((TRIM(DISTINCT '-1127022185')))) GROUP BY rt0.c0, vt0.c0 HAVING (NOT (TOTAL((((rt0.c2))>((AVG(GROUP_CONCAT(COUNT(rt0.c1))))))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)))) AND ((TRIM(DISTINCT '-1127022185')))) GROUP BY rt0.c0, vt0.c0 HAVING ((TOTAL((((rt0.c2))>((AVG(GROUP_CONCAT(COUNT(rt0.c1)))))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((((rt0.c1) NOTNULL))OR((((rt0.c0, rt0.c2, '1038506442', rt0.c1, NULL)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c0))))))AND(vt1.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((((rt0.c1) NOTNULL))OR((((rt0.c0, rt0.c2, '1038506442', rt0.c1, NULL)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c0))))))AND(vt1.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((((((rt0.c1) NOTNULL))OR((((rt0.c0, rt0.c2, '1038506442', rt0.c1, NULL)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c0))))))AND(vt1.c0))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))|((((vt1.c0))<((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))|((((vt1.c0))<((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))|((((vt1.c0))<((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)<<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)<<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)<<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(MAX(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(MAX(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(MAX(vt1.c0))) ISNULL);
SELECT ALL vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1;
SELECT ALL vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((LOWER(vt0.c0) IN ())) UNION ALL SELECT ALL vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((LOWER(vt0.c0) IN ())))) UNION ALL SELECT vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((((LOWER(vt0.c0) IN ())) ISNULL));
SELECT ALL vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON '-248936003' RIGHT OUTER JOIN vt0 ON ((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(vt0.c0 AS REAL))) GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON '-248936003' RIGHT OUTER JOIN vt0 ON ((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(vt0.c0 AS REAL))) WHERE (0.23792716926484636) GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON '-248936003' RIGHT OUTER JOIN vt0 ON ((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(vt0.c0 AS REAL))) WHERE ((NOT (0.23792716926484636))) GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON '-248936003' RIGHT OUTER JOIN vt0 ON ((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(vt0.c0 AS REAL))) WHERE (((0.23792716926484636) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON '-248936003' RIGHT OUTER JOIN vt0 ON ((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(vt0.c0 AS REAL))) GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING UPPER(DISTINCT AVG(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (UPPER(DISTINCT AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((UPPER(DISTINCT AVG(rt0.c1))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING UPPER(DISTINCT AVG(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (UPPER(DISTINCT AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((UPPER(DISTINCT AVG(rt0.c1))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((IFNULL(rt0.c2, rt0.c2)) IS TRUE)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((IFNULL(rt0.c2, rt0.c2)) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((IFNULL(rt0.c2, rt0.c2)) IS TRUE)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)) AS REAL) LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))==(CAST(rt0.c2 AS BLOB))) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)) AS REAL) LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))==(CAST(rt0.c2 AS BLOB))) WHERE ('-1117635055') GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)) AS REAL) LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))=(CAST(rt0.c2 AS BLOB))) WHERE ((NOT ('-1117635055'))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)) AS REAL) LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))=(CAST(rt0.c2 AS BLOB))) WHERE ((('-1117635055') ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)) AS REAL) LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))==(CAST(rt0.c2 AS BLOB))) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(((GROUP_CONCAT(rt0.c2)) BETWEEN (rt0.c0) AND (TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(((GROUP_CONCAT(rt0.c2)) BETWEEN (rt0.c0) AND (TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(((GROUP_CONCAT(rt0.c2)) BETWEEN (rt0.c0) AND (TOTAL(rt0.c2))))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) IS TRUE) IN ());
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) IS TRUE) IN ()) WHERE (((0Xc0347bf)GLOB(((rt0.c1)-(0.5619815937763978))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) IS TRUE) IN ()) WHERE ((NOT (((0Xc0347bf)GLOB(((rt0.c1)-(0.5619815937763978))))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) IS TRUE) IN ()) WHERE (((((0xc0347bf)GLOB(((rt0.c1)-(0.5619815937763978))))) ISNULL));
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) IS TRUE) IN ());
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)=(rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)=(rt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)=(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (('0.9027789279725' COLLATE NOCASE) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (('0.9027789279725' COLLATE NOCASE) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c0, vt1.c0 HAVING MIN(SUM(SUM(COUNT(*)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (('0.9027789279725' COLLATE NOCASE) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c0, vt1.c0 HAVING (NOT (MIN(SUM(SUM(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (('0.9027789279725' COLLATE NOCASE) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c0, vt1.c0 HAVING ((MIN(SUM(SUM(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))&(((rt0.c0)IS NOT(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1 IN ()))&(((rt0.c0)IS NOT(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c1 IN ()))&(((rt0.c0)IS NOT(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((+ (rt0.c0))))<((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((+ (rt0.c0))))<((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((+ (rt0.c0))))<((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING SUM(MIN(vt1.c0)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SUM(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((SUM(MIN(vt1.c0))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0;
SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((((vt1.c0 COLLATE BINARY, (((vt1.c0))>((rt0.c1))), ((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0)), (((vt0.c0))<=((rt0.c1))), ((rt0.c2) IS TRUE)))<((CAST(rt0.c1 AS REAL), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END, (((rt0.c1))>((vt1.c0))), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 END, CAST(rt0.c2 AS NUMERIC))))) UNION ALL SELECT vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((vt1.c0 COLLATE BINARY, (((vt1.c0))>((rt0.c1))), ((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0)), (((vt0.c0))<=((rt0.c1))), ((rt0.c2) IS TRUE)))<((CAST(rt0.c1 AS REAL), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END, (((rt0.c1))>((vt1.c0))), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 END, CAST(rt0.c2 AS NUMERIC))))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((((((vt1.c0 COLLATE BINARY, (((vt1.c0))>((rt0.c1))), ((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0)), (((vt0.c0))<=((rt0.c1))), ((rt0.c2) IS TRUE)))<((CAST(rt0.c1 AS REAL), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END, (((rt0.c1))>((vt1.c0))), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 END, CAST(rt0.c2 AS NUMERIC))))) ISNULL));
SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ ('^'));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ ('^')) WHERE (((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))!=((~ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ ('^')) WHERE ((NOT (((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))<>((~ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ ('^')) WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))!=((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ ('^'));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0))LIKE((+ (COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt0.c0))LIKE((+ (COUNT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(vt0.c0))LIKE((+ (COUNT(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0))LIKE((+ (COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt0.c0))LIKE((+ (COUNT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(vt0.c0))LIKE((+ (COUNT(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((((vt1.c0)OR(1.158592383E9)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)) IN (((((rt0.c0)OR(vt1.c0)))OR(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT ((((((((((vt1.c0)OR(1.158592383E9)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)) IN (((((rt0.c0)OR(vt1.c0)))OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((((((((((((vt1.c0)OR(1.158592383E9)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)) IN (((((rt0.c0)OR(vt1.c0)))OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)&(rt0.c2)))>>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)&(rt0.c2)))>>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)&(rt0.c2)))>>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)<<(vt1.c0 COLLATE RTRIM)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)<<(vt1.c0 COLLATE RTRIM)) WHERE (CAST(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)<<(vt1.c0 COLLATE RTRIM)) WHERE ((NOT (CAST(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)<<(vt1.c0 COLLATE RTRIM)) WHERE (((CAST(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)<<(vt1.c0 COLLATE RTRIM)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((~ (rt0.c0)), (((0.7827591614615812))==((vt1.c0))), CAST(rt0.c2 AS TEXT)))!=((rt0.c0, ((rt0.c1) IS FALSE), (NOT (rt0.c1))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((~ (rt0.c0)), (((0.7827591614615812))=((vt1.c0))), CAST(rt0.c2 AS TEXT)))<>((rt0.c0, ((rt0.c1) IS FALSE), (NOT (rt0.c1))))) GROUP BY vt0.c0 HAVING AVG(TOTAL(rt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((~ (rt0.c0)), (((0.7827591614615812))==((vt1.c0))), CAST(rt0.c2 AS TEXT)))<>((rt0.c0, ((rt0.c1) IS FALSE), (NOT (rt0.c1))))) GROUP BY vt0.c0 HAVING (NOT (AVG(TOTAL(rt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((~ (rt0.c0)), (((0.7827591614615812))=((vt1.c0))), CAST(rt0.c2 AS TEXT)))<>((rt0.c0, ((rt0.c1) IS FALSE), (NOT (rt0.c1))))) GROUP BY vt0.c0 HAVING ((AVG(TOTAL(rt0.c0))) ISNULL);
SELECT ALL MAX((- (vt0.c0))) FROM vt0, vt1 ORDER BY (((+ (vt1.c0)))|(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((- (((vt0.c0)&(0.3960649132276436))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((- (((vt0.c0)&(0.3960649132276436))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((- (((vt0.c0)&(0.3960649132276436))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (json_extract(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (json_extract(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((json_extract(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (CHAR(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (CHAR(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (CHAR(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((((ABS(rt0.c0))OR(COUNT(COUNT(rt0.c0)))))AND(COUNT(*))))OR(NULL)))OR(MIN(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((((((ABS(rt0.c0))OR(COUNT(COUNT(rt0.c0)))))AND(COUNT(*))))OR(NULL)))OR(MIN(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((((((ABS(rt0.c0))OR(COUNT(COUNT(rt0.c0)))))AND(COUNT(*))))OR(NULL)))OR(MIN(TOTAL(rt0.c2))))) ISNULL);
SELECT MIN((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((rt0.c0) NOT BETWEEN ('F1靣6y') AND (rt0.c1))))) FROM vt0, rt0 ORDER BY (((-1521864790 IN (rt0.c2))) IS FALSE) ASC  NULLS LAST;
SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1;
SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0)>(((vt1.c0)+(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0)>(((vt1.c0)+(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)>(((vt1.c0)+(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c2 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, vt0 WHERE ((((+ (rt0.c1)))-(((((rt0.c2)AND('oZ')))AND(vt0.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT ((((+ (rt0.c1)))-(((((rt0.c2)AND('oZ')))AND(vt0.c0))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1, vt0 WHERE ((((((+ (rt0.c1)))-(((((rt0.c2)AND('oZ')))AND(vt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING MIN(TOTAL(vt1.c0)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (MIN(TOTAL(vt1.c0)))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING ((MIN(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0 COLLATE NOCASE)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c0)OR(vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON ((((NULL) IS TRUE)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt1.c0)*(rt0.c0))));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c0)OR(vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON ((((NULL) IS TRUE)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt1.c0)*(rt0.c0)))) WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c0)OR(vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON ((((NULL) IS TRUE)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt1.c0)*(rt0.c0)))) WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c0)OR(vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON ((((NULL) IS TRUE)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt1.c0)*(rt0.c0)))) WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c0)OR(vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON ((((NULL) IS TRUE)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt1.c0)*(rt0.c0))));
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))*(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))*(vt0.c0 COLLATE BINARY)) WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))*(vt0.c0 COLLATE BINARY)) WHERE ((NOT (CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))*(vt0.c0 COLLATE BINARY)) WHERE (((CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))*(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, vt1.c0;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 HAVING TOTAL(((((0.37361959678899437)OR('1260477089')))AND(vt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 HAVING (NOT (TOTAL(((((0.37361959678899437)OR('1260477089')))AND(vt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 HAVING ((TOTAL(((((0.37361959678899437)OR('1260477089')))AND(vt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 HAVING TOTAL(((((0.37361959678899437)OR('1260477089')))AND(vt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 HAVING (NOT (TOTAL(((((0.37361959678899437)OR('1260477089')))AND(vt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 HAVING ((TOTAL(((((0.37361959678899437)OR('1260477089')))AND(vt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((((0.5006873654159804)AND(vt1.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE (((vt0.c0)IS NOT(rt0.c0)) COLLATE RTRIM COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (((vt0.c0)IS NOT(rt0.c0)) COLLATE RTRIM COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE (((((vt0.c0)IS NOT(rt0.c0)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.40891754034990335) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.40891754034990335))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.40891754034990335) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(''))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((CAST(vt1.c0 AS NUMERIC) IN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(''))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((CAST(vt1.c0 AS NUMERIC) IN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(''))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING CAST(((((GROUP_CONCAT(rt0.c0))AND(rt0.c2)))AND(0.4876627491291866)) AS NUMERIC) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (CAST(((((GROUP_CONCAT(rt0.c0))AND(rt0.c2)))AND(0.4876627491291866)) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((CAST(((((GROUP_CONCAT(rt0.c0))AND(rt0.c2)))AND(0.4876627491291866)) AS NUMERIC)) ISNULL);
SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING CAST(((((GROUP_CONCAT(rt0.c0))AND(rt0.c2)))AND(0.4876627491291866)) AS NUMERIC) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (CAST(((((GROUP_CONCAT(rt0.c0))AND(rt0.c2)))AND(0.4876627491291866)) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((CAST(((((GROUP_CONCAT(rt0.c0))AND(rt0.c2)))AND(0.4876627491291866)) AS NUMERIC)) ISNULL);
SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((- (rt0.c2))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT ((- (rt0.c2))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((- (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT ALL rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0, vt1 WHERE (SQLITE_SOURCE_ID()) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0, vt1 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 HAVING (+ (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 HAVING (NOT ((+ (GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 HAVING (((+ (GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 HAVING (+ (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 HAVING (NOT ((+ (GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 HAVING (((+ (GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, rt0.c1;
SELECT ALL * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL));
SELECT ALL * FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((vt0.c0)!=(vt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((vt0.c0)!=(vt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0)!=(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((x''))<((rt0.c1)))) UNION ALL SELECT * FROM rt0, vt1 NOT INDEXED, vt0 WHERE ((NOT ((((x''))<((rt0.c1)))))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((((((x''))<((rt0.c1)))) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST((((rt0.c1, rt0.c0, 0.415850075957071, '', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c1, 0.10730762305154107, rt0.c0, rt0.c2, rt0.c2))) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST((((rt0.c1, rt0.c0, 0.415850075957071, '', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c1, 0.10730762305154107, rt0.c0, rt0.c2, rt0.c2))) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST((((rt0.c1, rt0.c0, 0.415850075957071, '', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c1, 0.10730762305154107, rt0.c0, rt0.c2, rt0.c2))) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))<<(MIN(0x28743e91, vt0.c0, NULL, vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))<<(MIN(0x28743e91, vt0.c0, NULL, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))<<(MIN(0X28743e91, vt0.c0, NULL, vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0 HAVING CAST(MAX(vt0.c0) AS INTEGER) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0 HAVING (NOT (CAST(MAX(vt0.c0) AS INTEGER))) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0 HAVING ((CAST(MAX(vt0.c0) AS INTEGER)) ISNULL);
SELECT vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0 HAVING CAST(MAX(vt0.c0) AS INTEGER) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0 HAVING (NOT (CAST(MAX(vt0.c0) AS INTEGER))) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0 HAVING ((CAST(MAX(vt0.c0) AS INTEGER)) ISNULL);
SELECT vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((NULL IN ()), (rt0.c2 IN ()), (((rt0.c0, '-1943329604', rt0.c0, x'60249577', rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1)/(rt0.c2)), (((rt0.c1, rt0.c2, rt0.c0))<=((rt0.c2, rt0.c1, rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((NULL IN ()), (rt0.c2 IN ()), (((rt0.c0, '-1943329604', rt0.c0, x'60249577', rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1)/(rt0.c2)), (((rt0.c1, rt0.c2, rt0.c0))<=((rt0.c2, rt0.c1, rt0.c1))))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((NULL IN ()), (rt0.c2 IN ()), (((rt0.c0, '-1943329604', rt0.c0, x'60249577', rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1)/(rt0.c2)), (((rt0.c1, rt0.c2, rt0.c0))<=((rt0.c2, rt0.c1, rt0.c1))))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((vt0.c0) ISNULL) IN ())) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((((vt0.c0) ISNULL) IN ())))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((vt0.c0) ISNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT rt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((vt1.c0)) NOT BETWEEN (('1027730217')) AND ((vt0.c0)))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((vt1.c0)) NOT BETWEEN (('1027730217')) AND ((vt0.c0)))))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((((rt0.c1 COLLATE RTRIM) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((vt1.c0)) NOT BETWEEN (('1027730217')) AND ((vt0.c0)))))) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (((AVG(vt0.c0))) NOT BETWEEN (((((rt0.c2))!=((TOTAL(rt0.c2)))))) AND ((AVG(rt0.c1)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT ((((AVG(vt0.c0))) NOT BETWEEN (((((rt0.c2))!=((TOTAL(rt0.c2)))))) AND ((AVG(rt0.c1)))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (((((AVG(vt0.c0))) NOT BETWEEN (((((rt0.c2))<>((TOTAL(rt0.c2)))))) AND ((AVG(rt0.c1))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (((AVG(vt0.c0))) NOT BETWEEN (((((rt0.c2))!=((TOTAL(rt0.c2)))))) AND ((AVG(rt0.c1)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT ((((AVG(vt0.c0))) NOT BETWEEN (((((rt0.c2))!=((TOTAL(rt0.c2)))))) AND ((AVG(rt0.c1)))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (((((AVG(vt0.c0))) NOT BETWEEN (((((rt0.c2))<>((TOTAL(rt0.c2)))))) AND ((AVG(rt0.c1))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (GLOB(((vt1.c0) IS TRUE), LIKELIHOOD(vt1.c0, 0.07668196337413435))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (GLOB(((vt1.c0) IS TRUE), LIKELIHOOD(vt1.c0, 0.07668196337413435))))) UNION ALL SELECT * FROM vt1 WHERE (((GLOB(((vt1.c0) IS TRUE), LIKELIHOOD(vt1.c0, 0.07668196337413435))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ('17358995') UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ('17358995'))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((('17358995') ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CAST(((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CAST(((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, vt0.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON (+ ((+ (rt0.c0)))) RIGHT OUTER JOIN vt0 ON (~ (((-359405201) ISNULL))) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, vt0.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON (+ ((+ (rt0.c0)))) RIGHT OUTER JOIN vt0 ON (~ (((-359405201) ISNULL))) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0, rt0.c0 HAVING TOTAL(MIN(MAX(AVG(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, vt0.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON (+ ((+ (rt0.c0)))) RIGHT OUTER JOIN vt0 ON (~ (((-359405201) ISNULL))) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0, rt0.c0 HAVING (NOT (TOTAL(MIN(MAX(AVG(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt0.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON (+ ((+ (rt0.c0)))) RIGHT OUTER JOIN vt0 ON (~ (((-359405201) ISNULL))) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0, rt0.c0 HAVING ((TOTAL(MIN(MAX(AVG(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOTNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOTNULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS FALSE) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS FALSE))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS FALSE)) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS FALSE) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS FALSE))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS FALSE)) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON LIKELIHOOD(PRINTF(rt0.c2), 0.4538099993982032) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((0.64051312404265))<=((rt0.c1))) IN (rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((0.64051312404265))<=((rt0.c1))) IN (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((0.64051312404265))<=((rt0.c1))) IN (rt0.c0))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((- (CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT ((- (CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE rt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((- (CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING COUNT(vt0.c0) COLLATE BINARY UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT (COUNT(vt0.c0) COLLATE BINARY)) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING ((COUNT(vt0.c0) COLLATE BINARY) ISNULL);
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING COUNT(vt0.c0) COLLATE BINARY UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT (COUNT(vt0.c0) COLLATE BINARY)) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING ((COUNT(vt0.c0) COLLATE BINARY) ISNULL);
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)<<(vt1.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0)<<(vt1.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((vt1.c0)<<(vt1.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((('-640150466') BETWEEN ((+ (rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((('-640150466') BETWEEN ((+ (rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((('-640150466') BETWEEN ((+ (rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c2))) AS TEXT) RIGHT OUTER JOIN rt0 ON (vt1.c0 IN ()) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((MIN(rt0.c1)))<=((GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING (NOT ((((MIN(rt0.c1)))<=((GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((MIN(rt0.c1)))<=((GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((MIN(rt0.c1)))<=((GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING (NOT ((((MIN(rt0.c1)))<=((GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((MIN(rt0.c1)))<=((GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM vt1 INNER JOIN rt0 ON ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((rt0.c0) IS TRUE) AS REAL);
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (x'0dfa') UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (x'0dfa'))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((x'0dfa') ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))) AS REAL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))) AS REAL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))) AS REAL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(TOTAL(SUM(vt1.c0))))==(SUM(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(SUM(vt1.c0))))=(SUM(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(TOTAL(SUM(vt1.c0))))=(SUM(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (NULLIF(DISTINCT rt0.c1, rt0.c0)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ (NULLIF(DISTINCT rt0.c1, rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (NULLIF(DISTINCT rt0.c1, rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0))<((vt0.c0))))AND(json_patch(vt1.c0, 0.9702294742821609))))AND((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((((vt1.c0))<((vt0.c0))))AND(json_patch(vt1.c0, 0.9702294742821609))))AND((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((((((((vt1.c0))<((vt0.c0))))AND(json_patch(vt1.c0, 0.9702294742821609))))AND((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)))|(((-529184693) BETWEEN (rt0.c2) AND (vt1.c0))))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)))|(((-529184693) BETWEEN (rt0.c2) AND (vt1.c0))))))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)))|(((-529184693) BETWEEN (rt0.c2) AND (vt1.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0;
SELECT ALL vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (vt1.c0) AND (vt0.c0))))<=(((+ ('1633245220')))))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((((rt0.c2) BETWEEN (vt1.c0) AND (vt0.c0))))<=(((+ ('1633245220')))))))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((((((rt0.c2) BETWEEN (vt1.c0) AND (vt0.c0))))<=(((+ ('1633245220')))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0 NOT INDEXED, rt0, vt1 WHERE (((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, rt0, vt1 WHERE (((((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, rt0, vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2)AND(rt0.c0))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)AND(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN x'' THEN rt0.c2 END)||((- (''))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN x'' THEN rt0.c2 END)||((- (''))))))) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((CASE WHEN x'' THEN rt0.c2 END)||((- (''))))) ISNULL));
SELECT vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN DATETIME(rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1) THEN ((rt0.c2) ISNULL) END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN DATETIME(rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1) THEN ((rt0.c2) ISNULL) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN DATETIME(rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1) THEN ((rt0.c2) ISNULL) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (0Xfffffffffb7975aa) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (0xfffffffffb7975aa))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((0xfffffffffb7975aa) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(COUNT(rt0.c2)) IN (COUNT(*), COUNT(vt1.c0))) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((SUM(COUNT(rt0.c2)) IN (COUNT(*), COUNT(vt1.c0))) IN ()))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((((SUM(COUNT(rt0.c2)) IN (COUNT(*), COUNT(vt1.c0))) IN ())) ISNULL);
SELECT vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(COUNT(rt0.c2)) IN (COUNT(*), COUNT(vt1.c0))) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((SUM(COUNT(rt0.c2)) IN (COUNT(*), COUNT(vt1.c0))) IN ()))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((((SUM(COUNT(rt0.c2)) IN (COUNT(*), COUNT(vt1.c0))) IN ())) ISNULL);
SELECT vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT SUM(((((vt1.c0)>(vt1.c0)))<((vt1.c0 IN (vt1.c0, vt1.c0))))) FROM vt1 ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC, ((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE RTRIM)) ASC;
