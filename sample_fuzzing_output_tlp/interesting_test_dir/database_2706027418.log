-- Time: 2024/06/10 07:24:48
-- Database: database18
-- Database version: 3.40.0
-- seed value: 2706027418
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 REAL , +c4 INT ); -- 2ms;
UPDATE OR REPLACE rt1 SET c4=x'' WHERE rt1.c3 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR ABORT INTO rt1(c3, c0) VALUES ('xL0v9', -1099437028); -- 1ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.8732543975477994 WHERE (0.9918921458653518 IN ('1282497825')); -- 1ms;
INSERT OR FAIL INTO rt1(c0, c2, c3, c1, c4) VALUES (1.282497825E9, 'cT0f', 0.6337610402606635, 'MgAiD^q', ''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c0, c3) VALUES (0x119d3df7, -1297724986, x'b0a5'); -- 1ms;
UPDATE vt0 SET (c1)=(NULL) WHERE ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) BETWEEN (TIME(vt0.c1, vt0.c1, NULL, vt0.c1, vt0.c1)) AND (((((vt0.c0)AND(vt0.c0)))OR(0.8448477033240623)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.282497825E9)GLOB('1996950745')))<=((('')!=('-2128747037')))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
UPDATE OR ABORT vt0 SET (c1, c0)=(0.48987798593820686, 0.3586408358405335); -- 0ms;
END; -- 0ms;
PRAGMA temp.foreign_keys; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c4, c3, c2, c1) VALUES (x'', 'Y#', NULL, NULL), (0.900520160603018, 'ct0f', 0.5688542086257612, '-2128747037'), (NULL, NULL, x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (0.7746020470669955, '}'); -- 0ms;
PRAGMA incremental_vacuum(1996950745); -- 0ms;
ANALYZE rt1; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL WHERE (vt0.c0 IN ()) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='-0.0'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31864'); -- 0ms;
UPDATE rt1 SET (c4)=(0Xffffffff8f2af9ae); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
UPDATE rt1 SET c3=x'' WHERE CASE WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END THEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c4)) END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'ba77', x'86fc'), (NULL, NULL), (x'a614', x'0890'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0X4c715d21); -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET c0=x'f84a' WHERE ((((vt0.c1)<=(NULL))) BETWEEN (((vt0.c0)==(vt0.c0))) AND (vt0.c1)); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('514663962') WHERE ((((vt0.c0)<(vt0.c0))) BETWEEN (((vt0.c1) NOTNULL)) AND (((((0.6337610402606635)OR(vt0.c1)))AND(vt0.c1)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DELETE FROM rt1 WHERE json_patch(((rt1.c2)<<(rt1.c4)), ((rt1.c2) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.39124215520854977), ((+ ((('-2128747037') IS TRUE)))), (NULL); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(2.95517687E8) WHERE (((- (vt0.c1))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0.033198167804241785); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL) WHERE ((((vt0.c1)>(vt0.c0)))GLOB(TRIM(vt0.c1, NULL))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'0d8a'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56767'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c1, c4, c0) VALUES (x'9ede', -1663771132, x'322734b3', NULL), (0.7867935568007592, '', NULL, 0x590c229a), (NULL, '-1276068776', '-1663771132', x''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(x'') WHERE 0.033198167804241785; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.9811360488811474) WHERE (NOT (vt0.c0)); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, -1574518406, x'f06d', '+<(8N0\nk', '509683293'), ((((('-1600126595') BETWEEN (0.016966511958561803) AND ('TRUE')))=(CAST(0.7867935568007592 AS TEXT))), 0.9285480976151156, '', x'e887', 0xffffffff9d0dae43), (NULL, 0.29610389613519594, 'ⶃ 䧆_', NULL, '㻿?'), (x'1a21', NULL, x'', 0Xffffffffa226c17a, 'G%K]-'), ('-1893008978', x'', x'9922', -1611934497, 0.19957403952847574); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(-1600126595); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.5879599254255256, 0.8864994993658486); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c0)=(x'', NULL); -- 0ms;
INSERT OR FAIL INTO rt1(c1, c3, c2, c4) VALUES (x'1d31', x'', NULL, 0.642314689389721); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (1493967514, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA cache_spill = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=x'c0ad', c0=x'c7e5', c1=NULL WHERE vt0.c0; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c4) VALUES (0.8794609183535269, x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1297724986,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11487'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c1)=(0Xffffffff8b378c86) WHERE (((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))>=((CAST(vt0.c0 AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1893008978'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=(x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, 0.3095494003184407); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(-1.663771132E9) WHERE ((((x'b0e3') BETWEEN (rt1.c0) AND (rt1.c1))) NOT NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(NULL) WHERE ((UPPER(rt1.c2))==((x'' IN (rt1.c3)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3, c4) VALUES (NULL, x'', ''); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22589'); -- 1ms;
PRAGMA temp.cache_spill = false; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1)=(x'b0aa17e9', 'j'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('& Sbc?', x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c0, c3)=(x'17cf', 0.2949782881182966, NULL); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)<=((((rt0.c2, x'', rt0.c2))<((rt0.c0, rt0.c2, rt0.c2)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)<=((((rt0.c2, x'', rt0.c2))<((rt0.c0, rt0.c2, rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)<=((((rt0.c2, x'', rt0.c2))<((rt0.c0, rt0.c2, rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (LOWER((rt1.c2 IN ()))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (LOWER((rt1.c2 IN ()))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((LOWER((rt1.c2 IN ()))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (COALESCE((NOT (vt0.c0)), CAST(x'e8a4' AS BLOB))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (COALESCE((NOT (vt0.c0)), CAST(x'e8a4' AS BLOB))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((COALESCE((NOT (vt0.c0)), CAST(x'e8a4' AS BLOB))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt1.c1, rt1.c2, rt1.c3, rt0.c1, rt1.c4, rt1.c0 FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) ISNULL) LEFT OUTER JOIN vt0 ON CAST(((rt1.c4)-(rt1.c3)) AS TEXT) GROUP BY rt0.c3, rt1.c1, rt1.c2, rt1.c3, rt0.c1, rt1.c4, rt1.c0;
SELECT rt0.c3, rt1.c1, rt1.c2, rt1.c3, rt0.c1, rt1.c4, rt1.c0 FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) ISNULL) LEFT OUTER JOIN vt0 ON CAST(((rt1.c4)-(rt1.c3)) AS TEXT) GROUP BY rt0.c3, rt1.c1, rt1.c2, rt1.c3, rt0.c1, rt1.c4, rt1.c0 HAVING COUNT(COUNT(vt0.c1)) UNION ALL SELECT ALL rt0.c3, rt1.c1, rt1.c2, rt1.c3, rt0.c1, rt1.c4, rt1.c0 FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) ISNULL) LEFT OUTER JOIN vt0 ON CAST(((rt1.c4)-(rt1.c3)) AS TEXT) GROUP BY rt0.c3, rt1.c1, rt1.c2, rt1.c3, rt0.c1, rt1.c4, rt1.c0 HAVING (NOT (COUNT(COUNT(vt0.c1)))) UNION ALL SELECT rt0.c3, rt1.c1, rt1.c2, rt1.c3, rt0.c1, rt1.c4, rt1.c0 FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) ISNULL) LEFT OUTER JOIN vt0 ON CAST(((rt1.c4)-(rt1.c3)) AS TEXT) GROUP BY rt0.c3, rt1.c1, rt1.c2, rt1.c3, rt0.c1, rt1.c4, rt1.c0 HAVING ((COUNT(COUNT(vt0.c1))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (ABS(((rt0.c3)==(0xffffffffc22507db)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (ABS(((rt0.c3)=(0Xffffffffc22507db)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((ABS(((rt0.c3)==(0xffffffffc22507db)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3;
SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 WHERE (((((((((((((((rt1.c2) ISNULL))OR(CAST(rt1.c1 AS BLOB))))AND(((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))))OR(((rt1.c4)/(rt1.c4)))))AND(CAST(rt1.c2 AS BLOB))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE 'hRrr6NP' END)))AND(rt1.c1 COLLATE BINARY))) GROUP BY rt1.c0, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 WHERE ((NOT (((((((((((((((rt1.c2) ISNULL))OR(CAST(rt1.c1 AS BLOB))))AND(((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))))OR(((rt1.c4)/(rt1.c4)))))AND(CAST(rt1.c2 AS BLOB))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE 'hRrr6NP' END)))AND(rt1.c1 COLLATE BINARY))))) GROUP BY rt1.c0, rt1.c4, rt1.c3 UNION SELECT rt1.c0, rt1.c4, rt1.c3 FROM rt1 WHERE (((((((((((((((((rt1.c2) ISNULL))OR(CAST(rt1.c1 AS BLOB))))AND(((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))))OR(((rt1.c4)/(rt1.c4)))))AND(CAST(rt1.c2 AS BLOB))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE 'hRrr6NP' END)))AND(rt1.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt1.c3;
SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3;
SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2 HAVING (CAST(rt0.c3 AS TEXT) IN ()) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((CAST(rt0.c3 AS TEXT) IN ()))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2 HAVING (((CAST(rt0.c3 AS TEXT) IN ())) ISNULL);
SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2 HAVING (CAST(rt0.c3 AS TEXT) IN ()) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((CAST(rt0.c3 AS TEXT) IN ()))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2 HAVING (((CAST(rt0.c3 AS TEXT) IN ())) ISNULL);
SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt0.c1, rt1.c3, rt1.c2, rt0.c0, rt1.c4, rt0.c3, vt0.c1, rt1.c0, vt0.c0 FROM rt1, vt0, rt0;
SELECT rt1.c1, rt0.c1, rt1.c3, rt1.c2, rt0.c0, rt1.c4, rt0.c3, vt0.c1, rt1.c0, vt0.c0 FROM rt1, vt0, rt0 WHERE ((((((((rt1.c0))>(('509683293'))))AND(((rt0.c1)%(rt0.c2)))))AND(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt0.c1, rt1.c3, rt1.c2, rt0.c0, rt1.c4, rt0.c3, vt0.c1, rt1.c0, vt0.c0 FROM rt1, vt0, rt0 WHERE ((NOT ((((((((rt1.c0))>(('509683293'))))AND(((rt0.c1)%(rt0.c2)))))AND(vt0.c1 COLLATE RTRIM))))) UNION ALL SELECT rt1.c1, rt0.c1, rt1.c3, rt1.c2, rt0.c0, rt1.c4, rt0.c3, vt0.c1, rt1.c0, vt0.c0 FROM rt1, vt0, rt0 WHERE ((((((((((rt1.c0))>(('509683293'))))AND(((rt0.c1)%(rt0.c2)))))AND(vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL rt1.c1, rt0.c1, rt1.c3, rt1.c2, rt0.c0, rt1.c4, rt0.c3, vt0.c1, rt1.c0, vt0.c0 FROM rt1, vt0, rt0;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((- (rt1.c1)))OR((('qR*M]') NOT BETWEEN (rt1.c4) AND (rt1.c2)))))AND(((((rt1.c1)OR(rt1.c4)))OR(rt1.c1))))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((((- (rt1.c1)))OR((('qR*M]') NOT BETWEEN (rt1.c4) AND (rt1.c2)))))AND(((((rt1.c1)OR(rt1.c4)))OR(rt1.c1))))))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((((- (rt1.c1)))OR((('qR*M]') NOT BETWEEN (rt1.c4) AND (rt1.c2)))))AND(((((rt1.c1)OR(rt1.c4)))OR(rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (((((rt1.c2)<=(vt0.c1)))AND(CASE WHEN rt1.c4 THEN x'' ELSE rt1.c3 END))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((NOT (((((rt1.c2)<=(vt0.c1)))AND(CASE WHEN rt1.c4 THEN x'' ELSE rt1.c3 END))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (((((((rt1.c2)<=(vt0.c1)))AND(CASE WHEN rt1.c4 THEN x'' ELSE rt1.c3 END))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c1 HAVING NULLIF(AVG(MAX(vt0.c0)), (('-2128747037') NOT BETWEEN (vt0.c1) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (NULLIF(AVG(MAX(vt0.c0)), (('-2128747037') NOT BETWEEN (vt0.c1) AND (vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((NULLIF(AVG(MAX(vt0.c0)), (('-2128747037') NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ISNULL);
SELECT rt0.c3, rt1.c3, vt0.c0, rt0.c2 FROM rt1, vt0, rt0;
SELECT ALL rt0.c3, rt1.c3, vt0.c0, rt0.c2 FROM rt1, vt0, rt0 WHERE (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))<=((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt1.c3, vt0.c0, rt0.c2 FROM rt1, vt0, rt0 WHERE ((NOT (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))<=((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c2)))))))) UNION ALL SELECT rt0.c3, rt1.c3, vt0.c0, rt0.c2 FROM rt1, vt0, rt0 WHERE (((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))<=((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c2)))))) ISNULL));
SELECT rt0.c3, rt1.c3, vt0.c0, rt0.c2 FROM rt1, vt0, rt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c3)/(rt0.c1)))/(rt0.c3 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c3)/(rt0.c1)))/(rt0.c3 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c3)/(rt0.c1)))/(rt0.c3 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1;
SELECT ALL rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1 FROM rt1, rt0 NATURAL JOIN vt0 WHERE (NULLIF(((rt1.c0)!=(rt1.c1)), ((((rt1.c3)OR(rt1.c2)))OR(rt1.c1)))) GROUP BY rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1 UNION SELECT ALL rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1 FROM rt1, rt0 NATURAL JOIN vt0 WHERE ((NOT (NULLIF(((rt1.c0)!=(rt1.c1)), ((((rt1.c3)OR(rt1.c2)))OR(rt1.c1)))))) GROUP BY rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1 UNION SELECT rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1 FROM rt1, rt0 NATURAL JOIN vt0 WHERE (((NULLIF(((rt1.c0)<>(rt1.c1)), ((((rt1.c3)OR(rt1.c2)))OR(rt1.c1)))) ISNULL)) GROUP BY rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1;
SELECT ALL rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, rt1.c3, vt0.c0, rt1.c2, rt0.c3, vt0.c1, rt0.c1;
SELECT rt1.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c3;
SELECT rt1.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c3 HAVING TOTAL(SUM(SUM(rt1.c0))) UNION ALL SELECT rt1.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c3 HAVING (NOT (TOTAL(SUM(SUM(rt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c3 HAVING ((TOTAL(SUM(SUM(rt1.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL;
SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE (CASE rt1.c0  WHEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((((((vt0.c0)AND(rt1.c4)))AND(rt1.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(NULL)))OR(rt1.c1)) END) UNION SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT (CASE rt1.c0  WHEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((((((vt0.c0)AND(rt1.c4)))AND(rt1.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(NULL)))OR(rt1.c1)) END))) UNION SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE (((CASE rt1.c0  WHEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((((((vt0.c0)AND(rt1.c4)))AND(rt1.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(NULL)))OR(rt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c2))) BETWEEN ((NOT (rt0.c0))) AND (TRIM(rt0.c3)))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) BETWEEN ((NOT (rt0.c0))) AND (TRIM(rt0.c3)))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c2))) BETWEEN ((NOT (rt0.c0))) AND (TRIM(rt0.c3)))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c1, rt0.c3, rt1.c2, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON CASE COALESCE(rt0.c3, rt0.c2, rt0.c3, rt0.c3)  WHEN CAST(rt1.c1 AS BLOB) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) ELSE CAST(rt1.c0 AS INTEGER) END GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt1.c2, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON CASE COALESCE(rt0.c3, rt0.c2, rt0.c3, rt0.c3)  WHEN CAST(rt1.c1 AS BLOB) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) ELSE CAST(rt1.c0 AS INTEGER) END GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2 HAVING QUOTE(MAX(TOTAL(TOTAL(-1099437028)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt1.c2, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON CASE COALESCE(rt0.c3, rt0.c2, rt0.c3, rt0.c3)  WHEN CAST(rt1.c1 AS BLOB) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) ELSE CAST(rt1.c0 AS INTEGER) END GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2 HAVING (NOT (QUOTE(MAX(TOTAL(TOTAL(-1099437028)))))) UNION ALL SELECT rt0.c1, rt0.c3, rt1.c2, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON CASE COALESCE(rt0.c3, rt0.c2, rt0.c3, rt0.c3)  WHEN CAST(rt1.c1 AS BLOB) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) ELSE CAST(rt1.c0 AS INTEGER) END GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2 HAVING ((QUOTE(MAX(TOTAL(TOTAL(-1099437028))))) ISNULL);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- ((- (rt1.c1))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- ((- (rt1.c1)))) WHERE ((~ ((+ (rt0.c2))))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- ((- (rt1.c1)))) WHERE ((NOT ((~ ((+ (rt0.c2))))))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- ((- (rt1.c1)))) WHERE ((((~ ((+ (rt0.c2))))) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- ((- (rt1.c1))));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (CAST(rt0.c3 AS INTEGER) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c3 AS INTEGER) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0;
SELECT rt0.c3, vt0.c0, rt1.c1 FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)/(rt1.c1)))<((vt0.c0 IN (rt1.c3, vt0.c1)))) GROUP BY rt0.c3, vt0.c0, rt1.c1;
SELECT rt0.c3, vt0.c0, rt1.c1 FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)/(rt1.c1)))<((vt0.c0 IN (rt1.c3, vt0.c1)))) WHERE (CAST(SQLITE_SOURCE_ID() AS INTEGER)) GROUP BY rt0.c3, vt0.c0, rt1.c1 UNION SELECT ALL rt0.c3, vt0.c0, rt1.c1 FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)/(rt1.c1)))<((vt0.c0 IN (rt1.c3, vt0.c1)))) WHERE ((NOT (CAST(SQLITE_SOURCE_ID() AS INTEGER)))) GROUP BY rt0.c3, vt0.c0, rt1.c1 UNION SELECT ALL rt0.c3, vt0.c0, rt1.c1 FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)/(rt1.c1)))<((vt0.c0 IN (rt1.c3, vt0.c1)))) WHERE (((CAST(SQLITE_SOURCE_ID() AS INTEGER)) ISNULL)) GROUP BY rt0.c3, vt0.c0, rt1.c1;
SELECT rt0.c3, vt0.c0, rt1.c1 FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)/(rt1.c1)))<((vt0.c0 IN (rt1.c3, vt0.c1)))) GROUP BY rt0.c3, vt0.c0, rt1.c1;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (+ (AVG(COUNT(COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT ((+ (AVG(COUNT(COUNT(*))))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (((+ (AVG(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt1.c2, rt1.c4, rt0.c2, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c1 FROM rt1, rt0, vt0;
SELECT rt0.c3, vt0.c1, vt0.c0, rt1.c2, rt1.c4, rt0.c2, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c1 FROM rt1, rt0, vt0 WHERE ((rt1.c2 COLLATE BINARY IN ())) UNION ALL SELECT rt0.c3, vt0.c1, vt0.c0, rt1.c2, rt1.c4, rt0.c2, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c1 FROM rt1, rt0, vt0 WHERE ((NOT ((rt1.c2 COLLATE BINARY IN ())))) UNION ALL SELECT rt0.c3, vt0.c1, vt0.c0, rt1.c2, rt1.c4, rt0.c2, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c1 FROM rt1, rt0, vt0 WHERE ((((rt1.c2 COLLATE BINARY IN ())) ISNULL));
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt1.c2, rt1.c4, rt0.c2, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c1 FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((+ (((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((NOT ((+ (((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((((+ (((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT ALL rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0, vt0 WHERE (((((rt1.c0)<(rt0.c2)))>=(rt1.c0 COLLATE RTRIM))) GROUP BY rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0, vt0 WHERE ((NOT (((((rt1.c0)<(rt0.c2)))>=(rt1.c0 COLLATE RTRIM))))) GROUP BY rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0, vt0 WHERE (((((((rt1.c0)<(rt0.c2)))>=(rt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c0, rt1.c1, rt0.c3, rt1.c4, vt0.c0, vt0.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c1, rt0.c2;
SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2;
SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2 HAVING MAX((rt1.c3 IN ())) UNION ALL SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2 HAVING (NOT (MAX((rt1.c3 IN ())))) UNION ALL SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2 HAVING ((MAX((rt1.c3 IN ()))) ISNULL);
SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2;
SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2 HAVING MAX((rt1.c3 IN ())) UNION ALL SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2 HAVING (NOT (MAX((rt1.c3 IN ())))) UNION ALL SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2 HAVING ((MAX((rt1.c3 IN ()))) ISNULL);
SELECT rt1.c1, rt0.c2 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c0, vt0.c0, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c1)) AND ((rt0.c1, rt1.c2, rt0.c3))) COLLATE BINARY GROUP BY rt1.c1, rt0.c2;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((CAST(rt1.c0 AS REAL))IS NOT((rt0.c1 IN (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (((CAST(rt1.c0 AS REAL))IS NOT((rt0.c1 IN (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((((CAST(rt1.c0 AS REAL))IS NOT((rt0.c1 IN (rt0.c2))))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((-1.893008978E9) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (((-1.893008978E9) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((-1.893008978E9) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0;
SELECT ALL rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0 HAVING SUM((NOT (vt0.c1))) UNION ALL SELECT rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0 HAVING (NOT (SUM((NOT (vt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0 HAVING ((SUM((NOT (vt0.c1)))) ISNULL);
SELECT rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0;
SELECT ALL rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0 HAVING SUM((NOT (vt0.c1))) UNION ALL SELECT rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0 HAVING (NOT (SUM((NOT (vt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0 HAVING ((SUM((NOT (vt0.c1)))) ISNULL);
SELECT rt0.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt1, rt0 INNER JOIN vt0 ON TRIM(rt1.c1 COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ (LIKE(vt0.c1, -291570001, '{')))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ (LIKE(vt0.c1, -291570001, '{')))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (LIKE(vt0.c1, -291570001, '{')))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0;
SELECT rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0 FROM rt0, rt1 WHERE (((CAST(rt1.c3 AS TEXT)) IS FALSE)) GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0 UNION SELECT rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0 FROM rt0, rt1 WHERE ((NOT (((CAST(rt1.c3 AS TEXT)) IS FALSE)))) GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0 UNION SELECT rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0 FROM rt0, rt1 WHERE (((((CAST(rt1.c3 AS TEXT)) IS FALSE)) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0;
SELECT ALL rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c3, rt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, vt0.c0, rt1.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, vt0.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, vt0.c0, rt1.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, vt0.c0, rt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, vt0.c0, rt1.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, vt0.c0, rt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, vt0.c0, rt1.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, vt0.c0, rt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1 WHERE (UNICODE(((rt1.c1)<=(-1893008978)))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (UNICODE(((rt1.c1)<=(-1893008978)))))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1 WHERE (((UNICODE(((rt1.c1)<=(-1893008978)))) ISNULL));
SELECT rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c3, rt1.c0, rt0.c2, rt0.c3, rt1.c4 FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c3, rt1.c0, rt0.c2, rt0.c3, rt1.c4 FROM rt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt1.c2, rt0.c0, rt1.c3, rt1.c0, rt0.c2, rt0.c3, rt1.c4 FROM rt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt1.c2, rt0.c0, rt1.c3, rt1.c0, rt0.c2, rt0.c3, rt1.c4 FROM rt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c3, rt1.c0, rt0.c2, rt0.c3, rt1.c4 FROM rt1, rt0;
SELECT ALL rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2;
SELECT rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1, rt0 WHERE ((rt1.c3 COLLATE RTRIM IN ())) GROUP BY rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2 UNION SELECT ALL rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1, rt0 WHERE ((NOT ((rt1.c3 COLLATE RTRIM IN ())))) GROUP BY rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2 UNION SELECT ALL rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1, rt0 WHERE ((((rt1.c3 COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2;
SELECT ALL rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c2;
SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3;
SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3 HAVING AVG(rt0.c0) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3 HAVING (NOT (AVG(rt0.c0))) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3 HAVING ((AVG(rt0.c0)) ISNULL);
SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3;
SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3 HAVING AVG(rt0.c0) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3 HAVING (NOT (AVG(rt0.c0))) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3 HAVING ((AVG(rt0.c0)) ISNULL);
SELECT rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c0, rt1.c4, rt0.c3, rt1.c1, rt1.c3, vt0.c0, rt1.c2, rt0.c1, vt0.c1 FROM rt0, rt1, vt0;
SELECT rt0.c2, rt0.c0, rt1.c4, rt0.c3, rt1.c1, rt1.c3, vt0.c0, rt1.c2, rt0.c1, vt0.c1 FROM rt0, rt1, vt0 WHERE (((CAST(-1.611934497E9 AS NUMERIC))*(((vt0.c0)>(vt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt1.c4, rt0.c3, rt1.c1, rt1.c3, vt0.c0, rt1.c2, rt0.c1, vt0.c1 FROM rt0, rt1, vt0 WHERE ((NOT (((CAST(-1.611934497E9 AS NUMERIC))*(((vt0.c0)>(vt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt1.c4, rt0.c3, rt1.c1, rt1.c3, vt0.c0, rt1.c2, rt0.c1, vt0.c1 FROM rt0, rt1, vt0 WHERE (((((CAST(-1.611934497E9 AS NUMERIC))*(((vt0.c0)>(vt0.c1))))) ISNULL));
SELECT rt0.c2, rt0.c0, rt1.c4, rt0.c3, rt1.c1, rt1.c3, vt0.c0, rt1.c2, rt0.c1, vt0.c1 FROM rt0, rt1, vt0;
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c3)) WHEN (((0.48987798593820686)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) THEN rt1.c2 COLLATE BINARY WHEN ((rt1.c1) NOT NULL) THEN rt1.c4 COLLATE BINARY WHEN CAST(rt1.c4 AS REAL) THEN x'b527' WHEN (('-2050302534')IS(rt1.c4)) THEN rt1.c3 ELSE rt1.c3 COLLATE RTRIM END;
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c3)) WHEN (((0.48987798593820686)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) THEN rt1.c2 COLLATE BINARY WHEN ((rt1.c1) NOT NULL) THEN rt1.c4 COLLATE BINARY WHEN CAST(rt1.c4 AS REAL) THEN x'b527' WHEN (('-2050302534')IS(rt1.c4)) THEN rt1.c3 ELSE rt1.c3 COLLATE RTRIM END WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c3)) WHEN (((0.48987798593820686)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) THEN rt1.c2 COLLATE BINARY WHEN ((rt1.c1) NOT NULL) THEN rt1.c4 COLLATE BINARY WHEN CAST(rt1.c4 AS REAL) THEN x'b527' WHEN (('-2050302534')IS(rt1.c4)) THEN rt1.c3 ELSE rt1.c3 COLLATE RTRIM END WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c3)) WHEN (((0.48987798593820686)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) THEN rt1.c2 COLLATE BINARY WHEN ((rt1.c1) NOT NULL) THEN rt1.c4 COLLATE BINARY WHEN CAST(rt1.c4 AS REAL) THEN x'b527' WHEN (('-2050302534')IS(rt1.c4)) THEN rt1.c3 ELSE rt1.c3 COLLATE RTRIM END WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c3)) WHEN (((0.48987798593820686)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) THEN rt1.c2 COLLATE BINARY WHEN ((rt1.c1) NOT NULL) THEN rt1.c4 COLLATE BINARY WHEN CAST(rt1.c4 AS REAL) THEN x'b527' WHEN (('-2050302534')IS(rt1.c4)) THEN rt1.c3 ELSE rt1.c3 COLLATE RTRIM END;
SELECT rt0.c3, rt0.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0, rt1 WHERE (x'') GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM vt0, rt0, rt1 WHERE ((NOT (x''))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM vt0, rt0, rt1 WHERE (((x'') ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (COUNT(rt0.c2) IN ()) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT ((COUNT(rt0.c2) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (((COUNT(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (COUNT(rt0.c2) IN ()) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT ((COUNT(rt0.c2) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (((COUNT(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT ALL vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((((0.5576978868047311)) BETWEEN ((CASE WHEN rt1.c0 THEN x'9bd6' END)) AND ((((rt1.c1)LIKE(rt1.c0)))))) UNION ALL SELECT ALL vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT ((((0.5576978868047311)) BETWEEN ((CASE WHEN rt1.c0 THEN x'9bd6' END)) AND ((((rt1.c1)LIKE(rt1.c0)))))))) UNION ALL SELECT ALL vt0.c0, rt1.c1 FROM vt0, rt1 NOT INDEXED WHERE ((((((0.5576978868047311)) BETWEEN ((CASE WHEN rt1.c0 THEN x'9bd6' END)) AND ((((rt1.c1)LIKE(rt1.c0)))))) ISNULL));
SELECT vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c4 FROM vt0, rt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c4 FROM vt0, rt1, rt0 WHERE (rt1.c1) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c4 FROM vt0, rt1, rt0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c4 FROM vt0, rt1, rt0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c4 FROM vt0, rt1, rt0;
SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1 FROM vt0 INNER JOIN rt1 ON ((vt0.c0 COLLATE NOCASE)*(CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 WHEN '+Rr卆' THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt0 ON (((- (rt0.c2))) NOT NULL) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1;
SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1 FROM vt0 INNER JOIN rt1 ON ((vt0.c0 COLLATE NOCASE)*(CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 WHEN '+Rr卆' THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt0 ON (((- (rt0.c2))) NOT NULL) WHERE ((((rt1.c1)) NOT BETWEEN ((((rt0.c3)AND(rt0.c1)))) AND ((CASE WHEN rt0.c3 THEN '1940480163' ELSE vt0.c1 END)))) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1 FROM vt0 INNER JOIN rt1 ON ((vt0.c0 COLLATE NOCASE)*(CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 WHEN '+Rr卆' THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt0 ON (((- (rt0.c2))) NOT NULL) WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((((rt0.c3)AND(rt0.c1)))) AND ((CASE WHEN rt0.c3 THEN '1940480163' ELSE vt0.c1 END)))))) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1 FROM vt0 INNER JOIN rt1 ON ((vt0.c0 COLLATE NOCASE)*(CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 WHEN '+Rr卆' THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt0 ON (((- (rt0.c2))) NOT NULL) WHERE ((((((rt1.c1)) NOT BETWEEN ((((rt0.c3)AND(rt0.c1)))) AND ((CASE WHEN rt0.c3 THEN '1940480163' ELSE vt0.c1 END)))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1;
SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1 FROM vt0 INNER JOIN rt1 ON ((vt0.c0 COLLATE NOCASE)*(CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 WHEN '+Rr卆' THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt0 ON (((- (rt0.c2))) NOT NULL) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt1.c3, rt0.c3, vt0.c1;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, rt1.c4;
SELECT rt1.c0, rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, rt1.c4 HAVING AVG(((rt1.c3)<(MIN(rt1.c3)))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, rt1.c4 HAVING (NOT (AVG(((rt1.c3)<(MIN(rt1.c3)))))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, rt1.c4 HAVING ((AVG(((rt1.c3)<(MIN(rt1.c3))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) AS TEXT)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt1.c4 FROM rt1, vt0 NOT INDEXED;
SELECT DISTINCT rt1.c4 FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT))AND(((rt1.c1)IS NOT(rt1.c1))))) UNION SELECT DISTINCT rt1.c4 FROM rt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))AND(((rt1.c1)IS NOT(rt1.c1))))))) UNION SELECT DISTINCT rt1.c4 FROM rt1, vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((rt1.c1)IS NOT(rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt1, vt0 NOT INDEXED;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((TRIM(DISTINCT vt0.c1))==((~ (x'')))) GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((TRIM(DISTINCT vt0.c1))=((~ (x'')))) WHERE (((x'')<=((rt0.c1 IN ())))) GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((TRIM(DISTINCT vt0.c1))==((~ (x'')))) WHERE ((NOT (((x'')<=((rt0.c1 IN ())))))) GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((TRIM(DISTINCT vt0.c1))=((~ (x'')))) WHERE (((((x'')<=((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((TRIM(DISTINCT vt0.c1))==((~ (x'')))) GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3;
SELECT ALL rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 HAVING (- (((SUM(rt1.c1)) NOT BETWEEN (rt0.c0) AND (COUNT(*))))) UNION ALL SELECT rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 HAVING (NOT ((- (((SUM(rt1.c1)) NOT BETWEEN (rt0.c0) AND (COUNT(*))))))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 NOT INDEXED CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 HAVING (((- (((SUM(rt1.c1)) NOT BETWEEN (rt0.c0) AND (COUNT(*)))))) ISNULL);
SELECT rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3;
SELECT ALL rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 HAVING (- (((SUM(rt1.c1)) NOT BETWEEN (rt0.c0) AND (COUNT(*))))) UNION ALL SELECT rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 HAVING (NOT ((- (((SUM(rt1.c1)) NOT BETWEEN (rt0.c0) AND (COUNT(*))))))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 NOT INDEXED CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 HAVING (((- (((SUM(rt1.c1)) NOT BETWEEN (rt0.c0) AND (COUNT(*)))))) ISNULL);
SELECT rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3 FROM rt1, rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) IS FALSE) ELSE rt1.c1 END GROUP BY rt1.c2, rt0.c2, rt1.c4, vt0.c0, vt0.c1, rt0.c0, rt1.c0, rt0.c3;
SELECT ALL SUM(rt0.c1) FROM rt0;
SELECT * FROM vt0, rt0, rt1;
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))GLOB('' COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, rt0, rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))GLOB('' COLLATE NOCASE))))) UNION ALL SELECT * FROM vt0, rt0, rt1 WHERE (((((((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))GLOB('' COLLATE NOCASE))) ISNULL));
SELECT * FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (0.36356239107859156) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((NOT (0.36356239107859156))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((0.36356239107859156) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((vt0.c0 IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c1, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, vt0.c1, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c1, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, vt0.c1, rt0.c3, rt0.c0, rt0.c1 HAVING COUNT(((((((((vt0.c1)OR(vt0.c1)))AND(AVG(COUNT(TOTAL(COUNT(*)))))))OR(rt0.c3)))AND(rt0.c2))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, vt0.c1, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (COUNT(((((((((vt0.c1)OR(vt0.c1)))AND(AVG(COUNT(TOTAL(COUNT(*)))))))OR(rt0.c3)))AND(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c1, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, vt0.c1, rt0.c3, rt0.c0, rt0.c1 HAVING ((COUNT(((((((((vt0.c1)OR(vt0.c1)))AND(AVG(COUNT(TOTAL(COUNT(*)))))))OR(rt0.c3)))AND(rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (~ ((rt0.c2 IN (rt1.c0))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (~ ((rt0.c2 IN (rt1.c0)))) WHERE (PRINTF(x'')) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (~ ((rt0.c2 IN (rt1.c0)))) WHERE ((NOT (PRINTF(x'')))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (~ ((rt0.c2 IN (rt1.c0)))) WHERE (((PRINTF(x'')) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (~ ((rt0.c2 IN (rt1.c0))));
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (rt1.c3) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR((NOT (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((CAST(vt0.c1 AS NUMERIC))OR((NOT (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((CAST(vt0.c1 AS NUMERIC))OR((NOT (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c4, rt1.c2 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c4, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c4, rt1.c2 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c4, rt1.c2 HAVING SUM(MAX(MAX('509683293'))) COLLATE BINARY UNION ALL SELECT rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c4, rt1.c2 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c4, rt1.c2 HAVING (NOT (SUM(MAX(MAX('509683293'))) COLLATE BINARY)) UNION ALL SELECT rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c4, rt1.c2 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c4, rt1.c2 HAVING ((SUM(MAX(MAX('509683293'))) COLLATE BINARY) ISNULL);
SELECT ALL MAX(CASE (- (rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c1 AS INTEGER) WHEN IFNULL(rt0.c3, x'') THEN rt0.c2 WHEN LIKELIHOOD(rt0.c1, 0.8130641467181287) THEN (rt0.c0 IN ()) ELSE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END) FROM rt0 ORDER BY rt0.c2;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN json_type(rt1.c1) THEN ((vt0.c1) ISNULL) END RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN 0.8120846669207733 THEN rt0.c0 ELSE vt0.c1 END THEN LIKELY(rt1.c1) END;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0x1285f5dd) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0X1285f5dd))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0x1285f5dd) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(vt0.c1 AS BLOB)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS BLOB)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt1.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt1.c2)>=(x'25bf'))) BETWEEN (CAST(rt1.c3 AS REAL)) AND (CAST(rt0.c0 AS INTEGER))) LEFT OUTER JOIN rt1 ON (((json_patch(rt1.c1, rt1.c2), CAST(vt0.c1 AS NUMERIC), 643952098))<((CAST(0xffffffffa0a0017d AS REAL), (rt0.c0 IN ()), (((vt0.c1, rt0.c0, rt0.c1))>=((rt0.c2, NULL, rt1.c1)))))) GROUP BY vt0.c0, rt0.c0, rt1.c1;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN ((vt0.c1)<<(vt0.c0)) THEN (- (rt0.c0)) ELSE CASE x''  WHEN rt0.c0 THEN x'' WHEN '-305768513' THEN rt0.c1 WHEN 0.6059973108368655 THEN x'' END END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c2) NOTNULL)  WHEN ((vt0.c1)<<(vt0.c0)) THEN (- (rt0.c0)) ELSE CASE x''  WHEN rt0.c0 THEN x'' WHEN '-305768513' THEN rt0.c1 WHEN 0.6059973108368655 THEN x'' END END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE ((rt0.c2) NOTNULL)  WHEN ((vt0.c1)<<(vt0.c0)) THEN (- (rt0.c0)) ELSE CASE x''  WHEN rt0.c0 THEN x'' WHEN '-305768513' THEN rt0.c1 WHEN 0.6059973108368655 THEN x'' END END) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0, rt1;
SELECT DISTINCT rt0.c2 FROM rt0, rt1 WHERE ((((rt1.c2 IN (rt0.c2, rt1.c3)))>=((((rt0.c3))<((rt0.c2)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, rt1 WHERE ((NOT ((((rt1.c2 IN (rt0.c2, rt1.c3)))>=((((rt0.c3))<((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, rt1 WHERE ((((((rt1.c2 IN (rt0.c2, rt1.c3)))>=((((rt0.c3))<((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, rt1;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1)&(rt0.c1)) THEN (((rt0.c0))<=((rt0.c3))) ELSE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c3;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1)&(rt0.c1)) THEN (((rt0.c0))<=((rt0.c3))) ELSE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END WHERE ((- (rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1)&(rt0.c1)) THEN (((rt0.c0))<=((rt0.c3))) ELSE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END WHERE ((NOT ((- (rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1)&(rt0.c1)) THEN (((rt0.c0))<=((rt0.c3))) ELSE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END WHERE ((((- (rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c3;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1)&(rt0.c1)) THEN (((rt0.c0))<=((rt0.c3))) ELSE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c3;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 HAVING AVG(((0Xffffffff91e42d1e)&(rt1.c2))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 HAVING (NOT (AVG(((0xffffffff91e42d1e)&(rt1.c2))))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 HAVING ((AVG(((0xffffffff91e42d1e)&(rt1.c2)))) ISNULL);
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 HAVING AVG(((0Xffffffff91e42d1e)&(rt1.c2))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 HAVING (NOT (AVG(((0xffffffff91e42d1e)&(rt1.c2))))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 HAVING ((AVG(((0xffffffff91e42d1e)&(rt1.c2)))) ISNULL);
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((-1276068776)OR(NULL)))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((-1276068776)OR(NULL)))OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((-1276068776)OR(NULL)))OR(rt0.c0))) ISNULL));
SELECT rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (((((((((((rt1.c3) ISNULL))AND((rt1.c3 IN ()))))OR(HEX(rt1.c2))))AND(x'3984')))OR(((rt1.c0)OR(rt1.c0))))) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (((((((((((rt1.c3) ISNULL))AND((rt1.c3 IN ()))))OR(HEX(rt1.c2))))AND(x'3984')))OR(((rt1.c0)OR(rt1.c0))))))) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (((((((((((((rt1.c3) ISNULL))AND((rt1.c3 IN ()))))OR(HEX(rt1.c2))))AND(x'3984')))OR(((rt1.c0)OR(rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c3, rt0.c2))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (''))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c3, rt0.c2))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (''))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c3, rt0.c2))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (''))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt1.c4 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt1.c4;
SELECT ALL rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt1.c4 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt1.c4 HAVING ((((MIN(TOTAL(rt1.c4))) BETWEEN (AVG(COUNT(*))) AND (SUM(AVG(rt0.c3))))) NOTNULL) UNION ALL SELECT ALL rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt1.c4 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt1.c4 HAVING (NOT (((((MIN(TOTAL(rt1.c4))) BETWEEN (AVG(COUNT(*))) AND (SUM(AVG(rt0.c3))))) NOTNULL))) UNION ALL SELECT ALL rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt1.c4 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt1.c4 HAVING ((((((MIN(TOTAL(rt1.c4))) BETWEEN (AVG(COUNT(*))) AND (SUM(AVG(rt0.c3))))) NOTNULL)) ISNULL);
SELECT * FROM rt0, vt0, rt1;
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CAST((~ (rt1.c3)) AS INTEGER)) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE ((NOT (CAST((~ (rt1.c3)) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0, vt0, rt1 WHERE (((CAST((~ (rt1.c3)) AS INTEGER)) ISNULL));
SELECT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(LIKELY(rt0.c2) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(LIKELY(rt0.c2) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(LIKELY(rt0.c2) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3 FROM rt1 CROSS JOIN vt0 ON MIN(LIKELIHOOD(DISTINCT rt1.c2, 0.21848569514852423), (rt1.c4 IN (rt1.c4))) GROUP BY rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3 FROM rt1 CROSS JOIN vt0 ON MIN(LIKELIHOOD(DISTINCT rt1.c2, 0.21848569514852423), (rt1.c4 IN (rt1.c4))) WHERE (NULL) GROUP BY rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3 FROM rt1 CROSS JOIN vt0 ON MIN(LIKELIHOOD(DISTINCT rt1.c2, 0.21848569514852423), (rt1.c4 IN (rt1.c4))) WHERE ((NOT (NULL))) GROUP BY rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3 UNION SELECT rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3 FROM rt1 NOT INDEXED CROSS JOIN vt0 ON MIN(LIKELIHOOD(DISTINCT rt1.c2, 0.21848569514852423), (rt1.c4 IN (rt1.c4))) WHERE (((NULL) ISNULL)) GROUP BY rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3;
SELECT rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3 FROM rt1 CROSS JOIN vt0 ON MIN(LIKELIHOOD(DISTINCT rt1.c2, 0.21848569514852423), (rt1.c4 IN (rt1.c4))) GROUP BY rt1.c4, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3;
SELECT ALL vt0.c1, vt0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c1, rt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt0 NOT INDEXED, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (((rt0.c1) BETWEEN (vt0.c1) AND (TOTAL(MIN(TOTAL(MIN(rt0.c0)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT ((NOT (((rt0.c1) BETWEEN (vt0.c1) AND (TOTAL(MIN(TOTAL(MIN(rt0.c0)))))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (((NOT (((rt0.c1) BETWEEN (vt0.c1) AND (TOTAL(MIN(TOTAL(MIN(rt0.c0))))))))) ISNULL);
SELECT rt1.c4, rt1.c3, vt0.c0, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)+(rt1.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (rt1.c1 COLLATE BINARY));
SELECT rt1.c4, rt1.c3, vt0.c0, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)+(rt1.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (rt1.c1 COLLATE BINARY)) WHERE (LIKELIHOOD(((vt0.c1)>>(vt0.c0)), 0.08956334152108669)) UNION ALL SELECT rt1.c4, rt1.c3, vt0.c0, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)+(rt1.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (rt1.c1 COLLATE BINARY)) WHERE ((NOT (LIKELIHOOD(((vt0.c1)>>(vt0.c0)), 0.08956334152108669)))) UNION ALL SELECT rt1.c4, rt1.c3, vt0.c0, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)+(rt1.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (rt1.c1 COLLATE BINARY)) WHERE (((LIKELIHOOD(((vt0.c1)>>(vt0.c0)), 0.08956334152108669)) ISNULL));
SELECT rt1.c4, rt1.c3, vt0.c0, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)+(rt1.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (rt1.c1 COLLATE BINARY));
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((CAST(rt0.c2 AS TEXT))>>(((rt0.c2)<(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((CAST(rt0.c2 AS TEXT))>>(((rt0.c2)<(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((CAST(rt0.c2 AS TEXT))>>(((rt0.c2)<(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2;
SELECT rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE (((CAST(rt0.c3 AS BLOB))IS NOT((NOT (rt0.c0))))) GROUP BY rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((NOT (((CAST(rt0.c3 AS BLOB))IS NOT((NOT (rt0.c0))))))) GROUP BY rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE (((((CAST(rt0.c3 AS BLOB))IS NOT((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2;
SELECT rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2, rt1.c4, rt0.c1, rt0.c2;
SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.971375371537745 THEN ABS(DISTINCT rt0.c2) ELSE ((vt0.c1)<<(rt0.c0)) END GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.971375371537745 THEN ABS(DISTINCT rt0.c2) ELSE ((vt0.c1)<<(rt0.c0)) END GROUP BY vt0.c0 HAVING ((AVG(rt0.c1)) BETWEEN (MIN(MAX(TOTAL(rt0.c1)))) AND ((NOT (TOTAL(rt0.c2))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.971375371537745 THEN ABS(DISTINCT rt0.c2) ELSE ((vt0.c1)<<(rt0.c0)) END GROUP BY vt0.c0 HAVING (NOT (((AVG(rt0.c1)) BETWEEN (MIN(MAX(TOTAL(rt0.c1)))) AND ((NOT (TOTAL(rt0.c2))))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.971375371537745 THEN ABS(DISTINCT rt0.c2) ELSE ((vt0.c1)<<(rt0.c0)) END GROUP BY vt0.c0 HAVING ((((AVG(rt0.c1)) BETWEEN (MIN(MAX(TOTAL(rt0.c1)))) AND ((NOT (TOTAL(rt0.c2)))))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((vt0.c1)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((vt0.c1)))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c2) NOT NULL) AS REAL);
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c2) NOT NULL) AS REAL) WHERE (NULL) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c2) NOT NULL) AS REAL) WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c2) NOT NULL) AS REAL) WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c2) NOT NULL) AS REAL);
SELECT vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2 FROM rt1, vt0, rt0 GROUP BY vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2;
SELECT vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2 FROM rt1 NOT INDEXED, vt0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN '-1793118153' ELSE rt1.c4 END)) AND ((CAST(rt0.c0 AS INTEGER))))) GROUP BY vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2 FROM rt1, vt0, rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN '-1793118153' ELSE rt1.c4 END)) AND ((CAST(rt0.c0 AS INTEGER))))))) GROUP BY vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2 FROM rt1, vt0, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN '-1793118153' ELSE rt1.c4 END)) AND ((CAST(rt0.c0 AS INTEGER))))) ISNULL)) GROUP BY vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2;
SELECT vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2 FROM rt1, vt0, rt0 GROUP BY vt0.c0, rt1.c4, rt0.c1, rt1.c1, rt1.c2, vt0.c1, rt0.c2;
SELECT ALL rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING GROUP_CONCAT(rt1.c2) COLLATE NOCASE UNION ALL SELECT ALL rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING (NOT (GROUP_CONCAT(rt1.c2) COLLATE NOCASE)) UNION ALL SELECT rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(rt1.c2) COLLATE NOCASE) ISNULL);
SELECT ALL rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING GROUP_CONCAT(rt1.c2) COLLATE NOCASE UNION ALL SELECT ALL rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING (NOT (GROUP_CONCAT(rt1.c2) COLLATE NOCASE)) UNION ALL SELECT rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(rt1.c2) COLLATE NOCASE) ISNULL);
SELECT ALL rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('-169602431') UNION ALL SELECT * FROM rt0 WHERE ((NOT ('-169602431'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('-169602431') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (CAST((NOT ('-1836307069')) AS REAL)) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((NOT (CAST((NOT ('-1836307069')) AS REAL)))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (((CAST((NOT ('-1836307069')) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt1.c4 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c4;
SELECT rt0.c2, rt0.c1, vt0.c0, rt1.c4 FROM rt0, vt0, rt1 WHERE (CAST(((0.5576978868047311) IS FALSE) AS REAL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c4 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt1.c4 FROM rt0, vt0, rt1 WHERE ((NOT (CAST(((0.5576978868047311) IS FALSE) AS REAL)))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c4 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt1.c4 FROM rt0, vt0, rt1 WHERE (((CAST(((0.5576978868047311) IS FALSE) AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c4;
SELECT rt0.c2, rt0.c1, vt0.c0, rt1.c4 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c4;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(vt0.c1))>=((- (0.9404169366579835)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((SUM(vt0.c1))>=((- (0.9404169366579835)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((SUM(vt0.c1))>=((- (0.9404169366579835))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(vt0.c1))>=((- (0.9404169366579835)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((SUM(vt0.c1))>=((- (0.9404169366579835)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((SUM(vt0.c1))>=((- (0.9404169366579835))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (CASE WHEN rt0.c3 THEN TRIM(rt1.c4) WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)) THEN (((rt0.c0))>((rt0.c3))) WHEN ((((rt0.c1)AND('-1099437028')))AND(0.3925193153412828)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (CASE WHEN rt0.c3 THEN TRIM(rt1.c4) WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)) THEN (((rt0.c0))>((rt0.c3))) WHEN ((((rt0.c1)AND('-1099437028')))AND(0.3925193153412828)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c3 THEN TRIM(rt1.c4) WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)) THEN (((rt0.c0))>((rt0.c3))) WHEN ((((rt0.c1)AND('-1099437028')))AND(0.3925193153412828)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT rt1.c4, rt0.c0, rt1.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt0, rt1;
SELECT DISTINCT rt1.c4, rt0.c0, rt1.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((- (''))) UNION SELECT DISTINCT rt1.c4, rt0.c0, rt1.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((NOT ((- (''))))) UNION SELECT DISTINCT rt1.c4, rt0.c0, rt1.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((((- (''))) ISNULL));
SELECT DISTINCT rt1.c4, rt0.c0, rt1.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt0, rt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3;
SELECT ALL rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 HAVING COUNT(rt1.c4) COLLATE NOCASE UNION ALL SELECT ALL rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 HAVING (NOT (COUNT(rt1.c4) COLLATE NOCASE)) UNION ALL SELECT rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 HAVING ((COUNT(rt1.c4) COLLATE NOCASE) ISNULL);
SELECT rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3;
SELECT ALL rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 HAVING COUNT(rt1.c4) COLLATE NOCASE UNION ALL SELECT ALL rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 HAVING (NOT (COUNT(rt1.c4) COLLATE NOCASE)) UNION ALL SELECT rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 HAVING ((COUNT(rt1.c4) COLLATE NOCASE) ISNULL);
SELECT rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt1.c3;
SELECT * FROM vt0, rt0, rt1;
SELECT * FROM vt0, rt0, rt1 WHERE (((CASE rt0.c1  WHEN vt0.c1 THEN rt1.c3 END)-(((x'') ISNULL)))) UNION ALL SELECT * FROM vt0, rt0, rt1 WHERE ((NOT (((CASE rt0.c1  WHEN vt0.c1 THEN rt1.c3 END)-(((x'') ISNULL)))))) UNION ALL SELECT * FROM vt0, rt0, rt1 WHERE (((((CASE rt0.c1  WHEN vt0.c1 THEN rt1.c3 END)-(((x'') ISNULL)))) ISNULL));
SELECT * FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt1.c0, rt0.c3 FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt1.c0, rt0.c3 FROM vt0, rt0, rt1 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN (- (vt0.c0)) END) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt1.c0, rt0.c3 FROM vt0, rt0, rt1 WHERE ((NOT (CASE WHEN ((rt0.c3) IS TRUE) THEN (- (vt0.c0)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt1.c0, rt0.c3 FROM vt0, rt0, rt1 WHERE (((CASE WHEN ((rt0.c3) IS TRUE) THEN (- (vt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, vt0.c0, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt1.c0, rt0.c3 FROM vt0, rt0, rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4;
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 WHERE ((((((1013269863)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))) BETWEEN (TRIM(rt1.c0)) AND (TIME(rt1.c1, rt1.c1, rt1.c1)))) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT ((((((1013269863)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))) BETWEEN (TRIM(rt1.c0)) AND (TIME(rt1.c1, rt1.c1, rt1.c1)))))) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 WHERE ((((((((1013269863)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))) BETWEEN (TRIM(rt1.c0)) AND (TIME(rt1.c1, rt1.c1, rt1.c1)))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4;
SELECT vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c3;
SELECT ALL vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c3 HAVING ((((((rt0.c3)OR(rt0.c1)))AND(COUNT(*))))<<(((((((((rt0.c2)AND(NULL)))OR(GROUP_CONCAT(rt0.c0))))OR(rt0.c2)))AND(COUNT(MIN(SUM(890852561))))))) UNION ALL SELECT ALL vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c3 HAVING (NOT (((((((rt0.c3)OR(rt0.c1)))AND(COUNT(*))))<<(((((((((rt0.c2)AND(NULL)))OR(GROUP_CONCAT(rt0.c0))))OR(rt0.c2)))AND(COUNT(MIN(SUM(890852561))))))))) UNION ALL SELECT vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c3 HAVING ((((((((rt0.c3)OR(rt0.c1)))AND(COUNT(*))))<<(((((((((rt0.c2)AND(NULL)))OR(GROUP_CONCAT(rt0.c0))))OR(rt0.c2)))AND(COUNT(MIN(SUM(890852561)))))))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c0) NOTNULL))OR(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY TIME(ROUND(0x740f1a91, rt1.c4), rt0.c1 COLLATE RTRIM, CAST(rt1.c3 AS INTEGER)) DESC;
SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((((((rt1.c0) NOTNULL))OR(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))))) ORDER BY TIME(ROUND(0x740f1a91, rt1.c4), rt0.c1 COLLATE RTRIM, CAST(rt1.c3 AS INTEGER)) DESC;
SELECT ALL * FROM rt1, rt0 WHERE (((((((((rt1.c0) NOTNULL))OR(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ISNULL)) ORDER BY TIME(ROUND(0X740f1a91, rt1.c4), rt0.c1 COLLATE RTRIM, CAST(rt1.c3 AS INTEGER)) DESC;
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((+ (CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END))) UNION SELECT DISTINCT rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((+ (CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((+ (CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt0, rt1, vt0 GROUP BY rt0.c2, rt1.c4, rt1.c1, rt1.c3;
SELECT rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt0, rt1, vt0 WHERE (x'') GROUP BY rt0.c2, rt1.c4, rt1.c1, rt1.c3 UNION SELECT ALL rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt0, rt1, vt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt1.c4, rt1.c1, rt1.c3 UNION SELECT ALL rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt0, rt1, vt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt1.c4, rt1.c1, rt1.c3;
SELECT rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt0, rt1, vt0 GROUP BY rt0.c2, rt1.c4, rt1.c1, rt1.c3;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(TOTAL(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(TOTAL(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(TOTAL(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN x'' THEN 0.8448477033240623 ELSE (rt0.c1 IN ()) END) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN x'' THEN 0.8448477033240623 ELSE (rt0.c1 IN ()) END))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN x'' THEN 0.8448477033240623 ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE ((((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<(((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c2, 0.761823949920878)) AND ((rt1.c3, rt1.c0, rt1.c4))))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT ((((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<(((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c2, 0.761823949920878)) AND ((rt1.c3, rt1.c0, rt1.c4))))))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((((((((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<(((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c2, 0.761823949920878)) AND ((rt1.c3, rt1.c0, rt1.c4))))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4;
SELECT ALL rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c3 END)=(((rt1.c4) BETWEEN (vt0.c0) AND (rt0.c2))))) GROUP BY rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4 UNION SELECT rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c3 END)=(((rt1.c4) BETWEEN (vt0.c0) AND (rt0.c2))))))) GROUP BY rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4 UNION SELECT rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c3 END)=(((rt1.c4) BETWEEN (vt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4;
SELECT ALL rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c3, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt1.c4;
SELECT rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1;
SELECT ALL rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING rt1.c1 UNION ALL SELECT ALL rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1;
SELECT ALL rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING rt1.c1 UNION ALL SELECT ALL rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c4, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1;
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON CAST((('')LIKE(rt0.c3)) AS TEXT) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ());
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON CAST((('')LIKE(rt0.c3)) AS TEXT) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (ABS(((rt0.c0)&(rt0.c3)))) UNION ALL SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON CAST((('')LIKE(rt0.c3)) AS TEXT) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE ((NOT (ABS(((rt0.c0)&(rt0.c3)))))) UNION ALL SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON CAST((('')LIKE(rt0.c3)) AS TEXT) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (((ABS(((rt0.c0)&(rt0.c3)))) ISNULL));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON CAST((('')LIKE(rt0.c3)) AS TEXT) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ());
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (0.34628634631086697) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (0.34628634631086697))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((0.34628634631086697) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1 GROUP BY rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1 WHERE (UPPER((((rt1.c2, vt0.c0, 0Xffffffff909867cd, vt0.c1, rt1.c2))>=((vt0.c0, vt0.c1, rt1.c0, rt1.c2, vt0.c1))))) GROUP BY rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3 UNION SELECT rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1 WHERE ((NOT (UPPER((((rt1.c2, vt0.c0, 0xffffffff909867cd, vt0.c1, rt1.c2))>=((vt0.c0, vt0.c1, rt1.c0, rt1.c2, vt0.c1))))))) GROUP BY rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3 UNION SELECT rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1 WHERE (((UPPER((((rt1.c2, vt0.c0, 0Xffffffff909867cd, vt0.c1, rt1.c2))>=((vt0.c0, vt0.c1, rt1.c0, rt1.c2, vt0.c1))))) ISNULL)) GROUP BY rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1 GROUP BY rt1.c4, rt1.c0, vt0.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c3 HAVING SUM(TOTAL(rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c3 HAVING (NOT (SUM(TOTAL(rt1.c0)))) UNION ALL SELECT ALL rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c3 HAVING ((SUM(TOTAL(rt1.c0))) ISNULL);
SELECT MAX(((rt1.c0 IN ()) IN (json_array_length(rt1.c1)))) FROM rt1 ORDER BY (- (0.7125376770350212));
SELECT * FROM rt1, vt0, rt0;
SELECT * FROM rt1, vt0, rt0 WHERE (((TYPEOF(rt0.c0)) IS TRUE)) UNION ALL SELECT ALL * FROM rt1, vt0, rt0 WHERE ((NOT (((TYPEOF(rt0.c0)) IS TRUE)))) UNION ALL SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((TYPEOF(rt0.c0)) IS TRUE)) ISNULL));
SELECT * FROM rt1, vt0, rt0;
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c3) ISNULL) COLLATE BINARY;
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c3) ISNULL) COLLATE BINARY WHERE (CASE ((vt0.c0) NOT BETWEEN (0.7746020470669955) AND (rt1.c2))  WHEN LIKELIHOOD(rt1.c3, 0.8978975100353486) THEN (((rt1.c3, rt1.c2, rt1.c0))>=((rt1.c0, rt1.c2, rt1.c4))) ELSE rt1.c3 END) UNION SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, vt0.c0 FROM rt1 NOT INDEXED FULL OUTER JOIN vt0 ON ((rt1.c3) ISNULL) COLLATE BINARY WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (0.7746020470669955) AND (rt1.c2))  WHEN LIKELIHOOD(rt1.c3, 0.8978975100353486) THEN (((rt1.c3, rt1.c2, rt1.c0))>=((rt1.c0, rt1.c2, rt1.c4))) ELSE rt1.c3 END))) UNION SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c3) ISNULL) COLLATE BINARY WHERE (((CASE ((vt0.c0) NOT BETWEEN (0.7746020470669955) AND (rt1.c2))  WHEN LIKELIHOOD(rt1.c3, 0.8978975100353486) THEN (((rt1.c3, rt1.c2, rt1.c0))>=((rt1.c0, rt1.c2, rt1.c4))) ELSE rt1.c3 END) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c3) ISNULL) COLLATE BINARY;
SELECT rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2;
SELECT rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2 FROM rt0, rt1 WHERE (rt1.c0) GROUP BY rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2 UNION SELECT rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2 FROM rt0, rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2 UNION SELECT rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2 FROM rt0, rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2;
SELECT rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c2;
SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2;
SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2 HAVING MIN(((rt1.c1)<=('323567357'))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2 HAVING (NOT (MIN(((rt1.c1)<=('323567357'))))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2 HAVING ((MIN(((rt1.c1)<=('323567357')))) ISNULL);
SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2;
SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2 HAVING MIN(((rt1.c1)<=('323567357'))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2 HAVING (NOT (MIN(((rt1.c1)<=('323567357'))))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2 HAVING ((MIN(((rt1.c1)<=('323567357')))) ISNULL);
SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt0.c2;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c3 FULL OUTER JOIN vt0 ON (((rt0.c0)OR(rt1.c2)) IN ());
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c3 FULL OUTER JOIN vt0 ON (((rt0.c0)OR(rt1.c2)) IN ()) WHERE (rt1.c2) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c3 FULL OUTER JOIN vt0 ON (((rt0.c0)OR(rt1.c2)) IN ()) WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c3 FULL OUTER JOIN vt0 ON (((rt0.c0)OR(rt1.c2)) IN ()) WHERE (((rt1.c2) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c3 FULL OUTER JOIN vt0 ON (((rt0.c0)OR(rt1.c2)) IN ());
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS TEXT)) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT ALL rt1.c4, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c0;
SELECT rt1.c4, rt1.c3, rt1.c0 FROM rt1 WHERE (((((LENGTH(rt1.c1))AND(((rt1.c4)<=(rt1.c1)))))AND(((rt1.c3) ISNULL)))) GROUP BY rt1.c4, rt1.c3, rt1.c0 UNION SELECT rt1.c4, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (((((LENGTH(rt1.c1))AND(((rt1.c4)<=(rt1.c1)))))AND(((rt1.c3) ISNULL)))))) GROUP BY rt1.c4, rt1.c3, rt1.c0 UNION SELECT rt1.c4, rt1.c3, rt1.c0 FROM rt1 WHERE (((((((LENGTH(rt1.c1))AND(((rt1.c4)<=(rt1.c1)))))AND(((rt1.c3) ISNULL)))) ISNULL)) GROUP BY rt1.c4, rt1.c3, rt1.c0;
SELECT ALL rt1.c4, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CASE WHEN COUNT(*) THEN ((MIN(COUNT(*)))OR(AVG(SUM(MAX(SUM(vt0.c0)))))) END UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CASE WHEN COUNT(*) THEN ((MIN(COUNT(*)))OR(AVG(SUM(MAX(SUM(vt0.c0)))))) END)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CASE WHEN COUNT(*) THEN ((MIN(COUNT(*)))OR(AVG(SUM(MAX(SUM(vt0.c0)))))) END) ISNULL);
SELECT ALL rt1.c4 FROM rt0, rt1;
SELECT rt1.c4 FROM rt0, rt1 WHERE (rt0.c3) UNION ALL SELECT ALL rt1.c4 FROM rt0, rt1 WHERE ((NOT (rt0.c3))) UNION ALL SELECT rt1.c4 FROM rt0, rt1 WHERE (((rt0.c3) ISNULL));
SELECT ALL rt1.c4 FROM rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NULL IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NULL IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NULL IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((- (rt0.c3 COLLATE BINARY))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((- (rt0.c3 COLLATE BINARY))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((- (rt0.c3 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c1 HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (x'36d4a567') AND (((((COUNT(*))OR(vt0.c1)))AND(COUNT(*))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (x'36d4a567') AND (((((COUNT(*))OR(vt0.c1)))AND(COUNT(*))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (x'36d4a567') AND (((((COUNT(*))OR(vt0.c1)))AND(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c1 HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (x'36d4a567') AND (((((COUNT(*))OR(vt0.c1)))AND(COUNT(*))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (x'36d4a567') AND (((((COUNT(*))OR(vt0.c1)))AND(COUNT(*))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (x'36d4a567') AND (((((COUNT(*))OR(vt0.c1)))AND(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, rt1.c4 FROM vt0, rt1;
SELECT vt0.c1, rt1.c4 FROM vt0, rt1 WHERE ((((('CⴞS୰X')GLOB(vt0.c1))) IS TRUE)) UNION ALL SELECT ALL vt0.c1, rt1.c4 FROM vt0, rt1 WHERE ((NOT ((((('CⴞS୰X')GLOB(vt0.c1))) IS TRUE)))) UNION ALL SELECT vt0.c1, rt1.c4 FROM vt0, rt1 WHERE ((((((('CⴞS୰X')GLOB(vt0.c1))) IS TRUE)) ISNULL));
SELECT vt0.c1, rt1.c4 FROM vt0, rt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (LTRIM(((vt0.c0) IS TRUE), ((vt0.c1) ISNULL))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (LTRIM(((vt0.c0) IS TRUE), ((vt0.c1) ISNULL))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((LTRIM(((vt0.c0) IS TRUE), ((vt0.c1) ISNULL))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)+(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)+(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)+(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2;
SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING ((TRIM(rt1.c1))IS(((COUNT(*))<<(rt1.c1)))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING (NOT (((TRIM(rt1.c1))IS(((COUNT(*))<<(rt1.c1)))))) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING ((((TRIM(rt1.c1))IS(((COUNT(*))<<(rt1.c1))))) ISNULL);
SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2;
SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING ((TRIM(rt1.c1))IS(((COUNT(*))<<(rt1.c1)))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING (NOT (((TRIM(rt1.c1))IS(((COUNT(*))<<(rt1.c1)))))) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING ((((TRIM(rt1.c1))IS(((COUNT(*))<<(rt1.c1))))) ISNULL);
SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2;
SELECT ALL TOTAL(((rt1.c2) NOT BETWEEN ((((rt1.c0))==((rt1.c3)))) AND (CAST(rt1.c2 AS INTEGER)))) FROM rt1;
SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c0 FROM rt1, rt0;
SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE ((((~ (rt1.c0)))*((((rt0.c1, rt1.c2, rt0.c2))<>((rt1.c2, rt0.c0, NULL)))))) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE ((NOT ((((~ (rt1.c0)))*((((rt0.c1, rt1.c2, rt0.c2))<>((rt1.c2, rt0.c0, NULL)))))))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE ((((((~ (rt1.c0)))*((((rt0.c1, rt1.c2, rt0.c2))<>((rt1.c2, rt0.c0, NULL)))))) ISNULL));
SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c0 FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)||(rt0.c3)) IN (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 661017841 THEN rt0.c2 ELSE rt0.c1 END, CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)||(rt0.c3)) IN (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 661017841 THEN rt0.c2 ELSE rt0.c1 END, CAST(rt0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)||(rt0.c3)) IN (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 661017841 THEN rt0.c2 ELSE rt0.c1 END, CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((((((((rt1.c2)AND(rt1.c1)))OR(NULL)))OR(rt1.c1)))OR(rt0.c1)))) RIGHT OUTER JOIN rt1 ON (((((rt0.c0))<>((vt0.c0))))AND(rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c0, rt1.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING TOTAL(COUNT(rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL(COUNT(rt0.c2))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (0.914906010553995) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (0.914906010553995))) UNION ALL SELECT * FROM vt0 WHERE (((0.914906010553995) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (CAST(vt0.c1 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN (CAST(vt0.c1 AS TEXT)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY IN (CAST(vt0.c1 AS TEXT)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 NOT INDEXED GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3;
SELECT ALL vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3 HAVING (- (((GROUP_CONCAT(rt1.c4)) NOTNULL))) UNION ALL SELECT ALL vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3 HAVING (NOT ((- (((GROUP_CONCAT(rt1.c4)) NOTNULL))))) UNION ALL SELECT vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3 HAVING (((- (((GROUP_CONCAT(rt1.c4)) NOTNULL)))) ISNULL);
SELECT vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 NOT INDEXED GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3;
SELECT ALL vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3 HAVING (- (((GROUP_CONCAT(rt1.c4)) NOTNULL))) UNION ALL SELECT ALL vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3 HAVING (NOT ((- (((GROUP_CONCAT(rt1.c4)) NOTNULL))))) UNION ALL SELECT vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3 HAVING (((- (((GROUP_CONCAT(rt1.c4)) NOTNULL)))) ISNULL);
SELECT vt0.c0, rt1.c4, rt1.c1, rt0.c3 FROM vt0, rt1, rt0 NOT INDEXED GROUP BY vt0.c0, rt1.c4, rt1.c1, rt0.c3;
SELECT ALL vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0;
SELECT vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE (CAST(CASE WHEN vt0.c1 THEN rt0.c2 END AS NUMERIC)) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT (CAST(CASE WHEN vt0.c1 THEN rt0.c2 END AS NUMERIC)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((CAST(CASE WHEN vt0.c1 THEN rt0.c2 END AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c4, rt1.c1, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c4, rt1.c1, rt0.c3;
SELECT rt1.c4, rt1.c1, rt0.c3 FROM rt1, rt0 WHERE ((~ (rt1.c2))) GROUP BY rt1.c4, rt1.c1, rt0.c3 UNION SELECT rt1.c4, rt1.c1, rt0.c3 FROM rt1, rt0 WHERE ((NOT ((~ (rt1.c2))))) GROUP BY rt1.c4, rt1.c1, rt0.c3 UNION SELECT rt1.c4, rt1.c1, rt0.c3 FROM rt1, rt0 WHERE ((((~ (rt1.c2))) ISNULL)) GROUP BY rt1.c4, rt1.c1, rt0.c3;
SELECT ALL rt1.c4, rt1.c1, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c4, rt1.c1, rt0.c3;
SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c4 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c4;
SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c4 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c4 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c4 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c4 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c4 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c4 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c3) ISNULL))GLOB(CASE vt0.c0  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN vt0.c0 WHEN '323567357' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c3))));
SELECT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c3) ISNULL))GLOB(CASE vt0.c0  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN vt0.c0 WHEN '323567357' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c3)))) WHERE (((((rt0.c0)>>(rt1.c4))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c4 END) AND (((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c1)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c3) ISNULL))GLOB(CASE vt0.c0  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN vt0.c0 WHEN '323567357' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c3)))) WHERE ((NOT (((((rt0.c0)>>(rt1.c4))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c4 END) AND (((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c3) ISNULL))GLOB(CASE vt0.c0  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN vt0.c0 WHEN '323567357' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c3)))) WHERE (((((((rt0.c0)>>(rt1.c4))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c4 END) AND (((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c3) ISNULL))GLOB(CASE vt0.c0  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c1 THEN vt0.c0 WHEN '323567357' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c3))));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((NOT (rt0.c3))) BETWEEN ((((rt0.c1))>=((rt0.c0)))) AND ((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((x'')))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((NOT (rt0.c3))) BETWEEN ((((rt0.c1))>=((rt0.c0)))) AND ((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((x'')))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((NOT (rt0.c3))) BETWEEN ((((rt0.c1))>=((rt0.c0)))) AND ((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((x'')))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) GROUP BY rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0;
SELECT ALL rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) WHERE (CASE WHEN CASE rt1.c4  WHEN vt0.c1 THEN rt1.c4 WHEN rt1.c3 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c2 END THEN CAST(rt1.c1 AS BLOB) END) GROUP BY rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0 UNION SELECT rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) WHERE ((NOT (CASE WHEN CASE rt1.c4  WHEN vt0.c1 THEN rt1.c4 WHEN rt1.c3 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c2 END THEN CAST(rt1.c1 AS BLOB) END))) GROUP BY rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0 UNION SELECT rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) WHERE (((CASE WHEN CASE rt1.c4  WHEN vt0.c1 THEN rt1.c4 WHEN rt1.c3 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c2 END THEN CAST(rt1.c1 AS BLOB) END) ISNULL)) GROUP BY rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0;
SELECT rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) GROUP BY rt1.c4, rt1.c0, rt1.c3, vt0.c1, rt1.c2, vt0.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4;
SELECT ALL rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4 HAVING ((rt1.c3)==(MAX(COUNT(rt1.c3)))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4 HAVING (NOT (((rt1.c3)=(MAX(COUNT(rt1.c3)))))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4 HAVING ((((rt1.c3)==(MAX(COUNT(rt1.c3))))) ISNULL);
SELECT vt0.c1, rt1.c4 FROM rt0, vt0 INNER JOIN rt1 ON rt0.c1;
SELECT vt0.c1, rt1.c4 FROM rt0, vt0 INNER JOIN rt1 ON rt0.c1 WHERE (((((((509683293)>(rt0.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))))AND((((rt0.c2, rt1.c4, rt1.c3))>=((rt0.c2, rt0.c3, rt1.c1)))))) UNION ALL SELECT ALL vt0.c1, rt1.c4 FROM rt0, vt0 INNER JOIN rt1 ON rt0.c1 WHERE ((NOT (((((((509683293)>(rt0.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))))AND((((rt0.c2, rt1.c4, rt1.c3))>=((rt0.c2, rt0.c3, rt1.c1)))))))) UNION ALL SELECT vt0.c1, rt1.c4 FROM rt0, vt0 INNER JOIN rt1 ON rt0.c1 WHERE (((((((((509683293)>(rt0.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))))AND((((rt0.c2, rt1.c4, rt1.c3))>=((rt0.c2, rt0.c3, rt1.c1)))))) ISNULL));
SELECT vt0.c1, rt1.c4 FROM rt0, vt0 INNER JOIN rt1 ON rt0.c1;
SELECT DISTINCT vt0.c1, rt1.c2, rt1.c4, rt1.c1 FROM rt0, vt0, rt1;
SELECT DISTINCT vt0.c1, rt1.c2, rt1.c4, rt1.c1 FROM rt0, vt0, rt1 WHERE ((- (CASE vt0.c1  WHEN rt0.c3 THEN rt1.c4 ELSE rt0.c3 END))) UNION SELECT DISTINCT vt0.c1, rt1.c2, rt1.c4, rt1.c1 FROM rt0, vt0, rt1 WHERE ((NOT ((- (CASE vt0.c1  WHEN rt0.c3 THEN rt1.c4 ELSE rt0.c3 END))))) UNION SELECT DISTINCT vt0.c1, rt1.c2, rt1.c4, rt1.c1 FROM rt0, vt0, rt1 WHERE ((((- (CASE vt0.c1  WHEN rt0.c3 THEN rt1.c4 ELSE rt0.c3 END))) ISNULL));
SELECT DISTINCT vt0.c1, rt1.c2, rt1.c4, rt1.c1 FROM rt0, vt0, rt1;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE (((rt0.c2)GLOB((rt0.c1 IN ())))) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)GLOB((rt0.c1 IN ())))))) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE (((((rt0.c2)GLOB((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt1.c2, rt0.c2, vt0.c1, vt0.c0, rt0.c0, rt1.c4, rt1.c1, rt1.c0, rt0.c1, rt0.c3, rt1.c3 FROM vt0 CROSS JOIN rt1 ON vt0.c0 CROSS JOIN rt0 ON CAST((~ (rt0.c0)) AS INTEGER) GROUP BY rt1.c2, rt0.c2, vt0.c1, vt0.c0, rt0.c0, rt1.c4, rt1.c1, rt1.c0, rt0.c1, rt0.c3, rt1.c3;
SELECT ALL rt1.c2, rt0.c2, vt0.c1, vt0.c0, rt0.c0, rt1.c4, rt1.c1, rt1.c0, rt0.c1, rt0.c3, rt1.c3 FROM vt0 CROSS JOIN rt1 ON vt0.c0 CROSS JOIN rt0 ON CAST((~ (rt0.c0)) AS INTEGER) GROUP BY rt1.c2, rt0.c2, vt0.c1, vt0.c0, rt0.c0, rt1.c4, rt1.c1, rt1.c0, rt0.c1, rt0.c3, rt1.c3 HAVING AVG(((AVG(rt0.c2)) BETWEEN (rt0.c2) AND (AVG(AVG(rt1.c4))))) UNION ALL SELECT rt1.c2, rt0.c2, vt0.c1, vt0.c0, rt0.c0, rt1.c4, rt1.c1, rt1.c0, rt0.c1, rt0.c3, rt1.c3 FROM vt0 CROSS JOIN rt1 ON vt0.c0 CROSS JOIN rt0 ON CAST((~ (rt0.c0)) AS INTEGER) GROUP BY rt1.c2, rt0.c2, vt0.c1, vt0.c0, rt0.c0, rt1.c4, rt1.c1, rt1.c0, rt0.c1, rt0.c3, rt1.c3 HAVING (NOT (AVG(((AVG(rt0.c2)) BETWEEN (rt0.c2) AND (AVG(AVG(rt1.c4))))))) UNION ALL SELECT ALL rt1.c2, rt0.c2, vt0.c1, vt0.c0, rt0.c0, rt1.c4, rt1.c1, rt1.c0, rt0.c1, rt0.c3, rt1.c3 FROM vt0 CROSS JOIN rt1 ON vt0.c0 CROSS JOIN rt0 ON CAST((~ (rt0.c0)) AS INTEGER) GROUP BY rt1.c2, rt0.c2, vt0.c1, vt0.c0, rt0.c0, rt1.c4, rt1.c1, rt1.c0, rt0.c1, rt0.c3, rt1.c3 HAVING ((AVG(((AVG(rt0.c2)) BETWEEN (rt0.c2) AND (AVG(AVG(rt1.c4)))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT CAST(x'' AS INTEGER))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (TYPEOF(DISTINCT CAST(x'' AS INTEGER))))) UNION ALL SELECT * FROM rt1 WHERE (((TYPEOF(DISTINCT CAST(x'' AS INTEGER))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, vt0.c0, rt0.c2, rt1.c4, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1, rt0, vt0;
SELECT DISTINCT rt1.c0, vt0.c0, rt0.c2, rt1.c4, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1, rt0, vt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt0.c2, rt1.c4, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1, rt0, vt0 NOT INDEXED WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt0.c2, rt1.c4, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1, rt0, vt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, rt0.c2, rt1.c4, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1, rt0, vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (x'd34f') GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (x'd34f'))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((x'd34f') ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt1.c0, rt1.c1, vt0.c0, rt1.c4 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c3)+(rt1.c3)))%((((vt0.c1, rt1.c3, vt0.c0))==((rt1.c4, vt0.c0, rt1.c4))))) GROUP BY vt0.c1, rt1.c0, rt1.c1, vt0.c0, rt1.c4;
SELECT ALL vt0.c1, rt1.c0, rt1.c1, vt0.c0, rt1.c4 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c3)+(rt1.c3)))%((((vt0.c1, rt1.c3, vt0.c0))==((rt1.c4, vt0.c0, rt1.c4))))) GROUP BY vt0.c1, rt1.c0, rt1.c1, vt0.c0, rt1.c4 HAVING SUM(MIN(COUNT(MIN(COUNT(rt1.c2))))) UNION ALL SELECT vt0.c1, rt1.c0, rt1.c1, vt0.c0, rt1.c4 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c3)+(rt1.c3)))%((((vt0.c1, rt1.c3, vt0.c0))==((rt1.c4, vt0.c0, rt1.c4))))) GROUP BY vt0.c1, rt1.c0, rt1.c1, vt0.c0, rt1.c4 HAVING (NOT (SUM(MIN(COUNT(MIN(COUNT(rt1.c2))))))) UNION ALL SELECT vt0.c1, rt1.c0, rt1.c1, vt0.c0, rt1.c4 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c3)+(rt1.c3)))%((((vt0.c1, rt1.c3, vt0.c0))=((rt1.c4, vt0.c0, rt1.c4))))) GROUP BY vt0.c1, rt1.c0, rt1.c1, vt0.c0, rt1.c4 HAVING ((SUM(MIN(COUNT(MIN(COUNT(rt1.c2)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))LIKE(((vt0.c1) NOT BETWEEN (6.43952098E8) AND (vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)<=(vt0.c0)))LIKE(((vt0.c1) NOT BETWEEN (6.43952098E8) AND (vt0.c1))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))LIKE(((vt0.c1) NOT BETWEEN (6.43952098E8) AND (vt0.c1))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((LIKE(vt0.c0, vt0.c0, '2') IN ())) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((LIKE(vt0.c0, vt0.c0, '2') IN ())))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((LIKE(vt0.c0, vt0.c0, '2') IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c0 HAVING TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt1.c1 FROM rt0, rt1, vt0;
SELECT rt0.c0, rt1.c1 FROM rt0, rt1, vt0 WHERE (CAST((rt0.c3 IN ()) AS REAL)) UNION ALL SELECT rt0.c0, rt1.c1 FROM rt0, rt1, vt0 WHERE ((NOT (CAST((rt0.c3 IN ()) AS REAL)))) UNION ALL SELECT ALL rt0.c0, rt1.c1 FROM rt0, rt1, vt0 WHERE (((CAST((rt0.c3 IN ()) AS REAL)) ISNULL));
SELECT ALL rt0.c0, rt1.c1 FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((rt1.c4 COLLATE BINARY IN ((((rt1.c2))==((rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((rt1.c4 COLLATE BINARY IN ((((rt1.c2))==((rt1.c1)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c4 COLLATE BINARY IN ((((rt1.c2))=((rt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((0.41298256408522094 IN (vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((0.41298256408522094 IN (vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((0.41298256408522094 IN (vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2 HAVING (((MIN(MAX(rt0.c2)), MIN(MIN(SUM(GROUP_CONCAT(rt0.c2)))), rt0.c1)) NOT BETWEEN ((((((COUNT(rt0.c3))OR(6.43952098E8)))OR(rt0.c0)), (- (TOTAL(TOTAL(rt0.c3)))), NULL)) AND ((SUM(rt0.c1), COUNT(MIN(COUNT(rt0.c0))), ((GROUP_CONCAT(MAX(rt0.c3)))==(COUNT(*)))))) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2 HAVING (NOT ((((MIN(MAX(rt0.c2)), MIN(MIN(SUM(GROUP_CONCAT(rt0.c2)))), rt0.c1)) NOT BETWEEN ((((((COUNT(rt0.c3))OR(6.43952098E8)))OR(rt0.c0)), (- (TOTAL(TOTAL(rt0.c3)))), NULL)) AND ((SUM(rt0.c1), COUNT(MIN(COUNT(rt0.c0))), ((GROUP_CONCAT(MAX(rt0.c3)))=(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2 HAVING (((((MIN(MAX(rt0.c2)), MIN(MIN(SUM(GROUP_CONCAT(rt0.c2)))), rt0.c1)) NOT BETWEEN ((((((COUNT(rt0.c3))OR(6.43952098E8)))OR(rt0.c0)), (- (TOTAL(TOTAL(rt0.c3)))), NULL)) AND ((SUM(rt0.c1), COUNT(MIN(COUNT(rt0.c0))), ((GROUP_CONCAT(MAX(rt0.c3)))=(COUNT(*))))))) ISNULL);
SELECT rt0.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c3, rt1.c4, rt1.c3 FROM rt0, rt1;
SELECT rt0.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c3, rt1.c4, rt1.c3 FROM rt0, rt1 WHERE (((((rt0.c3) ISNULL)) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c3, rt1.c4, rt1.c3 FROM rt0, rt1 WHERE ((NOT (((((rt0.c3) ISNULL)) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c3, rt1.c4, rt1.c3 FROM rt0, rt1 WHERE (((((((rt0.c3) ISNULL)) NOT NULL)) ISNULL));
SELECT rt0.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c3, rt1.c4, rt1.c3 FROM rt0, rt1;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt1.c2) ISNULL))));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt1.c2) ISNULL)))) WHERE (((((x'a14e')OR(rt0.c0)))OR(x''))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt1.c2) ISNULL)))) WHERE ((NOT (((((x'a14e')OR(rt0.c0)))OR(x''))))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt1.c2) ISNULL)))) WHERE (((((((x'a14e')OR(rt0.c0)))OR(x''))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt1.c2) ISNULL))));
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, rt1 WHERE ((~ (rt0.c3 COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0, rt1 WHERE ((NOT ((~ (rt0.c3 COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0, rt1 WHERE ((((~ (rt0.c3 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2;
SELECT ALL rt1.c0, rt1.c4, rt0.c0, rt1.c1, rt0.c2, rt0.c1, rt1.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c4, rt0.c0, rt1.c1, rt0.c2, rt0.c1, rt1.c3, rt1.c2;
SELECT rt1.c0, rt1.c4, rt0.c0, rt1.c1, rt0.c2, rt0.c1, rt1.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c4, rt0.c0, rt1.c1, rt0.c2, rt0.c1, rt1.c3, rt1.c2 HAVING (((TOTAL(COUNT(*)), COUNT(*), rt1.c1, GROUP_CONCAT(rt0.c0), rt1.c0)) NOT BETWEEN (((('ix|W')<(MAX(COUNT(rt1.c3)))), NULL, CAST(MIN(rt0.c2) AS TEXT), (((rt0.c3))>((rt1.c1))), ((SUM(AVG(COUNT(*)))) IS FALSE))) AND ((TOTAL(TOTAL(rt0.c2)), MIN(MIN(rt1.c4)), COUNT(COUNT(rt0.c0)), COUNT(MIN('')), 0.8524634881153602))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt0.c0, rt1.c1, rt0.c2, rt0.c1, rt1.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c4, rt0.c0, rt1.c1, rt0.c2, rt0.c1, rt1.c3, rt1.c2 HAVING (NOT ((((TOTAL(COUNT(*)), COUNT(*), rt1.c1, GROUP_CONCAT(rt0.c0), rt1.c0)) NOT BETWEEN (((('ix|W')<(MAX(COUNT(rt1.c3)))), NULL, CAST(MIN(rt0.c2) AS TEXT), (((rt0.c3))>((rt1.c1))), ((SUM(AVG(COUNT(*)))) IS FALSE))) AND ((TOTAL(TOTAL(rt0.c2)), MIN(MIN(rt1.c4)), COUNT(COUNT(rt0.c0)), COUNT(MIN('')), 0.8524634881153602))))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt0.c0, rt1.c1, rt0.c2, rt0.c1, rt1.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c4, rt0.c0, rt1.c1, rt0.c2, rt0.c1, rt1.c3, rt1.c2 HAVING (((((TOTAL(COUNT(*)), COUNT(*), rt1.c1, GROUP_CONCAT(rt0.c0), rt1.c0)) NOT BETWEEN (((('ix|W')<(MAX(COUNT(rt1.c3)))), NULL, CAST(MIN(rt0.c2) AS TEXT), (((rt0.c3))>((rt1.c1))), ((SUM(AVG(COUNT(*)))) IS FALSE))) AND ((TOTAL(TOTAL(rt0.c2)), MIN(MIN(rt1.c4)), COUNT(COUNT(rt0.c0)), COUNT(MIN('')), 0.8524634881153602)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((rt1.c1)AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((rt1.c1)AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 END))))) UNION ALL SELECT * FROM rt1 WHERE (((((rt1.c1)AND(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c3, rt1.c0, rt0.c0, vt0.c1, rt1.c1 FROM rt1, rt0, vt0;
SELECT DISTINCT rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c3, rt1.c0, rt0.c0, vt0.c1, rt1.c1 FROM rt1, rt0, vt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c3, rt1.c0, rt0.c0, vt0.c1, rt1.c1 FROM rt1, rt0, vt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c3, rt1.c0, rt0.c0, vt0.c1, rt1.c1 FROM rt1, rt0, vt0 WHERE (((((rt0.c1 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c3, rt1.c0, rt0.c0, vt0.c1, rt1.c1 FROM rt1, rt0, vt0;
SELECT vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt0 NATURAL JOIN rt1 GROUP BY vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE (CAST(((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)) AS TEXT)) GROUP BY vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (CAST(((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)) AS TEXT)))) GROUP BY vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1 UNION SELECT vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE (((CAST(((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt0 NATURAL JOIN rt1 GROUP BY vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING SUM(AVG(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (SUM(AVG(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((SUM(AVG(rt0.c2))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt0.c3 FROM rt0, rt1, vt0;
SELECT ALL vt0.c0, vt0.c1, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt0.c3 FROM rt0, rt1, vt0 WHERE ('\r㻿#') UNION ALL SELECT vt0.c0, vt0.c1, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt0.c3 FROM rt0, rt1, vt0 WHERE ((NOT ('\r㻿#'))) UNION ALL SELECT vt0.c0, vt0.c1, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt0.c3 FROM rt0, rt1, vt0 WHERE ((('\r㻿#') ISNULL));
SELECT ALL vt0.c0, vt0.c1, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt0.c3 FROM rt0, rt1, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c1 FROM rt0, rt1 WHERE (CAST((((rt1.c3, rt1.c4, rt1.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt1.c0)) AND ((rt1.c0, rt0.c0, rt0.c2))) AS REAL)) UNION SELECT DISTINCT rt0.c1 FROM rt0, rt1 WHERE ((NOT (CAST((((rt1.c3, rt1.c4, rt1.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt1.c0)) AND ((rt1.c0, rt0.c0, rt0.c2))) AS REAL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0, rt1 WHERE (((CAST((((rt1.c3, rt1.c4, rt1.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt1.c0)) AND ((rt1.c0, rt0.c0, rt0.c2))) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, rt1;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.17942787871271837 ELSE rt0.c1 END)OR(CAST(rt0.c0 AS REAL))))OR(load_extension(vt0.c1, vt0.c1))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.17942787871271837 ELSE rt0.c1 END)OR(CAST(rt0.c0 AS REAL))))OR(load_extension(vt0.c1, vt0.c1))) WHERE ((NOT (((rt0.c0)IS NOT(rt0.c2))))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.17942787871271837 ELSE rt0.c1 END)OR(CAST(rt0.c0 AS REAL))))OR(load_extension(vt0.c1, vt0.c1))) WHERE ((NOT ((NOT (((rt0.c0)IS NOT(rt0.c2))))))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.17942787871271837 ELSE rt0.c1 END)OR(CAST(rt0.c0 AS REAL))))OR(load_extension(vt0.c1, vt0.c1))) WHERE ((((NOT (((rt0.c0)IS NOT(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.17942787871271837 ELSE rt0.c1 END)OR(CAST(rt0.c0 AS REAL))))OR(load_extension(vt0.c1, vt0.c1))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING GROUP_CONCAT(MAX(COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (GROUP_CONCAT(MAX(COUNT(*))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING ((GROUP_CONCAT(MAX(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (vt0.c1 COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (vt0.c1 COLLATE NOCASE))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((ABS(rt1.c2))IS NOT(rt1.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((ABS(rt1.c2))IS NOT(rt1.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((ABS(rt1.c2))IS NOT(rt1.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4 FROM vt0, rt0, rt1 GROUP BY vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4;
SELECT ALL vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4 FROM vt0, rt0, rt1 WHERE (((((rt1.c1) IS FALSE)) IS TRUE)) GROUP BY vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4 UNION SELECT ALL vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4 FROM vt0, rt0, rt1 WHERE ((NOT (((((rt1.c1) IS FALSE)) IS TRUE)))) GROUP BY vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4 UNION SELECT ALL vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4 FROM vt0, rt0, rt1 WHERE (((((((rt1.c1) IS FALSE)) IS TRUE)) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4;
SELECT ALL vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4 FROM vt0, rt0, rt1 GROUP BY vt0.c1, rt0.c1, rt1.c0, vt0.c0, rt0.c3, rt0.c2, rt1.c3, rt1.c4;
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING COUNT((- (rt1.c0))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING (NOT (COUNT((- (rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING ((COUNT((- (rt1.c0)))) ISNULL);
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING COUNT((- (rt1.c0))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING (NOT (COUNT((- (rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING ((COUNT((- (rt1.c0)))) ISNULL);
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON json_valid((- (rt1.c4))) FULL OUTER JOIN rt0 ON CAST(((rt1.c3) ISNULL) AS INTEGER);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON json_valid((- (rt1.c4))) FULL OUTER JOIN rt0 ON CAST(((rt1.c3) ISNULL) AS INTEGER) WHERE (0xffffffffdfe5a35d) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON json_valid((- (rt1.c4))) FULL OUTER JOIN rt0 ON CAST(((rt1.c3) ISNULL) AS INTEGER) WHERE ((NOT (0xffffffffdfe5a35d))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN vt0 ON json_valid((- (rt1.c4))) FULL OUTER JOIN rt0 ON CAST(((rt1.c3) ISNULL) AS INTEGER) WHERE (((0xffffffffdfe5a35d) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON json_valid((- (rt1.c4))) FULL OUTER JOIN rt0 ON CAST(((rt1.c3) ISNULL) AS INTEGER);
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((((((((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)))OR(rt0.c2)))AND(rt0.c1)))==(((rt1.c3) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((((((((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)))OR(rt0.c2)))AND(rt0.c1)))==(((rt1.c3) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((((((((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)))OR(rt0.c2)))AND(rt0.c1)))==(((rt1.c3) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c1, rt0.c3, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c3, rt0.c2;
SELECT ALL rt1.c1, rt0.c3, rt0.c2 FROM rt0, rt1 WHERE ((((rt0.c2)=(rt1.c2)) IN ())) GROUP BY rt1.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt1.c1, rt0.c3, rt0.c2 FROM rt0, rt1 WHERE ((NOT ((((rt0.c2)=(rt1.c2)) IN ())))) GROUP BY rt1.c1, rt0.c3, rt0.c2 UNION SELECT rt1.c1, rt0.c3, rt0.c2 FROM rt0, rt1 WHERE ((((((rt0.c2)==(rt1.c2)) IN ())) ISNULL)) GROUP BY rt1.c1, rt0.c3, rt0.c2;
SELECT ALL rt1.c1, rt0.c3, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4;
SELECT rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4 HAVING (((GROUP_CONCAT(TOTAL(x''))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MIN(AVG(rt0.c2)))) IN ()) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4 HAVING (NOT ((((GROUP_CONCAT(TOTAL(x''))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MIN(AVG(rt0.c2)))) IN ()))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4 HAVING (((((GROUP_CONCAT(TOTAL(x''))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MIN(AVG(rt0.c2)))) IN ())) ISNULL);
SELECT rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4;
SELECT rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4 HAVING (((GROUP_CONCAT(TOTAL(x''))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MIN(AVG(rt0.c2)))) IN ()) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4 HAVING (NOT ((((GROUP_CONCAT(TOTAL(x''))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MIN(AVG(rt0.c2)))) IN ()))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4 HAVING (((((GROUP_CONCAT(TOTAL(x''))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MIN(AVG(rt0.c2)))) IN ())) ISNULL);
SELECT rt0.c1, vt0.c1, rt0.c2, rt1.c4 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt1.c4;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c3) NOT BETWEEN (1.282497825E9) AND (rt1.c4))) NOT BETWEEN ((rt1.c2 IN (rt1.c1))) AND (((0.4563932289717868) NOT NULL)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c3) NOT BETWEEN (1.282497825E9) AND (rt1.c4))) NOT BETWEEN ((rt1.c2 IN (rt1.c1))) AND (((0.4563932289717868) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c3) NOT BETWEEN (1.282497825E9) AND (rt1.c4))) NOT BETWEEN ((rt1.c2 IN (rt1.c1))) AND (((0.4563932289717868) NOT NULL)))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('[Gブ1k' COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('[Gブ1k' COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('[Gブ1k' COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))>(CAST(vt0.c1 AS REAL)))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))>(CAST(vt0.c1 AS REAL)))))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))>(CAST(vt0.c1 AS REAL)))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3;
SELECT ALL rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3 HAVING MIN('TRUE') UNION ALL SELECT rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3 HAVING (NOT (MIN('TRUE'))) UNION ALL SELECT rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3 HAVING ((MIN('TRUE')) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3;
SELECT ALL rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3 HAVING MIN('TRUE') UNION ALL SELECT rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3 HAVING (NOT (MIN('TRUE'))) UNION ALL SELECT rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3 HAVING ((MIN('TRUE')) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt0.c3 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c4)<=(rt0.c3))) NOTNULL) GROUP BY rt1.c1, rt1.c3, rt0.c3;
SELECT MIN(CAST(IFNULL(rt1.c0, rt1.c1) AS TEXT)) FROM rt1, vt0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((NULL IN (vt0.c0)))*(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((NULL IN (vt0.c0)))*(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((NULL IN (vt0.c0)))*(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB)) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(((rt0.c2) NOT NULL) AS BLOB)))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((CAST(((rt0.c2) NOT NULL) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)/(vt0.c0))) NOT BETWEEN (CASE 6.43952098E8  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)/(vt0.c0))) NOT BETWEEN (CASE 6.43952098E8  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1)/(vt0.c0))) NOT BETWEEN (CASE 6.43952098E8  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt1.c4, vt0.c0, rt1.c0, vt0.c1, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c4, vt0.c0, rt1.c0, vt0.c1, rt1.c1;
SELECT rt1.c4, vt0.c0, rt1.c0, vt0.c1, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c4, vt0.c0, rt1.c0, vt0.c1, rt1.c1 HAVING AVG(SUM(AVG(COUNT(TOTAL(vt0.c1))))) UNION ALL SELECT ALL rt1.c4, vt0.c0, rt1.c0, vt0.c1, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c4, vt0.c0, rt1.c0, vt0.c1, rt1.c1 HAVING (NOT (AVG(SUM(AVG(COUNT(TOTAL(vt0.c1))))))) UNION ALL SELECT ALL rt1.c4, vt0.c0, rt1.c0, vt0.c1, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c4, vt0.c0, rt1.c0, vt0.c1, rt1.c1 HAVING ((AVG(SUM(AVG(COUNT(TOTAL(vt0.c1)))))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON 'seconds';
SELECT * FROM rt0 CROSS JOIN vt0 ON 'seconds' WHERE ((((NOT (vt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON 'seconds' WHERE ((NOT ((((NOT (vt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON 'seconds' WHERE ((((((NOT (vt0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON 'seconds';
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0)IS(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)IS(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c1, rt1.c1, rt1.c4 FROM vt0, rt1 GROUP BY vt0.c1, rt1.c1, rt1.c4;
SELECT ALL vt0.c1, rt1.c1, rt1.c4 FROM vt0, rt1 WHERE (((rt1.c2)%(0.8935061341153353)) COLLATE NOCASE) GROUP BY vt0.c1, rt1.c1, rt1.c4 UNION SELECT vt0.c1, rt1.c1, rt1.c4 FROM vt0, rt1 WHERE ((NOT (((rt1.c2)%(0.8935061341153353)) COLLATE NOCASE))) GROUP BY vt0.c1, rt1.c1, rt1.c4 UNION SELECT ALL vt0.c1, rt1.c1, rt1.c4 FROM vt0, rt1 WHERE (((((rt1.c2)%(0.8935061341153353)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1, rt1.c1, rt1.c4;
SELECT ALL vt0.c1, rt1.c1, rt1.c4 FROM vt0, rt1 GROUP BY vt0.c1, rt1.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 HAVING vt0.c0 UNION ALL SELECT ALL rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 HAVING vt0.c0 UNION ALL SELECT ALL rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) GROUP BY rt1.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2;
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (TRIM(((rt1.c0)&(rt1.c2)))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (TRIM(((rt1.c0)&(rt1.c2)))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((TRIM(((rt1.c0)&(rt1.c2)))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 WHERE (CAST(LIKELY(rt1.c4) AS TEXT)) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (CAST(LIKELY(rt1.c4) AS TEXT)))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 WHERE (((CAST(LIKELY(rt1.c4) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (('-1276068776' COLLATE RTRIM, (((((((('701395114')AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)), rt0.c3)) AND ((((rt0.c1)>(rt0.c2)), ((rt0.c1)/(0x32721f78)), rt0.c3 COLLATE RTRIM)))) GROUP BY rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (('-1276068776' COLLATE RTRIM, (((((((('701395114')AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)), rt0.c3)) AND ((((rt0.c1)>(rt0.c2)), ((rt0.c1)/(0x32721f78)), rt0.c3 COLLATE RTRIM)))))) GROUP BY rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (('-1276068776' COLLATE RTRIM, (((((((('701395114')AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)), rt0.c3)) AND ((((rt0.c1)>(rt0.c2)), ((rt0.c1)/(0X32721f78)), rt0.c3 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1) IS TRUE)))<((CAST(rt0.c2 AS REAL))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((((rt0.c1) IS TRUE)))<((CAST(rt0.c2 AS REAL))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1) IS TRUE)))<((CAST(rt0.c2 AS REAL))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((((rt1.c2))>(((rt1.c4 IN ()))))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((NOT ((((rt1.c2))>(((rt1.c4 IN ()))))))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((((((rt1.c2))>(((rt1.c4 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (CAST(((rt0.c0) ISNULL) AS INTEGER)) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c0) ISNULL) AS INTEGER)))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((CAST(((rt0.c0) ISNULL) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt1.c2, rt1.c3 FROM rt0, rt1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))>(LOWER(DISTINCT rt0.c2))) GROUP BY vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt1.c2, rt1.c3;
SELECT ALL vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt1.c2, rt1.c3 FROM rt0, rt1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))>(LOWER(DISTINCT rt0.c2))) GROUP BY vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt1.c2, rt1.c3 HAVING MIN(GROUP_CONCAT(NULL)) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt1.c2, rt1.c3 FROM rt0, rt1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))>(LOWER(DISTINCT rt0.c2))) GROUP BY vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt1.c2, rt1.c3 HAVING (NOT (MIN(GROUP_CONCAT(NULL)))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt1.c2, rt1.c3 FROM rt0, rt1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))>(LOWER(DISTINCT rt0.c2))) GROUP BY vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt1.c2, rt1.c3 HAVING ((MIN(GROUP_CONCAT(NULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1;
SELECT rt0.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1 WHERE (((((rt0.c3)=(rt1.c2)))-(CAST(rt1.c4 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1 WHERE ((NOT (((((rt0.c3)=(rt1.c2)))-(CAST(rt1.c4 AS REAL)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1 WHERE (((((((rt0.c3)==(rt1.c2)))-(CAST(rt1.c4 AS REAL)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((((('e䱲')OR(vt0.c1)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((((('e䱲')OR(vt0.c1)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((((('e䱲')OR(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, vt0, rt1 GROUP BY vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2;
SELECT ALL vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, vt0, rt1 WHERE (LIKELY((rt1.c1 IN ()))) GROUP BY vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2 UNION SELECT ALL vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, vt0, rt1 WHERE ((NOT (LIKELY((rt1.c1 IN ()))))) GROUP BY vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2 UNION SELECT ALL vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, vt0, rt1 WHERE (((LIKELY((rt1.c1 IN ()))) ISNULL)) GROUP BY vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2;
SELECT ALL vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, vt0, rt1 GROUP BY vt0.c1, rt1.c4, rt1.c3, rt1.c1, rt0.c2, rt0.c3, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING SUM(LIKELY(0.821048015397018)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING (NOT (SUM(LIKELY(0.821048015397018)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING ((SUM(LIKELY(0.821048015397018))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING SUM(LIKELY(0.821048015397018)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING (NOT (SUM(LIKELY(0.821048015397018)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING ((SUM(LIKELY(0.821048015397018))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4;
SELECT * FROM rt1, rt0, vt0;
SELECT ALL * FROM rt1, rt0, vt0 WHERE (HEX((rt0.c1 IN ()))) UNION ALL SELECT ALL * FROM rt1, rt0, vt0 WHERE ((NOT (HEX((rt0.c1 IN ()))))) UNION ALL SELECT ALL * FROM rt1, rt0, vt0 WHERE (((HEX((rt0.c1 IN ()))) ISNULL));
SELECT * FROM rt1, rt0, vt0;
SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM rt1 WHERE (((((LIKELIHOOD(rt1.c2, 0.25577307994765053))AND(((rt1.c2)||(rt1.c1)))))OR(((rt1.c3)&(rt1.c3))))) UNION SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM rt1 NOT INDEXED WHERE ((NOT (((((LIKELIHOOD(rt1.c2, 0.25577307994765053))AND(((rt1.c2)||(rt1.c1)))))OR(((rt1.c3)&(rt1.c3))))))) UNION SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM rt1 WHERE (((((((LIKELIHOOD(rt1.c2, 0.25577307994765053))AND(((rt1.c2)||(rt1.c1)))))OR(((rt1.c3)&(rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM rt1;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 WHERE ((((rt1.c2)&(rt1.c3)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE ((NOT ((((rt1.c2)&(rt1.c3)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE ((((((rt1.c2)&(rt1.c3)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING MAX(GROUP_CONCAT(rt0.c1)) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((MAX(GROUP_CONCAT(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((x'32ce') IS TRUE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((x'32ce') IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((x'32ce') IS TRUE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))=(((vt0.c0)>('176121621'))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))==(((vt0.c0)>('176121621'))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))==(((vt0.c0)>('176121621'))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4;
SELECT rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE (CAST(((rt0.c1) NOT NULL) AS BLOB)) GROUP BY rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4 UNION SELECT ALL rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE ((NOT (CAST(((rt0.c1) NOT NULL) AS BLOB)))) GROUP BY rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4 UNION SELECT rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE (((CAST(((rt0.c1) NOT NULL) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4;
SELECT rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c3, rt1.c1, rt0.c3, rt1.c2, rt0.c0, rt1.c4;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL MIN(((NULL)GLOB(CAST(rt1.c0 AS TEXT)))) FROM rt1, rt0;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE ((((((0.505585651589242)||(0.033198167804241785)), ((rt0.c2) IS TRUE), ((vt0.c1)==(rt0.c3))))>=((((vt0.c0)-(rt0.c2)), ((rt0.c1)*(rt0.c1)), ((((vt0.c1)OR(rt0.c3)))OR(rt0.c2)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((((0.505585651589242)||(0.033198167804241785)), ((rt0.c2) IS TRUE), ((vt0.c1)==(rt0.c3))))>=((((vt0.c0)-(rt0.c2)), ((rt0.c1)*(rt0.c1)), ((((vt0.c1)OR(rt0.c3)))OR(rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((((0.505585651589242)||(0.033198167804241785)), ((rt0.c2) IS TRUE), ((vt0.c1)==(rt0.c3))))>=((((vt0.c0)-(rt0.c2)), ((rt0.c1)*(rt0.c1)), ((((vt0.c1)OR(rt0.c3)))OR(rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((('378357085' COLLATE NOCASE, ((rt1.c4)&(rt1.c4)), (((1.672506311E9))<=((rt1.c1)))))<=((((rt1.c0) NOT NULL), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), x'')))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((('378357085' COLLATE NOCASE, ((rt1.c4)&(rt1.c4)), (((1.672506311E9))<=((rt1.c1)))))<=((((rt1.c0) NOT NULL), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), x'')))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((('378357085' COLLATE NOCASE, ((rt1.c4)&(rt1.c4)), (((1.672506311E9))<=((rt1.c1)))))<=((((rt1.c0) NOT NULL), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), x'')))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c4)>(rt1.c0)))AND((+ (rt1.c0))))) GROUP BY rt1.c4, rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c4)>(rt1.c0)))AND((+ (rt1.c0))))))) GROUP BY rt1.c4, rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((((((rt1.c4)>(rt1.c0)))AND((+ (rt1.c0))))) ISNULL)) GROUP BY rt1.c4, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c3, vt0.c0, rt1.c1, rt1.c4, rt1.c2, rt0.c3, rt1.c0, rt0.c1, vt0.c1 FROM vt0, rt1, rt0 GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c4, rt1.c2, rt0.c3, rt1.c0, rt0.c1, vt0.c1;
SELECT ALL rt1.c3, vt0.c0, rt1.c1, rt1.c4, rt1.c2, rt0.c3, rt1.c0, rt0.c1, vt0.c1 FROM vt0, rt1, rt0 GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c4, rt1.c2, rt0.c3, rt1.c0, rt0.c1, vt0.c1 HAVING (((rt1.c2, rt1.c1, AVG(rt0.c3))) BETWEEN ((((MIN(rt1.c3))+(AVG(rt1.c1))), SUM(COUNT(rt0.c2)), load_extension(rt1.c4))) AND (((rt1.c3 IN ()), MIN(rt1.c3), COUNT(COUNT(*))))) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c1, rt1.c4, rt1.c2, rt0.c3, rt1.c0, rt0.c1, vt0.c1 FROM vt0, rt1, rt0 GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c4, rt1.c2, rt0.c3, rt1.c0, rt0.c1, vt0.c1 HAVING (NOT ((((rt1.c2, rt1.c1, AVG(rt0.c3))) BETWEEN ((((MIN(rt1.c3))+(AVG(rt1.c1))), SUM(COUNT(rt0.c2)), load_extension(rt1.c4))) AND (((rt1.c3 IN ()), MIN(rt1.c3), COUNT(COUNT(*))))))) UNION ALL SELECT rt1.c3, vt0.c0, rt1.c1, rt1.c4, rt1.c2, rt0.c3, rt1.c0, rt0.c1, vt0.c1 FROM vt0, rt1, rt0 GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c4, rt1.c2, rt0.c3, rt1.c0, rt0.c1, vt0.c1 HAVING (((((rt1.c2, rt1.c1, AVG(rt0.c3))) BETWEEN ((((MIN(rt1.c3))+(AVG(rt1.c1))), SUM(COUNT(rt0.c2)), load_extension(rt1.c4))) AND (((rt1.c3 IN ()), MIN(rt1.c3), COUNT(COUNT(*)))))) ISNULL);
SELECT rt1.c0, rt0.c1, rt1.c4, rt0.c2, rt1.c1, rt1.c3 FROM rt1, vt0, rt0;
SELECT rt1.c0, rt0.c1, rt1.c4, rt0.c2, rt1.c1, rt1.c3 FROM rt1 NOT INDEXED, vt0, rt0 WHERE (rt1.c1) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c4, rt0.c2, rt1.c1, rt1.c3 FROM rt1, vt0, rt0 NOT INDEXED WHERE ((NOT (rt1.c1))) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c4, rt0.c2, rt1.c1, rt1.c3 FROM rt1, vt0, rt0 WHERE (((rt1.c1) ISNULL));
SELECT rt1.c0, rt0.c1, rt1.c4, rt0.c2, rt1.c1, rt1.c3 FROM rt1, vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c3 FROM rt0, rt1;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c3 FROM rt0, rt1 WHERE ((((((((((0.6063309003897205 IN ()))OR(((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((0Xffffffffdfe5a35d)IS NOT(rt0.c1)))))AND((rt1.c2 IN ()))))AND(rt1.c3 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c3 FROM rt0, rt1 WHERE ((NOT ((((((((((0.6063309003897205 IN ()))OR(((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((0xffffffffdfe5a35d)IS NOT(rt0.c1)))))AND((rt1.c2 IN ()))))AND(rt1.c3 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c3 FROM rt0, rt1 WHERE ((((((((((((0.6063309003897205 IN ()))OR(((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((0xffffffffdfe5a35d)IS NOT(rt0.c1)))))AND((rt1.c2 IN ()))))AND(rt1.c3 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c3 FROM rt0, rt1;
SELECT rt1.c3, rt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c3, rt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c3, rt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((x'')) AND ((((rt1.c3) NOT NULL))))) GROUP BY rt1.c3, rt0.c0, rt1.c1, rt1.c0 UNION SELECT rt1.c3, rt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1, rt0 WHERE ((NOT ((((rt1.c0)) BETWEEN ((x'')) AND ((((rt1.c3) NOT NULL))))))) GROUP BY rt1.c3, rt0.c0, rt1.c1, rt1.c0 UNION SELECT rt1.c3, rt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1, rt0 WHERE ((((((rt1.c0)) BETWEEN ((x'')) AND ((((rt1.c3) NOT NULL))))) ISNULL)) GROUP BY rt1.c3, rt0.c0, rt1.c1, rt1.c0;
SELECT rt1.c3, rt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c3, rt0.c0, rt1.c1, rt1.c0;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (CASE WHEN ((vt0.c1)<>(vt0.c1)) THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c1)<>(vt0.c1)) THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE WHEN ((vt0.c1)!=(vt0.c1)) THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c2)))AND(vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-25742214'))))) GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c2)))AND(vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-25742214'))))))) GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c2)))AND(vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-25742214'))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (SUM(COUNT(GROUP_CONCAT(rt0.c2))) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((SUM(COUNT(GROUP_CONCAT(rt0.c2))) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((SUM(COUNT(GROUP_CONCAT(rt0.c2))) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (SUM(COUNT(GROUP_CONCAT(rt0.c2))) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((SUM(COUNT(GROUP_CONCAT(rt0.c2))) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((SUM(COUNT(GROUP_CONCAT(rt0.c2))) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((NULL) BETWEEN (rt1.c2 COLLATE BINARY) AND (CASE 0x1c3af56a  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c4 END))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((NULL) BETWEEN (rt1.c2 COLLATE BINARY) AND (CASE 0X1c3af56a  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c4 END))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((NULL) BETWEEN (rt1.c2 COLLATE BINARY) AND (CASE 0X1c3af56a  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c4 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((((vt0.c1 IN (rt0.c1)))OR((rt0.c0 IN ()))))OR(-1170066813)))AND((+ (rt0.c2)))))OR(((vt0.c0)>=(rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((((((vt0.c1 IN (rt0.c1)))OR((rt0.c0 IN ()))))OR(-1170066813)))AND((+ (rt0.c2)))))OR(((vt0.c0)>=(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((((((vt0.c1 IN (rt0.c1)))OR((rt0.c0 IN ()))))OR(-1170066813)))AND((+ (rt0.c2)))))OR(((vt0.c0)>=(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0 FROM rt0, vt0, rt1 NOT INDEXED GROUP BY vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0;
SELECT vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0 FROM rt0, vt0, rt1 WHERE (CASE WHEN ((rt1.c4)&(rt1.c4)) THEN 1.282497825E9 WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (NOT (rt1.c4)) WHEN (- (rt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END) GROUP BY vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0 FROM rt0, vt0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c4)&(rt1.c4)) THEN 1.282497825E9 WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (NOT (rt1.c4)) WHEN (- (rt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END))) GROUP BY vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0 FROM rt0, vt0, rt1 WHERE (((CASE WHEN ((rt1.c4)&(rt1.c4)) THEN 1.282497825E9 WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (NOT (rt1.c4)) WHEN (- (rt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0;
SELECT vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0 FROM rt0, vt0, rt1 NOT INDEXED GROUP BY vt0.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, vt0.c1, rt1.c4, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4;
SELECT ALL rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4 HAVING (((((TOTAL(vt0.c0) IN (rt1.c0)))AND(((rt1.c3)+(SUM(vt0.c0))))))AND(CAST(rt1.c3 AS BLOB))) UNION ALL SELECT rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4 HAVING (NOT ((((((TOTAL(vt0.c0) IN (rt1.c0)))AND(((rt1.c3)+(SUM(vt0.c0))))))AND(CAST(rt1.c3 AS BLOB))))) UNION ALL SELECT rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4 HAVING (((((((TOTAL(vt0.c0) IN (rt1.c0)))AND(((rt1.c3)+(SUM(vt0.c0))))))AND(CAST(rt1.c3 AS BLOB)))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4;
SELECT ALL rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4 HAVING (((((TOTAL(vt0.c0) IN (rt1.c0)))AND(((rt1.c3)+(SUM(vt0.c0))))))AND(CAST(rt1.c3 AS BLOB))) UNION ALL SELECT rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4 HAVING (NOT ((((((TOTAL(vt0.c0) IN (rt1.c0)))AND(((rt1.c3)+(SUM(vt0.c0))))))AND(CAST(rt1.c3 AS BLOB))))) UNION ALL SELECT rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4 HAVING (((((((TOTAL(vt0.c0) IN (rt1.c0)))AND(((rt1.c3)+(SUM(vt0.c0))))))AND(CAST(rt1.c3 AS BLOB)))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt1.c4 FROM rt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt1.c4;
SELECT rt0.c1, rt0.c3 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c3 FROM vt0, rt0 WHERE ('0.39124215520854977') UNION ALL SELECT rt0.c1, rt0.c3 FROM vt0, rt0 WHERE ((NOT ('0.39124215520854977'))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM vt0, rt0 WHERE ((('0.39124215520854977') ISNULL));
SELECT rt0.c1, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (HEX(DISTINCT ((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (HEX(DISTINCT ((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((HEX(DISTINCT ((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT)) NOT BETWEEN ((((rt1.c1, rt1.c2, rt1.c2))<((rt1.c2, rt1.c1, rt1.c1)))) AND (((((rt1.c4)OR(rt1.c1)))OR(rt1.c2))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1 WHERE ((NOT (((CAST(rt1.c0 AS TEXT)) NOT BETWEEN ((((rt1.c1, rt1.c2, rt1.c2))<((rt1.c2, rt1.c1, rt1.c1)))) AND (((((rt1.c4)OR(rt1.c1)))OR(rt1.c2))))))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1 WHERE (((((CAST(rt1.c0 AS TEXT)) NOT BETWEEN ((((rt1.c1, rt1.c2, rt1.c2))<((rt1.c2, rt1.c1, rt1.c1)))) AND (((((rt1.c4)OR(rt1.c1)))OR(rt1.c2))))) ISNULL)) GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c1;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c1 HAVING ((COUNT(*))>(((rt0.c2)AND(MIN(COUNT(MAX(vt0.c0))))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c1 HAVING (NOT (((COUNT(*))>(((rt0.c2)AND(MIN(COUNT(MAX(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c1 HAVING ((((COUNT(*))>(((rt0.c2)AND(MIN(COUNT(MAX(vt0.c0)))))))) ISNULL);
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE ((NOT (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT ((NOT (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((((NOT (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT rt0.c1 FROM rt0 NOT INDEXED INNER JOIN rt1 ON (NOT (CASE WHEN rt1.c3 THEN rt1.c2 END)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN rt1 ON (NOT (CASE WHEN rt1.c3 THEN rt1.c2 END)) WHERE ((~ ((~ (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 INNER JOIN rt1 ON (NOT (CASE WHEN rt1.c3 THEN rt1.c2 END)) WHERE ((NOT ((~ ((~ (rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 INNER JOIN rt1 ON (NOT (CASE WHEN rt1.c3 THEN rt1.c2 END)) WHERE ((((~ ((~ (rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 NOT INDEXED INNER JOIN rt1 ON (NOT (CASE WHEN rt1.c3 THEN rt1.c2 END)) GROUP BY rt0.c1;
SELECT ALL vt0.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c1, rt1.c0;
SELECT vt0.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c1, rt1.c0 HAVING SUM((~ (MAX(TOTAL(rt1.c3))))) UNION ALL SELECT ALL vt0.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c1, rt1.c0 HAVING (NOT (SUM((~ (MAX(TOTAL(rt1.c3))))))) UNION ALL SELECT ALL vt0.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c1, rt1.c0 HAVING ((SUM((~ (MAX(TOTAL(rt1.c3)))))) ISNULL);
SELECT ALL rt0.c0 FROM rt1, rt0;
SELECT rt0.c0 FROM rt1, rt0 WHERE ((((rt1.c0, rt1.c3, rt0.c2)) NOT BETWEEN (((~ (x'c03c')), ((rt1.c2)&(rt1.c2)), NULL)) AND ((rt1.c3, ((rt1.c1)IS NOT(rt1.c0)), rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt1, rt0 WHERE ((NOT ((((rt1.c0, rt1.c3, rt0.c2)) NOT BETWEEN (((~ (x'c03c')), ((rt1.c2)&(rt1.c2)), NULL)) AND ((rt1.c3, ((rt1.c1)IS NOT(rt1.c0)), rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt1, rt0 WHERE ((((((rt1.c0, rt1.c3, rt0.c2)) NOT BETWEEN (((~ (x'c03c')), ((rt1.c2)&(rt1.c2)), NULL)) AND ((rt1.c3, ((rt1.c1)IS NOT(rt1.c0)), rt0.c0)))) ISNULL));
SELECT ALL rt0.c0 FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (rt0.c2 COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT ALL rt1.c1, vt0.c0, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c3;
SELECT rt1.c1, vt0.c0, rt1.c3 FROM rt1, vt0 WHERE (LIKELY((((rt1.c4))<=((rt1.c2))))) GROUP BY rt1.c1, vt0.c0, rt1.c3 UNION SELECT rt1.c1, vt0.c0, rt1.c3 FROM rt1, vt0 WHERE ((NOT (LIKELY((((rt1.c4))<=((rt1.c2))))))) GROUP BY rt1.c1, vt0.c0, rt1.c3 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c3 FROM rt1, vt0 WHERE (((LIKELY((((rt1.c4))<=((rt1.c2))))) ISNULL)) GROUP BY rt1.c1, vt0.c0, rt1.c3;
SELECT ALL rt1.c1, vt0.c0, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c3;
SELECT rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN rt0 ON LENGTH(TYPEOF(DISTINCT rt1.c2)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN rt0 ON LENGTH(TYPEOF(DISTINCT rt1.c2)) GROUP BY rt1.c1, rt1.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN rt0 ON LENGTH(TYPEOF(DISTINCT rt1.c2)) GROUP BY rt1.c1, rt1.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN rt0 ON LENGTH(TYPEOF(DISTINCT rt1.c2)) GROUP BY rt1.c1, rt1.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE TIME(NULL, rt0.c1, rt0.c1)  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((vt0.c1)|(rt0.c3)) ELSE ((rt0.c2)*(vt0.c1)) END) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CASE TIME(NULL, rt0.c1, rt0.c1)  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((vt0.c1)|(rt0.c3)) ELSE ((rt0.c2)*(vt0.c1)) END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE TIME(NULL, rt0.c1, rt0.c1)  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((vt0.c1)|(rt0.c3)) ELSE ((rt0.c2)*(vt0.c1)) END) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt1 ON LOWER((('')|(rt0.c2))) RIGHT OUTER JOIN rt0 ON ((1.938456586E9)||(CASE rt1.c4  WHEN rt0.c3 THEN '-1352381326' WHEN rt0.c0 THEN rt0.c0 WHEN x'997a' THEN rt0.c2 END));
SELECT rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2;
SELECT ALL rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, vt0, rt1 WHERE ((+ (CAST(vt0.c0 AS INTEGER)))) GROUP BY rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, vt0, rt1 WHERE ((NOT ((+ (CAST(vt0.c0 AS INTEGER)))))) GROUP BY rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, vt0, rt1 WHERE ((((+ (CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2;
SELECT rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt1.c3, rt0.c0, rt0.c2, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2;
SELECT ALL rt1.c4, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt1.c4, rt1.c0;
SELECT rt1.c4, rt1.c0 FROM vt0, rt0, rt1 NOT INDEXED GROUP BY rt1.c4, rt1.c0 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT ALL rt1.c4, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt1.c4, rt1.c0 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT rt1.c4, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt1.c4, rt1.c0 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c2  WHEN x'0a2d' THEN vt0.c1 END))<((CAST(rt0.c0 AS INTEGER))));
SELECT rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c2  WHEN x'0a2d' THEN vt0.c1 END))<((CAST(rt0.c0 AS INTEGER)))) WHERE ((((('-1450130040')>=(vt0.c1))) IS TRUE)) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c2  WHEN x'0a2d' THEN vt0.c1 END))<((CAST(rt0.c0 AS INTEGER)))) WHERE ((NOT ((((('-1450130040')>=(vt0.c1))) IS TRUE)))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c2  WHEN x'0a2d' THEN vt0.c1 END))<((CAST(rt0.c0 AS INTEGER)))) WHERE ((((((('-1450130040')>=(vt0.c1))) IS TRUE)) ISNULL));
SELECT ALL rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c2  WHEN x'0a2d' THEN vt0.c1 END))<((CAST(rt0.c0 AS INTEGER))));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((('-1110161383' COLLATE RTRIM)<=((rt0.c2 IN ())))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((('-1110161383' COLLATE RTRIM)<=((rt0.c2 IN ())))))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((('-1110161383' COLLATE RTRIM)<=((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4;
SELECT ALL rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4;
SELECT ALL rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c2)) INNER JOIN rt0 ON (+ (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, rt1.c3, vt0.c0, rt0.c1, rt1.c0, rt1.c4;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE (NOT (rt0.c0))  WHEN (+ (rt0.c3)) THEN x'' ELSE ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE (NOT (rt0.c0))  WHEN (+ (rt0.c3)) THEN x'' ELSE ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE (NOT (rt0.c0))  WHEN (+ (rt0.c3)) THEN x'' ELSE ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c3, vt0.c0, rt0.c3, rt1.c1, vt0.c1 FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (((((rt1.c4, '-1574518406', rt0.c2, rt0.c0, rt1.c1)) BETWEEN (('f2lP9䯿q', 0X3a22b688, 0.04045909006161874, rt0.c0, rt1.c0)) AND ((vt0.c0, vt0.c1, rt1.c2, rt1.c4, rt1.c2))))) AND ((vt0.c0 COLLATE BINARY))) FULL OUTER JOIN rt1 ON (~ (((rt1.c4)IS(vt0.c1))));
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS TEXT)))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((-1099437028)<<(CAST(rt0.c1 AS NUMERIC))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (((-1099437028)<<(CAST(rt0.c1 AS NUMERIC))))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((((-1099437028)<<(CAST(rt0.c1 AS NUMERIC)))) ISNULL);
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((-1099437028)<<(CAST(rt0.c1 AS NUMERIC))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (((-1099437028)<<(CAST(rt0.c1 AS NUMERIC))))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((((-1099437028)<<(CAST(rt0.c1 AS NUMERIC)))) ISNULL);
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0, rt1, vt0;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (0.642314689389721) UNION ALL SELECT * FROM rt0, rt1, vt0 WHERE ((NOT (0.642314689389721))) UNION ALL SELECT * FROM rt0, rt1, vt0 WHERE (((0.642314689389721) ISNULL));
SELECT ALL * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)IS(rt0.c3)))OR(((rt0.c2) IS TRUE)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)IS(rt0.c3)))OR(((rt0.c2) IS TRUE))) WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)IS(rt0.c3)))OR(((rt0.c2) IS TRUE))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)IS(rt0.c3)))OR(((rt0.c2) IS TRUE))) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)IS(rt0.c3)))OR(((rt0.c2) IS TRUE)));
SELECT ALL vt0.c1, vt0.c0, rt1.c3 FROM rt1, vt0 GROUP BY vt0.c1, vt0.c0, rt1.c3;
SELECT ALL vt0.c1, vt0.c0, rt1.c3 FROM rt1, vt0 WHERE (CAST(((0x75fbb866)+(rt1.c0)) AS BLOB)) GROUP BY vt0.c1, vt0.c0, rt1.c3 UNION SELECT ALL vt0.c1, vt0.c0, rt1.c3 FROM rt1, vt0 WHERE ((NOT (CAST(((0x75fbb866)+(rt1.c0)) AS BLOB)))) GROUP BY vt0.c1, vt0.c0, rt1.c3 UNION SELECT vt0.c1, vt0.c0, rt1.c3 FROM rt1, vt0 WHERE (((CAST(((0x75fbb866)+(rt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt1.c3;
SELECT ALL vt0.c1, vt0.c0, rt1.c3 FROM rt1, vt0 GROUP BY vt0.c1, vt0.c0, rt1.c3;
SELECT rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0;
SELECT ALL rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING CAST(MAX(rt1.c0) AS TEXT) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING (NOT (CAST(MAX(rt1.c0) AS TEXT))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING ((CAST(MAX(rt1.c0) AS TEXT)) ISNULL);
SELECT rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0;
SELECT ALL rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING CAST(MAX(rt1.c0) AS TEXT) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING (NOT (CAST(MAX(rt1.c0) AS TEXT))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING ((CAST(MAX(rt1.c0) AS TEXT)) ISNULL);
SELECT rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0;
SELECT * FROM rt1, vt0, rt0;
SELECT ALL * FROM rt1, vt0, rt0 WHERE (CASE rt0.c2  WHEN rt1.c2 THEN 0.894222629441862 WHEN rt1.c0 THEN x'6744' WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c4 END COLLATE RTRIM) UNION ALL SELECT * FROM rt1, vt0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt1.c2 THEN 0.894222629441862 WHEN rt1.c0 THEN x'6744' WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c4 END COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt1, vt0, rt0 NOT INDEXED WHERE (((CASE rt0.c2  WHEN rt1.c2 THEN 0.894222629441862 WHEN rt1.c0 THEN x'6744' WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c4 END COLLATE RTRIM) ISNULL));
SELECT * FROM rt1, vt0, rt0;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM vt0, rt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM vt0, rt0, rt1 WHERE (NULL) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM vt0, rt0, rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM vt0, rt0, rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM vt0, rt0, rt1;
SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (LTRIM(vt0.c0, ((((NULL)AND(rt0.c1)))AND(rt0.c3)))) GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (LTRIM(vt0.c0, ((((NULL)AND(rt0.c1)))AND(rt0.c3)))))) GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((LTRIM(vt0.c0, ((((NULL)AND(rt0.c1)))AND(rt0.c3)))) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c0 HAVING AVG(((((((((rt1.c3)OR(rt0.c0)))OR(AVG(rt0.c1))))AND('-1869060147')))AND('0.3586408358405335'))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (AVG(((((((((rt1.c3)OR(rt0.c0)))OR(AVG(rt0.c1))))AND('-1869060147')))AND('0.3586408358405335'))))) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0, rt1 NOT INDEXED, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((AVG(((((((((rt1.c3)OR(rt0.c0)))OR(AVG(rt0.c1))))AND('-1869060147')))AND('0.3586408358405335')))) ISNULL);
SELECT MAX((- (((((rt1.c3)AND(rt0.c0)))AND(rt0.c0))))) FROM rt1, rt0, vt0;
SELECT ALL * FROM rt0, vt0, rt1;
SELECT * FROM rt0, vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((((rt0.c1)-(rt1.c1)))) AND ((CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE ((NOT ((((rt1.c0)) BETWEEN ((((rt0.c1)-(rt1.c1)))) AND ((CAST(rt0.c0 AS NUMERIC))))))) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE ((((((rt1.c0)) BETWEEN ((((rt0.c1)-(rt1.c1)))) AND ((CAST(rt0.c0 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c0))) BETWEEN (((rt1.c0) NOTNULL)) AND ((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c0))) BETWEEN (((rt1.c0) NOTNULL)) AND ((NOT (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c0))) BETWEEN (((rt1.c0) NOTNULL)) AND ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (x'') GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (x''))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING SUM((rt0.c3 IN ())) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (SUM((rt0.c3 IN ())))) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((SUM((rt0.c3 IN ()))) ISNULL);
SELECT rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING SUM((rt0.c3 IN ())) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (SUM((rt0.c3 IN ())))) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((SUM((rt0.c3 IN ()))) ISNULL);
SELECT rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT * FROM vt0, rt1, rt0;
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((- (NULL))) UNION ALL SELECT * FROM vt0, rt1, rt0 WHERE ((NOT ((- (NULL))))) UNION ALL SELECT ALL * FROM vt0, rt1, rt0 WHERE ((((- (NULL))) ISNULL));
SELECT * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c1)))OR('643952098')))OR('')))OR(((((rt0.c0)AND(rt0.c2)))OR('IM~'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c3)OR(rt0.c1)))OR('643952098')))OR('')))OR(((((rt0.c0)AND(rt0.c2)))OR('IM~'))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR('643952098')))OR('')))OR(((((rt0.c0)AND(rt0.c2)))OR('IM~'))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((x'')) AND ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4))))) CROSS JOIN vt0 ON ((CASE rt0.c0  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c3 ELSE vt0.c0 END)<<((- (rt0.c2)))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((x'')) AND ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4))))) CROSS JOIN vt0 ON ((CASE rt0.c0  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c3 ELSE vt0.c0 END)<<((- (rt0.c2)))) WHERE ('') GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((x'')) AND ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4))))) CROSS JOIN vt0 ON ((CASE rt0.c0  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c3 ELSE vt0.c0 END)<<((- (rt0.c2)))) WHERE ((NOT (''))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((x'')) AND ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4))))) CROSS JOIN vt0 ON ((CASE rt0.c0  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c3 ELSE vt0.c0 END)<<((- (rt0.c2)))) WHERE ((('') ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((x'')) AND ((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4))))) CROSS JOIN vt0 ON ((CASE rt0.c0  WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c3 ELSE vt0.c0 END)<<((- (rt0.c2)))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3;
SELECT ALL rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3 HAVING ((MIN(rt0.c3)) IS TRUE) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3 HAVING (NOT (((MIN(rt0.c3)) IS TRUE))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3 HAVING ((((MIN(rt0.c3)) IS TRUE)) ISNULL);
SELECT rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3;
SELECT ALL rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3 HAVING ((MIN(rt0.c3)) IS TRUE) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3 HAVING (NOT (((MIN(rt0.c3)) IS TRUE))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3 HAVING ((((MIN(rt0.c3)) IS TRUE)) ISNULL);
SELECT rt1.c2, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE ((- (rt1.c2 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt1, vt0 NOT INDEXED WHERE ((NOT ((- (rt1.c2 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((((- (rt1.c2 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST((vt0.c0 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((vt0.c1 IN (vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0 COLLATE BINARY)))AND(NULL))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((((((vt0.c1 IN (vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0 COLLATE BINARY)))AND(NULL))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c1 IN (vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0 COLLATE BINARY)))AND(NULL))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1;
SELECT rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1 HAVING (~ (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1 HAVING (NOT ((~ (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1 HAVING (((~ (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1;
SELECT rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1 HAVING (~ (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1 HAVING (NOT ((~ (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1 HAVING (((~ (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c1;
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c1) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt1.c0))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (((rt1.c1) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c1) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt1.c0))))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt1.c4, rt1.c3 FROM rt1, rt0 FULL OUTER JOIN vt0 ON json_valid(CAST(rt1.c1 AS TEXT));
SELECT DISTINCT rt1.c2, rt1.c4, rt1.c3 FROM rt1, rt0 FULL OUTER JOIN vt0 ON json_valid(CAST(rt1.c1 AS TEXT)) WHERE (json_extract(rt0.c3 COLLATE NOCASE, rt1.c1 COLLATE NOCASE)) UNION SELECT DISTINCT rt1.c2, rt1.c4, rt1.c3 FROM rt1, rt0 FULL OUTER JOIN vt0 ON json_valid(CAST(rt1.c1 AS TEXT)) WHERE ((NOT (json_extract(rt0.c3 COLLATE NOCASE, rt1.c1 COLLATE NOCASE)))) UNION SELECT DISTINCT rt1.c2, rt1.c4, rt1.c3 FROM rt1, rt0 FULL OUTER JOIN vt0 ON json_valid(CAST(rt1.c1 AS TEXT)) WHERE (((json_extract(rt0.c3 COLLATE NOCASE, rt1.c1 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c4, rt1.c3 FROM rt1, rt0 FULL OUTER JOIN vt0 ON json_valid(CAST(rt1.c1 AS TEXT));
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((('W柍.V2Y-)')<(STRFTIME(vt0.c0, vt0.c0, vt0.c1)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((('W柍.V2Y-)')<(STRFTIME(vt0.c0, vt0.c0, vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((('W柍.V2Y-)')<(STRFTIME(vt0.c0, vt0.c0, vt0.c1)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0;
SELECT ALL rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0 HAVING NULL UNION ALL SELECT ALL rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0;
SELECT ALL rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0 HAVING NULL UNION ALL SELECT ALL rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT rt1.c4, vt0.c1, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c1, rt1.c1, vt0.c0;
SELECT vt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c4) NOT BETWEEN (((rt1.c2)IS(NULL))) AND (rt1.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN (((+ (x'67ee')))) AND ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c3 END)));
SELECT ALL vt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c4) NOT BETWEEN (((rt1.c2)IS(NULL))) AND (rt1.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN (((+ (x'67ee')))) AND ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c3 END))) WHERE (((rt0.c2)!=(rt1.c2)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c4) NOT BETWEEN (((rt1.c2)IS(NULL))) AND (rt1.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN (((+ (x'67ee')))) AND ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c3 END))) WHERE ((NOT (((rt0.c2)!=(rt1.c2)) COLLATE RTRIM))) UNION ALL SELECT vt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c4) NOT BETWEEN (((rt1.c2)IS(NULL))) AND (rt1.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN (((+ (x'67ee')))) AND ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c3 END))) WHERE (((((rt0.c2)<>(rt1.c2)) COLLATE RTRIM) ISNULL));
SELECT vt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c4) NOT BETWEEN (((rt1.c2)IS(NULL))) AND (rt1.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN (((+ (x'67ee')))) AND ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c3 END)));
SELECT DISTINCT rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1 WHERE ((- (rt1.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT ((- (rt1.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1 WHERE ((((- (rt1.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4 FROM rt1, vt0 WHERE (CASE WHEN rt1.c3 THEN vt0.c1 END COLLATE RTRIM) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4 UNION SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4 FROM rt1, vt0 WHERE ((NOT (CASE WHEN rt1.c3 THEN vt0.c1 END COLLATE RTRIM))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4 UNION SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4 FROM rt1, vt0 WHERE (((CASE WHEN rt1.c3 THEN vt0.c1 END COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c4;
SELECT ALL rt0.c3 FROM rt1, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt1, rt0 GROUP BY rt0.c3 HAVING (((COUNT(rt1.c0))) BETWEEN ((TOTAL(TOTAL(MAX(rt0.c1))))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 END))) UNION ALL SELECT rt0.c3 FROM rt1, rt0 GROUP BY rt0.c3 HAVING (NOT ((((COUNT(rt1.c0))) BETWEEN ((TOTAL(TOTAL(MAX(rt0.c1))))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 END))))) UNION ALL SELECT ALL rt0.c3 FROM rt1, rt0 GROUP BY rt0.c3 HAVING (((((COUNT(rt1.c0))) BETWEEN ((TOTAL(TOTAL(MAX(rt0.c1))))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 END)))) ISNULL);
SELECT ALL SUM(((rt0.c0) NOTNULL) COLLATE RTRIM) FROM vt0, rt1, rt0;
SELECT * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN CAST(rt1.c3 AS TEXT) THEN CAST(rt1.c0 AS BLOB) END) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (CASE WHEN CAST(rt1.c3 AS TEXT) THEN CAST(rt1.c0 AS BLOB) END))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((CASE WHEN CAST(rt1.c3 AS TEXT) THEN CAST(rt1.c0 AS BLOB) END) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 WHERE (CASE WHEN LAST_INSERT_ROWID() THEN ((rt0.c1)==(rt0.c1)) WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt0.c0 ELSE rt0.c3 END THEN CAST(0X19503eff AS NUMERIC) WHEN CAST(vt0.c1 AS TEXT) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) ELSE (NOT (rt0.c1)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE WHEN LAST_INSERT_ROWID() THEN ((rt0.c1)=(rt0.c1)) WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt0.c0 ELSE rt0.c3 END THEN CAST(0X19503eff AS NUMERIC) WHEN CAST(vt0.c1 AS TEXT) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) ELSE (NOT (rt0.c1)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN LAST_INSERT_ROWID() THEN ((rt0.c1)==(rt0.c1)) WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt0.c0 ELSE rt0.c3 END THEN CAST(0x19503eff AS NUMERIC) WHEN CAST(vt0.c1 AS TEXT) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) ELSE (NOT (rt0.c1)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, vt0.c1, rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt1.c1, vt0.c1, rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt1.c1, vt0.c1, rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt1.c1, vt0.c1, rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING MAX(((MAX(TOTAL(rt0.c1))) NOT BETWEEN (rt0.c1) AND (vt0.c1))) UNION ALL SELECT ALL rt1.c1, vt0.c1, rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt1.c1, vt0.c1, rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (MAX(((MAX(TOTAL(rt0.c1))) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) UNION ALL SELECT rt1.c1, vt0.c1, rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 NOT INDEXED, rt1 GROUP BY rt1.c1, vt0.c1, rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING ((MAX(((MAX(TOTAL(rt0.c1))) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) ISNULL);
SELECT ALL * FROM vt0, rt1, rt0;
SELECT * FROM vt0, rt1, rt0 WHERE (CAST((rt1.c4 IN ()) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0, rt1, rt0 WHERE ((NOT (CAST((rt1.c4 IN ()) AS NUMERIC)))) UNION ALL SELECT * FROM vt0, rt1, rt0 WHERE (((CAST((rt1.c4 IN ()) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((((((((rt0.c0))<>((rt1.c1))))AND(((1482879961) IS TRUE))))OR(((rt1.c0)AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((NOT ((((((((rt0.c0))!=((rt1.c1))))AND(((1482879961) IS TRUE))))OR(((rt1.c0)AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((((((((((rt0.c0))<>((rt1.c1))))AND(((1482879961) IS TRUE))))OR(((rt1.c0)AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((rt1.c0) NOT NULL) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1)) THEN LOWER(DISTINCT rt1.c3) WHEN (((rt1.c3, rt0.c2, 0.6897214891183491))<((rt1.c0, rt1.c3, rt0.c2))) THEN ((0x3551b342) NOT BETWEEN (rt1.c3) AND (rt1.c4)) ELSE ((rt0.c3)>>('')) END) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0 WHERE ((NOT (CASE WHEN ((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((rt1.c0) NOT NULL) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1)) THEN LOWER(DISTINCT rt1.c3) WHEN (((rt1.c3, rt0.c2, 0.6897214891183491))<((rt1.c0, rt1.c3, rt0.c2))) THEN ((0X3551b342) NOT BETWEEN (rt1.c3) AND (rt1.c4)) ELSE ((rt0.c3)>>('')) END))) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0 WHERE (((CASE WHEN ((rt1.c2) BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((rt1.c0) NOT NULL) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1)) THEN LOWER(DISTINCT rt1.c3) WHEN (((rt1.c3, rt0.c2, 0.6897214891183491))<((rt1.c0, rt1.c3, rt0.c2))) THEN ((0x3551b342) NOT BETWEEN (rt1.c3) AND (rt1.c4)) ELSE ((rt0.c3)>>('')) END) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt0.c1, rt0.c2, rt1.c1;
SELECT rt1.c1, rt1.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt1.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt1.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt1.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt1.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt1.c0 HAVING ((TRIM(DISTINCT AVG(GROUP_CONCAT(rt1.c1)))) IS TRUE) UNION ALL SELECT rt1.c1, rt1.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt1.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt1.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt1.c0 HAVING (NOT (((TRIM(DISTINCT AVG(GROUP_CONCAT(rt1.c1)))) IS TRUE))) UNION ALL SELECT ALL rt1.c1, rt1.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt1.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt1.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt1.c0 HAVING ((((TRIM(DISTINCT AVG(GROUP_CONCAT(rt1.c1)))) IS TRUE)) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((CASE '1748285432'  WHEN rt0.c1 THEN vt0.c1 END)AND(x'')))OR(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((CASE '1748285432'  WHEN rt0.c1 THEN vt0.c1 END)AND(x'')))OR(CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((CASE '1748285432'  WHEN rt0.c1 THEN vt0.c1 END)AND(x'')))OR(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt1, vt0 WHERE (CAST((((rt1.c4)) NOT BETWEEN ((0.9219979422010782)) AND ((rt1.c4))) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt1, vt0 WHERE ((NOT (CAST((((rt1.c4)) NOT BETWEEN ((0.9219979422010782)) AND ((rt1.c4))) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt1, vt0 WHERE (((CAST((((rt1.c4)) NOT BETWEEN ((0.9219979422010782)) AND ((rt1.c4))) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt1, vt0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0 WHERE (0.7746020470669955) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0 WHERE ((NOT (0.7746020470669955))) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0 WHERE (((0.7746020470669955) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c0, rt1.c3, rt0.c3, rt1.c2, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c0, rt1.c3, rt0.c3, rt1.c2, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c0, rt1.c3, rt0.c3, rt1.c2, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c0, rt1.c3, rt0.c3, rt1.c2, rt0.c2 HAVING ((((x'')AND(COUNT(MAX(NULL)))))OR(SUM(MIN(GROUP_CONCAT(GROUP_CONCAT(AVG(rt1.c4))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c0, rt1.c3, rt0.c3, rt1.c2, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c0, rt1.c3, rt0.c3, rt1.c2, rt0.c2 HAVING (NOT (((((x'')AND(COUNT(MAX(NULL)))))OR(SUM(MIN(GROUP_CONCAT(GROUP_CONCAT(AVG(rt1.c4))))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c0, rt1.c3, rt0.c3, rt1.c2, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c0, rt1.c3, rt0.c3, rt1.c2, rt0.c2 HAVING ((((((x'')AND(COUNT(MAX(NULL)))))OR(SUM(MIN(GROUP_CONCAT(GROUP_CONCAT(AVG(rt1.c4)))))))) ISNULL);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON DATETIME(CAST(rt0.c0 AS TEXT), rt1.c4, ((rt1.c4) NOT NULL));
SELECT * FROM rt1 CROSS JOIN rt0 ON DATETIME(CAST(rt0.c0 AS TEXT), rt1.c4, ((rt1.c4) NOT NULL)) WHERE ((((rt1.c2, rt1.c3, rt1.c3, rt0.c0, rt1.c3))<=(('-851287166', rt1.c0, rt1.c0, rt0.c1, rt0.c1))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1 CROSS JOIN rt0 ON DATETIME(CAST(rt0.c0 AS TEXT), rt1.c4, ((rt1.c4) NOT NULL)) WHERE ((NOT ((((rt1.c2, rt1.c3, rt1.c3, rt0.c0, rt1.c3))<=(('-851287166', rt1.c0, rt1.c0, rt0.c1, rt0.c1))) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1 CROSS JOIN rt0 ON DATETIME(CAST(rt0.c0 AS TEXT), rt1.c4, ((rt1.c4) NOT NULL)) WHERE ((((((rt1.c2, rt1.c3, rt1.c3, rt0.c0, rt1.c3))<=(('-851287166', rt1.c0, rt1.c0, rt0.c1, rt0.c1))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON DATETIME(CAST(rt0.c0 AS TEXT), rt1.c4, ((rt1.c4) NOT NULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c1) IS TRUE)  WHEN HEX(DISTINCT vt0.c1) THEN x'' END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c1) IS TRUE)  WHEN HEX(DISTINCT vt0.c1) THEN x'' END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c1) IS TRUE)  WHEN HEX(DISTINCT vt0.c1) THEN x'' END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2;
SELECT rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2 FROM rt0, rt1, vt0 WHERE ((((((((((((((((rt1.c1))<((rt1.c4))))OR((- (rt1.c4)))))AND((vt0.c0 IN ()))))OR(((x'59f2') IS FALSE))))OR(CASE rt1.c1  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c3 END)))AND(((((rt1.c2)OR(vt0.c0)))AND(vt0.c1)))))OR(((((rt0.c0)AND(rt1.c2)))OR(rt1.c0))))) GROUP BY rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2 UNION SELECT ALL rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2 FROM rt0, rt1, vt0 WHERE ((NOT ((((((((((((((((rt1.c1))<((rt1.c4))))OR((- (rt1.c4)))))AND((vt0.c0 IN ()))))OR(((x'59f2') IS FALSE))))OR(CASE rt1.c1  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c3 END)))AND(((((rt1.c2)OR(vt0.c0)))AND(vt0.c1)))))OR(((((rt0.c0)AND(rt1.c2)))OR(rt1.c0))))))) GROUP BY rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2 UNION SELECT rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2 FROM rt0, rt1, vt0 WHERE ((((((((((((((((((rt1.c1))<((rt1.c4))))OR((- (rt1.c4)))))AND((vt0.c0 IN ()))))OR(((x'59f2') IS FALSE))))OR(CASE rt1.c1  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c3 END)))AND(((((rt1.c2)OR(vt0.c0)))AND(vt0.c1)))))OR(((((rt0.c0)AND(rt1.c2)))OR(rt1.c0))))) ISNULL)) GROUP BY rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2;
SELECT ALL rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c1, rt1.c1, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt1.c3, rt1.c2, rt0.c2;
SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4;
SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4 HAVING ((rt1.c0)LIKE(rt1.c4)) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4 HAVING (NOT (((rt1.c0)LIKE(rt1.c4)) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4 HAVING ((((rt1.c0)LIKE(rt1.c4)) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4;
SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4 HAVING ((rt1.c0)LIKE(rt1.c4)) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4 HAVING (NOT (((rt1.c0)LIKE(rt1.c4)) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4 HAVING ((((rt1.c0)LIKE(rt1.c4)) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c2, rt1.c0, rt1.c4 FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))<((0.9779058445675384))))) CROSS JOIN rt1 ON rt0.c1 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt1.c4;
SELECT ALL * FROM rt1 INNER JOIN rt0 ON rt1.c0;
SELECT * FROM rt1 INNER JOIN rt0 ON rt1.c0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN LTRIM(rt0.c3, rt0.c0) THEN ((rt0.c3)OR(rt1.c4)) WHEN ((((0.6841778227871538)OR(rt0.c0)))OR(NULL)) THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt1.c4 AS REAL) THEN CAST(rt0.c0 AS TEXT) ELSE ((rt0.c0)-(rt1.c0)) END) UNION ALL SELECT * FROM rt1 INNER JOIN rt0 ON rt1.c0 WHERE ((NOT (CASE CAST(rt0.c0 AS NUMERIC)  WHEN LTRIM(rt0.c3, rt0.c0) THEN ((rt0.c3)OR(rt1.c4)) WHEN ((((0.6841778227871538)OR(rt0.c0)))OR(NULL)) THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt1.c4 AS REAL) THEN CAST(rt0.c0 AS TEXT) ELSE ((rt0.c0)-(rt1.c0)) END))) UNION ALL SELECT ALL * FROM rt1 INNER JOIN rt0 ON rt1.c0 WHERE (((CASE CAST(rt0.c0 AS NUMERIC)  WHEN LTRIM(rt0.c3, rt0.c0) THEN ((rt0.c3)OR(rt1.c4)) WHEN ((((0.6841778227871538)OR(rt0.c0)))OR(NULL)) THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt1.c4 AS REAL) THEN CAST(rt0.c0 AS TEXT) ELSE ((rt0.c0)-(rt1.c0)) END) ISNULL));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON rt1.c0;
SELECT DISTINCT rt1.c4, rt0.c2, rt0.c0, rt0.c1, rt1.c2, rt1.c0, rt1.c3, rt0.c3, rt1.c1, vt0.c1, vt0.c0 FROM vt0, rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c4, rt0.c2, rt0.c0, rt0.c1, rt1.c2, rt1.c0, rt1.c3, rt0.c3, rt1.c1, vt0.c1, vt0.c0 FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1)))))) UNION SELECT DISTINCT rt1.c4, rt0.c2, rt0.c0, rt0.c1, rt1.c2, rt1.c0, rt1.c3, rt0.c3, rt1.c1, vt0.c1, vt0.c0 FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1)))))))) UNION SELECT DISTINCT rt1.c4, rt0.c2, rt0.c0, rt0.c1, rt1.c2, rt1.c0, rt1.c3, rt0.c3, rt1.c1, vt0.c1, vt0.c0 FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((((((rt0.c3)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1)))))) ISNULL));
SELECT DISTINCT rt1.c4, rt0.c2, rt0.c0, rt0.c1, rt1.c2, rt1.c0, rt1.c3, rt0.c3, rt1.c1, vt0.c1, vt0.c0 FROM vt0, rt0 NATURAL JOIN rt1;
SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt0 WHERE (((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, vt0 WHERE ((NOT (((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, vt0 WHERE (((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c3, rt0.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c3, rt0.c3, rt1.c4, rt1.c0, rt1.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c3, rt0.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c3, rt0.c3, rt1.c4, rt1.c0, rt1.c2 HAVING AVG(((TOTAL(SUM(rt0.c0))) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c3, rt0.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c3, rt0.c3, rt1.c4, rt1.c0, rt1.c2 HAVING (NOT (AVG(((TOTAL(SUM(rt0.c0))) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c3, rt0.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c3, rt0.c3, rt1.c4, rt1.c0, rt1.c2 HAVING ((AVG(((TOTAL(SUM(rt0.c0))) IS FALSE))) ISNULL);
SELECT * FROM vt0, rt1, rt0;
SELECT ALL * FROM vt0, rt1, rt0 WHERE (CAST((0.295473606309159 IN ('og', rt0.c3)) AS INTEGER)) UNION ALL SELECT * FROM vt0, rt1, rt0 WHERE ((NOT (CAST((0.295473606309159 IN ('og', rt0.c3)) AS INTEGER)))) UNION ALL SELECT * FROM vt0, rt1, rt0 WHERE (((CAST((0.295473606309159 IN ('og', rt0.c3)) AS INTEGER)) ISNULL));
SELECT * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0 WHERE (CASE CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c0 IN ()) ELSE rt0.c2 END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c0 IN ()) ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c0 IN ()) ELSE rt0.c2 END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1))<=((rt0.c3))))GLOB((+ (rt0.c3))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1))<=((rt0.c3))))GLOB((+ (rt0.c3))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1))<=((rt0.c3))))GLOB((+ (rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3;
SELECT ALL rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3;
SELECT ALL rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c1, rt0.c1, vt0.c1, rt0.c3;
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON 0.22249314533071995 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt1.c4)OR(vt0.c0)))OR(rt0.c1)) THEN rt0.c2 WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN ((rt1.c0)+(vt0.c1)) THEN (rt1.c3 IN ()) ELSE CAST(rt0.c3 AS BLOB) END;
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON 0.22249314533071995 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt1.c4)OR(vt0.c0)))OR(rt0.c1)) THEN rt0.c2 WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN ((rt1.c0)+(vt0.c1)) THEN (rt1.c3 IN ()) ELSE CAST(rt0.c3 AS BLOB) END WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN rt1 ON 0.22249314533071995 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt1.c4)OR(vt0.c0)))OR(rt0.c1)) THEN rt0.c2 WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN ((rt1.c0)+(vt0.c1)) THEN (rt1.c3 IN ()) ELSE CAST(rt0.c3 AS BLOB) END WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN rt1 ON 0.22249314533071995 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt1.c4)OR(vt0.c0)))OR(rt0.c1)) THEN rt0.c2 WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN ((rt1.c0)+(vt0.c1)) THEN (rt1.c3 IN ()) ELSE CAST(rt0.c3 AS BLOB) END WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON 0.22249314533071995 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt1.c4)OR(vt0.c0)))OR(rt0.c1)) THEN rt0.c2 WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN ((rt1.c0)+(vt0.c1)) THEN (rt1.c3 IN ()) ELSE CAST(rt0.c3 AS BLOB) END;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((NOT (vt0.c1))))!=((vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((NOT (vt0.c1))))<>((vt0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((NOT (vt0.c1))))<>((vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3;
SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (((((((rt1.c1)!=(rt1.c0)))OR(CAST(rt1.c0 AS BLOB))))OR(((rt1.c2)<(rt1.c4))))) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (((((((rt1.c1)<>(rt1.c0)))OR(CAST(rt1.c0 AS BLOB))))OR(((rt1.c2)<(rt1.c4))))))) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3 UNION SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (((((((((rt1.c1)!=(rt1.c0)))OR(CAST(rt1.c0 AS BLOB))))OR(((rt1.c2)<(rt1.c4))))) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3;
SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1, rt1.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING GROUP_CONCAT((((rt0.c1))=((TOTAL(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT((((rt0.c1))=((TOTAL(TOTAL(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT((((rt0.c1))=((TOTAL(TOTAL(rt0.c0))))))) ISNULL);
SELECT ALL rt1.c4, rt0.c3, vt0.c0, rt1.c2 FROM vt0, rt0, rt1;
SELECT ALL rt1.c4, rt0.c3, vt0.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE (TOTAL_CHANGES()) UNION ALL SELECT rt1.c4, rt0.c3, vt0.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT ALL rt1.c4, rt0.c3, vt0.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT ALL rt1.c4, rt0.c3, vt0.c0, rt1.c2 FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt1.c3, rt0.c3, vt0.c1, rt1.c2 FROM vt0 INNER JOIN rt0 ON ((rt1.c1 COLLATE BINARY)/(x'')) RIGHT OUTER JOIN rt1 ON (~ ((((x'6b9ca0ed')) NOT BETWEEN ((rt1.c3)) AND ((NULL)))));
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((((- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (COALESCE(CAST(rt1.c0 AS TEXT), ((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c4)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (COALESCE(CAST(rt1.c0 AS TEXT), ((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c4)))))) UNION ALL SELECT * FROM rt1 WHERE (((COALESCE(CAST(rt1.c0 AS TEXT), ((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c4)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0)*(rt1.c4))) ISNULL)) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE ((NOT (((((rt1.c0)*(rt1.c4))) ISNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0)*(rt1.c4))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c3, rt1.c4 FROM rt1, vt0 INNER JOIN rt0 ON ROUND(((vt0.c0) ISNULL), ((((x'5347')AND(vt0.c1)))AND(rt1.c3))) GROUP BY rt0.c3, rt1.c4;
SELECT rt0.c3, rt1.c4 FROM rt1, vt0 INNER JOIN rt0 ON ROUND(((vt0.c0) ISNULL), ((((x'5347')AND(vt0.c1)))AND(rt1.c3))) WHERE (((((rt0.c1)&(rt0.c1))) IS TRUE)) GROUP BY rt0.c3, rt1.c4 UNION SELECT ALL rt0.c3, rt1.c4 FROM rt1, vt0 INNER JOIN rt0 ON ROUND(((vt0.c0) ISNULL), ((((x'5347')AND(vt0.c1)))AND(rt1.c3))) WHERE ((NOT (((((rt0.c1)&(rt0.c1))) IS TRUE)))) GROUP BY rt0.c3, rt1.c4 UNION SELECT rt0.c3, rt1.c4 FROM rt1, vt0 INNER JOIN rt0 ON ROUND(((vt0.c0) ISNULL), ((((x'5347')AND(vt0.c1)))AND(rt1.c3))) WHERE (((((((rt0.c1)&(rt0.c1))) IS TRUE)) ISNULL)) GROUP BY rt0.c3, rt1.c4;
SELECT rt0.c3, rt1.c4 FROM rt1, vt0 INNER JOIN rt0 ON ROUND(((vt0.c0) ISNULL), ((((x'5347')AND(vt0.c1)))AND(rt1.c3))) GROUP BY rt0.c3, rt1.c4;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING CAST(GROUP_CONCAT(vt0.c1) COLLATE RTRIM AS REAL) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(GROUP_CONCAT(vt0.c1) COLLATE RTRIM AS REAL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((CAST(GROUP_CONCAT(vt0.c1) COLLATE RTRIM AS REAL)) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING CAST(GROUP_CONCAT(vt0.c1) COLLATE RTRIM AS REAL) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(GROUP_CONCAT(vt0.c1) COLLATE RTRIM AS REAL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((CAST(GROUP_CONCAT(vt0.c1) COLLATE RTRIM AS REAL)) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT * FROM vt0, rt1, rt0;
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((((rt1.c1)OR(vt0.c0)))OR(0.7540817702981317)))OR(rt1.c0)))OR(rt1.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, rt1, rt0 WHERE ((NOT (((((((((rt1.c1)OR(vt0.c0)))OR(0.7540817702981317)))OR(rt1.c0)))OR(rt1.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((((((rt1.c1)OR(vt0.c0)))OR(0.7540817702981317)))OR(rt1.c0)))OR(rt1.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, rt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt1.c4, rt0.c1, rt0.c3, rt1.c3, rt1.c1, vt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON NULLIF(DISTINCT (rt1.c1 IN ()), ((vt0.c1)||(vt0.c0))) CROSS JOIN vt0 ON ((rt1.c1 COLLATE BINARY) IS FALSE);
SELECT rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0, rt1 NOT INDEXED WHERE (((CAST(x'8fb9' AS INTEGER)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt1.c4 IN ())))) GROUP BY rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0, rt1 WHERE ((NOT (((CAST(x'8fb9' AS INTEGER)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt1.c4 IN ())))))) GROUP BY rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0, rt1 WHERE (((((CAST(x'8fb9' AS INTEGER)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt1.c4 IN ())))) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt1.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(TRIM(DISTINCT MIN(AVG(GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(TRIM(DISTINCT MIN(AVG(GROUP_CONCAT(vt0.c1))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(TRIM(DISTINCT MIN(AVG(GROUP_CONCAT(vt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt1.c3, rt1.c0, vt0.c0, vt0.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN vt0.c1 ELSE x'' END));
SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt1.c3, rt1.c0, vt0.c0, vt0.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN vt0.c1 ELSE x'' END)) WHERE ((((-1.660047805E9 IN ())) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt1.c3, rt1.c0, vt0.c0, vt0.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN vt0.c1 ELSE x'' END)) WHERE ((NOT ((((-1.660047805E9 IN ())) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt1.c3, rt1.c0, vt0.c0, vt0.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN vt0.c1 ELSE x'' END)) WHERE ((((((-1.660047805E9 IN ())) NOT NULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt1.c3, rt1.c0, vt0.c0, vt0.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN vt0.c1 ELSE x'' END));
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1;
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1 WHERE (((rt1.c1)/(((rt1.c1) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1 WHERE ((NOT (((rt1.c1)/(((rt1.c1) NOTNULL)))))) UNION SELECT DISTINCT vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1 WHERE (((((rt1.c1)/(((rt1.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1;
SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((ABS(DISTINCT vt0.c1))IS NOT(CASE WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((ABS(DISTINCT vt0.c1))IS NOT(CASE WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END))))) GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((ABS(DISTINCT vt0.c1))IS NOT(CASE WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ISNULL)) GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2;
SELECT rt1.c1, vt0.c0, rt1.c0, rt0.c2, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c0 FROM vt0 NOT INDEXED, rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c3)) AS NUMERIC) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt0.c2, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c0;
SELECT rt1.c1, vt0.c0, rt1.c0, rt0.c2, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c0 FROM vt0, rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c3)) AS NUMERIC) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt0.c2, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c0 HAVING SUM(TOTAL(rt1.c4)) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0, rt0.c2, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c0 FROM vt0, rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c3)) AS NUMERIC) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt0.c2, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c0 HAVING (NOT (SUM(TOTAL(rt1.c4)))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0, rt0.c2, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c0 FROM vt0, rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c3)) AS NUMERIC) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt0.c2, vt0.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c0 HAVING ((SUM(TOTAL(rt1.c4))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((((vt0.c1)AND(vt0.c1)))AND(x'')))) AND ((((vt0.c0) IS FALSE))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((((vt0.c1)AND(vt0.c1)))AND(x'')))) AND ((((vt0.c0) IS FALSE))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((((((vt0.c1)AND(vt0.c1)))AND(x'')))) AND ((((vt0.c0) IS FALSE))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((~ (((vt0.c1)=(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c1)=(vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c1)==(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT rt0.c2, rt1.c3, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt0.c1;
SELECT rt0.c2, rt1.c3, rt0.c1 FROM rt0, rt1 WHERE (((((((rt0.c2) IS TRUE))AND(CAST(rt1.c3 AS REAL))))OR(UPPER(DISTINCT rt0.c0)))) GROUP BY rt0.c2, rt1.c3, rt0.c1 UNION SELECT rt0.c2, rt1.c3, rt0.c1 FROM rt0, rt1 WHERE ((NOT (((((((rt0.c2) IS TRUE))AND(CAST(rt1.c3 AS REAL))))OR(UPPER(DISTINCT rt0.c0)))))) GROUP BY rt0.c2, rt1.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt1.c3, rt0.c1 FROM rt0, rt1 WHERE (((((((((rt0.c2) IS TRUE))AND(CAST(rt1.c3 AS REAL))))OR(UPPER(DISTINCT rt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt1.c3, rt0.c1;
SELECT rt0.c2, rt1.c3, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(LIKELY(DISTINCT vt0.c1)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(LIKELY(DISTINCT vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(LIKELY(DISTINCT vt0.c1))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(LIKELY(DISTINCT vt0.c1)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(LIKELY(DISTINCT vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(LIKELY(DISTINCT vt0.c1))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((((NULL, vt0.c0, rt0.c3))!=((vt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END) AND ((((((((('')OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((((NULL, vt0.c0, rt0.c3))!=((vt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END) AND ((((((((('')OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((((NULL, vt0.c0, rt0.c3))!=((vt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END) AND ((((((((('')OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt0, rt0 NOT INDEXED, rt1 WHERE (((((vt0.c1) NOTNULL)) BETWEEN ('kQ#Po') AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN '49486618' THEN rt1.c3 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c1 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt0, rt0, rt1 WHERE ((NOT (((((vt0.c1) NOTNULL)) BETWEEN ('kQ#Po') AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN '49486618' THEN rt1.c3 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c1 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt0, rt0, rt1 WHERE (((((((vt0.c1) NOTNULL)) BETWEEN ('kQ#Po') AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN '49486618' THEN rt1.c3 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt0, rt0, rt1;
SELECT rt1.c1, rt1.c4, rt0.c1, rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt1.c1, rt1.c4, rt0.c1, rt0.c2;
SELECT ALL rt1.c1, rt1.c4, rt0.c1, rt0.c2 FROM rt0, vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((x'')))) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (rt0.c1 COLLATE BINARY))) GROUP BY rt1.c1, rt1.c4, rt0.c1, rt0.c2 UNION SELECT rt1.c1, rt1.c4, rt0.c1, rt0.c2 FROM rt0, vt0, rt1 WHERE ((NOT ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((x'')))) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (rt0.c1 COLLATE BINARY))))) GROUP BY rt1.c1, rt1.c4, rt0.c1, rt0.c2 UNION SELECT rt1.c1, rt1.c4, rt0.c1, rt0.c2 FROM rt0, vt0, rt1 WHERE ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((x'')))) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c1, rt1.c4, rt0.c1, rt0.c2;
SELECT rt1.c1, rt1.c4, rt0.c1, rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt1.c1, rt1.c4, rt0.c1, rt0.c2;
SELECT rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING SUM(((vt0.c1) NOT NULL)) UNION ALL SELECT rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (SUM(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((SUM(((vt0.c1) NOT NULL))) ISNULL);
SELECT rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING SUM(((vt0.c1) NOT NULL)) UNION ALL SELECT rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (SUM(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((SUM(((vt0.c1) NOT NULL))) ISNULL);
SELECT rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT (NOT (rt0.c0)), 0.8933308512013282)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (NOT (rt0.c0)), 0.8933308512013282)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT (NOT (rt0.c0)), 0.8933308512013282)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0 FROM rt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE WHEN TRIM(rt0.c2) THEN NULL WHEN ((rt1.c1)>>(rt0.c0)) THEN UPPER(rt0.c0) WHEN CAST(rt0.c2 AS REAL) THEN '渼?*' ELSE ((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) END;
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN rt0 ON CASE WHEN TRIM(rt0.c2) THEN NULL WHEN ((rt1.c1)>>(rt0.c0)) THEN UPPER(rt0.c0) WHEN CAST(rt0.c2 AS REAL) THEN '渼?*' ELSE ((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) END WHERE (NULL) UNION SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN rt0 ON CASE WHEN TRIM(rt0.c2) THEN NULL WHEN ((rt1.c1)>>(rt0.c0)) THEN UPPER(rt0.c0) WHEN CAST(rt0.c2 AS REAL) THEN '渼?*' ELSE ((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) END WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN rt0 ON CASE WHEN TRIM(rt0.c2) THEN NULL WHEN ((rt1.c1)>>(rt0.c0)) THEN UPPER(rt0.c0) WHEN CAST(rt0.c2 AS REAL) THEN '渼?*' ELSE ((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) END WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0 FROM rt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE WHEN TRIM(rt0.c2) THEN NULL WHEN ((rt1.c1)>>(rt0.c0)) THEN UPPER(rt0.c0) WHEN CAST(rt0.c2 AS REAL) THEN '渼?*' ELSE ((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) END;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE ((rt0.c3 IN ())) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE ((((rt0.c3 IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(AVG(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(AVG(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(AVG(rt0.c1))) ISNULL);
SELECT TOTAL(((0.8244585308734884) NOT NULL)) FROM rt0, rt1, vt0 ORDER BY ((((rt0.c0) IS FALSE))GLOB(rt0.c2 COLLATE BINARY)) DESC;
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c1 IN ()) IN ())) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((rt1.c1 IN ()) IN ())))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((rt1.c1 IN ()) IN ())) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((NULL) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((NOT (((NULL) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((((NULL) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE ((rt1.c3 IN (rt1.c1)) COLLATE RTRIM) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT ((rt1.c3 IN (rt1.c1)) COLLATE RTRIM))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((((rt1.c3 IN (rt1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(UNLIKELY(DISTINCT MIN(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(UNLIKELY(DISTINCT MIN(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(UNLIKELY(DISTINCT MIN(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT MAX(CASE ''  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) ISNULL) ELSE 0.3609574105238609 END) FROM vt0;
SELECT ALL rt0.c0, rt0.c1, rt1.c2, rt1.c3, rt1.c1, rt1.c0, rt0.c3, rt0.c2 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (~ ((('-538598563') IS FALSE)));
SELECT ALL rt0.c0, rt0.c1, rt1.c2, rt1.c3, rt1.c1, rt1.c0, rt0.c3, rt0.c2 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (~ ((('-538598563') IS FALSE))) WHERE (CAST(CAST(rt0.c3 AS NUMERIC) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt1.c2, rt1.c3, rt1.c1, rt1.c0, rt0.c3, rt0.c2 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (~ ((('-538598563') IS FALSE))) WHERE ((NOT (CAST(CAST(rt0.c3 AS NUMERIC) AS TEXT)))) UNION ALL SELECT rt0.c0, rt0.c1, rt1.c2, rt1.c3, rt1.c1, rt1.c0, rt0.c3, rt0.c2 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (~ ((('-538598563') IS FALSE))) WHERE (((CAST(CAST(rt0.c3 AS NUMERIC) AS TEXT)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt1.c2, rt1.c3, rt1.c1, rt1.c0, rt0.c3, rt0.c2 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (~ ((('-538598563') IS FALSE)));
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c3 FROM rt1, rt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c3 FROM rt1, rt0 WHERE ((- (CAST(rt1.c4 AS REAL)))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c3 FROM rt1, rt0 WHERE ((NOT ((- (CAST(rt1.c4 AS REAL)))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c3 FROM rt1, rt0 WHERE ((((- (CAST(rt1.c4 AS REAL)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c3 FROM rt1, rt0;
SELECT rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt1.c2, vt0.c0, rt0.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c2)AND(CAST(rt0.c1 AS TEXT))))OR((NOT (NULL)))) CROSS JOIN rt0 ON (+ ((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))) GROUP BY rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt1.c2, vt0.c0, rt0.c0, rt1.c1;
SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(rt0.c0))>>(MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((MAX(rt0.c0))>>(MAX(COUNT(*)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((MAX(rt0.c0))>>(MAX(COUNT(*))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((((((vt0.c1)IS NOT(rt0.c0))))<=((((vt0.c0)<(rt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((((vt0.c1)IS NOT(rt0.c0))))<=((((vt0.c0)<(rt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((((vt0.c1)IS NOT(rt0.c0))))<=((((vt0.c0)<(rt0.c0)))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt1.c4 FROM vt0, rt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt1.c4 FROM vt0, rt0, rt1 WHERE (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c0 END)AND(((((rt1.c4)OR(rt0.c3)))AND(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c3))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt1.c4 FROM vt0, rt0, rt1 WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c0 END)AND(((((rt1.c4)OR(rt0.c3)))AND(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c3))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt1.c4 FROM vt0, rt0, rt1 WHERE (((((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c0 END)AND(((((rt1.c4)OR(rt0.c3)))AND(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt1.c4 FROM vt0, rt0, rt1;
SELECT rt1.c1 FROM rt1, rt0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, rt0 WHERE (((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c1)))OR(rt0.c1)))GLOB((((rt1.c3, rt0.c0, 0x23df37c6))==((rt1.c3, rt0.c1, rt0.c3)))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, rt0 WHERE ((NOT (((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c1)))OR(rt0.c1)))GLOB((((rt1.c3, rt0.c0, 0X23df37c6))==((rt1.c3, rt0.c1, rt0.c3)))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, rt0 WHERE (((((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c1)))OR(rt0.c1)))GLOB((((rt1.c3, rt0.c0, 0X23df37c6))=((rt1.c3, rt0.c1, rt0.c3)))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, rt0 GROUP BY rt1.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c0) THEN COUNT(MAX(rt0.c3)) WHEN 'zmOQ' COLLATE BINARY THEN ((AVG(vt0.c1)) NOT BETWEEN (rt0.c2) AND (AVG(rt0.c1))) WHEN (('[]')>>(rt0.c0)) THEN 0.6688730495152881 ELSE MIN(rt0.c3) END UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING (NOT (CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c0) THEN COUNT(MAX(rt0.c3)) WHEN 'zmOQ' COLLATE BINARY THEN ((AVG(vt0.c1)) NOT BETWEEN (rt0.c2) AND (AVG(rt0.c1))) WHEN (('[]')>>(rt0.c0)) THEN 0.6688730495152881 ELSE MIN(rt0.c3) END)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING ((CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c0) THEN COUNT(MAX(rt0.c3)) WHEN 'zmOQ' COLLATE BINARY THEN ((AVG(vt0.c1)) NOT BETWEEN (rt0.c2) AND (AVG(rt0.c1))) WHEN (('[]')>>(rt0.c0)) THEN 0.6688730495152881 ELSE MIN(rt0.c3) END) ISNULL);
SELECT * FROM rt0, rt1, vt0;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (rt1.c3) UNION ALL SELECT * FROM rt0, rt1, vt0 WHERE ((NOT (rt1.c3))) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE (((rt1.c3) ISNULL));
SELECT * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c0)<>(rt0.c2)) IN (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)), 3.23567357E8)) LEFT OUTER JOIN rt1 ON ((((rt0.c1) IS FALSE)) BETWEEN ((~ (rt1.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt1.c0 END));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c0)!=(rt0.c2)) IN (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)), 3.23567357E8)) LEFT OUTER JOIN rt1 ON ((((rt0.c1) IS FALSE)) BETWEEN ((~ (rt1.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt1.c0 END)) WHERE ((((rt0.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE rt1.c2 END, (rt1.c0 IN ()), CAST(vt0.c0 AS TEXT))) AND ((((rt1.c0)|(x'')), CASE rt1.c0  WHEN '1812476458' THEN rt0.c0 ELSE vt0.c0 END, vt0.c1)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c0)!=(rt0.c2)) IN (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)), 3.23567357E8)) LEFT OUTER JOIN rt1 ON ((((rt0.c1) IS FALSE)) BETWEEN ((~ (rt1.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt1.c0 END)) WHERE ((NOT ((((rt0.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE rt1.c2 END, (rt1.c0 IN ()), CAST(vt0.c0 AS TEXT))) AND ((((rt1.c0)|(x'')), CASE rt1.c0  WHEN '1812476458' THEN rt0.c0 ELSE vt0.c0 END, vt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c0)!=(rt0.c2)) IN (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)), 3.23567357E8)) LEFT OUTER JOIN rt1 ON ((((rt0.c1) IS FALSE)) BETWEEN ((~ (rt1.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt1.c0 END)) WHERE ((((((rt0.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE rt1.c2 END, (rt1.c0 IN ()), CAST(vt0.c0 AS TEXT))) AND ((((rt1.c0)|(x'')), CASE rt1.c0  WHEN '1812476458' THEN rt0.c0 ELSE vt0.c0 END, vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c0)<>(rt0.c2)) IN (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)), 3.23567357E8)) LEFT OUTER JOIN rt1 ON ((((rt0.c1) IS FALSE)) BETWEEN ((~ (rt1.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt1.c0 END));
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((NOT (rt0.c0)) IN ((+ (rt0.c0))))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((NOT (rt0.c0)) IN ((+ (rt0.c0))))))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((((NOT (rt0.c0)) IN ((+ (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3;
SELECT rt0.c1, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING CAST(MIN(AVG(AVG(rt0.c0))) AS NUMERIC) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING (NOT (CAST(MIN(AVG(AVG(rt0.c0))) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING ((CAST(MIN(AVG(AVG(rt0.c0))) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1, 0.41860603707187016, rt0.c1)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (((x'eb3d')<=(rt0.c2))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1, 0.41860603707187016, rt0.c1)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (((x'eb3d')<=(rt0.c2))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1, 0.41860603707187016, rt0.c1)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (((x'eb3d')<=(rt0.c2))))) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((- (rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((- (rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((((- (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((x'b2d1' COLLATE BINARY)<>(CASE 0.23312180531397775  WHEN rt1.c4 THEN rt1.c2 END))) GROUP BY vt0.c0, rt1.c0, rt1.c1 UNION SELECT vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (((x'b2d1' COLLATE BINARY)!=(CASE 0.23312180531397775  WHEN rt1.c4 THEN rt1.c2 END))))) GROUP BY vt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((((x'b2d1' COLLATE BINARY)!=(CASE 0.23312180531397775  WHEN rt1.c4 THEN rt1.c2 END))) ISNULL)) GROUP BY vt0.c0, rt1.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING 661017841 UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (661017841)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((661017841) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING 661017841 UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (661017841)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((661017841) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT * FROM vt0, rt0, rt1;
SELECT * FROM vt0, rt0, rt1 WHERE ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)) IN ())) UNION ALL SELECT ALL * FROM vt0, rt0, rt1 WHERE ((NOT ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, rt1 WHERE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)) IN ())) ISNULL));
SELECT * FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM rt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)OR(rt1.c0)))AND(rt0.c3))  WHEN (- (rt1.c1)) THEN (- (rt0.c2)) END;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)OR(rt1.c0)))AND(rt0.c3))  WHEN (- (rt1.c1)) THEN (- (rt0.c2)) END WHERE ((((x''))<>((((rt1.c1)<(rt0.c3)))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)OR(rt1.c0)))AND(rt0.c3))  WHEN (- (rt1.c1)) THEN (- (rt0.c2)) END WHERE ((NOT ((((x''))<>((((rt1.c1)<(rt0.c3)))))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)OR(rt1.c0)))AND(rt0.c3))  WHEN (- (rt1.c1)) THEN (- (rt0.c2)) END WHERE ((((((x''))!=((((rt1.c1)<(rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)OR(rt1.c0)))AND(rt0.c3))  WHEN (- (rt1.c1)) THEN (- (rt0.c2)) END;
SELECT ALL rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0;
SELECT rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((((rt1.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c3))) COLLATE BINARY) GROUP BY rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 UNION SELECT rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((NOT ((((rt1.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c3))) COLLATE BINARY))) GROUP BY rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 UNION SELECT rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((((((rt1.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c3))) COLLATE BINARY) ISNULL)) GROUP BY rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c4, rt1.c2, vt0.c1, vt0.c0, rt1.c1, rt1.c0;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING MAX(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((MAX(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT vt0.c1, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT vt0.c1, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE (ROUND(rt1.c1, (~ (rt1.c2)))) UNION SELECT DISTINCT vt0.c1, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE ((NOT (ROUND(rt1.c1, (~ (rt1.c2)))))) UNION SELECT DISTINCT vt0.c1, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE (((ROUND(rt1.c1, (~ (rt1.c2)))) ISNULL));
SELECT DISTINCT vt0.c1, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 COLLATE NOCASE END) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 COLLATE NOCASE END))) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2;
SELECT rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2 HAVING GROUP_CONCAT(((rt0.c0)<>(vt0.c0))) UNION ALL SELECT rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c0)!=(vt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c0)<>(vt0.c0)))) ISNULL);
SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2;
SELECT rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2 HAVING GROUP_CONCAT(((rt0.c0)<>(vt0.c0))) UNION ALL SELECT rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c0)!=(vt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c0)<>(vt0.c0)))) ISNULL);
SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt1.c0, rt0.c2;
SELECT * FROM rt0 NOT INDEXED, rt1, vt0;
SELECT * FROM rt0, rt1, vt0 WHERE (CAST(((rt1.c3) ISNULL) AS INTEGER)) UNION ALL SELECT * FROM rt0, rt1, vt0 WHERE ((NOT (CAST(((rt1.c3) ISNULL) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE (((CAST(((rt1.c3) ISNULL) AS INTEGER)) ISNULL));
SELECT * FROM rt0 NOT INDEXED, rt1, vt0;
SELECT DISTINCT rt1.c4 FROM rt0, vt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c4 FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((((((vt0.c0, rt1.c4, rt0.c0))<>((rt0.c0, vt0.c0, rt0.c1)))) ISNULL)) UNION SELECT DISTINCT rt1.c4 FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((NOT ((((((vt0.c0, rt1.c4, rt0.c0))<>((rt0.c0, vt0.c0, rt0.c1)))) ISNULL)))) UNION SELECT DISTINCT rt1.c4 FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((((((((vt0.c0, rt1.c4, rt0.c0))!=((rt0.c0, vt0.c0, rt0.c1)))) ISNULL)) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt0, vt0 NATURAL JOIN rt1;
SELECT vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4 FROM rt1, rt0 INNER JOIN vt0 ON (((~ (rt0.c1)))OR((1795391818 IN (NULL)))) GROUP BY vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4;
SELECT vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4 FROM rt1, rt0 INNER JOIN vt0 ON (((~ (rt0.c1)))OR((1795391818 IN (NULL)))) WHERE (CAST(json_array_length(rt0.c3) AS TEXT)) GROUP BY vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4 UNION SELECT vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4 FROM rt1, rt0 INNER JOIN vt0 ON (((~ (rt0.c1)))OR((1795391818 IN (NULL)))) WHERE ((NOT (CAST(json_array_length(rt0.c3) AS TEXT)))) GROUP BY vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4 UNION SELECT vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4 FROM rt1, rt0 INNER JOIN vt0 ON (((~ (rt0.c1)))OR((1795391818 IN (NULL)))) WHERE (((CAST(json_array_length(rt0.c3) AS TEXT)) ISNULL)) GROUP BY vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4;
SELECT vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4 FROM rt1, rt0 INNER JOIN vt0 ON (((~ (rt0.c1)))OR((1795391818 IN (NULL)))) GROUP BY vt0.c0, rt1.c1, vt0.c1, rt0.c3, rt0.c2, rt1.c2, rt1.c4;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(TOTAL(SUM(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(TOTAL(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(TOTAL(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt0.c2) AND ('8*'))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((~ (((rt0.c1) BETWEEN (rt0.c2) AND ('8*'))))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((((~ (((rt0.c1) BETWEEN (rt0.c2) AND ('8*'))))) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((((-1111632922))>=((vt0.c1))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c1)+(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((-1111632922))>=((vt0.c1))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c1)+(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((((((-1111632922))>=((vt0.c1))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c1)+(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 ELSE x'' END IN ()) GROUP BY rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2;
SELECT rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 ELSE x'' END IN ()) WHERE (((((rt0.c3) NOT BETWEEN (NULL) AND (vt0.c0)))!=(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) GROUP BY rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2 UNION SELECT ALL rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 ELSE x'' END IN ()) WHERE ((NOT (((((rt0.c3) NOT BETWEEN (NULL) AND (vt0.c0)))!=(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))))) GROUP BY rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2 UNION SELECT rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 ELSE x'' END IN ()) WHERE (((((((rt0.c3) NOT BETWEEN (NULL) AND (vt0.c0)))!=(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2;
SELECT rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 ELSE x'' END IN ()) GROUP BY rt0.c1, rt1.c0, vt0.c0, rt1.c1, rt0.c3, rt1.c3, rt0.c0, rt1.c4, vt0.c1, rt0.c2, rt1.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT ((((rt0.c2)OR('1979431014')))OR(rt0.c3))) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT ((((rt0.c2)OR('1979431014')))OR(rt0.c3))) GROUP BY rt0.c0, rt0.c2 HAVING AVG(((((((((((((rt1.c2)AND(AVG(rt0.c3))))OR(COUNT(*))))OR(GROUP_CONCAT(vt0.c0))))OR(COUNT(COUNT(MIN(rt1.c1))))))OR(COUNT(MAX(COUNT(*))))))AND(AVG(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT ((((rt0.c2)OR('1979431014')))OR(rt0.c3))) GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(((((((((((((rt1.c2)AND(AVG(rt0.c3))))OR(COUNT(*))))OR(GROUP_CONCAT(vt0.c0))))OR(COUNT(COUNT(MIN(rt1.c1))))))OR(COUNT(MAX(COUNT(*))))))AND(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT ((((rt0.c2)OR('1979431014')))OR(rt0.c3))) GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(((((((((((((rt1.c2)AND(AVG(rt0.c3))))OR(COUNT(*))))OR(GROUP_CONCAT(vt0.c0))))OR(COUNT(COUNT(MIN(rt1.c1))))))OR(COUNT(MAX(COUNT(*))))))AND(AVG(rt0.c2))))) ISNULL);
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (CASE -4.42519728E8  WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN ((rt1.c4) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE rt1.c0 END) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (CASE -4.42519728E8  WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN ((rt1.c4) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE rt1.c0 END))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((CASE -4.42519728E8  WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN ((rt1.c4) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE rt1.c0 END) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c1, rt1.c4, rt0.c3, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 0.36456832255061167 CROSS JOIN rt1 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt1.c0)>>(rt0.c1)) ELSE 326105554 END;
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c1, rt1.c4, rt0.c3, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 0.36456832255061167 CROSS JOIN rt1 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt1.c0)>>(rt0.c1)) ELSE 326105554 END WHERE (((CASE rt1.c0  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END)GLOB((rt1.c1 IN (rt0.c1))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c1, rt1.c4, rt0.c3, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 0.36456832255061167 CROSS JOIN rt1 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt1.c0)>>(rt0.c1)) ELSE 326105554 END WHERE ((NOT (((CASE rt1.c0  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END)GLOB((rt1.c1 IN (rt0.c1))))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c1, rt1.c4, rt0.c3, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 0.36456832255061167 CROSS JOIN rt1 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt1.c0)>>(rt0.c1)) ELSE 326105554 END WHERE (((((CASE rt1.c0  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END)GLOB((rt1.c1 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c1, rt1.c4, rt0.c3, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 0.36456832255061167 CROSS JOIN rt1 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt1.c0)>>(rt0.c1)) ELSE 326105554 END;
SELECT rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2;
SELECT ALL rt1.c4, rt1.c3, rt1.c2 FROM rt1 WHERE (rt1.c4) GROUP BY rt1.c4, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c4, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (rt1.c4))) GROUP BY rt1.c4, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c4, rt1.c3, rt1.c2 FROM rt1 WHERE (((rt1.c4) ISNULL)) GROUP BY rt1.c4, rt1.c3, rt1.c2;
SELECT rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1 HAVING ((MIN(GROUP_CONCAT(TOTAL(NULL))))%(((GROUP_CONCAT(COUNT(MIN(rt0.c2))))GLOB(rt0.c3)))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1 HAVING (NOT (((MIN(GROUP_CONCAT(TOTAL(NULL))))%(((GROUP_CONCAT(COUNT(MIN(rt0.c2))))GLOB(rt0.c3)))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1 HAVING ((((MIN(GROUP_CONCAT(TOTAL(NULL))))%(((GROUP_CONCAT(COUNT(MIN(rt0.c2))))GLOB(rt0.c3))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(0.46563427177899985)))OR((- (vt0.c1)))))OR((NOT (vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(0.46563427177899985)))OR((- (vt0.c1)))))OR((NOT (vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(0.46563427177899985)))OR((- (vt0.c1)))))OR((NOT (vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) NOT NULL) END) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) NOT NULL) END))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c2 AS BLOB) AS REAL) CROSS JOIN rt0 ON (((rt1.c0 IN ()))IS((((vt0.c0, '', rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, vt0.c0, rt0.c0))))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c2 AS BLOB) AS REAL) CROSS JOIN rt0 ON (((rt1.c0 IN ()))IS((((vt0.c0, '', rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, vt0.c0, rt0.c0))))) WHERE (((rt0.c1)/(rt1.c1)) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c2 AS BLOB) AS REAL) CROSS JOIN rt0 ON (((rt1.c0 IN ()))IS((((vt0.c0, '', rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, vt0.c0, rt0.c0))))) WHERE ((NOT (((rt0.c1)/(rt1.c1)) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c2 AS BLOB) AS REAL) CROSS JOIN rt0 ON (((rt1.c0 IN ()))IS((((vt0.c0, '', rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, vt0.c0, rt0.c0))))) WHERE (((((rt0.c1)/(rt1.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c2 AS BLOB) AS REAL) CROSS JOIN rt0 ON (((rt1.c0 IN ()))IS((((vt0.c0, '', rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c4, vt0.c0, rt0.c0))))) GROUP BY rt0.c0;
SELECT rt1.c0, rt1.c4, rt0.c2, vt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c3)GLOB(rt1.c4)))>>((('癳F')AND(rt1.c0)))) GROUP BY rt1.c0, rt1.c4, rt0.c2, vt0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c4, rt0.c2, vt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c3)GLOB(rt1.c4)))>>((('癳F')AND(rt1.c0)))) GROUP BY rt1.c0, rt1.c4, rt0.c2, vt0.c0, rt1.c1 HAVING ((MIN(SUM(AVG(MIN(COUNT(*)))))) IS TRUE) UNION ALL SELECT rt1.c0, rt1.c4, rt0.c2, vt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c3)GLOB(rt1.c4)))>>((('癳F')AND(rt1.c0)))) GROUP BY rt1.c0, rt1.c4, rt0.c2, vt0.c0, rt1.c1 HAVING (NOT (((MIN(SUM(AVG(MIN(COUNT(*)))))) IS TRUE))) UNION ALL SELECT rt1.c0, rt1.c4, rt0.c2, vt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c3)GLOB(rt1.c4)))>>((('癳F')AND(rt1.c0)))) GROUP BY rt1.c0, rt1.c4, rt0.c2, vt0.c0, rt1.c1 HAVING ((((MIN(SUM(AVG(MIN(COUNT(*)))))) IS TRUE)) ISNULL);
SELECT ALL SUM(TRIM(DISTINCT CASE vt0.c0  WHEN '-997818093' THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c3 END)) FROM vt0, rt0, rt1 ORDER BY (((vt0.c1) IS TRUE) IN ()) ASC, (((rt1.c1)) BETWEEN (((- (rt0.c2)))) AND (((('-1669303622')<(rt1.c4)))))  NULLS FIRST, ((rt1.c4)>(rt0.c1)) COLLATE RTRIM ASC;
SELECT ALL * FROM rt1, vt0, rt0;
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt0.c3) UNION ALL SELECT * FROM rt1, vt0, rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL * FROM rt1, vt0, rt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL * FROM rt1, vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE ((NOT (CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE (((CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, rt1;
SELECT rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1 FROM rt1, rt0, vt0 WHERE (((NOT (rt1.c0)) IN (x''))) GROUP BY rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1 UNION SELECT rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1 FROM rt1, rt0, vt0 WHERE ((NOT (((NOT (rt1.c0)) IN (x''))))) GROUP BY rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1 FROM rt1, rt0, vt0 WHERE (((((NOT (rt1.c0)) IN (x''))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1;
SELECT rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c2, rt0.c3, rt1.c3, rt0.c1, rt1.c1, vt0.c1;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING MIN(TOTAL(vt0.c1)) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (MIN(TOTAL(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING ((MIN(TOTAL(vt0.c1))) ISNULL);
SELECT rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0;
SELECT ALL rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE ((- (rt1.c4 COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE ((NOT ((- (rt1.c4 COLLATE NOCASE))))) UNION ALL SELECT rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE ((((- (rt1.c4 COLLATE NOCASE))) ISNULL));
SELECT rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c2)IS NOT(rt0.c3)))))AND(((rt0.c0)>=(rt0.c2))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c2)IS NOT(rt0.c3)))))AND(((rt0.c0)>=(rt0.c2)))) WHERE (CASE ((rt0.c1)IS NOT(rt0.c2))  WHEN ((((vt0.c1)OR(rt0.c3)))OR('')) THEN (- (rt0.c2)) WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c0)) THEN load_extension(vt0.c1, rt0.c0) WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOTNULL) WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN x'' END WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2) NOTNULL) END) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c2)IS NOT(rt0.c3)))))AND(((rt0.c0)>=(rt0.c2)))) WHERE ((NOT (CASE ((rt0.c1)IS NOT(rt0.c2))  WHEN ((((vt0.c1)OR(rt0.c3)))OR('')) THEN (- (rt0.c2)) WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c0)) THEN load_extension(vt0.c1, rt0.c0) WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOTNULL) WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN x'' END WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2) NOTNULL) END))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c2)IS NOT(rt0.c3)))))AND(((rt0.c0)>=(rt0.c2)))) WHERE (((CASE ((rt0.c1)IS NOT(rt0.c2))  WHEN ((((vt0.c1)OR(rt0.c3)))OR('')) THEN (- (rt0.c2)) WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c0)) THEN load_extension(vt0.c1, rt0.c0) WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOTNULL) WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN x'' END WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c2)IS NOT(rt0.c3)))))AND(((rt0.c0)>=(rt0.c2))));
SELECT ALL rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3;
SELECT ALL rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3 FROM rt1, vt0, rt0 WHERE (((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))OR(vt0.c1 COLLATE BINARY)))AND(rt1.c3 COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3 UNION SELECT rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3 FROM rt1, vt0, rt0 WHERE ((NOT (((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))OR(vt0.c1 COLLATE BINARY)))AND(rt1.c3 COLLATE NOCASE))))) GROUP BY rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3 UNION SELECT ALL rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3 FROM rt1, vt0, rt0 WHERE (((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))OR(vt0.c1 COLLATE BINARY)))AND(rt1.c3 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3;
SELECT ALL rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c1, vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c0, vt0.c1, rt1.c3;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(vt0.c1)))AND(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE BINARY)AND(vt0.c1)))AND(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0 COLLATE BINARY)AND(vt0.c1)))AND(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1 WHERE ((+ (rt1.c3))) GROUP BY rt1.c4 UNION SELECT rt1.c4 FROM rt1 WHERE ((NOT ((+ (rt1.c3))))) GROUP BY rt1.c4 UNION SELECT rt1.c4 FROM rt1 WHERE ((((+ (rt1.c3))) ISNULL)) GROUP BY rt1.c4;
SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT ALL vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0 NOT INDEXED, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0 NOT INDEXED, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY vt0.c1, rt1.c4, vt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c3, rt1.c1, rt1.c2, rt0.c2, rt0.c0;
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (NULL) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt0, rt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt0, rt1 WHERE (((CASE rt0.c3  WHEN '555969352' THEN vt0.c0 WHEN 0Xffffffffba423283 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 END)>((rt1.c1 IN ())))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0, rt1 WHERE ((NOT (((CASE rt0.c3  WHEN '555969352' THEN vt0.c0 WHEN 0xffffffffba423283 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 END)>((rt1.c1 IN ())))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0, rt1 WHERE (((((CASE rt0.c3  WHEN '555969352' THEN vt0.c0 WHEN 0xffffffffba423283 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 END)>((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0, rt1;
SELECT ALL rt1.c0, rt1.c4 FROM rt1 CROSS JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) GROUP BY rt1.c0, rt1.c4;
SELECT ALL rt1.c0, rt1.c4 FROM rt1 CROSS JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) WHERE (CASE ((rt1.c2) NOT NULL)  WHEN ((rt0.c3)GLOB(rt1.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (1890753991)) END) GROUP BY rt1.c0, rt1.c4 UNION SELECT rt1.c0, rt1.c4 FROM rt1 NOT INDEXED CROSS JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) WHERE ((NOT (CASE ((rt1.c2) NOT NULL)  WHEN ((rt0.c3)GLOB(rt1.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (1890753991)) END))) GROUP BY rt1.c0, rt1.c4 UNION SELECT rt1.c0, rt1.c4 FROM rt1 CROSS JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) WHERE (((CASE ((rt1.c2) NOT NULL)  WHEN ((rt0.c3)GLOB(rt1.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (1890753991)) END) ISNULL)) GROUP BY rt1.c0, rt1.c4;
SELECT ALL rt1.c0, rt1.c4 FROM rt1 CROSS JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) GROUP BY rt1.c0, rt1.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING MAX(AVG(COUNT(SUM(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (MAX(AVG(COUNT(SUM(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((MAX(AVG(COUNT(SUM(rt0.c2))))) ISNULL);
SELECT vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((+ (vt0.c1))) AND (((rt0.c1)/(rt0.c3))))) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((+ (vt0.c1))) AND (((rt0.c1)/(rt0.c3))))))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((+ (vt0.c1))) AND (((rt0.c1)/(rt0.c3))))) ISNULL));
SELECT vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0, rt1;
SELECT DISTINCT vt0.c0 FROM rt0, vt0, rt1 WHERE (((((((((CAST(rt0.c0 AS BLOB))OR((((rt1.c0)) BETWEEN (('Yr')) AND ((rt0.c2))))))OR(x'')))OR(((rt0.c2) IS FALSE))))OR((rt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0, rt1 WHERE ((NOT (((((((((CAST(rt0.c0 AS BLOB))OR((((rt1.c0)) BETWEEN (('Yr')) AND ((rt0.c2))))))OR(x'')))OR(((rt0.c2) IS FALSE))))OR((rt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0, rt1 WHERE (((((((((((CAST(rt0.c0 AS BLOB))OR((((rt1.c0)) BETWEEN (('Yr')) AND ((rt0.c2))))))OR(x'')))OR(((rt0.c2) IS FALSE))))OR((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0, rt1;
SELECT rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4;
SELECT ALL rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE (((((((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))OR((rt1.c0 IN ()))))OR(rt1.c4))) GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 UNION SELECT rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (((((((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))OR((rt1.c0 IN ()))))OR(rt1.c4))))) GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE (((((((((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))OR((rt1.c0 IN ()))))OR(rt1.c4))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4;
SELECT rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0;
SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0;
SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN CASE rt1.c2  WHEN vt0.c0 THEN vt0.c1 ELSE rt1.c0 END THEN (+ (vt0.c1)) END) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (CASE WHEN CASE rt1.c2  WHEN vt0.c0 THEN vt0.c1 ELSE rt1.c0 END THEN (+ (vt0.c1)) END))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((CASE WHEN CASE rt1.c2  WHEN vt0.c0 THEN vt0.c1 ELSE rt1.c0 END THEN (+ (vt0.c1)) END) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) IN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) IN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) IN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0, rt1 WHERE (rt1.c3) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM vt0, rt1 WHERE ((NOT (rt1.c3))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt0, rt1 WHERE (((rt1.c3) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c1, rt1.c2, rt0.c0, rt1.c4, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c4, rt1.c0;
SELECT rt1.c1, rt1.c2, rt0.c0, rt1.c4, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c4, rt1.c0 HAVING ((GROUP_CONCAT(COUNT(vt0.c0)))GLOB(MAX(rt0.c2))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c0, rt1.c4, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c4, rt1.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(vt0.c0)))GLOB(MAX(rt0.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt0.c0, rt1.c4, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c4, rt1.c0 HAVING ((((GROUP_CONCAT(COUNT(vt0.c0)))GLOB(MAX(rt0.c2)))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (rt1.c0)) CROSS JOIN rt1 ON (+ (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 2.95517687E8 WHEN vt0.c1 THEN rt0.c1 ELSE 1112033077 END));
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE (UPPER(DISTINCT rt0.c1 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c1 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE (((UPPER(DISTINCT rt0.c1 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 WHERE (((((rt1.c1)%(rt1.c0))) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3))) AND (rt1.c4 COLLATE NOCASE))) GROUP BY rt1.c0, rt1.c3 UNION SELECT rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c1)%(rt1.c0))) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3))) AND (rt1.c4 COLLATE NOCASE))))) GROUP BY rt1.c0, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c3 FROM rt1 WHERE (((((((rt1.c1)%(rt1.c0))) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3))) AND (rt1.c4 COLLATE NOCASE))) ISNULL)) GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((rt0.c1)) BETWEEN ((MIN(x'40bc'))) AND (((GROUP_CONCAT(MIN(rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((((rt0.c1)) BETWEEN ((MIN(x'40bc'))) AND (((GROUP_CONCAT(MIN(rt0.c2)) IN ())))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((((rt0.c1)) BETWEEN ((MIN(x'40bc'))) AND (((GROUP_CONCAT(MIN(rt0.c2)) IN ()))))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((rt0.c1)) BETWEEN ((MIN(x'40bc'))) AND (((GROUP_CONCAT(MIN(rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((((rt0.c1)) BETWEEN ((MIN(x'40bc'))) AND (((GROUP_CONCAT(MIN(rt0.c2)) IN ())))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((((rt0.c1)) BETWEEN ((MIN(x'40bc'))) AND (((GROUP_CONCAT(MIN(rt0.c2)) IN ()))))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((((+ (rt1.c4))) NOT BETWEEN (NULLIF(rt1.c3, -1.099437028E9)) AND ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c4)))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((+ (rt1.c4))) NOT BETWEEN (NULLIF(rt1.c3, -1.099437028E9)) AND ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c4)))))))) UNION ALL SELECT * FROM rt1 WHERE ((((((+ (rt1.c4))) NOT BETWEEN (NULLIF(rt1.c3, -1.099437028E9)) AND ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c4)))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CHAR(CAST(vt0.c0 AS REAL), COALESCE(DISTINCT vt0.c1, vt0.c1), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CHAR(CAST(vt0.c0 AS REAL), COALESCE(DISTINCT vt0.c1, vt0.c1), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CHAR(CAST(vt0.c0 AS REAL), COALESCE(DISTINCT vt0.c1, vt0.c1), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE ((+ (rt1.c1)) COLLATE RTRIM) GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT ((+ (rt1.c1)) COLLATE RTRIM))) GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE ((((+ (rt1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c1;
SELECT ALL rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0;
SELECT rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0;
SELECT rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c1, rt0.c1, rt1.c4, rt0.c0, rt1.c0, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, rt1.c4, rt0.c3, rt1.c0, rt1.c3, rt1.c2, rt0.c2 FROM vt0, rt1, rt0;
SELECT rt0.c1, rt1.c4, rt0.c3, rt1.c0, rt1.c3, rt1.c2, rt0.c2 FROM vt0, rt1, rt0 WHERE ((- (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) UNION ALL SELECT rt0.c1, rt1.c4, rt0.c3, rt1.c0, rt1.c3, rt1.c2, rt0.c2 FROM vt0, rt1, rt0 WHERE ((NOT ((- (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt1.c4, rt0.c3, rt1.c0, rt1.c3, rt1.c2, rt0.c2 FROM vt0, rt1, rt0 WHERE ((((- (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt1.c4, rt0.c3, rt1.c0, rt1.c3, rt1.c2, rt0.c2 FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3 FROM vt0, rt0, rt1 GROUP BY vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3;
SELECT vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3 FROM vt0, rt0, rt1 WHERE ((NOT (((vt0.c1) BETWEEN (rt1.c1) AND (rt1.c0))))) GROUP BY vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3 UNION SELECT vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3 FROM vt0, rt0, rt1 WHERE ((NOT ((NOT (((vt0.c1) BETWEEN (rt1.c1) AND (rt1.c0))))))) GROUP BY vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3 UNION SELECT ALL vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3 FROM vt0, rt0, rt1 WHERE ((((NOT (((vt0.c1) BETWEEN (rt1.c1) AND (rt1.c0))))) ISNULL)) GROUP BY vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3;
SELECT ALL vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3 FROM vt0, rt0, rt1 GROUP BY vt0.c1, rt0.c3, rt1.c2, rt0.c1, vt0.c0, rt1.c0, rt1.c4, rt0.c2, rt0.c0, rt1.c3;
SELECT rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2;
SELECT ALL rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2 HAVING TOTAL((((rt1.c0)) NOT BETWEEN (('w\垣AI≏')) AND ((vt0.c1)))) UNION ALL SELECT ALL rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2 HAVING (NOT (TOTAL((((rt1.c0)) NOT BETWEEN (('w\垣AI≏')) AND ((vt0.c1)))))) UNION ALL SELECT ALL rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2 HAVING ((TOTAL((((rt1.c0)) NOT BETWEEN (('w\垣AI≏')) AND ((vt0.c1))))) ISNULL);
SELECT rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2;
SELECT ALL rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2 HAVING TOTAL((((rt1.c0)) NOT BETWEEN (('w\垣AI≏')) AND ((vt0.c1)))) UNION ALL SELECT ALL rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2 HAVING (NOT (TOTAL((((rt1.c0)) NOT BETWEEN (('w\垣AI≏')) AND ((vt0.c1)))))) UNION ALL SELECT ALL rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2 HAVING ((TOTAL((((rt1.c0)) NOT BETWEEN (('w\垣AI≏')) AND ((vt0.c1))))) ISNULL);
SELECT rt0.c3, vt0.c0, vt0.c1, rt1.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c3, vt0.c0, vt0.c1, rt1.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((- (rt0.c2))) AND (((rt0.c3)>(rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((- (rt0.c2))) AND (((rt0.c3)>(rt0.c3))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((- (rt0.c2))) AND (((rt0.c3)>(rt0.c3))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt1.c1, rt0.c1, rt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c2, rt1.c3, vt0.c1, rt0.c3, rt1.c4 FROM vt0 INNER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN rt0 ON LIKELY((rt1.c1 IN (rt1.c2)));
SELECT rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4;
SELECT ALL rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4 FROM rt1, rt0 WHERE (((((rt1.c0)%(rt0.c0))) ISNULL)) GROUP BY rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4 UNION SELECT ALL rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4 FROM rt1, rt0 WHERE ((NOT (((((rt1.c0)%(rt0.c0))) ISNULL)))) GROUP BY rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4 UNION SELECT rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4 FROM rt1, rt0 WHERE (((((((rt1.c0)%(rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4;
SELECT rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c3, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c4;
SELECT ALL rt0.c3, rt1.c4, rt0.c2, vt0.c0, vt0.c1, rt1.c1, rt0.c1, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c4, rt0.c2, vt0.c0, vt0.c1, rt1.c1, rt0.c1, rt1.c0;
SELECT rt0.c3, rt1.c4, rt0.c2, vt0.c0, vt0.c1, rt1.c1, rt0.c1, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c4, rt0.c2, vt0.c0, vt0.c1, rt1.c1, rt0.c1, rt1.c0 HAVING CASE WHEN ((vt0.c1)+(TOTAL(SUM(GROUP_CONCAT(COUNT(rt1.c3)))))) THEN COUNT(COUNT(rt1.c0)) END UNION ALL SELECT ALL rt0.c3, rt1.c4, rt0.c2, vt0.c0, vt0.c1, rt1.c1, rt0.c1, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c4, rt0.c2, vt0.c0, vt0.c1, rt1.c1, rt0.c1, rt1.c0 HAVING (NOT (CASE WHEN ((vt0.c1)+(TOTAL(SUM(GROUP_CONCAT(COUNT(rt1.c3)))))) THEN COUNT(COUNT(rt1.c0)) END)) UNION ALL SELECT ALL rt0.c3, rt1.c4, rt0.c2, vt0.c0, vt0.c1, rt1.c1, rt0.c1, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c4, rt0.c2, vt0.c0, vt0.c1, rt1.c1, rt0.c1, rt1.c0 HAVING ((CASE WHEN ((vt0.c1)+(TOTAL(SUM(GROUP_CONCAT(COUNT(rt1.c3)))))) THEN COUNT(COUNT(rt1.c0)) END) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((NULL, rt0.c2, rt0.c0))>((rt0.c3, rt0.c3, rt0.c3)))) NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND (((rt0.c1)>=(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((((NULL, rt0.c2, rt0.c0))>((rt0.c3, rt0.c3, rt0.c3)))) NOT BETWEEN (((rt0.c1)!=(rt0.c2))) AND (((rt0.c1)>=(rt0.c3))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((((NULL, rt0.c2, rt0.c0))>((rt0.c3, rt0.c3, rt0.c3)))) NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND (((rt0.c1)>=(rt0.c3))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE (rt1.c4) UNION SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, vt0;
SELECT ALL rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0;
SELECT ALL rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0 FROM vt0, rt1, rt0 WHERE ((('-1663771132')!=(((x'52b5') BETWEEN (rt0.c2) AND ('0.36456832255061167'))))) GROUP BY rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0 FROM vt0, rt1, rt0 WHERE ((NOT ((('-1663771132')<>(((x'52b5') BETWEEN (rt0.c2) AND ('0.36456832255061167'))))))) GROUP BY rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0 FROM vt0 NOT INDEXED, rt1 NOT INDEXED, rt0 WHERE ((((('-1663771132')<>(((x'52b5') BETWEEN (rt0.c2) AND ('0.36456832255061167'))))) ISNULL)) GROUP BY rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0;
SELECT ALL rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0 FROM vt0, rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt0.c0;
SELECT rt0.c3, vt0.c1 FROM vt0 FULL OUTER JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c3, vt0.c1;
SELECT rt0.c3, vt0.c1 FROM vt0 FULL OUTER JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c3, vt0.c1 HAVING (SUM(TOTAL(rt0.c0)) IN (SUM(rt0.c3))) UNION ALL SELECT ALL rt0.c3, vt0.c1 FROM vt0 FULL OUTER JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c3, vt0.c1 HAVING (NOT ((SUM(TOTAL(rt0.c0)) IN (SUM(rt0.c3))))) UNION ALL SELECT rt0.c3, vt0.c1 FROM vt0 FULL OUTER JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c3, vt0.c1 HAVING (((SUM(TOTAL(rt0.c0)) IN (SUM(rt0.c3)))) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c3 COLLATE NOCASE, ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c1)), json_patch(rt1.c0, rt1.c4), CASE rt1.c0  WHEN vt0.c1 THEN rt1.c4 ELSE rt1.c4 END, (((rt1.c1, rt1.c3, vt0.c1))>((rt1.c4, rt1.c0, rt1.c4)))))<((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 END, ((rt1.c2) NOT BETWEEN (0x588bb720) AND (rt1.c1)), CAST(vt0.c0 AS TEXT), ((rt1.c3)-(rt1.c3)), SQLITE_VERSION())))) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT ((((rt1.c3 COLLATE NOCASE, ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c1)), json_patch(rt1.c0, rt1.c4), CASE rt1.c0  WHEN vt0.c1 THEN rt1.c4 ELSE rt1.c4 END, (((rt1.c1, rt1.c3, vt0.c1))>((rt1.c4, rt1.c0, rt1.c4)))))<((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 END, ((rt1.c2) NOT BETWEEN (0X588bb720) AND (rt1.c1)), CAST(vt0.c0 AS TEXT), ((rt1.c3)-(rt1.c3)), SQLITE_VERSION())))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c3 COLLATE NOCASE, ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c1)), json_patch(rt1.c0, rt1.c4), CASE rt1.c0  WHEN vt0.c1 THEN rt1.c4 ELSE rt1.c4 END, (((rt1.c1, rt1.c3, vt0.c1))>((rt1.c4, rt1.c0, rt1.c4)))))<((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 END, ((rt1.c2) NOT BETWEEN (0X588bb720) AND (rt1.c1)), CAST(vt0.c0 AS TEXT), ((rt1.c3)-(rt1.c3)), SQLITE_VERSION())))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE (((NULL)GLOB((rt1.c0 IN (rt1.c1, rt1.c4))))) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((NULL)GLOB((rt1.c0 IN (rt1.c1, rt1.c4))))))) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 UNION SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE (((((NULL)GLOB((rt1.c0 IN (rt1.c1, rt1.c4))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING SUM(MAX(MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (SUM(MAX(MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((SUM(MAX(MIN(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (+ (0.6458670916712604)) THEN CAST(vt0.c0 AS REAL) END) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE rt0.c2 COLLATE NOCASE  WHEN (+ (0.6458670916712604)) THEN CAST(vt0.c0 AS REAL) END))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c2 COLLATE NOCASE  WHEN (+ (0.6458670916712604)) THEN CAST(vt0.c0 AS REAL) END) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c4, rt0.c1, vt0.c1, rt1.c0, rt0.c0 FROM vt0, rt1, rt0;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c4, rt0.c1, vt0.c1, rt1.c0, rt0.c0 FROM vt0, rt1, rt0 WHERE (((+ (NULL)) IN (x''))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c4, rt0.c1, vt0.c1, rt1.c0, rt0.c0 FROM vt0, rt1, rt0 WHERE ((NOT (((+ (NULL)) IN (x''))))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c4, rt0.c1, vt0.c1, rt1.c0, rt0.c0 FROM vt0, rt1, rt0 WHERE (((((+ (NULL)) IN (x''))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c4, rt0.c1, vt0.c1, rt1.c0, rt0.c0 FROM vt0, rt1, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL))<=(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))<=(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL))<=(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c3, rt1.c3, rt0.c1, rt1.c0, rt0.c2, vt0.c1, vt0.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1 NOT INDEXED, rt0, vt0 GROUP BY rt0.c3, rt1.c3, rt0.c1, rt1.c0, rt0.c2, vt0.c1, vt0.c0, rt1.c1, rt0.c0, rt1.c2;
SELECT ALL rt0.c3, rt1.c3, rt0.c1, rt1.c0, rt0.c2, vt0.c1, vt0.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt1.c3, rt0.c1, rt1.c0, rt0.c2, vt0.c1, vt0.c0, rt1.c1, rt0.c0, rt1.c2 HAVING TOTAL(CASE rt1.c4  WHEN MIN(GROUP_CONCAT(TOTAL(rt0.c2))) THEN vt0.c0 END) UNION ALL SELECT ALL rt0.c3, rt1.c3, rt0.c1, rt1.c0, rt0.c2, vt0.c1, vt0.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt1.c3, rt0.c1, rt1.c0, rt0.c2, vt0.c1, vt0.c0, rt1.c1, rt0.c0, rt1.c2 HAVING (NOT (TOTAL(CASE rt1.c4  WHEN MIN(GROUP_CONCAT(TOTAL(rt0.c2))) THEN vt0.c0 END))) UNION ALL SELECT rt0.c3, rt1.c3, rt0.c1, rt1.c0, rt0.c2, vt0.c1, vt0.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c3, rt1.c3, rt0.c1, rt1.c0, rt0.c2, vt0.c1, vt0.c0, rt1.c1, rt0.c0, rt1.c2 HAVING ((TOTAL(CASE rt1.c4  WHEN MIN(GROUP_CONCAT(TOTAL(rt0.c2))) THEN vt0.c0 END)) ISNULL);
SELECT ALL * FROM rt0, vt0 NOT INDEXED;
SELECT ALL * FROM rt0, vt0 WHERE ((~ (rt0.c3)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((~ (rt0.c3)) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((~ (rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE (((((rt1.c3)|(vt0.c1))) BETWEEN (((((rt1.c4)OR(rt1.c0)))AND(rt0.c0))) AND (vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((NOT (((((rt1.c3)|(vt0.c1))) BETWEEN (((((rt1.c4)OR(rt1.c0)))AND(rt0.c0))) AND (vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE (((((((rt1.c3)|(vt0.c1))) BETWEEN (((((rt1.c4)OR(rt1.c0)))AND(rt0.c0))) AND (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT ALL rt1.c2, rt1.c4, rt0.c0, rt1.c0 FROM rt0, rt1 NOT INDEXED GROUP BY rt1.c2, rt1.c4, rt0.c0, rt1.c0;
SELECT rt1.c2, rt1.c4, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE (ABS(x'')) GROUP BY rt1.c2, rt1.c4, rt0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c4, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE ((NOT (ABS(x'')))) GROUP BY rt1.c2, rt1.c4, rt0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c4, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE (((ABS(x'')) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c4, rt0.c0, rt1.c0 FROM rt0, rt1 NOT INDEXED GROUP BY rt1.c2, rt1.c4, rt0.c0, rt1.c0;
SELECT ALL rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (((((+ (rt1.c0)))AND(SUM('2067388447'))))AND(((rt1.c4) IS TRUE))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (NOT ((((((+ (rt1.c0)))AND(SUM('2067388447'))))AND(((rt1.c4) IS TRUE))))) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (((((((+ (rt1.c0)))AND(SUM('2067388447'))))AND(((rt1.c4) IS TRUE)))) ISNULL);
SELECT ALL rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (((((+ (rt1.c0)))AND(SUM('2067388447'))))AND(((rt1.c4) IS TRUE))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (NOT ((((((+ (rt1.c0)))AND(SUM('2067388447'))))AND(((rt1.c4) IS TRUE))))) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (((((((+ (rt1.c0)))AND(SUM('2067388447'))))AND(((rt1.c4) IS TRUE)))) ISNULL);
SELECT ALL rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((GLOB(rt0.c0, rt0.c0) IN (CASE WHEN rt0.c1 THEN rt0.c2 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((GLOB(rt0.c0, rt0.c0) IN (CASE WHEN rt0.c1 THEN rt0.c2 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((GLOB(rt0.c0, rt0.c0) IN (CASE WHEN rt0.c1 THEN rt0.c2 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((vt0.c0) IS FALSE))OR(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c3 END)))AND(rt0.c3 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((vt0.c0) IS FALSE))OR(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c3 END)))AND(rt0.c3 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((vt0.c0) IS FALSE))OR(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c3 END)))AND(rt0.c3 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt0.c0;
SELECT rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE (COALESCE(DISTINCT (- (rt1.c3)), rt1.c2 COLLATE BINARY)) GROUP BY rt1.c0, rt0.c1, rt0.c0 UNION SELECT rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE ((NOT (COALESCE(DISTINCT (- (rt1.c3)), rt1.c2 COLLATE BINARY)))) GROUP BY rt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE (((COALESCE(DISTINCT (- (rt1.c3)), rt1.c2 COLLATE BINARY)) ISNULL)) GROUP BY rt1.c0, rt0.c1, rt0.c0;
SELECT rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1;
SELECT rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING MAX(((MIN(rt1.c4))<(MIN(TOTAL(rt1.c3))))) UNION ALL SELECT rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING (NOT (MAX(((MIN(rt1.c4))<(MIN(TOTAL(rt1.c3))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING ((MAX(((MIN(rt1.c4))<(MIN(TOTAL(rt1.c3)))))) ISNULL);
SELECT ALL rt1.c3 FROM vt0, rt1;
SELECT rt1.c3 FROM vt0, rt1 WHERE ((((rt1.c1)GLOB(rt1.c1)) IN (''))) UNION ALL SELECT rt1.c3 FROM vt0, rt1 WHERE ((NOT ((((rt1.c1)GLOB(rt1.c1)) IN (''))))) UNION ALL SELECT rt1.c3 FROM vt0, rt1 WHERE ((((((rt1.c1)GLOB(rt1.c1)) IN (''))) ISNULL));
SELECT ALL rt1.c3 FROM vt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((rt1.c2 IN (rt1.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((rt1.c2 IN (rt1.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c3, rt0.c0, rt1.c4, rt0.c1, rt1.c1, vt0.c1 FROM rt1 FULL OUTER JOIN vt0 ON (((((rt0.c3) ISNULL)))<((0.8524634881153602))) RIGHT OUTER JOIN rt0 ON CAST(rt1.c3 AS BLOB) GROUP BY rt0.c3, rt0.c0, rt1.c4, rt0.c1, rt1.c1, vt0.c1;
SELECT ALL vt0.c1, rt1.c2, rt1.c1, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY vt0.c1, rt1.c2, rt1.c1, rt1.c3, vt0.c0;
SELECT ALL vt0.c1, rt1.c2, rt1.c1, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY vt0.c1, rt1.c2, rt1.c1, rt1.c3, vt0.c0 HAVING (((('846339960')GLOB(TOTAL('P5'))))|(SUM(MAX(AVG(MAX(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT vt0.c1, rt1.c2, rt1.c1, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY vt0.c1, rt1.c2, rt1.c1, rt1.c3, vt0.c0 HAVING (NOT ((((('846339960')GLOB(TOTAL('P5'))))|(SUM(MAX(AVG(MAX(GROUP_CONCAT(COUNT(*)))))))))) UNION ALL SELECT vt0.c1, rt1.c2, rt1.c1, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY vt0.c1, rt1.c2, rt1.c1, rt1.c3, vt0.c0 HAVING (((((('846339960')GLOB(TOTAL('P5'))))|(SUM(MAX(AVG(MAX(GROUP_CONCAT(COUNT(*))))))))) ISNULL);
SELECT MIN(((CASE WHEN rt0.c0 THEN '-1111632922' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN 0.10145063697082579 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END) AND ((NOT (rt0.c2))))) FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((-2.91570001E8) BETWEEN (CAST(rt0.c3 AS REAL)) AND (rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((-2.91570001E8) BETWEEN (CAST(rt0.c3 AS REAL)) AND (rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((-2.91570001E8) BETWEEN (CAST(rt0.c3 AS REAL)) AND (rt0.c3))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((NULL) BETWEEN (1519882350) AND (vt0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((NULL) BETWEEN (1519882350) AND (vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((NULL) BETWEEN (1519882350) AND (vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) CROSS JOIN vt0 ON CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM GROUP BY rt1.c2, rt1.c1, rt0.c3, rt0.c0;
SELECT rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) CROSS JOIN vt0 ON CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM WHERE (UNLIKELY(DISTINCT ((((((((rt0.c3)OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)))OR(rt1.c3)))) GROUP BY rt1.c2, rt1.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) CROSS JOIN vt0 ON CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM WHERE ((NOT (UNLIKELY(DISTINCT ((((((((rt0.c3)OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)))OR(rt1.c3)))))) GROUP BY rt1.c2, rt1.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) CROSS JOIN vt0 ON CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM WHERE (((UNLIKELY(DISTINCT ((((((((rt0.c3)OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)))OR(rt1.c3)))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt0.c3, rt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) CROSS JOIN vt0 ON CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM GROUP BY rt1.c2, rt1.c1, rt0.c3, rt0.c0;
SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, rt1.c4, vt0.c1, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c4))) NOT BETWEEN (((rt1.c4)-(vt0.c1))) AND (rt0.c3));
SELECT rt0.c0, rt0.c1, rt0.c3, rt1.c4, vt0.c1, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c4))) NOT BETWEEN (((rt1.c4)-(vt0.c1))) AND (rt0.c3)) WHERE ((((rt1.c0) NOT NULL) IN ())) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt1.c4, vt0.c1, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c4))) NOT BETWEEN (((rt1.c4)-(vt0.c1))) AND (rt0.c3)) WHERE ((NOT ((((rt1.c0) NOT NULL) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt1.c4, vt0.c1, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c4))) NOT BETWEEN (((rt1.c4)-(vt0.c1))) AND (rt0.c3)) WHERE ((((((rt1.c0) NOT NULL) IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c3, rt1.c4, vt0.c1, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c4))) NOT BETWEEN (((rt1.c4)-(vt0.c1))) AND (rt0.c3));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (CAST(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END AS BLOB)) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((NOT (CAST(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END AS BLOB)))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (((CAST(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 NOT INDEXED WHERE ((NOT (((NULL) ISNULL)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((NULL) ISNULL)) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c2, rt0.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c2, rt0.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c2, rt0.c3, rt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c2, rt0.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c2, rt0.c3, rt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c2, rt0.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c2, rt0.c3, rt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT rt0.c2, rt1.c2, rt1.c4, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0;
SELECT ALL rt0.c2, rt1.c2, rt1.c4, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((((((rt1.c0, rt0.c2, rt1.c0, rt0.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c0, rt0.c3, rt1.c2)) AND ((rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c1)))) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt1.c4, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((NOT ((((((rt1.c0, rt0.c2, rt1.c0, rt0.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c0, rt0.c3, rt1.c2)) AND ((rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c1)))) NOTNULL)))) UNION ALL SELECT rt0.c2, rt1.c2, rt1.c4, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((((((((rt1.c0, rt0.c2, rt1.c0, rt0.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c0, rt0.c3, rt1.c2)) AND ((rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c1)))) NOTNULL)) ISNULL));
SELECT rt0.c2, rt1.c2, rt1.c4, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c1, vt0.c1, CAST(vt0.c1 AS INTEGER), (((NULL))>=((vt0.c0))), UNLIKELY(323567357))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (COALESCE(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c1, vt0.c1, CAST(vt0.c1 AS INTEGER), (((NULL))>=((vt0.c0))), UNLIKELY(323567357))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((COALESCE(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c1, vt0.c1, CAST(vt0.c1 AS INTEGER), (((NULL))>=((vt0.c0))), UNLIKELY(323567357))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt0, rt1 WHERE ((((rt0.c0, ((rt0.c2) NOT BETWEEN (rt1.c2) AND (0xfffffffff5353426)), ((((x'3f18166d')OR(rt1.c3)))AND(rt1.c0))))>=((((rt1.c1)IS NOT(rt0.c1)), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)), rt1.c4 COLLATE BINARY)))) GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt0, rt1 WHERE ((NOT ((((rt0.c0, ((rt0.c2) NOT BETWEEN (rt1.c2) AND (0xfffffffff5353426)), ((((x'3f18166d')OR(rt1.c3)))AND(rt1.c0))))>=((((rt1.c1)IS NOT(rt0.c1)), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)), rt1.c4 COLLATE BINARY)))))) GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c2 UNION SELECT rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt0, rt1 WHERE ((((((rt0.c0, ((rt0.c2) NOT BETWEEN (rt1.c2) AND (0Xfffffffff5353426)), ((((x'3f18166d')OR(rt1.c3)))AND(rt1.c0))))>=((((rt1.c1)IS NOT(rt0.c1)), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)), rt1.c4 COLLATE BINARY)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c2;
SELECT rt1.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt0.c3, rt1.c2, rt1.c3;
SELECT rt1.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt0.c3, rt1.c2, rt1.c3 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt1.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt0.c3, rt1.c2, rt1.c3 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt0.c3, rt1.c2, rt1.c3 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT SUM(0X3f27012e) FROM vt0, rt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((- (((vt0.c1)GLOB(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c1)GLOB(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (((vt0.c1)GLOB(vt0.c1))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (0.5094368737702272) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (0.5094368737702272))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((0.5094368737702272) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0;
SELECT ALL rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0 WHERE (rt1.c3) GROUP BY rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0 UNION SELECT rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0 WHERE ((NOT (rt1.c3))) GROUP BY rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0 WHERE (((rt1.c3) ISNULL)) GROUP BY rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0;
SELECT ALL rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c2, rt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((NOT (MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((NOT (MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((NOT (MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((NOT (MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL MIN(rt0.c2) FROM rt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (0.7271473413542558) AND (((vt0.c1) IS FALSE)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (0.7271473413542558) AND (((vt0.c1) IS FALSE)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (0.7271473413542558) AND (((vt0.c1) IS FALSE)))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0;
SELECT DISTINCT rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE (rt1.c3) UNION SELECT DISTINCT rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0;
SELECT ALL rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0;
SELECT ALL rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0 FROM vt0, rt0, rt1 WHERE ((+ (((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c3))))) GROUP BY rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0 UNION SELECT ALL rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0 FROM vt0, rt0, rt1 WHERE ((NOT ((+ (((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c3))))))) GROUP BY rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0 UNION SELECT rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0 FROM vt0, rt0, rt1 WHERE ((((+ (((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c3))))) ISNULL)) GROUP BY rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0;
SELECT ALL rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c4, rt1.c2, vt0.c0, rt0.c1, vt0.c1, rt1.c3, rt0.c3, rt0.c2, rt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0 INNER JOIN rt1 ON CASE WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.5850972833196635) THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c4 END WHEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2)) THEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) WHEN ((rt1.c3)<<(vt0.c0)) THEN UNLIKELY(NULL) END FULL OUTER JOIN vt0 ON (rt0.c2 IN ()) COLLATE RTRIM;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((QUOTE(rt1.c4) IN (((rt1.c4) IS TRUE)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((QUOTE(rt1.c4) IN (((rt1.c4) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((QUOTE(rt1.c4) IN (((rt1.c4) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((~ (((rt1.c3)<=(rt1.c3))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((~ (((rt1.c3)<=(rt1.c3))))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((((~ (((rt1.c3)<=(rt1.c3))))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c1;
SELECT ALL rt1.c4, vt0.c0, vt0.c1, rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c1 FROM rt0 NOT INDEXED, vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c1 HAVING MIN(TOTAL(GROUP_CONCAT(AVG(vt0.c1)))) UNION ALL SELECT ALL rt1.c4, vt0.c0, vt0.c1, rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c1 HAVING (NOT (MIN(TOTAL(GROUP_CONCAT(AVG(vt0.c1)))))) UNION ALL SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c1 HAVING ((MIN(TOTAL(GROUP_CONCAT(AVG(vt0.c1))))) ISNULL);
SELECT vt0.c0, rt1.c2 FROM vt0, rt1, rt0;
SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1, rt0 WHERE ((((~ (vt0.c1)))<=('|'))) UNION ALL SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1, rt0 WHERE ((NOT ((((~ (vt0.c1)))<=('|'))))) UNION ALL SELECT vt0.c0, rt1.c2 FROM vt0, rt1, rt0 WHERE ((((((~ (vt0.c1)))<=('|'))) ISNULL));
SELECT vt0.c0, rt1.c2 FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ((0.32299377323150946 IN ())) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((0.32299377323150946 IN ())))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((((0.32299377323150946 IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3 FROM rt1 CROSS JOIN rt0 ON '' RIGHT OUTER JOIN vt0 ON (((((rt0.c2 IN ()))AND(UPPER(rt1.c3))))OR(((((rt0.c2)OR(rt0.c1)))AND('1517473366')))) GROUP BY rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3;
SELECT rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3 FROM rt1 CROSS JOIN rt0 ON '' RIGHT OUTER JOIN vt0 ON (((((rt0.c2 IN ()))AND(UPPER(rt1.c3))))OR(((((rt0.c2)OR(rt0.c1)))AND('1517473366')))) WHERE (((rt1.c0)/(rt0.c1)) COLLATE BINARY COLLATE BINARY) GROUP BY rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3 UNION SELECT ALL rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3 FROM rt1 CROSS JOIN rt0 ON '' RIGHT OUTER JOIN vt0 ON (((((rt0.c2 IN ()))AND(UPPER(rt1.c3))))OR(((((rt0.c2)OR(rt0.c1)))AND('1517473366')))) WHERE ((NOT (((rt1.c0)/(rt0.c1)) COLLATE BINARY COLLATE BINARY))) GROUP BY rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3 UNION SELECT ALL rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3 FROM rt1 CROSS JOIN rt0 ON '' RIGHT OUTER JOIN vt0 ON (((((rt0.c2 IN ()))AND(UPPER(rt1.c3))))OR(((((rt0.c2)OR(rt0.c1)))AND('1517473366')))) WHERE (((((rt1.c0)/(rt0.c1)) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3;
SELECT ALL rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3 FROM rt1 CROSS JOIN rt0 ON '' RIGHT OUTER JOIN vt0 ON (((((rt0.c2 IN ()))AND(UPPER(rt1.c3))))OR(((((rt0.c2)OR(rt0.c1)))AND('1517473366')))) GROUP BY rt0.c2, vt0.c0, rt1.c1, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt1.c0, vt0.c1, rt0.c1, rt1.c3;
SELECT rt0.c1, rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c3, rt1.c4, vt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c1, rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c3, rt1.c4, vt0.c0, rt0.c2;
SELECT rt0.c1, rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c3, rt1.c4, vt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c1, rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c3, rt1.c4, vt0.c0, rt0.c2 HAVING (((COUNT(rt1.c2), rt1.c2, rt1.c4)) BETWEEN (((((COUNT(*))) BETWEEN ((COUNT(AVG(TOTAL(GROUP_CONCAT(MAX(AVG(AVG(rt0.c1))))))))) AND ((SUM(rt1.c3)))), HEX(AVG(MIN(MIN(COUNT(SUM(rt1.c4)))))), SQLITE_SOURCE_ID())) AND ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(vt0.c0)))), ((rt0.c0) NOT NULL), COUNT(rt0.c2)))) UNION ALL SELECT rt0.c1, rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c3, rt1.c4, vt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c1, rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c3, rt1.c4, vt0.c0, rt0.c2 HAVING (NOT ((((COUNT(rt1.c2), rt1.c2, rt1.c4)) BETWEEN (((((COUNT(*))) BETWEEN ((COUNT(AVG(TOTAL(GROUP_CONCAT(MAX(AVG(AVG(rt0.c1))))))))) AND ((SUM(rt1.c3)))), HEX(AVG(MIN(MIN(COUNT(SUM(rt1.c4)))))), SQLITE_SOURCE_ID())) AND ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(vt0.c0)))), ((rt0.c0) NOT NULL), COUNT(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c3, rt1.c4, vt0.c0, rt0.c2 FROM rt1, vt0, rt0 GROUP BY rt0.c1, rt1.c1, rt1.c2, rt1.c0, vt0.c1, rt1.c3, rt1.c4, vt0.c0, rt0.c2 HAVING (((((COUNT(rt1.c2), rt1.c2, rt1.c4)) BETWEEN (((((COUNT(*))) BETWEEN ((COUNT(AVG(TOTAL(GROUP_CONCAT(MAX(AVG(AVG(rt0.c1))))))))) AND ((SUM(rt1.c3)))), HEX(AVG(MIN(MIN(COUNT(SUM(rt1.c4)))))), SQLITE_SOURCE_ID())) AND ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(vt0.c0)))), ((rt0.c0) NOT NULL), COUNT(rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))>((((rt0.c1))<((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))>((((rt0.c1))<((rt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))>((((rt0.c1))<((rt0.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((((((rt1.c0)+(rt1.c0))))>=(((rt1.c0 IN ()))))) UNION SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((NOT ((((((rt1.c0)+(rt1.c0))))>=(((rt1.c0 IN ()))))))) UNION SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((((((((rt1.c0)+(rt1.c0))))>=(((rt1.c0 IN ()))))) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt1;
SELECT ALL rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER)))) GROUP BY rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER)))))) GROUP BY rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c3, vt0.c0, rt0.c1, rt0.c2;
SELECT rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 HAVING SUM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 HAVING (NOT (SUM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 HAVING ((SUM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c1)))) ISNULL);
SELECT rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 HAVING SUM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 HAVING (NOT (SUM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 HAVING ((SUM(((((rt1.c3)OR(rt1.c2)))OR(rt1.c1)))) ISNULL);
SELECT rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt0.c0;
SELECT ALL SUM((~ (vt0.c0)) COLLATE BINARY) FROM rt1, vt0;
SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt1.c2, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt1.c2, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE ((((rt0.c3)) BETWEEN ((NULL)) AND ((CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 END)))) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt1.c2, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((NULL)) AND ((CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 END)))))) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt1.c2, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE ((((((rt0.c3)) BETWEEN ((NULL)) AND ((CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 END)))) ISNULL));
SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt1.c2, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((NULLIF(DISTINCT rt0.c3, rt0.c0) IN (((NULL) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((NULLIF(DISTINCT rt0.c3, rt0.c0) IN (((NULL) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((NULLIF(DISTINCT rt0.c3, rt0.c0) IN (((NULL) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt1.c2, rt1.c3, vt0.c1, rt1.c4 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c4;
SELECT rt1.c2, rt1.c3, vt0.c1, rt1.c4 FROM vt0 NATURAL JOIN rt1 WHERE (CASE WHEN ((0.43864771988319573)||(rt1.c0)) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c3)) THEN CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))) THEN ((vt0.c0)>=(rt1.c1)) WHEN ((((((((NULL)OR(rt1.c2)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)) THEN (rt1.c0 IN ()) WHEN ((rt1.c2)||(vt0.c0)) THEN ((((vt0.c1)OR(rt1.c4)))AND(rt1.c0)) END) GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c3, vt0.c1, rt1.c4 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (CASE WHEN ((0.43864771988319573)||(rt1.c0)) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c3)) THEN CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))) THEN ((vt0.c0)>=(rt1.c1)) WHEN ((((((((NULL)OR(rt1.c2)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)) THEN (rt1.c0 IN ()) WHEN ((rt1.c2)||(vt0.c0)) THEN ((((vt0.c1)OR(rt1.c4)))AND(rt1.c0)) END))) GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c4 UNION SELECT rt1.c2, rt1.c3, vt0.c1, rt1.c4 FROM vt0 NATURAL JOIN rt1 WHERE (((CASE WHEN ((0.43864771988319573)||(rt1.c0)) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c3)) THEN CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))) THEN ((vt0.c0)>=(rt1.c1)) WHEN ((((((((NULL)OR(rt1.c2)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)) THEN (rt1.c0 IN ()) WHEN ((rt1.c2)||(vt0.c0)) THEN ((((vt0.c1)OR(rt1.c4)))AND(rt1.c0)) END) ISNULL)) GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c4;
SELECT rt1.c2, rt1.c3, vt0.c1, rt1.c4 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c3, vt0.c1, rt1.c4;
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, rt1 NOT INDEXED GROUP BY rt0.c1 HAVING COUNT(rt0.c0) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (NOT (COUNT(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING ((COUNT(rt0.c0)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, rt1 NOT INDEXED GROUP BY rt0.c1 HAVING COUNT(rt0.c0) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (NOT (COUNT(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING ((COUNT(rt0.c0)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT ALL rt0.c3 FROM rt0;
SELECT rt0.c3 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c3 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, rt0 WHERE (CASE WHEN ((((((((-1.045503377E9)AND(rt1.c2)))OR(rt1.c4)))OR(rt0.c2)))AND(rt0.c3)) THEN CAST(rt1.c4 AS NUMERIC) END) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, rt0 WHERE ((NOT (CASE WHEN ((((((((-1.045503377E9)AND(rt1.c2)))OR(rt1.c4)))OR(rt0.c2)))AND(rt0.c3)) THEN CAST(rt1.c4 AS NUMERIC) END))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, rt0 WHERE (((CASE WHEN ((((((((-1.045503377E9)AND(rt1.c2)))OR(rt1.c4)))OR(rt0.c2)))AND(rt0.c3)) THEN CAST(rt1.c4 AS NUMERIC) END) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST('#e9}' AS BLOB) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST('#e9}' AS BLOB))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST('#e9}' AS BLOB)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST('#e9}' AS BLOB) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST('#e9}' AS BLOB))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST('#e9}' AS BLOB)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4, vt0.c0 FROM rt1, vt0;
SELECT ALL vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4, vt0.c0 FROM rt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c3)) AS BLOB)) UNION ALL SELECT vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4, vt0.c0 FROM rt1, vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c3)) AS BLOB)))) UNION ALL SELECT vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4, vt0.c0 FROM rt1, vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c3)) AS BLOB)) ISNULL));
SELECT ALL vt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((NOT (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 WHERE (((('643526997' IN ())) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c4))))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1 WHERE ((NOT (((('643526997' IN ())) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c4))))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1 WHERE (((((('643526997' IN ())) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c4))))) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(((TOTAL(MIN(rt0.c3))) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(((TOTAL(MIN(rt0.c3))) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(((TOTAL(MIN(rt0.c3))) NOTNULL))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3))!=((rt1.c1))))>>(rt1.c4))) UNION ALL SELECT * FROM rt1 NOT INDEXED WHERE ((NOT ((((((rt1.c3))!=((rt1.c1))))>>(rt1.c4))))) UNION ALL SELECT * FROM rt1 WHERE ((((((((rt1.c3))!=((rt1.c1))))>>(rt1.c4))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c4, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c3, rt1.c1 FROM vt0, rt1, rt0;
SELECT DISTINCT rt1.c4, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c3, rt1.c1 FROM vt0, rt1, rt0 WHERE (CAST(CASE rt1.c3  WHEN rt0.c1 THEN rt1.c3 END AS TEXT)) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c3, rt1.c1 FROM vt0, rt1, rt0 WHERE ((NOT (CAST(CASE rt1.c3  WHEN rt0.c1 THEN rt1.c3 END AS TEXT)))) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c3, rt1.c1 FROM vt0, rt1, rt0 WHERE (((CAST(CASE rt1.c3  WHEN rt0.c1 THEN rt1.c3 END AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c3, rt1.c1 FROM vt0, rt1, rt0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (NULLIF(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END, ((rt1.c1) IS FALSE))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (NULLIF(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END, ((rt1.c1) IS FALSE))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((NULLIF(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END, ((rt1.c1) IS FALSE))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c0, rt1.c3, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2;
SELECT rt1.c0, rt1.c3, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2 HAVING COUNT(CASE COUNT(*)  WHEN COUNT(rt0.c2) THEN rt1.c4 WHEN rt0.c2 THEN rt0.c2 WHEN 1163856848 THEN AVG(rt1.c0) END) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2 HAVING (NOT (COUNT(CASE COUNT(*)  WHEN COUNT(rt0.c2) THEN rt1.c4 WHEN rt0.c2 THEN rt0.c2 WHEN 1163856848 THEN AVG(rt1.c0) END))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2 HAVING ((COUNT(CASE COUNT(*)  WHEN COUNT(rt0.c2) THEN rt1.c4 WHEN rt0.c2 THEN rt0.c2 WHEN 1163856848 THEN AVG(rt1.c0) END)) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c2)) BETWEEN (((~ (rt1.c3)), ((rt1.c4)GLOB(rt1.c2)), rt1.c0 COLLATE NOCASE)) AND (((((rt1.c4, rt1.c1, rt1.c2, rt1.c4, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c4, rt1.c3, rt1.c2)) AND ((rt1.c0, rt1.c1, rt1.c2, rt1.c2, rt1.c1))), LIKELIHOOD(DISTINCT rt1.c3, 0.9729726787829727), ((rt1.c0)|('692270040')))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c0, rt1.c0, rt1.c2)) BETWEEN (((~ (rt1.c3)), ((rt1.c4)GLOB(rt1.c2)), rt1.c0 COLLATE NOCASE)) AND (((((rt1.c4, rt1.c1, rt1.c2, rt1.c4, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c4, rt1.c3, rt1.c2)) AND ((rt1.c0, rt1.c1, rt1.c2, rt1.c2, rt1.c1))), LIKELIHOOD(DISTINCT rt1.c3, 0.9729726787829727), ((rt1.c0)|('692270040')))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c0, rt1.c0, rt1.c2)) BETWEEN (((~ (rt1.c3)), ((rt1.c4)GLOB(rt1.c2)), rt1.c0 COLLATE NOCASE)) AND (((((rt1.c4, rt1.c1, rt1.c2, rt1.c4, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c4, rt1.c3, rt1.c2)) AND ((rt1.c0, rt1.c1, rt1.c2, rt1.c2, rt1.c1))), LIKELIHOOD(DISTINCT rt1.c3, 0.9729726787829727), ((rt1.c0)|('692270040')))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON load_extension((((0.971375371537745))>((rt1.c4)))) FULL OUTER JOIN vt0 ON ((NULL)*((((vt0.c1)) BETWEEN (('(Z')) AND ((rt1.c3)))));
SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON load_extension((((0.971375371537745))>((rt1.c4)))) FULL OUTER JOIN vt0 ON ((NULL)*((((vt0.c1)) BETWEEN (('(Z')) AND ((rt1.c3))))) WHERE (CASE ((((rt0.c0)OR(rt1.c2)))OR(rt0.c3))  WHEN (((rt0.c0, rt0.c3, rt1.c0)) BETWEEN ((rt1.c4, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c4))) THEN rt0.c3 COLLATE BINARY END) UNION SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON load_extension((((0.971375371537745))>((rt1.c4)))) FULL OUTER JOIN vt0 ON ((NULL)*((((vt0.c1)) BETWEEN (('(Z')) AND ((rt1.c3))))) WHERE ((NOT (CASE ((((rt0.c0)OR(rt1.c2)))OR(rt0.c3))  WHEN (((rt0.c0, rt0.c3, rt1.c0)) BETWEEN ((rt1.c4, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c4))) THEN rt0.c3 COLLATE BINARY END))) UNION SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON load_extension((((0.971375371537745))>((rt1.c4)))) FULL OUTER JOIN vt0 ON ((NULL)*((((vt0.c1)) BETWEEN (('(Z')) AND ((rt1.c3))))) WHERE (((CASE ((((rt0.c0)OR(rt1.c2)))OR(rt0.c3))  WHEN (((rt0.c0, rt0.c3, rt1.c0)) BETWEEN ((rt1.c4, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c4))) THEN rt0.c3 COLLATE BINARY END) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, vt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON load_extension((((0.971375371537745))>((rt1.c4)))) FULL OUTER JOIN vt0 ON ((NULL)*((((vt0.c1)) BETWEEN (('(Z')) AND ((rt1.c3)))));
SELECT ALL rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0;
SELECT rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0 FROM rt0, rt1, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) GROUP BY rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0 UNION SELECT ALL rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0 FROM rt0, rt1, vt0 WHERE ((NOT (((vt0.c1) IS TRUE) COLLATE NOCASE))) GROUP BY rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0 UNION SELECT rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0 FROM rt0, rt1, vt0 WHERE (((((vt0.c1) IS TRUE) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0;
SELECT ALL rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c1, rt1.c4, vt0.c1, rt1.c0, rt0.c3, vt0.c0, rt0.c0;
SELECT ALL rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 HAVING COUNT(ABS(vt0.c1)) UNION ALL SELECT ALL rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 HAVING (NOT (COUNT(ABS(vt0.c1)))) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 HAVING ((COUNT(ABS(vt0.c1))) ISNULL);
SELECT ALL rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 HAVING COUNT(ABS(vt0.c1)) UNION ALL SELECT ALL rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 HAVING (NOT (COUNT(ABS(vt0.c1)))) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 HAVING ((COUNT(ABS(vt0.c1))) ISNULL);
SELECT ALL rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN rt1 ON '' INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))<=(((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c3, rt1.c0, vt0.c0, rt0.c3;
SELECT ALL rt1.c3, rt1.c4 FROM rt0, vt0, rt1;
SELECT rt1.c3, rt1.c4 FROM rt0, vt0, rt1 WHERE (CAST(((vt0.c1) BETWEEN (rt1.c3) AND (rt0.c3)) AS NUMERIC)) UNION ALL SELECT rt1.c3, rt1.c4 FROM rt0 NOT INDEXED, vt0, rt1 WHERE ((NOT (CAST(((vt0.c1) BETWEEN (rt1.c3) AND (rt0.c3)) AS NUMERIC)))) UNION ALL SELECT rt1.c3, rt1.c4 FROM rt0, vt0, rt1 WHERE (((CAST(((vt0.c1) BETWEEN (rt1.c3) AND (rt0.c3)) AS NUMERIC)) ISNULL));
SELECT ALL rt1.c3, rt1.c4 FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((~ (rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((~ (rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt0.c1)-(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0;
SELECT vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt0.c1)-(rt0.c1)) COLLATE BINARY WHERE ((((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c0)))) IS TRUE)) GROUP BY vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0 UNION SELECT vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt0.c1)-(rt0.c1)) COLLATE BINARY WHERE ((NOT ((((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c0)))) IS TRUE)))) GROUP BY vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt0.c1)-(rt0.c1)) COLLATE BINARY WHERE ((((((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c0)))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0;
SELECT vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt0.c1)-(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt1.c3, vt0.c1, rt0.c2, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt1.c1, rt1.c0;
SELECT rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3;
SELECT ALL rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 HAVING UNLIKELY((- (rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 HAVING (NOT (UNLIKELY((- (rt1.c1))))) UNION ALL SELECT rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 HAVING ((UNLIKELY((- (rt1.c1)))) ISNULL);
SELECT rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3;
SELECT ALL rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 HAVING UNLIKELY((- (rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 HAVING (NOT (UNLIKELY((- (rt1.c1))))) UNION ALL SELECT rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 HAVING ((UNLIKELY((- (rt1.c1)))) ISNULL);
SELECT rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c0, vt0.c0, vt0.c1, rt1.c4, rt0.c3;
SELECT * FROM rt1, rt0, vt0;
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((rt0.c0 IN ())) UNION ALL SELECT * FROM rt1, rt0, vt0 WHERE ((NOT ((rt0.c0 IN ())))) UNION ALL SELECT ALL * FROM rt1, rt0, vt0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT * FROM rt1, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.8794609183535269) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0.8794609183535269))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.8794609183535269) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4 FROM rt1, rt0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4 FROM rt1, rt0 WHERE ((NOT ((- (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4 FROM rt1, rt0 WHERE ((((- (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c4;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (rt0.c2 IN (vt0.c1)), 0.8918236463775522) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (rt0.c2 IN (vt0.c1)), 0.8918236463775522) GROUP BY vt0.c0 HAVING AVG(((vt0.c1) BETWEEN (MAX(MAX(TOTAL(rt0.c3)))) AND (MIN(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (rt0.c2 IN (vt0.c1)), 0.8918236463775522) GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c1) BETWEEN (MAX(MAX(TOTAL(rt0.c3)))) AND (MIN(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (rt0.c2 IN (vt0.c1)), 0.8918236463775522) GROUP BY vt0.c0 HAVING ((AVG(((vt0.c1) BETWEEN (MAX(MAX(TOTAL(rt0.c3)))) AND (MIN(vt0.c1))))) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c0)-(0.8162292182398595))))==((('-1106260992' IN (rt1.c1)))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT ((((((vt0.c0)-(0.8162292182398595))))==((('-1106260992' IN (rt1.c1)))))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((((((((vt0.c0)-(0.8162292182398595))))==((('-1106260992' IN (rt1.c1)))))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END COLLATE RTRIM) UNION SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1;
SELECT ALL vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((LTRIM(vt0.c1)) IS TRUE) INNER JOIN rt0 ON CASE WHEN UPPER(DISTINCT rt1.c3) THEN LTRIM(rt1.c0) ELSE ((rt0.c3)=(rt1.c1)) END GROUP BY vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2;
SELECT vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((LTRIM(vt0.c1)) IS TRUE) INNER JOIN rt0 ON CASE WHEN UPPER(DISTINCT rt1.c3) THEN LTRIM(rt1.c0) ELSE ((rt0.c3)=(rt1.c1)) END WHERE (CASE WHEN ((((((((rt1.c0)OR(vt0.c1)))OR(rt0.c3)))OR(0.024992122946743356)))OR(vt0.c1)) THEN '' ELSE '#' END) GROUP BY vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2 UNION SELECT vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((LTRIM(vt0.c1)) IS TRUE) INNER JOIN rt0 ON CASE WHEN UPPER(DISTINCT rt1.c3) THEN LTRIM(rt1.c0) ELSE ((rt0.c3)==(rt1.c1)) END WHERE ((NOT (CASE WHEN ((((((((rt1.c0)OR(vt0.c1)))OR(rt0.c3)))OR(0.024992122946743356)))OR(vt0.c1)) THEN '' ELSE '#' END))) GROUP BY vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2 UNION SELECT ALL vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((LTRIM(vt0.c1)) IS TRUE) INNER JOIN rt0 ON CASE WHEN UPPER(DISTINCT rt1.c3) THEN LTRIM(rt1.c0) ELSE ((rt0.c3)==(rt1.c1)) END WHERE (((CASE WHEN ((((((((rt1.c0)OR(vt0.c1)))OR(rt0.c3)))OR(0.024992122946743356)))OR(vt0.c1)) THEN '' ELSE '#' END) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2;
SELECT ALL vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((LTRIM(vt0.c1)) IS TRUE) INNER JOIN rt0 ON CASE WHEN UPPER(DISTINCT rt1.c3) THEN LTRIM(rt1.c0) ELSE ((rt0.c3)=(rt1.c1)) END GROUP BY vt0.c0, rt1.c1, rt0.c3, rt1.c0, vt0.c1, rt1.c3, rt0.c2;
SELECT ALL vt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c3;
SELECT vt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c3 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c3 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c3 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT MIN(((rt0.c0 COLLATE RTRIM)-(((rt0.c1) NOTNULL)))) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2)>=(rt0.c0))) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)>=(rt0.c0))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2)>=(rt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3;
SELECT rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE (CASE x'4174148c'  WHEN ((((rt1.c3)OR(rt0.c0)))OR(0x5e2aa308)) THEN (- (rt0.c0)) ELSE 'FuﰺᎉC' END) GROUP BY rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3 UNION SELECT rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE ((NOT (CASE x'4174148c'  WHEN ((((rt1.c3)OR(rt0.c0)))OR(0x5e2aa308)) THEN (- (rt0.c0)) ELSE 'FuﰺᎉC' END))) GROUP BY rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3 UNION SELECT rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE (((CASE x'4174148c'  WHEN ((((rt1.c3)OR(rt0.c0)))OR(0X5e2aa308)) THEN (- (rt0.c0)) ELSE 'FuﰺᎉC' END) ISNULL)) GROUP BY rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3;
SELECT ALL rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, vt0.c1, rt0.c3;
SELECT ALL rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING rt1.c1 UNION ALL SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING rt1.c1 UNION ALL SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c0, rt1.c1, rt1.c3, vt0.c1, rt1.c2, rt1.c4 FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)||(vt0.c1)))+(((vt0.c1)=(vt0.c1))));
SELECT rt1.c0, rt1.c1, rt1.c3, vt0.c1, rt1.c2, rt1.c4 FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)||(vt0.c1)))+(((vt0.c1)=(vt0.c1)))) WHERE (CASE ((vt0.c1)+(rt1.c1))  WHEN (+ (rt1.c4)) THEN ((rt1.c3)AND(rt1.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt1.c2)) THEN vt0.c1 WHEN CASE vt0.c1  WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c0 ELSE '330323090' END THEN vt0.c1 COLLATE NOCASE END) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3, vt0.c1, rt1.c2, rt1.c4 FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)||(vt0.c1)))+(((vt0.c1)=(vt0.c1)))) WHERE ((NOT (CASE ((vt0.c1)+(rt1.c1))  WHEN (+ (rt1.c4)) THEN ((rt1.c3)AND(rt1.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt1.c2)) THEN vt0.c1 WHEN CASE vt0.c1  WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c0 ELSE '330323090' END THEN vt0.c1 COLLATE NOCASE END))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c3, vt0.c1, rt1.c2, rt1.c4 FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)||(vt0.c1)))+(((vt0.c1)=(vt0.c1)))) WHERE (((CASE ((vt0.c1)+(rt1.c1))  WHEN (+ (rt1.c4)) THEN ((rt1.c3)AND(rt1.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt1.c2)) THEN vt0.c1 WHEN CASE vt0.c1  WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c0 ELSE '330323090' END THEN vt0.c1 COLLATE NOCASE END) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c3, vt0.c1, rt1.c2, rt1.c4 FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)||(vt0.c1)))+(((vt0.c1)=(vt0.c1))));
SELECT DISTINCT rt0.c0, rt1.c0, vt0.c0, rt0.c3, vt0.c1 FROM rt1, rt0, vt0;
SELECT DISTINCT rt0.c0, rt1.c0, vt0.c0, rt0.c3, vt0.c1 FROM rt1, rt0, vt0 WHERE ((((((rt1.c0))<((rt1.c1))))%((rt1.c2 IN (vt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt1.c0, vt0.c0, rt0.c3, vt0.c1 FROM rt1, rt0, vt0 WHERE ((NOT ((((((rt1.c0))<((rt1.c1))))%((rt1.c2 IN (vt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt1.c0, vt0.c0, rt0.c3, vt0.c1 FROM rt1, rt0, vt0 WHERE ((((((((rt1.c0))<((rt1.c1))))%((rt1.c2 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c0, vt0.c0, rt0.c3, vt0.c1 FROM rt1, rt0, vt0;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3 FROM rt1, rt0, vt0 WHERE ((((rt0.c0, rt1.c4, rt1.c3)) BETWEEN ((((rt0.c0) IS FALSE), rt1.c2 COLLATE RTRIM, CASE rt1.c1  WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c1 WHEN rt0.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)) AND ((0.6924067101553102, ((((rt1.c4)AND(vt0.c0)))OR(rt1.c4)), (NOT (rt0.c0)))))) GROUP BY rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3 UNION SELECT rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3 FROM rt1, rt0, vt0 WHERE ((NOT ((((rt0.c0, rt1.c4, rt1.c3)) BETWEEN ((((rt0.c0) IS FALSE), rt1.c2 COLLATE RTRIM, CASE rt1.c1  WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c1 WHEN rt0.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)) AND ((0.6924067101553102, ((((rt1.c4)AND(vt0.c0)))OR(rt1.c4)), (NOT (rt0.c0)))))))) GROUP BY rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3 UNION SELECT ALL rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3 FROM rt1, rt0, vt0 WHERE ((((((rt0.c0, rt1.c4, rt1.c3)) BETWEEN ((((rt0.c0) IS FALSE), rt1.c2 COLLATE RTRIM, CASE rt1.c1  WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c1 WHEN rt0.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)) AND ((0.6924067101553102, ((((rt1.c4)AND(vt0.c0)))OR(rt1.c4)), (NOT (rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, vt0.c1, rt0.c0, rt1.c4, vt0.c0, rt0.c3, rt1.c0, rt1.c3;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (TRIM(((0.9974062809420516)&(vt0.c0)), vt0.c0)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (TRIM(((0.9974062809420516)&(vt0.c0)), vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TRIM(((0.9974062809420516)&(vt0.c0)), vt0.c0)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt0.c2, rt1.c4, vt0.c1, rt0.c1 FROM vt0, rt1, rt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt0.c2, rt1.c4, vt0.c1, rt0.c1 FROM vt0, rt1, rt0 WHERE (')H帗~N	') UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt0.c2, rt1.c4, vt0.c1, rt0.c1 FROM vt0, rt1, rt0 WHERE ((NOT (')H帗~N	'))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt0.c2, rt1.c4, vt0.c1, rt0.c1 FROM vt0, rt1, rt0 WHERE (((')H帗~N	') ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt0.c2, rt1.c4, vt0.c1, rt0.c1 FROM vt0, rt1, rt0;
SELECT ALL rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1 FROM rt1 NOT INDEXED, rt0 GROUP BY rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1;
SELECT rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1 FROM rt1, rt0 WHERE (((((((((((rt1.c0)OR(rt0.c0)))AND(rt1.c4)))AND(rt0.c0)))AND(rt1.c3))) IS FALSE)) GROUP BY rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1 UNION SELECT rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1 FROM rt1, rt0 WHERE ((NOT (((((((((((rt1.c0)OR(rt0.c0)))AND(rt1.c4)))AND(rt0.c0)))AND(rt1.c3))) IS FALSE)))) GROUP BY rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1 FROM rt1, rt0 WHERE (((((((((((((rt1.c0)OR(rt0.c0)))AND(rt1.c4)))AND(rt0.c0)))AND(rt1.c3))) IS FALSE)) ISNULL)) GROUP BY rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1;
SELECT ALL rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1 FROM rt1 NOT INDEXED, rt0 GROUP BY rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt1.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM vt0, rt1, rt0;
SELECT * FROM vt0, rt1, rt0 WHERE (CAST(((rt1.c2)>(rt0.c1)) AS TEXT)) UNION ALL SELECT * FROM vt0, rt1, rt0 WHERE ((NOT (CAST(((rt1.c2)>(rt0.c1)) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, rt1, rt0 WHERE (((CAST(((rt1.c2)>(rt0.c1)) AS TEXT)) ISNULL));
SELECT * FROM vt0, rt1, rt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)-(795777889))) IS TRUE)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)-(795777889))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)-(795777889))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1)<=(vt0.c0)) IN (vt0.c0, (vt0.c0 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)<=(vt0.c0)) IN (vt0.c0, (vt0.c0 IN ())))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)<=(vt0.c0)) IN (vt0.c0, (vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(MAX(COUNT(COUNT(*))))) ISNULL) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((TOTAL(MAX(COUNT(COUNT(*))))) ISNULL))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((TOTAL(MAX(COUNT(COUNT(*))))) ISNULL)) ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ());
SELECT vt0.c0, rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((((((rt1.c0))>=((rt1.c4))))LIKE(((((rt1.c0)OR(rt1.c0)))AND(rt1.c4))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((NOT ((((((rt1.c0))>=((rt1.c4))))LIKE(((((rt1.c0)OR(rt1.c0)))AND(rt1.c4))))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((((((((rt1.c0))>=((rt1.c4))))LIKE(((((rt1.c0)OR(rt1.c0)))AND(rt1.c4))))) ISNULL));
SELECT vt0.c0, rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ());
SELECT DISTINCT rt0.c2, rt0.c3, rt1.c3, rt1.c4, rt1.c0, rt0.c0, rt0.c1, rt1.c1 FROM rt1, vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt1.c3, rt1.c4, rt1.c0, rt0.c0, rt0.c1, rt1.c1 FROM rt1, vt0, rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt1.c3, rt1.c4, rt1.c0, rt0.c0, rt0.c1, rt1.c1 FROM rt1, vt0, rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS TEXT) AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt1.c3, rt1.c4, rt1.c0, rt0.c0, rt0.c1, rt1.c1 FROM rt1, vt0, rt0 WHERE (((CAST(CAST(rt0.c2 AS TEXT) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt1.c3, rt1.c4, rt1.c0, rt0.c0, rt0.c1, rt1.c1 FROM rt1, vt0, rt0;
SELECT ALL rt0.c3, rt1.c3, rt0.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) NOTNULL) GROUP BY rt0.c3, rt1.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt1.c3, rt0.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) NOTNULL) WHERE (rt1.c1) GROUP BY rt0.c3, rt1.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt1.c3, rt0.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) NOTNULL) WHERE ((NOT (rt1.c1))) GROUP BY rt0.c3, rt1.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt1.c3, rt0.c1, rt0.c2 FROM rt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) NOTNULL) WHERE (((rt1.c1) ISNULL)) GROUP BY rt0.c3, rt1.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt1.c3, rt0.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c1))) NOTNULL) GROUP BY rt0.c3, rt1.c3, rt0.c1, rt0.c2;
SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c0, rt1.c3;
SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c0, rt1.c3 HAVING ((MAX(SUM(vt0.c0)))/(COUNT(rt1.c2))) UNION ALL SELECT rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c0, rt1.c3 HAVING (NOT (((MAX(SUM(vt0.c0)))/(COUNT(rt1.c2))))) UNION ALL SELECT ALL rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c4, vt0.c0, vt0.c1, rt1.c1, rt1.c0, rt1.c3 HAVING ((((MAX(SUM(vt0.c0)))/(COUNT(rt1.c2)))) ISNULL);
SELECT rt0.c0, vt0.c0, rt1.c2, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c4, vt0.c1, rt1.c3, rt0.c2 FROM rt0, vt0, rt1;
SELECT rt0.c0, vt0.c0, rt1.c2, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c4, vt0.c1, rt1.c3, rt0.c2 FROM rt0, vt0, rt1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT rt0.c0, vt0.c0, rt1.c2, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c4, vt0.c1, rt1.c3, rt0.c2 FROM rt0, vt0, rt1 WHERE ((NOT (CAST(rt1.c1 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT rt0.c0, vt0.c0, rt1.c2, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c4, vt0.c1, rt1.c3, rt0.c2 FROM rt0, vt0, rt1 WHERE (((CAST(rt1.c1 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT rt0.c0, vt0.c0, rt1.c2, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c4, vt0.c1, rt1.c3, rt0.c2 FROM rt0, vt0, rt1;
SELECT DISTINCT rt1.c3, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c1, vt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c4)) BETWEEN ((NULL)) AND ((((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3)))));
SELECT DISTINCT rt1.c3, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c1, vt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c4)) BETWEEN ((NULL)) AND ((((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c3, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c1, vt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c4)) BETWEEN ((NULL)) AND ((((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c3, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c1, vt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c4)) BETWEEN ((NULL)) AND ((((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c3, rt0.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c2, rt0.c1, vt0.c0, rt1.c1, vt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c4)) BETWEEN ((NULL)) AND ((((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3)))));
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c3)GLOB(rt1.c1)) IN ())) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c3)GLOB(rt1.c1)) IN ())))) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c3)GLOB(rt1.c1)) IN ())) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c3, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c2 HAVING CASE WHEN ((GROUP_CONCAT(rt1.c2))/(rt1.c4)) THEN MIN(MAX(rt1.c2)) END UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c2 HAVING (NOT (CASE WHEN ((GROUP_CONCAT(rt1.c2))/(rt1.c4)) THEN MIN(MAX(rt1.c2)) END)) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c2 HAVING ((CASE WHEN ((GROUP_CONCAT(rt1.c2))/(rt1.c4)) THEN MIN(MAX(rt1.c2)) END) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((rt1.c0 COLLATE RTRIM)<(((rt1.c2) IS TRUE)))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (((rt1.c0 COLLATE RTRIM)<(((rt1.c2) IS TRUE)))))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((rt1.c0 COLLATE RTRIM)<(((rt1.c2) IS TRUE)))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))>((0.03888371962379844)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))>((0.03888371962379844)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))>((0.03888371962379844)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c4;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS INTEGER)) GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT (CAST(rt1.c1 COLLATE BINARY AS INTEGER)))) GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c4 UNION SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE (((CAST(rt1.c1 COLLATE BINARY AS INTEGER)) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c4;
SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c4;
SELECT rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0 HAVING (NOT ((((rt0.c2))!=((COUNT(*)))))) UNION ALL SELECT rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0 HAVING (NOT ((NOT ((((rt0.c2))<>((COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0 HAVING (((NOT ((((rt0.c2))!=((COUNT(*))))))) ISNULL);
SELECT rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0 HAVING (NOT ((((rt0.c2))!=((COUNT(*)))))) UNION ALL SELECT rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0 HAVING (NOT ((NOT ((((rt0.c2))<>((COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0 HAVING (((NOT ((((rt0.c2))!=((COUNT(*))))))) ISNULL);
SELECT rt0.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c0, rt1.c2, vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<(((vt0.c1 IN ()))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<(((vt0.c1 IN ()))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<(((vt0.c1 IN ()))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt1.c1, rt0.c2, rt0.c3, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt0, rt1;
SELECT DISTINCT rt1.c1, rt0.c2, rt0.c3, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt0, rt1 WHERE (0xa7f6715 COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, rt0.c2, rt0.c3, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt0, rt1 WHERE ((NOT (0xa7f6715 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, rt0.c2, rt0.c3, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt0, rt1 WHERE (((0Xa7f6715 COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, rt0.c2, rt0.c3, rt1.c3, rt1.c2, rt1.c4, rt1.c0 FROM rt0, rt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<<((~ (vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<<((~ (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<<((~ (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt1.c4, rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c2;
SELECT ALL rt1.c4, rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c2 HAVING AVG(((MAX(rt1.c0))GLOB(rt1.c2))) UNION ALL SELECT rt1.c4, rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c2 HAVING (NOT (AVG(((MAX(rt1.c0))GLOB(rt1.c2))))) UNION ALL SELECT ALL rt1.c4, rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c2 HAVING ((AVG(((MAX(rt1.c0))GLOB(rt1.c2)))) ISNULL);
SELECT rt0.c3, rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT rt0.c3, rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(vt0.c1))) UNION ALL SELECT rt0.c3, rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(vt0.c1))))) UNION ALL SELECT rt0.c3, rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(vt0.c1))) ISNULL));
SELECT rt0.c3, rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt1.c4, rt1.c0, rt1.c3, rt0.c0 FROM vt0, rt1, rt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt1.c4, rt1.c0, rt1.c3, rt0.c0 FROM vt0, rt1, rt0 WHERE (((((((((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))AND(rt0.c3)))AND(rt1.c4))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt1.c4, rt1.c0, rt1.c3, rt0.c0 FROM vt0, rt1, rt0 WHERE ((NOT (((((((((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))AND(rt0.c3)))AND(rt1.c4))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3))))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt1.c4, rt1.c0, rt1.c3, rt0.c0 FROM vt0, rt1, rt0 WHERE (((((((((((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))AND(rt0.c3)))AND(rt1.c4))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3))))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, rt1.c4, rt1.c0, rt1.c3, rt0.c0 FROM vt0, rt1, rt0;
SELECT ALL rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1;
SELECT ALL rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((((rt0.c0)<>(rt1.c1)))AND(((rt1.c1)%(rt0.c0)))))OR((~ (rt1.c4))))) GROUP BY rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1 UNION SELECT ALL rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE ((NOT (((((((rt0.c0)<>(rt1.c1)))AND(((rt1.c1)%(rt0.c0)))))OR((~ (rt1.c4))))))) GROUP BY rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1 UNION SELECT rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((((((rt0.c0)!=(rt1.c1)))AND(((rt1.c1)%(rt0.c0)))))OR((~ (rt1.c4))))) ISNULL)) GROUP BY rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1;
SELECT ALL rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt1.c4, rt0.c2, rt1.c3, vt0.c1, rt1.c2, vt0.c0, rt0.c0, rt1.c1;
SELECT rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 HAVING MIN(((rt1.c0) IS TRUE)) UNION ALL SELECT rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 HAVING (NOT (MIN(((rt1.c0) IS TRUE)))) UNION ALL SELECT rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 HAVING ((MIN(((rt1.c0) IS TRUE))) ISNULL);
SELECT rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 HAVING MIN(((rt1.c0) IS TRUE)) UNION ALL SELECT rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 HAVING (NOT (MIN(((rt1.c0) IS TRUE)))) UNION ALL SELECT rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 HAVING ((MIN(((rt1.c0) IS TRUE))) ISNULL);
SELECT rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c0, rt0.c0, rt1.c1, rt1.c3;
SELECT ALL rt0.c3, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT rt0.c3, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c3, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)|(rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0)|(rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)|(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt1, rt0, vt0 WHERE (((((((rt0.c0) ISNULL))OR(vt0.c1)))OR((+ (rt1.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt1, rt0, vt0 WHERE ((NOT (((((((rt0.c0) ISNULL))OR(vt0.c1)))OR((+ (rt1.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt1, rt0, vt0 WHERE (((((((((rt0.c0) ISNULL))OR(vt0.c1)))OR((+ (rt1.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c2;
SELECT rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN rt0 ON rt1.c1 COLLATE BINARY GROUP BY rt1.c4, rt1.c0;
SELECT rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN rt0 ON rt1.c1 COLLATE BINARY GROUP BY rt1.c4, rt1.c0 HAVING ((MIN(GROUP_CONCAT(rt1.c2))) ISNULL) UNION ALL SELECT rt1.c4, rt1.c0 FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON rt1.c1 COLLATE BINARY GROUP BY rt1.c4, rt1.c0 HAVING (NOT (((MIN(GROUP_CONCAT(rt1.c2))) ISNULL))) UNION ALL SELECT rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN rt0 ON rt1.c1 COLLATE BINARY GROUP BY rt1.c4, rt1.c0 HAVING ((((MIN(GROUP_CONCAT(rt1.c2))) ISNULL)) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (TRIM(DISTINCT NULL, rt1.c3) COLLATE NOCASE) UNION ALL SELECT * FROM rt1 WHERE ((NOT (TRIM(DISTINCT NULL, rt1.c3) COLLATE NOCASE))) UNION ALL SELECT * FROM rt1 WHERE (((TRIM(DISTINCT NULL, rt1.c3) COLLATE NOCASE) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (((rt1.c2)+(1.812476458E9))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (((rt1.c2)+(1.812476458E9))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((((rt1.c2)+(1.812476458E9))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING GROUP_CONCAT((~ (rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT((~ (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT((~ (rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING GROUP_CONCAT((~ (rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT((~ (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT((~ (rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT MAX((((rt1.c3, NULL, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c0 END, ((rt1.c3) BETWEEN ('-2050302534') AND (rt0.c2)), (((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))), rt1.c4 COLLATE BINARY, CAST(rt1.c4 AS REAL))) AND ((((rt1.c2)||(rt0.c1)), TRIM(DISTINCT rt0.c1, rt1.c2), ((rt0.c3) NOTNULL), CASE rt0.c2  WHEN rt1.c0 THEN rt1.c1 END, (~ (rt1.c2)))))) FROM rt1, rt0;
SELECT rt1.c0, rt1.c1, rt1.c4, vt0.c1, rt1.c2, rt1.c3 FROM rt1, vt0;
SELECT rt1.c0, rt1.c1, rt1.c4, vt0.c1, rt1.c2, rt1.c3 FROM rt1, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c4, vt0.c1, rt1.c2, rt1.c3 FROM rt1, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c4, vt0.c1, rt1.c2, rt1.c3 FROM rt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c4, vt0.c1, rt1.c2, rt1.c3 FROM rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1 WHERE (((((rt1.c2)>(rt1.c4))) BETWEEN (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c4 END) AND ((NULL IN ())))) UNION SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (((((rt1.c2)>(rt1.c4))) BETWEEN (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c4 END) AND ((NULL IN ())))))) UNION SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1 WHERE (((((((rt1.c2)>(rt1.c4))) BETWEEN (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c4 END) AND ((NULL IN ())))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1;
SELECT ALL rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, rt1 WHERE (CAST((~ (rt1.c1)) AS TEXT)) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, rt1 WHERE ((NOT (CAST((~ (rt1.c1)) AS TEXT)))) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, rt1 WHERE (((CAST((~ (rt1.c1)) AS TEXT)) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4, vt0.c1, vt0.c0, rt0.c3, rt1.c2, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(SUM(vt0.c0) AS TEXT) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS TEXT))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(SUM(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(SUM(vt0.c0) AS TEXT) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS TEXT))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(SUM(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE (((((((((((((CAST(rt1.c3 AS NUMERIC))OR(((rt1.c3) BETWEEN (rt1.c3) AND (x'')))))AND((rt1.c1 IN ()))))OR(((rt1.c0)AND(rt1.c1)))))OR(rt1.c3)))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(rt1.c2 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE ((NOT (((((((((((((CAST(rt1.c3 AS NUMERIC))OR(((rt1.c3) BETWEEN (rt1.c3) AND (x'')))))AND((rt1.c1 IN ()))))OR(((rt1.c0)AND(rt1.c1)))))OR(rt1.c3)))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(rt1.c2 COLLATE BINARY))))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE (((((((((((((((CAST(rt1.c3 AS NUMERIC))OR(((rt1.c3) BETWEEN (rt1.c3) AND (x'')))))AND((rt1.c1 IN ()))))OR(((rt1.c0)AND(rt1.c1)))))OR(rt1.c3)))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(rt1.c2 COLLATE BINARY))) ISNULL));
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1;
SELECT DISTINCT rt0.c1, rt1.c3, rt1.c2, vt0.c1, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0 CROSS JOIN vt0 ON (((rt1.c4)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) AND ((((rt1.c4) IS TRUE))));
SELECT DISTINCT rt0.c1, rt1.c3, rt1.c2, vt0.c1, rt0.c2, rt0.c0, rt1.c0 FROM rt1 NOT INDEXED, rt0 CROSS JOIN vt0 ON (((rt1.c4)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) AND ((((rt1.c4) IS TRUE)))) WHERE ((+ (((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt1.c3, rt1.c2, vt0.c1, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0 CROSS JOIN vt0 ON (((rt1.c4)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) AND ((((rt1.c4) IS TRUE)))) WHERE ((NOT ((+ (((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt1.c3, rt1.c2, vt0.c1, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0 CROSS JOIN vt0 ON (((rt1.c4)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) AND ((((rt1.c4) IS TRUE)))) WHERE ((((+ (((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c3, rt1.c2, vt0.c1, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0 CROSS JOIN vt0 ON (((rt1.c4)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) AND ((((rt1.c4) IS TRUE))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((HEX(DISTINCT vt0.c0))AND((NOT ('uB')))))AND((vt0.c1 IN (vt0.c1, -1867890246))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((HEX(DISTINCT vt0.c0))AND((NOT ('uB')))))AND((vt0.c1 IN (vt0.c1, -1867890246))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((HEX(DISTINCT vt0.c0))AND((NOT ('uB')))))AND((vt0.c1 IN (vt0.c1, -1867890246))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt0.c0, rt0.c1, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt0.c0, rt0.c1, vt0.c0;
SELECT rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt0.c0, rt0.c1, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt0.c0, rt0.c1, vt0.c0 HAVING TOTAL(CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c4 THEN MAX(SUM(MAX(rt1.c3))) WHEN MAX(rt1.c0) THEN MIN(rt1.c3) ELSE rt1.c3 END) UNION ALL SELECT ALL rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt0.c0, rt0.c1, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (TOTAL(CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c4 THEN MAX(SUM(MAX(rt1.c3))) WHEN MAX(rt1.c0) THEN MIN(rt1.c3) ELSE rt1.c3 END))) UNION ALL SELECT ALL rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt0.c0, rt0.c1, vt0.c0 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt0.c0, rt0.c1, vt0.c0 HAVING ((TOTAL(CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c4 THEN MAX(SUM(MAX(rt1.c3))) WHEN MAX(rt1.c0) THEN MIN(rt1.c3) ELSE rt1.c3 END)) ISNULL);
SELECT rt0.c0, vt0.c0, rt1.c1 FROM vt0, rt0, rt1;
SELECT rt0.c0, vt0.c0, rt1.c1 FROM vt0, rt0, rt1 WHERE ((+ ((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((x'')))))) UNION ALL SELECT rt0.c0, vt0.c0, rt1.c1 FROM vt0, rt0, rt1 WHERE ((NOT ((+ ((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((x'')))))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt1.c1 FROM vt0, rt0, rt1 WHERE ((((+ ((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((x'')))))) ISNULL));
SELECT rt0.c0, vt0.c0, rt1.c1 FROM vt0, rt0, rt1;
SELECT DISTINCT rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c4 FROM rt1, rt0, vt0;
SELECT DISTINCT rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE (((((rt1.c2))<((rt0.c1))) IN ())) UNION SELECT DISTINCT rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE ((NOT (((((rt1.c2))<((rt0.c1))) IN ())))) UNION SELECT DISTINCT rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c4 FROM rt1, rt0, vt0 WHERE (((((((rt1.c2))<((rt0.c1))) IN ())) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c4 FROM rt1, rt0, vt0;
SELECT rt1.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt0, rt1 NOT INDEXED, vt0 GROUP BY rt1.c3, rt1.c1, rt0.c1, vt0.c0;
SELECT rt1.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt0, rt1, vt0 WHERE (((NULL)OR(CASE vt0.c0  WHEN rt1.c4 THEN rt0.c0 END))) GROUP BY rt1.c3, rt1.c1, rt0.c1, vt0.c0 UNION SELECT rt1.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt0, rt1, vt0 WHERE ((NOT (((NULL)OR(CASE vt0.c0  WHEN rt1.c4 THEN rt0.c0 END))))) GROUP BY rt1.c3, rt1.c1, rt0.c1, vt0.c0 UNION SELECT rt1.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt0, rt1, vt0 WHERE (((((NULL)OR(CASE vt0.c0  WHEN rt1.c4 THEN rt0.c0 END))) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt0.c1, vt0.c0;
SELECT rt1.c3, rt1.c1, rt0.c1, vt0.c0 FROM rt0, rt1 NOT INDEXED, vt0 GROUP BY rt1.c3, rt1.c1, rt0.c1, vt0.c0;
SELECT rt1.c4, rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c0 FROM rt1 CROSS JOIN vt0 ON STRFTIME(rt1.c4, ((rt1.c1)-(rt1.c1)), (rt1.c4 IN (vt0.c1))) GROUP BY rt1.c4, rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c0;
SELECT rt1.c4, rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c0 FROM rt1 CROSS JOIN vt0 ON STRFTIME(rt1.c4, ((rt1.c1)-(rt1.c1)), (rt1.c4 IN (vt0.c1))) GROUP BY rt1.c4, rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c0 HAVING (((0x4581ac2d, MAX(COUNT(*)), rt1.c0)) BETWEEN ((rt1.c3, ((rt1.c1)IS(MIN(COUNT(x'')))), SUM(MIN(SUM(rt1.c2))))) AND ((GROUP_CONCAT(MAX(TOTAL(rt1.c0))), rt1.c4, CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 ELSE COUNT(*) END))) UNION ALL SELECT rt1.c4, rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c0 FROM rt1 CROSS JOIN vt0 ON STRFTIME(rt1.c4, ((rt1.c1)-(rt1.c1)), (rt1.c4 IN (vt0.c1))) GROUP BY rt1.c4, rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c0 HAVING (NOT ((((0x4581ac2d, MAX(COUNT(*)), rt1.c0)) BETWEEN ((rt1.c3, ((rt1.c1)IS(MIN(COUNT(x'')))), SUM(MIN(SUM(rt1.c2))))) AND ((GROUP_CONCAT(MAX(TOTAL(rt1.c0))), rt1.c4, CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 ELSE COUNT(*) END))))) UNION ALL SELECT ALL rt1.c4, rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c0 FROM rt1 CROSS JOIN vt0 ON STRFTIME(rt1.c4, ((rt1.c1)-(rt1.c1)), (rt1.c4 IN (vt0.c1))) GROUP BY rt1.c4, rt1.c3, rt1.c1, vt0.c1, vt0.c0, rt1.c0 HAVING (((((0X4581ac2d, MAX(COUNT(*)), rt1.c0)) BETWEEN ((rt1.c3, ((rt1.c1)IS(MIN(COUNT(x'')))), SUM(MIN(SUM(rt1.c2))))) AND ((GROUP_CONCAT(MAX(TOTAL(rt1.c0))), rt1.c4, CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 ELSE COUNT(*) END)))) ISNULL);
SELECT * FROM vt0, rt0 NATURAL JOIN rt1;
SELECT * FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((((vt0.c0, rt1.c4, rt1.c1)) NOT BETWEEN ((((rt0.c2)+(rt1.c0)), rt0.c2, (1.482879961E9 IN ()))) AND ((rt1.c3, 0.16326839437963947, ((x'') NOTNULL))))) UNION ALL SELECT * FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((NOT ((((vt0.c0, rt1.c4, rt1.c1)) NOT BETWEEN ((((rt0.c2)+(rt1.c0)), rt0.c2, (1.482879961E9 IN ()))) AND ((rt1.c3, 0.16326839437963947, ((x'') NOTNULL))))))) UNION ALL SELECT * FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((((((vt0.c0, rt1.c4, rt1.c1)) NOT BETWEEN ((((rt0.c2)+(rt1.c0)), rt0.c2, (1.482879961E9 IN ()))) AND ((rt1.c3, 0.16326839437963947, ((x'') NOTNULL))))) ISNULL));
SELECT * FROM vt0, rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON (- ((+ (rt0.c2))));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON (- ((+ (rt0.c2)))) WHERE ((((rt1.c2)<<(rt0.c0)) IN (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON (- ((+ (rt0.c2)))) WHERE ((NOT ((((rt1.c2)<<(rt0.c0)) IN (rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON (- ((+ (rt0.c2)))) WHERE ((((((rt1.c2)<<(rt0.c0)) IN (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON (- ((+ (rt0.c2))));
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(vt0.c1)) THEN ((('-442519728')) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)-(vt0.c1)) THEN ((('-442519728')) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)-(vt0.c1)) THEN ((('-442519728')) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, rt1.c2, vt0.c0, rt1.c4, rt0.c1, rt0.c0, rt1.c3, rt0.c3 FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (((rt1.c1)GLOB(rt0.c1))) AND (((rt1.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt1.c0)))OR(IFNULL(rt1.c4, rt0.c3))))OR((rt1.c1 IN ()))) GROUP BY vt0.c1, rt1.c2, vt0.c0, rt1.c4, rt0.c1, rt0.c0, rt1.c3, rt0.c3;
SELECT ALL MIN(CASE WHEN (((vt0.c1))>((rt0.c1))) THEN vt0.c1 WHEN (~ (rt0.c0)) THEN UNLIKELY(rt0.c0) WHEN 0.29332589650682517 THEN COALESCE(rt0.c3, vt0.c1) WHEN ((vt0.c1)/(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) WHEN (((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) THEN ((((NULL)OR(vt0.c1)))OR(vt0.c1)) END) FROM vt0, rt0 ORDER BY ((((rt0.c0)AND(CAST(rt0.c1 AS TEXT))))AND(((((vt0.c0)AND('-1751784597')))AND(rt0.c0))))  NULLS LAST;
SELECT rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((((rt0.c3 IN ()))+(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c3 IN ()))+(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((((((rt0.c3 IN ()))+(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((+ (rt1.c2)))IS NOT(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((+ (rt1.c2)))IS NOT(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((+ (rt1.c2)))IS NOT(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0;
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (LENGTH(CAST(rt1.c1 AS INTEGER))) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0 UNION SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (LENGTH(CAST(rt1.c1 AS INTEGER))))) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0 UNION SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (((LENGTH(CAST(rt1.c1 AS INTEGER))) ISNULL)) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0;
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0;
SELECT ALL rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE '173879510'  WHEN rt1.c4 THEN rt1.c4 END) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ('Izo趯B')) GROUP BY rt1.c3;
SELECT rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE '173879510'  WHEN rt1.c4 THEN rt1.c4 END) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ('Izo趯B')) GROUP BY rt1.c3 HAVING (((- (COUNT(*)))) BETWEEN (MAX(COUNT(SUM(AVG(rt0.c3))))) AND (MAX(COUNT(SUM(MIN(AVG(MAX(MAX(MIN(rt0.c1)))))))) COLLATE NOCASE)) UNION ALL SELECT rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE '173879510'  WHEN rt1.c4 THEN rt1.c4 END) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ('Izo趯B')) GROUP BY rt1.c3 HAVING (NOT ((((- (COUNT(*)))) BETWEEN (MAX(COUNT(SUM(AVG(rt0.c3))))) AND (MAX(COUNT(SUM(MIN(AVG(MAX(MAX(MIN(rt0.c1)))))))) COLLATE NOCASE)))) UNION ALL SELECT rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE '173879510'  WHEN rt1.c4 THEN rt1.c4 END) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ('Izo趯B')) GROUP BY rt1.c3 HAVING (((((- (COUNT(*)))) BETWEEN (MAX(COUNT(SUM(AVG(rt0.c3))))) AND (MAX(COUNT(SUM(MIN(AVG(MAX(MAX(MIN(rt0.c1)))))))) COLLATE NOCASE))) ISNULL);
SELECT rt1.c4, rt1.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1;
SELECT ALL rt1.c4, rt1.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (NULL) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (NULL))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (((NULL) ISNULL));
SELECT rt1.c4, rt1.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE ((((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c3))))>((((vt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE ((NOT ((((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c3))))>((((vt0.c1) IS FALSE))))))) UNION SELECT DISTINCT * FROM vt0, rt0, rt1 WHERE ((((((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c3))))>((((vt0.c1) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, rt1;
SELECT rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1;
SELECT rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1 FROM vt0, rt1, rt0 WHERE (0.7387454406034972) GROUP BY rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1 UNION SELECT rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1 FROM vt0, rt1, rt0 WHERE ((NOT (0.7387454406034972))) GROUP BY rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1 FROM vt0, rt1, rt0 WHERE (((0.7387454406034972) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1;
SELECT rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt1.c3, rt1.c4, rt0.c3, vt0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(COUNT(vt0.c0))) ISNULL);
SELECT * FROM rt1, vt0, rt0;
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))AND(rt1.c1)))OR(rt1.c3)))) AND (('-163938028')))) UNION ALL SELECT ALL * FROM rt1, vt0, rt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))AND(rt1.c1)))OR(rt1.c3)))) AND (('-163938028')))))) UNION ALL SELECT * FROM rt1, vt0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))AND(rt1.c1)))OR(rt1.c3)))) AND (('-163938028')))) ISNULL));
SELECT * FROM rt1, vt0, rt0;
SELECT DISTINCT rt0.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c4) IS FALSE) THEN CAST(rt1.c4 AS TEXT) WHEN (((rt0.c2))<((rt0.c2))) THEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)) WHEN (~ (rt0.c2)) THEN (rt0.c1 IN (rt1.c2)) END;
SELECT DISTINCT rt0.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c4) IS FALSE) THEN CAST(rt1.c4 AS TEXT) WHEN (((rt0.c2))<((rt0.c2))) THEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)) WHEN (~ (rt0.c2)) THEN (rt0.c1 IN (rt1.c2)) END WHERE (COALESCE(DISTINCT CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c3)), ((rt0.c2)%(rt0.c0)), ((rt0.c2) NOT NULL), (((rt0.c2))>(('ZxTH5'))), ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c3)))) UNION SELECT DISTINCT rt0.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c4) IS FALSE) THEN CAST(rt1.c4 AS TEXT) WHEN (((rt0.c2))<((rt0.c2))) THEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)) WHEN (~ (rt0.c2)) THEN (rt0.c1 IN (rt1.c2)) END WHERE ((NOT (COALESCE(DISTINCT CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c3)), ((rt0.c2)%(rt0.c0)), ((rt0.c2) NOT NULL), (((rt0.c2))>(('ZxTH5'))), ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c3)))))) UNION SELECT DISTINCT rt0.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c4) IS FALSE) THEN CAST(rt1.c4 AS TEXT) WHEN (((rt0.c2))<((rt0.c2))) THEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)) WHEN (~ (rt0.c2)) THEN (rt0.c1 IN (rt1.c2)) END WHERE (((COALESCE(DISTINCT CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c3)), ((rt0.c2)%(rt0.c0)), ((rt0.c2) NOT NULL), (((rt0.c2))>(('ZxTH5'))), ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt1.c4) IS FALSE) THEN CAST(rt1.c4 AS TEXT) WHEN (((rt0.c2))<((rt0.c2))) THEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)) WHEN (~ (rt0.c2)) THEN (rt0.c1 IN (rt1.c2)) END;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c3 IN (rt0.c1, rt0.c0)))AND(((rt0.c1)*(rt0.c1)))))AND(((((((((rt0.c1)OR(rt0.c3)))OR(x'')))OR(rt0.c2)))AND(rt0.c0))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c3 IN (rt0.c1, rt0.c0)))AND(((rt0.c1)*(rt0.c1)))))AND(((((((((rt0.c1)OR(rt0.c3)))OR(x'')))OR(rt0.c2)))AND(rt0.c0))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((rt0.c3 IN (rt0.c1, rt0.c0)))AND(((rt0.c1)*(rt0.c1)))))AND(((((((((rt0.c1)OR(rt0.c3)))OR(x'')))OR(rt0.c2)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
