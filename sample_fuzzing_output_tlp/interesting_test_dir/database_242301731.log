-- Time: 2024/06/12 12:17:36
-- Database: database31
-- Database version: 3.40.0
-- seed value: 242301731
PRAGMA cache_size = 50000; -- 14ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((((((vt0.c0)>>(vt0.c0)))OR(LAST_INSERT_ROWID())))OR(((vt0.c0)=(vt0.c0)))); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 1ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0Xffffffff9c4dc660), (0.7727486937537738), ('u'''); -- 1ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (0x52a96579); -- 1ms;
ANALYZE rt1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6145'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c1)=(x'66f41738', x'ed28'); -- 0ms;
END; -- 1ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0.14787075148625994); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (NULL); -- 0ms;
DROP TABLE IF EXISTS vt0; -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE rt1 SET (c1, c0)=(0.14787075148625994, 0.8619788587661977) WHERE ((((rt1.c2)*(rt1.c1)))>=(rt1.c0 COLLATE NOCASE)); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(x'', x'', 0.9161304655168679) WHERE (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((NULLIF(vt1.c0, vt1.c0)))); -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(0.2729245025170207) WHERE ((((((rt1.c1)*(rt1.c2)))AND(((rt1.c0)<=(rt1.c1)))))OR(((rt1.c2)||(rt1.c0)))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (-1.672624544E9), (-867143615), (x'96d5'), (x''), ('0.14787075148625994'), (-1.672624544E9), (x''); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE vt1 SET c0=0.5715300709923323 WHERE ((((-8.67143615E8) NOTNULL))<<((NOT ('a8un')))); -- 0ms;
UPDATE rt1 SET (c1, c0, c2)=(x'', NULL, x''); -- 4ms;
INSERT INTO vt1(vt1) VALUES('automerge=14'); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (1612517630, NULL); -- 0ms;
SELECT rtreecheck('rt1'); -- 2ms;
UPDATE vt1 SET (c0)=(0.8619788587661977) WHERE GLOB((((vt1.c0))>=((vt1.c0))), (('-1672624544') IS FALSE)); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR ROLLBACK vt1 SET c0='-867143615'; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=-1672624544,4');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 125043661);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 517562682); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 2ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
INSERT OR FAIL INTO rt1(c0, c2, c1) VALUES (x'', x'', ((IFNULL(-8.67143615E8, NULL))>(x'a878'))); -- 6ms;
INSERT OR IGNORE INTO vt1 VALUES ('rZSA'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0.8591803840178737), (x''), (0.9161304655168679); -- 4ms;
INSERT OR FAIL INTO vt1(c0) VALUES (-60891574); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=11'); -- 1ms;
VACUUM; -- 3ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES ('-1672624544', 0.8619788587661977); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('192796866', x'', 0.24649394292057314), (0.231233363796144, 0.23622473891001705, 0.863131966103685), ('-1513282546', '[i', 0.7727486937537738); -- 0ms;
UPDATE OR FAIL vt1 SET c0=0.26162031369132743, c0=NULL; -- 0ms;
PRAGMA temp.cache_spill = true; -- 1ms;
UPDATE rt1 SET c2='1386833273' WHERE (+ (((rt1.c2)IS NOT(rt1.c2)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1513282546);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
VACUUM temp; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'f07c' AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'4219', NULL, 0X61d4ff19); -- 0ms;
INSERT OR REPLACE INTO rt1(c1) VALUES (NULL); -- 0ms;
UPDATE vt1 SET (c0)=(NULL) WHERE 0.5355138302392988; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=2131205313,3');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
UPDATE OR REPLACE rt0 SET c1='' WHERE ((CAST(rt0.c0 AS INTEGER))IS(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('-1672624544', '-1943731380') WHERE HEX(CASE WHEN vt1.c0 THEN vt1.c0 END); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('-1513282546'); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('-333166856'); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (0.7516656101818894, '?j3{૔'), (x'', 0.8196081101170553), (NULL, x''), (0.863131966103685, ''), (x'7b27', '-668139430'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=2131205313,5');\n; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.974879130418851); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=8'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.short_column_names = false; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT rt1.c1 FROM rt1 WHERE (LIKELY(CASE NULL  WHEN 0.8503090316243442 THEN '_d%	Y' ELSE x'' END)); -- 0ms;
UPDATE OR REPLACE rt0 SET c2='-1828995205'; -- 1ms;
UPDATE OR FAIL rt0 SET (c1)=(x'') WHERE (((rt0.c2 IN ()))*(((rt0.c0)<<(rt0.c1)))); -- 0ms;
END; -- 2ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR ABORT vt1 SET c0='2131205313' WHERE (((vt1.c0)||(vt1.c0)) IN ()); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (2131205313), (-3.33166856E8), ('B5|'); -- 2ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)AND(((vt1.c0) ISNULL))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT * FROM rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)AND(((vt1.c0) ISNULL))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) WHERE ((((+ (rt1.c2))) ISNULL)) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)AND(((vt1.c0) ISNULL))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) WHERE ((NOT ((((+ (rt1.c2))) ISNULL)))) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)AND(((vt1.c0) ISNULL))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) WHERE ((((((+ (rt1.c2))) ISNULL)) ISNULL));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)AND(((vt1.c0) ISNULL))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((v0.c0 IN ())) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((NOT ((v0.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1)))+(rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c1)))+(rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1)))+(rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(CAST(SUM(SUM(MAX(MAX(v0.c0)))) AS BLOB)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(CAST(SUM(SUM(MAX(MAX(v0.c0)))) AS BLOB)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(CAST(SUM(SUM(MAX(MAX(v0.c0)))) AS BLOB))) ISNULL);
SELECT ALL rt0.c2, rt1.c1, rt1.c2, vt1.c0, rt0.c1, rt1.c0, rt0.c0 FROM rt1, vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ());
SELECT ALL rt0.c2, rt1.c1, rt1.c2, vt1.c0, rt0.c1, rt1.c0, rt0.c0 FROM rt1, vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ()) WHERE (((CAST(rt1.c2 AS NUMERIC))IS(((rt0.c1)/(rt1.c0))))) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt1.c2, vt1.c0, rt0.c1, rt1.c0, rt0.c0 FROM rt1, vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ()) WHERE ((NOT (((CAST(rt1.c2 AS NUMERIC))IS(((rt0.c1)/(rt1.c0))))))) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt1.c2, vt1.c0, rt0.c1, rt1.c0, rt0.c0 FROM rt1, vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ()) WHERE (((((CAST(rt1.c2 AS NUMERIC))IS(((rt0.c1)/(rt1.c0))))) ISNULL));
SELECT ALL rt0.c2, rt1.c1, rt1.c2, vt1.c0, rt0.c1, rt1.c0, rt0.c0 FROM rt1, vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ());
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 NATURAL JOIN v0;
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 NATURAL JOIN v0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt1.c2 AS BLOB) WHEN 'q^왠	mwB' THEN (((rt0.c0))==((rt1.c1))) WHEN (~ (vt1.c0)) THEN (~ (rt0.c1)) ELSE (rt1.c2 IN ()) END) UNION SELECT DISTINCT rt1.c0, rt0.c1, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 NATURAL JOIN v0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt1.c2 AS BLOB) WHEN 'q^왠	mwB' THEN (((rt0.c0))=((rt1.c1))) WHEN (~ (vt1.c0)) THEN (~ (rt0.c1)) ELSE (rt1.c2 IN ()) END))) UNION SELECT DISTINCT rt1.c0, rt0.c1, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 NATURAL JOIN v0 WHERE (((CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt1.c2 AS BLOB) WHEN 'q^왠	mwB' THEN (((rt0.c0))==((rt1.c1))) WHEN (~ (vt1.c0)) THEN (~ (rt0.c1)) ELSE (rt1.c2 IN ()) END) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 NATURAL JOIN v0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((v0.c0)|(v0.c0)))<<((((v0.c0)) BETWEEN ((0.08488432703516047)) AND ((v0.c0)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((((v0.c0)|(v0.c0)))<<((((v0.c0)) BETWEEN ((0.08488432703516047)) AND ((v0.c0)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((((v0.c0)|(v0.c0)))<<((((v0.c0)) BETWEEN ((0.08488432703516047)) AND ((v0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING UPPER((- (COUNT(*)))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING (NOT (UPPER((- (COUNT(*)))))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING ((UPPER((- (COUNT(*))))) ISNULL);
SELECT rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING UPPER((- (COUNT(*)))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING (NOT (UPPER((- (COUNT(*)))))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING ((UPPER((- (COUNT(*))))) ISNULL);
SELECT rt1.c1, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0;
SELECT v0.c0, rt0.c2 FROM vt1, v0, rt0;
SELECT v0.c0, rt0.c2 FROM vt1, v0, rt0 WHERE (CASE WHEN NULL THEN ((rt0.c0) NOT BETWEEN (0.23622473891001705) AND (rt0.c0)) WHEN ((NULL)||(rt0.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN CAST(v0.c0 AS INTEGER) THEN ((((rt0.c0)AND(rt0.c1)))AND(vt1.c0)) END) UNION ALL SELECT v0.c0, rt0.c2 FROM vt1, v0, rt0 WHERE ((NOT (CASE WHEN NULL THEN ((rt0.c0) NOT BETWEEN (0.23622473891001705) AND (rt0.c0)) WHEN ((NULL)||(rt0.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN CAST(v0.c0 AS INTEGER) THEN ((((rt0.c0)AND(rt0.c1)))AND(vt1.c0)) END))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM vt1, v0, rt0 WHERE (((CASE WHEN NULL THEN ((rt0.c0) NOT BETWEEN (0.23622473891001705) AND (rt0.c0)) WHEN ((NULL)||(rt0.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN CAST(v0.c0 AS INTEGER) THEN ((((rt0.c0)AND(rt0.c1)))AND(vt1.c0)) END) ISNULL));
SELECT v0.c0, rt0.c2 FROM vt1, v0, rt0;
SELECT DISTINCT * FROM rt0, v0 CROSS JOIN vt1 ON NULL COLLATE NOCASE;
SELECT DISTINCT * FROM rt0, v0 CROSS JOIN vt1 ON NULL COLLATE NOCASE WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c0)<>(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM rt0, v0 CROSS JOIN vt1 ON NULL COLLATE NOCASE WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c0)!=(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM rt0, v0 CROSS JOIN vt1 ON NULL COLLATE NOCASE WHERE (((((rt0.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c0)!=(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0 CROSS JOIN vt1 ON NULL COLLATE NOCASE;
SELECT ALL rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON (((v0.c0 IN ()))IS(((rt1.c1)>>(rt1.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) NOTNULL) GROUP BY rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0;
SELECT ALL rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON (((v0.c0 IN ()))IS(((rt1.c1)>>(rt1.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) NOTNULL) WHERE (CASE WHEN (rt0.c1 IN ()) THEN vt1.c0 WHEN CASE x''  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c0) BETWEEN (NULL) AND (rt1.c0)) WHEN (NOT (rt0.c2)) THEN CASE NULL  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c1 WHEN -760153745 THEN v0.c0 END END) GROUP BY rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0 UNION SELECT ALL rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON (((v0.c0 IN ()))IS(((rt1.c1)>>(rt1.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) NOTNULL) WHERE ((NOT (CASE WHEN (rt0.c1 IN ()) THEN vt1.c0 WHEN CASE x''  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c0) BETWEEN (NULL) AND (rt1.c0)) WHEN (NOT (rt0.c2)) THEN CASE NULL  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c1 WHEN -760153745 THEN v0.c0 END END))) GROUP BY rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0 UNION SELECT ALL rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON (((v0.c0 IN ()))IS(((rt1.c1)>>(rt1.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) NOTNULL) WHERE (((CASE WHEN (rt0.c1 IN ()) THEN vt1.c0 WHEN CASE x''  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c0) BETWEEN (NULL) AND (rt1.c0)) WHEN (NOT (rt0.c2)) THEN CASE NULL  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c1 WHEN -760153745 THEN v0.c0 END END) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0;
SELECT ALL rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON (((v0.c0 IN ()))IS(((rt1.c1)>>(rt1.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) NOTNULL) GROUP BY rt1.c2, vt1.c0, rt0.c2, rt0.c1, rt1.c0, rt0.c0, v0.c0;
SELECT ALL rt0.c0, rt1.c2 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c0, rt1.c2;
SELECT rt0.c0, rt1.c2 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c0, rt1.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt1.c2 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c0, rt1.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt1.c2 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c0, rt1.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL rt1.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN x'f424' THEN rt0.c2 WHEN rt1.c2 THEN x'43a4' ELSE rt1.c0 END AS INTEGER);
SELECT rt1.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN x'f424' THEN rt0.c2 WHEN rt1.c2 THEN x'43a4' ELSE rt1.c0 END AS INTEGER) WHERE ((+ ((rt1.c2 IN (rt0.c2))))) UNION ALL SELECT ALL rt1.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN x'f424' THEN rt0.c2 WHEN rt1.c2 THEN x'43a4' ELSE rt1.c0 END AS INTEGER) WHERE ((NOT ((+ ((rt1.c2 IN (rt0.c2))))))) UNION ALL SELECT ALL rt1.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN x'f424' THEN rt0.c2 WHEN rt1.c2 THEN x'43a4' ELSE rt1.c0 END AS INTEGER) WHERE ((((+ ((rt1.c2 IN (rt0.c2))))) ISNULL));
SELECT ALL rt1.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN x'f424' THEN rt0.c2 WHEN rt1.c2 THEN x'43a4' ELSE rt1.c0 END AS INTEGER);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)==(rt0.c2)) IN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0)=(rt0.c2)) IN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)==(rt0.c2)) IN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)) THEN TYPEOF(vt1.c0) END GROUP BY rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2;
SELECT ALL rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)) THEN TYPEOF(vt1.c0) END WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c0 THEN 0X64ae8f3c ELSE (rt1.c2 IN ()) END) GROUP BY rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2 UNION SELECT ALL rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)) THEN TYPEOF(vt1.c0) END WHERE ((NOT (CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c0 THEN 0X64ae8f3c ELSE (rt1.c2 IN ()) END))) GROUP BY rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2 UNION SELECT ALL rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)) THEN TYPEOF(vt1.c0) END WHERE (((CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c0 THEN 0x64ae8f3c ELSE (rt1.c2 IN ()) END) ISNULL)) GROUP BY rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2;
SELECT rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt1, rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)) THEN TYPEOF(vt1.c0) END GROUP BY rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt1.c2;
SELECT ALL rt1.c0, vt1.c0, rt0.c2, rt0.c1, rt1.c2 FROM rt1, vt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt0.c2, rt0.c1, rt1.c2;
SELECT rt1.c0, vt1.c0, rt0.c2, rt0.c1, rt1.c2 FROM rt1, vt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt0.c2, rt0.c1, rt1.c2 HAVING CAST(CASE WHEN SUM(rt1.c2) THEN '103420724' WHEN AVG(rt1.c0) THEN vt1.c0 WHEN '-385074249' THEN SUM(GROUP_CONCAT(TOTAL(SUM('-1672624544')))) WHEN rt1.c2 THEN MIN(rt0.c1) WHEN rt1.c2 THEN SUM(COUNT(rt1.c1)) ELSE x'' END AS REAL) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt0.c2, rt0.c1, rt1.c2 FROM rt1, vt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt0.c2, rt0.c1, rt1.c2 HAVING (NOT (CAST(CASE WHEN SUM(rt1.c2) THEN '103420724' WHEN AVG(rt1.c0) THEN vt1.c0 WHEN '-385074249' THEN SUM(GROUP_CONCAT(TOTAL(SUM('-1672624544')))) WHEN rt1.c2 THEN MIN(rt0.c1) WHEN rt1.c2 THEN SUM(COUNT(rt1.c1)) ELSE x'' END AS REAL))) UNION ALL SELECT rt1.c0, vt1.c0, rt0.c2, rt0.c1, rt1.c2 FROM rt1, vt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt0.c2, rt0.c1, rt1.c2 HAVING ((CAST(CASE WHEN SUM(rt1.c2) THEN '103420724' WHEN AVG(rt1.c0) THEN vt1.c0 WHEN '-385074249' THEN SUM(GROUP_CONCAT(TOTAL(SUM('-1672624544')))) WHEN rt1.c2 THEN MIN(rt0.c1) WHEN rt1.c2 THEN SUM(COUNT(rt1.c1)) ELSE x'' END AS REAL)) ISNULL);
SELECT ALL * FROM vt1, rt0, v0;
SELECT ALL * FROM vt1, rt0, v0 WHERE (((NULL)AND(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1, rt0, v0 WHERE ((NOT (((NULL)AND(((rt0.c1) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt1, rt0, v0 WHERE (((((NULL)AND(((rt0.c1) IS FALSE)))) ISNULL));
SELECT ALL * FROM vt1, rt0, v0;
SELECT DISTINCT v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON (((NOT (rt0.c2)))OR(((-6.0891574E7)<>(vt1.c0))));
SELECT DISTINCT v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON (((NOT (rt0.c2)))OR(((-6.0891574E7)!=(vt1.c0)))) WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (TYPEOF(rt1.c1)) AND (((rt1.c1)IS NOT(rt1.c1))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON (((NOT (rt0.c2)))OR(((-6.0891574E7)<>(vt1.c0)))) WHERE ((NOT (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (TYPEOF(rt1.c1)) AND (((rt1.c1)IS NOT(rt1.c1))))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON (((NOT (rt0.c2)))OR(((-6.0891574E7)<>(vt1.c0)))) WHERE (((((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (TYPEOF(rt1.c1)) AND (((rt1.c1)IS NOT(rt1.c1))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON (((NOT (rt0.c2)))OR(((-6.0891574E7)<>(vt1.c0))));
SELECT rt0.c1, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 CROSS JOIN rt0 ON RTRIM((rt0.c2 IN (rt0.c1))) GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c0;
SELECT rt0.c1, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 CROSS JOIN rt0 ON RTRIM((rt0.c2 IN (rt0.c1))) WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))) IS TRUE)) GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 CROSS JOIN rt0 ON RTRIM((rt0.c2 IN (rt0.c1))) WHERE ((NOT ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))) IS TRUE)))) GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c0 UNION SELECT rt0.c1, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 CROSS JOIN rt0 ON RTRIM((rt0.c2 IN (rt0.c1))) WHERE ((((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c0;
SELECT rt0.c1, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 CROSS JOIN rt0 ON RTRIM((rt0.c2 IN (rt0.c1))) GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((COUNT(MIN(GROUP_CONCAT(v0.c0)))) NOT BETWEEN (GROUP_CONCAT(AVG(SUM(vt1.c0)))) AND (((MAX(vt1.c0)) ISNULL))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (((COUNT(MIN(GROUP_CONCAT(v0.c0)))) NOT BETWEEN (GROUP_CONCAT(AVG(SUM(vt1.c0)))) AND (((MAX(vt1.c0)) ISNULL))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((((COUNT(MIN(GROUP_CONCAT(v0.c0)))) NOT BETWEEN (GROUP_CONCAT(AVG(SUM(vt1.c0)))) AND (((MAX(vt1.c0)) ISNULL)))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END COLLATE NOCASE) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END COLLATE NOCASE))) UNION ALL SELECT * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END COLLATE NOCASE) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2;
SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt0, rt1 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt1.c0))) NOT NULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt0, rt1 WHERE ((NOT (((((((rt0.c0)OR(rt0.c0)))OR(rt1.c0))) NOT NULL)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt0, rt1 WHERE (((((((((rt0.c0)OR(rt0.c0)))OR(rt1.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2;
SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2 HAVING 0xffffffffbee6cbae UNION ALL SELECT v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2 HAVING (NOT (0Xffffffffbee6cbae)) UNION ALL SELECT ALL v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2 HAVING ((0xffffffffbee6cbae) ISNULL);
SELECT ALL v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2 HAVING 0xffffffffbee6cbae UNION ALL SELECT v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2 HAVING (NOT (0Xffffffffbee6cbae)) UNION ALL SELECT ALL v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2 HAVING ((0xffffffffbee6cbae) ISNULL);
SELECT ALL v0.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON ((x'0774')AND(rt1.c1 COLLATE BINARY)) CROSS JOIN v0 ON ((CAST(rt1.c1 AS TEXT))<(((rt1.c2) NOT BETWEEN (v0.c0) AND (NULL)))) GROUP BY v0.c0, rt1.c2;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((0.3437996760982327 IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((0.3437996760982327 IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((0.3437996760982327 IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, rt1.c1, rt0.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c2;
SELECT ALL vt1.c0, rt1.c1, rt0.c2 FROM rt0, vt1, rt1 WHERE (((((vt1.c0)*(vt1.c0)))AND(((rt0.c2)=(vt1.c0))))) GROUP BY vt1.c0, rt1.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt1.c1, rt0.c2 FROM rt0, vt1, rt1 WHERE ((NOT (((((vt1.c0)*(vt1.c0)))AND(((rt0.c2)==(vt1.c0))))))) GROUP BY vt1.c0, rt1.c1, rt0.c2 UNION SELECT vt1.c0, rt1.c1, rt0.c2 FROM rt0, vt1, rt1 WHERE (((((((vt1.c0)*(vt1.c0)))AND(((rt0.c2)=(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt0.c2;
SELECT vt1.c0, rt1.c1, rt0.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING v0.c0 UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING v0.c0 UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (((TYPEOF(v0.c0)) NOT BETWEEN ((x'' IN ())) AND (v0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (((TYPEOF(v0.c0)) NOT BETWEEN ((x'' IN ())) AND (v0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt1, v0 WHERE (((((TYPEOF(v0.c0)) NOT BETWEEN ((x'' IN ())) AND (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT * FROM rt1, rt0, vt1, v0;
SELECT DISTINCT * FROM rt1, rt0, vt1, v0 WHERE (((((((rt1.c0)GLOB(vt1.c0)))AND((('&ܯB\n+') BETWEEN (rt1.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM rt1, rt0, vt1, v0 WHERE ((NOT (((((((rt1.c0)GLOB(vt1.c0)))AND((('&ܯB\n+') BETWEEN (rt1.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM rt1, rt0, vt1, v0 WHERE (((((((((rt1.c0)GLOB(vt1.c0)))AND((('&ܯB\n+') BETWEEN (rt1.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt1, v0;
SELECT rt0.c2, v0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt0.c2, v0.c0, rt1.c2;
SELECT rt0.c2, v0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE ((((((rt1.c2))>=((v0.c0)))) BETWEEN (((rt1.c0)<(rt0.c0))) AND (CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END))) GROUP BY rt0.c2, v0.c0, rt1.c2 UNION SELECT ALL rt0.c2, v0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE ((NOT ((((((rt1.c2))>=((v0.c0)))) BETWEEN (((rt1.c0)<(rt0.c0))) AND (CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END))))) GROUP BY rt0.c2, v0.c0, rt1.c2 UNION SELECT rt0.c2, v0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE ((((((((rt1.c2))>=((v0.c0)))) BETWEEN (((rt1.c0)<(rt0.c0))) AND (CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt1.c2;
SELECT rt0.c2, v0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt0.c2, v0.c0, rt1.c2;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (NOT (MAX(v0.c0))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (NOT ((NOT (MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (((NOT (MAX(v0.c0)))) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (NOT (MAX(v0.c0))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (NOT ((NOT (MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (((NOT (MAX(v0.c0)))) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((x'')IS NOT(0.47423379517073116)) FULL OUTER JOIN v0 ON ((-60891574)GLOB(rt0.c1)) COLLATE RTRIM CROSS JOIN rt1 ON CAST((((v0.c0, rt0.c1, vt1.c0))<=((v0.c0, '', rt0.c1))) AS REAL) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0, rt1;
SELECT ALL rt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0, rt1 WHERE (((((NULL) NOT NULL)) NOT BETWEEN (((rt1.c0)%(vt1.c0))) AND (((((rt0.c0)OR(vt1.c0)))AND(rt0.c0))))) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0, rt1 WHERE ((NOT (((((NULL) NOT NULL)) NOT BETWEEN (((rt1.c0)%(vt1.c0))) AND (((((rt0.c0)OR(vt1.c0)))AND(rt0.c0))))))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0, rt1 WHERE (((((((NULL) NOT NULL)) NOT BETWEEN (((rt1.c0)%(vt1.c0))) AND (((((rt0.c0)OR(vt1.c0)))AND(rt0.c0))))) ISNULL));
SELECT ALL rt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0, rt1;
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((((vt1.c0 IN ())) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((NOT ((((vt1.c0 IN ())) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((((((vt1.c0 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0, v0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, v0, rt1 CROSS JOIN vt1 ON (((rt0.c1)) BETWEEN ((rt0.c2)) AND (((((rt0.c2, rt0.c1, rt1.c1))>((vt1.c0, rt1.c2, rt0.c2)))))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c0;
SELECT ALL rt1.c0, v0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, v0, rt1 CROSS JOIN vt1 ON (((rt0.c1)) BETWEEN ((rt0.c2)) AND (((((rt0.c2, rt0.c1, rt1.c1))>((vt1.c0, rt1.c2, rt0.c2)))))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c0 HAVING ROUND(MIN(SUM(COUNT(SUM(rt1.c1)))), MAX(rt0.c1)) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, v0, rt1 CROSS JOIN vt1 ON (((rt0.c1)) BETWEEN ((rt0.c2)) AND (((((rt0.c2, rt0.c1, rt1.c1))>((vt1.c0, rt1.c2, rt0.c2)))))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c0 HAVING (NOT (ROUND(MIN(SUM(COUNT(SUM(rt1.c1)))), MAX(rt0.c1)))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, v0, rt1 CROSS JOIN vt1 ON (((rt0.c1)) BETWEEN ((rt0.c2)) AND (((((rt0.c2, rt0.c1, rt1.c1))>((vt1.c0, rt1.c2, rt0.c2)))))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c0 HAVING ((ROUND(MIN(SUM(COUNT(SUM(rt1.c1)))), MAX(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, rt1.c1 FROM vt1, rt1, rt0;
SELECT rt0.c1, rt1.c1 FROM vt1, rt1, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL)) UNION ALL SELECT rt0.c1, rt1.c1 FROM vt1, rt1, rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt1.c1 FROM vt1, rt1, rt0 WHERE (((((rt0.c2 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT ALL rt0.c1, rt1.c1 FROM vt1, rt1, rt0;
SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1, v0 WHERE ((ROUND(rt0.c2, rt0.c2) IN (CAST('ꪚq' AS NUMERIC), ((((((((((((x'')AND(rt0.c0)))OR(839575250)))OR(rt0.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(0.9276410629126886))))) UNION SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1, v0 WHERE ((NOT ((ROUND(rt0.c2, rt0.c2) IN (CAST('ꪚq' AS NUMERIC), ((((((((((((x'')AND(rt0.c0)))OR(839575250)))OR(rt0.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(0.9276410629126886))))))) UNION SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1, v0 WHERE ((((ROUND(rt0.c2, rt0.c2) IN (CAST('ꪚq' AS NUMERIC), ((((((((((((x'')AND(rt0.c0)))OR(839575250)))OR(rt0.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(0.9276410629126886))))) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1, v0;
SELECT v0.c0, rt1.c0 FROM v0, rt1 GROUP BY v0.c0, rt1.c0;
SELECT ALL v0.c0, rt1.c0 FROM v0, rt1 WHERE (SUBSTR(IFNULL(v0.c0, rt1.c1), 0.6360723868144891 COLLATE BINARY)) GROUP BY v0.c0, rt1.c0 UNION SELECT v0.c0, rt1.c0 FROM v0, rt1 WHERE ((NOT (SUBSTR(IFNULL(v0.c0, rt1.c1), 0.6360723868144891 COLLATE BINARY)))) GROUP BY v0.c0, rt1.c0 UNION SELECT ALL v0.c0, rt1.c0 FROM v0, rt1 WHERE (((SUBSTR(IFNULL(v0.c0, rt1.c1), 0.6360723868144891 COLLATE BINARY)) ISNULL)) GROUP BY v0.c0, rt1.c0;
SELECT v0.c0, rt1.c0 FROM v0, rt1 GROUP BY v0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1;
SELECT ALL rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1 HAVING ((vt1.c0)/(COUNT(*))) COLLATE RTRIM UNION ALL SELECT rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1 HAVING (NOT (((vt1.c0)/(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1 HAVING ((((vt1.c0)/(COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1;
SELECT ALL rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1 HAVING ((vt1.c0)/(COUNT(*))) COLLATE RTRIM UNION ALL SELECT rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1 HAVING (NOT (((vt1.c0)/(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1 HAVING ((((vt1.c0)/(COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt0.c1 FROM rt1 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON 1.530365607E9 FULL OUTER JOIN vt1 ON CASE x''  WHEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) THEN (NOT (vt1.c0)) ELSE x'' END GROUP BY rt1.c1, rt1.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt0, v0, vt1, rt1;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt0, v0, vt1 NOT INDEXED, rt1 WHERE ((((((((v0.c0)AND(vt1.c0)))OR(rt0.c1)), (rt1.c1 IN ()), (rt0.c0 IN ())))>((((rt0.c1) NOT NULL), rt0.c1 COLLATE BINARY, (((rt0.c0))>=((v0.c0))))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt0, v0, vt1, rt1 WHERE ((NOT ((((((((v0.c0)AND(vt1.c0)))OR(rt0.c1)), (rt1.c1 IN ()), (rt0.c0 IN ())))>((((rt0.c1) NOT NULL), rt0.c1 COLLATE BINARY, (((rt0.c0))>=((v0.c0))))))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt0, v0, vt1, rt1 WHERE ((((((((((v0.c0)AND(vt1.c0)))OR(rt0.c1)), (rt1.c1 IN ()), (rt0.c0 IN ())))>((((rt0.c1) NOT NULL), rt0.c1 COLLATE BINARY, (((rt0.c0))>=((v0.c0))))))) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt0, v0, vt1, rt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)))&(CAST(vt1.c0 AS TEXT))) RIGHT OUTER JOIN rt0 ON '' LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND (((- (rt0.c1)))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB(((v0.c0) IS TRUE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB(((v0.c0) IS TRUE)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB(((v0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(((AVG(COUNT(*))) BETWEEN (rt0.c2) AND (AVG(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(((AVG(COUNT(*))) BETWEEN (rt0.c2) AND (AVG(COUNT(*))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(((AVG(COUNT(*))) BETWEEN (rt0.c2) AND (AVG(COUNT(*)))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1, vt1, v0, rt0;
SELECT DISTINCT * FROM rt1, vt1, v0, rt0 WHERE (((CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c1 END)IS((((NULL, v0.c0, v0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt0.c2, v0.c0, rt0.c2, v0.c0)))))) UNION SELECT DISTINCT * FROM rt1, vt1, v0, rt0 WHERE ((NOT (((CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c1 END)IS((((NULL, v0.c0, v0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt0.c2, v0.c0, rt0.c2, v0.c0)))))))) UNION SELECT DISTINCT * FROM rt1, vt1, v0, rt0 WHERE (((((CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c1 END)IS((((NULL, v0.c0, v0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt0.c2, v0.c0, rt0.c2, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, v0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1 WHERE ((((x'60d4'))==((rt0.c0))) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1 WHERE ((NOT ((((x'60d4'))==((rt0.c0))) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1 WHERE ((((((x'60d4'))==((rt0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 HAVING COUNT(((rt1.c0)-(rt0.c1))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 HAVING (NOT (COUNT(((rt1.c0)-(rt0.c1))))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 HAVING ((COUNT(((rt1.c0)-(rt0.c1)))) ISNULL);
SELECT ALL rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 HAVING COUNT(((rt1.c0)-(rt0.c1))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 HAVING (NOT (COUNT(((rt1.c0)-(rt0.c1))))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 HAVING ((COUNT(((rt1.c0)-(rt0.c1)))) ISNULL);
SELECT ALL rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, vt1.c0, rt1.c2, v0.c0, rt0.c1;
SELECT rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON (((x'')|(v0.c0)) IN ()) FULL OUTER JOIN vt1 ON (((((((((((rt1.c2))<=((rt1.c0))))AND(((v0.c0)LIKE(rt1.c1)))))AND((+ (v0.c0)))))OR(json_remove(rt1.c2, rt1.c2))))AND(TRIM(DISTINCT v0.c0, rt1.c2)));
SELECT DISTINCT * FROM v0, vt1, rt0;
SELECT DISTINCT * FROM v0, vt1, rt0 WHERE (TRIM((('-960271556')<<(0.2729245025170207)))) UNION SELECT DISTINCT * FROM v0, vt1, rt0 WHERE ((NOT (TRIM((('-960271556')<<(0.2729245025170207)))))) UNION SELECT DISTINCT * FROM v0, vt1, rt0 WHERE (((TRIM((('-960271556')<<(0.2729245025170207)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, rt0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0 FROM v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END IN ()) CROSS JOIN rt1 ON ROUND(((((((((vt1.c0)AND(vt1.c0)))AND(rt1.c1)))AND(v0.c0)))AND(rt1.c0)), 'i') GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0 FROM v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END IN ()) CROSS JOIN rt1 ON ROUND(((((((((vt1.c0)AND(vt1.c0)))AND(rt1.c1)))AND(v0.c0)))AND(rt1.c0)), 'i') WHERE (NULLIF(DISTINCT CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END, (NOT (vt1.c0)))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0 UNION SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0 FROM v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END IN ()) CROSS JOIN rt1 ON ROUND(((((((((vt1.c0)AND(vt1.c0)))AND(rt1.c1)))AND(v0.c0)))AND(rt1.c0)), 'i') WHERE ((NOT (NULLIF(DISTINCT CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END, (NOT (vt1.c0)))))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0 UNION SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0 FROM v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END IN ()) CROSS JOIN rt1 ON ROUND(((((((((vt1.c0)AND(vt1.c0)))AND(rt1.c1)))AND(v0.c0)))AND(rt1.c0)), 'i') WHERE (((NULLIF(DISTINCT CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END, (NOT (vt1.c0)))) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0 FROM v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END IN ()) CROSS JOIN rt1 ON ROUND(((((((((vt1.c0)AND(vt1.c0)))AND(rt1.c1)))AND(v0.c0)))AND(rt1.c0)), 'i') GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(rt1.c2))>>(MAX(MAX(GROUP_CONCAT(rt1.c1))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 NOT INDEXED GROUP BY rt1.c2 HAVING (NOT (((GROUP_CONCAT(rt1.c2))>>(MAX(MAX(GROUP_CONCAT(rt1.c1))))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((((GROUP_CONCAT(rt1.c2))>>(MAX(MAX(GROUP_CONCAT(rt1.c1)))))) ISNULL);
SELECT rt0.c0, rt1.c0, rt1.c1, rt0.c2 FROM v0, rt0, rt1;
SELECT ALL rt0.c0, rt1.c0, rt1.c1, rt0.c2 FROM v0, rt0, rt1 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt1.c1, rt0.c2 FROM v0, rt0, rt1 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt1.c0, rt1.c1, rt0.c2 FROM v0, rt0, rt1 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c0)) COLLATE RTRIM) ISNULL));
SELECT rt0.c0, rt1.c0, rt1.c1, rt0.c2 FROM v0, rt0, rt1;
SELECT DISTINCT rt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, vt1.c0, rt0.c1 FROM rt0, rt1, vt1;
SELECT DISTINCT rt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, vt1.c0, rt0.c1 FROM rt0 NOT INDEXED, rt1, vt1 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, vt1.c0, rt0.c1 FROM rt0, rt1, vt1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, vt1.c0, rt0.c1 FROM rt0, rt1, vt1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c2, rt0.c2, rt1.c1, rt1.c0, vt1.c0, rt0.c1 FROM rt0, rt1, vt1;
SELECT v0.c0, vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON (NOT (json_quote(rt0.c1))) CROSS JOIN rt0 ON (NOT (rt0.c1)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SQLITE_COMPILEOPTION_GET(COUNT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_GET(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SQLITE_COMPILEOPTION_GET(COUNT(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SQLITE_COMPILEOPTION_GET(COUNT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_GET(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SQLITE_COMPILEOPTION_GET(COUNT(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON x'e3f6' CROSS JOIN v0 ON (~ (JULIANDAY(rt0.c0, rt0.c0, rt0.c0)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON x'e3f6' CROSS JOIN v0 ON (~ (JULIANDAY(rt0.c0, rt0.c0, rt0.c0))) WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((0.39591120059506746) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON x'e3f6' CROSS JOIN v0 ON (~ (JULIANDAY(rt0.c0, rt0.c0, rt0.c0))) WHERE ((NOT (CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((0.39591120059506746) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON x'e3f6' CROSS JOIN v0 ON (~ (JULIANDAY(rt0.c0, rt0.c0, rt0.c0))) WHERE (((CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((0.39591120059506746) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON x'e3f6' CROSS JOIN v0 ON (~ (JULIANDAY(rt0.c0, rt0.c0, rt0.c0)));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((+ (((((rt0.c0)OR(rt1.c0)))AND(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT ((+ (((((rt0.c0)OR(rt1.c0)))AND(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((((+ (((((rt0.c0)OR(rt1.c0)))AND(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT ALL vt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 CROSS JOIN vt1 ON '-346423963' GROUP BY vt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL vt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 CROSS JOIN vt1 ON '-346423963' WHERE (((((CASE WHEN 1980146031 THEN rt1.c2 END)OR(TRIM(DISTINCT rt0.c1))))AND(((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1))))) GROUP BY vt1.c0, rt0.c0, rt1.c2, rt1.c1 UNION SELECT vt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 CROSS JOIN vt1 ON '-346423963' WHERE ((NOT (((((CASE WHEN 1980146031 THEN rt1.c2 END)OR(TRIM(DISTINCT rt0.c1))))AND(((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1))))))) GROUP BY vt1.c0, rt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 CROSS JOIN vt1 ON '-346423963' WHERE (((((((CASE WHEN 1980146031 THEN rt1.c2 END)OR(TRIM(DISTINCT rt0.c1))))AND(((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL vt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 CROSS JOIN vt1 ON '-346423963' GROUP BY vt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL v0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0, rt0.c2;
SELECT ALL v0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING MIN(CASE WHEN MAX(v0.c0) THEN rt0.c2 ELSE COUNT(rt0.c1) END) UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING (NOT (MIN(CASE WHEN MAX(v0.c0) THEN rt0.c2 ELSE COUNT(rt0.c1) END))) UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING ((MIN(CASE WHEN MAX(v0.c0) THEN rt0.c2 ELSE COUNT(rt0.c1) END)) ISNULL);
SELECT ALL SUM(rt0.c0) FROM vt1, v0, rt0, rt1;
SELECT ALL vt1.c0, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1)))>((~ (rt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)OR('-148900149')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2))) BETWEEN ((((rt0.c0, v0.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, v0.c0, rt0.c1, v0.c0, v0.c0)))) AND ((+ (rt0.c1))));
SELECT ALL vt1.c0, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1)))>((~ (rt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)OR('-148900149')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2))) BETWEEN ((((rt0.c0, v0.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, v0.c0, rt0.c1, v0.c0, v0.c0)))) AND ((+ (rt0.c1)))) WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)||(rt0.c2)) ELSE ((((rt0.c2)OR('')))AND(vt1.c0)) END) UNION ALL SELECT ALL vt1.c0, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1)))>((~ (rt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)OR('-148900149')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2))) BETWEEN ((((rt0.c0, v0.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, v0.c0, rt0.c1, v0.c0, v0.c0)))) AND ((+ (rt0.c1)))) WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)||(rt0.c2)) ELSE ((((rt0.c2)OR('')))AND(vt1.c0)) END))) UNION ALL SELECT vt1.c0, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1)))>((~ (rt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)OR('-148900149')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2))) BETWEEN ((((rt0.c0, v0.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, v0.c0, rt0.c1, v0.c0, v0.c0)))) AND ((+ (rt0.c1)))) WHERE (((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)||(rt0.c2)) ELSE ((((rt0.c2)OR('')))AND(vt1.c0)) END) ISNULL));
SELECT ALL vt1.c0, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1)))>((~ (rt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)OR('-148900149')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2))) BETWEEN ((((rt0.c0, v0.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, v0.c0, rt0.c1, v0.c0, v0.c0)))) AND ((+ (rt0.c1))));
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((rt1.c1) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((rt1.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((rt1.c1) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt0.c1, v0.c0, rt0.c2, vt1.c0 FROM rt0, v0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, v0.c0, rt0.c2, vt1.c0 FROM rt0, v0, vt1 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOTNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2, vt1.c0 FROM rt0, v0, vt1 WHERE ((NOT (((CAST(rt0.c0 AS NUMERIC)) NOTNULL)))) GROUP BY rt0.c1, v0.c0, rt0.c2, vt1.c0 UNION SELECT rt0.c1, v0.c0, rt0.c2, vt1.c0 FROM rt0, v0, vt1 WHERE (((((CAST(rt0.c0 AS NUMERIC)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, vt1.c0 FROM rt0, v0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c2, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((SUM(vt1.c0))*(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((SUM(vt1.c0))*(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((SUM(vt1.c0))*(vt1.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt1;
SELECT v0.c0 FROM v0, vt1 WHERE (((vt1.c0)|(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT v0.c0 FROM v0, vt1 WHERE ((NOT (((vt1.c0)|(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT v0.c0 FROM v0, vt1 WHERE (((((vt1.c0)|(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT ALL v0.c0 FROM v0, vt1;
SELECT DISTINCT * FROM rt0, vt1, rt1, v0;
SELECT DISTINCT * FROM rt0, vt1, rt1, v0 WHERE (CAST(((vt1.c0) IS FALSE) AS TEXT)) UNION SELECT DISTINCT * FROM rt0, vt1, rt1, v0 WHERE ((NOT (CAST(((vt1.c0) IS FALSE) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, vt1, rt1, v0 WHERE (((CAST(((vt1.c0) IS FALSE) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, rt1, v0;
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c2)>(rt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON rt1.c0 INNER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS REAL))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c2)>(rt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON rt1.c0 INNER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS REAL))) WHERE (((((x'') BETWEEN (rt1.c2) AND (rt0.c1)))|(((v0.c0) NOT BETWEEN (NULL) AND (rt1.c2))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c2)>(rt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON rt1.c0 INNER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS REAL))) WHERE ((NOT (((((x'') BETWEEN (rt1.c2) AND (rt0.c1)))|(((v0.c0) NOT BETWEEN (NULL) AND (rt1.c2))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c2)>(rt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON rt1.c0 INNER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS REAL))) WHERE (((((((x'') BETWEEN (rt1.c2) AND (rt0.c1)))|(((v0.c0) NOT BETWEEN (NULL) AND (rt1.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c2)>(rt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON rt1.c0 INNER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS REAL))) GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt1.c2, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON 0.19668207815186745 CROSS JOIN rt1 ON x'' FULL OUTER JOIN vt1 ON ((LOWER(rt1.c0))%((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) GROUP BY rt0.c0, rt1.c2, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt1.c2, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON 0.19668207815186745 CROSS JOIN rt1 ON x'' FULL OUTER JOIN vt1 ON ((LOWER(rt1.c0))%((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) GROUP BY rt0.c0, rt1.c2, rt0.c2, rt0.c1 HAVING AVG(TOTAL(TOTAL(COUNT(MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, rt1.c2, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON 0.19668207815186745 CROSS JOIN rt1 ON x'' FULL OUTER JOIN vt1 ON ((LOWER(rt1.c0))%((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) GROUP BY rt0.c0, rt1.c2, rt0.c2, rt0.c1 HAVING (NOT (AVG(TOTAL(TOTAL(COUNT(MIN(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt1.c2, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON 0.19668207815186745 CROSS JOIN rt1 ON x'' FULL OUTER JOIN vt1 ON ((LOWER(rt1.c0))%((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) GROUP BY rt0.c0, rt1.c2, rt0.c2, rt0.c1 HAVING ((AVG(TOTAL(TOTAL(COUNT(MIN(rt0.c2)))))) ISNULL);
SELECT ALL * FROM v0, rt1;
SELECT ALL * FROM v0, rt1 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (rtreenode(v0.c0, rt1.c0)) AND ((rt1.c1 IN ())))) UNION ALL SELECT * FROM v0, rt1 WHERE ((NOT (((v0.c0 COLLATE BINARY) NOT BETWEEN (rtreenode(v0.c0, rt1.c0)) AND ((rt1.c1 IN ())))))) UNION ALL SELECT ALL * FROM v0, rt1 WHERE (((((v0.c0 COLLATE BINARY) NOT BETWEEN (rtreenode(v0.c0, rt1.c0)) AND ((rt1.c1 IN ())))) ISNULL));
SELECT ALL * FROM v0, rt1;
SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt1 ON (- (((rt1.c2)IS NOT(vt1.c0)))) FULL OUTER JOIN rt0 ON ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(rt0.c1)))AND(((rt0.c1)*(rt0.c2))));
SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt1 ON (- (((rt1.c2)IS NOT(vt1.c0)))) FULL OUTER JOIN rt0 ON ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(rt0.c1)))AND(((rt0.c1)*(rt0.c2)))) WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0)))<=(CAST(rt0.c1 AS BLOB)))) UNION SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt1 ON (- (((rt1.c2)IS NOT(vt1.c0)))) FULL OUTER JOIN rt0 ON ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(rt0.c1)))AND(((rt0.c1)*(rt0.c2)))) WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0)))<=(CAST(rt0.c1 AS BLOB)))))) UNION SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt1 ON (- (((rt1.c2)IS NOT(vt1.c0)))) FULL OUTER JOIN rt0 ON ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(rt0.c1)))AND(((rt0.c1)*(rt0.c2)))) WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0)))<=(CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt1 ON (- (((rt1.c2)IS NOT(vt1.c0)))) FULL OUTER JOIN rt0 ON ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(rt0.c1)))AND(((rt0.c1)*(rt0.c2))));
SELECT rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0;
SELECT rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0 FROM v0, rt1, vt1, rt0 WHERE (((((((',')|(rt1.c2)))OR((((rt1.c1))>=((rt0.c0))))))OR(((v0.c0)&(rt1.c1))))) GROUP BY rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0 UNION SELECT rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0 FROM v0, rt1, vt1, rt0 WHERE ((NOT (((((((',')|(rt1.c2)))OR((((rt1.c1))>=((rt0.c0))))))OR(((v0.c0)&(rt1.c1))))))) GROUP BY rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0 UNION SELECT rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0 FROM v0, rt1, vt1, rt0 WHERE (((((((((',')|(rt1.c2)))OR((((rt1.c1))>=((rt0.c0))))))OR(((v0.c0)&(rt1.c1))))) ISNULL)) GROUP BY rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0;
SELECT rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c2, rt1.c0, v0.c0, rt1.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, vt1.c0, v0.c0, rt0.c0 FROM vt1, v0, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, v0.c0, rt0.c0 FROM vt1, v0, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, v0.c0, rt0.c0 HAVING SUM(COUNT(MIN(vt1.c0))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0, v0.c0, rt0.c0 FROM vt1, v0, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, v0.c0, rt0.c0 HAVING (NOT (SUM(COUNT(MIN(vt1.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0, v0.c0, rt0.c0 FROM vt1, v0, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, v0.c0, rt0.c0 HAVING ((SUM(COUNT(MIN(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt1, vt1, v0, rt0;
SELECT * FROM rt1, vt1, v0, rt0 WHERE ((- (x'')) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1, vt1, v0, rt0 WHERE ((NOT ((- (x'')) COLLATE NOCASE))) UNION ALL SELECT * FROM rt1, vt1, v0, rt0 WHERE ((((- (x'')) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt1, vt1, v0, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON ((((~ (rt0.c0))))==(('P)<*y{{}rI'))) INNER JOIN vt1 ON (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))==((rt0.c0)));
SELECT DISTINCT rt0.c2, vt1.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON ((((~ (rt0.c0))))==(('P)<*y{{}rI'))) INNER JOIN vt1 ON (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))=((rt0.c0))) WHERE ((((((rt0.c1, vt1.c0, v0.c0, v0.c0, NULL)) NOT BETWEEN ((rt0.c0, vt1.c0, v0.c0, rt0.c2, vt1.c0)) AND (('2041684816', v0.c0, rt0.c1, vt1.c0, rt0.c0))))/(CASE v0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c2, vt1.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON ((((~ (rt0.c0))))=(('P)<*y{{}rI'))) INNER JOIN vt1 ON (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))=((rt0.c0))) WHERE ((NOT ((((((rt0.c1, vt1.c0, v0.c0, v0.c0, NULL)) NOT BETWEEN ((rt0.c0, vt1.c0, v0.c0, rt0.c2, vt1.c0)) AND (('2041684816', v0.c0, rt0.c1, vt1.c0, rt0.c0))))/(CASE v0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON ((((~ (rt0.c0))))==(('P)<*y{{}rI'))) INNER JOIN vt1 ON (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))==((rt0.c0))) WHERE ((((((((rt0.c1, vt1.c0, v0.c0, v0.c0, NULL)) NOT BETWEEN ((rt0.c0, vt1.c0, v0.c0, rt0.c2, vt1.c0)) AND (('2041684816', v0.c0, rt0.c1, vt1.c0, rt0.c0))))/(CASE v0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON ((((~ (rt0.c0))))==(('P)<*y{{}rI'))) INNER JOIN vt1 ON (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))==((rt0.c0)));
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (x'6ef1') GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (x'6ef1'))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((x'6ef1') ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2;
SELECT v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2 HAVING NULL UNION ALL SELECT ALL v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2 HAVING ((NULL) ISNULL);
SELECT v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2;
SELECT v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2 HAVING NULL UNION ALL SELECT ALL v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2 HAVING ((NULL) ISNULL);
SELECT v0.c0, rt1.c0, rt1.c2 FROM vt1, v0, rt1 GROUP BY v0.c0, rt1.c0, rt1.c2;
SELECT * FROM v0 FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.5894788837819196 ELSE x'' END) AND (CAST(v0.c0 AS NUMERIC)));
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.5894788837819196 ELSE x'' END) AND (CAST(v0.c0 AS NUMERIC))) WHERE (0.863131966103685) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.5894788837819196 ELSE x'' END) AND (CAST(v0.c0 AS NUMERIC))) WHERE ((NOT (0.863131966103685))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.5894788837819196 ELSE x'' END) AND (CAST(v0.c0 AS NUMERIC))) WHERE (((0.863131966103685) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.5894788837819196 ELSE x'' END) AND (CAST(v0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1 FROM v0, rt1, vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN ())))<=((json_array(rt0.c1, rt1.c0, rt0.c2, x'')))) GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1 FROM v0, rt1, vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN ())))<=((json_array(rt0.c1, rt1.c0, rt0.c2, x'')))) WHERE (((((((((((vt1.c0)AND(rt0.c2)))OR('0.974879130418851')))OR(vt1.c0)))AND(rt0.c1)))AND((~ (rt1.c0))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1 FROM v0, rt1, vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN ())))<=((json_array(rt0.c1, rt1.c0, rt0.c2, x'')))) WHERE ((NOT (((((((((((vt1.c0)AND(rt0.c2)))OR('0.974879130418851')))OR(vt1.c0)))AND(rt0.c1)))AND((~ (rt1.c0))))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1 FROM v0, rt1, vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN ())))<=((json_array(rt0.c1, rt1.c0, rt0.c2, x'')))) WHERE (((((((((((((vt1.c0)AND(rt0.c2)))OR('0.974879130418851')))OR(vt1.c0)))AND(rt0.c1)))AND((~ (rt1.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1 FROM v0, rt1, vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN ())))<=((json_array(rt0.c1, rt1.c0, rt0.c2, x'')))) GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c1;
SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT ALL * FROM rt1, vt1 LEFT OUTER JOIN rt0 ON ((v0.c0)IS(rt0.c2)) COLLATE NOCASE CROSS JOIN v0 ON '';
SELECT DISTINCT * FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c0)IS(rt1.c0 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((rt0.c1)>(NULL)) COLLATE RTRIM;
SELECT DISTINCT * FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c0)IS(rt1.c0 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((rt0.c1)>(NULL)) COLLATE RTRIM WHERE (((((vt1.c0)&(rt1.c2)))>(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) UNION SELECT DISTINCT * FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c0)IS(rt1.c0 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((rt0.c1)>(NULL)) COLLATE RTRIM WHERE ((NOT (((((vt1.c0)&(rt1.c2)))>(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c0)IS(rt1.c0 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((rt0.c1)>(NULL)) COLLATE RTRIM WHERE (((((((vt1.c0)&(rt1.c2)))>(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON ((rt0.c0)IS(rt1.c0 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((rt0.c1)>(NULL)) COLLATE RTRIM;
SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((rt0.c1 COLLATE BINARY)||(rt1.c2)) GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((rt0.c1 COLLATE BINARY)||(rt1.c2)) WHERE (((CAST(0.7808813064192984 AS BLOB))*((rt0.c2 IN ())))) GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((rt0.c1 COLLATE BINARY)||(rt1.c2)) WHERE ((NOT (((CAST(0.7808813064192984 AS BLOB))*((rt0.c2 IN ())))))) GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0 UNION SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((rt0.c1 COLLATE BINARY)||(rt1.c2)) WHERE (((((CAST(0.7808813064192984 AS BLOB))*((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0;
SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((rt0.c1 COLLATE BINARY)||(rt1.c2)) GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, vt1.c0, rt1.c0, rt0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (~ (TOTAL(SUM(MAX(SUM(TOTAL(vt1.c0))))))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT ((~ (TOTAL(SUM(MAX(SUM(TOTAL(vt1.c0))))))))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (((~ (TOTAL(SUM(MAX(SUM(TOTAL(vt1.c0)))))))) ISNULL);
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (CASE (~ (rt1.c2))  WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN (rt1.c0 IN (x'28ac', rt1.c0)) ELSE CAST(0.20108492468879102 AS INTEGER) END) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CASE (~ (rt1.c2))  WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN (rt1.c0 IN (x'28ac', rt1.c0)) ELSE CAST(0.20108492468879102 AS INTEGER) END))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((CASE (~ (rt1.c2))  WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN (rt1.c0 IN (x'28ac', rt1.c0)) ELSE CAST(0.20108492468879102 AS INTEGER) END) ISNULL));
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT v0.c0, rt1.c0 FROM rt1 NATURAL JOIN v0;
SELECT DISTINCT v0.c0, rt1.c0 FROM rt1 NATURAL JOIN v0 WHERE (CASE x'fbf9'  WHEN CAST(rt1.c0 AS INTEGER) THEN SQLITE_COMPILEOPTION_USED(rt1.c0) END) UNION SELECT DISTINCT v0.c0, rt1.c0 FROM rt1 NATURAL JOIN v0 WHERE ((NOT (CASE x'fbf9'  WHEN CAST(rt1.c0 AS INTEGER) THEN SQLITE_COMPILEOPTION_USED(rt1.c0) END))) UNION SELECT DISTINCT v0.c0, rt1.c0 FROM rt1 NATURAL JOIN v0 WHERE (((CASE x'fbf9'  WHEN CAST(rt1.c0 AS INTEGER) THEN SQLITE_COMPILEOPTION_USED(rt1.c0) END) ISNULL));
SELECT DISTINCT v0.c0, rt1.c0 FROM rt1 NATURAL JOIN v0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, v0, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, v0, rt0 WHERE ((((((rt0.c1, rt0.c0, v0.c0, vt1.c0, v0.c0))<((rt0.c0, x'', rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, v0, rt0 WHERE ((NOT ((((((rt0.c1, rt0.c0, v0.c0, vt1.c0, v0.c0))<((rt0.c0, x'', rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, v0, rt0 WHERE ((((((((rt0.c1, rt0.c0, v0.c0, vt1.c0, v0.c0))<((rt0.c0, x'', rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, v0, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING MIN(GROUP_CONCAT(rt1.c1)) COLLATE NOCASE UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING (NOT (MIN(GROUP_CONCAT(rt1.c1)) COLLATE NOCASE)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING ((MIN(GROUP_CONCAT(rt1.c1)) COLLATE NOCASE) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<=(rt1.c2)))%((rt1.c1 IN (''))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c0)<=(rt1.c2)))%((rt1.c1 IN (''))))))) UNION ALL SELECT * FROM rt1 WHERE (((((((rt1.c0)<=(rt1.c2)))%((rt1.c1 IN (''))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0, v0, rt1;
SELECT DISTINCT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0, v0, rt1 WHERE (((((rt1.c1)!=(rt0.c2)))*((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0, v0, rt1 WHERE ((NOT (((((rt1.c1)!=(rt0.c2)))*((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0, v0, rt1 WHERE (((((((rt1.c1)!=(rt0.c2)))*((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0, v0, rt1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 NOT INDEXED WHERE ((((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt1.c2 FROM rt1 INNER JOIN v0 ON v0.c0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 INNER JOIN v0 ON v0.c0 GROUP BY rt1.c2 HAVING ((MIN(MIN(COUNT(AVG(v0.c0))))) ISNULL) UNION ALL SELECT ALL rt1.c2 FROM rt1 INNER JOIN v0 ON v0.c0 GROUP BY rt1.c2 HAVING (NOT (((MIN(MIN(COUNT(AVG(v0.c0))))) ISNULL))) UNION ALL SELECT rt1.c2 FROM rt1 INNER JOIN v0 ON v0.c0 GROUP BY rt1.c2 HAVING ((((MIN(MIN(COUNT(AVG(v0.c0))))) ISNULL)) ISNULL);
SELECT ALL rt1.c2, v0.c0 FROM v0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c0 THEN v0.c0 ELSE v0.c0 END)%(('1464442628' IN ()))) LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)+(vt1.c0))  WHEN CAST('趂I,F4B-b' AS BLOB) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)) END;
SELECT rt1.c2, v0.c0 FROM v0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c0 THEN v0.c0 ELSE v0.c0 END)%(('1464442628' IN ()))) LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)+(vt1.c0))  WHEN CAST('趂I,F4B-b' AS BLOB) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)) END WHERE (TYPEOF(((rt1.c2) NOTNULL))) UNION ALL SELECT ALL rt1.c2, v0.c0 FROM v0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c0 THEN v0.c0 ELSE v0.c0 END)%(('1464442628' IN ()))) LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)+(vt1.c0))  WHEN CAST('趂I,F4B-b' AS BLOB) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)) END WHERE ((NOT (TYPEOF(((rt1.c2) NOTNULL))))) UNION ALL SELECT rt1.c2, v0.c0 FROM v0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c0 THEN v0.c0 ELSE v0.c0 END)%(('1464442628' IN ()))) LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)+(vt1.c0))  WHEN CAST('趂I,F4B-b' AS BLOB) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)) END WHERE (((TYPEOF(((rt1.c2) NOTNULL))) ISNULL));
SELECT ALL rt1.c2, v0.c0 FROM v0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c0 THEN v0.c0 ELSE v0.c0 END)%(('1464442628' IN ()))) LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)+(vt1.c0))  WHEN CAST('趂I,F4B-b' AS BLOB) THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)) END;
SELECT DISTINCT * FROM vt1, rt0, v0 CROSS JOIN rt1 ON (+ (NULL));
SELECT DISTINCT * FROM vt1, rt0, v0 CROSS JOIN rt1 ON (+ (NULL)) WHERE (((rt1.c0) NOTNULL)) UNION SELECT DISTINCT * FROM vt1, rt0, v0 CROSS JOIN rt1 ON (+ (NULL)) WHERE ((NOT (((rt1.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, rt0, v0 CROSS JOIN rt1 ON (+ (NULL)) WHERE (((((rt1.c0) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, v0 CROSS JOIN rt1 ON (+ (NULL));
SELECT ALL rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((CAST(x'83ba' AS NUMERIC))&(LIKE(rt1.c0, rt0.c2, '0'))) GROUP BY rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((CAST(x'83ba' AS NUMERIC))&(LIKE(rt1.c0, rt0.c2, '0'))) WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))AND(CAST(x'' AS BLOB)))) GROUP BY rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((CAST(x'83ba' AS NUMERIC))&(LIKE(rt1.c0, rt0.c2, '0'))) WHERE ((NOT (((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))AND(CAST(x'' AS BLOB)))))) GROUP BY rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((CAST(x'83ba' AS NUMERIC))&(LIKE(rt1.c0, rt0.c2, '0'))) WHERE (((((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))AND(CAST(x'' AS BLOB)))) ISNULL)) GROUP BY rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0 FROM rt1, rt0, vt1 CROSS JOIN v0 ON ((CAST(x'83ba' AS NUMERIC))&(LIKE(rt1.c0, rt0.c2, '0'))) GROUP BY rt1.c1, rt0.c2, rt1.c2, vt1.c0, rt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(MAX(SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(MAX(SUM(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(MAX(SUM(COUNT(*))))) ISNULL);
SELECT ALL rt1.c0 FROM v0, rt1, rt0, vt1;
SELECT ALL rt1.c0 FROM v0, rt1, rt0, vt1 WHERE ((((vt1.c0) BETWEEN (x'') AND (rt1.c0)) IN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (0X205b072f)), TRIM(DISTINCT x'', v0.c0)))) UNION ALL SELECT ALL rt1.c0 FROM v0, rt1, rt0, vt1 WHERE ((NOT ((((vt1.c0) BETWEEN (x'') AND (rt1.c0)) IN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (0X205b072f)), TRIM(DISTINCT x'', v0.c0)))))) UNION ALL SELECT ALL rt1.c0 FROM v0, rt1, rt0, vt1 WHERE ((((((vt1.c0) BETWEEN (x'') AND (rt1.c0)) IN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (0X205b072f)), TRIM(DISTINCT x'', v0.c0)))) ISNULL));
SELECT ALL rt1.c0 FROM v0, rt1, rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1, v0;
SELECT DISTINCT * FROM rt0, vt1, v0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, vt1, v0 WHERE ((NOT (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt1, v0 WHERE (((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, v0;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() LEFT OUTER JOIN vt1 ON ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))LIKE((rt0.c2 IN ()))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() LEFT OUTER JOIN vt1 ON ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))LIKE((rt0.c2 IN ()))) WHERE (((rt0.c0) BETWEEN ((NOT (rt0.c0))) AND (UNLIKELY(DISTINCT v0.c0)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() LEFT OUTER JOIN vt1 ON ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))LIKE((rt0.c2 IN ()))) WHERE ((NOT (((rt0.c0) BETWEEN ((NOT (rt0.c0))) AND (UNLIKELY(DISTINCT v0.c0)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 NOT INDEXED INNER JOIN v0 ON LAST_INSERT_ROWID() LEFT OUTER JOIN vt1 ON ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))LIKE((rt0.c2 IN ()))) WHERE (((((rt0.c0) BETWEEN ((NOT (rt0.c0))) AND (UNLIKELY(DISTINCT v0.c0)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() LEFT OUTER JOIN vt1 ON ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))LIKE((rt0.c2 IN ()))) GROUP BY rt0.c1;
SELECT ALL rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2 HAVING SUM(((vt1.c0) IS TRUE)) UNION ALL SELECT rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (SUM(((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((SUM(((vt1.c0) IS TRUE))) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2 HAVING SUM(((vt1.c0) IS TRUE)) UNION ALL SELECT rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (SUM(((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((SUM(((vt1.c0) IS TRUE))) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (rt1.c1) UNION ALL SELECT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT NULL))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT NULL))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT NULL))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1;
SELECT rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1 FROM vt1, rt1, rt0 WHERE (((CASE '355449327'  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END) BETWEEN (x'13f1e014' COLLATE BINARY) AND (CASE '0.5894788837819196'  WHEN rt0.c2 THEN rt0.c0 END))) GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1 FROM vt1, rt1, rt0 WHERE ((NOT (((CASE '355449327'  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END) BETWEEN (x'13f1e014' COLLATE BINARY) AND (CASE '0.5894788837819196'  WHEN rt0.c2 THEN rt0.c0 END))))) GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1 FROM vt1, rt1, rt0 WHERE (((((CASE '355449327'  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END) BETWEEN (x'13f1e014' COLLATE BINARY) AND (CASE '0.5894788837819196'  WHEN rt0.c2 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 HAVING ((vt1.c0)LIKE(COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 HAVING (NOT (((vt1.c0)LIKE(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 HAVING ((((vt1.c0)LIKE(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 HAVING ((vt1.c0)LIKE(COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 HAVING (NOT (((vt1.c0)LIKE(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 HAVING ((((vt1.c0)LIKE(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0, vt1 GROUP BY vt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0;
SELECT * FROM vt1, rt1, v0, rt0;
SELECT * FROM vt1, rt1, v0, rt0 WHERE (((TYPEOF(rt0.c2)) NOT NULL)) UNION ALL SELECT * FROM vt1, rt1, v0, rt0 WHERE ((NOT (((TYPEOF(rt0.c2)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1, rt1, v0, rt0 WHERE (((((TYPEOF(rt0.c2)) NOT NULL)) ISNULL));
SELECT * FROM vt1, rt1, v0, rt0;
SELECT DISTINCT * FROM vt1, rt1, rt0, v0;
SELECT DISTINCT * FROM vt1, rt1, rt0, v0 WHERE (TYPEOF(((v0.c0)|(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, rt1, rt0, v0 WHERE ((NOT (TYPEOF(((v0.c0)|(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt1, rt0, v0 WHERE (((TYPEOF(((v0.c0)|(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, rt0, v0;
SELECT ALL rt0.c2, rt1.c2, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c1, rt0.c0;
SELECT rt0.c2, rt1.c2, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 WHERE (rt1.c2) GROUP BY rt0.c2, rt1.c2, rt1.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt1.c2, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 WHERE ((NOT (rt1.c2))) GROUP BY rt0.c2, rt1.c2, rt1.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt1.c2, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 WHERE (((rt1.c2) ISNULL)) GROUP BY rt0.c2, rt1.c2, rt1.c1, rt0.c0;
SELECT ALL rt0.c2, rt1.c2, rt1.c1, rt0.c0 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c1, rt0.c0;
SELECT ALL rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, rt1, vt1 CROSS JOIN v0 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt1.c1 END) NOTNULL) GROUP BY rt1.c2, rt0.c1, rt1.c1, rt0.c0;
SELECT rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, rt1, vt1 CROSS JOIN v0 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt1.c1 END) NOTNULL) GROUP BY rt1.c2, rt0.c1, rt1.c1, rt0.c0 HAVING COUNT(MAX(GROUP_CONCAT(rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, rt1, vt1 CROSS JOIN v0 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt1.c1 END) NOTNULL) GROUP BY rt1.c2, rt0.c1, rt1.c1, rt0.c0 HAVING (NOT (COUNT(MAX(GROUP_CONCAT(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, rt1, vt1 CROSS JOIN v0 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt1.c1 END) NOTNULL) GROUP BY rt1.c2, rt0.c1, rt1.c1, rt0.c0 HAVING ((COUNT(MAX(GROUP_CONCAT(rt1.c1)))) ISNULL);
SELECT ALL SUM(0.5422529693259952) FROM v0, vt1, rt1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, rt1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, rt1 WHERE ((((rt0.c2, rt1.c1, rt1.c2))>((rt0.c0, rt1.c1, rt0.c2))) COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, rt1 WHERE ((NOT ((((rt0.c2, rt1.c1, rt1.c2))>((rt0.c0, rt1.c1, rt0.c2))) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, rt1 WHERE ((((((rt0.c2, rt1.c1, rt1.c2))>((rt0.c0, rt1.c1, rt0.c2))) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0, rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (UNICODE((v0.c0 IN ()))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (UNICODE((v0.c0 IN ()))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((UNICODE((v0.c0 IN ()))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING GROUP_CONCAT(((vt1.c0)IS(vt1.c0))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(((vt1.c0)IS(vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING ((GROUP_CONCAT(((vt1.c0)IS(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING GROUP_CONCAT(((vt1.c0)IS(vt1.c0))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(((vt1.c0)IS(vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING ((GROUP_CONCAT(((vt1.c0)IS(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CHANGES();
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CHANGES() WHERE (((((rt0.c0) IS TRUE)) IS FALSE)) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CHANGES() WHERE ((NOT (((((rt0.c0) IS TRUE)) IS FALSE)))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CHANGES() WHERE (((((((rt0.c0) IS TRUE)) IS FALSE)) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CHANGES();
SELECT DISTINCT v0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN v0 ON '202229930';
SELECT DISTINCT v0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN v0 ON '202229930' WHERE (0.974879130418851) UNION SELECT DISTINCT v0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN v0 ON '202229930' WHERE ((NOT (0.974879130418851))) UNION SELECT DISTINCT v0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN v0 ON '202229930' WHERE (((0.974879130418851) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN v0 ON '202229930';
SELECT rt0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0, vt1 WHERE (v0.c0) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0, vt1 WHERE ((NOT (v0.c0))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0, vt1 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c2 HAVING CAST(SUM(AVG(COUNT(*))) AS BLOB) UNION ALL SELECT ALL rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(SUM(AVG(COUNT(*))) AS BLOB))) UNION ALL SELECT rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c2 HAVING ((CAST(SUM(AVG(COUNT(*))) AS BLOB)) ISNULL);
SELECT ALL * FROM rt0, rt1, vt1, v0;
SELECT * FROM rt0, rt1, vt1, v0 WHERE (((((vt1.c0)+(vt1.c0)))+('-1976082526'))) UNION ALL SELECT ALL * FROM rt0, rt1, vt1, v0 WHERE ((NOT (((((vt1.c0)+(vt1.c0)))+('-1976082526'))))) UNION ALL SELECT * FROM rt0, rt1, vt1, v0 WHERE (((((((vt1.c0)+(vt1.c0)))+('-1976082526'))) ISNULL));
SELECT ALL * FROM rt0, rt1, vt1, v0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((ABS(DISTINCT rt0.c1)) BETWEEN ((rt0.c0 IN (rt0.c2))) AND (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((ABS(DISTINCT rt0.c1)) BETWEEN ((rt0.c0 IN (rt0.c2))) AND (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((ABS(DISTINCT rt0.c1)) BETWEEN ((rt0.c0 IN (rt0.c2))) AND (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (CAST(SUBSTR(NULL, v0.c0) AS BLOB)) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (CAST(SUBSTR(NULL, v0.c0) AS BLOB)))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((CAST(SUBSTR(NULL, v0.c0) AS BLOB)) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (((((COUNT(COUNT(*)))AND(COUNT(COUNT(*)))))AND(COUNT('?+'))) IN (MAX(rt1.c0) COLLATE RTRIM)) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT ((((((COUNT(COUNT(*)))AND(COUNT(COUNT(*)))))AND(COUNT('?+'))) IN (MAX(rt1.c0) COLLATE RTRIM)))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (((((((COUNT(COUNT(*)))AND(COUNT(COUNT(*)))))AND(COUNT('?+'))) IN (MAX(rt1.c0) COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c2, v0.c0, vt1.c0 FROM v0, vt1, rt0;
SELECT rt0.c2, v0.c0, vt1.c0 FROM v0, vt1, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL rt0.c2, v0.c0, vt1.c0 FROM v0, vt1, rt0 WHERE ((NOT ((NOT (v0.c0))))) UNION ALL SELECT ALL rt0.c2, v0.c0, vt1.c0 FROM v0, vt1, rt0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT ALL rt0.c2, v0.c0, vt1.c0 FROM v0, vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0, rt1, v0;
SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE (((rt0.c2) ISNULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE ((NOT (((rt0.c2) ISNULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE (((((rt0.c2) ISNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, rt1, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((0.8718340111071194 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((0.8718340111071194 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (''))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((0.8718340111071194 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (''))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2;
SELECT rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0Xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2;
SELECT rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0Xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2 FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (rt0.c2) AND (load_extension(rt0.c0))) CROSS JOIN v0 ON (TRIM(v0.c0, 0xffffffffafee4a9e) IN (((rt1.c0)<('1536662813')))) GROUP BY rt0.c0, v0.c0, rt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c0, rt1.c2;
SELECT ALL v0.c0, vt1.c0 FROM v0 NOT INDEXED, vt1;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 NOT INDEXED WHERE ((NOT (((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(v0.c0))))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT ((NOT (((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((NOT (((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL v0.c0, vt1.c0 FROM v0 NOT INDEXED, vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 NOT INDEXED, rt0;
SELECT ALL rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, rt1 WHERE ((x'80af285abb8b' IN ())) GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, rt1 WHERE ((NOT ((x'80af285abb8b' IN ())))) GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, rt1 WHERE ((((x'80af285abb8b' IN ())) ISNULL)) GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0, rt1, vt1 INNER JOIN v0 ON rt1.c2 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt1.c2;
SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0, rt1, vt1 INNER JOIN v0 ON rt1.c2 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt1.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0, rt1, vt1 INNER JOIN v0 ON rt1.c2 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0, rt1, vt1 INNER JOIN v0 ON rt1.c2 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt1.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT MAX((((((rt0.c0, vt1.c0, rt0.c0, rt1.c2, rt0.c0))>=((rt0.c2, rt0.c0, rt1.c2, vt1.c0, rt0.c0)))) NOT NULL)) FROM rt0, vt1, rt1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'')) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'')) COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'')) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((- (((vt1.c0)-(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((- (((vt1.c0)-(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((- (((vt1.c0)-(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1 FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (~ (CASE rt0.c1  WHEN 0.4115705504818291 THEN rt0.c2 END)) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1;
SELECT vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1 FROM rt0, vt1 NOT INDEXED, v0 LEFT OUTER JOIN rt1 ON (~ (CASE rt0.c1  WHEN 0.4115705504818291 THEN rt0.c2 END)) WHERE (CAST(CASE WHEN vt1.c0 THEN rt0.c0 END AS REAL)) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1 FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (~ (CASE rt0.c1  WHEN 0.4115705504818291 THEN rt0.c2 END)) WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN rt0.c0 END AS REAL)))) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1 FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (~ (CASE rt0.c1  WHEN 0.4115705504818291 THEN rt0.c2 END)) WHERE (((CAST(CASE WHEN vt1.c0 THEN rt0.c0 END AS REAL)) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1 FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (~ (CASE rt0.c1  WHEN 0.4115705504818291 THEN rt0.c2 END)) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c1, rt1.c2, v0.c0, rt0.c2, rt1.c0, rt0.c0, vt1.c0 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c1, rt1.c2, v0.c0, rt0.c2, rt1.c0, rt0.c0, vt1.c0;
SELECT rt0.c1, rt1.c2, v0.c0, rt0.c2, rt1.c0, rt0.c0, vt1.c0 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c1, rt1.c2, v0.c0, rt0.c2, rt1.c0, rt0.c0, vt1.c0 HAVING COUNT(TOTAL(rt1.c1)) UNION ALL SELECT ALL rt0.c1, rt1.c2, v0.c0, rt0.c2, rt1.c0, rt0.c0, vt1.c0 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c1, rt1.c2, v0.c0, rt0.c2, rt1.c0, rt0.c0, vt1.c0 HAVING (NOT (COUNT(TOTAL(rt1.c1)))) UNION ALL SELECT rt0.c1, rt1.c2, v0.c0, rt0.c2, rt1.c0, rt0.c0, vt1.c0 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c1, rt1.c2, v0.c0, rt0.c2, rt1.c0, rt0.c0, vt1.c0 HAVING ((COUNT(TOTAL(rt1.c1))) ISNULL);
SELECT rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0;
SELECT ALL rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN ((rt1.c0)<>(v0.c0)) THEN ((1258162900) NOT BETWEEN (rt1.c0) AND (rt0.c0)) WHEN CASE v0.c0  WHEN 0.6287987062384512 THEN rt1.c0 ELSE rt1.c0 END THEN '429396590' WHEN (NOT (rt1.c0)) THEN '-1513282546' COLLATE RTRIM END) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0 WHERE ((NOT (CASE CAST(v0.c0 AS BLOB)  WHEN ((rt1.c0)<>(v0.c0)) THEN ((1258162900) NOT BETWEEN (rt1.c0) AND (rt0.c0)) WHEN CASE v0.c0  WHEN 0.6287987062384512 THEN rt1.c0 ELSE rt1.c0 END THEN '429396590' WHEN (NOT (rt1.c0)) THEN '-1513282546' COLLATE RTRIM END))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0 WHERE (((CASE CAST(v0.c0 AS BLOB)  WHEN ((rt1.c0)<>(v0.c0)) THEN ((1258162900) NOT BETWEEN (rt1.c0) AND (rt0.c0)) WHEN CASE v0.c0  WHEN 0.6287987062384512 THEN rt1.c0 ELSE rt1.c0 END THEN '429396590' WHEN (NOT (rt1.c0)) THEN '-1513282546' COLLATE RTRIM END) ISNULL));
SELECT rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CAST(((rt0.c2) NOT NULL) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c2) NOT NULL) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(((rt0.c2) NOT NULL) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1;
SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((v0.c0)&(vt1.c0)))IS(((vt1.c0)<=(v0.c0))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (((((v0.c0)&(vt1.c0)))IS(((vt1.c0)<=(v0.c0))))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((((v0.c0)&(vt1.c0)))IS(((vt1.c0)<=(v0.c0))))) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1;
SELECT DISTINCT rt1.c0, rt0.c0, rt0.c2 FROM rt0, v0, rt1;
SELECT DISTINCT rt1.c0, rt0.c0, rt0.c2 FROM rt0, v0, rt1 WHERE (((NULL)AND(((rt1.c0)<=(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt0.c0, rt0.c2 FROM rt0, v0, rt1 WHERE ((NOT (((NULL)AND(((rt1.c0)<=(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt0.c0, rt0.c2 FROM rt0, v0, rt1 WHERE (((((NULL)AND(((rt1.c0)<=(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c0, rt0.c2 FROM rt0, v0, rt1;
SELECT vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1, vt1 GROUP BY vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1, vt1 WHERE (CASE WHEN (+ (rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END ELSE ((((((((rt1.c2)AND(rt1.c1)))AND(vt1.c0)))AND(rt1.c2)))AND('	')) END) GROUP BY vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1, vt1 WHERE ((NOT (CASE WHEN (+ (rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END ELSE ((((((((rt1.c2)AND(rt1.c1)))AND(vt1.c0)))AND(rt1.c2)))AND('	')) END))) GROUP BY vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1, vt1 WHERE (((CASE WHEN (+ (rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END ELSE ((((((((rt1.c2)AND(rt1.c1)))AND(vt1.c0)))AND(rt1.c2)))AND('	')) END) ISNULL)) GROUP BY vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1, vt1 GROUP BY vt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0;
SELECT ALL v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0;
SELECT ALL v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0 FROM rt0, vt1, rt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c1, rt0.c0, rt1.c0;
SELECT ALL * FROM rt1, vt1;
SELECT ALL * FROM rt1, vt1 WHERE (ABS(((rt1.c1)=(rt1.c1)))) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT (ABS(((rt1.c1)=(rt1.c1)))))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE (((ABS(((rt1.c1)==(rt1.c1)))) ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (CASE ((rt1.c0) NOT NULL)  WHEN CAST(rt1.c2 AS REAL) THEN (rt1.c0 IN (rt1.c1)) END) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CASE ((rt1.c0) NOT NULL)  WHEN CAST(rt1.c2 AS REAL) THEN (rt1.c0 IN (rt1.c1)) END))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((CASE ((rt1.c0) NOT NULL)  WHEN CAST(rt1.c2 AS REAL) THEN (rt1.c0 IN (rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((((((NOT (v0.c0)))OR(rt0.c0 COLLATE RTRIM)))AND(((v0.c0) NOT NULL))))OR(x'19e3')))OR(rt0.c1 COLLATE RTRIM))) GROUP BY v0.c0, rt0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((((((NOT (v0.c0)))OR(rt0.c0 COLLATE RTRIM)))AND(((v0.c0) NOT NULL))))OR(x'19e3')))OR(rt0.c1 COLLATE RTRIM))))) GROUP BY v0.c0, rt0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((((((((NOT (v0.c0)))OR(rt0.c0 COLLATE RTRIM)))AND(((v0.c0) NOT NULL))))OR(x'19e3')))OR(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON COALESCE(((((NULL)AND(rt0.c0)))OR(v0.c0)), HEX(vt1.c0)) GROUP BY v0.c0, vt1.c0, rt0.c1;
SELECT ALL v0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON COALESCE(((((NULL)AND(rt0.c0)))OR(v0.c0)), HEX(vt1.c0)) GROUP BY v0.c0, vt1.c0, rt0.c1 HAVING ((((TOTAL(COUNT(TOTAL(MIN(vt1.c0))))) NOT NULL)) NOT NULL) UNION ALL SELECT v0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON COALESCE(((((NULL)AND(rt0.c0)))OR(v0.c0)), HEX(vt1.c0)) GROUP BY v0.c0, vt1.c0, rt0.c1 HAVING (NOT (((((TOTAL(COUNT(TOTAL(MIN(vt1.c0))))) NOT NULL)) NOT NULL))) UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON COALESCE(((((NULL)AND(rt0.c0)))OR(v0.c0)), HEX(vt1.c0)) GROUP BY v0.c0, vt1.c0, rt0.c1 HAVING ((((((TOTAL(COUNT(TOTAL(MIN(vt1.c0))))) NOT NULL)) NOT NULL)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('0.22400159794429686') AND (rt0.c2)))<=((NOT (rt0.c2))));
SELECT DISTINCT v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('0.22400159794429686') AND (rt0.c2)))<=((NOT (rt0.c2)))) WHERE ((((CAST(rt0.c0 AS BLOB)))<=((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))) UNION SELECT DISTINCT v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('0.22400159794429686') AND (rt0.c2)))<=((NOT (rt0.c2)))) WHERE ((NOT ((((CAST(rt0.c0 AS BLOB)))<=((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))))) UNION SELECT DISTINCT v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('0.22400159794429686') AND (rt0.c2)))<=((NOT (rt0.c2)))) WHERE ((((((CAST(rt0.c0 AS BLOB)))<=((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('0.22400159794429686') AND (rt0.c2)))<=((NOT (rt0.c2))));
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 WHERE (((NOT (x'')) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE ((NOT (((NOT (x'')) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1 NOT INDEXED WHERE (((((NOT (x'')) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((COUNT(*)))<(((((GROUP_CONCAT(rt0.c1)))!=((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((COUNT(*)))<(((((GROUP_CONCAT(rt0.c1)))!=((rt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((COUNT(*)))<(((((GROUP_CONCAT(rt0.c1)))!=((rt0.c0))))))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((COUNT(*)))<(((((GROUP_CONCAT(rt0.c1)))!=((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((COUNT(*)))<(((((GROUP_CONCAT(rt0.c1)))!=((rt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((COUNT(*)))<(((((GROUP_CONCAT(rt0.c1)))!=((rt0.c0))))))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL TOTAL((+ (((((vt1.c0)AND(vt1.c0)))AND(v0.c0))))) FROM rt1, v0, vt1, rt0 ORDER BY CASE WHEN ((((rt0.c0)AND(rt0.c0)))AND(v0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) ELSE rt0.c0 COLLATE RTRIM END, NULL DESC  NULLS FIRST;
SELECT rt1.c0, rt1.c1 FROM v0 INNER JOIN rt1 ON CASE WHEN CASE WHEN rt1.c2 THEN 0.8525704285645798 WHEN x'7d5c' THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 END THEN CAST(rt1.c2 AS NUMERIC) ELSE ((rt1.c0)IS(rt1.c1)) END RIGHT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((vt1.c0) ISNULL)));
SELECT DISTINCT * FROM rt1, rt0, v0, vt1;
SELECT DISTINCT * FROM rt1, rt0, v0, vt1 WHERE (((((LTRIM(vt1.c0, v0.c0))AND(0.4579699630112162)))OR((((0.46155998478704086)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0, vt1 WHERE ((NOT (((((LTRIM(vt1.c0, v0.c0))AND(0.4579699630112162)))OR((((0.46155998478704086)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0, vt1 WHERE (((((((LTRIM(vt1.c0, v0.c0))AND(0.4579699630112162)))OR((((0.46155998478704086)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0, vt1;
SELECT ALL v0.c0 FROM rt0, vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0, v0.c0, rt0.c2)) BETWEEN ((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)), '␎v䛸', ((vt1.c0) IS TRUE))) AND ((NULL, ((vt1.c0) IS FALSE), 0.5894788837819196))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0, v0.c0, rt0.c2)) BETWEEN ((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)), '␎v䛸', ((vt1.c0) IS TRUE))) AND ((NULL, ((vt1.c0) IS FALSE), 0.5894788837819196))) WHERE ((rt0.c2 COLLATE NOCASE IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0, vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0, v0.c0, rt0.c2)) BETWEEN ((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)), '␎v䛸', ((vt1.c0) IS TRUE))) AND ((NULL, ((vt1.c0) IS FALSE), 0.5894788837819196))) WHERE ((NOT ((rt0.c2 COLLATE NOCASE IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0, v0.c0, rt0.c2)) BETWEEN ((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)), '␎v䛸', ((vt1.c0) IS TRUE))) AND ((NULL, ((vt1.c0) IS FALSE), 0.5894788837819196))) WHERE ((((rt0.c2 COLLATE NOCASE IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0, v0.c0, rt0.c2)) BETWEEN ((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)), '␎v䛸', ((vt1.c0) IS TRUE))) AND ((NULL, ((vt1.c0) IS FALSE), 0.5894788837819196))) GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, v0 GROUP BY vt1.c0 HAVING (((rt0.c2))<((TOTAL(GROUP_CONCAT(v0.c0))))) COLLATE RTRIM COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM rt0, vt1, v0 GROUP BY vt1.c0 HAVING (NOT ((((rt0.c2))<((TOTAL(GROUP_CONCAT(v0.c0))))) COLLATE RTRIM COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM rt0, vt1, v0 GROUP BY vt1.c0 HAVING (((((rt0.c2))<((TOTAL(GROUP_CONCAT(v0.c0))))) COLLATE RTRIM COLLATE RTRIM) ISNULL);
SELECT rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE (rt1.c1) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((CASE 0.23197878237879066  WHEN rt0.c2 THEN rt0.c1 END)GLOB(((rt1.c1)==(v0.c0)))) LEFT OUTER JOIN vt1 ON rt0.c2;
SELECT DISTINCT * FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((CASE 0.23197878237879066  WHEN rt0.c2 THEN rt0.c1 END)GLOB(((rt1.c1)=(v0.c0)))) LEFT OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(SUBSTR(v0.c0, rt0.c2) AS INTEGER)) UNION SELECT DISTINCT * FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((CASE 0.23197878237879066  WHEN rt0.c2 THEN rt0.c1 END)GLOB(((rt1.c1)==(v0.c0)))) LEFT OUTER JOIN vt1 ON rt0.c2 WHERE ((NOT (CAST(SUBSTR(v0.c0, rt0.c2) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((CASE 0.23197878237879066  WHEN rt0.c2 THEN rt0.c1 END)GLOB(((rt1.c1)=(v0.c0)))) LEFT OUTER JOIN vt1 ON rt0.c2 WHERE (((CAST(SUBSTR(v0.c0, rt0.c2) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((CASE 0.23197878237879066  WHEN rt0.c2 THEN rt0.c1 END)GLOB(((rt1.c1)==(v0.c0)))) LEFT OUTER JOIN vt1 ON rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1, vt1 FULL OUTER JOIN rt0 ON (NOT (rt1.c0 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1;
SELECT rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1, vt1 FULL OUTER JOIN rt0 ON (NOT (rt1.c0 COLLATE RTRIM)) WHERE (((((rt1.c0)/(v0.c0)))GLOB(CASE WHEN rt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1, vt1 FULL OUTER JOIN rt0 ON (NOT (rt1.c0 COLLATE RTRIM)) WHERE ((NOT (((((rt1.c0)/(v0.c0)))GLOB(CASE WHEN rt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1, vt1 FULL OUTER JOIN rt0 ON (NOT (rt1.c0 COLLATE RTRIM)) WHERE (((((((rt1.c0)/(v0.c0)))GLOB(CASE WHEN rt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1;
SELECT rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1, vt1 FULL OUTER JOIN rt0 ON (NOT (rt1.c0 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1;
SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1;
SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt1.c0, v0.c0, rt1.c0 FROM vt1, rt1, rt0, v0;
SELECT rt0.c1, vt1.c0, v0.c0, rt1.c0 FROM vt1, rt1, rt0, v0 WHERE (UNLIKELY(rt1.c1 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, vt1.c0, v0.c0, rt1.c0 FROM vt1, rt1, rt0, v0 NOT INDEXED WHERE ((NOT (UNLIKELY(rt1.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c1, vt1.c0, v0.c0, rt1.c0 FROM vt1, rt1, rt0, v0 WHERE (((UNLIKELY(rt1.c1 COLLATE RTRIM)) ISNULL));
SELECT ALL rt0.c1, vt1.c0, v0.c0, rt1.c0 FROM vt1, rt1, rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0)))<=(CAST('-1672624544' AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NOT (v0.c0)))<=(CAST('-1672624544' AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NOT (v0.c0)))<=(CAST('-1672624544' AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c2, rt0.c0, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c2, rt0.c0, v0.c0;
SELECT rt1.c2, rt0.c0, v0.c0 FROM rt0, rt1, v0 WHERE (NULL) GROUP BY rt1.c2, rt0.c0, v0.c0 UNION SELECT ALL rt1.c2, rt0.c0, v0.c0 FROM rt0, rt1, v0 WHERE ((NOT (NULL))) GROUP BY rt1.c2, rt0.c0, v0.c0 UNION SELECT rt1.c2, rt0.c0, v0.c0 FROM rt0, rt1, v0 WHERE (((NULL) ISNULL)) GROUP BY rt1.c2, rt0.c0, v0.c0;
SELECT rt1.c2, rt0.c0, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c2, rt0.c1 HAVING MIN(((MIN(SUM(COUNT(SUM(TOTAL(vt1.c0)))))) BETWEEN (COUNT(rt0.c1)) AND (rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(((MIN(SUM(COUNT(SUM(TOTAL(vt1.c0)))))) BETWEEN (COUNT(rt0.c1)) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(((MIN(SUM(COUNT(SUM(TOTAL(vt1.c0)))))) BETWEEN (COUNT(rt0.c1)) AND (rt0.c0)))) ISNULL);
SELECT v0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ());
SELECT v0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE ((+ ((NOT (rt0.c2))))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE ((NOT ((+ ((NOT (rt0.c2))))))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE ((((+ ((NOT (rt0.c2))))) ISNULL));
SELECT v0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ());
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((0X36472437)>>(CAST(v0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((0x36472437)>>(CAST(v0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((0x36472437)>>(CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0;
SELECT rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0 HAVING ((((CASE rt1.c0  WHEN AVG(rt1.c2) THEN rt0.c1 WHEN rt0.c1 THEN SUM(rt0.c2) WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN MAX(rt1.c0) ELSE rt0.c2 END)AND(((COUNT(GROUP_CONCAT(0.6342524745950958)))*(rt1.c2)))))OR((((rt0.c1))==((x''))))) UNION ALL SELECT ALL rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0 HAVING (NOT (((((CASE rt1.c0  WHEN AVG(rt1.c2) THEN rt0.c1 WHEN rt0.c1 THEN SUM(rt0.c2) WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN MAX(rt1.c0) ELSE rt0.c2 END)AND(((COUNT(GROUP_CONCAT(0.6342524745950958)))*(rt1.c2)))))OR((((rt0.c1))=((x''))))))) UNION ALL SELECT ALL rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0 HAVING ((((((CASE rt1.c0  WHEN AVG(rt1.c2) THEN rt0.c1 WHEN rt0.c1 THEN SUM(rt0.c2) WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN MAX(rt1.c0) ELSE rt0.c2 END)AND(((COUNT(GROUP_CONCAT(0.6342524745950958)))*(rt1.c2)))))OR((((rt0.c1))=((x'')))))) ISNULL);
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (vt1.c0))));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (vt1.c0)))) WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN CASE v0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END THEN ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE(rt0.c2)) WHEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c0)) THEN (('r[') IS FALSE) END) UNION ALL SELECT * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (vt1.c0)))) WHERE ((NOT (CASE CAST(rt0.c0 AS NUMERIC)  WHEN CASE v0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END THEN ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE(rt0.c2)) WHEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c0)) THEN (('r[') IS FALSE) END))) UNION ALL SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (vt1.c0)))) WHERE (((CASE CAST(rt0.c0 AS NUMERIC)  WHEN CASE v0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END THEN ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE(rt0.c2)) WHEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c0)) THEN (('r[') IS FALSE) END) ISNULL));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (vt1.c0))));
SELECT DISTINCT v0.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM vt1, v0, rt0, rt1 NOT INDEXED;
SELECT DISTINCT v0.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM vt1, v0, rt0, rt1 WHERE (((((x'af2f') NOTNULL)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (LIKELIHOOD(rt0.c1, 0.2133744797713999)))) UNION SELECT DISTINCT v0.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM vt1, v0, rt0, rt1 WHERE ((NOT (((((x'af2f') NOTNULL)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (LIKELIHOOD(rt0.c1, 0.2133744797713999)))))) UNION SELECT DISTINCT v0.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM vt1, v0, rt0, rt1 WHERE (((((((x'af2f') NOTNULL)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (LIKELIHOOD(rt0.c1, 0.2133744797713999)))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM vt1, v0, rt0, rt1 NOT INDEXED;
SELECT rt0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0, rt1 WHERE (((((((rt1.c2) NOT NULL))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((rt0.c2)&(rt0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0, rt1 WHERE ((NOT (((((((rt1.c2) NOT NULL))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((rt0.c2)&(rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0, rt1 NOT INDEXED WHERE (((((((((rt1.c2) NOT NULL))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((rt0.c2)&(rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c0;
SELECT rt1.c0, vt1.c0 FROM rt0, v0, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM rt0, v0, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0 HAVING rt1.c2 UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM rt0, v0 NOT INDEXED, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM rt0, v0, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0, vt1.c0 FROM rt0, v0, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM rt0, v0, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0 HAVING rt1.c2 UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM rt0, v0 NOT INDEXED, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM rt0, v0, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0, vt1.c0 FROM rt0, v0, vt1 LEFT OUTER JOIN rt1 ON ((((rt0.c0)>=(v0.c0))) NOT BETWEEN (((((rt1.c1)OR(vt1.c0)))OR(rt0.c2))) AND (LTRIM(rt1.c1))) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1;
SELECT ALL rt1.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1 WHERE ((((v0.c0)) BETWEEN ((((rt1.c1)%(rt1.c2)))) AND (((NOT (rt1.c1)))))) UNION ALL SELECT ALL rt1.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1 WHERE ((NOT ((((v0.c0)) BETWEEN ((((rt1.c1)%(rt1.c2)))) AND (((NOT (rt1.c1)))))))) UNION ALL SELECT rt1.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1 WHERE ((((((v0.c0)) BETWEEN ((((rt1.c1)%(rt1.c2)))) AND (((NOT (rt1.c1)))))) ISNULL));
SELECT rt1.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1;
SELECT DISTINCT * FROM vt1, rt0, v0;
SELECT DISTINCT * FROM vt1, rt0, v0 WHERE ((~ (((rt0.c2)=(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0, v0 WHERE ((NOT ((~ (((rt0.c2)=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0, v0 WHERE ((((~ (((rt0.c2)==(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, v0;
SELECT ALL rt1.c2, rt0.c1, rt1.c1, vt1.c0 FROM rt0, v0, vt1, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt0.c1, rt1.c1, vt1.c0 FROM rt0, v0, vt1, rt1 WHERE (CASE WHEN LOWER(rt0.c2) THEN (rt1.c1 IN ()) ELSE LOWER(rt0.c2) END) GROUP BY rt1.c2, rt0.c1, rt1.c1, vt1.c0 UNION SELECT rt1.c2, rt0.c1, rt1.c1, vt1.c0 FROM rt0, v0, vt1, rt1 WHERE ((NOT (CASE WHEN LOWER(rt0.c2) THEN (rt1.c1 IN ()) ELSE LOWER(rt0.c2) END))) GROUP BY rt1.c2, rt0.c1, rt1.c1, vt1.c0 UNION SELECT rt1.c2, rt0.c1, rt1.c1, vt1.c0 FROM rt0, v0, vt1, rt1 WHERE (((CASE WHEN LOWER(rt0.c2) THEN (rt1.c1 IN ()) ELSE LOWER(rt0.c2) END) ISNULL)) GROUP BY rt1.c2, rt0.c1, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt0.c1, rt1.c1, vt1.c0 FROM rt0, v0, vt1, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c1, vt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING AVG(COUNT('hp')) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (AVG(COUNT('hp')))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((AVG(COUNT('hp'))) ISNULL);
SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt0.c2 FROM vt1, rt0, rt1, v0;
SELECT vt1.c0, rt1.c2, rt1.c1, rt0.c2 FROM vt1, rt0, rt1, v0 WHERE (TRIM(DISTINCT 0.6408065923467199, ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt1.c0)))) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt0.c2 FROM vt1, rt0, rt1, v0 WHERE ((NOT (TRIM(DISTINCT 0.6408065923467199, ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt0.c2 FROM vt1, rt0, rt1, v0 WHERE (((TRIM(DISTINCT 0.6408065923467199, ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt1.c0)))) ISNULL));
SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt0.c2 FROM vt1, rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2 FROM v0, rt0, vt1, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2;
SELECT rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2 FROM v0, rt0, vt1, rt1 WHERE (LIKELY(DISTINCT ((x'') NOT BETWEEN (rt0.c1) AND (vt1.c0)))) GROUP BY rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2 UNION SELECT ALL rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2 FROM v0, rt0, vt1, rt1 WHERE ((NOT (LIKELY(DISTINCT ((x'') NOT BETWEEN (rt0.c1) AND (vt1.c0)))))) GROUP BY rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2 UNION SELECT rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2 FROM v0, rt0, vt1, rt1 WHERE (((LIKELY(DISTINCT ((x'') NOT BETWEEN (rt0.c1) AND (vt1.c0)))) ISNULL)) GROUP BY rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2;
SELECT ALL rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2 FROM v0, rt0, vt1, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, v0.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0))%(((vt1.c0)/(MIN(SUM(COUNT(*))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c0))%(((vt1.c0)/(MIN(SUM(COUNT(*))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0))%(((vt1.c0)/(MIN(SUM(COUNT(*)))))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE)%((rt1.c1 IN ())))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((rt1.c2 COLLATE NOCASE)%((rt1.c1 IN ())))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((rt1.c2 COLLATE NOCASE)%((rt1.c1 IN ())))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)>=(vt1.c0))  WHEN TRIM(vt1.c0) THEN ((vt1.c0) NOT NULL) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)>=(vt1.c0))  WHEN TRIM(vt1.c0) THEN ((vt1.c0) NOT NULL) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)>=(vt1.c0))  WHEN TRIM(vt1.c0) THEN ((vt1.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0;
SELECT rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM vt1, rt1, v0, rt0 WHERE ((NOT ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c0)))))) GROUP BY rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 UNION SELECT rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM vt1, rt1, v0, rt0 WHERE ((NOT ((NOT ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c0)))))))) GROUP BY rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 UNION SELECT rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM vt1, rt1, v0, rt0 WHERE ((((NOT ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0;
SELECT rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c1, rt0.c0, vt1.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT NULL) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT NULL) GROUP BY rt0.c1, rt0.c2 HAVING AVG(TOTAL(AVG(SUM(SUM(GROUP_CONCAT(TOTAL(TOTAL(AVG(COUNT(COUNT(*))))))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT NULL) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(TOTAL(AVG(SUM(SUM(GROUP_CONCAT(TOTAL(TOTAL(AVG(COUNT(COUNT(*))))))))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT NULL) GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(TOTAL(AVG(SUM(SUM(GROUP_CONCAT(TOTAL(TOTAL(AVG(COUNT(COUNT(*)))))))))))) ISNULL);
SELECT * FROM rt1, rt0, v0 NATURAL JOIN vt1;
SELECT * FROM rt1, rt0, v0 NOT INDEXED NATURAL JOIN vt1 WHERE (((- (rt0.c0)) IN ())) UNION ALL SELECT * FROM rt1, rt0, v0 NATURAL JOIN vt1 WHERE ((NOT (((- (rt0.c0)) IN ())))) UNION ALL SELECT * FROM rt1, rt0, v0 NATURAL JOIN vt1 WHERE (((((- (rt0.c0)) IN ())) ISNULL));
SELECT * FROM rt1, rt0, v0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1)OR((((rt0.c1))<>((rt0.c1))))))OR(0X1e001d92))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)OR((((rt0.c1))<>((rt0.c1))))))OR(0x1e001d92))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)OR((((rt0.c1))<>((rt0.c1))))))OR(0X1e001d92))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt1.c1, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM v0, rt1 WHERE ((((rt1.c0)>=(v0.c0)) IN ())) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM v0, rt1 NOT INDEXED WHERE ((NOT ((((rt1.c0)>=(v0.c0)) IN ())))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM v0, rt1 WHERE ((((((rt1.c0)>=(v0.c0)) IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING SUM(((rt1.c0)>=(COUNT(*)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (SUM(((rt1.c0)>=(COUNT(*)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((SUM(((rt1.c0)>=(COUNT(*))))) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, rt0;
SELECT v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, rt0 WHERE (((CAST(rt0.c1 AS BLOB)) ISNULL)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, rt0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB)) ISNULL)))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, rt0 WHERE (((((CAST(rt0.c1 AS BLOB)) ISNULL)) ISNULL));
SELECT v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, rt0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE ((v0.c0) NOTNULL)  WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) NOTNULL)  WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((v0.c0) NOTNULL)  WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c1, vt1.c0, rt0.c0, rt0.c1 FROM v0, vt1, rt0 NATURAL JOIN rt1 GROUP BY rt1.c1, vt1.c0, rt0.c0, rt0.c1;
SELECT rt1.c1, vt1.c0, rt0.c0, rt0.c1 FROM v0, vt1, rt0 NATURAL JOIN rt1 GROUP BY rt1.c1, vt1.c0, rt0.c0, rt0.c1 HAVING ((CAST(AVG(GROUP_CONCAT(TOTAL(COUNT(*)))) AS TEXT)) BETWEEN (MAX(COUNT(GROUP_CONCAT(AVG(rt1.c2))))) AND (SUM(v0.c0))) UNION ALL SELECT rt1.c1, vt1.c0, rt0.c0, rt0.c1 FROM v0, vt1, rt0 NATURAL JOIN rt1 GROUP BY rt1.c1, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (((CAST(AVG(GROUP_CONCAT(TOTAL(COUNT(*)))) AS TEXT)) BETWEEN (MAX(COUNT(GROUP_CONCAT(AVG(rt1.c2))))) AND (SUM(v0.c0))))) UNION ALL SELECT rt1.c1, vt1.c0, rt0.c0, rt0.c1 FROM v0, vt1, rt0 NATURAL JOIN rt1 GROUP BY rt1.c1, vt1.c0, rt0.c0, rt0.c1 HAVING ((((CAST(AVG(GROUP_CONCAT(TOTAL(COUNT(*)))) AS TEXT)) BETWEEN (MAX(COUNT(GROUP_CONCAT(AVG(rt1.c2))))) AND (SUM(v0.c0)))) ISNULL);
SELECT rt1.c2 FROM rt0, rt1;
SELECT rt1.c2 FROM rt0, rt1 WHERE ((((((+ (rt1.c1)))OR(((((rt1.c1)AND(rt1.c2)))AND(rt1.c2)))))AND((((rt1.c2))>((rt1.c2)))))) UNION ALL SELECT ALL rt1.c2 FROM rt0, rt1 WHERE ((NOT ((((((+ (rt1.c1)))OR(((((rt1.c1)AND(rt1.c2)))AND(rt1.c2)))))AND((((rt1.c2))>((rt1.c2)))))))) UNION ALL SELECT rt1.c2 FROM rt0, rt1 WHERE ((((((((+ (rt1.c1)))OR(((((rt1.c1)AND(rt1.c2)))AND(rt1.c2)))))AND((((rt1.c2))>((rt1.c2)))))) ISNULL));
SELECT rt1.c2 FROM rt0, rt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ (CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ (CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ (CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0 WHERE (((((rt0.c0))>((rt0.c1))) IN ())) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0 WHERE ((NOT (((((rt0.c0))>((rt0.c1))) IN ())))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0 WHERE (((((((rt0.c0))>((rt0.c1))) IN ())) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, v0.c0, rt1.c2, rt1.c1 FROM v0 FULL OUTER JOIN rt1 ON (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS TEXT) GROUP BY rt0.c2, v0.c0, rt1.c2, rt1.c1;
SELECT rt0.c2, v0.c0, rt1.c2, rt1.c1 FROM v0 FULL OUTER JOIN rt1 ON (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS TEXT) GROUP BY rt0.c2, v0.c0, rt1.c2, rt1.c1 HAVING ((((rt1.c1 COLLATE RTRIM)AND(GROUP_CONCAT(GROUP_CONCAT('Ar')))))OR(AVG(rt1.c2))) UNION ALL SELECT rt0.c2, v0.c0, rt1.c2, rt1.c1 FROM v0 FULL OUTER JOIN rt1 ON (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS TEXT) GROUP BY rt0.c2, v0.c0, rt1.c2, rt1.c1 HAVING (NOT (((((rt1.c1 COLLATE RTRIM)AND(GROUP_CONCAT(GROUP_CONCAT('Ar')))))OR(AVG(rt1.c2))))) UNION ALL SELECT rt0.c2, v0.c0, rt1.c2, rt1.c1 FROM v0 FULL OUTER JOIN rt1 ON (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS TEXT) GROUP BY rt0.c2, v0.c0, rt1.c2, rt1.c1 HAVING ((((((rt1.c1 COLLATE RTRIM)AND(GROUP_CONCAT(GROUP_CONCAT('Ar')))))OR(AVG(rt1.c2)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (NULLIF(((rt1.c1) IS TRUE), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (NULLIF(((rt1.c1) IS TRUE), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))) UNION ALL SELECT * FROM rt1 WHERE (((NULLIF(((rt1.c1) IS TRUE), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL vt1.c0, rt0.c0, rt1.c0 FROM vt1 INNER JOIN v0 ON rt1.c2 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE NOCASE  WHEN LIKELIHOOD(rt0.c2, 0.1760398713228618) THEN CAST(rt0.c0 AS REAL) END CROSS JOIN rt1 ON rt0.c0 GROUP BY vt1.c0, rt0.c0, rt1.c0;
SELECT vt1.c0, rt0.c0, rt1.c0 FROM vt1 INNER JOIN v0 ON rt1.c2 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE NOCASE  WHEN LIKELIHOOD(rt0.c2, 0.1760398713228618) THEN CAST(rt0.c0 AS REAL) END CROSS JOIN rt1 ON rt0.c0 WHERE (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) GROUP BY vt1.c0, rt0.c0, rt1.c0 UNION SELECT vt1.c0, rt0.c0, rt1.c0 FROM vt1 INNER JOIN v0 ON rt1.c2 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE NOCASE  WHEN LIKELIHOOD(rt0.c2, 0.1760398713228618) THEN CAST(rt0.c0 AS REAL) END CROSS JOIN rt1 ON rt0.c0 WHERE ((NOT (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE))) GROUP BY vt1.c0, rt0.c0, rt1.c0 UNION SELECT vt1.c0, rt0.c0, rt1.c0 FROM vt1 INNER JOIN v0 ON rt1.c2 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE NOCASE  WHEN LIKELIHOOD(rt0.c2, 0.1760398713228618) THEN CAST(rt0.c0 AS REAL) END CROSS JOIN rt1 ON rt0.c0 WHERE (((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt1.c0;
SELECT ALL vt1.c0, rt0.c0, rt1.c0 FROM vt1 INNER JOIN v0 ON rt1.c2 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE NOCASE  WHEN LIKELIHOOD(rt0.c2, 0.1760398713228618) THEN CAST(rt0.c0 AS REAL) END CROSS JOIN rt1 ON rt0.c0 GROUP BY vt1.c0, rt0.c0, rt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING MIN(SUM(SUM(v0.c0))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(SUM(SUM(v0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((MIN(SUM(SUM(v0.c0)))) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (rt1.c0) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM vt1, v0, rt0;
SELECT ALL rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, v0, rt0 GROUP BY rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0;
SELECT rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, v0, rt0 WHERE (((((((rt0.c2) IS TRUE))OR(rt1.c1 COLLATE NOCASE)))AND(CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, v0, rt0 WHERE ((NOT (((((((rt0.c2) IS TRUE))OR(rt1.c1 COLLATE NOCASE)))AND(CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, v0, rt0 WHERE (((((((((rt0.c2) IS TRUE))OR(rt1.c1 COLLATE NOCASE)))AND(CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, v0, rt0 GROUP BY rt0.c1, rt1.c1, vt1.c0, v0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(NULL) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(NULL) COLLATE BINARY))) UNION ALL SELECT rt0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(NULL) COLLATE BINARY)) ISNULL);
SELECT TOTAL((rt1.c0 IN (((v0.c0)*(rt1.c0))))) FROM vt1, rt0, rt1, v0;
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (rt0.c0) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((((('-1360814455')AND(((((rt1.c0)OR(rt0.c2)))AND('')))))OR(('n' IN (rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((((('-1360814455')AND(((((rt1.c0)OR(rt0.c2)))AND('')))))OR(('n' IN (rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((('-1360814455')AND(((((rt1.c0)OR(rt0.c2)))AND('')))))OR(('n' IN (rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt0.c2 FROM rt0, vt1, rt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, rt1 WHERE (((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)) COLLATE BINARY) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1, rt1 WHERE ((NOT (((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)) COLLATE BINARY))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1, rt1 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1, rt1 GROUP BY rt0.c2;
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2 HAVING MAX((- (rt1.c2))) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2 HAVING (NOT (MAX((- (rt1.c2))))) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2 HAVING ((MAX((- (rt1.c2)))) ISNULL);
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2 HAVING MAX((- (rt1.c2))) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2 HAVING (NOT (MAX((- (rt1.c2))))) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2 HAVING ((MAX((- (rt1.c2)))) ISNULL);
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT SUM(rt0.c0 COLLATE NOCASE) FROM vt1, rt0, rt1, v0 NOT INDEXED ORDER BY CASE ((0.7477133314642331) NOT BETWEEN (vt1.c0) AND (rt0.c2))  WHEN NULL THEN (rt1.c2 IN ()) ELSE (~ (x'')) END DESC;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM rt1 INNER JOIN v0 ON TRIM(DISTINCT (v0.c0 IN ())) LEFT OUTER JOIN vt1 ON CAST(((rt1.c0)/(rt1.c0)) AS NUMERIC);
SELECT rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM rt1 INNER JOIN v0 ON TRIM(DISTINCT (v0.c0 IN ())) LEFT OUTER JOIN vt1 ON CAST(((rt1.c0)/(rt1.c0)) AS NUMERIC) WHERE ((NULLIF(DISTINCT v0.c0, v0.c0) IN ())) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM rt1 INNER JOIN v0 ON TRIM(DISTINCT (v0.c0 IN ())) LEFT OUTER JOIN vt1 ON CAST(((rt1.c0)/(rt1.c0)) AS NUMERIC) WHERE ((NOT ((NULLIF(DISTINCT v0.c0, v0.c0) IN ())))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM rt1 INNER JOIN v0 ON TRIM(DISTINCT (v0.c0 IN ())) LEFT OUTER JOIN vt1 ON CAST(((rt1.c0)/(rt1.c0)) AS NUMERIC) WHERE ((((NULLIF(DISTINCT v0.c0, v0.c0) IN ())) ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM rt1 INNER JOIN v0 ON TRIM(DISTINCT (v0.c0 IN ())) LEFT OUTER JOIN vt1 ON CAST(((rt1.c0)/(rt1.c0)) AS NUMERIC);
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (((((rt1.c0) IS FALSE))!=(v0.c0))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (((((rt1.c0) IS FALSE))<>(v0.c0))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((((((rt1.c0) IS FALSE))<>(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 2.131205313E9 END)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((CAST(vt1.c0 AS INTEGER)))=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 2.131205313E9 END)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((CAST(vt1.c0 AS INTEGER)))=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 2.131205313E9 END)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1 FROM rt1, rt0, vt1, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt1, rt0, vt1, v0 GROUP BY rt0.c1 HAVING SUM(((SUM(GROUP_CONCAT(AVG(COUNT(rt0.c0))))) BETWEEN (GROUP_CONCAT(x'6c33')) AND (MIN(rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt1, rt0, vt1, v0 GROUP BY rt0.c1 HAVING (NOT (SUM(((SUM(GROUP_CONCAT(AVG(COUNT(rt0.c0))))) BETWEEN (GROUP_CONCAT(x'6c33')) AND (MIN(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM rt1, rt0, vt1, v0 GROUP BY rt0.c1 HAVING ((SUM(((SUM(GROUP_CONCAT(AVG(COUNT(rt0.c0))))) BETWEEN (GROUP_CONCAT(x'6c33')) AND (MIN(rt0.c0))))) ISNULL);
SELECT * FROM v0, rt0, rt1, vt1;
SELECT ALL * FROM v0, rt0, rt1, vt1 WHERE ('*	') UNION ALL SELECT ALL * FROM v0, rt0, rt1, vt1 WHERE ((NOT ('*	'))) UNION ALL SELECT * FROM v0, rt0, rt1, vt1 WHERE ((('*	') ISNULL));
SELECT * FROM v0, rt0, rt1, vt1;
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((rt0.c2)>(rt0.c0)))%(((rt0.c0)=(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c2)>(rt0.c0)))%(((rt0.c0)=(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c2)>(rt0.c0)))%(((rt0.c0)=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (json_array_length((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'08a7')))OR(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_array_length((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'08a7')))OR(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((json_array_length((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'08a7')))OR(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING CAST(-1404349655 AS TEXT) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(-1404349655 AS TEXT))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((CAST(-1404349655 AS TEXT)) ISNULL);
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING CAST(-1404349655 AS TEXT) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(-1404349655 AS TEXT))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((CAST(-1404349655 AS TEXT)) ISNULL);
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL TOTAL(rt0.c1) FROM rt0;
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (((((rt1.c0) NOTNULL))<(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((((rt1.c0) NOTNULL))<(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c0) NOTNULL))<(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0, vt1;
SELECT DISTINCT * FROM v0, rt1, rt0, vt1 WHERE (((((CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 END)OR(((rt0.c1)==(rt1.c2)))))AND((((rt1.c0, NULL, rt0.c0, rt1.c0, rt0.c2))<>((rt0.c1, rt1.c2, v0.c0, rt0.c1, x'0407')))))) UNION SELECT DISTINCT * FROM v0, rt1, rt0, vt1 WHERE ((NOT (((((CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 END)OR(((rt0.c1)=(rt1.c2)))))AND((((rt1.c0, NULL, rt0.c0, rt1.c0, rt0.c2))<>((rt0.c1, rt1.c2, v0.c0, rt0.c1, x'0407')))))))) UNION SELECT DISTINCT * FROM v0, rt1, rt0, vt1 WHERE (((((((CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 END)OR(((rt0.c1)==(rt1.c2)))))AND((((rt1.c0, NULL, rt0.c0, rt1.c0, rt0.c2))!=((rt0.c1, rt1.c2, v0.c0, rt0.c1, x'0407')))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0, vt1;
SELECT vt1.c0, rt1.c0 FROM rt1, vt1, v0 RIGHT OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE GROUP BY vt1.c0, rt1.c0;
SELECT ALL vt1.c0, rt1.c0 FROM rt1, vt1, v0 RIGHT OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE WHERE (((TRIM(DISTINCT rt0.c2))&(TRIM(v0.c0)))) GROUP BY vt1.c0, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c0 FROM rt1, vt1, v0 RIGHT OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE WHERE ((NOT (((TRIM(DISTINCT rt0.c2))&(TRIM(v0.c0)))))) GROUP BY vt1.c0, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c0 FROM rt1, vt1, v0 RIGHT OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE WHERE (((((TRIM(DISTINCT rt0.c2))&(TRIM(v0.c0)))) ISNULL)) GROUP BY vt1.c0, rt1.c0;
SELECT vt1.c0, rt1.c0 FROM rt1, vt1, v0 RIGHT OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE GROUP BY vt1.c0, rt1.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((rt0.c1 COLLATE RTRIM) NOT NULL) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (((rt0.c1 COLLATE RTRIM) NOT NULL))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((((rt0.c1 COLLATE RTRIM) NOT NULL)) ISNULL);
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((rt0.c1 COLLATE RTRIM) NOT NULL) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (((rt0.c1 COLLATE RTRIM) NOT NULL))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((((rt0.c1 COLLATE RTRIM) NOT NULL)) ISNULL);
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL MAX((((v0.c0, '504872678', rt0.c1)) NOT BETWEEN ((((v0.c0) NOTNULL), (0.8848785617480331 IN ()), (v0.c0 IN ()))) AND ((((vt1.c0) NOTNULL), ((rt0.c1)<>(rt0.c2)), SUBSTR(rt0.c1, v0.c0))))) FROM rt0, vt1, v0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(x'ecbe' AS INTEGER) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(CAST(x'ecbe' AS INTEGER) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(CAST(x'ecbe' AS INTEGER) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt1.c0, rt1.c2, vt1.c0 FROM rt1, v0 RIGHT OUTER JOIN vt1 ON (((NOT (rt1.c1)))%(CAST(rt0.c1 AS INTEGER))) FULL OUTER JOIN rt0 ON ((((rt1.c2) NOT NULL))||(((0x49f7eefa) IS FALSE)));
SELECT ALL rt0.c0 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt1, vt1, rt0, v0 WHERE ((((vt1.c0, vt1.c0, 0.23286387098556638, rt0.c0, rt1.c1)) NOT BETWEEN ((x'f521', x'', (rt0.c0 IN ()), (((rt1.c1))=((rt1.c0))), ((NULL)<=(v0.c0)))) AND ((LENGTH(rt0.c1), rt1.c2, rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE NOCASE, ((vt1.c0) ISNULL))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt1, vt1, rt0, v0 WHERE ((NOT ((((vt1.c0, vt1.c0, 0.23286387098556638, rt0.c0, rt1.c1)) NOT BETWEEN ((x'f521', x'', (rt0.c0 IN ()), (((rt1.c1))==((rt1.c0))), ((NULL)<=(v0.c0)))) AND ((LENGTH(rt0.c1), rt1.c2, rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE NOCASE, ((vt1.c0) ISNULL))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt1, vt1, rt0, v0 WHERE ((((((vt1.c0, vt1.c0, 0.23286387098556638, rt0.c0, rt1.c1)) NOT BETWEEN ((x'f521', x'', (rt0.c0 IN ()), (((rt1.c1))=((rt1.c0))), ((NULL)<=(v0.c0)))) AND ((LENGTH(rt0.c1), rt1.c2, rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE NOCASE, ((vt1.c0) ISNULL))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((((vt1.c0)%(MAX(vt1.c0)))) BETWEEN ((((v0.c0)) BETWEEN ((SUM(v0.c0))) AND ((AVG(vt1.c0))))) AND (vt1.c0 COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (((((vt1.c0)%(MAX(vt1.c0)))) BETWEEN ((((v0.c0)) BETWEEN ((SUM(v0.c0))) AND ((AVG(vt1.c0))))) AND (vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((((((vt1.c0)%(MAX(vt1.c0)))) BETWEEN ((((v0.c0)) BETWEEN ((SUM(v0.c0))) AND ((AVG(vt1.c0))))) AND (vt1.c0 COLLATE NOCASE))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((((vt1.c0)%(MAX(vt1.c0)))) BETWEEN ((((v0.c0)) BETWEEN ((SUM(v0.c0))) AND ((AVG(vt1.c0))))) AND (vt1.c0 COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (((((vt1.c0)%(MAX(vt1.c0)))) BETWEEN ((((v0.c0)) BETWEEN ((SUM(v0.c0))) AND ((AVG(vt1.c0))))) AND (vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((((((vt1.c0)%(MAX(vt1.c0)))) BETWEEN ((((v0.c0)) BETWEEN ((SUM(v0.c0))) AND ((AVG(vt1.c0))))) AND (vt1.c0 COLLATE NOCASE))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, rt1, v0, vt1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, rt1, v0, vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY ('1980146031' IN (rt1.c0 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT rt0.c2, rt0.c0 FROM rt0, rt1, v0, vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE BINARY))) ORDER BY ('1980146031' IN (rt1.c0 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, rt1, v0, vt1 WHERE ((((vt1.c0 IN ()) COLLATE BINARY) ISNULL)) ORDER BY ('1980146031' IN (rt1.c0 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, rt1, v0, vt1;
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (+ ((((v0.c0))<((NULL)))));
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (+ ((((v0.c0))<((NULL))))) WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (+ ((((v0.c0))<((NULL))))) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (+ ((((v0.c0))<((NULL))))) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (+ ((((v0.c0))<((NULL)))));
SELECT ALL rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS NUMERIC) LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN ((rt1.c1)&(rt0.c1)) END GROUP BY rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS NUMERIC) LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN ((rt1.c1)&(rt0.c1)) END WHERE ((((rt0.c1)) BETWEEN ((json(rt0.c1))) AND ((CAST(rt0.c2 AS REAL))))) GROUP BY rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS NUMERIC) LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN ((rt1.c1)&(rt0.c1)) END WHERE ((NOT ((((rt0.c1)) BETWEEN ((json(rt0.c1))) AND ((CAST(rt0.c2 AS REAL))))))) GROUP BY rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS NUMERIC) LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN ((rt1.c1)&(rt0.c1)) END WHERE ((((((rt0.c1)) BETWEEN ((json(rt0.c1))) AND ((CAST(rt0.c2 AS REAL))))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON CAST((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS NUMERIC) LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN ((rt1.c1)&(rt0.c1)) END GROUP BY rt0.c1, v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING MIN(CASE GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(vt1.c0))))  WHEN SUM(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) THEN GROUP_CONCAT(rt1.c0) ELSE rt1.c2 END) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (MIN(CASE GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(vt1.c0))))  WHEN SUM(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) THEN GROUP_CONCAT(rt1.c0) ELSE rt1.c2 END))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((MIN(CASE GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(vt1.c0))))  WHEN SUM(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) THEN GROUP_CONCAT(rt1.c0) ELSE rt1.c2 END)) ISNULL);
SELECT ALL MAX((((((rt0.c2)|(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), (+ (rt0.c2))))<(((- (rt0.c0)), (('') NOTNULL), (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))) FROM rt0, v0, vt1 ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))AND((NOT (rt0.c1)))))AND(((rt0.c1) NOTNULL))))OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((0.7516656101818894) NOT BETWEEN (((vt1.c0)<<(NULL))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((vt1.c0 COLLATE NOCASE)%((((vt1.c0))<=((vt1.c0)))))  NULLS LAST;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (((0.7516656101818894) NOT BETWEEN (((vt1.c0)<<(NULL))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) ORDER BY ((vt1.c0 COLLATE NOCASE)%((((vt1.c0))<=((vt1.c0)))))  NULLS LAST;
SELECT vt1.c0 FROM vt1 WHERE (((((0.7516656101818894) NOT BETWEEN (((vt1.c0)<<(NULL))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) ORDER BY ((vt1.c0 COLLATE NOCASE)%((((vt1.c0))<=((vt1.c0)))))  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON ((((((1.25043661E8)OR(rt1.c2)))AND(v0.c0)))%('-84816196')) FULL OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))>>(rt0.c0));
SELECT rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 WHERE (CASE rt1.c0  WHEN CASE NULL  WHEN rt1.c1 THEN 3.55449327E8 END THEN ((rt1.c1)+(rt1.c0)) WHEN ((((v0.c0)OR(rt1.c1)))OR(rt1.c0)) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) WHEN 0.8776847422359875 THEN (((rt1.c1))<((rt1.c1))) END) GROUP BY rt1.c0, rt1.c2, v0.c0 UNION SELECT rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 WHERE ((NOT (CASE rt1.c0  WHEN CASE NULL  WHEN rt1.c1 THEN 3.55449327E8 END THEN ((rt1.c1)+(rt1.c0)) WHEN ((((v0.c0)OR(rt1.c1)))OR(rt1.c0)) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) WHEN 0.8776847422359875 THEN (((rt1.c1))<((rt1.c1))) END))) GROUP BY rt1.c0, rt1.c2, v0.c0 UNION SELECT rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 WHERE (((CASE rt1.c0  WHEN CASE NULL  WHEN rt1.c1 THEN 3.55449327E8 END THEN ((rt1.c1)+(rt1.c0)) WHEN ((((v0.c0)OR(rt1.c1)))OR(rt1.c0)) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) WHEN 0.8776847422359875 THEN (((rt1.c1))<((rt1.c1))) END) ISNULL)) GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c1, v0.c0 FROM vt1 INNER JOIN rt1 ON LIKELIHOOD(rt0.c2, 0.6268781760779427) RIGHT OUTER JOIN v0 ON 0.42684980640684156 INNER JOIN rt0 ON (((NOT (0.9563862932449224)))<(rt0.c0)) GROUP BY rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c1, v0.c0;
SELECT MIN((((~ (rt1.c1)))%(((rt1.c2) NOTNULL)))) FROM v0, vt1, rt1;
SELECT ALL * FROM vt1, rt1;
SELECT ALL * FROM vt1, rt1 WHERE (((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE x'' END)OR(((('-2057448225', vt1.c0, 1.2581629E9)) NOT BETWEEN ((rt1.c0, vt1.c0, NULL)) AND ((rt1.c1, vt1.c0, rt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE x'' END)OR(((('-2057448225', vt1.c0, 1.2581629E9)) NOT BETWEEN ((rt1.c0, vt1.c0, NULL)) AND ((rt1.c1, vt1.c0, rt1.c0)))))))) UNION ALL SELECT * FROM vt1, rt1 WHERE (((((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE x'' END)OR(((('-2057448225', vt1.c0, 1.2581629E9)) NOT BETWEEN ((rt1.c0, vt1.c0, NULL)) AND ((rt1.c1, vt1.c0, rt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT rt0.c1, v0.c0, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM v0, rt1, rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM v0, rt1, rt0 WHERE ((((((rt1.c1, rt0.c0, rt1.c2)) NOT BETWEEN ((x'', rt1.c2, rt1.c1)) AND ((rt1.c0, rt0.c1, rt1.c2)))) NOT BETWEEN (((rt0.c1)IS(x'fea1'))) AND (((rt0.c0)!=(rt0.c0))))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM v0, rt1, rt0 WHERE ((NOT ((((((rt1.c1, rt0.c0, rt1.c2)) NOT BETWEEN ((x'', rt1.c2, rt1.c1)) AND ((rt1.c0, rt0.c1, rt1.c2)))) NOT BETWEEN (((rt0.c1)IS(x'fea1'))) AND (((rt0.c0)!=(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM v0, rt1, rt0 WHERE ((((((((rt1.c1, rt0.c0, rt1.c2)) NOT BETWEEN ((x'', rt1.c2, rt1.c1)) AND ((rt1.c0, rt0.c1, rt1.c2)))) NOT BETWEEN (((rt0.c1)IS(x'fea1'))) AND (((rt0.c0)<>(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM v0, rt1, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) IN ((rt0.c1 IN (rt0.c1))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) IN ((rt0.c1 IN (rt0.c1))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) IN ((rt0.c1 IN (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 HAVING GROUP_CONCAT(-1.765861157E9) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 HAVING (NOT (GROUP_CONCAT(-1.765861157E9))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 HAVING ((GROUP_CONCAT(-1.765861157E9)) ISNULL);
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 HAVING GROUP_CONCAT(-1.765861157E9) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 HAVING (NOT (GROUP_CONCAT(-1.765861157E9))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 HAVING ((GROUP_CONCAT(-1.765861157E9)) ISNULL);
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c2;
SELECT ALL * FROM v0, vt1, rt0;
SELECT ALL * FROM v0, vt1, rt0 WHERE (x'71a3' COLLATE BINARY) UNION ALL SELECT * FROM v0, vt1, rt0 WHERE ((NOT (x'71a3' COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, vt1, rt0 WHERE (((x'71a3' COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, vt1, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LOWER(((v0.c0)<>(v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LOWER(((v0.c0)!=(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LOWER(((v0.c0)<>(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((1587196521)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((1587196521)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((1587196521)) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING ((COUNT(vt1.c0)) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING (NOT (((COUNT(vt1.c0)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING ((((COUNT(vt1.c0)) NOT NULL)) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING ((COUNT(vt1.c0)) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING (NOT (((COUNT(vt1.c0)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING ((((COUNT(vt1.c0)) NOT NULL)) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((v0.c0) ISNULL) CROSS JOIN v0 ON ((((((((((((x'')OR((rt0.c1 IN ()))))OR(((((v0.c0)OR(rt1.c0)))OR(rt0.c0)))))OR(ABS(DISTINCT rt1.c1))))AND(CAST(rt0.c1 AS BLOB))))OR((- (-1676349381)))))OR((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (CAST(UNLIKELY(DISTINCT rt1.c0) AS TEXT)) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (CAST(UNLIKELY(DISTINCT rt1.c0) AS TEXT)))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((CAST(UNLIKELY(DISTINCT rt1.c0) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL v0.c0, vt1.c0, rt1.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY v0.c0, vt1.c0, rt1.c0, rt1.c1;
SELECT ALL v0.c0, vt1.c0, rt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE (rt1.c2) GROUP BY v0.c0, vt1.c0, rt1.c0, rt1.c1 UNION SELECT v0.c0, vt1.c0, rt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE ((NOT (rt1.c2))) GROUP BY v0.c0, vt1.c0, rt1.c0, rt1.c1 UNION SELECT v0.c0, vt1.c0, rt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY v0.c0, vt1.c0, rt1.c0, rt1.c1;
SELECT ALL v0.c0, vt1.c0, rt1.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY v0.c0, vt1.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT ALL rt1.c2, vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (((MAX(rt0.c2))) NOT BETWEEN (((TOTAL(rt1.c2) IN ()))) AND ((MAX(COUNT(SUM(rt1.c2)))))) UNION ALL SELECT ALL rt1.c2, vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (NOT ((((MAX(rt0.c2))) NOT BETWEEN (((TOTAL(rt1.c2) IN ()))) AND ((MAX(COUNT(SUM(rt1.c2)))))))) UNION ALL SELECT ALL rt1.c2, vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (((((MAX(rt0.c2))) NOT BETWEEN (((TOTAL(rt1.c2) IN ()))) AND ((MAX(COUNT(SUM(rt1.c2))))))) ISNULL);
SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c1 FROM rt0, v0, rt1, vt1;
SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c1 FROM rt0, v0, rt1, vt1 WHERE (CAST((rt1.c1 IN (rt0.c1, rt1.c0)) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c1 FROM rt0, v0, rt1, vt1 WHERE ((NOT (CAST((rt1.c1 IN (rt0.c1, rt1.c0)) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c1 FROM rt0, v0, rt1, vt1 WHERE (((CAST((rt1.c1 IN (rt0.c1, rt1.c0)) AS TEXT)) ISNULL));
SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c1 FROM rt0, v0, rt1, vt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, rt0, v0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, rt0, v0, rt1 WHERE (((((rt0.c2)OR((((rt1.c2))>((vt1.c0))))))OR(CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, rt0, v0, rt1 WHERE ((NOT (((((rt0.c2)OR((((rt1.c2))>((vt1.c0))))))OR(CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, rt0, v0, rt1 WHERE (((((((rt0.c2)OR((((rt1.c2))>((vt1.c0))))))OR(CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, rt0, v0, rt1;
SELECT rt0.c0, rt1.c1, rt1.c2 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c0, rt1.c1, rt1.c2;
SELECT rt0.c0, rt1.c1, rt1.c2 FROM rt1, vt1, rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))<(((rt0.c0)*(0.8030807280404758))))) GROUP BY rt0.c0, rt1.c1, rt1.c2 UNION SELECT rt0.c0, rt1.c1, rt1.c2 FROM rt1, vt1, rt0, v0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))<(((rt0.c0)*(0.8030807280404758))))))) GROUP BY rt0.c0, rt1.c1, rt1.c2 UNION SELECT rt0.c0, rt1.c1, rt1.c2 FROM rt1, vt1, rt0, v0 WHERE (((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))<(((rt0.c0)*(0.8030807280404758))))) ISNULL)) GROUP BY rt0.c0, rt1.c1, rt1.c2;
SELECT rt0.c0, rt1.c1, rt1.c2 FROM rt1, vt1, rt0, v0 GROUP BY rt0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0 HAVING MAX((+ (TOTAL(rt1.c2)))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (MAX((+ (TOTAL(rt1.c2)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0 HAVING ((MAX((+ (TOTAL(rt1.c2))))) ISNULL);
SELECT ALL * FROM v0, vt1, rt1;
SELECT ALL * FROM v0, vt1, rt1 WHERE (CAST('[ᣛ⬂(#)' AS NUMERIC)) UNION ALL SELECT ALL * FROM v0, vt1, rt1 WHERE ((NOT (CAST('[ᣛ⬂(#)' AS NUMERIC)))) UNION ALL SELECT * FROM v0, vt1, rt1 WHERE (((CAST('[ᣛ⬂(#)' AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0, vt1, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((NOT (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((NOT (rt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt1, rt0 GROUP BY rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt1, rt0 WHERE ((CAST(rt1.c1 AS TEXT) IN ())) GROUP BY rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt1, rt0 WHERE ((NOT ((CAST(rt1.c1 AS TEXT) IN ())))) GROUP BY rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt1, rt0 WHERE ((((CAST(rt1.c1 AS TEXT) IN ())) ISNULL)) GROUP BY rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt1, rt0 GROUP BY rt1.c2, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM v0 CROSS JOIN vt1 ON ((vt1.c0)OR(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0 CROSS JOIN vt1 ON ((vt1.c0)OR(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING TOTAL(((SUM(vt1.c0))IS NOT(GROUP_CONCAT(AVG(MAX(MAX(GROUP_CONCAT(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM v0 CROSS JOIN vt1 ON ((vt1.c0)OR(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING (NOT (TOTAL(((SUM(vt1.c0))IS NOT(GROUP_CONCAT(AVG(MAX(MAX(GROUP_CONCAT(vt1.c0)))))))))) UNION ALL SELECT vt1.c0 FROM v0 CROSS JOIN vt1 ON ((vt1.c0)OR(v0.c0)) COLLATE RTRIM GROUP BY vt1.c0 HAVING ((TOTAL(((SUM(vt1.c0))IS NOT(GROUP_CONCAT(AVG(MAX(MAX(GROUP_CONCAT(vt1.c0))))))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.3370161656866181)))) AND (((NULL)>=('TRUE'))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.3370161656866181)))) AND (((NULL)>=('TRUE'))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.3370161656866181)))) AND (((NULL)>=('TRUE'))))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt1.c2 FROM rt0, rt1, vt1;
SELECT DISTINCT rt1.c2 FROM rt0 NOT INDEXED, rt1, vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c2 FROM rt0, rt1, vt1 WHERE ((NOT ((NOT (vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT rt1.c2 FROM rt0, rt1, vt1 WHERE ((((NOT (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt0, rt1, vt1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)=(rt0.c1)))OR(CAST(rt0.c1 AS BLOB))))AND(LIKE(rt0.c0, rt0.c1, 'b')))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c0)==(rt0.c1)))OR(CAST(rt0.c1 AS BLOB))))AND(LIKE(rt0.c0, rt0.c1, 'b')))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c0)=(rt0.c1)))OR(CAST(rt0.c1 AS BLOB))))AND(LIKE(rt0.c0, rt0.c1, 'b')))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2;
SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 HAVING MIN(0.7609650854845051) UNION ALL SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 HAVING (NOT (MIN(0.7609650854845051))) UNION ALL SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 HAVING ((MIN(0.7609650854845051)) ISNULL);
SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2;
SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 HAVING MIN(0.7609650854845051) UNION ALL SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 HAVING (NOT (MIN(0.7609650854845051))) UNION ALL SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 HAVING ((MIN(0.7609650854845051)) ISNULL);
SELECT rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c1, rt0.c1, rt1.c0, rt1.c2, rt0.c2;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) IS FALSE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS INTEGER) CROSS JOIN v0 ON ((((vt1.c0) IS FALSE)) NOT NULL);
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt1 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS INTEGER) CROSS JOIN v0 ON ((((vt1.c0) IS FALSE)) NOT NULL) WHERE (0.9870954593933752) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS INTEGER) CROSS JOIN v0 ON ((((vt1.c0) IS FALSE)) NOT NULL) WHERE ((NOT (0.9870954593933752))) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS INTEGER) CROSS JOIN v0 ON ((((vt1.c0) IS FALSE)) NOT NULL) WHERE (((0.9870954593933752) ISNULL));
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS INTEGER) CROSS JOIN v0 ON ((((vt1.c0) IS FALSE)) NOT NULL);
SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM v0, rt1 WHERE ((((NULL)-(rt1.c1)) IN ())) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM v0, rt1 WHERE ((NOT ((((NULL)-(rt1.c1)) IN ())))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM v0, rt1 WHERE ((((((NULL)-(rt1.c1)) IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1;
SELECT rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0 HAVING (MIN(MAX(MIN(vt1.c0))) IN ()) UNION ALL SELECT rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0 HAVING (NOT ((MIN(MAX(MIN(vt1.c0))) IN ()))) UNION ALL SELECT ALL rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0 HAVING (((MIN(MAX(MIN(vt1.c0))) IN ())) ISNULL);
SELECT rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0 HAVING (MIN(MAX(MIN(vt1.c0))) IN ()) UNION ALL SELECT rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0 HAVING (NOT ((MIN(MAX(MIN(vt1.c0))) IN ()))) UNION ALL SELECT ALL rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0 HAVING (((MIN(MAX(MIN(vt1.c0))) IN ())) ISNULL);
SELECT rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0;
SELECT ALL MAX('1774812731') FROM rt0, rt1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (json_extract(('-1195955639' IN ()), (vt1.c0 IN (vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_extract(('-1195955639' IN ()), (vt1.c0 IN (vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((json_extract(('-1195955639' IN ()), (vt1.c0 IN (vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))-((~ (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))-((~ (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED, vt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))-((~ (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c1)-(rt1.c1)) COLLATE NOCASE COLLATE BINARY) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c1)-(rt1.c1)) COLLATE NOCASE COLLATE BINARY))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c1)-(rt1.c1)) COLLATE NOCASE COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c2, v0.c0 HAVING ((((rt0.c0)==(vt1.c0)))>>((NOT (SUM(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c2, v0.c0 HAVING (NOT (((((rt0.c0)=(vt1.c0)))>>((NOT (SUM(TOTAL(rt0.c2)))))))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c2, v0.c0 HAVING ((((((rt0.c0)==(vt1.c0)))>>((NOT (SUM(TOTAL(rt0.c2))))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.8167828373700439)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((NOT ((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.8167828373700439)))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((NOT ((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.8167828373700439)))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, rt0;
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, rt0 WHERE ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) UNION SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, rt0 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())))) UNION SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, rt0 WHERE ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0 FROM vt1, rt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)>>(vt1.c0)) AS TEXT)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)>>(vt1.c0)) AS TEXT)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)>>(vt1.c0)) AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c1, rt1.c2, vt1.c0 FROM vt1 INNER JOIN rt1 ON (NOT (((vt1.c0) ISNULL))) GROUP BY rt1.c1, rt1.c2, vt1.c0;
SELECT rt1.c1, rt1.c2, vt1.c0 FROM vt1 INNER JOIN rt1 ON (NOT (((vt1.c0) ISNULL))) GROUP BY rt1.c1, rt1.c2, vt1.c0 HAVING SUM(AVG(COUNT(COUNT(*))) COLLATE BINARY) UNION ALL SELECT ALL rt1.c1, rt1.c2, vt1.c0 FROM vt1 INNER JOIN rt1 ON (NOT (((vt1.c0) ISNULL))) GROUP BY rt1.c1, rt1.c2, vt1.c0 HAVING (NOT (SUM(AVG(COUNT(COUNT(*))) COLLATE BINARY))) UNION ALL SELECT rt1.c1, rt1.c2, vt1.c0 FROM vt1 INNER JOIN rt1 ON (NOT (((vt1.c0) ISNULL))) GROUP BY rt1.c1, rt1.c2, vt1.c0 HAVING ((SUM(AVG(COUNT(COUNT(*))) COLLATE BINARY)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (CAST(UPPER(rt1.c0) AS NUMERIC)) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CAST(UPPER(rt1.c0) AS NUMERIC)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((CAST(UPPER(rt1.c0) AS NUMERIC)) ISNULL));
SELECT rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt1 ON '-2077571119' INNER JOIN rt0 ON CAST(UPPER(DISTINCT rt1.c1) AS TEXT);
SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt1 ON '-2077571119' INNER JOIN rt0 ON CAST(UPPER(DISTINCT rt1.c1) AS TEXT) WHERE ('1614029227' COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt1 ON '-2077571119' INNER JOIN rt0 ON CAST(UPPER(DISTINCT rt1.c1) AS TEXT) WHERE ((NOT ('1614029227' COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt1 ON '-2077571119' INNER JOIN rt0 ON CAST(UPPER(DISTINCT rt1.c1) AS TEXT) WHERE ((('1614029227' COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt1 ON '-2077571119' INNER JOIN rt0 ON CAST(UPPER(DISTINCT rt1.c1) AS TEXT);
SELECT ALL rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c0, rt1.c1, vt1.c0, v0.c0;
SELECT rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1 WHERE ((+ (''))) GROUP BY rt1.c0, rt1.c1, vt1.c0, v0.c0 UNION SELECT ALL rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1 WHERE ((NOT ((+ (''))))) GROUP BY rt1.c0, rt1.c1, vt1.c0, v0.c0 UNION SELECT ALL rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1 WHERE ((((+ (''))) ISNULL)) GROUP BY rt1.c0, rt1.c1, vt1.c0, v0.c0;
SELECT ALL rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c0, rt1.c1, vt1.c0, v0.c0;
SELECT rt1.c2 FROM v0 INNER JOIN rt1 ON CAST(((rt0.c2)*(rt1.c0)) AS REAL) CROSS JOIN rt0 ON (NOT (rt0.c2)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM v0 INNER JOIN rt1 ON CAST(((rt0.c2)*(rt1.c0)) AS REAL) CROSS JOIN rt0 ON (NOT (rt0.c2)) GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))%(v0.c0)) UNION ALL SELECT ALL rt1.c2 FROM v0 INNER JOIN rt1 ON CAST(((rt0.c2)*(rt1.c0)) AS REAL) CROSS JOIN rt0 ON (NOT (rt0.c2)) GROUP BY rt1.c2 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))%(v0.c0)))) UNION ALL SELECT rt1.c2 FROM v0 INNER JOIN rt1 ON CAST(((rt0.c2)*(rt1.c0)) AS REAL) CROSS JOIN rt0 ON (NOT (rt0.c2)) GROUP BY rt1.c2 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))%(v0.c0))) ISNULL);
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((((rt1.c2)OR(rt1.c1)), rt1.c0 COLLATE RTRIM, rt1.c1)) AND ((LAST_INSERT_ROWID(), ((rt1.c2) NOTNULL), x'')))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((((rt1.c2)OR(rt1.c1)), rt1.c0 COLLATE RTRIM, rt1.c1)) AND ((LAST_INSERT_ROWID(), ((rt1.c2) NOTNULL), x'')))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((((rt1.c2)OR(rt1.c1)), rt1.c0 COLLATE RTRIM, rt1.c1)) AND ((LAST_INSERT_ROWID(), ((rt1.c2) NOTNULL), x'')))) ISNULL));
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, rt1.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, rt1.c0 FROM rt0, rt1 WHERE ((((- (rt1.c1))) NOT NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, rt1.c0 FROM rt0, rt1 WHERE ((NOT ((((- (rt1.c1))) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, rt1.c0 FROM rt0, rt1 WHERE ((((((- (rt1.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt1.c1, rt1.c0 FROM rt0, rt1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0))>((rt0.c1))) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))|((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0))>((rt0.c1))) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))|((rt0.c1 IN ()))) WHERE ((+ (vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0))>((rt0.c1))) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))|((rt0.c1 IN ()))) WHERE ((NOT ((+ (vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0))>((rt0.c1))) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))|((rt0.c1 IN ()))) WHERE ((((+ (vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0))>((rt0.c1))) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))|((rt0.c1 IN ()))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1;
SELECT ALL rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1;
SELECT ALL rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt0.c1 FROM rt0, vt1, rt1, v0 GROUP BY rt1.c0, rt0.c1;
SELECT MIN((('U\')>>((((rt0.c2))>=((x'')))))) FROM rt0, vt1, rt1, v0;
SELECT rt0.c2, v0.c0, rt1.c0 FROM v0, rt1 CROSS JOIN rt0 ON CASE WHEN ((984480677)|(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END ELSE ((((rt1.c2)OR(rt0.c0)))AND(NULL)) END;
SELECT ALL rt0.c2, v0.c0, rt1.c0 FROM v0, rt1 CROSS JOIN rt0 ON CASE WHEN ((984480677)|(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END ELSE ((((rt1.c2)OR(rt0.c0)))AND(NULL)) END WHERE (CAST(highlight(rt0.c1, rt0.c2, rt0.c1, rt0.c1) AS BLOB)) UNION ALL SELECT rt0.c2, v0.c0, rt1.c0 FROM v0, rt1 CROSS JOIN rt0 ON CASE WHEN ((984480677)|(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END ELSE ((((rt1.c2)OR(rt0.c0)))AND(NULL)) END WHERE ((NOT (CAST(highlight(rt0.c1, rt0.c2, rt0.c1, rt0.c1) AS BLOB)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt1.c0 FROM v0, rt1 CROSS JOIN rt0 ON CASE WHEN ((984480677)|(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END ELSE ((((rt1.c2)OR(rt0.c0)))AND(NULL)) END WHERE (((CAST(highlight(rt0.c1, rt0.c2, rt0.c1, rt0.c1) AS BLOB)) ISNULL));
SELECT rt0.c2, v0.c0, rt1.c0 FROM v0, rt1 CROSS JOIN rt0 ON CASE WHEN ((984480677)|(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END ELSE ((((rt1.c2)OR(rt0.c0)))AND(NULL)) END;
SELECT DISTINCT rt1.c2 FROM rt1 NOT INDEXED CROSS JOIN v0 ON (~ ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))));
SELECT DISTINCT rt1.c2 FROM rt1 CROSS JOIN v0 ON (~ ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN 0X1e17bee6 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((0.4579699630112162)-(''))) AND (CASE v0.c0  WHEN v0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT rt1.c2 FROM rt1 CROSS JOIN v0 ON (~ ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) WHERE ((NOT (((CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN 0x1e17bee6 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((0.4579699630112162)-(''))) AND (CASE v0.c0  WHEN v0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 CROSS JOIN v0 ON (~ ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) WHERE (((((CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN 0X1e17bee6 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((0.4579699630112162)-(''))) AND (CASE v0.c0  WHEN v0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1 NOT INDEXED CROSS JOIN v0 ON (~ ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2;
SELECT rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2 HAVING (((+ (rt1.c2))) IS TRUE) UNION ALL SELECT rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2 HAVING (NOT ((((+ (rt1.c2))) IS TRUE))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2 HAVING (((((+ (rt1.c2))) IS TRUE)) ISNULL);
SELECT rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2;
SELECT rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2 HAVING (((+ (rt1.c2))) IS TRUE) UNION ALL SELECT rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2 HAVING (NOT ((((+ (rt1.c2))) IS TRUE))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2 HAVING (((((+ (rt1.c2))) IS TRUE)) ISNULL);
SELECT rt1.c1, rt1.c0, rt0.c2 FROM rt0, v0 INNER JOIN rt1 ON rt1.c0 GROUP BY rt1.c1, rt1.c0, rt0.c2;
SELECT ALL MAX((+ (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))))) FROM rt0 ORDER BY CASE WHEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(0.21654159975112497)) THEN '-982093394' COLLATE NOCASE ELSE (rt0.c0 IN ()) END  NULLS LAST;
SELECT ALL rt1.c0, vt1.c0, rt0.c2 FROM rt0, vt1, rt1, v0;
SELECT ALL rt1.c0, vt1.c0, rt0.c2 FROM rt0, vt1, rt1, v0 WHERE (v0.c0) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt0.c2 FROM rt0, vt1, rt1, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT rt1.c0, vt1.c0, rt0.c2 FROM rt0, vt1, rt1, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL rt1.c0, vt1.c0, rt0.c2 FROM rt0, vt1, rt1, v0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((CAST(rt0.c0 AS NUMERIC)))==((((rt0.c1) ISNULL))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((CAST(rt0.c0 AS NUMERIC)))==((((rt0.c1) ISNULL))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((CAST(rt0.c0 AS NUMERIC)))==((((rt0.c1) ISNULL))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0 NOT INDEXED;
SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt1, rt0, vt1, v0 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt1, rt0, vt1, v0 WHERE ((v0.c0 IN ()) COLLATE BINARY) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt1, rt0, vt1, v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE BINARY))) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt1, rt0, vt1, v0 WHERE ((((v0.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt1, rt0, vt1, v0 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((MAX(0.3411097090317353))>(HEX(DISTINCT GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (((MAX(0.3411097090317353))>(HEX(DISTINCT GROUP_CONCAT(rt1.c0)))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((((MAX(0.3411097090317353))>(HEX(DISTINCT GROUP_CONCAT(rt1.c0))))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((MAX(0.3411097090317353))>(HEX(DISTINCT GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (((MAX(0.3411097090317353))>(HEX(DISTINCT GROUP_CONCAT(rt1.c0)))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((((MAX(0.3411097090317353))>(HEX(DISTINCT GROUP_CONCAT(rt1.c0))))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE (UPPER((rt1.c0 IN ()))) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT (UPPER((rt1.c0 IN ()))))) UNION ALL SELECT * FROM rt1, v0 WHERE (((UPPER((rt1.c0 IN ()))) ISNULL));
SELECT ALL * FROM rt1, v0;
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON (- (((vt1.c0)<<(rt1.c1)))) RIGHT OUTER JOIN v0 ON NULL;
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON (- (((vt1.c0)<<(rt1.c1)))) RIGHT OUTER JOIN v0 ON NULL WHERE ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)) IN ())) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON (- (((vt1.c0)<<(rt1.c1)))) RIGHT OUTER JOIN v0 ON NULL WHERE ((NOT ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)) IN ())))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON (- (((vt1.c0)<<(rt1.c1)))) RIGHT OUTER JOIN v0 ON NULL WHERE ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON (- (((vt1.c0)<<(rt1.c1)))) RIGHT OUTER JOIN v0 ON NULL;
SELECT v0.c0 FROM v0, rt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt1 WHERE ((((v0.c0)) BETWEEN ((0.4095528330071878)) AND ((CAST(v0.c0 AS INTEGER))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt1 WHERE ((NOT ((((v0.c0)) BETWEEN ((0.4095528330071878)) AND ((CAST(v0.c0 AS INTEGER))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt1 WHERE ((((((v0.c0)) BETWEEN ((0.4095528330071878)) AND ((CAST(v0.c0 AS INTEGER))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt1 GROUP BY v0.c0;
SELECT rt0.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt1.c1, rt0.c1 FROM rt0, vt1, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt1.c1, rt0.c1;
SELECT rt0.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt1.c1, rt0.c1 FROM rt0, vt1, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt1.c1, rt0.c1 HAVING COUNT(((MIN(rt0.c1)) NOTNULL)) UNION ALL SELECT rt0.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt1.c1, rt0.c1 FROM rt0, vt1, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt1.c1, rt0.c1 HAVING (NOT (COUNT(((MIN(rt0.c1)) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt1.c1, rt0.c1 FROM rt0, vt1, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt1.c1, rt0.c1 HAVING ((COUNT(((MIN(rt0.c1)) NOTNULL))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0 COLLATE BINARY)))AND(IFNULL(v0.c0, v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))OR(v0.c0 COLLATE BINARY)))AND(IFNULL(v0.c0, v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0 IN ()))OR(v0.c0 COLLATE BINARY)))AND(IFNULL(v0.c0, v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, rt1 WHERE (((((vt1.c0))<>((rt1.c1))) IN (CASE 'T㤱'  WHEN rt1.c0 THEN rt1.c2 END, (((rt1.c2, rt1.c2, rt1.c0))<=((rt1.c0, rt1.c2, rt1.c0)))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, rt1 WHERE ((NOT (((((vt1.c0))!=((rt1.c1))) IN (CASE 'T㤱'  WHEN rt1.c0 THEN rt1.c2 END, (((rt1.c2, rt1.c2, rt1.c0))<=((rt1.c0, rt1.c2, rt1.c0)))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, rt1 WHERE (((((((vt1.c0))<>((rt1.c1))) IN (CASE 'T㤱'  WHEN rt1.c0 THEN rt1.c2 END, (((rt1.c2, rt1.c2, rt1.c0))<=((rt1.c0, rt1.c2, rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, rt1;
SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2 IN ()) IN ()) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2 IN ()) IN ()) WHERE (((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))>>((x'c81d' IN (rt0.c2, rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2 IN ()) IN ()) WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))>>((x'c81d' IN (rt0.c2, rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2 IN ()) IN ()) WHERE (((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))>>((x'c81d' IN (rt0.c2, rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2 IN ()) IN ()) GROUP BY rt0.c2;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT * FROM v0, rt0, rt1, vt1;
SELECT ALL * FROM v0, rt0, rt1 NOT INDEXED, vt1 WHERE (((((v0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0, rt0, rt1, vt1 WHERE ((NOT (((((v0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, rt0, rt1, vt1 WHERE (((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM v0, rt0, rt1, vt1;
SELECT DISTINCT v0.c0, rt0.c0 FROM rt0, rt1 NATURAL JOIN v0;
SELECT DISTINCT v0.c0, rt0.c0 FROM rt0, rt1 NATURAL JOIN v0 WHERE (CAST(((rt0.c1)|(rt1.c1)) AS TEXT)) UNION SELECT DISTINCT v0.c0, rt0.c0 FROM rt0, rt1 NATURAL JOIN v0 WHERE ((NOT (CAST(((rt0.c1)|(rt1.c1)) AS TEXT)))) UNION SELECT DISTINCT v0.c0, rt0.c0 FROM rt0, rt1 NATURAL JOIN v0 WHERE (((CAST(((rt0.c1)|(rt1.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0 FROM rt0, rt1 NATURAL JOIN v0;
SELECT rt1.c0, vt1.c0, rt1.c1 FROM rt0, rt1, vt1, v0 GROUP BY rt1.c0, vt1.c0, rt1.c1;
SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt0, rt1, vt1, v0 WHERE (((((((((((((((rt0.c2)!=(rt0.c2)))OR(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c0 END)))AND(v0.c0 COLLATE NOCASE)))AND(LOWER(rt0.c1))))OR(rt0.c1)))AND((rt1.c0 IN ()))))OR('1687433155'))) GROUP BY rt1.c0, vt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt0, rt1, vt1, v0 WHERE ((NOT (((((((((((((((rt0.c2)<>(rt0.c2)))OR(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c0 END)))AND(v0.c0 COLLATE NOCASE)))AND(LOWER(rt0.c1))))OR(rt0.c1)))AND((rt1.c0 IN ()))))OR('1687433155'))))) GROUP BY rt1.c0, vt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt0, rt1, vt1, v0 WHERE (((((((((((((((((rt0.c2)!=(rt0.c2)))OR(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c0 END)))AND(v0.c0 COLLATE NOCASE)))AND(LOWER(rt0.c1))))OR(rt0.c1)))AND((rt1.c0 IN ()))))OR('1687433155'))) ISNULL)) GROUP BY rt1.c0, vt1.c0, rt1.c1;
SELECT rt1.c0, vt1.c0, rt1.c1 FROM rt0, rt1, vt1, v0 GROUP BY rt1.c0, vt1.c0, rt1.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON (((rt0.c0) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((CAST(rt1.c0 AS BLOB)))>=((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((CAST(rt1.c0 AS BLOB)))>=((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))))) UNION ALL SELECT * FROM rt1 WHERE ((((((CAST(rt1.c0 AS BLOB)))>=((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt1, rt0, rt1, v0;
SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE ((((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 END))==((((rt1.c2)IS NOT(rt0.c2)))))) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE ((NOT ((((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 END))=((((rt1.c2)IS NOT(rt0.c2)))))))) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE ((((((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 END))==((((rt1.c2)IS NOT(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, rt1, v0;
SELECT rt1.c1, v0.c0 FROM rt0, v0, rt1 GROUP BY rt1.c1, v0.c0;
SELECT rt1.c1, v0.c0 FROM rt0, v0, rt1 WHERE ((((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN (((NOT (rt0.c2)), ((((((((((((rt1.c1)OR(0.5355138302392988)))AND(NULL)))AND('KF(u')))OR(v0.c0)))AND(rt0.c0)))AND(rt0.c0)), ((rt1.c2)&(rt0.c1)))) AND (((NOT ('298135294')), CASE v0.c0  WHEN rt0.c0 THEN rt1.c2 END, (~ (rt0.c1)))))) GROUP BY rt1.c1, v0.c0 UNION SELECT rt1.c1, v0.c0 FROM rt0, v0, rt1 WHERE ((NOT ((((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN (((NOT (rt0.c2)), ((((((((((((rt1.c1)OR(0.5355138302392988)))AND(NULL)))AND('KF(u')))OR(v0.c0)))AND(rt0.c0)))AND(rt0.c0)), ((rt1.c2)&(rt0.c1)))) AND (((NOT ('298135294')), CASE v0.c0  WHEN rt0.c0 THEN rt1.c2 END, (~ (rt0.c1)))))))) GROUP BY rt1.c1, v0.c0 UNION SELECT ALL rt1.c1, v0.c0 FROM rt0, v0, rt1 WHERE ((((((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN (((NOT (rt0.c2)), ((((((((((((rt1.c1)OR(0.5355138302392988)))AND(NULL)))AND('KF(u')))OR(v0.c0)))AND(rt0.c0)))AND(rt0.c0)), ((rt1.c2)&(rt0.c1)))) AND (((NOT ('298135294')), CASE v0.c0  WHEN rt0.c0 THEN rt1.c2 END, (~ (rt0.c1)))))) ISNULL)) GROUP BY rt1.c1, v0.c0;
SELECT rt1.c1, v0.c0 FROM rt0, v0, rt1 GROUP BY rt1.c1, v0.c0;
SELECT rt1.c2 FROM rt1, vt1, v0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt1, v0 GROUP BY rt1.c2 HAVING AVG(MIN(COUNT(*))) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt1, v0 GROUP BY rt1.c2 HAVING (NOT (AVG(MIN(COUNT(*))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt1, v0 GROUP BY rt1.c2 HAVING ((AVG(MIN(COUNT(*)))) ISNULL);
SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM vt1, v0 INNER JOIN rt1 ON NULLIF(DISTINCT ((rt0.c2) BETWEEN (vt1.c0) AND (rt1.c2)), json(rt0.c0)) RIGHT OUTER JOIN rt0 ON NULL;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(0.38988812650648597)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(0.38988812650648597)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(0.38988812650648597)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((~ (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((~ (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (((SUM(rt1.c1)) ISNULL) IN ()) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (NOT ((((SUM(rt1.c1)) ISNULL) IN ()))) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (((((SUM(rt1.c1)) ISNULL) IN ())) ISNULL);
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (((SUM(rt1.c1)) ISNULL) IN ()) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (NOT ((((SUM(rt1.c1)) ISNULL) IN ()))) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (((((SUM(rt1.c1)) ISNULL) IN ())) ISNULL);
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT * FROM v0, rt1;
SELECT ALL * FROM v0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) UNION ALL SELECT * FROM v0, rt1 WHERE ((NOT ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())))) UNION ALL SELECT * FROM v0, rt1 WHERE ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) ISNULL));
SELECT * FROM v0, rt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1)AND(0xffffffff99bd7c50)))AND(rt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(0xffffffff99bd7c50)))AND(rt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)AND(0Xffffffff99bd7c50)))AND(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1 HAVING ((MAX(rt0.c1))<<(COUNT(*))) UNION ALL SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (((MAX(rt0.c1))<<(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1 HAVING ((((MAX(rt0.c1))<<(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1 HAVING ((MAX(rt0.c1))<<(COUNT(*))) UNION ALL SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (((MAX(rt0.c1))<<(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1 HAVING ((((MAX(rt0.c1))<<(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM v0, vt1, rt0 GROUP BY rt0.c1;
SELECT ALL MAX((((rt1.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((CASE rt1.c0  WHEN v0.c0 THEN rt1.c0 END)))) FROM v0, vt1, rt0, rt1;
SELECT * FROM rt1, v0, vt1, rt0;
SELECT * FROM rt1, v0, vt1, rt0 WHERE (((NULL)OR(((rt0.c2)>(rt0.c0))))) UNION ALL SELECT * FROM rt1, v0, vt1, rt0 WHERE ((NOT (((NULL)OR(((rt0.c2)>(rt0.c0))))))) UNION ALL SELECT * FROM rt1, v0, vt1, rt0 WHERE (((((NULL)OR(((rt0.c2)>(rt0.c0))))) ISNULL));
SELECT * FROM rt1, v0, vt1, rt0;
SELECT DISTINCT * FROM rt1, vt1, v0;
SELECT DISTINCT * FROM rt1 NOT INDEXED, vt1, v0 WHERE (DATETIME(vt1.c0, rt1.c2, CAST(vt1.c0 AS INTEGER))) UNION SELECT DISTINCT * FROM rt1, vt1, v0 WHERE ((NOT (DATETIME(vt1.c0, rt1.c2, CAST(vt1.c0 AS INTEGER))))) UNION SELECT DISTINCT * FROM rt1, vt1, v0 WHERE (((DATETIME(vt1.c0, rt1.c2, CAST(vt1.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, v0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM v0, vt1 CROSS JOIN rt1 ON (- ((+ (vt1.c0)))) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM v0, vt1 CROSS JOIN rt1 ON (- ((+ (vt1.c0)))) WHERE ((((vt1.c0 COLLATE BINARY, (+ (rt1.c2)), (('674798045') IS FALSE)))<=((CAST(rt1.c1 AS REAL), ((rt1.c1)/(rt1.c1)), (rt1.c1 IN ()))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM v0, vt1 CROSS JOIN rt1 ON (- ((+ (vt1.c0)))) WHERE ((NOT ((((vt1.c0 COLLATE BINARY, (+ (rt1.c2)), (('674798045') IS FALSE)))<=((CAST(rt1.c1 AS REAL), ((rt1.c1)/(rt1.c1)), (rt1.c1 IN ()))))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM v0, vt1 CROSS JOIN rt1 ON (- ((+ (vt1.c0)))) WHERE ((((((vt1.c0 COLLATE BINARY, (+ (rt1.c2)), (('674798045') IS FALSE)))<=((CAST(rt1.c1 AS REAL), ((rt1.c1)/(rt1.c1)), (rt1.c1 IN ()))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM v0, vt1 CROSS JOIN rt1 ON (- ((+ (vt1.c0)))) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt1.c1) BETWEEN ((+ (rt0.c1))) AND (((rt1.c0)OR(rt1.c2)))) INNER JOIN rt1 ON rt0.c1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL * FROM vt1, rt1, v0;
SELECT * FROM vt1, rt1 NOT INDEXED, v0 WHERE (CASE CASE WHEN '1224734039' THEN x'' WHEN rt1.c2 THEN rt1.c0 WHEN 0.054646836272785326 THEN rt1.c1 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END  WHEN ((vt1.c0)/(rt1.c0)) THEN CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 END ELSE ((rt1.c0) NOT BETWEEN (vt1.c0) AND (0.3283756246313547)) END) UNION ALL SELECT ALL * FROM vt1, rt1, v0 WHERE ((NOT (CASE CASE WHEN '1224734039' THEN x'' WHEN rt1.c2 THEN rt1.c0 WHEN 0.054646836272785326 THEN rt1.c1 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END  WHEN ((vt1.c0)/(rt1.c0)) THEN CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 END ELSE ((rt1.c0) NOT BETWEEN (vt1.c0) AND (0.3283756246313547)) END))) UNION ALL SELECT ALL * FROM vt1, rt1, v0 WHERE (((CASE CASE WHEN '1224734039' THEN x'' WHEN rt1.c2 THEN rt1.c0 WHEN 0.054646836272785326 THEN rt1.c1 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END  WHEN ((vt1.c0)/(rt1.c0)) THEN CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 END ELSE ((rt1.c0) NOT BETWEEN (vt1.c0) AND (0.3283756246313547)) END) ISNULL));
SELECT ALL * FROM vt1, rt1, v0;
SELECT DISTINCT rt1.c1, rt1.c0, vt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c0 FROM v0, vt1, rt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0, vt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c0 FROM v0, vt1, rt0, rt1 WHERE (CASE WHEN ((x'e010') NOT BETWEEN (rt1.c2) AND ('-2124451507')) THEN v0.c0 END) UNION SELECT DISTINCT rt1.c1, rt1.c0, vt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c0 FROM v0, vt1, rt0, rt1 WHERE ((NOT (CASE WHEN ((x'e010') NOT BETWEEN (rt1.c2) AND ('-2124451507')) THEN v0.c0 END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, vt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c0 FROM v0, vt1, rt0, rt1 WHERE (((CASE WHEN ((x'e010') NOT BETWEEN (rt1.c2) AND ('-2124451507')) THEN v0.c0 END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, vt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c0 FROM v0, vt1, rt0, rt1;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM vt1, rt1, v0, rt0 WHERE (((vt1.c0)<=(rt1.c1)) COLLATE BINARY) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM vt1, rt1, v0, rt0 WHERE ((NOT (((vt1.c0)<=(rt1.c1)) COLLATE BINARY))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0 UNION SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM vt1, rt1, v0, rt0 WHERE (((((vt1.c0)<=(rt1.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM vt1, rt1, v0, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM vt1, v0, rt1 GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1, v0.c0;
SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM vt1, v0, rt1 GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING ((SUM(MAX(COUNT(*)))) ISNULL) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM vt1, v0, rt1 GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING (NOT (((SUM(MAX(COUNT(*)))) ISNULL))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM vt1, v0, rt1 GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING ((((SUM(MAX(COUNT(*)))) ISNULL)) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1;
SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE (json_array_length((rt1.c1 IN ('1221787457')))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((NOT (json_array_length((rt1.c1 IN ('1221787457')))))) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE (((json_array_length((rt1.c1 IN ('1221787457')))) ISNULL));
SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1;
SELECT DISTINCT * FROM v0, rt0, rt1, vt1;
SELECT DISTINCT * FROM v0, rt0, rt1, vt1 WHERE (((((rt1.c1 COLLATE RTRIM)AND((~ (vt1.c0)))))AND(rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, rt0, rt1, vt1 WHERE ((NOT (((((rt1.c1 COLLATE RTRIM)AND((~ (vt1.c0)))))AND(rt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0, rt0, rt1, vt1 WHERE (((((((rt1.c1 COLLATE RTRIM)AND((~ (vt1.c0)))))AND(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, rt1, vt1;
SELECT rt1.c0, v0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)) IN (CASE WHEN rt1.c1 THEN x'' END)) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, v0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)) IN (CASE WHEN rt1.c1 THEN x'' END)) WHERE ((~ ((+ (rt1.c0))))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, v0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)) IN (CASE WHEN rt1.c1 THEN x'' END)) WHERE ((NOT ((~ ((+ (rt1.c0))))))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, v0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)) IN (CASE WHEN rt1.c1 THEN x'' END)) WHERE ((((~ ((+ (rt1.c0))))) ISNULL)) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, v0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)) IN (CASE WHEN rt1.c1 THEN x'' END)) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING MIN(AVG(COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (MIN(AVG(COUNT(*))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((MIN(AVG(COUNT(*)))) ISNULL);
SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0 CROSS JOIN rt1 ON CAST(0.6021258036679116 AS REAL);
SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0 CROSS JOIN rt1 ON CAST(0.6021258036679116 AS REAL) WHERE ((+ (''))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0 CROSS JOIN rt1 ON CAST(0.6021258036679116 AS REAL) WHERE ((NOT ((+ (''))))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0 CROSS JOIN rt1 ON CAST(0.6021258036679116 AS REAL) WHERE ((((+ (''))) ISNULL));
SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0 CROSS JOIN rt1 ON CAST(0.6021258036679116 AS REAL);
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((((((((rt1.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)) IN ((NOT (rt0.c2))));
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((((((((rt1.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)) IN ((NOT (rt0.c2)))) WHERE ((0.6342524745950958 IN ())) UNION SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((((((((rt1.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)) IN ((NOT (rt0.c2)))) WHERE ((NOT ((0.6342524745950958 IN ())))) UNION SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((((((((rt1.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)) IN ((NOT (rt0.c2)))) WHERE ((((0.6342524745950958 IN ())) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((((((((rt1.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)) IN ((NOT (rt0.c2))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN '1827586217' THEN v0.c0 ELSE v0.c0 END)||((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN '1827586217' THEN v0.c0 ELSE v0.c0 END)||((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN '1827586217' THEN v0.c0 ELSE v0.c0 END)||((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 NATURAL JOIN vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 NATURAL JOIN vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING COUNT(((AVG(MIN(COUNT(AVG(v0.c0))))) IS FALSE)) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 NATURAL JOIN vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING (NOT (COUNT(((AVG(MIN(COUNT(AVG(v0.c0))))) IS FALSE)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 NATURAL JOIN vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING ((COUNT(((AVG(MIN(COUNT(AVG(v0.c0))))) IS FALSE))) ISNULL);
SELECT ALL rt1.c2, rt0.c1 FROM vt1, rt0, rt1;
SELECT ALL rt1.c2, rt0.c1 FROM vt1, rt0, rt1 WHERE ((((rt0.c0 IN ()))%(((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL rt1.c2, rt0.c1 FROM vt1, rt0, rt1 WHERE ((NOT ((((rt0.c0 IN ()))%(((vt1.c0) NOTNULL)))))) UNION ALL SELECT ALL rt1.c2, rt0.c1 FROM vt1, rt0, rt1 WHERE ((((((rt0.c0 IN ()))%(((vt1.c0) NOTNULL)))) ISNULL));
SELECT ALL rt1.c2, rt0.c1 FROM vt1, rt0, rt1;
SELECT DISTINCT * FROM vt1, v0, rt0;
SELECT DISTINCT * FROM vt1, v0, rt0 WHERE ((((+ (v0.c0)))<<(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM vt1, v0, rt0 WHERE ((NOT ((((+ (v0.c0)))<<(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM vt1, v0, rt0 WHERE ((((((+ (v0.c0)))<<(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, rt0;
SELECT ALL rt0.c2 FROM vt1, v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, v0, rt0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, v0, rt0 WHERE ((NOT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, v0, rt0 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, v0, rt0 GROUP BY rt0.c2;
SELECT vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING MAX(((rt1.c0) NOT BETWEEN (SUM(MIN(GROUP_CONCAT(vt1.c0)))) AND (COUNT(*)))) UNION ALL SELECT vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING (NOT (MAX(((rt1.c0) NOT BETWEEN (SUM(MIN(GROUP_CONCAT(vt1.c0)))) AND (COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING ((MAX(((rt1.c0) NOT BETWEEN (SUM(MIN(GROUP_CONCAT(vt1.c0)))) AND (COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1, rt1, rt0;
SELECT * FROM vt1, rt1, rt0 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (TIME(rt0.c0, x'6630', rt0.c1)) AND ((rt0.c1 IN ())))) UNION ALL SELECT * FROM vt1, rt1, rt0 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) BETWEEN (TIME(rt0.c0, x'6630', rt0.c1)) AND ((rt0.c1 IN ())))))) UNION ALL SELECT * FROM vt1, rt1, rt0 WHERE (((((vt1.c0 COLLATE NOCASE) BETWEEN (TIME(rt0.c0, x'6630', rt0.c1)) AND ((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM vt1, rt1, rt0;
SELECT DISTINCT * FROM vt1, rt0, rt1, v0;
SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE (((((rt1.c1)<<(NULL))) NOT BETWEEN ((('0.2743739746989211') BETWEEN ('%J	0') AND (vt1.c0))) AND (((vt1.c0)!=(v0.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0 NOT INDEXED, rt1, v0 WHERE ((NOT (((((rt1.c1)<<(NULL))) NOT BETWEEN ((('0.2743739746989211') BETWEEN ('%J	0') AND (vt1.c0))) AND (((vt1.c0)<>(v0.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE (((((((rt1.c1)<<(NULL))) NOT BETWEEN ((('0.2743739746989211') BETWEEN ('%J	0') AND (vt1.c0))) AND (((vt1.c0)!=(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, rt1, v0;
SELECT ALL rt0.c1, v0.c0 FROM vt1, rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM vt1, rt0, v0 WHERE (((rt0.c1)-(((rt0.c1) NOTNULL)))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM vt1, rt0, v0 WHERE ((NOT (((rt0.c1)-(((rt0.c1) NOTNULL)))))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM vt1, rt0, v0 WHERE (((((rt0.c1)-(((rt0.c1) NOTNULL)))) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM vt1, rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT rt1.c2 FROM vt1, v0, rt1, rt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, v0, rt1, rt0 GROUP BY rt1.c2 HAVING AVG(MIN(rt1.c1)) UNION ALL SELECT rt1.c2 FROM vt1, v0, rt1, rt0 GROUP BY rt1.c2 HAVING (NOT (AVG(MIN(rt1.c1)))) UNION ALL SELECT ALL rt1.c2 FROM vt1, v0, rt1, rt0 GROUP BY rt1.c2 HAVING ((AVG(MIN(rt1.c1))) ISNULL);
SELECT * FROM rt0, vt1, rt1;
SELECT * FROM rt0, vt1, rt1 WHERE ((IFNULL(vt1.c0, rt1.c0) IN ())) UNION ALL SELECT * FROM rt0, vt1, rt1 WHERE ((NOT ((IFNULL(vt1.c0, rt1.c0) IN ())))) UNION ALL SELECT * FROM rt0, vt1, rt1 WHERE ((((IFNULL(vt1.c0, rt1.c0) IN ())) ISNULL));
SELECT * FROM rt0, vt1, rt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, vt1.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, v0.c0, rt0.c2, vt1.c0 FROM v0, vt1, rt0 WHERE (((CAST(rt0.c0 AS BLOB))>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (')'))))) GROUP BY rt0.c0, v0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2, vt1.c0 FROM v0, vt1, rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB))>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (')'))))))) GROUP BY rt0.c0, v0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2, vt1.c0 FROM v0, vt1, rt0 WHERE (((((CAST(rt0.c0 AS BLOB))>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (')'))))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, vt1.c0 FROM v0, vt1, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, vt1.c0;
SELECT ALL rt1.c2 FROM rt1, v0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, v0 GROUP BY rt1.c2 HAVING AVG((((SUM(AVG(MAX(rt1.c2))))) BETWEEN ((SUM(COUNT(MIN(GROUP_CONCAT(rt1.c2)))))) AND ((v0.c0)))) UNION ALL SELECT rt1.c2 FROM rt1, v0 GROUP BY rt1.c2 HAVING (NOT (AVG((((SUM(AVG(MAX(rt1.c2))))) BETWEEN ((SUM(COUNT(MIN(GROUP_CONCAT(rt1.c2)))))) AND ((v0.c0)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, v0 GROUP BY rt1.c2 HAVING ((AVG((((SUM(AVG(MAX(rt1.c2))))) BETWEEN ((SUM(COUNT(MIN(GROUP_CONCAT(rt1.c2)))))) AND ((v0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (NULL COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (NULL COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt1 NOT INDEXED CROSS JOIN rt0 ON (((rt1.c0 IN ())) NOT NULL) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt1 CROSS JOIN rt0 ON (((rt1.c0 IN ())) NOT NULL) WHERE ((((((v0.c0 IN ()))AND(((x'0665')/(rt1.c0)))))OR(((((rt1.c0)AND(v0.c0)))AND(rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt1 CROSS JOIN rt0 ON (((rt1.c0 IN ())) NOT NULL) WHERE ((NOT ((((((v0.c0 IN ()))AND(((x'0665')/(rt1.c0)))))OR(((((rt1.c0)AND(v0.c0)))AND(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt1 CROSS JOIN rt0 ON (((rt1.c0 IN ())) NOT NULL) WHERE ((((((((v0.c0 IN ()))AND(((x'0665')/(rt1.c0)))))OR(((((rt1.c0)AND(v0.c0)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt1 NOT INDEXED CROSS JOIN rt0 ON (((rt1.c0 IN ())) NOT NULL) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, v0, rt0, rt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c2) IS TRUE) IN ());
SELECT rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c2) IS TRUE) IN ()) WHERE (CAST(CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END AS INTEGER)) UNION ALL SELECT ALL rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c2) IS TRUE) IN ()) WHERE ((NOT (CAST(CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END AS INTEGER)))) UNION ALL SELECT ALL rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c2) IS TRUE) IN ()) WHERE (((CAST(CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END AS INTEGER)) ISNULL));
SELECT ALL rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c2) IS TRUE) IN ());
SELECT DISTINCT * FROM rt0, v0 CROSS JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON json_extract(LIKELY(''), rt0.c2);
SELECT DISTINCT * FROM rt0, v0 CROSS JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON json_extract(LIKELY(''), rt0.c2) WHERE ((((rt1.c0 IN (rt1.c2, vt1.c0)))%(((vt1.c0) NOT BETWEEN (rt1.c2) AND ('-2124451507'))))) UNION SELECT DISTINCT * FROM rt0, v0 CROSS JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON json_extract(LIKELY(''), rt0.c2) WHERE ((NOT ((((rt1.c0 IN (rt1.c2, vt1.c0)))%(((vt1.c0) NOT BETWEEN (rt1.c2) AND ('-2124451507'))))))) UNION SELECT DISTINCT * FROM rt0, v0 CROSS JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON json_extract(LIKELY(''), rt0.c2) WHERE ((((((rt1.c0 IN (rt1.c2, vt1.c0)))%(((vt1.c0) NOT BETWEEN (rt1.c2) AND ('-2124451507'))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0 CROSS JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON json_extract(LIKELY(''), rt0.c2);
SELECT ALL rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE (0.6110123850300142) GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE ((NOT (0.6110123850300142))) GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE (((0.6110123850300142) ISNULL)) GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END IN ()) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (NOT ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1 NOT INDEXED, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END IN ())) ISNULL);
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END IN ()) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (NOT ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1 NOT INDEXED, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END IN ())) ISNULL);
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt1, rt0, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt1.c2, rt0.c1, rt1.c1, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0, rt1 FULL OUTER JOIN vt1 ON ((((((v0.c0)OR(0.008466558780160782)))OR(rt1.c0))) IS TRUE);
SELECT rt1.c2, rt0.c1, rt1.c1, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0, rt1 FULL OUTER JOIN vt1 ON ((((((v0.c0)OR(0.008466558780160782)))OR(rt1.c0))) IS TRUE) WHERE (CASE (((rt1.c0))<=((rt0.c1)))  WHEN (((1.227509946E9)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))) THEN ((rt1.c2)AND(rt0.c2)) END) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt1.c1, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0, rt1 FULL OUTER JOIN vt1 ON ((((((v0.c0)OR(0.008466558780160782)))OR(rt1.c0))) IS TRUE) WHERE ((NOT (CASE (((rt1.c0))<=((rt0.c1)))  WHEN (((1.227509946E9)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))) THEN ((rt1.c2)AND(rt0.c2)) END))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt1.c1, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0, rt1 FULL OUTER JOIN vt1 ON ((((((v0.c0)OR(0.008466558780160782)))OR(rt1.c0))) IS TRUE) WHERE (((CASE (((rt1.c0))<=((rt0.c1)))  WHEN (((1.227509946E9)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))) THEN ((rt1.c2)AND(rt0.c2)) END) ISNULL));
SELECT ALL rt1.c2, rt0.c1, rt1.c1, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0, rt1 FULL OUTER JOIN vt1 ON ((((((v0.c0)OR(0.008466558780160782)))OR(rt1.c0))) IS TRUE);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (HEX(DISTINCT (+ (0.7913770553028113)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (HEX(DISTINCT (+ (0.7913770553028113)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((HEX(DISTINCT (+ (0.7913770553028113)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) IS TRUE) GROUP BY v0.c0, rt1.c1, rt1.c0;
SELECT ALL v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) IS TRUE) WHERE (COALESCE(DISTINCT CAST(rt1.c1 AS TEXT), (v0.c0 IN ()), ((rt1.c1)=(rt1.c2)), ((((rt1.c2)OR(rt1.c2)))AND(v0.c0)))) GROUP BY v0.c0, rt1.c1, rt1.c0 UNION SELECT v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) IS TRUE) WHERE ((NOT (COALESCE(DISTINCT CAST(rt1.c1 AS TEXT), (v0.c0 IN ()), ((rt1.c1)=(rt1.c2)), ((((rt1.c2)OR(rt1.c2)))AND(v0.c0)))))) GROUP BY v0.c0, rt1.c1, rt1.c0 UNION SELECT v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) IS TRUE) WHERE (((COALESCE(DISTINCT CAST(rt1.c1 AS TEXT), (v0.c0 IN ()), ((rt1.c1)=(rt1.c2)), ((((rt1.c2)OR(rt1.c2)))AND(v0.c0)))) ISNULL)) GROUP BY v0.c0, rt1.c1, rt1.c0;
SELECT v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM) IS TRUE) GROUP BY v0.c0, rt1.c1, rt1.c0;
SELECT rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1;
SELECT rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1 HAVING 0.9488221330427984 UNION ALL SELECT ALL rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0 NOT INDEXED, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1 HAVING (NOT (0.9488221330427984)) UNION ALL SELECT rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1 HAVING ((0.9488221330427984) ISNULL);
SELECT rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1;
SELECT rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1 HAVING 0.9488221330427984 UNION ALL SELECT ALL rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0 NOT INDEXED, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1 HAVING (NOT (0.9488221330427984)) UNION ALL SELECT rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1 HAVING ((0.9488221330427984) ISNULL);
SELECT rt0.c0, rt1.c2, rt0.c1 FROM rt1, v0, rt0, vt1 GROUP BY rt0.c0, rt1.c2, rt0.c1;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((+ (rt0.c0))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0;
SELECT ALL rt1.c2, rt0.c0 FROM rt0, rt1 WHERE (((+ (rt0.c1)) IN (((((rt1.c2)AND(rt0.c1)))OR(rt0.c1))))) GROUP BY rt1.c2, rt0.c0 UNION SELECT ALL rt1.c2, rt0.c0 FROM rt0, rt1 NOT INDEXED WHERE ((NOT (((+ (rt0.c1)) IN (((((rt1.c2)AND(rt0.c1)))OR(rt0.c1))))))) GROUP BY rt1.c2, rt0.c0 UNION SELECT rt1.c2, rt0.c0 FROM rt0, rt1 WHERE (((((+ (rt0.c1)) IN (((((rt1.c2)AND(rt0.c1)))OR(rt0.c1))))) ISNULL)) GROUP BY rt1.c2, rt0.c0;
SELECT ALL rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0;
SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1 FROM vt1, v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CASE NULLIF(DISTINCT rt1.c1, rt1.c2)  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) ELSE ((rt1.c2)*(rt1.c2)) END) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CASE NULLIF(DISTINCT rt1.c1, rt1.c2)  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) ELSE ((rt1.c2)*(rt1.c2)) END))) UNION ALL SELECT * FROM rt1 WHERE (((CASE NULLIF(DISTINCT rt1.c1, rt1.c2)  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) ELSE ((rt1.c2)*(rt1.c2)) END) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, vt1, v0, rt0;
SELECT DISTINCT * FROM rt1, vt1, v0, rt0 WHERE (((LIKELY(rt1.c2))+((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt1, vt1, v0, rt0 WHERE ((NOT (((LIKELY(rt1.c2))+((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt1, vt1, v0, rt0 WHERE (((((LIKELY(rt1.c2))+((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0 NOT INDEXED, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 HAVING (((vt1.c0))!=(((~ (COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 HAVING (NOT ((((vt1.c0))!=(((~ (COUNT(*)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 HAVING (((((vt1.c0))<>(((~ (COUNT(*))))))) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0 NOT INDEXED, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 HAVING (((vt1.c0))!=(((~ (COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 HAVING (NOT ((((vt1.c0))!=(((~ (COUNT(*)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 HAVING (((((vt1.c0))<>(((~ (COUNT(*))))))) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0 FROM v0, rt0, rt1 CROSS JOIN vt1 ON ((CAST(0.3618293620313876 AS REAL))*(((rt0.c1)&(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt1.c2, rt1.c1, rt0.c0;
SELECT ALL rt1.c1, rt0.c1 FROM v0, vt1, rt1, rt0;
SELECT ALL rt1.c1, rt0.c1 FROM v0, vt1, rt1, rt0 WHERE ('' COLLATE RTRIM) UNION ALL SELECT rt1.c1, rt0.c1 FROM v0, vt1, rt1, rt0 WHERE ((NOT ('' COLLATE RTRIM))) UNION ALL SELECT rt1.c1, rt0.c1 FROM v0, vt1, rt1, rt0 WHERE ((('' COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c1, rt0.c1 FROM v0, vt1, rt1, rt0;
SELECT DISTINCT * FROM vt1, rt1, v0;
SELECT DISTINCT * FROM vt1, rt1, v0 WHERE (x'') UNION SELECT DISTINCT * FROM vt1, rt1, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1, rt1, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1, rt1, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) BETWEEN ((('s2!') BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN ((('s2!') BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN ((('s2!') BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING SUM(COUNT(*)) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1, v0, rt1;
SELECT ALL * FROM vt1, v0, rt1 WHERE (rt1.c2) UNION ALL SELECT ALL * FROM vt1, v0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT * FROM vt1, v0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT ALL * FROM vt1, v0, rt1;
SELECT DISTINCT * FROM vt1, rt0, rt1, v0;
SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE (((vt1.c0 IN ('-1701220268')) IN ())) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE ((NOT (((vt1.c0 IN ('-1701220268')) IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, v0 WHERE (((((vt1.c0 IN ('-1701220268')) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, rt1, v0;
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0;
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0 WHERE (((COALESCE(vt1.c0, v0.c0)) NOTNULL)) GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0 WHERE ((NOT (((COALESCE(vt1.c0, v0.c0)) NOTNULL)))) GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0 WHERE (((((COALESCE(vt1.c0, v0.c0)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0;
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0 FROM rt1, v0, vt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING MIN((((rt0.c0))<=((COUNT(AVG(MAX(v0.c0))))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT (MIN((((rt0.c0))<=((COUNT(AVG(MAX(v0.c0))))))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((MIN((((rt0.c0))<=((COUNT(AVG(MAX(v0.c0)))))))) ISNULL);
SELECT ALL rt0.c1, vt1.c0, rt1.c1, rt0.c2, rt0.c0, rt1.c0, v0.c0 FROM rt1 CROSS JOIN vt1 ON CASE ((((vt1.c0)AND(rt0.c0)))AND(0.7190596579878623))  WHEN ((v0.c0)!=(rt0.c0)) THEN HEX(rt1.c2) END RIGHT OUTER JOIN rt0 ON x'' FULL OUTER JOIN v0 ON (((((((vt1.c0)AND(rt0.c1)))OR(v0.c0))))>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS BLOB) AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS BLOB) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt1, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt1, vt1 GROUP BY v0.c0 HAVING AVG(GROUP_CONCAT(COUNT(rt1.c2))) UNION ALL SELECT v0.c0 FROM v0, rt1, vt1 GROUP BY v0.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(rt1.c2))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt1, vt1 GROUP BY v0.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(rt1.c2)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (LOWER(CAST(rt0.c1 AS INTEGER))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (LOWER(CAST(rt0.c1 AS INTEGER))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LOWER(CAST(rt0.c1 AS INTEGER))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((+ (rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((+ (rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((+ (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((v0.c0 IN ()) AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST((v0.c0 IN ()) AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING SUM((TOTAL(rt1.c0) IN (rt1.c2))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (SUM((TOTAL(rt1.c0) IN (rt1.c2))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((SUM((TOTAL(rt1.c0) IN (rt1.c2)))) ISNULL);
SELECT ALL MAX((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL)) FROM vt1, rt0;
SELECT * FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)<<(rt0.c2)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(-725816813)))))AND(((v0.c0)GLOB(rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT * FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)<<(rt0.c2)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(-725816813)))))AND(((v0.c0)GLOB(rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (CASE ((v0.c0) BETWEEN ('ꪚq') AND (rt0.c2))  WHEN ((rt0.c2)>=(rt0.c1)) THEN ((NULL) BETWEEN ('1449831340') AND ('0.9870954593933752')) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) WHEN ((((v0.c0)AND(rt0.c2)))OR(rt0.c0)) THEN 0Xffffffff9d45746a END) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)<<(rt0.c2)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(-725816813)))))AND(((v0.c0)GLOB(rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((NOT (CASE ((v0.c0) BETWEEN ('ꪚq') AND (rt0.c2))  WHEN ((rt0.c2)>=(rt0.c1)) THEN ((NULL) BETWEEN ('1449831340') AND ('0.9870954593933752')) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) WHEN ((((v0.c0)AND(rt0.c2)))OR(rt0.c0)) THEN 0Xffffffff9d45746a END))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)<<(rt0.c2)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(-725816813)))))AND(((v0.c0)GLOB(rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((CASE ((v0.c0) BETWEEN ('ꪚq') AND (rt0.c2))  WHEN ((rt0.c2)>=(rt0.c1)) THEN ((NULL) BETWEEN ('1449831340') AND ('0.9870954593933752')) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) WHEN ((((v0.c0)AND(rt0.c2)))OR(rt0.c0)) THEN 0Xffffffff9d45746a END) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)<<(rt0.c2)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(-725816813)))))AND(((v0.c0)GLOB(rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c1)GLOB(rt0.c1))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN ((rt0.c2)>>(rt0.c1)) WHEN (((rt0.c2))>((rt0.c0))) THEN x'' WHEN 0.6321606771621958 THEN (((('ꪚq')AND(rt0.c1)))OR(rt0.c2)) END) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)GLOB(rt0.c1))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN ((rt0.c2)>>(rt0.c1)) WHEN (((rt0.c2))>((rt0.c0))) THEN x'' WHEN 0.6321606771621958 THEN (((('ꪚq')AND(rt0.c1)))OR(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c1)GLOB(rt0.c1))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN ((rt0.c2)>>(rt0.c1)) WHEN (((rt0.c2))>((rt0.c0))) THEN x'' WHEN 0.6321606771621958 THEN (((('ꪚq')AND(rt0.c1)))OR(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2, vt1.c0, rt1.c2 FROM rt0 LEFT OUTER JOIN vt1 ON LIKELY(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c0 END) CROSS JOIN v0 ON NULL FULL OUTER JOIN rt1 ON ((((((((rt1.c1)OR(rt0.c2)))OR(rt1.c2)))AND(NULLIF(rt0.c2, v0.c0))))OR((v0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0, rt1.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(GROUP_CONCAT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL MIN((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((vt1.c0)<<(v0.c0))))) FROM vt1, v0, rt0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN '726810235' END WHEN LAST_INSERT_ROWID() THEN ((v0.c0)OR(v0.c0)) WHEN ((v0.c0)+(v0.c0)) THEN '-960271556' WHEN ((((x'd60a')OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOTNULL) WHEN NULL THEN NULL END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN '726810235' END WHEN LAST_INSERT_ROWID() THEN ((v0.c0)OR(v0.c0)) WHEN ((v0.c0)+(v0.c0)) THEN '-960271556' WHEN ((((x'd60a')OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOTNULL) WHEN NULL THEN NULL END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN '726810235' END WHEN LAST_INSERT_ROWID() THEN ((v0.c0)OR(v0.c0)) WHEN ((v0.c0)+(v0.c0)) THEN '-960271556' WHEN ((((x'd60a')OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOTNULL) WHEN NULL THEN NULL END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt1 ON CAST((v0.c0 IN ()) AS BLOB);
SELECT DISTINCT rt0.c2, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt1 ON CAST((v0.c0 IN ()) AS BLOB) WHERE (((((CAST(rt0.c2 AS TEXT))AND((rt0.c1 IN (rt0.c1)))))AND(((rt0.c2)=(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt1 ON CAST((v0.c0 IN ()) AS BLOB) WHERE ((NOT (((((CAST(rt0.c2 AS TEXT))AND((rt0.c1 IN (rt0.c1)))))AND(((rt0.c2)=(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt1 ON CAST((v0.c0 IN ()) AS BLOB) WHERE (((((((CAST(rt0.c2 AS TEXT))AND((rt0.c1 IN (rt0.c1)))))AND(((rt0.c2)=(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, v0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt1 ON CAST((v0.c0 IN ()) AS BLOB);
SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((~ (((rt0.c1) NOT NULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((~ (((rt0.c1) NOT NULL)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((~ (((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT rt1.c0, v0.c0, vt1.c0, rt1.c2 FROM rt1, vt1, v0 GROUP BY rt1.c0, v0.c0, vt1.c0, rt1.c2;
SELECT ALL rt1.c0, v0.c0, vt1.c0, rt1.c2 FROM rt1, vt1, v0 GROUP BY rt1.c0, v0.c0, vt1.c0, rt1.c2 HAVING CAST(AVG(COUNT(COUNT(*))) AS TEXT) UNION ALL SELECT ALL rt1.c0, v0.c0, vt1.c0, rt1.c2 FROM rt1, vt1, v0 GROUP BY rt1.c0, v0.c0, vt1.c0, rt1.c2 HAVING (NOT (CAST(AVG(COUNT(COUNT(*))) AS TEXT))) UNION ALL SELECT rt1.c0, v0.c0, vt1.c0, rt1.c2 FROM rt1, vt1, v0 GROUP BY rt1.c0, v0.c0, vt1.c0, rt1.c2 HAVING ((CAST(AVG(COUNT(COUNT(*))) AS TEXT)) ISNULL);
SELECT SUM(CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1))) THEN (((0.9133931265158544)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) ELSE (- (rt0.c2)) END) FROM rt0, rt1, v0 ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c1)))IS NOT(((rt0.c1)-(rt0.c0)))) ASC, ((CASE rt0.c2  WHEN rt0.c1 THEN rt1.c1 END)LIKE(CAST(rt0.c2 AS TEXT))) DESC;
SELECT ALL rt1.c1, rt1.c2, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, v0, vt1;
SELECT rt1.c1, rt1.c2, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE ((((((rt1.c2, '-668139430', rt0.c0))>=((v0.c0, NULL, vt1.c0)))) BETWEEN (((rt0.c1) NOTNULL)) AND (CASE vt1.c0  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE ((NOT ((((((rt1.c2, '-668139430', rt0.c0))>=((v0.c0, NULL, vt1.c0)))) BETWEEN (((rt0.c1) NOTNULL)) AND (CASE vt1.c0  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END))))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE ((((((((rt1.c2, '-668139430', rt0.c0))>=((v0.c0, NULL, vt1.c0)))) BETWEEN (((rt0.c1) NOTNULL)) AND (CASE vt1.c0  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT ALL rt1.c1, rt1.c2, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, v0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (json_array_length(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(x'487a90ee')))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (json_array_length(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(x'487a90ee')))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((json_array_length(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(x'487a90ee')))) ISNULL));
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (NULL) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (+ ((((COUNT(*), x'eaf81900', rt1.c1)) NOT BETWEEN ((TOTAL('-1672624544'), AVG(rt1.c2), SUM(rt0.c0))) AND ((rt1.c0, AVG(vt1.c0), COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT ((+ ((((COUNT(*), x'eaf81900', rt1.c1)) NOT BETWEEN ((TOTAL('-1672624544'), AVG(rt1.c2), SUM(rt0.c0))) AND ((rt1.c0, AVG(vt1.c0), COUNT(*)))))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (((+ ((((COUNT(*), x'eaf81900', rt1.c1)) NOT BETWEEN ((TOTAL('-1672624544'), AVG(rt1.c2), SUM(rt0.c0))) AND ((rt1.c0, AVG(vt1.c0), COUNT(*))))))) ISNULL);
SELECT rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (+ ((((COUNT(*), x'eaf81900', rt1.c1)) NOT BETWEEN ((TOTAL('-1672624544'), AVG(rt1.c2), SUM(rt0.c0))) AND ((rt1.c0, AVG(vt1.c0), COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT ((+ ((((COUNT(*), x'eaf81900', rt1.c1)) NOT BETWEEN ((TOTAL('-1672624544'), AVG(rt1.c2), SUM(rt0.c0))) AND ((rt1.c0, AVG(vt1.c0), COUNT(*)))))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (((+ ((((COUNT(*), x'eaf81900', rt1.c1)) NOT BETWEEN ((TOTAL('-1672624544'), AVG(rt1.c2), SUM(rt0.c0))) AND ((rt1.c0, AVG(vt1.c0), COUNT(*))))))) ISNULL);
SELECT rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT v0.c0 FROM v0, rt1, rt0;
SELECT ALL v0.c0 FROM v0, rt1, rt0 WHERE ((((((rt0.c0 IN ()))AND(NULLIF(DISTINCT 0X43fc8835, v0.c0))))AND((- (rt0.c1))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt1, rt0 WHERE ((NOT ((((((rt0.c0 IN ()))AND(NULLIF(DISTINCT 0x43fc8835, v0.c0))))AND((- (rt0.c1))))))) UNION ALL SELECT v0.c0 FROM v0, rt1, rt0 WHERE ((((((((rt0.c0 IN ()))AND(NULLIF(DISTINCT 0X43fc8835, v0.c0))))AND((- (rt0.c1))))) ISNULL));
SELECT v0.c0 FROM v0, rt1, rt0;
SELECT DISTINCT v0.c0, vt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM vt1, v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT 'LNb#T喥]H') CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (v0.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN x'' THEN CASE rt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE rt0.c1 END WHEN CAST(rt1.c1 AS TEXT) THEN CAST(rt1.c2 AS TEXT) ELSE ((((rt0.c1)AND(rt1.c2)))OR(x'ca0b')) END;
SELECT DISTINCT v0.c0, vt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM vt1, v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT 'LNb#T喥]H') CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (v0.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN x'' THEN CASE rt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE rt0.c1 END WHEN CAST(rt1.c1 AS TEXT) THEN CAST(rt1.c2 AS TEXT) ELSE ((((rt0.c1)AND(rt1.c2)))OR(x'ca0b')) END WHERE (CAST(x'' AS NUMERIC)) UNION SELECT DISTINCT v0.c0, vt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM vt1, v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT 'LNb#T喥]H') CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (v0.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN x'' THEN CASE rt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE rt0.c1 END WHEN CAST(rt1.c1 AS TEXT) THEN CAST(rt1.c2 AS TEXT) ELSE ((((rt0.c1)AND(rt1.c2)))OR(x'ca0b')) END WHERE ((NOT (CAST(x'' AS NUMERIC)))) UNION SELECT DISTINCT v0.c0, vt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM vt1, v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT 'LNb#T喥]H') CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (v0.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN x'' THEN CASE rt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE rt0.c1 END WHEN CAST(rt1.c1 AS TEXT) THEN CAST(rt1.c2 AS TEXT) ELSE ((((rt0.c1)AND(rt1.c2)))OR(x'ca0b')) END WHERE (((CAST(x'' AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM vt1, v0 LEFT OUTER JOIN rt1 ON TRIM(DISTINCT 'LNb#T喥]H') CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (v0.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN x'' THEN CASE rt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE rt0.c1 END WHEN CAST(rt1.c1 AS TEXT) THEN CAST(rt1.c2 AS TEXT) ELSE ((((rt0.c1)AND(rt1.c2)))OR(x'ca0b')) END;
SELECT rt0.c0, rt1.c0, vt1.c0, rt1.c2 FROM v0, vt1, rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) NOTNULL) GROUP BY rt0.c0, rt1.c0, vt1.c0, rt1.c2;
SELECT ALL rt0.c0, rt1.c0, vt1.c0, rt1.c2 FROM v0, vt1, rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) NOTNULL) WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END)OR(((v0.c0)<>(rt0.c1)))))AND(((vt1.c0)OR(rt1.c2))))) GROUP BY rt0.c0, rt1.c0, vt1.c0, rt1.c2 UNION SELECT ALL rt0.c0, rt1.c0, vt1.c0, rt1.c2 FROM v0, vt1, rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) NOTNULL) WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END)OR(((v0.c0)!=(rt0.c1)))))AND(((vt1.c0)OR(rt1.c2))))))) GROUP BY rt0.c0, rt1.c0, vt1.c0, rt1.c2 UNION SELECT rt0.c0, rt1.c0, vt1.c0, rt1.c2 FROM v0, vt1, rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) NOTNULL) WHERE (((((((CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c0 END)OR(((v0.c0)!=(rt0.c1)))))AND(((vt1.c0)OR(rt1.c2))))) ISNULL)) GROUP BY rt0.c0, rt1.c0, vt1.c0, rt1.c2;
SELECT rt0.c0, rt1.c0, vt1.c0, rt1.c2 FROM v0, vt1, rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) NOTNULL) GROUP BY rt0.c0, rt1.c0, vt1.c0, rt1.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (COUNT(*) IN ((((SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((COUNT(*) IN ((((SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((GROUP_CONCAT(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((COUNT(*) IN ((((SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((GROUP_CONCAT(vt1.c0))))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((~ (CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (vt1.c0) AND (CAST(NULL AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOT BETWEEN (vt1.c0) AND (CAST(NULL AS TEXT)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) NOT BETWEEN (vt1.c0) AND (CAST(NULL AS TEXT)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))<>(((((rt1.c0)AND(rt1.c1)))OR(NULL))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))<>(((((rt1.c0)AND(rt1.c1)))OR(NULL))))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))<>(((((rt1.c0)AND(rt1.c1)))OR(NULL))))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c1 FROM rt0 INNER JOIN rt1 ON ((((((((((rt1.c1)LIKE(rt0.c2)))OR(CASE WHEN rt1.c2 THEN rt0.c2 END)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt0.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c0) NOT NULL))) GROUP BY rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c1;
SELECT rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c1 FROM rt0 INNER JOIN rt1 ON ((((((((((rt1.c1)LIKE(rt0.c2)))OR(CASE WHEN rt1.c2 THEN rt0.c2 END)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt0.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c0) NOT NULL))) GROUP BY rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c1 HAVING COUNT(GROUP_CONCAT(rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c1 FROM rt0 INNER JOIN rt1 ON ((((((((((rt1.c1)LIKE(rt0.c2)))OR(CASE WHEN rt1.c2 THEN rt0.c2 END)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt0.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c0) NOT NULL))) GROUP BY rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c1 FROM rt0 INNER JOIN rt1 ON ((((((((((rt1.c1)LIKE(rt0.c2)))OR(CASE WHEN rt1.c2 THEN rt0.c2 END)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt0.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c0) NOT NULL))) GROUP BY rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c1 HAVING ((COUNT(GROUP_CONCAT(rt1.c1))) ISNULL);
SELECT * FROM rt1, vt1 CROSS JOIN v0 ON ((IFNULL(rt0.c2, v0.c0)) IS FALSE) CROSS JOIN rt0 ON ((((vt1.c0)+(rt1.c0)))>(((v0.c0)<=(rt1.c1))));
SELECT ALL * FROM rt1, vt1 CROSS JOIN v0 ON ((IFNULL(rt0.c2, v0.c0)) IS FALSE) CROSS JOIN rt0 ON ((((vt1.c0)+(rt1.c0)))>(((v0.c0)<=(rt1.c1)))) WHERE (((((((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)AND(((v0.c0) NOT BETWEEN (rt1.c1) AND (0.1779647998872742)))))AND((- (rt1.c1)))))AND((NOT (rt0.c0)))))AND(((((v0.c0)AND(vt1.c0)))OR(rt1.c1))))) UNION ALL SELECT ALL * FROM rt1, vt1 CROSS JOIN v0 ON ((IFNULL(rt0.c2, v0.c0)) IS FALSE) CROSS JOIN rt0 ON ((((vt1.c0)+(rt1.c0)))>(((v0.c0)<=(rt1.c1)))) WHERE ((NOT (((((((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)AND(((v0.c0) NOT BETWEEN (rt1.c1) AND (0.1779647998872742)))))AND((- (rt1.c1)))))AND((NOT (rt0.c0)))))AND(((((v0.c0)AND(vt1.c0)))OR(rt1.c1))))))) UNION ALL SELECT * FROM rt1, vt1 CROSS JOIN v0 ON ((IFNULL(rt0.c2, v0.c0)) IS FALSE) CROSS JOIN rt0 ON ((((vt1.c0)+(rt1.c0)))>(((v0.c0)<=(rt1.c1)))) WHERE (((((((((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)AND(((v0.c0) NOT BETWEEN (rt1.c1) AND (0.1779647998872742)))))AND((- (rt1.c1)))))AND((NOT (rt0.c0)))))AND(((((v0.c0)AND(vt1.c0)))OR(rt1.c1))))) ISNULL));
SELECT * FROM rt1, vt1 CROSS JOIN v0 ON ((IFNULL(rt0.c2, v0.c0)) IS FALSE) CROSS JOIN rt0 ON ((((vt1.c0)+(rt1.c0)))>(((v0.c0)<=(rt1.c1))));
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 NOT INDEXED WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN ((((vt1.c0)AND(rt1.c1)))AND(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2) NOT BETWEEN (x'') AND (0.009042203957226103)) END) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (CASE CAST(rt1.c2 AS BLOB)  WHEN ((((vt1.c0)AND(rt1.c1)))AND(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2) NOT BETWEEN (x'') AND (0.009042203957226103)) END))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((CASE CAST(rt1.c2 AS BLOB)  WHEN ((((vt1.c0)AND(rt1.c1)))AND(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2) NOT BETWEEN (x'') AND (0.009042203957226103)) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL vt1.c0, rt0.c0, rt1.c1 FROM rt0, vt1, v0, rt1 GROUP BY vt1.c0, rt0.c0, rt1.c1;
SELECT ALL vt1.c0, rt0.c0, rt1.c1 FROM rt0, vt1, v0, rt1 WHERE (((((((((((rt1.c1)LIKE(vt1.c0)))OR((rt1.c2 IN (rt1.c2)))))AND(rt1.c0)))AND(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS TEXT)))) GROUP BY vt1.c0, rt0.c0, rt1.c1 UNION SELECT vt1.c0, rt0.c0, rt1.c1 FROM rt0, vt1, v0, rt1 WHERE ((NOT (((((((((((rt1.c1)LIKE(vt1.c0)))OR((rt1.c2 IN (rt1.c2)))))AND(rt1.c0)))AND(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS TEXT)))))) GROUP BY vt1.c0, rt0.c0, rt1.c1 UNION SELECT vt1.c0, rt0.c0, rt1.c1 FROM rt0, vt1, v0, rt1 WHERE (((((((((((((rt1.c1)LIKE(vt1.c0)))OR((rt1.c2 IN (rt1.c2)))))AND(rt1.c0)))AND(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt1.c1;
SELECT ALL vt1.c0, rt0.c0, rt1.c1 FROM rt0, vt1, v0, rt1 GROUP BY vt1.c0, rt0.c0, rt1.c1;
SELECT ALL rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 HAVING MIN(LIKELIHOOD(DISTINCT rt1.c0, 0.6454632728706049)) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 HAVING (NOT (MIN(LIKELIHOOD(DISTINCT rt1.c0, 0.6454632728706049)))) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 HAVING ((MIN(LIKELIHOOD(DISTINCT rt1.c0, 0.6454632728706049))) ISNULL);
SELECT ALL rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 HAVING MIN(LIKELIHOOD(DISTINCT rt1.c0, 0.6454632728706049)) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 HAVING (NOT (MIN(LIKELIHOOD(DISTINCT rt1.c0, 0.6454632728706049)))) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 HAVING ((MIN(LIKELIHOOD(DISTINCT rt1.c0, 0.6454632728706049))) ISNULL);
SELECT ALL rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL SUM(rt0.c2) FROM rt0, v0, rt1;
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0)) WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0)) WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0)) WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING MIN(TOTAL(MAX(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING (NOT (MIN(TOTAL(MAX(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING ((MIN(TOTAL(MAX(rt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 NATURAL JOIN v0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(vt1.c0)) AS NUMERIC)) UNION ALL SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c0)))OR(vt1.c0)) AS NUMERIC)))) UNION ALL SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE (((CAST(((((v0.c0)OR(v0.c0)))OR(vt1.c0)) AS NUMERIC)) ISNULL));
SELECT vt1.c0 FROM vt1 NATURAL JOIN v0;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((((rt1.c2 IN ()))%(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c2 IN ()))%(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2))))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((((((rt1.c2 IN ()))%(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT rt0.c2 FROM rt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt1, rt0 WHERE ((((((rt1.c1)/(rt1.c1))))>((CAST(rt0.c1 AS BLOB))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt1, rt0 WHERE ((NOT ((((((rt1.c1)/(rt1.c1))))>((CAST(rt0.c1 AS BLOB))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt1, rt0 WHERE ((((((((rt1.c1)/(rt1.c1))))>((CAST(rt0.c1 AS BLOB))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt1.c2, rt0.c0, vt1.c0 FROM v0, vt1, rt1, rt0 GROUP BY rt1.c2, rt0.c0, vt1.c0;
SELECT rt1.c2, rt0.c0, vt1.c0 FROM v0, vt1, rt1, rt0 GROUP BY rt1.c2, rt0.c0, vt1.c0 HAVING NULLIF(MAX(TOTAL(rt1.c2)), COUNT(*)) UNION ALL SELECT rt1.c2, rt0.c0, vt1.c0 FROM v0, vt1, rt1, rt0 GROUP BY rt1.c2, rt0.c0, vt1.c0 HAVING (NOT (NULLIF(MAX(TOTAL(rt1.c2)), COUNT(*)))) UNION ALL SELECT rt1.c2, rt0.c0, vt1.c0 FROM v0, vt1, rt1, rt0 GROUP BY rt1.c2, rt0.c0, vt1.c0 HAVING ((NULLIF(MAX(TOTAL(rt1.c2)), COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0 WHERE ((NOT ((NOT (rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0 WHERE ((NOT ((NOT ((NOT (rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0 WHERE ((((NOT ((NOT (rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0;
SELECT rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1 FROM rt0, v0, vt1, rt1 GROUP BY rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1;
SELECT rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1 FROM rt0, v0, vt1 NOT INDEXED, rt1 WHERE (NULL) GROUP BY rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1 UNION SELECT rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1 FROM rt0, v0, vt1, rt1 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1 UNION SELECT rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1 FROM rt0, v0, vt1, rt1 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1;
SELECT rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1 FROM rt0, v0, vt1, rt1 GROUP BY rt0.c1, rt1.c2, rt1.c0, vt1.c0, rt0.c0, v0.c0, rt1.c1;
SELECT rt1.c2, rt0.c0, rt1.c1, rt0.c1, v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, vt1 FULL OUTER JOIN rt1 ON ((((rt1.c1)==(vt1.c0)))%(DATE(rt0.c0, rt0.c1, -1147581124))) GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c1, v0.c0, rt0.c2, rt1.c0, vt1.c0;
SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c1, v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, vt1 FULL OUTER JOIN rt1 ON ((((rt1.c1)=(vt1.c0)))%(DATE(rt0.c0, rt0.c1, -1147581124))) GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c1, v0.c0, rt0.c2, rt1.c0, vt1.c0 HAVING COUNT(((AVG(AVG(GROUP_CONCAT(v0.c0))))<<(''))) UNION ALL SELECT rt1.c2, rt0.c0, rt1.c1, rt0.c1, v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, vt1 FULL OUTER JOIN rt1 ON ((((rt1.c1)=(vt1.c0)))%(DATE(rt0.c0, rt0.c1, -1147581124))) GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c1, v0.c0, rt0.c2, rt1.c0, vt1.c0 HAVING (NOT (COUNT(((AVG(AVG(GROUP_CONCAT(v0.c0))))<<(''))))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c1, v0.c0, rt0.c2, rt1.c0, vt1.c0 FROM v0, rt0, vt1 FULL OUTER JOIN rt1 ON ((((rt1.c1)==(vt1.c0)))%(DATE(rt0.c0, rt0.c1, -1147581124))) GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c1, v0.c0, rt0.c2, rt1.c0, vt1.c0 HAVING ((COUNT(((AVG(AVG(GROUP_CONCAT(v0.c0))))<<('')))) ISNULL);
SELECT ALL * FROM vt1, rt0, v0, rt1;
SELECT * FROM vt1, rt0, v0, rt1 WHERE ((((((rt1.c2 IN ()))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c2 END)))AND((vt1.c0 IN (rt0.c1, rt1.c0))))) UNION ALL SELECT * FROM vt1, rt0, v0, rt1 WHERE ((NOT ((((((rt1.c2 IN ()))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c2 END)))AND((vt1.c0 IN (rt0.c1, rt1.c0))))))) UNION ALL SELECT * FROM vt1, rt0, v0, rt1 WHERE ((((((((rt1.c2 IN ()))OR(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c2 END)))AND((vt1.c0 IN (rt0.c1, rt1.c0))))) ISNULL));
SELECT ALL * FROM vt1, rt0, v0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))==(rt1.c0))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))=(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))==(rt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ('dkLG26[5d') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('dkLG26[5d'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((('dkLG26[5d') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((+ ('1536662813')))OR(TOTAL(rt0.c0))))AND(((rt0.c2)+(MAX(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((((+ ('1536662813')))OR(TOTAL(rt0.c0))))AND(((rt0.c2)+(MAX(GROUP_CONCAT(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((((+ ('1536662813')))OR(TOTAL(rt0.c0))))AND(((rt0.c2)+(MAX(GROUP_CONCAT(rt0.c1))))))) ISNULL);
SELECT ALL vt1.c0, rt1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((v0.c0)/(rt1.c2)))AND((((rt0.c0))==((rt0.c2))))) INNER JOIN rt1 ON ((((((rt1.c0) IS FALSE))AND(0.06821831555713265)))OR(CASE x'bf42'  WHEN 0.15358007264102758 THEN rt0.c1 WHEN rt1.c1 THEN vt1.c0 WHEN v0.c0 THEN 0xffffffffbefb2d9d END)) LEFT OUTER JOIN v0 ON CASE ((rt0.c0)=(rt1.c1))  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN CAST('<L' AS BLOB) ELSE ((v0.c0) ISNULL) END;
SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON LIKELY(CASE rt0.c0  WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c1 END);
SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON LIKELY(CASE rt0.c0  WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c1 END) WHERE ('2Pl)7' COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON LIKELY(CASE rt0.c0  WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c1 END) WHERE ((NOT ('2Pl)7' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON LIKELY(CASE rt0.c0  WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c1 END) WHERE ((('2Pl)7' COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt1 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON LIKELY(CASE rt0.c0  WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c1 END);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((((v0.c0)) BETWEEN (((((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)-(v0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE ((NOT ((((v0.c0)) BETWEEN (((((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)-(v0.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE ((((((v0.c0)) BETWEEN (((((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)-(v0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt1.c1, rt1.c2 FROM vt1 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN ((rt1.c0) NOT NULL) END GROUP BY vt1.c0, rt1.c1, rt1.c2;
SELECT vt1.c0, rt1.c1, rt1.c2 FROM vt1 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN ((rt1.c0) NOT NULL) END GROUP BY vt1.c0, rt1.c1, rt1.c2 HAVING (((vt1.c0)-(SUM(MIN(MAX(COUNT(rt1.c0)))))) IN ((+ (rt1.c2)), rt1.c1 COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM vt1 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN ((rt1.c0) NOT NULL) END GROUP BY vt1.c0, rt1.c1, rt1.c2 HAVING (NOT ((((vt1.c0)-(SUM(MIN(MAX(COUNT(rt1.c0)))))) IN ((+ (rt1.c2)), rt1.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM vt1 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN ((rt1.c0) NOT NULL) END GROUP BY vt1.c0, rt1.c1, rt1.c2 HAVING (((((vt1.c0)-(SUM(MIN(MAX(COUNT(rt1.c0)))))) IN ((+ (rt1.c2)), rt1.c1 COLLATE RTRIM))) ISNULL);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN rt0 ON (NOT (rt0.c1));
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN rt0 ON (NOT (rt0.c1)) WHERE (x'76d8') UNION ALL SELECT * FROM rt1, vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN rt0 ON (NOT (rt0.c1)) WHERE ((NOT (x'76d8'))) UNION ALL SELECT ALL * FROM rt1, vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN rt0 ON (NOT (rt0.c1)) WHERE (((x'76d8') ISNULL));
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN rt0 ON (NOT (rt0.c1));
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, vt1.c0, v0.c0, rt1.c1, rt0.c2 FROM rt1, rt0, v0, vt1;
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, vt1.c0, v0.c0, rt1.c1, rt0.c2 FROM rt1, rt0, v0, vt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, vt1.c0, v0.c0, rt1.c1, rt0.c2 FROM rt1, rt0, v0, vt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, vt1.c0, v0.c0, rt1.c1, rt0.c2 FROM rt1, rt0, v0, vt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, vt1.c0, v0.c0, rt1.c1, rt0.c2 FROM rt1, rt0, v0, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('-2135788294') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('-2135788294'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('-2135788294') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING SUM(COUNT(GROUP_CONCAT(rt1.c2))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (SUM(COUNT(GROUP_CONCAT(rt1.c2))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((SUM(COUNT(GROUP_CONCAT(rt1.c2)))) ISNULL);
SELECT ALL rt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, rt1;
SELECT ALL rt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, rt1 WHERE (((-1.796387931E9) IS FALSE)) UNION ALL SELECT rt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, rt1 WHERE ((NOT (((-1.796387931E9) IS FALSE)))) UNION ALL SELECT ALL rt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, rt1 WHERE (((((-1.796387931E9) IS FALSE)) ISNULL));
SELECT ALL rt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, rt1;
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, vt1.c0 FROM rt1, rt0, vt1, v0;
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, vt1.c0 FROM rt1, rt0, vt1, v0 WHERE ((v0.c0 IN ())) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, vt1.c0 FROM rt1, rt0, vt1, v0 WHERE ((NOT ((v0.c0 IN ())))) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, vt1.c0 FROM rt1, rt0, vt1, v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, vt1.c0 FROM rt1, rt0, vt1, v0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (CAST(((rt1.c0)%(rt1.c2)) AS NUMERIC)) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (CAST(((rt1.c0)%(rt1.c2)) AS NUMERIC)))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 NOT INDEXED WHERE (((CAST(((rt1.c0)%(rt1.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((0.6894277695833531)GLOB(rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((0.6894277695833531)GLOB(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((0.6894277695833531)GLOB(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN -9.82093394E8 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN -9.82093394E8 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN -9.82093394E8 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) GROUP BY v0.c0, rt0.c0 UNION SELECT v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())))) GROUP BY v0.c0, rt0.c0 UNION SELECT v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) ISNULL)) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(((((rt0.c0)AND(COUNT(*))))OR(MIN(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(((((rt0.c0)AND(COUNT(*))))OR(MIN(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(((((rt0.c0)AND(COUNT(*))))OR(MIN(rt0.c1))))) ISNULL);
SELECT v0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (- (((vt1.c0)<(v0.c0)))) INNER JOIN vt1 ON ((((NULL)IS NOT(vt1.c0)))-(rt0.c0 COLLATE NOCASE));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))OR((- (rt1.c1)))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))OR((- (rt1.c1)))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))OR((- (rt1.c1)))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING (((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), '2~MBT?b/', TOTAL(vt1.c0)))>=(((SUM(rt0.c2) IN ()), COUNT(*), rt0.c0 COLLATE BINARY))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING (NOT ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), '2~MBT?b/', TOTAL(vt1.c0)))>=(((SUM(rt0.c2) IN ()), COUNT(*), rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING (((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), '2~MBT?b/', TOTAL(vt1.c0)))>=(((SUM(rt0.c2) IN ()), COUNT(*), rt0.c0 COLLATE BINARY)))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING (((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), '2~MBT?b/', TOTAL(vt1.c0)))>=(((SUM(rt0.c2) IN ()), COUNT(*), rt0.c0 COLLATE BINARY))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING (NOT ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), '2~MBT?b/', TOTAL(vt1.c0)))>=(((SUM(rt0.c2) IN ()), COUNT(*), rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING (((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), '2~MBT?b/', TOTAL(vt1.c0)))>=(((SUM(rt0.c2) IN ()), COUNT(*), rt0.c0 COLLATE BINARY)))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)||(rt0.c2)) THEN ((NULL) NOT NULL) WHEN CAST(vt1.c0 AS INTEGER) THEN LIKELIHOOD(DISTINCT vt1.c0, 0.5127151595889196) WHEN ((rt0.c2) NOTNULL) THEN (NOT (rt1.c0)) ELSE ((rt0.c1)>=(rt1.c0)) END RIGHT OUTER JOIN rt0 ON NULL;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((((((((rt0.c0)IS NOT('')))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c0)>(rt0.c2)))))OR(CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END)))OR(((rt0.c1) IS TRUE))))AND(UNLIKELY(rt0.c2))))OR(TRIM(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((((((((((rt0.c0)IS NOT('')))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c0)>(rt0.c2)))))OR(CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END)))OR(((rt0.c1) IS TRUE))))AND(UNLIKELY(rt0.c2))))OR(TRIM(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((((((((((rt0.c0)IS NOT('')))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c0)>(rt0.c2)))))OR(CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END)))OR(((rt0.c1) IS TRUE))))AND(UNLIKELY(rt0.c2))))OR(TRIM(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 WHERE (CAST((((vt1.c0))>((rt1.c1))) AS TEXT)) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 WHERE ((NOT (CAST((((vt1.c0))>((rt1.c1))) AS TEXT)))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 WHERE (((CAST((((vt1.c0))>((rt1.c1))) AS TEXT)) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0, v0.c0 HAVING ((((((SUM(SUM(rt0.c2)))>(rt1.c0)))OR(MAX(AVG(MIN(-147609830))))))OR(x'2228')) UNION ALL SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (((((((SUM(SUM(rt0.c2)))>(rt1.c0)))OR(MAX(AVG(MIN(-147609830))))))OR(x'2228')))) UNION ALL SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0, v0.c0 HAVING ((((((((SUM(SUM(rt0.c2)))>(rt1.c0)))OR(MAX(AVG(MIN(-147609830))))))OR(x'2228'))) ISNULL);
SELECT MAX(CASE rt1.c2  WHEN ((rt1.c0)>(rt1.c1)) THEN LOWER(v0.c0) ELSE rt1.c2 END) FROM rt0, rt1, v0;
SELECT * FROM rt1, rt0, vt1, v0;
SELECT * FROM rt1, rt0, vt1, v0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))>>(((rt1.c0) IS TRUE)))) UNION ALL SELECT * FROM rt1, rt0, vt1, v0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))>>(((rt1.c0) IS TRUE)))))) UNION ALL SELECT * FROM rt1, rt0, vt1, v0 WHERE (((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))>>(((rt1.c0) IS TRUE)))) ISNULL));
SELECT * FROM rt1, rt0, vt1, v0;
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1, vt1.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, rt1, v0, vt1;
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1, vt1.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, rt1, v0, vt1 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1, vt1.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, rt1, v0, vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1, vt1.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, rt1, v0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1, vt1.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, rt1, v0, vt1;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c1)<>(v0.c0)))AND((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(CAST(rt0.c1 AS REAL))) RIGHT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (+ (LIKELIHOOD(SUM(AVG(rt1.c1)), 0.0263868306335725))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT ((+ (LIKELIHOOD(SUM(AVG(rt1.c1)), 0.0263868306335725))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (((+ (LIKELIHOOD(SUM(AVG(rt1.c1)), 0.0263868306335725)))) ISNULL);
SELECT * FROM v0, rt0, rt1, vt1;
SELECT * FROM v0, rt0, rt1, vt1 WHERE ((- (CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT * FROM v0, rt0, rt1, vt1 WHERE ((NOT ((- (CAST(v0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM v0, rt0, rt1, vt1 WHERE ((((- (CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT * FROM v0, rt0, rt1, vt1;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((((+ (v0.c0)))%(CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT ((((+ (v0.c0)))%(CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((((((+ (v0.c0)))%(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1;
SELECT ALL rt0.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, v0, rt0, rt1 WHERE (((((vt1.c0) BETWEEN (rt1.c2) AND (NULL)))>(CAST(v0.c0 AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, v0, rt0, rt1 WHERE ((NOT (((((vt1.c0) BETWEEN (rt1.c2) AND (NULL)))>(CAST(v0.c0 AS INTEGER)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, v0, rt0, rt1 WHERE (((((((vt1.c0) BETWEEN (rt1.c2) AND (NULL)))>(CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2;
SELECT rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL) LEFT OUTER JOIN v0 ON load_extension((- (rt1.c0))) GROUP BY rt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL) LEFT OUTER JOIN v0 ON load_extension((- (rt1.c0))) GROUP BY rt0.c0, rt1.c1, rt1.c0 HAVING ((('1221787457')) BETWEEN ((COUNT(*))) AND ((((SUM(MIN(GROUP_CONCAT(SUM(AVG(COUNT(*)))))))<=(x'f404'))))) UNION ALL SELECT ALL rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL) LEFT OUTER JOIN v0 ON load_extension((- (rt1.c0))) GROUP BY rt0.c0, rt1.c1, rt1.c0 HAVING (NOT (((('1221787457')) BETWEEN ((COUNT(*))) AND ((((SUM(MIN(GROUP_CONCAT(SUM(AVG(COUNT(*)))))))<=(x'f404'))))))) UNION ALL SELECT ALL rt0.c0, rt1.c1, rt1.c0 FROM rt0, vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL) LEFT OUTER JOIN v0 ON load_extension((- (rt1.c0))) GROUP BY rt0.c0, rt1.c1, rt1.c0 HAVING ((((('1221787457')) BETWEEN ((COUNT(*))) AND ((((SUM(MIN(GROUP_CONCAT(SUM(AVG(COUNT(*)))))))<=(x'f404')))))) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, rt0.c2 FROM rt0, rt1, v0, vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, rt0.c2 FROM rt0, rt1, v0, vt1 WHERE (x'6bc6') UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, rt0.c2 FROM rt0, rt1, v0, vt1 WHERE ((NOT (x'6bc6'))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, rt0.c2 FROM rt0, rt1, v0, vt1 WHERE (((x'6bc6') ISNULL));
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, rt0.c2 FROM rt0, rt1, v0, vt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt1 NATURAL JOIN rt0;
SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt1 NATURAL JOIN rt0 WHERE (((CAST(NULL AS TEXT)) IS FALSE)) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (((CAST(NULL AS TEXT)) IS FALSE)))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt1 NATURAL JOIN rt0 WHERE (((((CAST(NULL AS TEXT)) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt1 NATURAL JOIN rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0 HAVING NULL UNION ALL SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0 HAVING NULL UNION ALL SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c0, vt1.c0 FROM rt1, v0, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((((NOT (rt1.c1))) NOT BETWEEN (x'18be') AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c0))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((NOT ((((NOT (rt1.c1))) NOT BETWEEN (x'18be') AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c0))))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((((((NOT (rt1.c1))) NOT BETWEEN (x'18be') AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c0))))) ISNULL));
SELECT ALL rt1.c2, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt0, v0;
SELECT DISTINCT * FROM vt1, rt0, v0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, rt0, v0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, rt0, v0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0) ISNULL) IN (((v0.c0)+(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) ISNULL) IN (((v0.c0)+(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0) ISNULL) IN (((v0.c0)+(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CASE WHEN TOTAL(rt0.c1) THEN (((COUNT(*)))>=((rt0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN SUBSTR(SUM(COUNT(TOTAL(AVG(rt0.c0)))), SUM(AVG('1393127149'))) WHEN MIN(rt0.c1) THEN MIN(rt0.c0) ELSE (rt0.c1 IN ()) END UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN TOTAL(rt0.c1) THEN (((COUNT(*)))>=((rt0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN SUBSTR(SUM(COUNT(TOTAL(AVG(rt0.c0)))), SUM(AVG('1393127149'))) WHEN MIN(rt0.c1) THEN MIN(rt0.c0) ELSE (rt0.c1 IN ()) END)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CASE WHEN TOTAL(rt0.c1) THEN (((COUNT(*)))>=((rt0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN SUBSTR(SUM(COUNT(TOTAL(AVG(rt0.c0)))), SUM(AVG('1393127149'))) WHEN MIN(rt0.c1) THEN MIN(rt0.c0) ELSE (rt0.c1 IN ()) END) ISNULL);
SELECT * FROM v0, vt1, rt0, rt1;
SELECT ALL * FROM v0, vt1, rt0, rt1 WHERE (x'') UNION ALL SELECT * FROM v0, vt1, rt0, rt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM v0, vt1, rt0, rt1 WHERE (((x'') ISNULL));
SELECT * FROM v0, vt1, rt0, rt1;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1 NOT INDEXED NATURAL JOIN rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE ((((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) ISNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)&(vt1.c0))) ISNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)&(vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT MIN(CASE WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt0.c0) IS FALSE) WHEN x'' THEN v0.c0 WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c1 ELSE ((((((((rt0.c0)OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c0)))OR(rt0.c1)) END) FROM rt1, rt0, v0, vt1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 IN ())))<=((((x'')GLOB(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0 IN ())))<=((((x'')GLOB(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0 IN ())))<=((((x'')GLOB(vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((vt1.c0 IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0 WHERE (CASE WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE rt0.c0 COLLATE NOCASE END) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE rt0.c0 COLLATE NOCASE END))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0 WHERE (((CASE WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE rt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 HAVING GROUP_CONCAT(((AVG(rt0.c2))%(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM rt1, v0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(rt0.c2))%(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 HAVING ((GROUP_CONCAT(((AVG(rt0.c2))%(rt0.c1)))) ISNULL);
SELECT rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1;
SELECT ALL rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, vt1.c0, rt1.c2)) AND ((vt1.c0, rt1.c1, rt1.c1))))==((rt1.c1 IN (rt1.c1))))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT ((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, vt1.c0, rt1.c2)) AND ((vt1.c0, rt1.c1, rt1.c1))))=((rt1.c1 IN (rt1.c1))))))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, vt1.c0, rt1.c2)) AND ((vt1.c0, rt1.c1, rt1.c1))))==((rt1.c1 IN (rt1.c1))))) ISNULL));
SELECT rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (TRIM(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(')q>^ejhh')))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (TRIM(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(')q>^ejhh')))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((TRIM(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(')q>^ejhh')))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL((MAX(SUM(GROUP_CONCAT(rt1.c2))) IN ())) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL((MAX(SUM(GROUP_CONCAT(rt1.c2))) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL((MAX(SUM(GROUP_CONCAT(rt1.c2))) IN ()))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL((MAX(SUM(GROUP_CONCAT(rt1.c2))) IN ())) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL((MAX(SUM(GROUP_CONCAT(rt1.c2))) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL((MAX(SUM(GROUP_CONCAT(rt1.c2))) IN ()))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt1, v0, rt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt1, rt0, v0;
SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt1, rt0, v0 WHERE ((((v0.c0, rt1.c0, rt0.c2)) NOT BETWEEN ((((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))AND(rt1.c2)))OR(0.6021258036679116)), (('a|	g') BETWEEN (v0.c0) AND (rt1.c0)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2, ((rt1.c2) BETWEEN (v0.c0) AND (rt0.c0)), ((((rt1.c0)AND(rt0.c2)))OR('-1005952359')))))) UNION ALL SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt1, rt0, v0 WHERE ((NOT ((((v0.c0, rt1.c0, rt0.c2)) NOT BETWEEN ((((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))AND(rt1.c2)))OR(0.6021258036679116)), (('a|	g') BETWEEN (v0.c0) AND (rt1.c0)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2, ((rt1.c2) BETWEEN (v0.c0) AND (rt0.c0)), ((((rt1.c0)AND(rt0.c2)))OR('-1005952359')))))))) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt1, rt0, v0 WHERE ((((((v0.c0, rt1.c0, rt0.c2)) NOT BETWEEN ((((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))AND(rt1.c2)))OR(0.6021258036679116)), (('a|	g') BETWEEN (v0.c0) AND (rt1.c0)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2, ((rt1.c2) BETWEEN (v0.c0) AND (rt0.c0)), ((((rt1.c0)AND(rt0.c2)))OR('-1005952359')))))) ISNULL));
SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt1, rt0, v0;
SELECT DISTINCT rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1, vt1;
SELECT DISTINCT rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1, vt1 WHERE (((rt0.c2) BETWEEN (CASE WHEN x'619c' THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN 0.3463266965618975 ELSE rt1.c0 END) AND (CASE rt0.c0  WHEN vt1.c0 THEN rt1.c0 ELSE NULL END))) UNION SELECT DISTINCT rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1, vt1 WHERE ((NOT (((rt0.c2) BETWEEN (CASE WHEN x'619c' THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN 0.3463266965618975 ELSE rt1.c0 END) AND (CASE rt0.c0  WHEN vt1.c0 THEN rt1.c0 ELSE NULL END))))) UNION SELECT DISTINCT rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1, vt1 WHERE (((((rt0.c2) BETWEEN (CASE WHEN x'619c' THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN 0.3463266965618975 ELSE rt1.c0 END) AND (CASE rt0.c0  WHEN vt1.c0 THEN rt1.c0 ELSE NULL END))) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)>=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)>=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)>=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c0, rt1.c1, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt1 ON ((highlight(rt0.c2, rt1.c0, rt0.c2, v0.c0)) BETWEEN (CAST(rt1.c1 AS INTEGER)) AND ('Mp\rIOt')) CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT rt1.c0, 0.37590247521884246))GLOB(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))) RIGHT OUTER JOIN rt0 ON (- (((rt0.c2)=(rt1.c2)))) GROUP BY rt1.c0, rt1.c1, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((((((((rt1.c1, rt1.c2, 0xffffffffa28a640d)) NOT BETWEEN ((rt0.c0, 'NaN', rt0.c1)) AND ((rt1.c1, rt1.c1, -3.7744817E8))))AND(rt0.c2 COLLATE BINARY)))OR(((rt1.c1)+(NULL)))))AND(CASE rt0.c0  WHEN 'cPH!X' THEN rt0.c1 END)))AND(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))))OR(RTRIM(rt1.c0))))OR(rt1.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT ((((((((((((((((rt1.c1, rt1.c2, 0xffffffffa28a640d)) NOT BETWEEN ((rt0.c0, 'NaN', rt0.c1)) AND ((rt1.c1, rt1.c1, -3.7744817E8))))AND(rt0.c2 COLLATE BINARY)))OR(((rt1.c1)+(NULL)))))AND(CASE rt0.c0  WHEN 'cPH!X' THEN rt0.c1 END)))AND(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))))OR(RTRIM(rt1.c0))))OR(rt1.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((((((((((((((((((rt1.c1, rt1.c2, 0Xffffffffa28a640d)) NOT BETWEEN ((rt0.c0, 'NaN', rt0.c1)) AND ((rt1.c1, rt1.c1, -3.7744817E8))))AND(rt0.c2 COLLATE BINARY)))OR(((rt1.c1)+(NULL)))))AND(CASE rt0.c0  WHEN 'cPH!X' THEN rt0.c1 END)))AND(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))))OR(RTRIM(rt1.c0))))OR(rt1.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON ((((rt1.c2)<=(rt1.c1)))&(((rt1.c1)||(NULL))));
SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON ((((rt1.c2)<=(rt1.c1)))&(((rt1.c1)||(NULL)))) WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON ((((rt1.c2)<=(rt1.c1)))&(((rt1.c1)||(NULL)))) WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON ((((rt1.c2)<=(rt1.c1)))&(((rt1.c1)||(NULL)))) WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON ((((rt1.c2)<=(rt1.c1)))&(((rt1.c1)||(NULL))));
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (rt0.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (rt0.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE (((rt0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT rt1.c0 FROM rt0 CROSS JOIN v0 ON CASE ((rt1.c1)<>(NULL))  WHEN (rt1.c0 IN ()) THEN CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END ELSE ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c2)) END CROSS JOIN rt1 ON ((rt0.c0 IN ()) IN (NULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt0 NOT INDEXED CROSS JOIN v0 ON CASE ((rt1.c1)<>(NULL))  WHEN (rt1.c0 IN ()) THEN CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END ELSE ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c2)) END CROSS JOIN rt1 ON ((rt0.c0 IN ()) IN (NULL)) GROUP BY rt1.c0 HAVING TOTAL(((rt1.c0)>>(TOTAL(rt1.c0)))) UNION ALL SELECT rt1.c0 FROM rt0 CROSS JOIN v0 ON CASE ((rt1.c1)<>(NULL))  WHEN (rt1.c0 IN ()) THEN CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END ELSE ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c2)) END CROSS JOIN rt1 ON ((rt0.c0 IN ()) IN (NULL)) GROUP BY rt1.c0 HAVING (NOT (TOTAL(((rt1.c0)>>(TOTAL(rt1.c0)))))) UNION ALL SELECT ALL rt1.c0 FROM rt0 CROSS JOIN v0 ON CASE ((rt1.c1)!=(NULL))  WHEN (rt1.c0 IN ()) THEN CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END ELSE ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c2)) END CROSS JOIN rt1 ON ((rt0.c0 IN ()) IN (NULL)) GROUP BY rt1.c0 HAVING ((TOTAL(((rt1.c0)>>(TOTAL(rt1.c0))))) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((CAST(rt1.c2 AS BLOB))AND(((x'')AND(rt1.c2)))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((CAST(rt1.c2 AS BLOB))AND(((x'')AND(rt1.c2)))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((((((CAST(rt1.c2 AS BLOB))AND(((x'')AND(rt1.c2)))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON CASE ''  WHEN ((rt0.c1)%(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((((rt0.c1)AND('-1175502974')))AND(vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON CASE ''  WHEN ((rt0.c1)%(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((((rt0.c1)AND('-1175502974')))AND(vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END WHERE ((- (rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON CASE ''  WHEN ((rt0.c1)%(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((((rt0.c1)AND('-1175502974')))AND(vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END WHERE ((NOT ((- (rt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON CASE ''  WHEN ((rt0.c1)%(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((((rt0.c1)AND('-1175502974')))AND(vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END WHERE ((((- (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON CASE ''  WHEN ((rt0.c1)%(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((((rt0.c1)AND('-1175502974')))AND(vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.583994219046848 GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.583994219046848 WHERE (CASE vt1.c0  WHEN ((rt0.c2) IS FALSE) THEN CAST(rt0.c1 AS INTEGER) ELSE '783907947' END) GROUP BY vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.583994219046848 WHERE ((NOT (CASE vt1.c0  WHEN ((rt0.c2) IS FALSE) THEN CAST(rt0.c1 AS INTEGER) ELSE '783907947' END))) GROUP BY vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.583994219046848 WHERE (((CASE vt1.c0  WHEN ((rt0.c2) IS FALSE) THEN CAST(rt0.c1 AS INTEGER) ELSE '783907947' END) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.583994219046848 GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END END RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN RTRIM(rt0.c0) THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c2, rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c0, rt0.c1, rt1.c1, rt0.c0, rt1.c2, vt1.c0 FROM vt1, rt1, rt0;
SELECT rt1.c0, rt0.c1, rt1.c1, rt0.c0, rt1.c2, vt1.c0 FROM vt1, rt1, rt0 WHERE ((((((rt1.c0 IN (rt1.c1)))OR((rt1.c1 IN (rt0.c2, rt1.c0)))))OR(((rt0.c1)|(rt1.c2))))) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c1, rt0.c0, rt1.c2, vt1.c0 FROM vt1, rt1, rt0 WHERE ((NOT ((((((rt1.c0 IN (rt1.c1)))OR((rt1.c1 IN (rt0.c2, rt1.c0)))))OR(((rt0.c1)|(rt1.c2))))))) UNION ALL SELECT ALL rt1.c0, rt0.c1, rt1.c1, rt0.c0, rt1.c2, vt1.c0 FROM vt1, rt1, rt0 WHERE ((((((((rt1.c0 IN (rt1.c1)))OR((rt1.c1 IN (rt0.c2, rt1.c0)))))OR(((rt0.c1)|(rt1.c2))))) ISNULL));
SELECT ALL rt1.c0, rt0.c1, rt1.c1, rt0.c0, rt1.c2, vt1.c0 FROM vt1, rt1, rt0;
SELECT DISTINCT rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(NULL));
SELECT DISTINCT rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(NULL)) WHERE (((((v0.c0) NOT BETWEEN (0.034989832622631445) AND (rt0.c0)))AND(CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(NULL)) WHERE ((NOT (((((v0.c0) NOT BETWEEN (0.034989832622631445) AND (rt0.c0)))AND(CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(NULL)) WHERE (((((((v0.c0) NOT BETWEEN (0.034989832622631445) AND (rt0.c0)))AND(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(NULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('-2042654853') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('-2042654853'))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('-2042654853') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0;
SELECT rt1.c0, rt0.c2, vt1.c0 FROM vt1, rt0 CROSS JOIN rt1 ON ((rt0.c0) IS FALSE) COLLATE BINARY;
SELECT rt1.c0, rt0.c2, vt1.c0 FROM vt1, rt0 CROSS JOIN rt1 ON ((rt0.c0) IS FALSE) COLLATE BINARY WHERE ((rt0.c1 COLLATE RTRIM IN ())) UNION ALL SELECT rt1.c0, rt0.c2, vt1.c0 FROM vt1, rt0 CROSS JOIN rt1 ON ((rt0.c0) IS FALSE) COLLATE BINARY WHERE ((NOT ((rt0.c1 COLLATE RTRIM IN ())))) UNION ALL SELECT rt1.c0, rt0.c2, vt1.c0 FROM vt1, rt0 CROSS JOIN rt1 ON ((rt0.c0) IS FALSE) COLLATE BINARY WHERE ((((rt0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT rt1.c0, rt0.c2, vt1.c0 FROM vt1, rt0 CROSS JOIN rt1 ON ((rt0.c0) IS FALSE) COLLATE BINARY;
SELECT DISTINCT rt0.c1, rt1.c2, rt0.c2, vt1.c0, rt0.c0, rt1.c1, rt1.c0, v0.c0 FROM rt1, rt0, v0, vt1;
SELECT DISTINCT rt0.c1, rt1.c2, rt0.c2, vt1.c0, rt0.c0, rt1.c1, rt1.c0, v0.c0 FROM rt1, rt0, v0, vt1 WHERE ((((rt1.c2)<=(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c1, rt1.c2, rt0.c2, vt1.c0, rt0.c0, rt1.c1, rt1.c0, v0.c0 FROM rt1, rt0, v0, vt1 WHERE ((NOT ((((rt1.c2)<=(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt1.c2, rt0.c2, vt1.c0, rt0.c0, rt1.c1, rt1.c0, v0.c0 FROM rt1, rt0, v0, vt1 WHERE ((((((rt1.c2)<=(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c2, rt0.c2, vt1.c0, rt0.c0, rt1.c1, rt1.c0, v0.c0 FROM rt1, rt0, v0, vt1;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1, v0 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1, v0 WHERE ((((vt1.c0 COLLATE NOCASE))>=((CASE WHEN rt0.c2 THEN rt0.c1 END)))) GROUP BY rt0.c1, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1, v0 WHERE ((NOT ((((vt1.c0 COLLATE NOCASE))>=((CASE WHEN rt0.c2 THEN rt0.c1 END)))))) GROUP BY rt0.c1, vt1.c0, rt0.c2 UNION SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1, v0 WHERE ((((((vt1.c0 COLLATE NOCASE))>=((CASE WHEN rt0.c2 THEN rt0.c1 END)))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1, v0 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT ALL rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2;
SELECT rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 HAVING rt1.c2 UNION ALL SELECT rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 HAVING (NOT (rt1.c2)) UNION ALL SELECT rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 HAVING ((rt1.c2) ISNULL);
SELECT ALL rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2;
SELECT rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 HAVING rt1.c2 UNION ALL SELECT rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 HAVING (NOT (rt1.c2)) UNION ALL SELECT rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 HAVING ((rt1.c2) ISNULL);
SELECT ALL rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, rt0.c0, rt1.c0, rt1.c2, rt0.c2;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, rt1, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, rt1, v0 WHERE (rt1.c1) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, rt1, v0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, rt1, v0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, rt1, v0;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE ((NOT (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt1.c0;
SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING MAX(CASE WHEN '-960271556' THEN rt1.c1 ELSE 0.2589478494651756 END) UNION ALL SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CASE WHEN '-960271556' THEN rt1.c1 ELSE 0.2589478494651756 END))) UNION ALL SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING ((MAX(CASE WHEN '-960271556' THEN rt1.c1 ELSE 0.2589478494651756 END)) ISNULL);
SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING MAX(CASE WHEN '-960271556' THEN rt1.c1 ELSE 0.2589478494651756 END) UNION ALL SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CASE WHEN '-960271556' THEN rt1.c1 ELSE 0.2589478494651756 END))) UNION ALL SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING ((MAX(CASE WHEN '-960271556' THEN rt1.c1 ELSE 0.2589478494651756 END)) ISNULL);
SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt1, vt1, rt0;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt0.c2))) IN ())) UNION ALL SELECT ALL * FROM rt1, vt1, rt0 WHERE ((NOT (((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt0.c2))) IN ())))) UNION ALL SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt0.c2))) IN ())) ISNULL));
SELECT ALL * FROM rt1, vt1, rt0;
SELECT DISTINCT vt1.c0 FROM v0, vt1, rt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1, rt1 WHERE (((json_extract(rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2 IN (NULL))) AND (((v0.c0)&(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1, rt1 WHERE ((NOT (((json_extract(rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2 IN (NULL))) AND (((v0.c0)&(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1, rt1 WHERE (((((json_extract(rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2 IN (NULL))) AND (((v0.c0)&(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1, rt1;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (CAST(1.689161532E9 AS TEXT)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(1.689161532E9 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE (((CAST(1.689161532E9 AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0;
SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 HAVING x'c787' UNION ALL SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 HAVING (NOT (x'c787')) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 HAVING ((x'c787') ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0;
SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 HAVING x'c787' UNION ALL SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 HAVING (NOT (x'c787')) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 HAVING ((x'c787') ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, vt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c0)OR(x'72a0'))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0)OR(x'72a0'))) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c0)OR(x'72a0'))) IS FALSE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((+ (rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((NOT ((+ (rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((((+ (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT ALL v0.c0, rt1.c2, rt0.c1 FROM vt1, v0, rt0, rt1 GROUP BY v0.c0, rt1.c2, rt0.c1;
SELECT v0.c0, rt1.c2, rt0.c1 FROM vt1, v0, rt0, rt1 WHERE ((((NULL))>((((rt1.c1)-(rt0.c0)))))) GROUP BY v0.c0, rt1.c2, rt0.c1 UNION SELECT v0.c0, rt1.c2, rt0.c1 FROM vt1, v0, rt0, rt1 WHERE ((NOT ((((NULL))>((((rt1.c1)-(rt0.c0)))))))) GROUP BY v0.c0, rt1.c2, rt0.c1 UNION SELECT v0.c0, rt1.c2, rt0.c1 FROM vt1, v0, rt0, rt1 WHERE ((((((NULL))>((((rt1.c1)-(rt0.c0)))))) ISNULL)) GROUP BY v0.c0, rt1.c2, rt0.c1;
SELECT ALL v0.c0, rt1.c2, rt0.c1 FROM vt1, v0, rt0, rt1 GROUP BY v0.c0, rt1.c2, rt0.c1;
SELECT ALL rt1.c0, rt0.c0, rt1.c1, v0.c0 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((NULLIF(rt0.c0, 985387189))) AND (((((rt0.c2))>((rt0.c0)))))) FULL OUTER JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN v0 ON rt1.c0 GROUP BY rt1.c0, rt0.c0, rt1.c1, v0.c0;
SELECT ALL rt1.c0, rt0.c0, rt1.c1, v0.c0 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((NULLIF(rt0.c0, 985387189))) AND (((((rt0.c2))>((rt0.c0)))))) FULL OUTER JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN v0 ON rt1.c0 GROUP BY rt1.c0, rt0.c0, rt1.c1, v0.c0 HAVING TOTAL(((1.227509946E9)%(GROUP_CONCAT(GROUP_CONCAT(MIN(rt1.c1)))))) UNION ALL SELECT rt1.c0, rt0.c0, rt1.c1, v0.c0 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((NULLIF(rt0.c0, 985387189))) AND (((((rt0.c2))>((rt0.c0)))))) FULL OUTER JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN v0 ON rt1.c0 GROUP BY rt1.c0, rt0.c0, rt1.c1, v0.c0 HAVING (NOT (TOTAL(((1.227509946E9)%(GROUP_CONCAT(GROUP_CONCAT(MIN(rt1.c1)))))))) UNION ALL SELECT ALL rt1.c0, rt0.c0, rt1.c1, v0.c0 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((NULLIF(rt0.c0, 985387189))) AND (((((rt0.c2))>((rt0.c0)))))) FULL OUTER JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN v0 ON rt1.c0 GROUP BY rt1.c0, rt0.c0, rt1.c1, v0.c0 HAVING ((TOTAL(((1.227509946E9)%(GROUP_CONCAT(GROUP_CONCAT(MIN(rt1.c1))))))) ISNULL);
SELECT ALL TOTAL(((((vt1.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt1 ORDER BY LIKELY(DISTINCT NULL) ASC, (NOT (CAST(x'' AS BLOB))) ASC;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON ((((1170364489)<=(rt0.c0)))!=(((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON ((('	')>>(rt0.c1)) IN ());
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (0.2740460961259614)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (0.2740460961259614)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (0.2740460961259614)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM rt1, rt0, v0 WHERE (((LIKELIHOOD(DISTINCT rt1.c1, 0.44304520840342865)) BETWEEN (((rt0.c1)>=(rt0.c1))) AND (rt0.c2))) GROUP BY rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 UNION SELECT rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM rt1, rt0, v0 WHERE ((NOT (((LIKELIHOOD(DISTINCT rt1.c1, 0.44304520840342865)) BETWEEN (((rt0.c1)>=(rt0.c1))) AND (rt0.c2))))) GROUP BY rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 UNION SELECT rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM rt1, rt0, v0 WHERE (((((LIKELIHOOD(DISTINCT rt1.c1, 0.44304520840342865)) BETWEEN (((rt0.c1)>=(rt0.c1))) AND (rt0.c2))) ISNULL)) GROUP BY rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c0;
SELECT ALL v0.c0, rt0.c2, rt1.c0, rt1.c2 FROM v0, rt1, vt1, rt0 GROUP BY v0.c0, rt0.c2, rt1.c0, rt1.c2;
SELECT ALL v0.c0, rt0.c2, rt1.c0, rt1.c2 FROM v0, rt1, vt1, rt0 GROUP BY v0.c0, rt0.c2, rt1.c0, rt1.c2 HAVING GROUP_CONCAT(AVG(rt0.c1)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt1.c0, rt1.c2 FROM v0, rt1, vt1, rt0 GROUP BY v0.c0, rt0.c2, rt1.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c1)))) UNION ALL SELECT v0.c0, rt0.c2, rt1.c0, rt1.c2 FROM v0, rt1, vt1, rt0 GROUP BY v0.c0, rt0.c2, rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(AVG(rt0.c1))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (534136608 IN ());
SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (534136608 IN ()) WHERE (x'') UNION SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (534136608 IN ()) WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (534136608 IN ()) WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (534136608 IN ());
SELECT ALL rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1 FROM rt0, v0, rt1, vt1 GROUP BY rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1;
SELECT ALL rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1 FROM rt0, v0, rt1, vt1 WHERE (x'') GROUP BY rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1 UNION SELECT rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1 FROM rt0, v0, rt1, vt1 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1 UNION SELECT ALL rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1 FROM rt0, v0, rt1, vt1 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1;
SELECT ALL rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1 FROM rt0, v0, rt1, vt1 GROUP BY rt0.c1, rt0.c0, v0.c0, vt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c2, rt1.c0, v0.c0 FROM rt0, vt1, v0, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c2, rt1.c0, v0.c0;
SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c2, rt1.c0, v0.c0 FROM rt0, vt1, v0, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c2, rt1.c0, v0.c0 HAVING ((((COUNT(*))GLOB(rt1.c0)))OR(SUM(MIN(MAX(rt0.c1))))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c2, rt1.c0, v0.c0 FROM rt0, vt1, v0, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c2, rt1.c0, v0.c0 HAVING (NOT (((((COUNT(*))GLOB(rt1.c0)))OR(SUM(MIN(MAX(rt0.c1))))))) UNION ALL SELECT vt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c2, rt1.c0, v0.c0 FROM rt0, vt1, v0, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c2, rt1.c0, v0.c0 HAVING ((((((COUNT(*))GLOB(rt1.c0)))OR(SUM(MIN(MAX(rt0.c1)))))) ISNULL);
SELECT ALL * FROM rt1, vt1, v0;
SELECT ALL * FROM rt1, vt1, v0 WHERE (((CAST(rt1.c1 AS INTEGER))IS(((rt1.c2) NOT NULL)))) UNION ALL SELECT * FROM rt1, vt1, v0 WHERE ((NOT (((CAST(rt1.c1 AS INTEGER))IS(((rt1.c2) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt1, vt1, v0 WHERE (((((CAST(rt1.c1 AS INTEGER))IS(((rt1.c2) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt1, vt1, v0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((json_valid(rt1.c2))LIKE(rt0.c0))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((json_valid(rt1.c2))LIKE(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((json_valid(rt1.c2))LIKE(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, rt1;
SELECT rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))*(((rt0.c2)+(v0.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))*(((rt0.c2)+(v0.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))*(((rt0.c2)+(v0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0;
SELECT ALL rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING (((('913396254')OR(AVG(vt1.c0))))OR(json_object(TOTAL(rt1.c2), rt1.c1))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING (NOT ((((('913396254')OR(AVG(vt1.c0))))OR(json_object(TOTAL(rt1.c2), rt1.c1))))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING (((((('913396254')OR(AVG(vt1.c0))))OR(json_object(TOTAL(rt1.c2), rt1.c1)))) ISNULL);
SELECT ALL rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0;
SELECT ALL rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING (((('913396254')OR(AVG(vt1.c0))))OR(json_object(TOTAL(rt1.c2), rt1.c1))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING (NOT ((((('913396254')OR(AVG(vt1.c0))))OR(json_object(TOTAL(rt1.c2), rt1.c1))))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING (((((('913396254')OR(AVG(vt1.c0))))OR(json_object(TOTAL(rt1.c2), rt1.c1)))) ISNULL);
SELECT ALL rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt1, rt0, v0, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0;
SELECT vt1.c0, rt1.c1 FROM v0, vt1, rt1;
SELECT ALL vt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE ((((rt1.c0) NOT NULL) IN (rt1.c1 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE ((NOT ((((rt1.c0) NOT NULL) IN (rt1.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL vt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE ((((((rt1.c0) NOT NULL) IN (rt1.c1 COLLATE NOCASE))) ISNULL));
SELECT vt1.c0, rt1.c1 FROM v0, vt1, rt1;
SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM v0, rt1, vt1;
SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM v0, rt1, vt1 WHERE (((CAST(x'' AS BLOB)) NOT NULL)) UNION SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM v0, rt1, vt1 WHERE ((NOT (((CAST(x'' AS BLOB)) NOT NULL)))) UNION SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM v0, rt1, vt1 WHERE (((((CAST(x'' AS BLOB)) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM v0, rt1, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(6.74798045E8)))OR(v0.c0))) AND ((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(6.74798045E8)))OR(v0.c0))) AND ((~ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(6.74798045E8)))OR(v0.c0))) AND ((~ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2 FROM rt0, rt1 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))>=(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)) RIGHT OUTER JOIN v0 ON ((rt1.c1) BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE NOCASE GROUP BY rt0.c2;
SELECT * FROM vt1, v0, rt0, rt1;
SELECT ALL * FROM vt1, v0, rt0, rt1 WHERE (CASE WHEN ((rt1.c2) IS FALSE) THEN (((v0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN (- (0Xfffffffff6f66ebc)) THEN CASE WHEN vt1.c0 THEN 0.4441880129374709 ELSE rt1.c0 END WHEN (((rt1.c1)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN (((((((('')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) ELSE 0.9814864986488273 END) ORDER BY NULL DESC  NULLS LAST, ((MAX(rt0.c1, rt0.c2))>>((((rt1.c0)) BETWEEN (('')) AND ((rt1.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1, v0, rt0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c2) IS FALSE) THEN (((v0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN (- (0Xfffffffff6f66ebc)) THEN CASE WHEN vt1.c0 THEN 0.4441880129374709 ELSE rt1.c0 END WHEN (((rt1.c1)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN (((((((('')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) ELSE 0.9814864986488273 END))) ORDER BY NULL DESC  NULLS LAST, ((MAX(rt0.c1, rt0.c2))>>((((rt1.c0)) BETWEEN (('')) AND ((rt1.c0)))))  NULLS LAST;
SELECT * FROM vt1, v0, rt0, rt1 WHERE (((CASE WHEN ((rt1.c2) IS FALSE) THEN (((v0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN (- (0xfffffffff6f66ebc)) THEN CASE WHEN vt1.c0 THEN 0.4441880129374709 ELSE rt1.c0 END WHEN (((rt1.c1)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN (((((((('')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) ELSE 0.9814864986488273 END) ISNULL)) ORDER BY NULL DESC  NULLS LAST, ((MAX(rt0.c1, rt0.c2))>>((((rt1.c0)) BETWEEN (('')) AND ((rt1.c0)))))  NULLS LAST;
SELECT * FROM vt1, v0, rt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((1.240985338E9 IN ()))=(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((1.240985338E9 IN ()))==(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((1.240985338E9 IN ()))=(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0;
SELECT ALL rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0Xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0 HAVING rt1.c2 UNION ALL SELECT ALL rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0Xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0Xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0;
SELECT ALL rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0Xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0 HAVING rt1.c2 UNION ALL SELECT ALL rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0Xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0Xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON ((((rt1.c2) BETWEEN (0xffffffffeb59fd65) AND (rt1.c2))) IS FALSE) GROUP BY rt1.c0, v0.c0;
SELECT ALL vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE (CASE (((vt1.c0))<((vt1.c0)))  WHEN CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE x'' END THEN (((v0.c0))>((v0.c0))) ELSE ((vt1.c0) IS FALSE) END) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE (((vt1.c0))<((vt1.c0)))  WHEN CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE x'' END THEN (((v0.c0))>((v0.c0))) ELSE ((vt1.c0) IS FALSE) END))) UNION ALL SELECT vt1.c0 FROM v0, vt1 WHERE (((CASE (((vt1.c0))<((vt1.c0)))  WHEN CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE x'' END THEN (((v0.c0))>((v0.c0))) ELSE ((vt1.c0) IS FALSE) END) ISNULL));
SELECT ALL vt1.c0 FROM v0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)<=(CAST(rt0.c1 AS REAL)))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)<=(CAST(rt0.c1 AS REAL)))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)<=(CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0 FROM vt1, v0, rt1, rt0 GROUP BY vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0;
SELECT vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0 FROM vt1, v0, rt1, rt0 WHERE (x'') GROUP BY vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0 UNION SELECT vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0 FROM vt1, v0, rt1, rt0 WHERE ((NOT (x''))) GROUP BY vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0 FROM vt1, v0, rt1, rt0 WHERE (((x'') ISNULL)) GROUP BY vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0;
SELECT vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0 FROM vt1, v0, rt1, rt0 GROUP BY vt1.c0, rt1.c2, v0.c0, rt0.c0, rt1.c1, rt0.c1, rt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (((x'96cf', v0.c0, rt0.c1))>=(('', rt0.c1, v0.c0))) WHEN rt0.c2 THEN rt0.c2 WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(rt0.c0 AS REAL) ELSE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)) END;
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (((x'96cf', v0.c0, rt0.c1))>=(('', rt0.c1, v0.c0))) WHEN rt0.c2 THEN rt0.c2 WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(rt0.c0 AS REAL) ELSE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)) END WHERE (LOWER(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (((x'96cf', v0.c0, rt0.c1))>=(('', rt0.c1, v0.c0))) WHEN rt0.c2 THEN rt0.c2 WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(rt0.c0 AS REAL) ELSE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)) END WHERE ((NOT (LOWER(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (((x'96cf', v0.c0, rt0.c1))>=(('', rt0.c1, v0.c0))) WHEN rt0.c2 THEN rt0.c2 WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(rt0.c0 AS REAL) ELSE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)) END WHERE (((LOWER(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (((x'96cf', v0.c0, rt0.c1))>=(('', rt0.c1, v0.c0))) WHEN rt0.c2 THEN rt0.c2 WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(rt0.c0 AS REAL) ELSE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)) END;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((NULLIF(vt1.c0, vt1.c0)) NOT BETWEEN ((- (vt1.c0))) AND ((((0x741ffe59, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((NULLIF(vt1.c0, vt1.c0)) NOT BETWEEN ((- (vt1.c0))) AND ((((0X741ffe59, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((NULLIF(vt1.c0, vt1.c0)) NOT BETWEEN ((- (vt1.c0))) AND ((((0x741ffe59, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c2, v0.c0, rt1.c1 FROM rt1, vt1, v0 GROUP BY rt1.c2, v0.c0, rt1.c1;
SELECT rt1.c2, v0.c0, rt1.c1 FROM rt1, vt1, v0 WHERE (rt1.c0) GROUP BY rt1.c2, v0.c0, rt1.c1 UNION SELECT rt1.c2, v0.c0, rt1.c1 FROM rt1, vt1, v0 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c2, v0.c0, rt1.c1 UNION SELECT rt1.c2, v0.c0, rt1.c1 FROM rt1, vt1, v0 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c1;
SELECT rt1.c2, v0.c0, rt1.c1 FROM rt1, vt1, v0 GROUP BY rt1.c2, v0.c0, rt1.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (rt0.c1 COLLATE RTRIM IN (GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((rt0.c1 COLLATE RTRIM IN (GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((rt0.c1 COLLATE RTRIM IN (GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2)))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((~ (v0.c0))) IS TRUE)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((~ (v0.c0))) IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((((((~ (v0.c0))) IS TRUE)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((((((rt0.c1 IN ()))OR(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT ((((((rt0.c1 IN ()))OR(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((((((((rt0.c1 IN ()))OR(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((rt0.c1)GLOB(UNLIKELY(rt0.c0)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((rt0.c1)GLOB(UNLIKELY(rt0.c0)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c1)GLOB(UNLIKELY(rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0, v0, rt1 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE ((CAST(rt1.c1 AS TEXT) IN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT ((CAST(rt1.c1 AS TEXT) IN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((((CAST(rt1.c1 AS TEXT) IN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE (((((((rt1.c0)GLOB('')))AND(((((rt1.c0)AND(rt1.c1)))AND(rt0.c0)))))OR(((rt0.c2)%(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT (((((((rt1.c0)GLOB('')))AND(((((rt1.c0)AND(rt1.c1)))AND(rt0.c0)))))OR(((rt0.c2)%(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE (((((((((rt1.c0)GLOB('')))AND(((((rt1.c0)AND(rt1.c1)))AND(rt0.c0)))))OR(((rt0.c2)%(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c1 FROM v0, rt1 INNER JOIN rt0 ON ((((TOTAL_CHANGES())OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))))OR((rt0.c0 IN ()))) CROSS JOIN vt1 ON ((((rt1.c2)||(rt1.c1)))>>(((rt0.c1)IS NOT(rt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c1 FROM v0, rt1 INNER JOIN rt0 ON ((((TOTAL_CHANGES())OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))))OR((rt0.c0 IN ()))) CROSS JOIN vt1 ON ((((rt1.c2)||(rt1.c1)))>>(((rt0.c1)IS NOT(rt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c1 HAVING TOTAL(((vt1.c0) NOT BETWEEN (rt1.c0) AND (MAX(rt0.c1)))) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c1 FROM v0, rt1 INNER JOIN rt0 ON ((((TOTAL_CHANGES())OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))))OR((rt0.c0 IN ()))) CROSS JOIN vt1 ON ((((rt1.c2)||(rt1.c1)))>>(((rt0.c1)IS NOT(rt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c1 HAVING (NOT (TOTAL(((vt1.c0) NOT BETWEEN (rt1.c0) AND (MAX(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c1 FROM v0, rt1 INNER JOIN rt0 ON ((((TOTAL_CHANGES())OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))))OR((rt0.c0 IN ()))) CROSS JOIN vt1 ON ((((rt1.c2)||(rt1.c1)))>>(((rt0.c1)IS NOT(rt0.c1)))) GROUP BY rt0.c0, rt1.c2, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c1 HAVING ((TOTAL(((vt1.c0) NOT BETWEEN (rt1.c0) AND (MAX(rt0.c1))))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON ((GLOB(rt0.c0, rt1.c0)) IS TRUE);
SELECT rt1.c1, rt1.c2, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON ((GLOB(rt0.c0, rt1.c0)) IS TRUE) WHERE (((((((((rt1.c0)OR((rt0.c2 IN ()))))AND((+ (0.4626812740272638)))))AND(((v0.c0)>=(rt0.c1)))))AND(v0.c0))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON ((GLOB(rt0.c0, rt1.c0)) IS TRUE) WHERE ((NOT (((((((((rt1.c0)OR((rt0.c2 IN ()))))AND((+ (0.4626812740272638)))))AND(((v0.c0)>=(rt0.c1)))))AND(v0.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON ((GLOB(rt0.c0, rt1.c0)) IS TRUE) WHERE (((((((((((rt1.c0)OR((rt0.c2 IN ()))))AND((+ (0.4626812740272638)))))AND(((v0.c0)>=(rt0.c1)))))AND(v0.c0))) ISNULL));
SELECT ALL rt1.c1, rt1.c2, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON ((GLOB(rt0.c0, rt1.c0)) IS TRUE);
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON '' GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON '' WHERE ((((((v0.c0))>((v0.c0)))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON '' WHERE ((NOT ((((((v0.c0))>((v0.c0)))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON '' WHERE ((((((((v0.c0))>((v0.c0)))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON '' GROUP BY vt1.c0;
SELECT ALL rt1.c2 FROM rt0, v0 FULL OUTER JOIN rt1 ON rt1.c1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt0, v0 FULL OUTER JOIN rt1 ON rt1.c1 GROUP BY rt1.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt1.c2 FROM rt0, v0 FULL OUTER JOIN rt1 ON rt1.c1 GROUP BY rt1.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT rt1.c2 FROM rt0, v0 FULL OUTER JOIN rt1 ON rt1.c1 GROUP BY rt1.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM rt1, v0, rt0;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((- (CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT ((- (CAST(rt0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((((- (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT * FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (COALESCE(DISTINCT 1373690815, rt1.c2, rt1.c0, 'f') COLLATE RTRIM) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (COALESCE(DISTINCT 1373690815, rt1.c2, rt1.c0, 'f') COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((COALESCE(DISTINCT 1373690815, rt1.c2, rt1.c0, 'f') COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT ALL vt1.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE ((((vt1.c0 IN ()))<((NOT (rt1.c2))))) GROUP BY vt1.c0, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE ((NOT ((((vt1.c0 IN ()))<((NOT (rt1.c2))))))) GROUP BY vt1.c0, rt1.c1 UNION SELECT vt1.c0, rt1.c1 FROM v0, vt1, rt1 WHERE ((((((vt1.c0 IN ()))<((NOT (rt1.c2))))) ISNULL)) GROUP BY vt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING ((((TOTAL(COUNT(GROUP_CONCAT(MAX(MIN(NULL)))))) NOT BETWEEN (SUM(v0.c0)) AND (TOTAL(TOTAL(MIN(COUNT(*))))))) BETWEEN ((((((((((((((((('tTdk#-%')AND(GROUP_CONCAT(v0.c0))))OR(rt1.c1)))OR(rt1.c0)))AND(MIN(rt1.c2))))OR(rt1.c1)))OR(GROUP_CONCAT(COUNT(MAX(rt1.c0))))))OR(rt1.c1)))AND(rt1.c2))) AND (AVG(COUNT(v0.c0)))) UNION ALL SELECT rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING (NOT (((((TOTAL(COUNT(GROUP_CONCAT(MAX(MIN(NULL)))))) NOT BETWEEN (SUM(v0.c0)) AND (TOTAL(TOTAL(MIN(COUNT(*))))))) BETWEEN ((((((((((((((((('tTdk#-%')AND(GROUP_CONCAT(v0.c0))))OR(rt1.c1)))OR(rt1.c0)))AND(MIN(rt1.c2))))OR(rt1.c1)))OR(GROUP_CONCAT(COUNT(MAX(rt1.c0))))))OR(rt1.c1)))AND(rt1.c2))) AND (AVG(COUNT(v0.c0)))))) UNION ALL SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING ((((((TOTAL(COUNT(GROUP_CONCAT(MAX(MIN(NULL)))))) NOT BETWEEN (SUM(v0.c0)) AND (TOTAL(TOTAL(MIN(COUNT(*))))))) BETWEEN ((((((((((((((((('tTdk#-%')AND(GROUP_CONCAT(v0.c0))))OR(rt1.c1)))OR(rt1.c0)))AND(MIN(rt1.c2))))OR(rt1.c1)))OR(GROUP_CONCAT(COUNT(MAX(rt1.c0))))))OR(rt1.c1)))AND(rt1.c2))) AND (AVG(COUNT(v0.c0))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((~ (CAST('-1224318153' AS REAL)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((~ (CAST('-1224318153' AS REAL)))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((~ (CAST('-1224318153' AS REAL)))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('a')<<(v0.c0))));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('a')<<(v0.c0)))) WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('a')<<(v0.c0)))) WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('a')<<(v0.c0)))) WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('a')<<(v0.c0))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0, vt1.c0 FROM vt1, rt0, rt1 CROSS JOIN v0 ON ((((((rt0.c2)OR(rt1.c2)))OR(rt0.c2))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN 0.2935875177978603 WHEN vt1.c0 THEN 0.41223659467705653 ELSE vt1.c0 END) AND ((((rt0.c1))<((rt1.c1))))) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM vt1, rt0, rt1 CROSS JOIN v0 ON ((((((rt0.c2)OR(rt1.c2)))OR(rt0.c2))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN 0.2935875177978603 WHEN vt1.c0 THEN 0.41223659467705653 ELSE vt1.c0 END) AND ((((rt0.c1))<((rt1.c1))))) GROUP BY rt1.c0, vt1.c0 HAVING GROUP_CONCAT(((rt0.c0)<(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM vt1, rt0, rt1 CROSS JOIN v0 ON ((((((rt0.c2)OR(rt1.c2)))OR(rt0.c2))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN 0.2935875177978603 WHEN vt1.c0 THEN 0.41223659467705653 ELSE vt1.c0 END) AND ((((rt0.c1))<((rt1.c1))))) GROUP BY rt1.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c0)<(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT rt1.c0, vt1.c0 FROM vt1, rt0, rt1 CROSS JOIN v0 ON ((((((rt0.c2)OR(rt1.c2)))OR(rt0.c2))) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN 0.2935875177978603 WHEN vt1.c0 THEN 0.41223659467705653 ELSE vt1.c0 END) AND ((((rt0.c1))<((rt1.c1))))) GROUP BY rt1.c0, vt1.c0 HAVING ((GROUP_CONCAT(((rt0.c0)<(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)==(vt1.c0))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) AND (7.26810235E8))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)=(vt1.c0))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) AND (7.26810235E8))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)=(vt1.c0))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))) AND (7.26810235E8))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1, vt1;
SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1, vt1 WHERE (rt1.c0) UNION SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1, vt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1, vt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1, vt1;
SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0 FROM v0, rt1, rt0 WHERE (((((rt0.c2)GLOB(rt1.c0)))IS NOT(((rt0.c1)>=(rt1.c1))))) GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0 FROM v0, rt1, rt0 WHERE ((NOT (((((rt0.c2)GLOB(rt1.c0)))IS NOT(((rt0.c1)>=(rt1.c1))))))) GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0 FROM v0, rt1, rt0 WHERE (((((((rt0.c2)GLOB(rt1.c0)))IS NOT(((rt0.c1)>=(rt1.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0, v0.c0;
SELECT ALL rt1.c1, v0.c0 FROM v0 INNER JOIN rt1 ON x'' GROUP BY rt1.c1, v0.c0;
SELECT ALL rt1.c1, v0.c0 FROM v0 INNER JOIN rt1 ON x'' GROUP BY rt1.c1, v0.c0 HAVING MIN(COUNT(rt1.c2)) UNION ALL SELECT ALL rt1.c1, v0.c0 FROM v0 INNER JOIN rt1 ON x'' GROUP BY rt1.c1, v0.c0 HAVING (NOT (MIN(COUNT(rt1.c2)))) UNION ALL SELECT rt1.c1, v0.c0 FROM v0 INNER JOIN rt1 ON x'' GROUP BY rt1.c1, v0.c0 HAVING ((MIN(COUNT(rt1.c2))) ISNULL);
SELECT * FROM rt1, vt1;
SELECT ALL * FROM rt1, vt1 WHERE (((rt1.c1) IS TRUE) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT (((rt1.c1) IS TRUE) COLLATE NOCASE))) UNION ALL SELECT * FROM rt1, vt1 WHERE (((((rt1.c1) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT rt0.c1, rt1.c2, vt1.c0, rt0.c2 FROM vt1, rt0, rt1, v0;
SELECT DISTINCT rt0.c1, rt1.c2, vt1.c0, rt0.c2 FROM vt1, rt0, rt1, v0 WHERE (QUOTE(HEX(DISTINCT v0.c0))) UNION SELECT DISTINCT rt0.c1, rt1.c2, vt1.c0, rt0.c2 FROM vt1, rt0, rt1, v0 WHERE ((NOT (QUOTE(HEX(DISTINCT v0.c0))))) UNION SELECT DISTINCT rt0.c1, rt1.c2, vt1.c0, rt0.c2 FROM vt1, rt0, rt1, v0 WHERE (((QUOTE(HEX(DISTINCT v0.c0))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c2, vt1.c0, rt0.c2 FROM vt1, rt0, rt1, v0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<>(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN -634840952 WHEN rt0.c2 THEN vt1.c0 END))) GROUP BY rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)<>(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN -634840952 WHEN rt0.c2 THEN vt1.c0 END))))) GROUP BY rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)!=(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN -634840952 WHEN rt0.c2 THEN vt1.c0 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING COUNT(MAX(rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (COUNT(MAX(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING ((COUNT(MAX(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END  WHEN ((rt0.c1) NOT BETWEEN (-1.94373138E9) AND (rt0.c0)) THEN (rt0.c2 IN (rt0.c1)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END  WHEN ((rt0.c1) NOT BETWEEN (-1.94373138E9) AND (rt0.c0)) THEN (rt0.c2 IN (rt0.c1)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END  WHEN ((rt0.c1) NOT BETWEEN (-1.94373138E9) AND (rt0.c0)) THEN (rt0.c2 IN (rt0.c1)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)=(v0.c0)) END;
SELECT DISTINCT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)==(v0.c0)) END WHERE (((((vt1.c0)|(vt1.c0))) NOT NULL)) UNION SELECT DISTINCT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)=(v0.c0)) END WHERE ((NOT (((((vt1.c0)|(vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)==(v0.c0)) END WHERE (((((((vt1.c0)|(vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)=(v0.c0)) END;
SELECT rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON 0.5974912635068587 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON 0.5974912635068587 WHERE (((((rt1.c0)>>(rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN '0.4115705504818291' THEN rt0.c1 ELSE v0.c0 END) AND ((rt1.c0 IN (rt0.c1))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON 0.5974912635068587 WHERE ((NOT (((((rt1.c0)>>(rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN '0.4115705504818291' THEN rt0.c1 ELSE v0.c0 END) AND ((rt1.c0 IN (rt0.c1))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON 0.5974912635068587 WHERE (((((((rt1.c0)>>(rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN '0.4115705504818291' THEN rt0.c1 ELSE v0.c0 END) AND ((rt1.c0 IN (rt0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON 0.5974912635068587 GROUP BY rt0.c0;
SELECT rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt0.c2, v0.c0, vt1.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN vt1 ON rt0.c2 INNER JOIN rt0 ON ((((((rt1.c1) BETWEEN (3.51072678E8) AND (v0.c0)))AND(NULL)))AND(((0.9234277487232397) IS FALSE))) GROUP BY rt1.c0, rt0.c1, rt0.c0, rt1.c2, rt0.c2, v0.c0, vt1.c0, rt1.c1;
SELECT ALL * FROM vt1, v0, rt1, rt0;
SELECT * FROM vt1, v0, rt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((1.224734039E9 IN ()))) AND ((CASE '-186307646'  WHEN 0.006892134846671727 THEN rt0.c0 ELSE NULL END)))) UNION ALL SELECT ALL * FROM vt1, v0, rt1, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((1.224734039E9 IN ()))) AND ((CASE '-186307646'  WHEN 0.006892134846671727 THEN rt0.c0 ELSE NULL END)))))) UNION ALL SELECT * FROM vt1, v0, rt1, rt0 WHERE ((((((rt0.c0)) BETWEEN (((1.224734039E9 IN ()))) AND ((CASE '-186307646'  WHEN 0.006892134846671727 THEN rt0.c0 ELSE NULL END)))) ISNULL));
SELECT ALL * FROM vt1, v0, rt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(0.9842880951249269 AS INTEGER)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(0.9842880951249269 AS INTEGER)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(0.9842880951249269 AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, v0.c0;
SELECT rt1.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 WHERE (rt1.c1) GROUP BY rt1.c0, rt1.c2, vt1.c0, v0.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c0, rt1.c2, vt1.c0, v0.c0 UNION SELECT rt1.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c0, v0.c0;
SELECT rt1.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, v0.c0;
SELECT ALL rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING CAST(v0.c0 COLLATE BINARY AS TEXT) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (CAST(v0.c0 COLLATE BINARY AS TEXT))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((CAST(v0.c0 COLLATE BINARY AS TEXT)) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING CAST(v0.c0 COLLATE BINARY AS TEXT) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (CAST(v0.c0 COLLATE BINARY AS TEXT))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((CAST(v0.c0 COLLATE BINARY AS TEXT)) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL SUM(((((((((CASE rt1.c0  WHEN v0.c0 THEN rt1.c2 ELSE v0.c0 END)AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))OR((((rt1.c1, rt1.c2, rt1.c1))>((rt1.c2, rt1.c1, rt1.c2))))))AND(rt1.c0)))OR(rt1.c1 COLLATE BINARY))) FROM rt1, v0 ORDER BY (~ (NULLIF('1406939765', rt1.c1))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c1 COLLATE BINARY)==((- (rt1.c1))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)=((- (rt1.c1))))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c1 COLLATE BINARY)==((- (rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (((((((((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c2)))AND((rt1.c2 IN ()))))AND((((rt1.c2))=((rt1.c2))))))OR(rt1.c1)))AND(((((((((v0.c0)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (((((((((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c2)))AND((rt1.c2 IN ()))))AND((((rt1.c2))==((rt1.c2))))))OR(rt1.c1)))AND(((((((((v0.c0)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((((((((((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c2)))AND((rt1.c2 IN ()))))AND((((rt1.c2))=((rt1.c2))))))OR(rt1.c1)))AND(((((((((v0.c0)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0 FROM vt1, rt0 CROSS JOIN v0 ON CAST(UNLIKELY(DISTINCT 0.6923221512227451) AS NUMERIC) INNER JOIN rt1 ON ((((((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((((vt1.c0)AND(rt1.c2)))AND(v0.c0)))))AND(UNLIKELY(rt0.c1))) GROUP BY vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0;
SELECT vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0 FROM vt1, rt0 CROSS JOIN v0 ON CAST(UNLIKELY(DISTINCT 0.6923221512227451) AS NUMERIC) INNER JOIN rt1 ON ((((((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((((vt1.c0)AND(rt1.c2)))AND(v0.c0)))))AND(UNLIKELY(rt0.c1))) WHERE (vt1.c0) GROUP BY vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0 UNION SELECT vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0 FROM vt1, rt0 CROSS JOIN v0 ON CAST(UNLIKELY(DISTINCT 0.6923221512227451) AS NUMERIC) INNER JOIN rt1 ON ((((((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((((vt1.c0)AND(rt1.c2)))AND(v0.c0)))))AND(UNLIKELY(rt0.c1))) WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0 UNION SELECT vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0 FROM vt1, rt0 CROSS JOIN v0 ON CAST(UNLIKELY(DISTINCT 0.6923221512227451) AS NUMERIC) INNER JOIN rt1 ON ((((((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((((vt1.c0)AND(rt1.c2)))AND(v0.c0)))))AND(UNLIKELY(rt0.c1))) WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0 FROM vt1, rt0 CROSS JOIN v0 ON CAST(UNLIKELY(DISTINCT 0.6923221512227451) AS NUMERIC) INNER JOIN rt1 ON ((((((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((((vt1.c0)AND(rt1.c2)))AND(v0.c0)))))AND(UNLIKELY(rt0.c1))) GROUP BY vt1.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c0;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING CASE COUNT(MAX(COUNT(SUM(GROUP_CONCAT(rt0.c0)))))  WHEN MAX(rt0.c1) THEN MAX(rt0.c2) END UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE COUNT(MAX(COUNT(SUM(GROUP_CONCAT(rt0.c0)))))  WHEN MAX(rt0.c1) THEN MAX(rt0.c2) END)) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((CASE COUNT(MAX(COUNT(SUM(GROUP_CONCAT(rt0.c0)))))  WHEN MAX(rt0.c1) THEN MAX(rt0.c2) END) ISNULL);
SELECT ALL * FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c0)|(rt0.c0)))OR(rt1.c0)))OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (x'')))) LEFT OUTER JOIN v0 ON (- (rt1.c0 COLLATE RTRIM));
SELECT * FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c0)|(rt0.c0)))OR(rt1.c0)))OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (x'')))) LEFT OUTER JOIN v0 ON (- (rt1.c0 COLLATE RTRIM)) WHERE ('A|	G') UNION ALL SELECT ALL * FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c0)|(rt0.c0)))OR(rt1.c0)))OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (x'')))) LEFT OUTER JOIN v0 ON (- (rt1.c0 COLLATE RTRIM)) WHERE ((NOT ('A|	G'))) UNION ALL SELECT * FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c0)|(rt0.c0)))OR(rt1.c0)))OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (x'')))) LEFT OUTER JOIN v0 ON (- (rt1.c0 COLLATE RTRIM)) WHERE ((('A|	G') ISNULL));
SELECT ALL * FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c0)|(rt0.c0)))OR(rt1.c0)))OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (x'')))) LEFT OUTER JOIN v0 ON (- (rt1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM rt1, v0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM rt1, v0, vt1 WHERE (((((rt1.c2)GLOB(v0.c0))) NOT BETWEEN ((((rt1.c0))>(('-1821829362')))) AND ((+ (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, v0, vt1 WHERE ((NOT (((((rt1.c2)GLOB(v0.c0))) NOT BETWEEN ((((rt1.c0))>(('-1821829362')))) AND ((+ (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, v0, vt1 WHERE (((((((rt1.c2)GLOB(v0.c0))) NOT BETWEEN ((((rt1.c0))>(('-1821829362')))) AND ((+ (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, vt1 NOT INDEXED;
SELECT rt1.c1, rt0.c1, rt1.c2, rt0.c2 FROM v0, vt1, rt1, rt0 GROUP BY rt1.c1, rt0.c1, rt1.c2, rt0.c2;
SELECT ALL rt1.c1, rt0.c1, rt1.c2, rt0.c2 FROM v0, vt1, rt1, rt0 WHERE (CASE WHEN UPPER(DISTINCT x'') THEN rt0.c2 COLLATE BINARY END) GROUP BY rt1.c1, rt0.c1, rt1.c2, rt0.c2 UNION SELECT rt1.c1, rt0.c1, rt1.c2, rt0.c2 FROM v0, vt1, rt1, rt0 WHERE ((NOT (CASE WHEN UPPER(DISTINCT x'') THEN rt0.c2 COLLATE BINARY END))) GROUP BY rt1.c1, rt0.c1, rt1.c2, rt0.c2 UNION SELECT ALL rt1.c1, rt0.c1, rt1.c2, rt0.c2 FROM v0, vt1, rt1, rt0 WHERE (((CASE WHEN UPPER(DISTINCT x'') THEN rt0.c2 COLLATE BINARY END) ISNULL)) GROUP BY rt1.c1, rt0.c1, rt1.c2, rt0.c2;
SELECT rt1.c1, rt0.c1, rt1.c2, rt0.c2 FROM v0, vt1, rt1, rt0 GROUP BY rt1.c1, rt0.c1, rt1.c2, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c0)) IS TRUE) UNION ALL SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 HAVING (NOT (((AVG(rt0.c0)) IS TRUE))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 HAVING ((((AVG(rt0.c0)) IS TRUE)) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c0)) IS TRUE) UNION ALL SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 HAVING (NOT (((AVG(rt0.c0)) IS TRUE))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 HAVING ((((AVG(rt0.c0)) IS TRUE)) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM v0, rt1, vt1, rt0 GROUP BY rt0.c1, v0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt1.c2, v0.c0 FROM rt1, vt1, v0, rt0;
SELECT rt0.c2, rt1.c2, v0.c0 FROM rt1, vt1, v0, rt0 WHERE (((((0.05726916061253684) NOT BETWEEN (v0.c0) AND (vt1.c0)))>>(((rt0.c2)|(rt0.c2))))) UNION ALL SELECT rt0.c2, rt1.c2, v0.c0 FROM rt1, vt1, v0, rt0 WHERE ((NOT (((((0.05726916061253684) NOT BETWEEN (v0.c0) AND (vt1.c0)))>>(((rt0.c2)|(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, v0.c0 FROM rt1, vt1, v0, rt0 WHERE (((((((0.05726916061253684) NOT BETWEEN (v0.c0) AND (vt1.c0)))>>(((rt0.c2)|(rt0.c2))))) ISNULL));
SELECT ALL rt0.c2, rt1.c2, v0.c0 FROM rt1, vt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (((v0.c0 IN (v0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (((v0.c0 IN (v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((((v0.c0 IN (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1, rt0, v0, vt1 GROUP BY rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0;
SELECT rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE (CASE (rt1.c0 IN (rt0.c2))  WHEN TRIM(DISTINCT rt0.c2) THEN TRIM('1323533081') END) GROUP BY rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE ((NOT (CASE (rt1.c0 IN (rt0.c2))  WHEN TRIM(DISTINCT rt0.c2) THEN TRIM('1323533081') END))) GROUP BY rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE (((CASE (rt1.c0 IN (rt0.c2))  WHEN TRIM(DISTINCT rt0.c2) THEN TRIM('1323533081') END) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1, rt0, v0, vt1 GROUP BY rt0.c1, rt0.c2, rt1.c2, rt0.c0, v0.c0, rt1.c1, vt1.c0, rt1.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(MIN(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(MIN(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(MIN(rt0.c0))) ISNULL);
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((((']\ndD%_')AND(((rt1.c2)IS NOT(rt1.c0)))))OR(0.7236591808486891))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE ((NOT (((((']\ndD%_')AND(((rt1.c2)IS NOT(rt1.c0)))))OR(0.7236591808486891))))) UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((((((']\ndD%_')AND(((rt1.c2)IS NOT(rt1.c0)))))OR(0.7236591808486891))) ISNULL));
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (((-1902389661)) BETWEEN ((((vt1.c0)>>(NULL)))) AND ((CASE WHEN rt1.c1 THEN NULL END)));
SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (((-1902389661)) BETWEEN ((((vt1.c0)>>(NULL)))) AND ((CASE WHEN rt1.c1 THEN NULL END))) WHERE (((x'58c1') NOT BETWEEN (rt1.c2) AND (rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (((-1902389661)) BETWEEN ((((vt1.c0)>>(NULL)))) AND ((CASE WHEN rt1.c1 THEN NULL END))) WHERE ((NOT (((x'58c1') NOT BETWEEN (rt1.c2) AND (rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (((-1902389661)) BETWEEN ((((vt1.c0)>>(NULL)))) AND ((CASE WHEN rt1.c1 THEN NULL END))) WHERE (((((x'58c1') NOT BETWEEN (rt1.c2) AND (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN rt1 ON (((-1902389661)) BETWEEN ((((vt1.c0)>>(NULL)))) AND ((CASE WHEN rt1.c1 THEN NULL END)));
SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1, v0 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1, v0 WHERE (x'') GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 UNION SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1, v0 WHERE ((NOT (x''))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 UNION SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1, v0 WHERE (((x'') ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1, v0 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2 HAVING ((((rt0.c0)OR(rt0.c0 COLLATE NOCASE)))OR(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2 HAVING (NOT (((((rt0.c0)OR(rt0.c0 COLLATE NOCASE)))OR(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2 HAVING ((((((rt0.c0)OR(rt0.c0 COLLATE NOCASE)))OR(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2 HAVING ((((rt0.c0)OR(rt0.c0 COLLATE NOCASE)))OR(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2 HAVING (NOT (((((rt0.c0)OR(rt0.c0 COLLATE NOCASE)))OR(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2 HAVING ((((((rt0.c0)OR(rt0.c0 COLLATE NOCASE)))OR(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt1.c2 FROM vt1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt1.c2;
SELECT ALL rt0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0, v0, vt1;
SELECT ALL rt0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE ((rt0.c2 IN (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT rt0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE ((NOT ((rt0.c2 IN (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0, v0, vt1 WHERE ((((rt0.c2 IN (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0, v0, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (HEX((rt1.c1 IN ()))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (HEX((rt1.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((HEX((rt1.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1, rt0.c0 FROM rt1 CROSS JOIN rt0 ON (((rt0.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c1 END, CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt1.c1)<=(rt0.c2)), LOWER(rt1.c2), ((0X7d0862ed)&(rt1.c0)))) AND ((((rt1.c0) IS FALSE), DATE(rt1.c0, rt1.c0, rt1.c1), rt0.c0, rt0.c2, (rt0.c0 IN (rt0.c0, rt0.c0))))) GROUP BY rt1.c1, rt0.c0;
SELECT rt1.c1, rt0.c0 FROM rt1 CROSS JOIN rt0 ON (((rt0.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c1 END, CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt1.c1)<=(rt0.c2)), LOWER(rt1.c2), ((0X7d0862ed)&(rt1.c0)))) AND ((((rt1.c0) IS FALSE), DATE(rt1.c0, rt1.c0, rt1.c1), rt0.c0, rt0.c2, (rt0.c0 IN (rt0.c0, rt0.c0))))) WHERE (((rt1.c0 COLLATE NOCASE)|(((rt0.c2)>(rt0.c2))))) GROUP BY rt1.c1, rt0.c0 UNION SELECT ALL rt1.c1, rt0.c0 FROM rt1 CROSS JOIN rt0 ON (((rt0.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c1 END, CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt1.c1)<=(rt0.c2)), LOWER(rt1.c2), ((0x7d0862ed)&(rt1.c0)))) AND ((((rt1.c0) IS FALSE), DATE(rt1.c0, rt1.c0, rt1.c1), rt0.c0, rt0.c2, (rt0.c0 IN (rt0.c0, rt0.c0))))) WHERE ((NOT (((rt1.c0 COLLATE NOCASE)|(((rt0.c2)>(rt0.c2))))))) GROUP BY rt1.c1, rt0.c0 UNION SELECT ALL rt1.c1, rt0.c0 FROM rt1 CROSS JOIN rt0 ON (((rt0.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c1 END, CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt1.c1)<=(rt0.c2)), LOWER(rt1.c2), ((0X7d0862ed)&(rt1.c0)))) AND ((((rt1.c0) IS FALSE), DATE(rt1.c0, rt1.c0, rt1.c1), rt0.c0, rt0.c2, (rt0.c0 IN (rt0.c0, rt0.c0))))) WHERE (((((rt1.c0 COLLATE NOCASE)|(((rt0.c2)>(rt0.c2))))) ISNULL)) GROUP BY rt1.c1, rt0.c0;
SELECT ALL rt1.c1, rt0.c0 FROM rt1 CROSS JOIN rt0 ON (((rt0.c0, rt1.c1, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c1 END, CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt1.c1)<=(rt0.c2)), LOWER(rt1.c2), ((0X7d0862ed)&(rt1.c0)))) AND ((((rt1.c0) IS FALSE), DATE(rt1.c0, rt1.c0, rt1.c1), rt0.c0, rt0.c2, (rt0.c0 IN (rt0.c0, rt0.c0))))) GROUP BY rt1.c1, rt0.c0;
SELECT ALL rt1.c2, rt1.c0, rt0.c1, rt0.c2, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1, rt0, vt1 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, v0.c0, rt1.c1, rt0.c0;
SELECT ALL rt1.c2, rt1.c0, rt0.c1, rt0.c2, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1, rt0, vt1 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, v0.c0, rt1.c1, rt0.c0 HAVING COUNT(GROUP_CONCAT(COUNT(rt0.c1))) UNION ALL SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1, rt0, vt1 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, v0.c0, rt1.c1, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt0.c1, rt0.c2, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1, rt0, vt1 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2, v0.c0, rt1.c1, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(rt0.c1)))) ISNULL);
SELECT * FROM rt1 NATURAL JOIN v0;
SELECT * FROM rt1 NATURAL JOIN v0 WHERE (CAST(((rt1.c1) NOTNULL) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE ((NOT (CAST(((rt1.c1) NOTNULL) AS NUMERIC)))) UNION ALL SELECT * FROM rt1 NATURAL JOIN v0 WHERE (((CAST(((rt1.c1) NOTNULL) AS NUMERIC)) ISNULL));
SELECT * FROM rt1 NATURAL JOIN v0;
SELECT DISTINCT vt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0, vt1;
SELECT DISTINCT vt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0, vt1 WHERE (NULLIF(rt1.c0 COLLATE BINARY, ((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)))) UNION SELECT DISTINCT vt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0, vt1 WHERE ((NOT (NULLIF(rt1.c0 COLLATE BINARY, ((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)))))) UNION SELECT DISTINCT vt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0, vt1 WHERE (((NULLIF(rt1.c0 COLLATE BINARY, ((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)))) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c2, rt0.c0 FROM rt1, rt0, vt1;
SELECT rt0.c2, vt1.c0, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, vt1.c0, v0.c0;
SELECT ALL rt0.c2, vt1.c0, v0.c0 FROM v0, vt1, rt0 WHERE (((vt1.c0) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END) AND (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))))) GROUP BY rt0.c2, vt1.c0, v0.c0 UNION SELECT rt0.c2, vt1.c0, v0.c0 FROM v0, vt1, rt0 WHERE ((NOT (((vt1.c0) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END) AND (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))))))) GROUP BY rt0.c2, vt1.c0, v0.c0 UNION SELECT rt0.c2, vt1.c0, v0.c0 FROM v0, vt1, rt0 WHERE (((((vt1.c0) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END) AND (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, vt1.c0, v0.c0;
SELECT rt0.c2, vt1.c0, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, vt1.c0, v0.c0;
SELECT rt1.c1, rt1.c2, v0.c0, vt1.c0 FROM vt1, rt1 RIGHT OUTER JOIN v0 ON UNICODE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) GROUP BY rt1.c1, rt1.c2, v0.c0, vt1.c0;
SELECT rt1.c1, rt1.c2, v0.c0, vt1.c0 FROM vt1, rt1 RIGHT OUTER JOIN v0 ON UNICODE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) GROUP BY rt1.c1, rt1.c2, v0.c0, vt1.c0 HAVING SUM(ABS(DISTINCT COUNT(v0.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0, vt1.c0 FROM vt1, rt1 RIGHT OUTER JOIN v0 ON UNICODE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) GROUP BY rt1.c1, rt1.c2, v0.c0, vt1.c0 HAVING (NOT (SUM(ABS(DISTINCT COUNT(v0.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0, vt1.c0 FROM vt1, rt1 RIGHT OUTER JOIN v0 ON UNICODE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) GROUP BY rt1.c1, rt1.c2, v0.c0, vt1.c0 HAVING ((SUM(ABS(DISTINCT COUNT(v0.c0)))) ISNULL);
SELECT * FROM rt1, rt0, v0, vt1;
SELECT * FROM rt1, rt0, v0, vt1 WHERE (0Xfffffffff94849eb) UNION ALL SELECT ALL * FROM rt1, rt0, v0, vt1 NOT INDEXED WHERE ((NOT (0Xfffffffff94849eb))) UNION ALL SELECT * FROM rt1, rt0, v0, vt1 WHERE (((0Xfffffffff94849eb) ISNULL));
SELECT * FROM rt1, rt0, v0, vt1;
SELECT DISTINCT rt0.c0, rt1.c2, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c0 END) AND (CASE WHEN rt0.c2 THEN rt1.c1 END));
SELECT DISTINCT rt0.c0, rt1.c2, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c0 END) AND (CASE WHEN rt0.c2 THEN rt1.c1 END)) WHERE ((((rt1.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt1.c2, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c0 END) AND (CASE WHEN rt0.c2 THEN rt1.c1 END)) WHERE ((NOT ((((rt1.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0, rt1.c2, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c0 END) AND (CASE WHEN rt0.c2 THEN rt1.c1 END)) WHERE ((((((rt1.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c2, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, rt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c0 END) AND (CASE WHEN rt0.c2 THEN rt1.c1 END));
SELECT ALL vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2;
SELECT vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt0, vt1, rt1 WHERE (((rt0.c1) BETWEEN (CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt0.c0 END) AND ((rt0.c1 IN ())))) GROUP BY vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2 UNION SELECT vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt0, vt1, rt1 WHERE ((NOT (((rt0.c1) BETWEEN (CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt0.c0 END) AND ((rt0.c1 IN ())))))) GROUP BY vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2 UNION SELECT vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt0, vt1, rt1 WHERE (((((rt0.c1) BETWEEN (CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt0.c0 END) AND ((rt0.c1 IN ())))) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c0, rt1.c2, rt1.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(AVG(rt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(AVG(rt0.c0))) ISNULL);
SELECT v0.c0, vt1.c0 FROM vt1, v0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CAST(v0.c0 AS REAL))))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CAST(v0.c0 AS REAL))))))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CAST(v0.c0 AS REAL))))) ISNULL));
SELECT v0.c0, vt1.c0 FROM vt1, v0;
