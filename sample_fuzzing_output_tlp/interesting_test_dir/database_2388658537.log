-- Time: 2024/06/10 04:30:22
-- Database: database37
-- Database version: 3.40.0
-- seed value: 2388658537
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
UPDATE OR ABORT vt0 SET c0=0Xffffffffcbdee2e9 WHERE ((vt0.c0 IN ()) IN ()); -- 0ms;
INSERT OR ABORT INTO rt1(c0, c2) VALUES (0xffffffffe1e3649b, x'19fd'), ('-874585367', x'e5cc'), ('-1694731443', '-1406621380'); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c1, c0) VALUES (x'', 0.17010931329842183, x'bfc6'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=0Xffffffff9afc734d WHERE vt0.c0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('ꛭ]4+)P'); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (x'922f'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 INT ); -- 1ms;
UPDATE OR ROLLBACK rt1 SET (c1)=(x'') WHERE (rt1.c1 COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES ('-1406621380', '0.17010931329842183'), ('1076492644', 'Uo'), (0.1064426621265504, 0.48438904125181437), (x'', -956544943), (NULL, '-537811219'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('bV,2_'); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=NULL WHERE (((rt1.c2 IN ()))OR(CAST(rt1.c2 AS INTEGER))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37844'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31004'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE vt0; -- 1ms;
UPDATE vt0 SET (c0)=(x'') WHERE (((NULL))>((((vt0.c0)>(vt0.c0))))); -- 0ms;
UPDATE vt0 SET c0='uo', c0=x'231b', c0=NULL WHERE (vt0.c0 COLLATE RTRIM IN (((vt0.c0) NOTNULL))); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=x'', c2='' WHERE DATETIME((rt1.c0 IN ()), ((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END); -- 0ms;
PRAGMA cache_size = 8870049752022903812; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('{_o'); -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET c0='' WHERE CAST((NOT (rt0.c3)) AS TEXT); -- 0ms;
UPDATE rt0 SET c2='-316729079'; -- 1ms;
UPDATE OR IGNORE rt0 SET (c4)=(x''); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c5)=('921148430') WHERE ABS(DISTINCT (((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.48438904125181437); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES (0.23797961476489626, 1176666385); -- 1ms;
INSERT OR ABORT INTO rt1(c0, c1) VALUES (0.7781298166582044, '921148430'), ('1176666385', 0.007817710086045704), ('1843548731', 0.2246988111016719), ('', '1%,v3'), ('679866235', NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('I'); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c2, c4, c5) VALUES ('', '\rDW3', 0X6de2523b, NULL); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=('') WHERE COALESCE(CAST('-505191269' AS INTEGER), ((rt0.c4)-(rt0.c3))); -- 0ms;
UPDATE rt1 SET (c2, c0)=(NULL, x'0f9f') WHERE (((rt1.c2)) BETWEEN ((0.28772119141930264)) AND ((((rt1.c1) NOTNULL)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-956544943,7');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1176638406); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c0) VALUES (0.44396720172313753, x'', 0.5692380486740795); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57297'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=1175531572,7');\n; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.16718792865327647, c0='1573012103', c0=x'8a75'; -- 0ms;
VACUUM temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP TABLE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES ('1785414132', 0.3624289474517549), (x'', '921148430'), (x'cef1', NULL), (x'', '-1406621380'), (0.007817710086045704, '476775671'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('脑6L', x'c553') WHERE CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL); -- 1ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=('eb7*}/') WHERE rt1.c0; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=('741139920') WHERE ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))OR(rt1.c2)))AND(((rt1.c2)IS NOT(rt1.c2)))); -- 0ms;
PRAGMA main.optimize; -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (0.18852544121743564, 1141655309); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('흹b䨴TP	69'), (0.1064426621265504), (0.2739580073619533); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (1.141655309E9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1281556209); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO rt1(c1) VALUES ('569467936'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (0.7039795767974786, -123540075, ''), (0x3771a144, x'01cb', 6.79866235E8), ('-797276378', x'2ab3', x''); -- 2ms;
UPDATE OR IGNORE rt1 SET c1=NULL WHERE (('569467936')||(((rt1.c2) NOT BETWEEN (rt1.c0) AND (0.18852544121743564)))); -- 1ms;
UPDATE OR ROLLBACK rt1 SET c1='&K'; -- 1ms;
INSERT OR ROLLBACK INTO rt1(c1, c2, c0) VALUES ('-1406621380', x'', NULL), (x'', 0.7781298166582044, CAST('''w1-500000aw>Sr' AS REAL)), (0xffffffff9e1cca51, NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=('YIG1uwKjI', NULL, NULL) WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE); -- 0ms;
UPDATE rt1 SET c1=0.8293194116512116, c1=NULL, c2=NULL; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, 0.7781298166582044, 0.8447281014744422); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(9.30193732E8) WHERE ((((vt0.c0)>(vt0.c0)))>(((((vt0.c0)OR(x'')))OR(vt0.c0)))); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.33121140162483065); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL WHERE ((((((vt0.c0)GLOB(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((LIKELIHOOD(vt0.c0, 0.0496005189656078) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((LIKELIHOOD(vt0.c0, 0.0496005189656078) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((LIKELIHOOD(vt0.c0, 0.0496005189656078) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE (CAST('1843548731' AS INTEGER)) UNION SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE ((NOT (CAST('1843548731' AS INTEGER)))) UNION SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE (((CAST('1843548731' AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1, vt0;
SELECT ALL rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((~ (TRIM(rt1.c1)))) GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT ((~ (TRIM(rt1.c1)))))) GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((((~ (TRIM(rt1.c1)))) ISNULL)) GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ ((vt0.c0 IN ())))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((+ ((vt0.c0 IN ())))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((x'f4a6697d') ISNULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((x'f4a6697d') ISNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((x'f4a6697d') ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0))))<(((~ (rt1.c0)))))) GROUP BY vt0.c0, rt1.c0 UNION SELECT vt0.c0, rt1.c0 FROM vt0, rt1 WHERE ((NOT ((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0))))<(((~ (rt1.c0)))))))) GROUP BY vt0.c0, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 WHERE ((((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0))))<(((~ (rt1.c0)))))) ISNULL)) GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0;
SELECT ALL rt1.c1 FROM rt1 INNER JOIN vt0 ON rt1.c1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 INNER JOIN vt0 ON rt1.c1 GROUP BY rt1.c1 HAVING AVG(TOTAL(SUM(vt0.c0))) UNION ALL SELECT ALL rt1.c1 FROM rt1 INNER JOIN vt0 ON rt1.c1 GROUP BY rt1.c1 HAVING (NOT (AVG(TOTAL(SUM(vt0.c0))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 INNER JOIN vt0 ON rt1.c1 GROUP BY rt1.c1 HAVING ((AVG(TOTAL(SUM(vt0.c0)))) ISNULL);
SELECT ALL rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1;
SELECT ALL rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1 WHERE ('915718971') UNION ALL SELECT rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1 NOT INDEXED WHERE ((NOT ('915718971'))) UNION ALL SELECT rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1 WHERE ((('915718971') ISNULL));
SELECT ALL rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((((rt1.c0)AND(rt1.c2))) NOT BETWEEN (((vt0.c0)>>(rt1.c2))) AND (0.26179032984386774))) UNION SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((((rt1.c0)AND(rt1.c2))) NOT BETWEEN (((vt0.c0)>>(rt1.c2))) AND (0.26179032984386774))))) UNION SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((((((rt1.c0)AND(rt1.c2))) NOT BETWEEN (((vt0.c0)>>(rt1.c2))) AND (0.26179032984386774))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((((((((CASE WHEN rt1.c2 THEN NULL ELSE rt1.c0 END)AND(((((rt1.c2)OR(rt1.c1)))OR(vt0.c0)))))AND(CAST(rt1.c0 AS BLOB))))OR(0X14d0102e COLLATE BINARY)))OR(CASE x''  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END))) GROUP BY rt1.c1, vt0.c0 UNION SELECT rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((((((CASE WHEN rt1.c2 THEN NULL ELSE rt1.c0 END)AND(((((rt1.c2)OR(rt1.c1)))OR(vt0.c0)))))AND(CAST(rt1.c0 AS BLOB))))OR(0X14d0102e COLLATE BINARY)))OR(CASE x''  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END))))) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((((((((((CASE WHEN rt1.c2 THEN NULL ELSE rt1.c0 END)AND(((((rt1.c2)OR(rt1.c1)))OR(vt0.c0)))))AND(CAST(rt1.c0 AS BLOB))))OR(0X14d0102e COLLATE BINARY)))OR(CASE x''  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END))) ISNULL)) GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING ((MIN(vt0.c0))>(MAX(COUNT(GROUP_CONCAT(SUM(rt1.c1)))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (NOT (((MIN(vt0.c0))>(MAX(COUNT(GROUP_CONCAT(SUM(rt1.c1)))))))) UNION ALL SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING ((((MIN(vt0.c0))>(MAX(COUNT(GROUP_CONCAT(SUM(rt1.c1))))))) ISNULL);
SELECT ALL rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1;
SELECT ALL rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (((rt1.c1)+(vt0.c0))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((NOT (((rt1.c1)+(vt0.c0))))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (((((rt1.c1)+(vt0.c0))) ISNULL));
SELECT ALL rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE ((~ (vt0.c0))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT ((~ (vt0.c0))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)))<=(LOWER(rt1.c1)))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)))<=(LOWER(rt1.c1)))))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)))<=(LOWER(rt1.c1)))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (~ (rt1.c0)) UNION ALL SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (NOT ((~ (rt1.c0)))) UNION ALL SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (((~ (rt1.c0))) ISNULL);
SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (~ (rt1.c0)) UNION ALL SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (NOT ((~ (rt1.c0)))) UNION ALL SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (((~ (rt1.c0))) ISNULL);
SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT MAX(((((((rt1.c2)OR(vt0.c0)))AND(rt1.c2)))LIKE(NULL))) FROM vt0, rt1 ORDER BY (((('') ISNULL)) BETWEEN (((0.3624289474517549) BETWEEN (rt1.c2) AND (rt1.c1))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0)<(rt1.c2))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((+ (((rt1.c0)<(rt1.c2))))))) UNION ALL SELECT * FROM rt1 WHERE ((((+ (((rt1.c0)<(rt1.c2))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT NULL) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT NULL) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CASE AVG(vt0.c0)  WHEN vt0.c0 THEN COUNT(*) ELSE TOTAL(vt0.c0) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CASE AVG(vt0.c0)  WHEN vt0.c0 THEN COUNT(*) ELSE TOTAL(vt0.c0) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CASE AVG(vt0.c0)  WHEN vt0.c0 THEN COUNT(*) ELSE TOTAL(vt0.c0) END)) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE ((((vt0.c0)|(rt1.c2)) IN (((rt1.c2)>=(vt0.c0)), vt0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT ((((vt0.c0)|(rt1.c2)) IN (((rt1.c2)>=(vt0.c0)), vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((((((vt0.c0)|(rt1.c2)) IN (((rt1.c2)>=(vt0.c0)), vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (CASE (+ (vt0.c0))  WHEN ((((rt1.c0)OR(vt0.c0)))OR(NULL)) THEN (rt1.c2 IN ()) END) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (CASE (+ (vt0.c0))  WHEN ((((rt1.c0)OR(vt0.c0)))OR(NULL)) THEN (rt1.c2 IN ()) END))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((CASE (+ (vt0.c0))  WHEN ((((rt1.c0)OR(vt0.c0)))OR(NULL)) THEN (rt1.c2 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN vt0.c0 END) NOT BETWEEN (((0.12087114466973337)IS NOT(rt1.c2))) AND (CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c2, rt1.c1, vt0.c0;
SELECT ALL rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN vt0.c0 END) NOT BETWEEN (((0.12087114466973337)IS NOT(rt1.c2))) AND (CAST(rt1.c1 AS TEXT))) WHERE (TRIM((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), '-1393683030')) GROUP BY rt1.c2, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN vt0.c0 END) NOT BETWEEN (((0.12087114466973337)IS NOT(rt1.c2))) AND (CAST(rt1.c1 AS TEXT))) WHERE ((NOT (TRIM((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), '-1393683030')))) GROUP BY rt1.c2, rt1.c1, vt0.c0 UNION SELECT rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN vt0.c0 END) NOT BETWEEN (((0.12087114466973337)IS NOT(rt1.c2))) AND (CAST(rt1.c1 AS TEXT))) WHERE (((TRIM((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), '-1393683030')) ISNULL)) GROUP BY rt1.c2, rt1.c1, vt0.c0;
SELECT rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN vt0.c0 END) NOT BETWEEN (((0.12087114466973337)IS NOT(rt1.c2))) AND (CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c2, rt1.c1, vt0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING -3.16729079E8 UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (-3.16729079E8)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((-3.16729079E8) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING -3.16729079E8 UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (-3.16729079E8)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((-3.16729079E8) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (LOWER((NOT (rt1.c0)))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (LOWER((NOT (rt1.c0)))))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((LOWER((NOT (rt1.c0)))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (0.6987815986154776) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (0.6987815986154776))) UNION SELECT DISTINCT * FROM rt1 WHERE (((0.6987815986154776) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((~ (COALESCE(rt1.c0, NULL)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((~ (COALESCE(rt1.c0, NULL)))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((~ (COALESCE(rt1.c0, NULL)))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 NOT INDEXED, vt0 GROUP BY rt1.c2 HAVING ((MAX(AVG(SUM(rt1.c0)))) NOTNULL) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING (NOT (((MAX(AVG(SUM(rt1.c0)))) NOTNULL))) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING ((((MAX(AVG(SUM(rt1.c0)))) NOTNULL)) ISNULL);
SELECT vt0.c0 FROM rt1, vt0;
SELECT ALL vt0.c0 FROM rt1, vt0 NOT INDEXED WHERE (CAST((('y')IS(rt1.c0)) AS INTEGER)) UNION ALL SELECT vt0.c0 FROM rt1, vt0 WHERE ((NOT (CAST((('y')IS(rt1.c0)) AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM rt1, vt0 WHERE (((CAST((('y')IS(rt1.c0)) AS INTEGER)) ISNULL));
SELECT vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE (CASE (+ (rt1.c1))  WHEN (~ (rt1.c1)) THEN 'xI' END) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (CASE (+ (rt1.c1))  WHEN (~ (rt1.c1)) THEN 'xI' END))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE (((CASE (+ (rt1.c1))  WHEN (~ (rt1.c1)) THEN 'xI' END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ((+ ((rt1.c2 IN (rt1.c0, rt1.c1))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((+ ((rt1.c2 IN (rt1.c0, rt1.c1))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((+ ((rt1.c2 IN (rt1.c0, rt1.c1))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE ((~ (rt1.c1)) COLLATE RTRIM) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT ((~ (rt1.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((((~ (rt1.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))&(((rt1.c0) BETWEEN (rt1.c1) AND (''))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))&(((rt1.c0) BETWEEN (rt1.c1) AND (''))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))&(((rt1.c0) BETWEEN (rt1.c1) AND (''))))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT TOTAL((((rt1.c1)) NOT BETWEEN ((((((rt1.c2)AND(rt1.c1)))OR(1.7976931348623157E308)))) AND ((LTRIM(rt1.c0))))) FROM rt1, vt0 ORDER BY (((0X5c0de04e))==(((((rt1.c2, rt1.c0, vt0.c0)) BETWEEN ((rt1.c2, vt0.c0, rt1.c1)) AND ((rt1.c2, rt1.c0, vt0.c0)))))) ASC;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'') NOTNULL)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND ((- (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((x'') NOTNULL)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND ((- (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((x'') NOTNULL)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND ((- (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (x'a783') UNION SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT (x'a783'))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((x'a783') ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM vt0, rt1;
SELECT vt0.c0 FROM vt0 NOT INDEXED, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE (((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED, rt1 GROUP BY vt0.c0;
SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING rt1.c1 UNION ALL SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING rt1.c1 UNION ALL SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('-2050534917') AND (vt0.c0)))) AND ((vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('-2050534917') AND (vt0.c0)))) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('-2050534917') AND (vt0.c0)))) AND ((vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 WHEN -1998798294 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN '447725945' THEN rt1.c0 END) IS TRUE)) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 WHEN -1998798294 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN '447725945' THEN rt1.c0 END) IS TRUE)))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 WHEN -1998798294 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN '447725945' THEN rt1.c0 END) IS TRUE)) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON (((vt0.c0 IN ()))IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (x'')))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON (((vt0.c0 IN ()))IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (x'')))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0 HAVING AVG(CASE SUM(rt1.c0)  WHEN GROUP_CONCAT(rt1.c2) THEN vt0.c0 ELSE vt0.c0 END) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON (((vt0.c0 IN ()))IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (x'')))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0 HAVING (NOT (AVG(CASE SUM(rt1.c0)  WHEN GROUP_CONCAT(rt1.c2) THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON (((vt0.c0 IN ()))IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (x'')))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0 HAVING ((AVG(CASE SUM(rt1.c0)  WHEN GROUP_CONCAT(rt1.c2) THEN vt0.c0 ELSE vt0.c0 END)) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED WHERE (CAST(UNLIKELY(rt1.c2) AS NUMERIC)) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CAST(UNLIKELY(rt1.c2) AS NUMERIC)))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST(UNLIKELY(rt1.c2) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((((rt1.c1) NOT NULL)) NOT BETWEEN ((('')IS(rt1.c2))) AND (NULL))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c1) NOT NULL)) NOT BETWEEN ((('')IS(rt1.c2))) AND (NULL))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((((rt1.c1) NOT NULL)) NOT BETWEEN ((('')IS(rt1.c2))) AND (NULL))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((TOTAL(MAX(MIN(rt1.c1)))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (COUNT(rt1.c1))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((TOTAL(MAX(MIN(rt1.c1)))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (COUNT(rt1.c1))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((((TOTAL(MAX(MIN(rt1.c1)))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (COUNT(rt1.c1)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (LIKELIHOOD(rt1.c2, 0.53326840031854) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (LIKELIHOOD(rt1.c2, 0.53326840031854) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((LIKELIHOOD(rt1.c2, 0.53326840031854) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE (LTRIM((~ (rt1.c0)))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE ((NOT (LTRIM((~ (rt1.c0)))))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE (((LTRIM((~ (rt1.c0)))) ISNULL)) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(AVG(vt0.c0))) ISNULL);
SELECT ALL MAX(((((rt1.c2)>(vt0.c0)))>=(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2))))) FROM rt1, vt0;
SELECT ALL * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (((((NULL)AND((- (vt0.c0)))))OR(((((vt0.c0)AND(rt1.c0)))AND(rt1.c0))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (((((NULL)AND((- (vt0.c0)))))OR(((((vt0.c0)AND(rt1.c0)))AND(rt1.c0))))))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((((((NULL)AND((- (vt0.c0)))))OR(((((vt0.c0)AND(rt1.c0)))AND(rt1.c0))))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ ((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ ((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ ((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING TOTAL(COUNT(SUM(rt1.c2))) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING (NOT (TOTAL(COUNT(SUM(rt1.c2))))) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING ((TOTAL(COUNT(SUM(rt1.c2)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (CASE (rt1.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN json_array_length('1675820028', rt1.c1) ELSE TRIM(vt0.c0) END) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (CASE (rt1.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN json_array_length('1675820028', rt1.c1) ELSE TRIM(vt0.c0) END))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((CASE (rt1.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN json_array_length('1675820028', rt1.c1) ELSE TRIM(vt0.c0) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (rt1.c2 COLLATE RTRIM) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c2 COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 HAVING ((MIN(rt1.c1))-(((rt1.c0) ISNULL))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 HAVING (NOT (((MIN(rt1.c1))-(((rt1.c0) ISNULL))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 HAVING ((((MIN(rt1.c1))-(((rt1.c0) ISNULL)))) ISNULL);
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 HAVING ((MIN(rt1.c1))-(((rt1.c0) ISNULL))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 HAVING (NOT (((MIN(rt1.c1))-(((rt1.c0) ISNULL))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 HAVING ((((MIN(rt1.c1))-(((rt1.c0) ISNULL)))) ISNULL);
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS NUMERIC) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ('二') UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ('二'))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((('二') ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(rt1.c0)))AND(rt1.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(rt1.c0)))AND(rt1.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE ((((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(rt1.c0)))AND(rt1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING SUM(((0.07776256329215114)<('-66673169'))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (SUM(((0.07776256329215114)<('-66673169'))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((SUM(((0.07776256329215114)<('-66673169')))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING SUM(((0.07776256329215114)<('-66673169'))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (SUM(((0.07776256329215114)<('-66673169'))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((SUM(((0.07776256329215114)<('-66673169')))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0)))AND(((vt0.c0)OR(vt0.c0)))))AND(CASE WHEN rt1.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0)))AND(((vt0.c0)OR(vt0.c0)))))AND(CASE WHEN rt1.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0)))AND(((vt0.c0)OR(vt0.c0)))))AND(CASE WHEN rt1.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(TIME(rt1.c2, rt1.c1, rt1.c1) AS BLOB)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(TIME(rt1.c2, rt1.c1, rt1.c1) AS BLOB)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(TIME(rt1.c2, rt1.c1, rt1.c1) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((((((((vt0.c0)AND((NOT (rt1.c0)))))OR((rt1.c1 IN ()))))AND(((rt1.c0) IS TRUE))))OR(((((((((rt1.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(vt0.c0))))) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((((((vt0.c0)AND((NOT (rt1.c0)))))OR((rt1.c1 IN ()))))AND(((rt1.c0) IS TRUE))))OR(((((((((rt1.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(vt0.c0))))))) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((((((((((vt0.c0)AND((NOT (rt1.c0)))))OR((rt1.c1 IN ()))))AND(((rt1.c0) IS TRUE))))OR(((((((((rt1.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(vt0.c0))))) ISNULL)) GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(HEX(SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(HEX(SUM(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(HEX(SUM(COUNT(*))))) ISNULL);
SELECT rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (CASE NULL  WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN '1843548731' ELSE rt1.c2 END THEN ((rt1.c2) NOT NULL) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) END) UNION ALL SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (CASE NULL  WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN '1843548731' ELSE rt1.c2 END THEN ((rt1.c2) NOT NULL) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) END))) UNION ALL SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((CASE NULL  WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN '1843548731' ELSE rt1.c2 END THEN ((rt1.c2) NOT NULL) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) END) ISNULL));
SELECT rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1 WHERE ((QUOTE(rt1.c1) IN ())) UNION SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1 WHERE ((NOT ((QUOTE(rt1.c1) IN ())))) UNION SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1 WHERE ((((QUOTE(rt1.c1) IN ())) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((((0.22754634027407905)<(rt1.c1)) IN ())) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT ((((0.22754634027407905)<(rt1.c1)) IN ())))) GROUP BY rt1.c1, vt0.c0 UNION SELECT rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((((((0.22754634027407905)<(rt1.c1)) IN ())) ISNULL)) GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2 HAVING MIN(AVG(rt1.c0)) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2 HAVING (NOT (MIN(AVG(rt1.c0)))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2 HAVING ((MIN(AVG(rt1.c0))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c0) NOT NULL))OR(((rt1.c1) NOTNULL)));
SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c0) NOT NULL))OR(((rt1.c1) NOTNULL))) WHERE (((((((rt1.c2)<=(rt1.c1)))OR((((rt1.c1))>=((rt1.c0))))))OR((- (rt1.c1))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c0) NOT NULL))OR(((rt1.c1) NOTNULL))) WHERE ((NOT (((((((rt1.c2)<=(rt1.c1)))OR((((rt1.c1))>=((rt1.c0))))))OR((- (rt1.c1))))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c0) NOT NULL))OR(((rt1.c1) NOTNULL))) WHERE (((((((((rt1.c2)<=(rt1.c1)))OR((((rt1.c1))>=((rt1.c0))))))OR((- (rt1.c1))))) ISNULL));
SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c0) NOT NULL))OR(((rt1.c1) NOTNULL)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TYPEOF(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TYPEOF(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2 HAVING SUM('') UNION ALL SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2 HAVING (NOT (SUM(''))) UNION ALL SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2 HAVING ((SUM('')) ISNULL);
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2 HAVING SUM('') UNION ALL SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2 HAVING (NOT (SUM(''))) UNION ALL SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2 HAVING ((SUM('')) ISNULL);
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)=(vt0.c0)) THEN (+ (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)==(vt0.c0)) THEN (+ (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)==(vt0.c0)) THEN (+ (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))*(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))*(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))))) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))*(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING (((COUNT(*) IN ()))/((rt1.c2 IN ()))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING (NOT ((((COUNT(*) IN ()))/((rt1.c2 IN ()))))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING (((((COUNT(*) IN ()))/((rt1.c2 IN ())))) ISNULL);
SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING (((COUNT(*) IN ()))/((rt1.c2 IN ()))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING (NOT ((((COUNT(*) IN ()))/((rt1.c2 IN ()))))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING (((((COUNT(*) IN ()))/((rt1.c2 IN ())))) ISNULL);
SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0;
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((((((vt0.c0)OR('*{1')))AND(vt0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (((((((vt0.c0)OR('*{1')))AND(vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((((((((vt0.c0)OR('*{1')))AND(vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN (vt0.c0 IN ()) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN (vt0.c0 IN ()) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN (vt0.c0 IN ()) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<(0.524282786754966))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<(0.524282786754966))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<(0.524282786754966))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING MAX(COUNT(AVG(rt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (MAX(COUNT(AVG(rt1.c0))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((MAX(COUNT(AVG(rt1.c0)))) ISNULL);
SELECT ALL MAX(CASE WHEN ((rt1.c2)!=(rt1.c1)) THEN (rt1.c0 IN (rt1.c1)) END) FROM rt1;
SELECT rt1.c1, vt0.c0 FROM vt0 NATURAL JOIN rt1;
SELECT rt1.c1, vt0.c0 FROM vt0 NATURAL JOIN rt1 WHERE (vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL rt1.c1, vt0.c0 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT rt1.c1, vt0.c0 FROM vt0 NATURAL JOIN rt1 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT rt1.c1, vt0.c0 FROM vt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1 WHERE ((((((vt0.c0)=(rt1.c2))))<>((UPPER('-1998798294'))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1 WHERE ((NOT ((((((vt0.c0)==(rt1.c2))))!=((UPPER('-1998798294'))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1 WHERE ((((((((vt0.c0)=(rt1.c2))))<>((UPPER('-1998798294'))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1;
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM vt0, rt1 WHERE (NULL) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) BETWEEN (SUM(vt0.c0)) AND (vt0.c0)) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0) BETWEEN (SUM(vt0.c0)) AND (vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) BETWEEN (SUM(vt0.c0)) AND (vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) BETWEEN (SUM(vt0.c0)) AND (vt0.c0)) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0) BETWEEN (SUM(vt0.c0)) AND (vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) BETWEEN (SUM(vt0.c0)) AND (vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM((((((rt1.c1) NOTNULL)))=((CAST(rt1.c1 AS INTEGER))))) FROM vt0, rt1 ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON JULIANDAY(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END, '-797276378', vt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON JULIANDAY(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END, '-797276378', vt0.c0) WHERE (((((((rt1.c2)OR(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((rt1.c0) NOTNULL)))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt1 ON JULIANDAY(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END, '-797276378', vt0.c0) WHERE ((NOT (((((((rt1.c2)OR(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((rt1.c0) NOTNULL)))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt1 ON JULIANDAY(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END, '-797276378', vt0.c0) WHERE (((((((((rt1.c2)OR(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((rt1.c0) NOTNULL)))) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON JULIANDAY(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END, '-797276378', vt0.c0);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (('-2127707764' IN (CAST(vt0.c0 AS NUMERIC), NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (('-2127707764' IN (CAST(vt0.c0 AS NUMERIC), NULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((('-2127707764' IN (CAST(vt0.c0 AS NUMERIC), NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 ELSE NULL END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 ELSE NULL END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 ELSE NULL END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING vt0.c0 UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING vt0.c0 UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (rt1.c0) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c1) BETWEEN ('') AND (rt1.c0))) AND (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 END))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (((rt1.c2) NOT BETWEEN (((rt1.c1) BETWEEN ('') AND (rt1.c0))) AND (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 END))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (((rt1.c1) BETWEEN ('') AND (rt1.c0))) AND (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 END))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((((0X40ceb92)-(rt1.c1))) IS TRUE)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (((((0X40ceb92)-(rt1.c1))) IS TRUE)))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((((((0X40ceb92)-(rt1.c1))) IS TRUE)) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING (AVG(COUNT(AVG(TOTAL(MIN(SUM(MAX(MAX(COUNT(rt1.c1))))))))) IN ()) UNION ALL SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(COUNT(AVG(TOTAL(MIN(SUM(MAX(MAX(COUNT(rt1.c1))))))))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING (((AVG(COUNT(AVG(TOTAL(MIN(SUM(MAX(MAX(COUNT(rt1.c1))))))))) IN ())) ISNULL);
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING (AVG(COUNT(AVG(TOTAL(MIN(SUM(MAX(MAX(COUNT(rt1.c1))))))))) IN ()) UNION ALL SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(COUNT(AVG(TOTAL(MIN(SUM(MAX(MAX(COUNT(rt1.c1))))))))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING (((AVG(COUNT(AVG(TOTAL(MIN(SUM(MAX(MAX(COUNT(rt1.c1))))))))) IN ())) ISNULL);
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(CHANGES()) FROM vt0 ORDER BY CASE (('1573012103') ISNULL)  WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)!=(x'')) END ASC, ((HEX(DISTINCT vt0.c0)) BETWEEN (((((0.6311020758806687)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((UNLIKELY(DISTINCT rt1.c0))>=(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (((UNLIKELY(DISTINCT rt1.c0))>=(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((UNLIKELY(DISTINCT rt1.c0))>=(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ((((rt1.c2)%(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((((rt1.c2)%(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((((((rt1.c2)%(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((UPPER(vt0.c0)) NOT BETWEEN ((- (vt0.c0))) AND (LOWER(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((UPPER(vt0.c0)) NOT BETWEEN ((- (vt0.c0))) AND (LOWER(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((UPPER(vt0.c0)) NOT BETWEEN ((- (vt0.c0))) AND (LOWER(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING AVG(((((COUNT(COUNT(AVG(MIN(rt1.c1)))))OR(COUNT(TOTAL(MAX(rt1.c2))))))AND(MIN(TOTAL(rt1.c2))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (AVG(((((COUNT(COUNT(AVG(MIN(rt1.c1)))))OR(COUNT(TOTAL(MAX(rt1.c2))))))AND(MIN(TOTAL(rt1.c2))))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING ((AVG(((((COUNT(COUNT(AVG(MIN(rt1.c1)))))OR(COUNT(TOTAL(MAX(rt1.c2))))))AND(MIN(TOTAL(rt1.c2)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((('Z3% %') ISNULL) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((('Z3% %') ISNULL) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE ((((('Z3% %') ISNULL) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN x'2559c93c' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN x'2559c93c' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN x'2559c93c' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((rt1.c1 IN ()) COLLATE RTRIM) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((rt1.c1 IN ()) COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((((rt1.c1 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0;
SELECT rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 WHERE ((NOT ((rt1.c1 IN (rt1.c0))))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((NOT ((NOT ((rt1.c1 IN (rt1.c0))))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((((NOT ((rt1.c1 IN (rt1.c0))))) ISNULL));
SELECT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((((- (rt1.c1))) IS TRUE)) UNION SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT ((((- (rt1.c1))) IS TRUE)))) UNION SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((((((- (rt1.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (CASE ((((((((rt1.c2)OR(rt1.c2)))AND(9.2114843E8)))OR(rt1.c2)))AND(rt1.c1))  WHEN CAST(rt1.c1 AS INTEGER) THEN (rt1.c0 IN (rt1.c0, rt1.c2)) ELSE UPPER(DISTINCT rt1.c1) END) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (CASE ((((((((rt1.c2)OR(rt1.c2)))AND(9.2114843E8)))OR(rt1.c2)))AND(rt1.c1))  WHEN CAST(rt1.c1 AS INTEGER) THEN (rt1.c0 IN (rt1.c0, rt1.c2)) ELSE UPPER(DISTINCT rt1.c1) END))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((CASE ((((((((rt1.c2)OR(rt1.c2)))AND(9.2114843E8)))OR(rt1.c2)))AND(rt1.c1))  WHEN CAST(rt1.c1 AS INTEGER) THEN (rt1.c0 IN (rt1.c0, rt1.c2)) ELSE UPPER(DISTINCT rt1.c1) END) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING 0.7588595847484633 UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (0.7588595847484633)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((0.7588595847484633) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING 0.7588595847484633 UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (0.7588595847484633)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((0.7588595847484633) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (x'') UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((x'') ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE ((0X25a3e352 IN (' 늞\yXJ䕮')) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT ((0x25a3e352 IN (' 늞\yXJ䕮')) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((((0X25a3e352 IN (' 늞\yXJ䕮')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (- (rt1.c1)) COLLATE BINARY UNION ALL SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (NOT ((- (rt1.c1)) COLLATE BINARY)) UNION ALL SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (((- (rt1.c1)) COLLATE BINARY) ISNULL);
SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (- (rt1.c1)) COLLATE BINARY UNION ALL SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (NOT ((- (rt1.c1)) COLLATE BINARY)) UNION ALL SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (((- (rt1.c1)) COLLATE BINARY) ISNULL);
SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((0.4940975669158083 IN (vt0.c0, 0Xffffffffbd20024e)))AND((+ (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((0.4940975669158083 IN (vt0.c0, 0xffffffffbd20024e)))AND((+ (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((0.4940975669158083 IN (vt0.c0, 0xffffffffbd20024e)))AND((+ (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((TRIM(DISTINCT rt1.c2, rt1.c2))&(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (((TRIM(DISTINCT rt1.c2, rt1.c2))&(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((((TRIM(DISTINCT rt1.c2, rt1.c2))&(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (CASE WHEN AVG(COUNT(NULL)) THEN AVG(COUNT(*)) ELSE TOTAL(GROUP_CONCAT(vt0.c0)) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (CASE WHEN AVG(COUNT(NULL)) THEN AVG(COUNT(*)) ELSE TOTAL(GROUP_CONCAT(vt0.c0)) END)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (CASE WHEN AVG(COUNT(NULL)) THEN AVG(COUNT(*)) ELSE TOTAL(GROUP_CONCAT(vt0.c0)) END))) ISNULL);
SELECT rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((((((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(((((((((((((rt1.c2)AND('1843548731')))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))))OR(CAST(rt1.c1 AS TEXT))))OR(((rt1.c0)&('4*')))))OR(CASE WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY (+ (rt1.c0))  NULLS FIRST, ((((rt1.c1)AND(LTRIM(rt1.c1, rt1.c1))))OR(TRIM(DISTINCT rt1.c2, rt1.c1))), (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c0 COLLATE RTRIM, UPPER(DISTINCT rt1.c1)))>=((((rt1.c1) IS FALSE), ((rt1.c1)AND(rt1.c1)), ((((rt1.c0)AND(x'809b')))OR(x'd7c0'))))) DESC  NULLS FIRST;
SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(((((((((((((rt1.c2)AND('1843548731')))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))))OR(CAST(rt1.c1 AS TEXT))))OR(((rt1.c0)&('4*')))))OR(CASE WHEN rt1.c1 THEN rt1.c0 END))))) ORDER BY (+ (rt1.c0))  NULLS FIRST, ((((rt1.c1)AND(LTRIM(rt1.c1, rt1.c1))))OR(TRIM(DISTINCT rt1.c2, rt1.c1))), (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c0 COLLATE RTRIM, UPPER(DISTINCT rt1.c1)))>=((((rt1.c1) IS FALSE), ((rt1.c1)AND(rt1.c1)), ((((rt1.c0)AND(x'809b')))OR(x'd7c0'))))) DESC  NULLS FIRST;
SELECT rt1.c1 FROM rt1 WHERE (((((((((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(((((((((((((rt1.c2)AND('1843548731')))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))))OR(CAST(rt1.c1 AS TEXT))))OR(((rt1.c0)&('4*')))))OR(CASE WHEN rt1.c1 THEN rt1.c0 END))) ISNULL)) ORDER BY (+ (rt1.c0))  NULLS FIRST, ((((rt1.c1)AND(LTRIM(rt1.c1, rt1.c1))))OR(TRIM(DISTINCT rt1.c2, rt1.c1))), (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c0 COLLATE RTRIM, UPPER(DISTINCT rt1.c1)))>=((((rt1.c1) IS FALSE), ((rt1.c1)AND(rt1.c1)), ((((rt1.c0)AND(x'809b')))OR(x'd7c0'))))) DESC  NULLS FIRST;
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) AND (UNLIKELY(NULL)))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) AND (UNLIKELY(NULL)))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) AND (UNLIKELY(NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((NOT (rt1.c2))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((((NOT (rt1.c2))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(AVG(MIN(AVG(AVG(1.7976931348623157E308)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(AVG(MIN(AVG(AVG(1.7976931348623157E308)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(AVG(MIN(AVG(AVG(1.7976931348623157E308))))))) ISNULL);
SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0;
SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE ((((((vt0.c0, rt1.c2, rt1.c0, rt1.c0, vt0.c0))<=((rt1.c1, rt1.c1, rt1.c0, rt1.c2, vt0.c0))))AND((NOT (rt1.c2))))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT ((((((vt0.c0, rt1.c2, rt1.c0, rt1.c0, vt0.c0))<=((rt1.c1, rt1.c1, rt1.c0, rt1.c2, vt0.c0))))AND((NOT (rt1.c2))))))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE ((((((((vt0.c0, rt1.c2, rt1.c0, rt1.c0, vt0.c0))<=((rt1.c1, rt1.c1, rt1.c0, rt1.c2, vt0.c0))))AND((NOT (rt1.c2))))) ISNULL));
SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))>>('' COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))>>('' COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))>>('' COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (rt1.c1) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING MIN(COUNT(TOTAL(MAX(rt1.c1)))) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (MIN(COUNT(TOTAL(MAX(rt1.c1)))))) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((MIN(COUNT(TOTAL(MAX(rt1.c1))))) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1 NOT INDEXED, vt0 WHERE ((((((rt1.c2) ISNULL)))<=((rt1.c2)))) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT ((((((rt1.c2) ISNULL)))<=((rt1.c2)))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((((((((rt1.c2) ISNULL)))<=((rt1.c2)))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((rt1.c1, rt1.c0, rt1.c1, rt1.c1, '篦]#4#5LE')) BETWEEN ((((rt1.c0)>(0Xffffffffacee15aa)), ((rt1.c0)!=(rt1.c0)), rt1.c0, CASE WHEN rt1.c0 THEN rt1.c2 END, CAST(rt1.c1 AS INTEGER))) AND (((rt1.c2 IN ()), TOTAL_CHANGES(), (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((rt1.c1) NOT NULL), ((rt1.c1) IS TRUE))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c1, rt1.c0, rt1.c1, rt1.c1, '篦]#4#5LE')) BETWEEN ((((rt1.c0)>(0Xffffffffacee15aa)), ((rt1.c0)<>(rt1.c0)), rt1.c0, CASE WHEN rt1.c0 THEN rt1.c2 END, CAST(rt1.c1 AS INTEGER))) AND (((rt1.c2 IN ()), TOTAL_CHANGES(), (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((rt1.c1) NOT NULL), ((rt1.c1) IS TRUE))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((((rt1.c1, rt1.c0, rt1.c1, rt1.c1, '篦]#4#5LE')) BETWEEN ((((rt1.c0)>(0xffffffffacee15aa)), ((rt1.c0)!=(rt1.c0)), rt1.c0, CASE WHEN rt1.c0 THEN rt1.c2 END, CAST(rt1.c1 AS INTEGER))) AND (((rt1.c2 IN ()), TOTAL_CHANGES(), (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((rt1.c1) NOT NULL), ((rt1.c1) IS TRUE))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c2, rt1.c1)) NOT NULL)) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (((NULLIF(DISTINCT rt1.c2, rt1.c1)) NOT NULL)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((((NULLIF(DISTINCT rt1.c2, rt1.c1)) NOT NULL)) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((SUM(vt0.c0))AND(CAST(SUM(GROUP_CONCAT(SUM(vt0.c0))) AS INTEGER))))OR(json_type(COUNT(*)))))OR(AVG(vt0.c0))))OR(MIN(COUNT(TOTAL(SUM(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((SUM(vt0.c0))AND(CAST(SUM(GROUP_CONCAT(SUM(vt0.c0))) AS INTEGER))))OR(json_type(COUNT(*)))))OR(AVG(vt0.c0))))OR(MIN(COUNT(TOTAL(SUM(COUNT(*))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((SUM(vt0.c0))AND(CAST(SUM(GROUP_CONCAT(SUM(vt0.c0))) AS INTEGER))))OR(json_type(COUNT(*)))))OR(AVG(vt0.c0))))OR(MIN(COUNT(TOTAL(SUM(COUNT(*)))))))) ISNULL);
SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.2601010127652148)) AND ((vt0.c0, vt0.c0, x'b9f4'))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.2601010127652148)) AND ((vt0.c0, vt0.c0, x'b9f4'))))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.2601010127652148)) AND ((vt0.c0, vt0.c0, x'b9f4'))))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((rt1.c1)<(0Xffffffff821a992c))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (((rt1.c0) ISNULL)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c1)<(0Xffffffff821a992c))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (((rt1.c0) ISNULL)))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((((((rt1.c1)<(0xffffffff821a992c))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (((rt1.c0) ISNULL)))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING TOTAL('-1132667833') UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (TOTAL('-1132667833'))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((TOTAL('-1132667833')) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING TOTAL('-1132667833') UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (TOTAL('-1132667833'))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((TOTAL('-1132667833')) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1;
SELECT ALL rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((+ (rt1.c1)) COLLATE RTRIM) UNION ALL SELECT rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT ((+ (rt1.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((((+ (rt1.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (IFNULL(((rt1.c2)>>(rt1.c2)), (((rt1.c2))<=((rt1.c1))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (IFNULL(((rt1.c2)>>(rt1.c2)), (((rt1.c2))<=((rt1.c1))))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((IFNULL(((rt1.c2)>>(rt1.c2)), (((rt1.c2))<=((rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2)>(rt1.c2)) THEN CAST(rt1.c1 AS INTEGER) ELSE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN NULL WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END END) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM vt0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c2)>(rt1.c2)) THEN CAST(rt1.c1 AS INTEGER) ELSE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN NULL WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END END))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt0, rt1 WHERE (((CASE WHEN ((rt1.c2)>(rt1.c2)) THEN CAST(rt1.c1 AS INTEGER) ELSE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN NULL WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END END) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING LIKELIHOOD(CAST(COUNT(*) AS NUMERIC), 0.4978499097128223) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (LIKELIHOOD(CAST(COUNT(*) AS NUMERIC), 0.4978499097128223))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((LIKELIHOOD(CAST(COUNT(*) AS NUMERIC), 0.4978499097128223)) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING LIKELIHOOD(CAST(COUNT(*) AS NUMERIC), 0.4978499097128223) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (LIKELIHOOD(CAST(COUNT(*) AS NUMERIC), 0.4978499097128223))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((LIKELIHOOD(CAST(COUNT(*) AS NUMERIC), 0.4978499097128223)) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((((CAST(rt1.c2 AS TEXT))AND(((rt1.c1)<=(rt1.c2)))))OR((rt1.c2 IN ())))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((CAST(rt1.c2 AS TEXT))AND(((rt1.c1)<=(rt1.c2)))))OR((rt1.c2 IN ())))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((((((CAST(rt1.c2 AS TEXT))AND(((rt1.c1)<=(rt1.c2)))))OR((rt1.c2 IN ())))) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((HEX(rt1.c1))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c2)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((HEX(rt1.c1))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((HEX(rt1.c1))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2, rt1.c0 FROM vt0 CROSS JOIN rt1 ON COALESCE(DISTINCT rt1.c2, ((rt1.c1)<(rt1.c2)), (vt0.c0 IN ()), rt1.c1 COLLATE RTRIM) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM vt0 CROSS JOIN rt1 ON COALESCE(DISTINCT rt1.c2, ((rt1.c1)<(rt1.c2)), (vt0.c0 IN ()), rt1.c1 COLLATE RTRIM) GROUP BY rt1.c2, rt1.c0 HAVING AVG(TOTAL(rt1.c1) COLLATE RTRIM) UNION ALL SELECT rt1.c2, rt1.c0 FROM vt0 CROSS JOIN rt1 ON COALESCE(DISTINCT rt1.c2, ((rt1.c1)<(rt1.c2)), (vt0.c0 IN ()), rt1.c1 COLLATE RTRIM) GROUP BY rt1.c2, rt1.c0 HAVING (NOT (AVG(TOTAL(rt1.c1) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM vt0 CROSS JOIN rt1 ON COALESCE(DISTINCT rt1.c2, ((rt1.c1)<(rt1.c2)), (vt0.c0 IN ()), rt1.c1 COLLATE RTRIM) GROUP BY rt1.c2, rt1.c0 HAVING ((AVG(TOTAL(rt1.c1) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c1)))) ISNULL)) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT ((((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c1)))) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((((((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c1)))) ISNULL)) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c1)<<(rt1.c0)), ((((rt1.c1)OR(rt1.c1)))AND(-1568028121)), CASE WHEN rt1.c0 THEN rt1.c0 END)) AND (((+ (rt1.c2)), ((rt1.c1)||(rt1.c0)), ((rt1.c2)<<(0.7294639947342062)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c1)<<(rt1.c0)), ((((rt1.c1)OR(rt1.c1)))AND(-1568028121)), CASE WHEN rt1.c0 THEN rt1.c0 END)) AND (((+ (rt1.c2)), ((rt1.c1)||(rt1.c0)), ((rt1.c2)<<(0.7294639947342062)))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c1)<<(rt1.c0)), ((((rt1.c1)OR(rt1.c1)))AND(-1568028121)), CASE WHEN rt1.c0 THEN rt1.c0 END)) AND (((+ (rt1.c2)), ((rt1.c1)||(rt1.c0)), ((rt1.c2)<<(0.7294639947342062)))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2;
SELECT vt0.c0, rt1.c2 FROM vt0, rt1 WHERE (((((rt1.c2) IS TRUE)) IS FALSE)) GROUP BY vt0.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((((rt1.c2) IS TRUE)) IS FALSE)))) GROUP BY vt0.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1 WHERE (((((((rt1.c2) IS TRUE)) IS FALSE)) ISNULL)) GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2;
SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2 HAVING MAX(((((rt1.c0)OR(COUNT(*))))OR(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2 HAVING (NOT (MAX(((((rt1.c0)OR(COUNT(*))))OR(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2 HAVING ((MAX(((((rt1.c0)OR(COUNT(*))))OR(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) AND (((+ (rt1.c2)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((rt1.c2)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) AND (((+ (rt1.c2)))))))) UNION ALL SELECT * FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) AND (((+ (rt1.c2)))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((rt1.c2 COLLATE RTRIM IN ((- (rt1.c0))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((rt1.c2 COLLATE RTRIM IN ((- (rt1.c0))))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((((rt1.c2 COLLATE RTRIM IN ((- (rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c1) NOTNULL))=(NULL))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c1) NOTNULL))==(NULL))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c1) NOTNULL))=(NULL))) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c1 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT ALL rt1.c1 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt1.c1 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT ALL vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (x'') UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt1 ON TRIM(DISTINCT (vt0.c0 IN ()));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt1 ON TRIM(DISTINCT (vt0.c0 IN ())) WHERE (rt1.c1) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt1 ON TRIM(DISTINCT (vt0.c0 IN ())) WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt1 ON TRIM(DISTINCT (vt0.c0 IN ())) WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt1 ON TRIM(DISTINCT (vt0.c0 IN ()));
SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (LIKELY(rt1.c2)) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((NOT (LIKELY(rt1.c2)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (((LIKELY(rt1.c2)) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(COUNT(MAX(vt0.c0)) AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(MAX(vt0.c0)) AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(MAX(vt0.c0)) AS INTEGER)) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c2) ISNULL) COLLATE RTRIM) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c2) ISNULL) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c2) ISNULL) COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c2)<=(rt1.c0)))*((rt1.c2 IN (rt1.c2))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c2)<=(rt1.c0)))*((rt1.c2 IN (rt1.c2))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c2)<=(rt1.c0)))*((rt1.c2 IN (rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c2) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SUM(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SUM(MIN(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('817347117') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('817347117'))) UNION ALL SELECT * FROM vt0 WHERE ((('817347117') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))=(rt1.c1));
SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))==(rt1.c1)) WHERE ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))==(((('-798390534')&(0Xffffffffd06986fa)))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))==(rt1.c1)) WHERE ((NOT ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))=(((('-798390534')&(0xffffffffd06986fa)))))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))=(rt1.c1)) WHERE ((((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))==(((('-798390534')&(0Xffffffffd06986fa)))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))=(rt1.c1));
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE RTRIM) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE RTRIM))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING MIN('2055508461') UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (MIN('2055508461'))) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((MIN('2055508461')) ISNULL);
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING MIN('2055508461') UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (MIN('2055508461'))) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((MIN('2055508461')) ISNULL);
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0;
SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0 WHERE ((((vt0.c0)==(rt1.c2)) IN ())) UNION ALL SELECT vt0.c0, rt1.c0 FROM rt1, vt0 WHERE ((NOT ((((vt0.c0)==(rt1.c2)) IN ())))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0 WHERE ((((((vt0.c0)==(rt1.c2)) IN ())) ISNULL));
SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (CASE WHEN rt1.c0 THEN x'' END) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CASE WHEN rt1.c0 THEN x'' END))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN x'' END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt0, rt1 WHERE ((((NULL))<(((((rt1.c1))>((rt1.c2))))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM vt0, rt1 WHERE ((NOT ((((NULL))<(((((rt1.c1))>((rt1.c2))))))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM vt0, rt1 WHERE ((((((NULL))<(((((rt1.c1))>((rt1.c2))))))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING TOTAL(MIN(rt1.c2)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (TOTAL(MIN(rt1.c2)))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((TOTAL(MIN(rt1.c2))) ISNULL);
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c1, rt1.c0))))IS(rt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT ((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c1, rt1.c0))))IS(rt1.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c1, rt1.c0))))IS(rt1.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((((rt1.c2))==((rt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((NOT ((((rt1.c2))=((rt1.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((((((rt1.c2))=((rt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (((json_quote(rt1.c1))>>(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (((json_quote(rt1.c1))>>(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((((json_quote(rt1.c1))>>(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (((MAX(MIN(rt1.c1)))) BETWEEN ((MAX(rt1.c0))) AND ((TOTAL(GROUP_CONCAT(rt1.c2))))) UNION ALL SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (NOT ((((MAX(MIN(rt1.c1)))) BETWEEN ((MAX(rt1.c0))) AND ((TOTAL(GROUP_CONCAT(rt1.c2))))))) UNION ALL SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0 HAVING (((((MAX(MIN(rt1.c1)))) BETWEEN ((MAX(rt1.c0))) AND ((TOTAL(GROUP_CONCAT(rt1.c2)))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ('*ir#D') UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ('*ir#D'))) UNION ALL SELECT ALL * FROM rt1 WHERE ((('*ir#D') ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((((1934644269)OR(rt1.c1 COLLATE NOCASE)))AND(rt1.c2))) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((((1934644269)OR(rt1.c1 COLLATE NOCASE)))AND(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((((((1934644269)OR(rt1.c1 COLLATE NOCASE)))AND(rt1.c2))) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ())) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ())))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (COUNT(AVG(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (COUNT(AVG(TOTAL(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM rt1, vt0;
SELECT vt0.c0 FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((((0.8293194116512116)AND(vt0.c0)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((((0.8293194116512116)AND(vt0.c0)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))))) UNION ALL SELECT vt0.c0 FROM rt1, vt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((((0.8293194116512116)AND(vt0.c0)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))) ISNULL));
SELECT vt0.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c2) IS FALSE))OR(0Xffffffffff492e67)))AND((~ (-5.2723022E8))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((rt1.c2) IS FALSE))OR(0xffffffffff492e67)))AND((~ (-5.2723022E8))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c2) IS FALSE))OR(0xffffffffff492e67)))AND((~ (-5.2723022E8))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (CAST(CHANGES() AS INTEGER)) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CAST(CHANGES() AS INTEGER)))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((CAST(CHANGES() AS INTEGER)) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(AVG(vt0.c0))) ISNULL);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON CAST(rt1.c2 AS BLOB) COLLATE RTRIM;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON CAST(rt1.c2 AS BLOB) COLLATE RTRIM WHERE ((((rt1.c0 IN ())) BETWEEN (rt1.c0 COLLATE NOCASE) AND ((((rt1.c0))<>((NULL)))))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN vt0 ON CAST(rt1.c2 AS BLOB) COLLATE RTRIM WHERE ((NOT ((((rt1.c0 IN ())) BETWEEN (rt1.c0 COLLATE NOCASE) AND ((((rt1.c0))<>((NULL)))))))) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON CAST(rt1.c2 AS BLOB) COLLATE RTRIM WHERE ((((((rt1.c0 IN ())) BETWEEN (rt1.c0 COLLATE NOCASE) AND ((((rt1.c0))<>((NULL)))))) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON CAST(rt1.c2 AS BLOB) COLLATE RTRIM;
SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN (((rt1.c2)AND(rt1.c2))) AND ((~ (rt1.c1))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN (((rt1.c2)AND(rt1.c2))) AND ((~ (rt1.c1))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE (((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN (((rt1.c2)AND(rt1.c2))) AND ((~ (rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0;
SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE (((rt1.c0)>=(rt1.c0)) COLLATE RTRIM) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE ((NOT (((rt1.c0)>=(rt1.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE (((((rt1.c0)>=(rt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))!=(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))<>(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (TOTAL(SUM(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))<>(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT ((TOTAL(SUM(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))<>(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (((TOTAL(SUM(vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))!=(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))<>(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (TOTAL(SUM(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))<>(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT ((TOTAL(SUM(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))<>(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (((TOTAL(SUM(vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0, 0.1064426621265504, rt1.c2))<=((vt0.c0, rt1.c2, rt1.c2))))!=(((rt1.c1)<<(rt1.c0)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0;
SELECT rt1.c2, rt1.c1 FROM rt1, vt0 WHERE (((((((((((rt1.c2)||(vt0.c0)))OR(GLOB(vt0.c0, rt1.c2))))AND((((rt1.c2))!=((rt1.c2))))))OR(x'')))OR(vt0.c0))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((((((((((rt1.c2)||(vt0.c0)))OR(GLOB(vt0.c0, rt1.c2))))AND((((rt1.c2))!=((rt1.c2))))))OR(x'')))OR(vt0.c0))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, vt0 WHERE (((((((((((((rt1.c2)||(vt0.c0)))OR(GLOB(vt0.c0, rt1.c2))))AND((((rt1.c2))!=((rt1.c2))))))OR(x'')))OR(vt0.c0))) ISNULL));
SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((json_type('^p㶥%3	濬뜝')) BETWEEN (((rt1.c2) BETWEEN (NULL) AND (vt0.c0))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((('', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('2111738299', vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((('', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('2111738299', vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((('', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('2111738299', vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0 HAVING GROUP_CONCAT((((vt0.c0))>((rt1.c1)))) UNION ALL SELECT ALL vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((((vt0.c0))>((rt1.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((((vt0.c0))>((rt1.c1))))) ISNULL);
SELECT vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0 HAVING GROUP_CONCAT((((vt0.c0))>((rt1.c1)))) UNION ALL SELECT ALL vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((((vt0.c0))>((rt1.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((((vt0.c0))>((rt1.c1))))) ISNULL);
SELECT vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2)LIKE(rt1.c2)) AS INTEGER) GROUP BY vt0.c0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<<(rt1.c2))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (json_array_length(rt1.c2, rt1.c1)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c1)<<(rt1.c2))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (json_array_length(rt1.c2, rt1.c1)))))) UNION ALL SELECT * FROM rt1 WHERE (((((((rt1.c1)<<(rt1.c2))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (json_array_length(rt1.c2, rt1.c1)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (ABS(rt1.c0)) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (ABS(rt1.c0)))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((ABS(rt1.c0)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE ((((CAST(rt1.c0 AS REAL)))>((((rt1.c1)||(rt1.c1)))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT ((((CAST(rt1.c0 AS REAL)))>((((rt1.c1)||(rt1.c1)))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((((CAST(rt1.c0 AS REAL)))>((((rt1.c1)||(rt1.c1)))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING rt1.c1 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING rt1.c1 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN 0.07847102658490601 END)/((rt1.c1 IN ())))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((CASE rt1.c0  WHEN rt1.c2 THEN 0.07847102658490601 END)/((rt1.c1 IN ())))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c2 THEN 0.07847102658490601 END)/((rt1.c1 IN ())))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)GLOB('1276218566')))) AND ((LOWER(DISTINCT rt1.c0))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)GLOB('1276218566')))) AND ((LOWER(DISTINCT rt1.c0))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((((rt1.c1)GLOB('1276218566')))) AND ((LOWER(DISTINCT rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.16718792865327647)))-(((vt0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.16718792865327647)))-(((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.16718792865327647)))-(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE (((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))OR(vt0.c0)))|(((x'') NOT BETWEEN (rt1.c2) AND (rt1.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((NOT (((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))OR(vt0.c0)))|(((x'') NOT BETWEEN (rt1.c2) AND (rt1.c1))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE (((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))OR(vt0.c0)))|(((x'') NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ISNULL));
SELECT rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (((((rt1.c2) NOT NULL)) NOTNULL)) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (((((rt1.c2) NOT NULL)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((((((rt1.c2) NOT NULL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE (((LIKE(rt1.c2, rt1.c2))GLOB(((rt1.c0)%(rt1.c1))))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((LIKE(rt1.c2, rt1.c2))GLOB(((rt1.c0)%(rt1.c1))))))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE (((((LIKE(rt1.c2, rt1.c2))GLOB(((rt1.c0)%(rt1.c1))))) ISNULL)) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MAX(MAX(NULL))))>=(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(MAX(MAX(NULL))))>=(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(MAX(MAX(NULL))))>=(COUNT(*)))) ISNULL);
SELECT MAX((- (rt1.c2 COLLATE BINARY))) FROM rt1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ABS(DISTINCT vt0.c0)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ABS(vt0.c0) ELSE (vt0.c0 IN ()) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ABS(DISTINCT vt0.c0)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ABS(vt0.c0) ELSE (vt0.c0 IN ()) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ABS(DISTINCT vt0.c0)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ABS(vt0.c0) ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((((+ (rt1.c0)))OR(CAST(NULL AS REAL))))OR(((rt1.c0) NOTNULL)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((((+ (rt1.c0)))OR(CAST(NULL AS REAL))))OR(((rt1.c0) NOTNULL)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((((((+ (rt1.c0)))OR(CAST(NULL AS REAL))))OR(((rt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ('-482632327') GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((NOT ('-482632327'))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((('-482632327') ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1 HAVING CAST(AVG(SUM(GROUP_CONCAT(vt0.c0))) AS INTEGER) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1 HAVING (NOT (CAST(AVG(SUM(GROUP_CONCAT(vt0.c0))) AS INTEGER))) UNION ALL SELECT rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1 HAVING ((CAST(AVG(SUM(GROUP_CONCAT(vt0.c0))) AS INTEGER)) ISNULL);
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0)%(vt0.c0)))*((- (rt1.c1))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (((((vt0.c0)%(vt0.c0)))*((- (rt1.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((((((vt0.c0)%(vt0.c0)))*((- (rt1.c1))))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ('0.44396720172313753') UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ('0.44396720172313753'))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((('0.44396720172313753') ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((- (rt1.c1)) IN ())) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (((- (rt1.c1)) IN ())))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((((- (rt1.c1)) IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING MAX(((COUNT(vt0.c0)) IS FALSE)) UNION ALL SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING (NOT (MAX(((COUNT(vt0.c0)) IS FALSE)))) UNION ALL SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING ((MAX(((COUNT(vt0.c0)) IS FALSE))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)IS(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c1)-(rt1.c1)) THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) WHEN ABS(rt1.c2) THEN CASE rt1.c1  WHEN 0.6342143116990157 THEN rt1.c0 END WHEN rt1.c0 COLLATE RTRIM THEN ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)) ELSE (- ('2119751031')) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c1)-(rt1.c1)) THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) WHEN ABS(rt1.c2) THEN CASE rt1.c1  WHEN 0.6342143116990157 THEN rt1.c0 END WHEN rt1.c0 COLLATE RTRIM THEN ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)) ELSE (- ('2119751031')) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c1)-(rt1.c1)) THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) WHEN ABS(rt1.c2) THEN CASE rt1.c1  WHEN 0.6342143116990157 THEN rt1.c0 END WHEN rt1.c0 COLLATE RTRIM THEN ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)) ELSE (- ('2119751031')) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE (((('1544413262', rt1.c0, rt1.c0)) BETWEEN (('459305834', ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c1) IS FALSE))) AND ((((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)), CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 END, TRIM(rt1.c0))))) GROUP BY rt1.c1, vt0.c0, rt1.c0 UNION SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE ((NOT (((('1544413262', rt1.c0, rt1.c0)) BETWEEN (('459305834', ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c1) IS FALSE))) AND ((((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)), CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 END, TRIM(rt1.c0))))))) GROUP BY rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE (((((('1544413262', rt1.c0, rt1.c0)) BETWEEN (('459305834', ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c1) IS FALSE))) AND ((((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)), CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 END, TRIM(rt1.c0))))) ISNULL)) GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING MIN(rt1.c0 COLLATE BINARY) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (MIN(rt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((MIN(rt1.c0 COLLATE BINARY)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING MIN(rt1.c0 COLLATE BINARY) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (MIN(rt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((MIN(rt1.c0 COLLATE BINARY)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), '-1720536418'))<((((vt0.c0)==(vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), '-1720536418'))<((((vt0.c0)=(vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c0 AS NUMERIC))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), '-1720536418'))<((((vt0.c0)=(vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c0 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((((((rt1.c0) NOT BETWEEN ('c<KTAggu') AND (vt0.c0))))<(((~ (rt1.c2)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((NOT ((((((rt1.c0) NOT BETWEEN ('c<KTAggu') AND (vt0.c0))))<(((~ (rt1.c2)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((((((((rt1.c0) NOT BETWEEN ('c<KTAggu') AND (vt0.c0))))<(((~ (rt1.c2)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING AVG(AVG(TOTAL(MAX(x'')))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (AVG(AVG(TOTAL(MAX(x'')))))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING ((AVG(AVG(TOTAL(MAX(x''))))) ISNULL);
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (rt1.c2) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE ((((rt1.c2, (((('-1121975730')AND(vt0.c0)))OR(rt1.c0)), ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0))))>=((((rt1.c2) NOTNULL), rt1.c0, rt1.c2 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT ((((rt1.c2, (((('-1121975730')AND(vt0.c0)))OR(rt1.c0)), ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0))))>=((((rt1.c2) NOTNULL), rt1.c0, rt1.c2 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((((((rt1.c2, (((('-1121975730')AND(vt0.c0)))OR(rt1.c0)), ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0))))>=((((rt1.c2) NOTNULL), rt1.c0, rt1.c2 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, vt0 WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)))==(rt1.c0 COLLATE RTRIM))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)))==(rt1.c0 COLLATE RTRIM))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, vt0 WHERE (((((((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)))==(rt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON rt1.c2 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT rt1.c2 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 WHERE (CASE WHEN ((rt1.c0)>=(rt1.c0)) THEN CAST(rt1.c1 AS BLOB) END) UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c0)>=(rt1.c0)) THEN CAST(rt1.c1 AS BLOB) END))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE (((CASE WHEN ((rt1.c0)>=(rt1.c0)) THEN CAST(rt1.c1 AS BLOB) END) ISNULL));
SELECT rt1.c2 FROM rt1;
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE (((((((((((vt0.c0) IS FALSE))AND((((NULL)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(((vt0.c0)>=(-73954451)))))AND(((vt0.c0)-(rt1.c2)))))AND((((rt1.c0))>=((rt1.c0)))))) UNION SELECT DISTINCT vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((NOT (((((((((((vt0.c0) IS FALSE))AND((((NULL)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(((vt0.c0)>=(-73954451)))))AND(((vt0.c0)-(rt1.c2)))))AND((((rt1.c0))>=((rt1.c0)))))))) UNION SELECT DISTINCT vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE (((((((((((((vt0.c0) IS FALSE))AND((((NULL)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(((vt0.c0)>=(-73954451)))))AND(((vt0.c0)-(rt1.c2)))))AND((((rt1.c0))>=((rt1.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0;
SELECT vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END)<>(LIKE(vt0.c0, vt0.c0))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END)<>(LIKE(vt0.c0, vt0.c0))) WHERE (((CAST(rt1.c1 AS INTEGER)) IS FALSE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END)!=(LIKE(vt0.c0, vt0.c0))) WHERE ((NOT (((CAST(rt1.c1 AS INTEGER)) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END)!=(LIKE(vt0.c0, vt0.c0))) WHERE (((((CAST(rt1.c1 AS INTEGER)) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END)<>(LIKE(vt0.c0, vt0.c0))) GROUP BY vt0.c0;
SELECT ALL rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0 HAVING (NOT (TOTAL(rt1.c0))) UNION ALL SELECT rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0 HAVING (NOT ((NOT (TOTAL(rt1.c0))))) UNION ALL SELECT rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0 HAVING (((NOT (TOTAL(rt1.c0)))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0 HAVING (NOT (TOTAL(rt1.c0))) UNION ALL SELECT rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0 HAVING (NOT ((NOT (TOTAL(rt1.c0))))) UNION ALL SELECT rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0 HAVING (((NOT (TOTAL(rt1.c0)))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY rt1.c0, rt1.c1, vt0.c0;
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((rt1.c0 IN ()))) AND ((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN (((rt1.c0 IN ()))) AND ((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN (((rt1.c0 IN ()))) AND ((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, vt0.c0)) AND (('RX>9<', vt0.c0, NULL, vt0.c0, vt0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, vt0.c0)) AND (('RX>9<', vt0.c0, NULL, vt0.c0, vt0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, vt0.c0)) AND (('RX>9<', vt0.c0, NULL, vt0.c0, vt0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0;
SELECT ALL rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (rt1.c1) GROUP BY rt1.c2, vt0.c0 UNION SELECT rt1.c2, vt0.c0 FROM vt0, rt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c2, vt0.c0 UNION SELECT rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c2, vt0.c0;
SELECT ALL rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2 HAVING ROUND(CASE TOTAL(rt1.c2)  WHEN COUNT(*) THEN MIN(SUM(vt0.c0)) ELSE MIN(rt1.c2) END, MAX(GROUP_CONCAT(rt1.c0))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2 HAVING (NOT (ROUND(CASE TOTAL(rt1.c2)  WHEN COUNT(*) THEN MIN(SUM(vt0.c0)) ELSE MIN(rt1.c2) END, MAX(GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2 HAVING ((ROUND(CASE TOTAL(rt1.c2)  WHEN COUNT(*) THEN MIN(SUM(vt0.c0)) ELSE MIN(rt1.c2) END, MAX(GROUP_CONCAT(rt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0xfffffffffd92d0a8) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (0xfffffffffd92d0a8))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((0xfffffffffd92d0a8) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (rt1.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT ((NOT (rt1.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((((NOT (rt1.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT rt1.c1, rt1.c0 FROM vt0 CROSS JOIN rt1 ON (((((x'', x'', rt1.c1, rt1.c2, rt1.c0))<((vt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c1))))<(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt0 CROSS JOIN rt1 ON (((((x'', x'', rt1.c1, rt1.c2, rt1.c0))<((vt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c1))))<(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) WHERE (((((((((((((CAST(rt1.c1 AS TEXT))AND(((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))))AND(vt0.c0 COLLATE RTRIM)))AND(((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))OR(((x'') NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM vt0 CROSS JOIN rt1 ON (((((x'', x'', rt1.c1, rt1.c2, rt1.c0))<((vt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c1))))<(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) WHERE ((NOT (((((((((((((CAST(rt1.c1 AS TEXT))AND(((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))))AND(vt0.c0 COLLATE RTRIM)))AND(((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))OR(((x'') NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM vt0 CROSS JOIN rt1 ON (((((x'', x'', rt1.c1, rt1.c2, rt1.c0))<((vt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c1))))<(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) WHERE (((((((((((((((CAST(rt1.c1 AS TEXT))AND(((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))))AND(vt0.c0 COLLATE RTRIM)))AND(((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))OR(((x'') NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt0 CROSS JOIN rt1 ON (((((x'', x'', rt1.c1, rt1.c2, rt1.c0))<((vt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c1))))<(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((((TOTAL(AVG(rt1.c1)))OR(COUNT(rt1.c0) COLLATE BINARY)))AND(CAST(COUNT(AVG(TOTAL(GROUP_CONCAT(rt1.c2)))) AS TEXT))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (((((TOTAL(AVG(rt1.c1)))OR(COUNT(rt1.c0) COLLATE BINARY)))AND(CAST(COUNT(AVG(TOTAL(GROUP_CONCAT(rt1.c2)))) AS TEXT))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((((((TOTAL(AVG(rt1.c1)))OR(COUNT(rt1.c0) COLLATE BINARY)))AND(CAST(COUNT(AVG(TOTAL(GROUP_CONCAT(rt1.c2)))) AS TEXT)))) ISNULL);
SELECT ALL MIN((rt1.c1 COLLATE NOCASE IN ())) FROM rt1 ORDER BY (((((((rt1.c1))<((rt1.c2))))OR('-433018425')))AND(rt1.c2)), ((IFNULL(rt1.c2, rt1.c0)) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))) AND (CAST(rt1.c2 AS BLOB))) DESC;
SELECT rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0;
SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE (((((rt1.c2)GLOB(rt1.c1)))AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((((rt1.c2)GLOB(rt1.c1)))AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE (((((((rt1.c2)GLOB(rt1.c1)))AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))) ISNULL));
SELECT rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON (+ (vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON (+ (vt0.c0)) COLLATE RTRIM WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))OR(((rt1.c1) NOT BETWEEN (x'') AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON (+ (vt0.c0)) COLLATE RTRIM WHERE ((NOT (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))OR(((rt1.c1) NOT BETWEEN (x'') AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON (+ (vt0.c0)) COLLATE RTRIM WHERE (((((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))OR(((rt1.c1) NOT BETWEEN (x'') AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON (+ (vt0.c0)) COLLATE RTRIM;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt1.c0, rt1.c1 FROM vt0 FULL OUTER JOIN rt1 ON NULL;
SELECT vt0.c0, rt1.c0, rt1.c1 FROM vt0 FULL OUTER JOIN rt1 ON NULL WHERE (CASE ((rt1.c2)&(vt0.c0))  WHEN CAST(rt1.c1 AS TEXT) THEN ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c1 FROM vt0 FULL OUTER JOIN rt1 ON NULL WHERE ((NOT (CASE ((rt1.c2)&(vt0.c0))  WHEN CAST(rt1.c1 AS TEXT) THEN ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END))) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c1 FROM vt0 FULL OUTER JOIN rt1 ON NULL WHERE (((CASE ((rt1.c2)&(vt0.c0))  WHEN CAST(rt1.c1 AS TEXT) THEN ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END) ISNULL));
SELECT vt0.c0, rt1.c0, rt1.c1 FROM vt0 FULL OUTER JOIN rt1 ON NULL;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0)||(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)||(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0)||(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM rt1 NATURAL JOIN vt0;
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c0) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (rt1.c0))) UNION ALL SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c0) ISNULL));
SELECT ALL * FROM rt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOTNULL);
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOTNULL) WHERE ((- (((rt1.c1)!=(rt1.c2))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOTNULL) WHERE ((NOT ((- (((rt1.c1)<>(rt1.c2))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOTNULL) WHERE ((((- (((rt1.c1)<>(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOTNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.6311020758806687) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.6311020758806687))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.6311020758806687) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (+ (COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT ((+ (COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (((+ (COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (1.7976931348623157E308) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (1.7976931348623157E308))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((1.7976931348623157E308) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (SUBSTR((rt1.c2 IN ()), 0.10548638261072829 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (SUBSTR((rt1.c2 IN ()), 0.10548638261072829 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((SUBSTR((rt1.c2 IN ()), 0.10548638261072829 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1, vt0 WHERE (CAST(rt1.c2 COLLATE RTRIM AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt1, vt0 WHERE ((NOT (CAST(rt1.c2 COLLATE RTRIM AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt1, vt0 WHERE (((CAST(rt1.c2 COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING HEX(DISTINCT TOTAL(x'1081')) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (HEX(DISTINCT TOTAL(x'1081')))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((HEX(DISTINCT TOTAL(x'1081'))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING HEX(DISTINCT TOTAL(x'1081')) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (HEX(DISTINCT TOTAL(x'1081')))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((HEX(DISTINCT TOTAL(x'1081'))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (CAST(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) AS REAL)) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (CAST(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) AS REAL)))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((CAST(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) AS REAL)) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM rt1, vt0;
SELECT DISTINCT vt0.c0 FROM rt1, vt0 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM rt1, vt0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM rt1, vt0 WHERE (((CAST((NOT (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt1, vt0;
SELECT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)<=(vt0.c0)) COLLATE NOCASE GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)<=(vt0.c0)) COLLATE NOCASE WHERE (CAST(((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)) AS INTEGER)) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)<=(vt0.c0)) COLLATE NOCASE WHERE ((NOT (CAST(((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)) AS INTEGER)))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)<=(vt0.c0)) COLLATE NOCASE WHERE (((CAST(((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)) AS INTEGER)) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1)<=(vt0.c0)) COLLATE NOCASE GROUP BY rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON (+ (((((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND('-123540075')))) GROUP BY vt0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON (+ (((((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND('-123540075')))) GROUP BY vt0.c0, rt1.c0 HAVING MIN(AVG(AVG(MAX(rt1.c0)))) UNION ALL SELECT vt0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON (+ (((((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND('-123540075')))) GROUP BY vt0.c0, rt1.c0 HAVING (NOT (MIN(AVG(AVG(MAX(rt1.c0)))))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON (+ (((((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND('-123540075')))) GROUP BY vt0.c0, rt1.c0 HAVING ((MIN(AVG(AVG(MAX(rt1.c0))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)/(rt1.c1)) IN ())) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((rt1.c0)/(rt1.c1)) IN ())))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)/(rt1.c1)) IN ())) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN ('') AND (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN -2050534917 WHEN rt1.c0 THEN rt1.c2 END))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (((CAST(rt1.c2 AS TEXT)) BETWEEN ('') AND (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN -2050534917 WHEN rt1.c0 THEN rt1.c2 END))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((((CAST(rt1.c2 AS TEXT)) BETWEEN ('') AND (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN -2050534917 WHEN rt1.c0 THEN rt1.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING MAX(GROUP_CONCAT(rt1.c2)) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (MAX(GROUP_CONCAT(rt1.c2)))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((MAX(GROUP_CONCAT(rt1.c2))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(2003784763 COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(2003784763 COLLATE BINARY))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0 IN ()))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(2003784763 COLLATE BINARY))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE rt1.c2 COLLATE BINARY  WHEN (rt1.c1 IN ()) THEN rt1.c1 END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE rt1.c2 COLLATE BINARY  WHEN (rt1.c1 IN ()) THEN rt1.c1 END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c2 COLLATE BINARY  WHEN (rt1.c1 IN ()) THEN rt1.c1 END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c1)|(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)) ELSE ((vt0.c0)%(rt1.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c1)|(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)) ELSE ((vt0.c0)%(rt1.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt1 WHERE (((CASE WHEN ((rt1.c1)|(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)) ELSE ((vt0.c0)%(rt1.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL MIN((((((rt1.c2))<((rt1.c2)))) ISNULL)) FROM vt0, rt1 ORDER BY ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2))) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))));
SELECT rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (((rt1.c2 COLLATE NOCASE) ISNULL)) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (((rt1.c2 COLLATE NOCASE) ISNULL)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (((((rt1.c2 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN (rt1.c1) AND (rt1.c0 COLLATE BINARY))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((CAST(rt1.c1 AS NUMERIC)) BETWEEN (rt1.c1) AND (rt1.c0 COLLATE BINARY))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((CAST(rt1.c1 AS NUMERIC)) BETWEEN (rt1.c1) AND (rt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING MAX(((NULL) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c0)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (MAX(((NULL) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((MAX(((NULL) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL) COLLATE BINARY) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, rt1.c1 FROM rt1, vt0;
SELECT DISTINCT vt0.c0, rt1.c1 FROM rt1, vt0 WHERE (((((rt1.c2)AND((((vt0.c0))==(('1580938292'))))))AND((rt1.c1 IN ())))) UNION SELECT DISTINCT vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((((rt1.c2)AND((((vt0.c0))==(('1580938292'))))))AND((rt1.c1 IN ())))))) UNION SELECT DISTINCT vt0.c0, rt1.c1 FROM rt1, vt0 WHERE (((((((rt1.c2)AND((((vt0.c0))=(('1580938292'))))))AND((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c1 FROM rt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<=((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<=((+ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<=((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(91587280)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(91587280)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(91587280))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (vt0.c0) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((vt0.c0) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((((rt1.c2 IN ()))>>((rt1.c0 IN ())))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT ((((rt1.c2 IN ()))>>((rt1.c0 IN ())))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((((((rt1.c2 IN ()))>>((rt1.c0 IN ())))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NULL) NOT NULL)))>((((vt0.c0)<<(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((NULL) NOT NULL)))>((((vt0.c0)<<(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((NULL) NOT NULL)))>((((vt0.c0)<<(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(AVG(MIN(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(MIN(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(AVG(MIN(MAX(vt0.c0))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((- (x''))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((- (x''))))) UNION ALL SELECT * FROM rt1 WHERE ((((- (x''))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TYPEOF(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TYPEOF(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (rt1.c2) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((']o') NOT NULL);
SELECT DISTINCT rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((']o') NOT NULL) WHERE (((((rt1.c0)<<(rt1.c0))) NOT NULL)) UNION SELECT DISTINCT rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((']o') NOT NULL) WHERE ((NOT (((((rt1.c0)<<(rt1.c0))) NOT NULL)))) UNION SELECT DISTINCT rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((']o') NOT NULL) WHERE (((((((rt1.c0)<<(rt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((']o') NOT NULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0)))<<(((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))<<(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0)))<<(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((+ (MAX(-1625929614)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((+ (MAX(-1625929614)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((+ (MAX(-1625929614))))) ISNULL);
SELECT MAX((~ (((((vt0.c0)OR(rt1.c1)))OR(rt1.c0))))) FROM rt1, vt0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) BETWEEN ('') AND (x'')), 0.709370353313962)) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST, (x'' IN ()) COLLATE NOCASE  NULLS FIRST, CASE ((vt0.c0)*(vt0.c0))  WHEN GLOB(vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'97b9' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC;
SELECT ALL * FROM vt0 WHERE ((NOT (LIKELIHOOD(((vt0.c0) BETWEEN ('') AND (x'')), 0.709370353313962)))) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST, (x'' IN ()) COLLATE NOCASE  NULLS FIRST, CASE ((vt0.c0)*(vt0.c0))  WHEN GLOB(vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'97b9' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC;
SELECT * FROM vt0 WHERE (((LIKELIHOOD(((vt0.c0) BETWEEN ('') AND (x'')), 0.709370353313962)) ISNULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST, (x'' IN ()) COLLATE NOCASE  NULLS FIRST, CASE ((vt0.c0)*(vt0.c0))  WHEN GLOB(vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'97b9' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC;
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(NULL AS BLOB))=(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CAST(NULL AS BLOB))=(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CAST(NULL AS BLOB))=(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (NULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((+ (NULL))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MIN(rt1.c1) FROM rt1 ORDER BY (+ (((rt1.c1)IS NOT(rt1.c1)))) DESC;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE ((- (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN '黣n檣''dHKwg' WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT ((- (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN '黣n檣''dHKwg' WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((((- (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN '黣n檣''dHKwg' WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN (((((rt1.c2))>=((rt1.c2))))) AND (((rt1.c2 IN ()))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((NOT ((((rt1.c0)) BETWEEN (((((rt1.c2))>=((rt1.c2))))) AND (((rt1.c2 IN ()))))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((((((rt1.c0)) BETWEEN (((((rt1.c2))>=((rt1.c2))))) AND (((rt1.c2 IN ()))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, vt0 WHERE (HEX(DISTINCT CASE WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN rt1.c0 THEN rt1.c0 END)) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, vt0 WHERE ((NOT (HEX(DISTINCT CASE WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN rt1.c0 THEN rt1.c0 END)))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, vt0 WHERE (((HEX(DISTINCT CASE WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN rt1.c0 THEN rt1.c0 END)) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING TOTAL(TYPEOF(DISTINCT TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(TOTAL(rt1.c0)))))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (TOTAL(TYPEOF(DISTINCT TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(TOTAL(rt1.c0)))))))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((TOTAL(TYPEOF(DISTINCT TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(TOTAL(rt1.c0))))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE))OR(((0.019132110928205992)-(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))OR(((0.019132110928205992)-(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(((0.019132110928205992)-(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (((CASE vt0.c0  WHEN rt1.c2 THEN -5.05191269E8 ELSE rt1.c2 END)||(((rt1.c1)>>(rt1.c0))))) GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN rt1.c2 THEN -5.05191269E8 ELSE rt1.c2 END)||(((rt1.c1)>>(rt1.c0))))))) GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (((((CASE vt0.c0  WHEN rt1.c2 THEN -5.05191269E8 ELSE rt1.c2 END)||(((rt1.c1)>>(rt1.c0))))) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING CASE WHEN ((((((((TOTAL(MIN(COUNT(rt1.c0))))AND(rt1.c1)))OR(COUNT(*))))OR(MAX(rt1.c2))))AND(COUNT(rt1.c0))) THEN ((COUNT(AVG(AVG(rt1.c1))))<<(COUNT(*))) END UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (CASE WHEN ((((((((TOTAL(MIN(COUNT(rt1.c0))))AND(rt1.c1)))OR(COUNT(*))))OR(MAX(rt1.c2))))AND(COUNT(rt1.c0))) THEN ((COUNT(AVG(AVG(rt1.c1))))<<(COUNT(*))) END)) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((CASE WHEN ((((((((TOTAL(MIN(COUNT(rt1.c0))))AND(rt1.c1)))OR(COUNT(*))))OR(MAX(rt1.c2))))AND(COUNT(rt1.c0))) THEN ((COUNT(AVG(AVG(rt1.c1))))<<(COUNT(*))) END) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((((((((rt1.c2 COLLATE RTRIM)OR(rt1.c2)))OR(CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR((((rt1.c2))>((vt0.c0))))))AND(vt0.c0 COLLATE RTRIM)))AND(((rt1.c0)IS NOT(rt1.c1)))))OR((('-547516701')>=(rt1.c0)))))AND((NOT (rt1.c2)))))AND(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (((((((((((((((((rt1.c2 COLLATE RTRIM)OR(rt1.c2)))OR(CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR((((rt1.c2))>((vt0.c0))))))AND(vt0.c0 COLLATE RTRIM)))AND(((rt1.c0)IS NOT(rt1.c1)))))OR((('-547516701')>=(rt1.c0)))))AND((NOT (rt1.c2)))))AND(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((((((((((((((((((rt1.c2 COLLATE RTRIM)OR(rt1.c2)))OR(CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR((((rt1.c2))>((vt0.c0))))))AND(vt0.c0 COLLATE RTRIM)))AND(((rt1.c0)IS NOT(rt1.c1)))))OR((('-547516701')>=(rt1.c0)))))AND((NOT (rt1.c2)))))AND(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (ABS(DISTINCT ((vt0.c0)IS NOT(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (ABS(DISTINCT ((vt0.c0)IS NOT(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((ABS(DISTINCT ((vt0.c0)IS NOT(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<>(UNLIKELY(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)!=(UNLIKELY(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)!=(UNLIKELY(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((('') IS FALSE)) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((NOT ((('') IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((('') IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0 NOT INDEXED WHERE (0.524282786754966) GROUP BY rt1.c0, vt0.c0, rt1.c1 UNION SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT (0.524282786754966))) GROUP BY rt1.c0, vt0.c0, rt1.c1 UNION SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE (((0.524282786754966) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING GROUP_CONCAT('0.0884757179982808') UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING (NOT (GROUP_CONCAT('0.0884757179982808'))) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING ((GROUP_CONCAT('0.0884757179982808')) ISNULL);
SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING GROUP_CONCAT('0.0884757179982808') UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING (NOT (GROUP_CONCAT('0.0884757179982808'))) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING ((GROUP_CONCAT('0.0884757179982808')) ISNULL);
SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((NOT (rt1.c2))) BETWEEN (rt1.c2 COLLATE RTRIM) AND ((- (rt1.c1))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((NOT (rt1.c2))) BETWEEN (rt1.c2 COLLATE RTRIM) AND ((- (rt1.c1))))))) UNION ALL SELECT * FROM rt1 WHERE ((((((NOT (rt1.c2))) BETWEEN (rt1.c2 COLLATE RTRIM) AND ((- (rt1.c1))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ((((CAST(rt1.c0 AS INTEGER)))>=((rt1.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((((CAST(rt1.c0 AS INTEGER)))>=((rt1.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((((((CAST(rt1.c0 AS INTEGER)))>=((rt1.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ('HI') GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ('HI'))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((('HI') ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(MIN(rt1.c1)) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(MIN(rt1.c1)))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(MIN(rt1.c1))) ISNULL);
SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c2 END, rt1.c0, x'9945'))<>((((((((((vt0.c0)AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(vt0.c0)), (vt0.c0 IN ()), (((rt1.c2))>=((rt1.c0))))));
SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c2 END, rt1.c0, x'9945'))<>((((((((((vt0.c0)AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(vt0.c0)), (vt0.c0 IN ()), (((rt1.c2))>=((rt1.c0)))))) WHERE ((+ (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c2 END, rt1.c0, x'9945'))<>((((((((((vt0.c0)AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(vt0.c0)), (vt0.c0 IN ()), (((rt1.c2))>=((rt1.c0)))))) WHERE ((NOT ((+ (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c2 END, rt1.c0, x'9945'))!=((((((((((vt0.c0)AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(vt0.c0)), (vt0.c0 IN ()), (((rt1.c2))>=((rt1.c0)))))) WHERE ((((+ (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) ISNULL));
SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c2 END, rt1.c0, x'9945'))<>((((((((((vt0.c0)AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(vt0.c0)), (vt0.c0 IN ()), (((rt1.c2))>=((rt1.c0))))));
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE ((((+ (vt0.c0)))*((rt1.c1 IN (x'2956fdab', rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT ((((+ (vt0.c0)))*((rt1.c1 IN (x'2956fdab', rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((((((+ (vt0.c0)))*((rt1.c1 IN (x'2956fdab', rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((~ (json_valid(rt1.c2)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((~ (json_valid(rt1.c2)))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((~ (json_valid(rt1.c2)))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING TRIM(((TOTAL(rt1.c1)) IS TRUE), (0xfffffffffb9b8ffb IN (rt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(((TOTAL(rt1.c1)) IS TRUE), (0Xfffffffffb9b8ffb IN (rt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING ((TRIM(((TOTAL(rt1.c1)) IS TRUE), (0xfffffffffb9b8ffb IN (rt1.c0)))) ISNULL);
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING TRIM(((TOTAL(rt1.c1)) IS TRUE), (0xfffffffffb9b8ffb IN (rt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(((TOTAL(rt1.c1)) IS TRUE), (0Xfffffffffb9b8ffb IN (rt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0 HAVING ((TRIM(((TOTAL(rt1.c1)) IS TRUE), (0xfffffffffb9b8ffb IN (rt1.c0)))) ISNULL);
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt0 NOT INDEXED, rt1 WHERE (CAST(((rt1.c1) IS FALSE) AS NUMERIC)) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (CAST(((rt1.c1) IS FALSE) AS NUMERIC)))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((CAST(((rt1.c1) IS FALSE) AS NUMERIC)) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)<>(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)!=(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1 NOT INDEXED, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((((((rt1.c1)!=(rt1.c0)))OR(((rt1.c0)<=(rt1.c0)))))OR((((rt1.c1, x'64ee', rt1.c0))<((rt1.c2, rt1.c2, rt1.c2)))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0 UNION SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1 NOT INDEXED, vt0 WHERE ((NOT (((((((rt1.c1)<>(rt1.c0)))OR(((rt1.c0)<=(rt1.c0)))))OR((((rt1.c1, x'64ee', rt1.c0))<((rt1.c2, rt1.c2, rt1.c2)))))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0 UNION SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((((((((rt1.c1)!=(rt1.c0)))OR(((rt1.c0)<=(rt1.c0)))))OR((((rt1.c1, x'64ee', rt1.c0))<((rt1.c2, rt1.c2, rt1.c2)))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1 NOT INDEXED, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT ALL rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2 HAVING CAST(TOTAL(rt1.c1) AS NUMERIC) UNION ALL SELECT rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2 HAVING (NOT (CAST(TOTAL(rt1.c1) AS NUMERIC))) UNION ALL SELECT rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2 HAVING ((CAST(TOTAL(rt1.c1) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2 HAVING CAST(TOTAL(rt1.c1) AS NUMERIC) UNION ALL SELECT rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2 HAVING (NOT (CAST(TOTAL(rt1.c1) AS NUMERIC))) UNION ALL SELECT rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2 HAVING ((CAST(TOTAL(rt1.c1) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (((0.7042546688998504) NOT BETWEEN (rt1.c2) AND (LIKELY(DISTINCT rt1.c0)))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (((0.7042546688998504) NOT BETWEEN (rt1.c2) AND (LIKELY(DISTINCT rt1.c0)))))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((((0.7042546688998504) NOT BETWEEN (rt1.c2) AND (LIKELY(DISTINCT rt1.c0)))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END THEN '476775671' WHEN ((rt1.c0)|(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c0)%(rt1.c0)) END) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END THEN '476775671' WHEN ((rt1.c0)|(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c0)%(rt1.c0)) END))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END THEN '476775671' WHEN ((rt1.c0)|(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c0)%(rt1.c0)) END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((((((((rt1.c0) IS TRUE))OR((NOT (rt1.c2)))))OR(((rt1.c0)==(rt1.c2)))))AND(((rt1.c1)!=(rt1.c2)))))OR(rt1.c0 COLLATE NOCASE))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((((((((((rt1.c0) IS TRUE))OR((NOT (rt1.c2)))))OR(((rt1.c0)=(rt1.c2)))))AND(((rt1.c1)!=(rt1.c2)))))OR(rt1.c0 COLLATE NOCASE))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((((((((((((rt1.c0) IS TRUE))OR((NOT (rt1.c2)))))OR(((rt1.c0)=(rt1.c2)))))AND(((rt1.c1)<>(rt1.c2)))))OR(rt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1 HAVING CASE ((COUNT(*))+(rt1.c2))  WHEN ((SUM(AVG(TOTAL(rt1.c2))))!=(rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (MIN(rt1.c2)) AND (rt1.c0)) END UNION ALL SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1 HAVING (NOT (CASE ((COUNT(*))+(rt1.c2))  WHEN ((SUM(AVG(TOTAL(rt1.c2))))!=(rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (MIN(rt1.c2)) AND (rt1.c0)) END)) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1 HAVING ((CASE ((COUNT(*))+(rt1.c2))  WHEN ((SUM(AVG(TOTAL(rt1.c2))))!=(rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (MIN(rt1.c2)) AND (rt1.c0)) END) ISNULL);
SELECT * FROM rt1 NATURAL JOIN vt0;
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((((((rt1.c1)&(rt1.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(rt1.c2 COLLATE BINARY))) UNION ALL SELECT * FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (((((((rt1.c1)&(rt1.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(rt1.c2 COLLATE BINARY))))) UNION ALL SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((((((((rt1.c1)&(rt1.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(rt1.c2 COLLATE BINARY))) ISNULL));
SELECT * FROM rt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0 NATURAL JOIN rt1;
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0 NATURAL JOIN rt1 WHERE (CASE CAST(679866235 AS NUMERIC)  WHEN CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN x'6d26' END THEN rt1.c1 ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) UNION SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (CASE CAST(679866235 AS NUMERIC)  WHEN CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN x'6d26' END THEN rt1.c1 ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END))) UNION SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0 NATURAL JOIN rt1 WHERE (((CASE CAST(679866235 AS NUMERIC)  WHEN CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN x'6d26' END THEN rt1.c1 ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0 NATURAL JOIN rt1;
SELECT rt1.c1 FROM rt1 INNER JOIN vt0 ON (((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) IN (rt1.c1 COLLATE RTRIM, ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 INNER JOIN vt0 ON (((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) IN (rt1.c1 COLLATE RTRIM, ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) WHERE (((ABS(vt0.c0)) IS TRUE)) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 INNER JOIN vt0 ON (((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) IN (rt1.c1 COLLATE RTRIM, ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) WHERE ((NOT (((ABS(vt0.c0)) IS TRUE)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 INNER JOIN vt0 ON (((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) IN (rt1.c1 COLLATE RTRIM, ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) WHERE (((((ABS(vt0.c0)) IS TRUE)) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 INNER JOIN vt0 ON (((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) IN (rt1.c1 COLLATE RTRIM, ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) GROUP BY rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((((rt1.c1)>=(rt1.c1)))<>(((rt1.c2) ISNULL))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (((((rt1.c1)>=(rt1.c1)))!=(((rt1.c2) ISNULL))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((((((rt1.c1)>=(rt1.c1)))!=(((rt1.c2) ISNULL)))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((((rt1.c1)>=(rt1.c1)))<>(((rt1.c2) ISNULL))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (((((rt1.c1)>=(rt1.c1)))!=(((rt1.c2) ISNULL))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((((((rt1.c1)>=(rt1.c1)))!=(((rt1.c2) ISNULL)))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (0.761018138043859) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (0.761018138043859))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((0.761018138043859) ISNULL));
SELECT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) ISNULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c1) ISNULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1) ISNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.12087114466973337))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((~ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.12087114466973337))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((~ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.12087114466973337))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING (- (MAX('-1747229019'))) COLLATE RTRIM UNION ALL SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING (NOT ((- (MAX('-1747229019'))) COLLATE RTRIM)) UNION ALL SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING (((- (MAX('-1747229019'))) COLLATE RTRIM) ISNULL);
SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING (- (MAX('-1747229019'))) COLLATE RTRIM UNION ALL SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING (NOT ((- (MAX('-1747229019'))) COLLATE RTRIM)) UNION ALL SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING (((- (MAX('-1747229019'))) COLLATE RTRIM) ISNULL);
SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (NULL) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'')>=(CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((x'')>=(CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((x'')>=(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((NOT (rt1.c1))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((((NOT (rt1.c1))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))<<(TOTAL(vt0.c0)))) NOT BETWEEN (((MAX('1922145324'))==(vt0.c0))) AND (MIN(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(*))<<(TOTAL(vt0.c0)))) NOT BETWEEN (((MAX('1922145324'))=(vt0.c0))) AND (MIN(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(*))<<(TOTAL(vt0.c0)))) NOT BETWEEN (((MAX('1922145324'))==(vt0.c0))) AND (MIN(SUM(vt0.c0))))) ISNULL);
SELECT ALL rt1.c1 FROM vt0, rt1 NOT INDEXED;
SELECT ALL rt1.c1 FROM vt0, rt1 WHERE (UPPER(CAST(rt1.c2 AS BLOB))) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 WHERE ((NOT (UPPER(CAST(rt1.c2 AS BLOB))))) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 WHERE (((UPPER(CAST(rt1.c2 AS BLOB))) ISNULL));
SELECT ALL rt1.c1 FROM vt0, rt1 NOT INDEXED;
SELECT DISTINCT rt1.c1 FROM rt1, vt0;
SELECT DISTINCT rt1.c1 FROM rt1, vt0 WHERE (ABS(((rt1.c1) IS FALSE))) UNION SELECT DISTINCT rt1.c1 FROM rt1, vt0 WHERE ((NOT (ABS(((rt1.c1) IS FALSE))))) UNION SELECT DISTINCT rt1.c1 FROM rt1, vt0 WHERE (((ABS(((rt1.c1) IS FALSE))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1, vt0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c2, vt0.c0))))OR(((vt0.c0)<(0x6ece7f2e)))))OR(TRIM(DISTINCT rt1.c1))) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c2, vt0.c0))))OR(((vt0.c0)<(0X6ece7f2e)))))OR(TRIM(DISTINCT rt1.c1))) WHERE ((LIKELY(DISTINCT rt1.c0) IN ())) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c2, vt0.c0))))OR(((vt0.c0)<(0X6ece7f2e)))))OR(TRIM(DISTINCT rt1.c1))) WHERE ((NOT ((LIKELY(DISTINCT rt1.c0) IN ())))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 NOT INDEXED LEFT OUTER JOIN vt0 ON (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c2, vt0.c0))))OR(((vt0.c0)<(0X6ece7f2e)))))OR(TRIM(DISTINCT rt1.c1))) WHERE ((((LIKELY(DISTINCT rt1.c0) IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c2, vt0.c0))))OR(((vt0.c0)<(0x6ece7f2e)))))OR(TRIM(DISTINCT rt1.c1))) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT SUM(((((((rt1.c0)OR(rt1.c0)))AND(NULL))) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c2))) AND ((((rt1.c2))<=((NULL)))))) FROM rt1, vt0 ORDER BY ((((rt1.c2)||(rt1.c1))) ISNULL) DESC, ((0.029138163046263266) IS TRUE) DESC  NULLS LAST;
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2))<((rt1.c0))) IN ());
SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2))<((rt1.c0))) IN ()) WHERE (((((((rt1.c0)OR(rt1.c1)))OR(x'')))IS NOT((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2))<((rt1.c0))) IN ()) WHERE ((NOT (((((((rt1.c0)OR(rt1.c1)))OR(x'')))IS NOT((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2))<((rt1.c0))) IN ()) WHERE (((((((((rt1.c0)OR(rt1.c1)))OR(x'')))IS NOT((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2))<((rt1.c0))) IN ());
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE (CASE (((rt1.c0))>=((rt1.c0)))  WHEN (NULL IN (rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CASE rt1.c1  WHEN rt1.c0 THEN 0.26179032984386774 END THEN (rt1.c0 IN ()) WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (CASE (((rt1.c0))>=((rt1.c0)))  WHEN (NULL IN (rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CASE rt1.c1  WHEN rt1.c0 THEN 0.26179032984386774 END THEN (rt1.c0 IN ()) WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE (((CASE (((rt1.c0))>=((rt1.c0)))  WHEN (NULL IN (rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CASE rt1.c1  WHEN rt1.c0 THEN 0.26179032984386774 END THEN (rt1.c0 IN ()) WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(HEX(vt0.c0))))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '')))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(HEX(vt0.c0))))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '')))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(HEX(vt0.c0))))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '')))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2) ISNULL))AND(((('-1998798294')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))))OR((((vt0.c0, vt0.c0, rt1.c2, rt1.c2, rt1.c1))>((rt1.c0, vt0.c0, rt1.c2, -798390534, rt1.c0)))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (((((((rt1.c2) ISNULL))AND(((('-1998798294')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))))OR((((vt0.c0, vt0.c0, rt1.c2, rt1.c2, rt1.c1))>((rt1.c0, vt0.c0, rt1.c2, -798390534, rt1.c0)))))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c2) ISNULL))AND(((('-1998798294')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))))OR((((vt0.c0, vt0.c0, rt1.c2, rt1.c2, rt1.c1))>((rt1.c0, vt0.c0, rt1.c2, -798390534, rt1.c0)))))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((((vt0.c0))<>((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((NOT ((((vt0.c0))<>((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((((NOT ((((vt0.c0))<>((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)OR((((vt0.c0))<>((vt0.c0))))))AND((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)OR((((vt0.c0))<>((vt0.c0))))))AND((+ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)OR((((vt0.c0))!=((vt0.c0))))))AND((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((((((vt0.c0)GLOB(vt0.c0)))OR(COUNT(*))))AND(MIN(rt1.c0))) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (((((((vt0.c0)GLOB(vt0.c0)))OR(COUNT(*))))AND(MIN(rt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((((((((vt0.c0)GLOB(vt0.c0)))OR(COUNT(*))))AND(MIN(rt1.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((((((vt0.c0)GLOB(vt0.c0)))OR(COUNT(*))))AND(MIN(rt1.c0))) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (((((((vt0.c0)GLOB(vt0.c0)))OR(COUNT(*))))AND(MIN(rt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((((((((vt0.c0)GLOB(vt0.c0)))OR(COUNT(*))))AND(MIN(rt1.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (COUNT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (COUNT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX(((((rt1.c2)>=(vt0.c0)))||((((rt1.c0))<>((vt0.c0)))))) FROM rt1, vt0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE (rt1.c1) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE (((rt1.c1) ISNULL));
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))!=(NULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))<>(NULL)) WHERE (vt0.c0) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))!=(NULL)) WHERE ((NOT (vt0.c0))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))<>(NULL)) WHERE (((vt0.c0) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))!=(NULL)) GROUP BY rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(TOTAL(vt0.c0)))OR(AVG(vt0.c0))))AND(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(TOTAL(vt0.c0)))OR(AVG(vt0.c0))))AND(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(TOTAL(vt0.c0)))OR(AVG(vt0.c0))))AND(COUNT(*)))) ISNULL);
SELECT rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0;
SELECT rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE (((DATE(vt0.c0, vt0.c0, rt1.c1)) BETWEEN (((rt1.c1)LIKE(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c1 END))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((NOT (((DATE(vt0.c0, vt0.c0, rt1.c1)) BETWEEN (((rt1.c1)LIKE(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c1 END))))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 WHERE (((((DATE(vt0.c0, vt0.c0, rt1.c1)) BETWEEN (((rt1.c1)LIKE(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c1 END))) ISNULL));
SELECT rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ((((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0))))>((((rt1.c1)GLOB(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0))))>((((rt1.c1)GLOB(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((((((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0))))>((((rt1.c1)GLOB(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) AND ((rt1.c1)))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) AND ((rt1.c1)))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) AND ((rt1.c1)))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((CASE vt0.c0  WHEN TOTAL(COUNT(*)) THEN COUNT(x'') ELSE COUNT(*) END)OR(MAX(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (((CASE vt0.c0  WHEN TOTAL(COUNT(*)) THEN COUNT(x'') ELSE COUNT(*) END)OR(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((((CASE vt0.c0  WHEN TOTAL(COUNT(*)) THEN COUNT(x'') ELSE COUNT(*) END)OR(MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c1))) AND (vt0.c0))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c1))) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c1))) AND (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((((CASE WHEN rt1.c2 THEN 'nowHq{' END)AND(((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))))AND((rt1.c0 IN (rt1.c0)))))OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c2)|(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((((CASE WHEN rt1.c2 THEN 'nowHq{' END)AND(((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))))AND((rt1.c0 IN (rt1.c0)))))OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c2)|(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((((CASE WHEN rt1.c2 THEN 'nowHq{' END)AND(((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))))AND((rt1.c0 IN (rt1.c0)))))OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c2)|(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((vt0.c0)=(rt1.c1))))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((NOT (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((vt0.c0)==(rt1.c1))))))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((vt0.c0)=(rt1.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING MIN(MAX(rt1.c0)) UNION ALL SELECT rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING (NOT (MIN(MAX(rt1.c0)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING ((MIN(MAX(rt1.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE))>>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))>>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE))>>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((QUOTE(rt1.c1) IN ())) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT ((QUOTE(rt1.c1) IN ())))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((((QUOTE(rt1.c1) IN ())) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.793624521722385))) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.793624521722385))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.793624521722385))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(DISTINCT ((((TOTAL(COUNT(vt0.c0)))OR(MAX(GROUP_CONCAT(x'')))))OR(vt0.c0)), COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(DISTINCT ((((TOTAL(COUNT(vt0.c0)))OR(MAX(GROUP_CONCAT(x'')))))OR(vt0.c0)), COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(DISTINCT ((((TOTAL(COUNT(vt0.c0)))OR(MAX(GROUP_CONCAT(x'')))))OR(vt0.c0)), COUNT(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c2, rt1.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM vt0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(MAX(AVG(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(MAX(AVG(MIN(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(MAX(AVG(MIN(vt0.c0))))) ISNULL);
SELECT TOTAL((((0.4940975669158083) IS TRUE) IN ())) FROM rt1, vt0 ORDER BY LOWER(0.44613737031879497)  NULLS LAST;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))*(CAST(0Xffffffffdf11d090 AS REAL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))*(CAST(0xffffffffdf11d090 AS REAL)))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))*(CAST(0xffffffffdf11d090 AS REAL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) NOT NULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))>=((vt0.c0))) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (~ ((AVG(rt1.c2) IN ()))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT ((~ ((AVG(rt1.c2) IN ()))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (((~ ((AVG(rt1.c2) IN ())))) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (~ ((AVG(rt1.c2) IN ()))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT ((~ ((AVG(rt1.c2) IN ()))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (((~ ((AVG(rt1.c2) IN ())))) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt1.c0))=((rt1.c2, rt1.c0, 1.8015381E9)))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (CAST(rt1.c0 AS REAL)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt1.c0))=((rt1.c2, rt1.c0, 1.8015381E9)))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (CAST(rt1.c0 AS REAL))) WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt1.c0))=((rt1.c2, rt1.c0, 1.8015381E9)))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (CAST(rt1.c0 AS REAL))) WHERE ((NOT (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) IS TRUE)))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt1.c0))==((rt1.c2, rt1.c0, 1.8015381E9)))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (CAST(rt1.c0 AS REAL))) WHERE (((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt1.c0))=((rt1.c2, rt1.c0, 1.8015381E9)))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (CAST(rt1.c0 AS REAL)));
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (((((((((((((rt1.c0)OR('6/')))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (((((((((((((rt1.c0)OR('6/')))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((((((((((((((rt1.c0)OR('6/')))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (0.25804464403716465) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (0.25804464403716465))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((0.25804464403716465) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT TOTAL(((SQLITE_SOURCE_ID()) IS TRUE)) FROM rt1 NOT INDEXED, vt0 ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((NULL)))) BETWEEN ((rt1.c2 IN ())) AND (rt1.c2))  NULLS FIRST;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE (TIME(((rt1.c2)>>(rt1.c0)), ((rt1.c0)%(vt0.c0)), ((rt1.c0)IS(rt1.c1)), (((rt1.c0, vt0.c0, rt1.c2))=((rt1.c0, vt0.c0, vt0.c0))), ((((rt1.c2)AND(x'')))AND(vt0.c0)))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((NOT (TIME(((rt1.c2)>>(rt1.c0)), ((rt1.c0)%(vt0.c0)), ((rt1.c0)IS(rt1.c1)), (((rt1.c0, vt0.c0, rt1.c2))==((rt1.c0, vt0.c0, vt0.c0))), ((((rt1.c2)AND(x'')))AND(vt0.c0)))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE (((TIME(((rt1.c2)>>(rt1.c0)), ((rt1.c0)%(vt0.c0)), ((rt1.c0)IS(rt1.c1)), (((rt1.c0, vt0.c0, rt1.c2))==((rt1.c0, vt0.c0, vt0.c0))), ((((rt1.c2)AND(x'')))AND(vt0.c0)))) ISNULL));
SELECT ALL rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c1 FROM vt0 NOT INDEXED, rt1 WHERE (((((IFNULL(rt1.c1, rt1.c0))OR(((vt0.c0) IS TRUE))))OR((((0.37787925241145637)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT rt1.c1 FROM vt0, rt1 WHERE ((NOT (((((IFNULL(rt1.c1, rt1.c0))OR(((vt0.c0) IS TRUE))))OR((((0.37787925241145637)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT rt1.c1 FROM vt0, rt1 WHERE (((((((IFNULL(rt1.c1, rt1.c0))OR(((vt0.c0) IS TRUE))))OR((((0.37787925241145637)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM vt0, rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((((- (rt1.c0)))/((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1)))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((((- (rt1.c0)))/((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1)))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((((((- (rt1.c0)))/((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1)))))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c0) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(LOWER(DISTINCT vt0.c0))))AND((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE RTRIM)OR(LOWER(DISTINCT vt0.c0))))AND((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0 COLLATE RTRIM)OR(LOWER(DISTINCT vt0.c0))))AND((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING AVG(MIN('')) UNION ALL SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING (NOT (AVG(MIN('')))) UNION ALL SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING ((AVG(MIN(''))) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE RTRIM)|(((vt0.c0)<(rt1.c1))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)|(((vt0.c0)<(rt1.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0 COLLATE RTRIM)|(((vt0.c0)<(rt1.c1))))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt0, rt1 WHERE (((((((rt1.c1) NOT NULL))AND(rt1.c0 COLLATE BINARY)))AND(NULL))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM vt0, rt1 WHERE ((NOT (((((((rt1.c1) NOT NULL))AND(rt1.c0 COLLATE BINARY)))AND(NULL))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM vt0, rt1 WHERE (((((((((rt1.c1) NOT NULL))AND(rt1.c0 COLLATE BINARY)))AND(NULL))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING SUM(COUNT(*)) COLLATE NOCASE UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (SUM(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((SUM(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE ((+ (((rt1.c0)IS NOT(rt1.c0))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT ((+ (((rt1.c0)IS NOT(rt1.c0))))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((((+ (((rt1.c0)IS NOT(rt1.c0))))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((NULL) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT rt1.c1, rt1.c0)));
SELECT DISTINCT rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((NULL) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT rt1.c1, rt1.c0))) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)/(((NULL)>(vt0.c0))))) UNION SELECT DISTINCT rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((NULL) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT rt1.c1, rt1.c0))) WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)/(((NULL)>(vt0.c0))))))) UNION SELECT DISTINCT rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((NULL) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT rt1.c1, rt1.c0))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)/(((NULL)>(vt0.c0))))) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((NULL) BETWEEN ((vt0.c0 IN ())) AND (IFNULL(DISTINCT rt1.c1, rt1.c0)));
SELECT rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (CASE WHEN rt1.c2 THEN ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) ELSE (((vt0.c0, rt1.c0, NULL))>=((rt1.c2, rt1.c0, rt1.c1))) END) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT (CASE WHEN rt1.c2 THEN ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) ELSE (((vt0.c0, rt1.c0, NULL))>=((rt1.c2, rt1.c0, rt1.c1))) END))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (((CASE WHEN rt1.c2 THEN ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) ELSE (((vt0.c0, rt1.c0, NULL))>=((rt1.c2, rt1.c0, rt1.c1))) END) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING 0x520d0349 UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (0x520d0349)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((0X520d0349) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING 0x520d0349 UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (0x520d0349)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((0X520d0349) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c2) ISNULL)) NOT BETWEEN (rt1.c0) AND (((NULL) BETWEEN (rt1.c1) AND (rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c2) ISNULL)) NOT BETWEEN (rt1.c0) AND (((NULL) BETWEEN (rt1.c1) AND (rt1.c0))))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c2) ISNULL)) NOT BETWEEN (rt1.c0) AND (((NULL) BETWEEN (rt1.c1) AND (rt1.c0))))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((((- (rt1.c1))) BETWEEN (((rt1.c0)IS NOT(vt0.c0))) AND (((vt0.c0)=(vt0.c0))))) UNION SELECT DISTINCT rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((NOT ((((- (rt1.c1))) BETWEEN (((rt1.c0)IS NOT(vt0.c0))) AND (((vt0.c0)=(vt0.c0))))))) UNION SELECT DISTINCT rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((((((- (rt1.c1))) BETWEEN (((rt1.c0)IS NOT(vt0.c0))) AND (((vt0.c0)=(vt0.c0))))) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT ALL rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((x'')||(rt1.c1)) ELSE rt1.c0 END) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((x'')||(rt1.c1)) ELSE rt1.c0 END))) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((x'')||(rt1.c1)) ELSE rt1.c0 END) ISNULL)) GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING MAX(TOTAL(rt1.c1)) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (MAX(TOTAL(rt1.c1)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((MAX(TOTAL(rt1.c1))) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE ('349179950') UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT ('349179950'))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((('349179950') ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(NULL)))OR(((rt1.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(NULL)))OR(((rt1.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(NULL)))OR(((rt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON (('Z撛') ISNULL) GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON (('Z撛') ISNULL) WHERE (json_array(0.5696009730705569, CASE rt1.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c1 END)) GROUP BY vt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON (('Z撛') ISNULL) WHERE ((NOT (json_array(0.5696009730705569, CASE rt1.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c1 END)))) GROUP BY vt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON (('Z撛') ISNULL) WHERE (((json_array(0.5696009730705569, CASE rt1.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c1 END)) ISNULL)) GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON (('Z撛') ISNULL) GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((((CAST(rt1.c1 AS BLOB)))>=((vt0.c0)))) UNION ALL SELECT ALL rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((NOT ((((CAST(rt1.c1 AS BLOB)))>=((vt0.c0)))))) UNION ALL SELECT rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((((((CAST(rt1.c1 AS BLOB)))>=((vt0.c0)))) ISNULL));
SELECT ALL rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY vt0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1 WHERE (CAST((+ (rt1.c1)) AS REAL)) GROUP BY vt0.c0, rt1.c0 UNION SELECT vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (CAST((+ (rt1.c1)) AS REAL)))) GROUP BY vt0.c0, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1 WHERE (((CAST((+ (rt1.c1)) AS REAL)) ISNULL)) GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY vt0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING TOTAL((MIN(rt1.c1) IN ())) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (TOTAL((MIN(rt1.c1) IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING ((TOTAL((MIN(rt1.c1) IN ()))) ISNULL);
SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING TOTAL((MIN(rt1.c1) IN ())) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (TOTAL((MIN(rt1.c1) IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING ((TOTAL((MIN(rt1.c1) IN ()))) ISNULL);
SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (CASE WHEN rt1.c0 THEN ((((((((rt1.c2)AND(0X1aafc179)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)) END) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((NOT (CASE WHEN rt1.c0 THEN ((((((((rt1.c2)AND(0x1aafc179)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)) END))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (((CASE WHEN rt1.c0 THEN ((((((((rt1.c2)AND(0x1aafc179)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)) END) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (((rt1.c1) BETWEEN ((~ (rt1.c1))) AND (((vt0.c0)<(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (((rt1.c1) BETWEEN ((~ (rt1.c1))) AND (((vt0.c0)<(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((((rt1.c1) BETWEEN ((~ (rt1.c1))) AND (((vt0.c0)<(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))=((rt1.c2))))) AND ((((rt1.c2)IS NOT(NULL)))))) GROUP BY vt0.c0, rt1.c2, rt1.c0 UNION SELECT vt0.c0, rt1.c2, rt1.c0 FROM vt0 NOT INDEXED, rt1 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))==((rt1.c2))))) AND ((((rt1.c2)IS NOT(NULL)))))))) GROUP BY vt0.c0, rt1.c2, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((((((vt0.c0)) NOT BETWEEN (((((vt0.c0))=((rt1.c2))))) AND ((((rt1.c2)IS NOT(NULL)))))) ISNULL)) GROUP BY vt0.c0, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(TOTAL(COUNT(*))))) ISNULL);
SELECT * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (CAST('v4Kv&\' AS BLOB)) ORDER BY (x'' IN (NULLIF(DISTINCT rt1.c1, rt1.c0), ((((vt0.c0)OR(rt1.c1)))OR(rt1.c2)))) ASC  NULLS LAST, CASE ((rt1.c0) ISNULL)  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)) ELSE CAST(rt1.c2 AS NUMERIC) END  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((NOT (CAST('v4Kv&\' AS BLOB)))) ORDER BY (x'' IN (NULLIF(DISTINCT rt1.c1, rt1.c0), ((((vt0.c0)OR(rt1.c1)))OR(rt1.c2)))) ASC  NULLS LAST, CASE ((rt1.c0) ISNULL)  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)) ELSE CAST(rt1.c2 AS NUMERIC) END  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (((CAST('v4Kv&\' AS BLOB)) ISNULL)) ORDER BY (x'' IN (NULLIF(DISTINCT rt1.c1, rt1.c0), ((((vt0.c0)OR(rt1.c1)))OR(rt1.c2)))) ASC  NULLS LAST, CASE ((rt1.c0) ISNULL)  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)) ELSE CAST(rt1.c2 AS NUMERIC) END  NULLS FIRST;
SELECT * FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((HEX(x'5b47') IN (COALESCE(rt1.c2, rt1.c0)))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((HEX(x'5b47') IN (COALESCE(rt1.c2, rt1.c0)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((HEX(x'5b47') IN (COALESCE(rt1.c2, rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((((((rt1.c0)>(rt1.c0))))!=((ABS(rt1.c2))))) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT ((((((rt1.c0)>(rt1.c0))))<>((ABS(rt1.c2))))))) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((((((((rt1.c0)>(rt1.c0))))!=((ABS(rt1.c2))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN (((((vt0.c0)OR(vt0.c0)))AND(0X5c0de04e))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN (((((vt0.c0)OR(vt0.c0)))AND(0x5c0de04e))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (((((vt0.c0)OR(vt0.c0)))AND(0X5c0de04e))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ((+ (((x'')>>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((+ (((x'')>>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((((+ (((x'')>>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c2))) ISNULL)) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (((((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c2))) ISNULL)))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((((((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c2))) ISNULL)) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT vt0.c0 FROM rt1, vt0;
SELECT DISTINCT vt0.c0 FROM rt1, vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c0 FROM rt1, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0 FROM rt1, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0 FROM rt1, vt0;
SELECT vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((((((rt1.c1))<>((rt1.c0)))) IS TRUE)) GROUP BY vt0.c0, rt1.c1 UNION SELECT vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT ((((((rt1.c1))!=((rt1.c0)))) IS TRUE)))) GROUP BY vt0.c0, rt1.c1 UNION SELECT vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((((((((rt1.c1))!=((rt1.c0)))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, rt1.c1;
SELECT vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING MIN((((TOTAL(rt1.c2))) BETWEEN ((rt1.c1)) AND ((TOTAL(MAX(COUNT(*))))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (MIN((((TOTAL(rt1.c2))) BETWEEN ((rt1.c1)) AND ((TOTAL(MAX(COUNT(*))))))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((MIN((((TOTAL(rt1.c2))) BETWEEN ((rt1.c1)) AND ((TOTAL(MAX(COUNT(*)))))))) ISNULL);
SELECT rt1.c2 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 WHERE ((+ (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((NOT ((+ (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))))))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((((+ (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))))) ISNULL));
SELECT rt1.c2 FROM rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2;
SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE (ABS((rt1.c2 IN ()))) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT (ABS((rt1.c2 IN ()))))) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE (((ABS((rt1.c2 IN ()))) ISNULL)) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2;
SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING TOTAL(GROUP_CONCAT(MAX(rt1.c1))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(rt1.c1))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((TOTAL(GROUP_CONCAT(MAX(rt1.c1)))) ISNULL);
SELECT rt1.c0 FROM rt1, vt0;
SELECT ALL rt1.c0 FROM rt1, vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((rt1.c2)OR(vt0.c0)))OR(rt1.c0))) AND (rt1.c2))) UNION ALL SELECT rt1.c0 FROM rt1, vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) BETWEEN (((((rt1.c2)OR(vt0.c0)))OR(rt1.c0))) AND (rt1.c2))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt0 WHERE (((((((vt0.c0) ISNULL)) BETWEEN (((((rt1.c2)OR(vt0.c0)))OR(rt1.c0))) AND (rt1.c2))) ISNULL));
SELECT rt1.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (((((- (rt1.c1)), ((vt0.c0)>(rt1.c2)), ((rt1.c2) BETWEEN (vt0.c0) AND ('2138108434')), ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1)), (('-719050022') NOT NULL)))<(((- (rt1.c1)), CASE WHEN rt1.c0 THEN vt0.c0 ELSE 0.19730668199058032 END, rt1.c1, x'2c5e', ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (((((- (rt1.c1)), ((vt0.c0)>(rt1.c2)), ((rt1.c2) BETWEEN (vt0.c0) AND ('2138108434')), ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1)), (('-719050022') NOT NULL)))<(((- (rt1.c1)), CASE WHEN rt1.c0 THEN vt0.c0 ELSE 0.19730668199058032 END, rt1.c1, x'2c5e', ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((((((- (rt1.c1)), ((vt0.c0)>(rt1.c2)), ((rt1.c2) BETWEEN (vt0.c0) AND ('2138108434')), ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1)), (('-719050022') NOT NULL)))<(((- (rt1.c1)), CASE WHEN rt1.c0 THEN vt0.c0 ELSE 0.19730668199058032 END, rt1.c1, x'2c5e', ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) IS FALSE)) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) IS FALSE)))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) IS FALSE)) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (SUM(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (SUM(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 IN (((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (CAST(rt1.c0 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (CAST(rt1.c0 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (json_quote((vt0.c0 IN ()))) UNION ALL SELECT rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (json_quote((vt0.c0 IN ()))))) UNION ALL SELECT rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((json_quote((vt0.c0 IN ()))) ISNULL));
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (CAST(((x'')<=(rt1.c1)) AS INTEGER)) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CAST(((x'')<=(rt1.c1)) AS INTEGER)))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((CAST(((x'')<=(rt1.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((x'b90c')OR(CASE WHEN rt1.c2 THEN rt1.c0 END)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((x'b90c')OR(CASE WHEN rt1.c2 THEN rt1.c0 END)) WHERE (UPPER(DISTINCT ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0 UNION SELECT rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((x'b90c')OR(CASE WHEN rt1.c2 THEN rt1.c0 END)) WHERE ((NOT (UPPER(DISTINCT ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((x'b90c')OR(CASE WHEN rt1.c2 THEN rt1.c0 END)) WHERE (((UPPER(DISTINCT ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((x'b90c')OR(CASE WHEN rt1.c2 THEN rt1.c0 END)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING NULL COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (NULL COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((NULL COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING NULL COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (NULL COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((NULL COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE (((NULL) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (rt1.c0))) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((NULL) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (rt1.c0))))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE (((((NULL) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (rt1.c0))) ISNULL));
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (UPPER(((rt1.c0)&(rt1.c0)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (UPPER(((rt1.c0)&(rt1.c0)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((UPPER(((rt1.c0)&(rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))>(((vt0.c0)-(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('1248534346')))) AND ((vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c0)))>(((vt0.c0)-(vt0.c0))))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('1248534346')))) AND ((vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))>(((vt0.c0)-(vt0.c0))))) ISNULL)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('1248534346')))) AND ((vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0 WHERE (((CAST(rt1.c0 AS REAL)) IS FALSE)) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (((CAST(rt1.c0 AS REAL)) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0 WHERE (((((CAST(rt1.c0 AS REAL)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE ((NOT (CAST(rt1.c0 COLLATE NOCASE AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE (((CAST(rt1.c0 COLLATE NOCASE AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND (((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND (((vt0.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND (((vt0.c0 IN ()))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)>>(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)>>(vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN CAST(x'45f3' AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN CAST(x'45f3' AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CAST(x'45f3' AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((rt1.c1 IN ()) COLLATE RTRIM) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((rt1.c1 IN ()) COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c1 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1 HAVING (- (CAST(COUNT(SUM(COUNT(AVG(MAX(rt1.c1))))) AS TEXT))) UNION ALL SELECT rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1 HAVING (NOT ((- (CAST(COUNT(SUM(COUNT(AVG(MAX(rt1.c1))))) AS TEXT))))) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1 HAVING (((- (CAST(COUNT(SUM(COUNT(AVG(MAX(rt1.c1))))) AS TEXT)))) ISNULL);
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS NUMERIC)) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (CAST(CAST(rt1.c2 AS INTEGER) AS NUMERIC)))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((CAST(CAST(rt1.c2 AS INTEGER) AS NUMERIC)) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (CAST(((rt1.c0) ISNULL) AS TEXT)) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (CAST(((rt1.c0) ISNULL) AS TEXT)))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((CAST(((rt1.c0) ISNULL) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON NULLIF(((rt1.c2) IS TRUE), ((vt0.c0)<(vt0.c0))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON NULLIF(((rt1.c2) IS TRUE), ((vt0.c0)<(vt0.c0))) WHERE (((((((((((((rt1.c1 COLLATE BINARY)AND(IFNULL(NULL, vt0.c0))))AND(((rt1.c0)IS NOT(rt1.c2)))))OR(((rt1.c2)IS(rt1.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)))))OR(NULL)))OR(CAST(vt0.c0 AS BLOB)))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON NULLIF(((rt1.c2) IS TRUE), ((vt0.c0)<(vt0.c0))) WHERE ((NOT (((((((((((((rt1.c1 COLLATE BINARY)AND(IFNULL(NULL, vt0.c0))))AND(((rt1.c0)IS NOT(rt1.c2)))))OR(((rt1.c2)IS(rt1.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)))))OR(NULL)))OR(CAST(vt0.c0 AS BLOB)))))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON NULLIF(((rt1.c2) IS TRUE), ((vt0.c0)<(vt0.c0))) WHERE (((((((((((((((rt1.c1 COLLATE BINARY)AND(IFNULL(NULL, vt0.c0))))AND(((rt1.c0)IS NOT(rt1.c2)))))OR(((rt1.c2)IS(rt1.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)))))OR(NULL)))OR(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON NULLIF(((rt1.c2) IS TRUE), ((vt0.c0)<(vt0.c0))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN rt1.c0 COLLATE RTRIM END UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN rt1.c0 COLLATE RTRIM END)) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN rt1.c0 COLLATE RTRIM END) ISNULL);
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN rt1.c0 COLLATE RTRIM END UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN rt1.c0 COLLATE RTRIM END)) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN rt1.c0 COLLATE RTRIM END) ISNULL);
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (JULIANDAY(((rt1.c2)OR(rt1.c0)), CAST(rt1.c2 AS NUMERIC), (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((NULL, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c1))), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)), ((rt1.c0) NOT NULL))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (JULIANDAY(((rt1.c2)OR(rt1.c0)), CAST(rt1.c2 AS NUMERIC), (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((NULL, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c1))), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)), ((rt1.c0) NOT NULL))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((JULIANDAY(((rt1.c2)OR(rt1.c0)), CAST(rt1.c2 AS NUMERIC), (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((NULL, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c1))), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)), ((rt1.c0) NOT NULL))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))>>(')#^7)0O'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))>>(')#^7)0O'))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))>>(')#^7)0O'))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL)) NOT BETWEEN ((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2)))) AND ((NOT (rt1.c1))));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL)) NOT BETWEEN ((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2)))) AND ((NOT (rt1.c1)))) WHERE (x'') UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL)) NOT BETWEEN ((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2)))) AND ((NOT (rt1.c1)))) WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL)) NOT BETWEEN ((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2)))) AND ((NOT (rt1.c1)))) WHERE (((x'') ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL)) NOT BETWEEN ((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2)))) AND ((NOT (rt1.c1))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))|((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0)))|((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))|((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((CHANGES())OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1824217563' THEN vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CHANGES())OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1824217563' THEN vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((CHANGES())OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1824217563' THEN vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((rt1.c0)==(rt1.c1)))IS(CHANGES()))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c0)=(rt1.c1)))IS(CHANGES()))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((((rt1.c0)=(rt1.c1)))IS(CHANGES()))) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN rt1.c2 THEN rt1.c2 END, (vt0.c0 IN ()));
SELECT DISTINCT * FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN rt1.c2 THEN rt1.c2 END, (vt0.c0 IN ())) WHERE (((0.6692200329425141) IS FALSE)) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN rt1.c2 THEN rt1.c2 END, (vt0.c0 IN ())) WHERE ((NOT (((0.6692200329425141) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN rt1.c2 THEN rt1.c2 END, (vt0.c0 IN ())) WHERE (((((0.6692200329425141) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN rt1.c2 THEN rt1.c2 END, (vt0.c0 IN ()));
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 WHERE (CAST(((((vt0.c0)AND(rt1.c2)))AND(rt1.c1)) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((NOT (CAST(((((vt0.c0)AND(rt1.c2)))AND(rt1.c1)) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE (((CAST(((((vt0.c0)AND(rt1.c2)))AND(rt1.c1)) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (0.346305867441013) UNION ALL SELECT * FROM rt1 WHERE ((NOT (0.346305867441013))) UNION ALL SELECT ALL * FROM rt1 WHERE (((0.346305867441013) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((NOT (vt0.c0)) IN (((vt0.c0) NOTNULL), (vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((NOT (vt0.c0)) IN (((vt0.c0) NOTNULL), (vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((NOT (vt0.c0)) IN (((vt0.c0) NOTNULL), (vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((x'')) AND (((~ (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((x'')) AND (((~ (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((x'')) AND (((~ (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (CASE ((rt1.c0) ISNULL)  WHEN ((NULL) IS TRUE) THEN CAST(rt1.c2 AS BLOB) ELSE LIKELY(rt1.c2) END) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((NOT (CASE ((rt1.c0) ISNULL)  WHEN ((NULL) IS TRUE) THEN CAST(rt1.c2 AS BLOB) ELSE LIKELY(rt1.c2) END))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (((CASE ((rt1.c0) ISNULL)  WHEN ((NULL) IS TRUE) THEN CAST(rt1.c2 AS BLOB) ELSE LIKELY(rt1.c2) END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (CASE WHEN ((rt1.c0)||(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c0 AS TEXT) WHEN UPPER(rt1.c2) THEN CAST(rt1.c2 AS REAL) END) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c0)||(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c0 AS TEXT) WHEN UPPER(rt1.c2) THEN CAST(rt1.c2 AS REAL) END))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((CASE WHEN ((rt1.c0)||(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c0 AS TEXT) WHEN UPPER(rt1.c2) THEN CAST(rt1.c2 AS REAL) END) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING GROUP_CONCAT(TOTAL(MIN(MIN(vt0.c0))) COLLATE RTRIM) UNION ALL SELECT rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(MIN(MIN(vt0.c0))) COLLATE RTRIM))) UNION ALL SELECT rt1.c2 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(TOTAL(MIN(MIN(vt0.c0))) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (((((((NULL) NOT BETWEEN (vt0.c0) AND (rt1.c0)))OR(json_patch(NULL, vt0.c0))))AND((rt1.c2 IN (vt0.c0))))) UNION ALL SELECT ALL * FROM rt1 NOT INDEXED, vt0 WHERE ((NOT (((((((NULL) NOT BETWEEN (vt0.c0) AND (rt1.c0)))OR(json_patch(NULL, vt0.c0))))AND((rt1.c2 IN (vt0.c0))))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((((((((NULL) NOT BETWEEN (vt0.c0) AND (rt1.c0)))OR(json_patch(NULL, vt0.c0))))AND((rt1.c2 IN (vt0.c0))))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (('921148430' COLLATE BINARY)) AND ((json_extract(rt1.c1, rt1.c0))));
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (('921148430' COLLATE BINARY)) AND ((json_extract(rt1.c1, rt1.c0)))) WHERE ((NOT (CAST(rt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (('921148430' COLLATE BINARY)) AND ((json_extract(rt1.c1, rt1.c0)))) WHERE ((NOT ((NOT (CAST(rt1.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (('921148430' COLLATE BINARY)) AND ((json_extract(rt1.c1, rt1.c0)))) WHERE ((((NOT (CAST(rt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (('921148430' COLLATE BINARY)) AND ((json_extract(rt1.c1, rt1.c0))));
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (0X4c118cc6)) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (0x4c118cc6)) WHERE (LENGTH(ABS(DISTINCT vt0.c0))) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (0X4c118cc6)) WHERE ((NOT (LENGTH(ABS(DISTINCT vt0.c0))))) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (0X4c118cc6)) WHERE (((LENGTH(ABS(DISTINCT vt0.c0))) ISNULL)) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (0X4c118cc6)) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 NOT INDEXED GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING COUNT(CAST(MIN(SUM(vt0.c0)) AS TEXT)) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING (NOT (COUNT(CAST(MIN(SUM(vt0.c0)) AS TEXT)))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING ((COUNT(CAST(MIN(SUM(vt0.c0)) AS TEXT))) ISNULL);
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE ((((((vt0.c0) BETWEEN (rt1.c1) AND (0.6968051134397613)), rt1.c2, ((vt0.c0)>(rt1.c2))))>((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END, rt1.c1 COLLATE NOCASE, ((rt1.c1) NOTNULL))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT ((((((vt0.c0) BETWEEN (rt1.c1) AND (0.6968051134397613)), rt1.c2, ((vt0.c0)>(rt1.c2))))>((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END, rt1.c1 COLLATE NOCASE, ((rt1.c1) NOTNULL))))))) UNION ALL SELECT * FROM rt1, vt0 WHERE ((((((((vt0.c0) BETWEEN (rt1.c1) AND (0.6968051134397613)), rt1.c2, ((vt0.c0)>(rt1.c2))))>((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END, rt1.c1 COLLATE NOCASE, ((rt1.c1) NOTNULL))))) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((((vt0.c0)%(rt1.c2)) IN ())) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT ((((vt0.c0)%(rt1.c2)) IN ())))) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((((((vt0.c0)%(rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE (((((rt1.c1) IS TRUE))GLOB((+ (rt1.c2))))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((((rt1.c1) IS TRUE))GLOB((+ (rt1.c2))))))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 WHERE (((((((rt1.c1) IS TRUE))GLOB((+ (rt1.c2))))) ISNULL)) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (LIKELIHOOD(((rt1.c0)IS NOT(rt1.c1)), 0.9726511488452997)) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (LIKELIHOOD(((rt1.c0)IS NOT(rt1.c1)), 0.9726511488452997)))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((LIKELIHOOD(((rt1.c0)IS NOT(rt1.c1)), 0.9726511488452997)) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(rt1.c0 AS BLOB)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(rt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING AVG(CAST(0.46270390333667033 AS INTEGER)) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (AVG(CAST(0.46270390333667033 AS INTEGER)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((AVG(CAST(0.46270390333667033 AS INTEGER))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING AVG(CAST(0.46270390333667033 AS INTEGER)) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (AVG(CAST(0.46270390333667033 AS INTEGER)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((AVG(CAST(0.46270390333667033 AS INTEGER))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))||(RTRIM('121461021')))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0))<((vt0.c0))))||(RTRIM('121461021')))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0))<((vt0.c0))))||(RTRIM('121461021')))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0 WHERE ('-0.0') UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0 WHERE ((NOT ('-0.0'))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0 WHERE ((('-0.0') ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 WHERE (rt1.c0) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1, vt0 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0 HAVING (~ (SUM(rt1.c1))) UNION ALL SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0 HAVING (NOT ((~ (SUM(rt1.c1))))) UNION ALL SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0 HAVING (((~ (SUM(rt1.c1)))) ISNULL);
SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0 HAVING (~ (SUM(rt1.c1))) UNION ALL SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0 HAVING (NOT ((~ (SUM(rt1.c1))))) UNION ALL SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0 HAVING (((~ (SUM(rt1.c1)))) ISNULL);
SELECT rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c0;
SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 NOT INDEXED;
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((~ (3.4917995E8)) IN ())) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((NOT (((~ (3.4917995E8)) IN ())))) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((((~ (3.4917995E8)) IN ())) ISNULL));
SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 NOT INDEXED;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c0 FROM rt1 INNER JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS TEXT) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 INNER JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS TEXT) WHERE ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)) IN ())) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 INNER JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS TEXT) WHERE ((NOT ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)) IN ())))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 INNER JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS TEXT) WHERE ((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)) IN ())) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 INNER JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS TEXT) GROUP BY rt1.c0;
SELECT ALL rt1.c0, rt1.c2 FROM vt0 CROSS JOIN rt1 ON 0.8280037895827067 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt0 CROSS JOIN rt1 ON 0.8280037895827067 GROUP BY rt1.c0, rt1.c2 HAVING (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 WHEN COUNT(x'') THEN rt1.c0 WHEN AVG(COUNT(*)) THEN MIN(rt1.c0) ELSE MAX(MIN(GROUP_CONCAT(MIN(SUM(0.07825292730528177))))) END))>((MAX(MIN(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT rt1.c0, rt1.c2 FROM vt0 CROSS JOIN rt1 ON 0.8280037895827067 GROUP BY rt1.c0, rt1.c2 HAVING (NOT ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 WHEN COUNT(x'') THEN rt1.c0 WHEN AVG(COUNT(*)) THEN MIN(rt1.c0) ELSE MAX(MIN(GROUP_CONCAT(MIN(SUM(0.07825292730528177))))) END))>((MAX(MIN(GROUP_CONCAT(COUNT(*))))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt0 CROSS JOIN rt1 ON 0.8280037895827067 GROUP BY rt1.c0, rt1.c2 HAVING (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 WHEN COUNT(x'') THEN rt1.c0 WHEN AVG(COUNT(*)) THEN MIN(rt1.c0) ELSE MAX(MIN(GROUP_CONCAT(MIN(SUM(0.07825292730528177))))) END))>((MAX(MIN(GROUP_CONCAT(COUNT(*)))))))) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((((TRIM(rt1.c1, rt1.c1)))<((((-1438844110) IS FALSE))))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((TRIM(rt1.c1, rt1.c1)))<((((-1438844110) IS FALSE))))))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((((((TRIM(rt1.c1, rt1.c1)))<((((-1438844110) IS FALSE))))) ISNULL));
SELECT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((~ (rt1.c1)) COLLATE RTRIM) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((NOT ((~ (rt1.c1)) COLLATE RTRIM))) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((((~ (rt1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c2))) IS TRUE)) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (((((rt1.c1)IS NOT(rt1.c2))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c1)IS NOT(rt1.c2))) IS TRUE)) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((CASE vt0.c0  WHEN rt1.c1 THEN x'883c8a53' ELSE vt0.c0 END)LIKE((((rt1.c2))<((rt1.c0)))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((CASE vt0.c0  WHEN rt1.c1 THEN x'883c8a53' ELSE vt0.c0 END)LIKE((((rt1.c2))<((rt1.c0)))))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((((CASE vt0.c0  WHEN rt1.c1 THEN x'883c8a53' ELSE vt0.c0 END)LIKE((((rt1.c2))<((rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1;
SELECT ALL rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS TEXT)) NOTNULL)) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt0, rt1 WHERE ((NOT (((CAST(rt1.c2 AS TEXT)) NOTNULL)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt0, rt1 WHERE (((((CAST(rt1.c2 AS TEXT)) NOTNULL)) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1 HAVING (~ ((((rt1.c2)) BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c2))))) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1 HAVING (NOT ((~ ((((rt1.c2)) BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c2))))))) UNION ALL SELECT rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1 HAVING (((~ ((((rt1.c2)) BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c2)))))) ISNULL);
SELECT rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1 HAVING (~ ((((rt1.c2)) BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c2))))) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1 HAVING (NOT ((~ ((((rt1.c2)) BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c2))))))) UNION ALL SELECT rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1 HAVING (((~ ((((rt1.c2)) BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c2)))))) ISNULL);
SELECT rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (NULLIF(0.2952366417314515, ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT (NULLIF(0.2952366417314515, ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE (((NULLIF(0.2952366417314515, ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (rt1.c2 COLLATE BINARY) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC))=(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((CAST(rt1.c0 AS NUMERIC))==(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (((((CAST(rt1.c0 AS NUMERIC))=(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING TOTAL(0Xffffffff894ae96e) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (TOTAL(0xffffffff894ae96e))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((TOTAL(0xffffffff894ae96e)) ISNULL);
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING TOTAL(0Xffffffff894ae96e) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (TOTAL(0xffffffff894ae96e))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((TOTAL(0xffffffff894ae96e)) ISNULL);
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0;
SELECT rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((((0.8786535493224918)>>(rt1.c2)) IN ())) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((NOT ((((0.8786535493224918)>>(rt1.c2)) IN ())))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((((((0.8786535493224918)>>(rt1.c2)) IN ())) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE ((((((rt1.c1))=((rt1.c1)))) NOTNULL)) UNION SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE ((NOT ((((((rt1.c1))=((rt1.c1)))) NOTNULL)))) UNION SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE ((((((((rt1.c1))==((rt1.c1)))) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1, vt0;
SELECT vt0.c0, rt1.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) ELSE (rt1.c2 IN ()) END GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) ELSE (rt1.c2 IN ()) END WHERE (rt1.c0) GROUP BY vt0.c0, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) ELSE (rt1.c2 IN ()) END WHERE ((NOT (rt1.c0))) GROUP BY vt0.c0, rt1.c0 UNION SELECT vt0.c0, rt1.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) ELSE (rt1.c2 IN ()) END WHERE (((rt1.c0) ISNULL)) GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) ELSE (rt1.c2 IN ()) END GROUP BY vt0.c0, rt1.c0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 NOT INDEXED GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 NOT INDEXED GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE ((((('308490818')AND((rt1.c1 IN (rt1.c0, vt0.c0, rt1.c2)))))OR(((rt1.c2)>=(rt1.c2))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT ((((('308490818')AND((rt1.c1 IN (rt1.c0, vt0.c0, rt1.c2)))))OR(((rt1.c2)>=(rt1.c2))))))) UNION ALL SELECT * FROM rt1, vt0 WHERE ((((((('308490818')AND((rt1.c1 IN (rt1.c0, vt0.c0, rt1.c2)))))OR(((rt1.c2)>=(rt1.c2))))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (0X27583ca9) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (0X27583ca9))) UNION SELECT DISTINCT * FROM rt1 WHERE (((0x27583ca9) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM) NOTNULL)) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM vt0, rt1 WHERE ((NOT (((rt1.c2 COLLATE RTRIM) NOTNULL)))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM vt0, rt1 WHERE (((((rt1.c2 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING CAST(COUNT(GROUP_CONCAT(rt1.c2)) AS NUMERIC) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (CAST(COUNT(GROUP_CONCAT(rt1.c2)) AS NUMERIC))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((CAST(COUNT(GROUP_CONCAT(rt1.c2)) AS NUMERIC)) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c2 IN ()))OR(rt1.c1 COLLATE RTRIM)))AND((rt1.c2 IN ())))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT ((((((rt1.c2 IN ()))OR(rt1.c1 COLLATE RTRIM)))AND((rt1.c2 IN ())))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((((((((rt1.c2 IN ()))OR(rt1.c1 COLLATE RTRIM)))AND((rt1.c2 IN ())))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE (((((rt1.c0) ISNULL)) NOT BETWEEN ('qE_') AND (CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((NOT (((((rt1.c0) ISNULL)) NOT BETWEEN ('qE_') AND (CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE (((((((rt1.c0) ISNULL)) NOT BETWEEN ('qE_') AND (CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0 WHERE (((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(0.28134676905575795)))AND(json(rt1.c0))))AND(((rt1.c0) NOTNULL)))) GROUP BY vt0.c0, rt1.c1 UNION SELECT vt0.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(0.28134676905575795)))AND(json(rt1.c0))))AND(((rt1.c0) NOTNULL)))))) GROUP BY vt0.c0, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0 WHERE (((((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(0.28134676905575795)))AND(json(rt1.c0))))AND(((rt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (((COUNT(rt1.c0)))>=((SUM(MAX(GROUP_CONCAT(NULL)))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT ((((COUNT(rt1.c0)))>=((SUM(MAX(GROUP_CONCAT(NULL)))))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (((((COUNT(rt1.c0)))>=((SUM(MAX(GROUP_CONCAT(NULL))))))) ISNULL);
SELECT ALL MIN(((((((((((((vt0.c0)OR(rt1.c1)))AND(817347117)))AND((vt0.c0 IN ()))))AND(((vt0.c0)>(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND((('') NOT BETWEEN (vt0.c0) AND (rt1.c1))))) FROM vt0, rt1 ORDER BY (- (vt0.c0));
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('O,') UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ('O,'))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((('O,') ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1)OR(0.25088322520120343)))OR(''))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((rt1.c2) NOT NULL)));
SELECT rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1)OR(0.25088322520120343)))OR(''))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((rt1.c2) NOT NULL))) WHERE (((((rt1.c1)>(rt1.c1))) NOT NULL)) UNION ALL SELECT rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1)OR(0.25088322520120343)))OR(''))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((rt1.c2) NOT NULL))) WHERE ((NOT (((((rt1.c1)>(rt1.c1))) NOT NULL)))) UNION ALL SELECT ALL rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1)OR(0.25088322520120343)))OR(''))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((rt1.c2) NOT NULL))) WHERE (((((((rt1.c1)>(rt1.c1))) NOT NULL)) ISNULL));
SELECT ALL rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1)OR(0.25088322520120343)))OR(''))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((rt1.c2) NOT NULL)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((''))=((((vt0.c0)*(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((''))=((((vt0.c0)*(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((''))==((((vt0.c0)*(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (0.6608088961334463) GROUP BY rt1.c0, vt0.c0 UNION SELECT ALL rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((NOT (0.6608088961334463))) GROUP BY rt1.c0, vt0.c0 UNION SELECT rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (((0.6608088961334463) ISNULL)) GROUP BY rt1.c0, vt0.c0;
SELECT ALL rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0;
SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE (x'26c9') UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT (x'26c9'))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE (((x'26c9') ISNULL));
SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((x''))<>((((rt1.c1)|('')))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((x''))!=((((rt1.c1)|('')))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((x''))<>((((rt1.c1)|('')))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) IS TRUE))<<(((AVG(vt0.c0))<=(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0) IS TRUE))<<(((AVG(vt0.c0))<=(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) IS TRUE))<<(((AVG(vt0.c0))<=(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) IS TRUE))<<(((AVG(vt0.c0))<=(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0) IS TRUE))<<(((AVG(vt0.c0))<=(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) IS TRUE))<<(((AVG(vt0.c0))<=(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c0 FROM rt1, vt0;
SELECT rt1.c0 FROM rt1, vt0 WHERE (CAST(((((((((rt1.c1)AND(rt1.c1)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c1)) AS TEXT)) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt0 NOT INDEXED WHERE ((NOT (CAST(((((((((rt1.c1)AND(rt1.c1)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c1)) AS TEXT)))) UNION ALL SELECT rt1.c0 FROM rt1, vt0 WHERE (((CAST(((((((((rt1.c1)AND(rt1.c1)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c1)) AS TEXT)) ISNULL));
SELECT rt1.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (GLOB((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND (('逸iq+/', rt1.c0, vt0.c0))), ((rt1.c1)<>(rt1.c2)))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED, vt0 WHERE ((NOT (GLOB((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND (('逸iq+/', rt1.c0, vt0.c0))), ((rt1.c1)!=(rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((GLOB((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND (('逸iq+/', rt1.c0, vt0.c0))), ((rt1.c1)<>(rt1.c2)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((rt1.c0)>('J.M緯t늞iCD')) IN ((rt1.c2 IN ())))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0)>('J.M緯t늞iCD')) IN ((rt1.c2 IN ())))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((rt1.c0)>('J.M緯t늞iCD')) IN ((rt1.c2 IN ())))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING MIN(((rt1.c1)OR(rt1.c0))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING (NOT (MIN(((rt1.c1)OR(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING ((MIN(((rt1.c1)OR(rt1.c0)))) ISNULL);
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING MIN(((rt1.c1)OR(rt1.c0))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING (NOT (MIN(((rt1.c1)OR(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING ((MIN(((rt1.c1)OR(rt1.c0)))) ISNULL);
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN ((vt0.c0) ISNULL) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0.9825557482716372 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE rt1.c2 COLLATE NOCASE END GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)>=((((vt0.c0))<=((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)>=((((vt0.c0))<=((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>=((((vt0.c0))<=((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELY(vt0.c0)) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((LIKELY(vt0.c0)) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((LIKELY(vt0.c0)) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(*))OR(AVG(vt0.c0))))OR(SUM(SUM(COUNT(vt0.c0)))))) NOT BETWEEN (((AVG(SUM(GROUP_CONCAT(vt0.c0))))<(MIN(vt0.c0)))) AND (CASE AVG(vt0.c0)  WHEN TOTAL(SUM(vt0.c0)) THEN vt0.c0 ELSE MIN(vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((COUNT(*))OR(AVG(vt0.c0))))OR(SUM(SUM(COUNT(vt0.c0)))))) NOT BETWEEN (((AVG(SUM(GROUP_CONCAT(vt0.c0))))<(MIN(vt0.c0)))) AND (CASE AVG(vt0.c0)  WHEN TOTAL(SUM(vt0.c0)) THEN vt0.c0 ELSE MIN(vt0.c0) END)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(*))OR(AVG(vt0.c0))))OR(SUM(SUM(COUNT(vt0.c0)))))) NOT BETWEEN (((AVG(SUM(GROUP_CONCAT(vt0.c0))))<(MIN(vt0.c0)))) AND (CASE AVG(vt0.c0)  WHEN TOTAL(SUM(vt0.c0)) THEN vt0.c0 ELSE MIN(vt0.c0) END))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((((((((((((vt0.c0)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((((((((((((vt0.c0)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((((((((((((vt0.c0)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((0.8390094139792246)) AND ((rt1.c1))) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN ((0.8390094139792246)) AND ((rt1.c1))) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((((((rt1.c2)) NOT BETWEEN ((0.8390094139792246)) AND ((rt1.c1))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (IFNULL((((rt1.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, '-505191269', vt0.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (IFNULL((((rt1.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, '-505191269', vt0.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((IFNULL((((rt1.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, '-505191269', vt0.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) ISNULL)) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING CAST(COUNT(*) AS NUMERIC) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (CAST(COUNT(*) AS NUMERIC))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((CAST(COUNT(*) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING CAST(COUNT(*) AS NUMERIC) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (CAST(COUNT(*) AS NUMERIC))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((CAST(COUNT(*) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2)LIKE(rt1.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (((((rt1.c2)LIKE(rt1.c0))) IS FALSE)))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((((rt1.c2)LIKE(rt1.c0))) IS FALSE)) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT rt1.c1 FROM vt0 CROSS JOIN rt1 ON CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE;
SELECT DISTINCT rt1.c1 FROM vt0 CROSS JOIN rt1 ON CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE WHERE (((((JULIANDAY(0.036046187367684834, vt0.c0, vt0.c0))AND(COALESCE(rt1.c1, rt1.c1))))AND(((rt1.c1) BETWEEN ('') AND (rt1.c1))))) UNION SELECT DISTINCT rt1.c1 FROM vt0 CROSS JOIN rt1 ON CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE WHERE ((NOT (((((JULIANDAY(0.036046187367684834, vt0.c0, vt0.c0))AND(COALESCE(rt1.c1, rt1.c1))))AND(((rt1.c1) BETWEEN ('') AND (rt1.c1))))))) UNION SELECT DISTINCT rt1.c1 FROM vt0 CROSS JOIN rt1 ON CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE WHERE (((((((JULIANDAY(0.036046187367684834, vt0.c0, vt0.c0))AND(COALESCE(rt1.c1, rt1.c1))))AND(((rt1.c1) BETWEEN ('') AND (rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM vt0 CROSS JOIN rt1 ON CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE;
SELECT rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((vt0.c0))<((rt1.c2)))) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1) ISNULL))) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((vt0.c0))<((rt1.c2)))) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1) ISNULL))) WHERE ((('854868156')<(rt1.c0))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((vt0.c0))<((rt1.c2)))) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1) ISNULL))) WHERE ((NOT ((('854868156')<(rt1.c0))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((vt0.c0))<((rt1.c2)))) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1) ISNULL))) WHERE ((((('854868156')<(rt1.c0))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON (((((vt0.c0))<((rt1.c2)))) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1) ISNULL))) GROUP BY rt1.c1, rt1.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt1;
SELECT vt0.c0 FROM vt0, rt1 WHERE ((((NOT (vt0.c0))) BETWEEN (vt0.c0) AND (((rt1.c2)/(rt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, rt1 WHERE ((NOT ((((NOT (vt0.c0))) BETWEEN (vt0.c0) AND (((rt1.c2)/(rt1.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((((((NOT (vt0.c0))) BETWEEN (vt0.c0) AND (((rt1.c2)/(rt1.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c0, rt1.c2, rt1.c0, rt1.c0, 0xffffffffaa0b85fb)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), rt1.c2 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE '' END, CAST(rt1.c2 AS NUMERIC))) AND ((LIKELY(rt1.c1), rt1.c2 COLLATE BINARY, (rt1.c0 IN ()), ((rt1.c0)LIKE(rt1.c0)), rt1.c0)))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0, rt1.c2, rt1.c0, rt1.c0, 0xffffffffaa0b85fb)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), rt1.c2 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE '' END, CAST(rt1.c2 AS NUMERIC))) AND ((LIKELY(rt1.c1), rt1.c2 COLLATE BINARY, (rt1.c0 IN ()), ((rt1.c0)LIKE(rt1.c0)), rt1.c0)))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c0, rt1.c0, 0xffffffffaa0b85fb)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), rt1.c2 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE '' END, CAST(rt1.c2 AS NUMERIC))) AND ((LIKELY(rt1.c1), rt1.c2 COLLATE BINARY, (rt1.c0 IN ()), ((rt1.c0)LIKE(rt1.c0)), rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1 NOT INDEXED, vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt1, vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt1, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((TOTAL(rt1.c1)) NOT BETWEEN (COUNT(*)) AND (COUNT(rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((TOTAL(rt1.c1)) NOT BETWEEN (COUNT(*)) AND (COUNT(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((((TOTAL(rt1.c1)) NOT BETWEEN (COUNT(*)) AND (COUNT(rt1.c1)))) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((TOTAL(rt1.c1)) NOT BETWEEN (COUNT(*)) AND (COUNT(rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((TOTAL(rt1.c1)) NOT BETWEEN (COUNT(*)) AND (COUNT(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((((TOTAL(rt1.c1)) NOT BETWEEN (COUNT(*)) AND (COUNT(rt1.c1)))) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (0.040944458034154696) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (0.040944458034154696))) UNION ALL SELECT ALL * FROM vt0 WHERE (((0.040944458034154696) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<((~ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<((~ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0 NOT INDEXED, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE (((((rt1.c0)<=(vt0.c0)))<=(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c0))))) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((((rt1.c0)<=(vt0.c0)))<=(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c0))))))) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE (((((((rt1.c0)<=(vt0.c0)))<=(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c0))))) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0 NOT INDEXED, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL((COUNT(*) IN (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((COUNT(*) IN (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL((COUNT(*) IN (vt0.c0)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (rt1.c0) UNION ALL SELECT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (((((((((((rt1.c2) IS FALSE))AND(((rt1.c2)&('~Tx3')))))AND(((((((((((((rt1.c2)AND(rt1.c0)))AND(x'')))OR(rt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c1)))))AND(((rt1.c1)AND(rt1.c0)))))OR(CAST(rt1.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (((((((((((rt1.c2) IS FALSE))AND(((rt1.c2)&('~Tx3')))))AND(((((((((((((rt1.c2)AND(rt1.c0)))AND(x'')))OR(rt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c1)))))AND(((rt1.c1)AND(rt1.c0)))))OR(CAST(rt1.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((((((((((((rt1.c2) IS FALSE))AND(((rt1.c2)&('~Tx3')))))AND(((((((((((((rt1.c2)AND(rt1.c0)))AND(x'')))OR(rt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c1)))))AND(((rt1.c1)AND(rt1.c0)))))OR(CAST(rt1.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, vt0 WHERE ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END IN ((rt1.c1 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt1, vt0 WHERE ((NOT ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END IN ((rt1.c1 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt1, vt0 WHERE ((((CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END IN ((rt1.c1 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING CAST(rt1.c2 COLLATE RTRIM AS TEXT) UNION ALL SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (NOT (CAST(rt1.c2 COLLATE RTRIM AS TEXT))) UNION ALL SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING ((CAST(rt1.c2 COLLATE RTRIM AS TEXT)) ISNULL);
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING CAST(rt1.c2 COLLATE RTRIM AS TEXT) UNION ALL SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (NOT (CAST(rt1.c2 COLLATE RTRIM AS TEXT))) UNION ALL SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING ((CAST(rt1.c2 COLLATE RTRIM AS TEXT)) ISNULL);
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((x'')%(0.7987680865997396)) COLLATE BINARY;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((x'')%(0.7987680865997396)) COLLATE BINARY WHERE (vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((x'')%(0.7987680865997396)) COLLATE BINARY WHERE ((NOT (vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((x'')%(0.7987680865997396)) COLLATE BINARY WHERE (((vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((x'')%(0.7987680865997396)) COLLATE BINARY;
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))IS NOT(TRIM(rt1.c1)));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))IS NOT(TRIM(rt1.c1))) WHERE (((x'' COLLATE RTRIM)==(((rt1.c2)-(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1 NOT INDEXED CROSS JOIN vt0 ON (((+ (vt0.c0)))IS NOT(TRIM(rt1.c1))) WHERE ((NOT (((x'' COLLATE RTRIM)==(((rt1.c2)-(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))IS NOT(TRIM(rt1.c1))) WHERE (((((x'' COLLATE RTRIM)=(((rt1.c2)-(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))IS NOT(TRIM(rt1.c1)));
SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON x'f480' GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON x'f480' WHERE ((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))) GROUP BY rt1.c1, vt0.c0, rt1.c0 UNION SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON x'f480' WHERE ((NOT ((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))))) GROUP BY rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON x'f480' WHERE ((((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))) ISNULL)) GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON x'f480' GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING CASE WHEN COUNT(*) THEN load_extension(MIN(AVG(rt1.c2)), COUNT(AVG(rt1.c1))) WHEN COUNT(GROUP_CONCAT(COUNT(*))) THEN (((rt1.c2)) NOT BETWEEN ((MIN(x''))) AND ((rt1.c1))) WHEN GROUP_CONCAT(GROUP_CONCAT('⹧喲l퐯/')) THEN COUNT(GROUP_CONCAT(rt1.c2)) ELSE TOTAL(MAX(rt1.c0)) END UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN load_extension(MIN(AVG(rt1.c2)), COUNT(AVG(rt1.c1))) WHEN COUNT(GROUP_CONCAT(COUNT(*))) THEN (((rt1.c2)) NOT BETWEEN ((MIN(x''))) AND ((rt1.c1))) WHEN GROUP_CONCAT(GROUP_CONCAT('⹧喲l퐯/')) THEN COUNT(GROUP_CONCAT(rt1.c2)) ELSE TOTAL(MAX(rt1.c0)) END)) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING ((CASE WHEN COUNT(*) THEN load_extension(MIN(AVG(rt1.c2)), COUNT(AVG(rt1.c1))) WHEN COUNT(GROUP_CONCAT(COUNT(*))) THEN (((rt1.c2)) NOT BETWEEN ((MIN(x''))) AND ((rt1.c1))) WHEN GROUP_CONCAT(GROUP_CONCAT('⹧喲l퐯/')) THEN COUNT(GROUP_CONCAT(rt1.c2)) ELSE TOTAL(MAX(rt1.c0)) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM rt1 NOT INDEXED, vt0;
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (vt0.c0 COLLATE BINARY) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0 FROM rt1 NOT INDEXED, vt0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (((LOWER(rt1.c0))/(((NULL) NOT BETWEEN (rt1.c0) AND (x''))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (((LOWER(rt1.c0))/(((NULL) NOT BETWEEN (rt1.c0) AND (x''))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((((LOWER(rt1.c0))/(((NULL) NOT BETWEEN (rt1.c0) AND (x''))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON rt1.c0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON rt1.c0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((GROUP_CONCAT(TOTAL(rt1.c2))) IS FALSE) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON rt1.c0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (((GROUP_CONCAT(TOTAL(rt1.c2))) IS FALSE))) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON rt1.c0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((((GROUP_CONCAT(TOTAL(rt1.c2))) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (((rt1.c0)/('-1374073684'))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((NOT (((rt1.c0)/('-1374073684'))))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((((NOT (((rt1.c0)/('-1374073684'))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0 HAVING CAST(MIN(vt0.c0) AS REAL) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0 HAVING (NOT (CAST(MIN(vt0.c0) AS REAL))) UNION ALL SELECT rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0 HAVING ((CAST(MIN(vt0.c0) AS REAL)) ISNULL);
SELECT rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0 HAVING CAST(MIN(vt0.c0) AS REAL) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0 HAVING (NOT (CAST(MIN(vt0.c0) AS REAL))) UNION ALL SELECT rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0 HAVING ((CAST(MIN(vt0.c0) AS REAL)) ISNULL);
SELECT rt1.c1, rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0;
SELECT ALL TOTAL((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (ABS(DISTINCT vt0.c0)) AND (vt0.c0))) FROM vt0 ORDER BY '' ASC;
SELECT ALL rt1.c0 FROM vt0 LEFT OUTER JOIN rt1 ON ((((0.7042546688998504)AND(((rt1.c0)%(vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END));
SELECT ALL rt1.c0 FROM vt0 LEFT OUTER JOIN rt1 ON ((((0.7042546688998504)AND(((rt1.c0)%(vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)) WHERE ((((((vt0.c0))>((x'')))) NOT BETWEEN ((((rt1.c1))>((vt0.c0)))) AND (((rt1.c2) NOTNULL)))) UNION ALL SELECT rt1.c0 FROM vt0 LEFT OUTER JOIN rt1 ON ((((0.7042546688998504)AND(((rt1.c0)%(vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)) WHERE ((NOT ((((((vt0.c0))>((x'')))) NOT BETWEEN ((((rt1.c1))>((vt0.c0)))) AND (((rt1.c2) NOTNULL)))))) UNION ALL SELECT rt1.c0 FROM vt0 LEFT OUTER JOIN rt1 ON ((((0.7042546688998504)AND(((rt1.c0)%(vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)) WHERE ((((((((vt0.c0))>((x'')))) NOT BETWEEN ((((rt1.c1))>((vt0.c0)))) AND (((rt1.c2) NOTNULL)))) ISNULL));
SELECT ALL rt1.c0 FROM vt0 LEFT OUTER JOIN rt1 ON ((((0.7042546688998504)AND(((rt1.c0)%(vt0.c0)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END));
