-- Time: 2024/06/09 19:22:41
-- Database: database46
-- Database version: 3.40.0
-- seed value: 477238346
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 4ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 REAL ); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1532733006); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1641873989);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36529'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1641873989);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26129'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c3)=(0.8971446572533593, x'') WHERE UNICODE(CAST(rt1.c0 AS BLOB)); -- 0ms;
UPDATE rt1 SET c3=NULL WHERE (CAST(rt1.c1 AS BLOB) IN ()); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL, c2=0.8971446572533593 WHERE ((rt1.c3 COLLATE RTRIM)>=((NOT (rt1.c0)))); -- 0ms;
ANALYZE; -- 13ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.8088743557180631 WHERE (0.8971446572533593 IN ((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))); -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), ('547958909'), ('FALSE'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE rt1 SET c3=0X61dd0245; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c3)=(0.5803156667618751, NULL); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c3) VALUES (0x45d2019c, '<ru', 0.7841005652639548); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.9373281906161964) WHERE CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN x'' END; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (')5l_AgED'); -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
PRAGMA temp.threads = 6258419362065282952; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34871'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 476280440); -- 0ms;
REINDEX; -- 1ms;
END; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=NULL WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(5.47958909E8)))AND(vt0.c0)))OR('<ru')) COLLATE RTRIM; -- 1ms;
UPDATE OR IGNORE rt1 SET c1=0x45d2019c, c0=x'64a6', c1=547958909; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21761'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62799'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1719165447); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -340871795);\n; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1425355425);\n; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, 5.47958909E8); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 902540726); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -2083610915);\n; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL WHERE ((((NOT (547958909))))>((UPPER(vt0.c0)))); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE TOTAL_CHANGES(); -- 0ms;
UPDATE OR ABORT rt1 SET (c3)=(NULL); -- 0ms;
PRAGMA journal_mode; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=(0.9525343042459233); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (0Xffffffffb91540c3); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '12197'); -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
PRAGMA wal_autocheckpoint = -2214084192676216085; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 1); -- 0ms;
UPDATE vt0 SET c0=0.5803156667618751 WHERE json_insert(((vt0.c0)AND(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (vt0.c0 IN (vt0.c0))); -- 0ms;
UPDATE vt1 SET c1=''; -- 0ms;
UPDATE vt0 SET (c0, c0)=(0.9379170529127566, ')5L_AGED'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE rt1 SET (c0)=(0.9202637211248572) WHERE rt1.c2 COLLATE RTRIM; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE rt1 SET c2='\nj' WHERE ((((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))||(rt1.c0 COLLATE NOCASE)); -- 4ms;
UPDATE OR IGNORE rt1 SET c0=676546951, c3=0xffffffffe17c04b9 WHERE ((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=('0-v \n+EJq'); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
ANALYZE vt1; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=x''; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c0='-2083610915' WHERE (rt1.c1 IN ()) COLLATE RTRIM; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR FAIL vt1 SET c1=x'' WHERE ((((vt1.c1) NOT NULL))OR(CAST(vt1.c1 AS REAL))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=0.5547790463251591; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 613178148); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt1.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1;
SELECT ALL vt1.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1 WHERE (((((0.5256255715976197) IS TRUE))<((((vt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1 WHERE ((NOT (((((0.5256255715976197) IS TRUE))<((((vt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1 WHERE (((((((0.5256255715976197) IS TRUE))<((((vt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))) ISNULL));
SELECT ALL vt1.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (CASE ((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2))  WHEN ((((((((((((rt1.c1)OR(0.7353414686979491)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))AND(vt0.c0)) THEN ((rt1.c2)|(x'')) WHEN CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END THEN (~ (vt0.c0)) WHEN (vt0.c0 IN (rt1.c1, rt1.c1)) THEN (+ (vt0.c0)) END) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (CASE ((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2))  WHEN ((((((((((((rt1.c1)OR(0.7353414686979491)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))AND(vt0.c0)) THEN ((rt1.c2)|(x'')) WHEN CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END THEN (~ (vt0.c0)) WHEN (vt0.c0 IN (rt1.c1, rt1.c1)) THEN (+ (vt0.c0)) END))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((CASE ((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2))  WHEN ((((((((((((rt1.c1)OR(0.7353414686979491)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))AND(vt0.c0)) THEN ((rt1.c2)|(x'')) WHEN CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END THEN (~ (vt0.c0)) WHEN (vt0.c0 IN (rt1.c1, rt1.c1)) THEN (+ (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT vt1.c1, rt1.c1, vt1.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c1, rt1.c1, vt1.c0;
SELECT ALL vt1.c1, rt1.c1, vt1.c0 FROM rt1, vt1, vt0 WHERE (((((((vt1.c0) IS TRUE))OR(CAST(vt1.c1 AS NUMERIC))))OR((~ (rt1.c0))))) GROUP BY vt1.c1, rt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, rt1.c1, vt1.c0 FROM rt1, vt1, vt0 WHERE ((NOT (((((((vt1.c0) IS TRUE))OR(CAST(vt1.c1 AS NUMERIC))))OR((~ (rt1.c0))))))) GROUP BY vt1.c1, rt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, rt1.c1, vt1.c0 FROM rt1, vt1, vt0 WHERE (((((((((vt1.c0) IS TRUE))OR(CAST(vt1.c1 AS NUMERIC))))OR((~ (rt1.c0))))) ISNULL)) GROUP BY vt1.c1, rt1.c1, vt1.c0;
SELECT vt1.c1, rt1.c1, vt1.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c1, rt1.c1, vt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, vt1.c0, rt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0)))) IS FALSE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))>=((vt0.c0)))) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))>=((vt0.c0)))) IS FALSE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0 IN ())))==(((rt1.c1 IN (rt1.c2, NULL)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c0 IN ())))=(((rt1.c1 IN (rt1.c2, NULL)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0 IN ())))==(((rt1.c1 IN (rt1.c2, NULL)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c1 AS BLOB))GLOB(CAST(rt1.c3 AS INTEGER))) GROUP BY vt0.c0, rt1.c0, rt1.c2;
SELECT vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c1 AS BLOB))GLOB(CAST(rt1.c3 AS INTEGER))) WHERE (((CAST(rt1.c0 AS TEXT)) NOT NULL)) GROUP BY vt0.c0, rt1.c0, rt1.c2 UNION SELECT vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c1 AS BLOB))GLOB(CAST(rt1.c3 AS INTEGER))) WHERE ((NOT (((CAST(rt1.c0 AS TEXT)) NOT NULL)))) GROUP BY vt0.c0, rt1.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c1 AS BLOB))GLOB(CAST(rt1.c3 AS INTEGER))) WHERE (((((CAST(rt1.c0 AS TEXT)) NOT NULL)) ISNULL)) GROUP BY vt0.c0, rt1.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c1 AS BLOB))GLOB(CAST(rt1.c3 AS INTEGER))) GROUP BY vt0.c0, rt1.c0, rt1.c2;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((AVG(SUM(TOTAL(SUM(COUNT(*)))))) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (TOTAL(AVG(vt1.c1))))) NOTNULL) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (((((AVG(SUM(TOTAL(SUM(COUNT(*)))))) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (TOTAL(AVG(vt1.c1))))) NOTNULL))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((((AVG(SUM(TOTAL(SUM(COUNT(*)))))) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (TOTAL(AVG(vt1.c1))))) NOTNULL)) ISNULL);
SELECT TOTAL((((NOT (x'dd5e'))) NOT BETWEEN (vt1.c1) AND (TYPEOF(vt0.c0)))) FROM vt1, vt0 ORDER BY ((vt1.c1)>(((NULL)|(vt1.c0)))) ASC  NULLS LAST, CASE (((vt1.c0))==(('-1189789501')))  WHEN (NOT (vt1.c1)) THEN ((vt1.c1)GLOB(vt0.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR('-9223372036854775808')))AND(vt1.c0)))AND(vt1.c1)) END DESC  NULLS LAST, json_array_length(CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END, vt0.c0 COLLATE BINARY);
SELECT rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1 WHERE (((((((((((rt1.c2) IS FALSE))AND((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt1.c2))))))OR(((rt1.c0)%(vt0.c0)))))AND(((rt1.c0)IS('-1840751808')))))AND(((vt0.c0)OR(rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1 WHERE ((NOT (((((((((((rt1.c2) IS FALSE))AND((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt1.c2))))))OR(((rt1.c0)%(vt0.c0)))))AND(((rt1.c0)IS('-1840751808')))))AND(((vt0.c0)OR(rt1.c0))))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1 WHERE (((((((((((((rt1.c2) IS FALSE))AND((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt1.c2))))))OR(((rt1.c0)%(vt0.c0)))))AND(((rt1.c0)IS('-1840751808')))))AND(((vt0.c0)OR(rt1.c0))))) ISNULL));
SELECT rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c0)) BETWEEN (('1709441294')) AND ((x'')))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c0)) BETWEEN (('1709441294')) AND ((x'')))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c0)) BETWEEN (('1709441294')) AND ((x'')))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c1 COLLATE RTRIM)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c1 COLLATE RTRIM)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING MIN(((0.45181003197783665) BETWEEN (MIN(COUNT(rt1.c1))) AND (SUM(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (MIN(((0.45181003197783665) BETWEEN (MIN(COUNT(rt1.c1))) AND (SUM(rt1.c0)))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((MIN(((0.45181003197783665) BETWEEN (MIN(COUNT(rt1.c1))) AND (SUM(rt1.c0))))) ISNULL);
SELECT * FROM vt1, vt0 NOT INDEXED INNER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c3)))OR((('676546951')LIKE(rt1.c2)))))OR(UNLIKELY(vt1.c1)));
SELECT ALL * FROM vt1, vt0 INNER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c3)))OR((('676546951')LIKE(rt1.c2)))))OR(UNLIKELY(vt1.c1))) WHERE (((((NOT (rt1.c1))))=((rt1.c3 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt1, vt0 INNER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c3)))OR((('676546951')LIKE(rt1.c2)))))OR(UNLIKELY(vt1.c1))) WHERE ((NOT (((((NOT (rt1.c1))))==((rt1.c3 COLLATE BINARY)))))) UNION ALL SELECT * FROM vt1 NOT INDEXED, vt0 INNER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c3)))OR((('676546951')LIKE(rt1.c2)))))OR(UNLIKELY(vt1.c1))) WHERE (((((((NOT (rt1.c1))))=((rt1.c3 COLLATE BINARY)))) ISNULL));
SELECT * FROM vt1, vt0 NOT INDEXED INNER JOIN rt1 ON ((((((rt1.c3)AND(rt1.c3)))OR((('676546951')LIKE(rt1.c2)))))OR(UNLIKELY(vt1.c1)));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c0 IN ()))IS NOT(rt1.c3))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c0 IN ()))IS NOT(rt1.c3))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c0 IN ()))IS NOT(rt1.c3))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2 FROM vt0 INNER JOIN vt1 ON '<' INNER JOIN rt1 ON COALESCE(DISTINCT rt1.c0, rt1.c1) COLLATE BINARY GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt0 INNER JOIN vt1 ON '<' INNER JOIN rt1 ON COALESCE(DISTINCT rt1.c0, rt1.c1) COLLATE BINARY WHERE (0xffffffffec4e5a97) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM vt0 INNER JOIN vt1 ON '<' INNER JOIN rt1 ON COALESCE(DISTINCT rt1.c0, rt1.c1) COLLATE BINARY WHERE ((NOT (0xffffffffec4e5a97))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt0 INNER JOIN vt1 ON '<' INNER JOIN rt1 ON COALESCE(DISTINCT rt1.c0, rt1.c1) COLLATE BINARY WHERE (((0Xffffffffec4e5a97) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt0 INNER JOIN vt1 ON '<' INNER JOIN rt1 ON COALESCE(DISTINCT rt1.c0, rt1.c1) COLLATE BINARY GROUP BY rt1.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT((- (AVG(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((- (AVG(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((- (AVG(COUNT(*)))))) ISNULL);
SELECT ALL TOTAL((((vt1.c1)+(vt1.c0)) IN ())) FROM vt1 ORDER BY (((NOT (vt1.c1))) IS FALSE);
SELECT ALL * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE (((CASE rt1.c3  WHEN vt1.c1 THEN rt1.c1 ELSE vt1.c0 END) IS TRUE)) UNION ALL SELECT * FROM vt1, rt1 WHERE ((NOT (((CASE rt1.c3  WHEN vt1.c1 THEN rt1.c1 ELSE vt1.c0 END) IS TRUE)))) UNION ALL SELECT * FROM vt1, rt1 WHERE (((((CASE rt1.c3  WHEN vt1.c1 THEN rt1.c1 ELSE vt1.c0 END) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ());
SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) WHERE (CAST(((rt1.c0)>=(rt1.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) WHERE ((NOT (CAST(((rt1.c0)>=(rt1.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) WHERE (((CAST(((rt1.c0)>=(rt1.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ());
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)IS((vt1.c1 IN ())))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)IS((vt1.c1 IN ())))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)IS((vt1.c1 IN ())))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((((((CAST(GROUP_CONCAT('XƜソ	~') AS REAL))OR(CASE WHEN GROUP_CONCAT(vt1.c1) THEN COUNT(MAX(GROUP_CONCAT(COUNT(COUNT(*))))) ELSE vt0.c0 END)))AND(((TOTAL(vt1.c1))LIKE(COUNT(*))))))AND(MIN(SUM(SUM(vt0.c0))))))AND(MIN(vt1.c0))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((((((((CAST(GROUP_CONCAT('XƜソ	~') AS REAL))OR(CASE WHEN GROUP_CONCAT(vt1.c1) THEN COUNT(MAX(GROUP_CONCAT(COUNT(COUNT(*))))) ELSE vt0.c0 END)))AND(((TOTAL(vt1.c1))LIKE(COUNT(*))))))AND(MIN(SUM(SUM(vt0.c0))))))AND(MIN(vt1.c0))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((((((((CAST(GROUP_CONCAT('XƜソ	~') AS REAL))OR(CASE WHEN GROUP_CONCAT(vt1.c1) THEN COUNT(MAX(GROUP_CONCAT(COUNT(COUNT(*))))) ELSE vt0.c0 END)))AND(((TOTAL(vt1.c1))LIKE(COUNT(*))))))AND(MIN(SUM(SUM(vt0.c0))))))AND(MIN(vt1.c0)))) ISNULL);
SELECT vt1.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c1, rt1.c3, rt1.c1 FROM vt0, vt1 CROSS JOIN rt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE);
SELECT vt1.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c1, rt1.c3, rt1.c1 FROM vt0, vt1 CROSS JOIN rt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE) WHERE (x'') UNION ALL SELECT vt1.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c1, rt1.c3, rt1.c1 FROM vt0, vt1 CROSS JOIN rt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE) WHERE ((NOT (x''))) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c1, rt1.c3, rt1.c1 FROM vt0, vt1 CROSS JOIN rt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE) WHERE (((x'') ISNULL));
SELECT vt1.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c1, rt1.c3, rt1.c1 FROM vt0, vt1 CROSS JOIN rt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE);
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c3) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c0))) NOT BETWEEN ((((vt1.c1, vt0.c0, 0.5986511344078222, vt1.c0, vt1.c0))<((vt1.c1, vt1.c0, vt0.c0, vt0.c0, vt1.c1)))) AND (((vt1.c1)GLOB(vt0.c0))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)OR(vt0.c0))) NOT BETWEEN ((((vt1.c1, vt0.c0, 0.5986511344078222, vt1.c0, vt1.c0))<((vt1.c1, vt1.c0, vt0.c0, vt0.c0, vt1.c1)))) AND (((vt1.c1)GLOB(vt0.c0))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt0.c0))) NOT BETWEEN ((((vt1.c1, vt0.c0, 0.5986511344078222, vt1.c0, vt1.c0))<((vt1.c1, vt1.c0, vt0.c0, vt0.c0, vt1.c1)))) AND (((vt1.c1)GLOB(vt0.c0))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE (((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2))) BETWEEN (rt1.c1) AND (CHAR(rt1.c0, rt1.c3, vt1.c0)))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2))) BETWEEN (rt1.c1) AND (CHAR(rt1.c0, rt1.c3, vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2))) BETWEEN (rt1.c1) AND (CHAR(rt1.c0, rt1.c3, vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c0) FULL OUTER JOIN rt1 ON (((((((((vt1.c0 IN ()))OR(((vt1.c1)IS NOT(rt1.c3)))))AND(vt1.c0 COLLATE BINARY)))AND(0.9884416118537157)))OR(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c0) FULL OUTER JOIN rt1 ON (((((((((vt1.c0 IN ()))OR(((vt1.c1)IS NOT(rt1.c3)))))AND(vt1.c0 COLLATE BINARY)))AND(0.9884416118537157)))OR(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END)) WHERE (((((vt1.c1)%(rt1.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c0) FULL OUTER JOIN rt1 ON (((((((((vt1.c0 IN ()))OR(((vt1.c1)IS NOT(rt1.c3)))))AND(vt1.c0 COLLATE BINARY)))AND(0.9884416118537157)))OR(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END)) WHERE ((NOT (((((vt1.c1)%(rt1.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c0) FULL OUTER JOIN rt1 ON (((((((((vt1.c0 IN ()))OR(((vt1.c1)IS NOT(rt1.c3)))))AND(vt1.c0 COLLATE BINARY)))AND(0.9884416118537157)))OR(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END)) WHERE (((((((vt1.c1)%(rt1.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c0) FULL OUTER JOIN rt1 ON (((((((((vt1.c0 IN ()))OR(((vt1.c1)IS NOT(rt1.c3)))))AND(vt1.c0 COLLATE BINARY)))AND(0.9884416118537157)))OR(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c2 END));
SELECT vt0.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, rt1 WHERE (CAST(CAST(vt1.c1 AS INTEGER) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1, rt1 WHERE ((NOT (CAST(CAST(vt1.c1 AS INTEGER) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1, rt1 WHERE (((CAST(CAST(vt1.c1 AS INTEGER) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0;
SELECT rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c0 HAVING ((GROUP_CONCAT(SUM(rt1.c0))) BETWEEN (0.00485164468436694 COLLATE BINARY) AND (MIN(COUNT(rt1.c2)))) UNION ALL SELECT rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c0 HAVING (NOT (((GROUP_CONCAT(SUM(rt1.c0))) BETWEEN (0.00485164468436694 COLLATE BINARY) AND (MIN(COUNT(rt1.c2)))))) UNION ALL SELECT rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c0 HAVING ((((GROUP_CONCAT(SUM(rt1.c0))) BETWEEN (0.00485164468436694 COLLATE BINARY) AND (MIN(COUNT(rt1.c2))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE HEX(vt0.c0)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) WHEN (((vt0.c0)) BETWEEN ((x'700e')) AND ((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0)>=(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, 0x36edffa1, vt0.c0))) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE HEX(vt0.c0)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) WHEN (((vt0.c0)) BETWEEN ((x'700e')) AND ((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0)>=(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, 0x36edffa1, vt0.c0))) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE HEX(vt0.c0)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) WHEN (((vt0.c0)) BETWEEN ((x'700e')) AND ((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0)>=(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, 0X36edffa1, vt0.c0))) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE (((((rt1.c3)-(rt1.c3))) NOTNULL)) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c3)-(rt1.c3))) NOTNULL)))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE (((((((rt1.c3)-(rt1.c3))) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, vt0.c0 FROM rt1, vt1 CROSS JOIN vt0 ON ((vt1.c1)!=(((((rt1.c0)OR(x'')))AND(vt0.c0)))) GROUP BY rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM rt1, vt1 CROSS JOIN vt0 ON ((vt1.c1)<>(((((rt1.c0)OR(x'')))AND(vt0.c0)))) WHERE ((+ (((rt1.c3) IS FALSE)))) GROUP BY rt1.c0, vt0.c0 UNION SELECT ALL rt1.c0, vt0.c0 FROM rt1, vt1 CROSS JOIN vt0 ON ((vt1.c1)<>(((((rt1.c0)OR(x'')))AND(vt0.c0)))) WHERE ((NOT ((+ (((rt1.c3) IS FALSE)))))) GROUP BY rt1.c0, vt0.c0 UNION SELECT rt1.c0, vt0.c0 FROM rt1, vt1 CROSS JOIN vt0 ON ((vt1.c1)<>(((((rt1.c0)OR(x'')))AND(vt0.c0)))) WHERE ((((+ (((rt1.c3) IS FALSE)))) ISNULL)) GROUP BY rt1.c0, vt0.c0;
SELECT ALL rt1.c0, vt0.c0 FROM rt1, vt1 CROSS JOIN vt0 ON ((vt1.c1)!=(((((rt1.c0)OR(x'')))AND(vt0.c0)))) GROUP BY rt1.c0, vt0.c0;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING MIN(GROUP_CONCAT(COUNT(AVG(COUNT(GROUP_CONCAT(SUM(NULL))))))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(AVG(COUNT(GROUP_CONCAT(SUM(NULL))))))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((MIN(GROUP_CONCAT(COUNT(AVG(COUNT(GROUP_CONCAT(SUM(NULL)))))))) ISNULL);
SELECT rt1.c3, rt1.c0, vt1.c1, vt1.c0, vt0.c0, rt1.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((rt1.c3) NOT NULL)  WHEN '3Ɯ J떍5떍' THEN NULL WHEN rt1.c3 THEN ((rt1.c3) NOT BETWEEN (vt1.c1) AND (NULL)) WHEN ((vt0.c0)AND(rt1.c3)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c3)))AND(rt1.c1)))OR(vt1.c1)) END INNER JOIN rt1 ON ((rt1.c1) BETWEEN (CASE WHEN vt1.c1 THEN rt1.c0 END) AND (((rt1.c2)*(rt1.c3))));
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (((CASE WHEN vt1.c1 THEN rt1.c2 ELSE vt1.c0 END)IS(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (((CASE WHEN vt1.c1 THEN rt1.c2 ELSE vt1.c0 END)IS(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((((CASE WHEN vt1.c1 THEN rt1.c2 ELSE vt1.c0 END)IS(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT rt1.c1, rt1.c3, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(vt1.c1)))AND(rt1.c1)) THEN ((rt1.c0)=(rt1.c2)) ELSE (((vt1.c1))!=((x''))) END LEFT OUTER JOIN vt0 ON '2132679192' GROUP BY rt1.c1, rt1.c3, vt1.c1;
SELECT rt1.c1, rt1.c3, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(vt1.c1)))AND(rt1.c1)) THEN ((rt1.c0)==(rt1.c2)) ELSE (((vt1.c1))<>((x''))) END LEFT OUTER JOIN vt0 ON '2132679192' WHERE (json(vt1.c0)) GROUP BY rt1.c1, rt1.c3, vt1.c1 UNION SELECT rt1.c1, rt1.c3, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(vt1.c1)))AND(rt1.c1)) THEN ((rt1.c0)=(rt1.c2)) ELSE (((vt1.c1))!=((x''))) END LEFT OUTER JOIN vt0 ON '2132679192' WHERE ((NOT (json(vt1.c0)))) GROUP BY rt1.c1, rt1.c3, vt1.c1 UNION SELECT rt1.c1, rt1.c3, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON CASE WHEN ((((vt1.c0)AND(vt1.c1)))AND(rt1.c1)) THEN ((rt1.c0)==(rt1.c2)) ELSE (((vt1.c1))!=((x''))) END LEFT OUTER JOIN vt0 ON '2132679192' WHERE (((json(vt1.c0)) ISNULL)) GROUP BY rt1.c1, rt1.c3, vt1.c1;
SELECT vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT ALL vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING LOWER((SUM(MIN(AVG(COUNT(*)))) IN ())) UNION ALL SELECT vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (NOT (LOWER((SUM(MIN(AVG(COUNT(*)))) IN ())))) UNION ALL SELECT vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING ((LOWER((SUM(MIN(AVG(COUNT(*)))) IN ()))) ISNULL);
SELECT vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT ALL vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING LOWER((SUM(MIN(AVG(COUNT(*)))) IN ())) UNION ALL SELECT vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (NOT (LOWER((SUM(MIN(AVG(COUNT(*)))) IN ())))) UNION ALL SELECT vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING ((LOWER((SUM(MIN(AVG(COUNT(*)))) IN ()))) ISNULL);
SELECT vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS NUMERIC) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON HEX(rt1.c1) CROSS JOIN vt1 ON (~ (STRFTIME(vt1.c0, vt0.c0, rt1.c0)));
SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON HEX(rt1.c1) CROSS JOIN vt1 ON (~ (STRFTIME(vt1.c0, vt0.c0, rt1.c0))) WHERE ((((rt1.c1) NOTNULL) IN ((rt1.c3 IN (rt1.c0, rt1.c1)), ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON HEX(rt1.c1) CROSS JOIN vt1 ON (~ (STRFTIME(vt1.c0, vt0.c0, rt1.c0))) WHERE ((NOT ((((rt1.c1) NOTNULL) IN ((rt1.c3 IN (rt1.c0, rt1.c1)), ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON HEX(rt1.c1) CROSS JOIN vt1 ON (~ (STRFTIME(vt1.c0, vt0.c0, rt1.c0))) WHERE ((((((rt1.c1) NOTNULL) IN ((rt1.c3 IN (rt1.c0, rt1.c1)), ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON HEX(rt1.c1) CROSS JOIN vt1 ON (~ (STRFTIME(vt1.c0, vt0.c0, rt1.c0)));
SELECT ALL vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))<>((x'9df6'))) GROUP BY vt0.c0, rt1.c0, rt1.c1, vt1.c0;
SELECT vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))!=((x'9df6'))) WHERE (((((vt0.c0) NOT NULL))*(CAST(rt1.c0 AS BLOB)))) GROUP BY vt0.c0, rt1.c0, rt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))<>((x'9df6'))) WHERE ((NOT (((((vt0.c0) NOT NULL))*(CAST(rt1.c0 AS BLOB)))))) GROUP BY vt0.c0, rt1.c0, rt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))<>((x'9df6'))) WHERE (((((((vt0.c0) NOT NULL))*(CAST(rt1.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))<>((x'9df6'))) GROUP BY vt0.c0, rt1.c0, rt1.c1, vt1.c0;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((MIN(rt1.c2))!=(COUNT(*))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (((MIN(rt1.c2))<>(COUNT(*))))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((((MIN(rt1.c2))<>(COUNT(*)))) ISNULL);
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((MIN(rt1.c2))!=(COUNT(*))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (((MIN(rt1.c2))<>(COUNT(*))))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((((MIN(rt1.c2))<>(COUNT(*)))) ISNULL);
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT SUM(NULL) FROM vt1, rt1;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (CASE (((rt1.c0))<>((rt1.c2)))  WHEN rt1.c2 THEN CASE WHEN rt1.c3 THEN rt1.c3 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt1.c0)IS(rt1.c1)) WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN (('1364339994') BETWEEN (rt1.c0) AND (rt1.c0)) END) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (CASE (((rt1.c0))!=((rt1.c2)))  WHEN rt1.c2 THEN CASE WHEN rt1.c3 THEN rt1.c3 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt1.c0)IS(rt1.c1)) WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN (('1364339994') BETWEEN (rt1.c0) AND (rt1.c0)) END))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((CASE (((rt1.c0))!=((rt1.c2)))  WHEN rt1.c2 THEN CASE WHEN rt1.c3 THEN rt1.c3 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt1.c0)IS(rt1.c1)) WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN (('1364339994') BETWEEN (rt1.c0) AND (rt1.c0)) END) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((QUOTE(vt1.c1), ((vt1.c1) NOT NULL), json_valid(x'd8b6')))>=((((vt1.c0)&(vt1.c0)), (vt1.c1 IN ()), CAST('0.6928020425092333' AS REAL))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((QUOTE(vt1.c1), ((vt1.c1) NOT NULL), json_valid(x'd8b6')))>=((((vt1.c0)&(vt1.c0)), (vt1.c1 IN ()), CAST('0.6928020425092333' AS REAL))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((QUOTE(vt1.c1), ((vt1.c1) NOT NULL), json_valid(x'd8b6')))>=((((vt1.c0)&(vt1.c0)), (vt1.c1 IN ()), CAST('0.6928020425092333' AS REAL))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt1, rt1 WHERE (CASE WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c3) BETWEEN (1171390876) AND (rt1.c0)) ELSE CAST(rt1.c3 AS NUMERIC) END) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM vt1, rt1 WHERE ((NOT (CASE WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c3) BETWEEN (1171390876) AND (rt1.c0)) ELSE CAST(rt1.c3 AS NUMERIC) END))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM vt1, rt1 WHERE (((CASE WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c3) BETWEEN (1171390876) AND (rt1.c0)) ELSE CAST(rt1.c3 AS NUMERIC) END) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) BETWEEN ((MIN(COUNT(MAX('_<'))) COLLATE RTRIM)) AND ((MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) BETWEEN ((MIN(COUNT(MAX('_<'))) COLLATE RTRIM)) AND ((MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) BETWEEN ((MIN(COUNT(MAX('_<'))) COLLATE RTRIM)) AND ((MAX(vt0.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0 COLLATE RTRIM))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0 COLLATE RTRIM))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) WHERE ((~ (CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0 COLLATE RTRIM))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) WHERE ((NOT ((~ (CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 END))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0 COLLATE RTRIM))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) WHERE ((((~ (CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 END))) ISNULL));
SELECT vt1.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0 COLLATE RTRIM))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN COALESCE(DISTINCT NULL, rt1.c1) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE WHEN (rt1.c0 IN ()) THEN COALESCE(DISTINCT NULL, rt1.c1) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN (rt1.c0 IN ()) THEN COALESCE(DISTINCT NULL, rt1.c1) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c0;
SELECT rt1.c3, rt1.c0 FROM rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS TEXT)) GROUP BY rt1.c3, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS TEXT)))) GROUP BY rt1.c3, rt1.c0 UNION SELECT rt1.c3, rt1.c0 FROM rt1 WHERE (((CAST(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS TEXT)) ISNULL)) GROUP BY rt1.c3, rt1.c0;
SELECT rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((((vt0.c0)) NOT BETWEEN ((AVG(vt0.c0))) AND ((GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((((vt0.c0)) NOT BETWEEN ((AVG(vt0.c0))) AND ((GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((((vt0.c0)) NOT BETWEEN ((AVG(vt0.c0))) AND ((GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT ALL TOTAL(((((vt1.c1) IS TRUE)) NOT NULL)) FROM vt1 ORDER BY (- (0.7856792492252205))  NULLS FIRST, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT), '2132679192' DESC;
SELECT * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) ISNULL)))==((CAST(vt1.c1 AS NUMERIC))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) ISNULL)))==((CAST(vt1.c1 AS NUMERIC)))) WHERE (((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))IS NOT(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) ISNULL)))==((CAST(vt1.c1 AS NUMERIC)))) WHERE ((NOT (((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))IS NOT(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) ISNULL)))==((CAST(vt1.c1 AS NUMERIC)))) WHERE (((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))IS NOT(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) ISNULL)))==((CAST(vt1.c1 AS NUMERIC))));
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((NULL)>>(vt1.c0))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((NULL)>>(vt1.c0))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((NULL)>>(vt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM vt0, rt1 WHERE (((((((rt1.c3)AND(x'')))OR(vt0.c0))) BETWEEN ((((vt0.c0))>=((rt1.c0)))) AND (CAST(vt0.c0 AS REAL)))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM vt0, rt1 WHERE ((NOT (((((((rt1.c3)AND(x'')))OR(vt0.c0))) BETWEEN ((((vt0.c0))>=((rt1.c0)))) AND (CAST(vt0.c0 AS REAL)))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM vt0, rt1 WHERE (((((((((rt1.c3)AND(x'')))OR(vt0.c0))) BETWEEN ((((vt0.c0))>=((rt1.c0)))) AND (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0 HAVING (GROUP_CONCAT(rt1.c1) IN ()) UNION ALL SELECT rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0 HAVING (NOT ((GROUP_CONCAT(rt1.c1) IN ()))) UNION ALL SELECT ALL rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0 HAVING (((GROUP_CONCAT(rt1.c1) IN ())) ISNULL);
SELECT ALL rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0 HAVING (GROUP_CONCAT(rt1.c1) IN ()) UNION ALL SELECT rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0 HAVING (NOT ((GROUP_CONCAT(rt1.c1) IN ()))) UNION ALL SELECT ALL rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0 HAVING (((GROUP_CONCAT(rt1.c1) IN ())) ISNULL);
SELECT ALL rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0;
SELECT ALL * FROM rt1, vt1;
SELECT ALL * FROM rt1, vt1 WHERE ((((+ (vt1.c1)))*(CAST('' AS BLOB)))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT ((((+ (vt1.c1)))*(CAST('' AS BLOB)))))) UNION ALL SELECT * FROM rt1, vt1 WHERE ((((((+ (vt1.c1)))*(CAST('' AS BLOB)))) ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (CAST((((rt1.c3))!=((rt1.c3))) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT (CAST((((rt1.c3))!=((rt1.c3))) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (((CAST((((rt1.c3))<>((rt1.c3))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT ALL rt1.c1, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c1, rt1.c3 FROM vt1, rt1 WHERE ('1171390876') GROUP BY rt1.c1, rt1.c3 UNION SELECT rt1.c1, rt1.c3 FROM vt1 NOT INDEXED, rt1 WHERE ((NOT ('1171390876'))) GROUP BY rt1.c1, rt1.c3 UNION SELECT rt1.c1, rt1.c3 FROM vt1, rt1 WHERE ((('1171390876') ISNULL)) GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c3, vt1.c1, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON CAST(((((((((rt1.c2)OR(rt1.c1)))OR(vt1.c0)))AND('')))AND(rt1.c2)) AS BLOB) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c3, vt1.c1, vt0.c0;
SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c3, vt1.c1, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON CAST(((((((((rt1.c2)OR(rt1.c1)))OR(vt1.c0)))AND('')))AND(rt1.c2)) AS BLOB) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c3, vt1.c1, vt0.c0 HAVING GROUP_CONCAT(MIN(rt1.c1)) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c3, vt1.c1, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON CAST(((((((((rt1.c2)OR(rt1.c1)))OR(vt1.c0)))AND('')))AND(rt1.c2)) AS BLOB) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c3, vt1.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt1.c1)))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c3, vt1.c1, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON CAST(((((((((rt1.c2)OR(rt1.c1)))OR(vt1.c0)))AND('')))AND(rt1.c2)) AS BLOB) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c3, vt1.c1, vt0.c0 HAVING ((GROUP_CONCAT(MIN(rt1.c1))) ISNULL);
SELECT rt1.c3, vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1;
SELECT ALL rt1.c3, vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1 WHERE (((NULL)>(NULLIF(rt1.c0, x'')))) UNION ALL SELECT rt1.c3, vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1 WHERE ((NOT (((NULL)>(NULLIF(rt1.c0, x'')))))) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1 WHERE (((((NULL)>(NULLIF(rt1.c0, x'')))) ISNULL));
SELECT rt1.c3, vt0.c0, rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM vt0, rt1 WHERE (CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM vt0, rt1 WHERE ((NOT (CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM vt0, rt1 WHERE (((CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM vt0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c1 HAVING GROUP_CONCAT(MAX(rt1.c1)) UNION ALL SELECT rt1.c1 FROM vt1 NOT INDEXED, rt1, vt0 GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT(MAX(rt1.c1)))) UNION ALL SELECT rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c1 HAVING ((GROUP_CONCAT(MAX(rt1.c1))) ISNULL);
SELECT ALL MAX(vt1.c1) FROM vt1;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((((((((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(x'16e7')) IN ())) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((((((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(x'16e7')) IN ())))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((((((((((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(x'16e7')) IN ())) ISNULL));
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)||(vt1.c0)))-(vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)||(vt1.c0)))-(vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)||(vt1.c0)))-(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT ALL rt1.c3, rt1.c1 FROM rt1 WHERE (((TIME(rt1.c2, '-1189789501', rt1.c0, rt1.c1, rt1.c1))!=(CAST(rt1.c2 AS NUMERIC)))) GROUP BY rt1.c3, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT (((TIME(rt1.c2, '-1189789501', rt1.c0, rt1.c1, rt1.c1))<>(CAST(rt1.c2 AS NUMERIC)))))) GROUP BY rt1.c3, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c1 FROM rt1 WHERE (((((TIME(rt1.c2, '-1189789501', rt1.c0, rt1.c1, rt1.c1))!=(CAST(rt1.c2 AS NUMERIC)))) ISNULL)) GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT ALL vt1.c0, rt1.c3, rt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c0, vt1.c1, rt1.c1;
SELECT ALL vt1.c0, rt1.c3, rt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c0, vt1.c1, rt1.c1 HAVING ((COUNT(COUNT(*))) BETWEEN (((((rt1.c3)AND(vt1.c1)))AND(rt1.c2))) AND (COUNT(rt1.c2))) UNION ALL SELECT vt1.c0, rt1.c3, rt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c0, vt1.c1, rt1.c1 HAVING (NOT (((COUNT(COUNT(*))) BETWEEN (((((rt1.c3)AND(vt1.c1)))AND(rt1.c2))) AND (COUNT(rt1.c2))))) UNION ALL SELECT vt1.c0, rt1.c3, rt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c0, vt1.c1, rt1.c1 HAVING ((((COUNT(COUNT(*))) BETWEEN (((((rt1.c3)AND(vt1.c1)))AND(rt1.c2))) AND (COUNT(rt1.c2)))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((-550293392)) NOT BETWEEN (((- (vt1.c0)))) AND (((NOT (vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((((-550293392)) NOT BETWEEN (((- (vt1.c0)))) AND (((NOT (vt1.c0)))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((((-550293392)) NOT BETWEEN (((- (vt1.c0)))) AND (((NOT (vt1.c0)))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM vt0 INNER JOIN vt1 ON (((((0.018394847940766956)IS(rt1.c2))))>=(((~ (vt1.c1))))) CROSS JOIN rt1 ON NULLIF(((rt1.c0)GLOB(NULL)), LTRIM(rt1.c2, rt1.c0));
SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM vt0 INNER JOIN vt1 ON (((((0.018394847940766956)IS(rt1.c2))))>=(((~ (vt1.c1))))) CROSS JOIN rt1 ON NULLIF(((rt1.c0)GLOB(NULL)), LTRIM(rt1.c2, rt1.c0)) WHERE (((((NULL)>>(rt1.c1))) IS TRUE)) UNION SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM vt0 INNER JOIN vt1 ON (((((0.018394847940766956)IS(rt1.c2))))>=(((~ (vt1.c1))))) CROSS JOIN rt1 ON NULLIF(((rt1.c0)GLOB(NULL)), LTRIM(rt1.c2, rt1.c0)) WHERE ((NOT (((((NULL)>>(rt1.c1))) IS TRUE)))) UNION SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM vt0 INNER JOIN vt1 ON (((((0.018394847940766956)IS(rt1.c2))))>=(((~ (vt1.c1))))) CROSS JOIN rt1 ON NULLIF(((rt1.c0)GLOB(NULL)), LTRIM(rt1.c2, rt1.c0)) WHERE (((((((NULL)>>(rt1.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM vt0 INNER JOIN vt1 ON (((((0.018394847940766956)IS(rt1.c2))))>=(((~ (vt1.c1))))) CROSS JOIN rt1 ON NULLIF(((rt1.c0)GLOB(NULL)), LTRIM(rt1.c2, rt1.c0));
SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)<<(CAST(rt1.c1 AS INTEGER))) GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)<<(CAST(rt1.c1 AS INTEGER))) WHERE ((- (((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))) GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)<<(CAST(rt1.c1 AS INTEGER))) WHERE ((NOT ((- (((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))))) GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)<<(CAST(rt1.c1 AS INTEGER))) WHERE ((((- (((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))))) ISNULL)) GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)<<(CAST(rt1.c1 AS INTEGER))) GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2;
SELECT rt1.c2, rt1.c1, vt1.c1, rt1.c0, rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt1.c1, rt1.c0, rt1.c3, vt1.c0;
SELECT rt1.c2, rt1.c1, vt1.c1, rt1.c0, rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt1.c1, rt1.c0, rt1.c3, vt1.c0 HAVING ((((COUNT(GROUP_CONCAT(rt1.c3)))AND(TYPEOF(DISTINCT AVG(COUNT(*))))))OR(MAX(rt1.c2) COLLATE RTRIM)) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c1, rt1.c0, rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt1.c1, rt1.c0, rt1.c3, vt1.c0 HAVING (NOT (((((COUNT(GROUP_CONCAT(rt1.c3)))AND(TYPEOF(DISTINCT AVG(COUNT(*))))))OR(MAX(rt1.c2) COLLATE RTRIM)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt1.c1, rt1.c0, rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt1.c1, rt1.c0, rt1.c3, vt1.c0 HAVING ((((((COUNT(GROUP_CONCAT(rt1.c3)))AND(TYPEOF(DISTINCT AVG(COUNT(*))))))OR(MAX(rt1.c2) COLLATE RTRIM))) ISNULL);
SELECT * FROM vt1, vt0, rt1;
SELECT ALL * FROM vt1, vt0, rt1 WHERE ((((rt1.c3) IS FALSE) IN ())) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE ((NOT ((((rt1.c3) IS FALSE) IN ())))) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE ((((((rt1.c3) IS FALSE) IN ())) ISNULL));
SELECT * FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c1, vt0.c0, rt1.c0, rt1.c3, vt1.c0 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c1, vt0.c0, rt1.c0, rt1.c3, vt1.c0 FROM vt1, vt0, rt1 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt1.c1, vt0.c0, rt1.c0, rt1.c3, vt1.c0 FROM vt1, vt0, rt1 WHERE ((NOT (CAST((+ (vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt1.c1, vt0.c0, rt1.c0, rt1.c3, vt1.c0 FROM vt1, vt0, rt1 WHERE (((CAST((+ (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c1, vt0.c0, rt1.c0, rt1.c3, vt1.c0 FROM vt1, vt0, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2;
SELECT ALL vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2 HAVING GROUP_CONCAT(((rt1.c3)OR(rt1.c0))) UNION ALL SELECT ALL vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2 HAVING (NOT (GROUP_CONCAT(((rt1.c3)OR(rt1.c0))))) UNION ALL SELECT vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2 HAVING ((GROUP_CONCAT(((rt1.c3)OR(rt1.c0)))) ISNULL);
SELECT vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2;
SELECT ALL vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2 HAVING GROUP_CONCAT(((rt1.c3)OR(rt1.c0))) UNION ALL SELECT ALL vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2 HAVING (NOT (GROUP_CONCAT(((rt1.c3)OR(rt1.c0))))) UNION ALL SELECT vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2 HAVING ((GROUP_CONCAT(((rt1.c3)OR(rt1.c0)))) ISNULL);
SELECT vt1.c1, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c1, rt1.c2;
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) WHERE ((((rt1.c2)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))) AND ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c3)))))) UNION ALL SELECT ALL * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) WHERE ((NOT ((((rt1.c2)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))) AND ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c3)))))))) UNION ALL SELECT ALL * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) WHERE ((((((rt1.c2)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))) AND ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c3)))))) ISNULL));
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c1 AS BLOB)) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) AND (COALESCE(DISTINCT 0.07045053592278949, vt1.c1, vt1.c0, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(vt1.c1 AS BLOB)) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) AND (COALESCE(DISTINCT 0.07045053592278949, vt1.c1, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(vt1.c1 AS BLOB)) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) AND (COALESCE(DISTINCT 0.07045053592278949, vt1.c1, vt1.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, vt0 WHERE ((+ (CAST(rt1.c0 AS NUMERIC)))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1, vt0 WHERE ((NOT ((+ (CAST(rt1.c0 AS NUMERIC)))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1, vt0 WHERE ((((+ (CAST(rt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3;
SELECT ALL rt1.c2, vt1.c1, vt1.c0, rt1.c1, rt1.c3, vt0.c0 FROM rt1 INNER JOIN vt1 ON CAST(load_extension(rt1.c3, vt1.c1) AS BLOB) LEFT OUTER JOIN vt0 ON rt1.c0 GROUP BY rt1.c2, vt1.c1, vt1.c0, rt1.c1, rt1.c3, vt0.c0;
SELECT ALL * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL)) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT rt1.c1, vt1.c0, vt1.c1 FROM rt1, vt1;
SELECT DISTINCT rt1.c1, vt1.c0, vt1.c1 FROM rt1, vt1 WHERE ((+ (CASE rt1.c3  WHEN x'' THEN rt1.c0 END))) UNION SELECT DISTINCT rt1.c1, vt1.c0, vt1.c1 FROM rt1, vt1 WHERE ((NOT ((+ (CASE rt1.c3  WHEN x'' THEN rt1.c0 END))))) UNION SELECT DISTINCT rt1.c1, vt1.c0, vt1.c1 FROM rt1, vt1 WHERE ((((+ (CASE rt1.c3  WHEN x'' THEN rt1.c0 END))) ISNULL));
SELECT DISTINCT rt1.c1, vt1.c0, vt1.c1 FROM rt1, vt1;
SELECT ALL rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((((('1962205407')OR(rt1.c1)))OR(rt1.c3)))AND(((((((((rt1.c1)OR(0.558671355489943)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))))) GROUP BY rt1.c3, rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((((('1962205407')OR(rt1.c1)))OR(rt1.c3)))AND(((((((((rt1.c1)OR(0.558671355489943)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))))))) GROUP BY rt1.c3, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((((((('1962205407')OR(rt1.c1)))OR(rt1.c3)))AND(((((((((rt1.c1)OR(0.558671355489943)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))))) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0 HAVING SUM(vt0.c0) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(vt0.c0)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0 HAVING SUM(vt0.c0) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(vt0.c0)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) THEN (NOT (vt1.c1)) END GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON NULL;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON NULL WHERE (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))!=((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON NULL WHERE ((NOT (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))<>((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON NULL WHERE (((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))!=((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON NULL;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (('*^' COLLATE NOCASE IN ())) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT (('*^' COLLATE NOCASE IN ())))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (((('*^' COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT ALL rt1.c0, vt1.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM rt1, vt0, vt1 WHERE (((vt1.c1) IS TRUE) COLLATE BINARY) GROUP BY rt1.c0, vt1.c0 UNION SELECT ALL rt1.c0, vt1.c0 FROM rt1, vt0, vt1 WHERE ((NOT (((vt1.c1) IS TRUE) COLLATE BINARY))) GROUP BY rt1.c0, vt1.c0 UNION SELECT rt1.c0, vt1.c0 FROM rt1, vt0, vt1 WHERE (((((vt1.c1) IS TRUE) COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, vt1.c0;
SELECT ALL rt1.c0, vt1.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(CASE WHEN CAST(x'' AS NUMERIC) THEN ((vt1.c1)+(NULL)) WHEN LIKELY(vt1.c1) THEN ((vt1.c0)*(vt1.c0)) WHEN vt1.c1 THEN CAST(vt1.c1 AS NUMERIC) END) FROM vt1 ORDER BY CASE ((vt1.c1)+(vt1.c1))  WHEN (((0.19793365299439192, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c1))) THEN TRIM(vt1.c1, vt1.c0) WHEN ((vt1.c1) ISNULL) THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c1 THEN 0.40423965453942257 ELSE ((vt1.c0)&(vt1.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (rt1.c0)) THEN (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c3))) ELSE ('61242868' IN ()) END;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (rt1.c0)) THEN (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c3))) ELSE ('61242868' IN ()) END WHERE (CASE ((((((((rt1.c3)AND(vt1.c0)))AND(vt1.c0)))AND(rt1.c1)))OR(vt1.c0))  WHEN (((rt1.c1))>((rt1.c2))) THEN LIKELY(rt1.c2) END) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (rt1.c0)) THEN (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c3))) ELSE ('61242868' IN ()) END WHERE ((NOT (CASE ((((((((rt1.c3)AND(vt1.c0)))AND(vt1.c0)))AND(rt1.c1)))OR(vt1.c0))  WHEN (((rt1.c1))>((rt1.c2))) THEN LIKELY(rt1.c2) END))) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (rt1.c0)) THEN (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c3))) ELSE ('61242868' IN ()) END WHERE (((CASE ((((((((rt1.c3)AND(vt1.c0)))AND(vt1.c0)))AND(rt1.c1)))OR(vt1.c0))  WHEN (((rt1.c1))>((rt1.c2))) THEN LIKELY(rt1.c2) END) ISNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (rt1.c0)) THEN (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c3))) ELSE ('61242868' IN ()) END;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (IFNULL(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END, -1.478102935E9)) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (IFNULL(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END, -1.478102935E9)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((IFNULL(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END, -1.478102935E9)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0;
SELECT rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM vt0, rt1, vt1 WHERE ((- (((rt1.c2) ISNULL)))) GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 UNION SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM vt0, rt1, vt1 WHERE ((NOT ((- (((rt1.c2) ISNULL)))))) GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 UNION SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM vt0, rt1, vt1 WHERE ((((- (((rt1.c2) ISNULL)))) ISNULL)) GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0;
SELECT rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0;
SELECT rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0, vt1.c0;
SELECT ALL rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0, vt1.c0 HAVING SUM(((rt1.c0)%(AVG(vt0.c0)))) UNION ALL SELECT ALL rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0, vt1.c0 HAVING (NOT (SUM(((rt1.c0)%(AVG(vt0.c0)))))) UNION ALL SELECT rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0, vt1.c0 FROM vt0, vt1, rt1 NOT INDEXED GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0, vt1.c0 HAVING ((SUM(((rt1.c0)%(AVG(vt0.c0))))) ISNULL);
SELECT MAX(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 ELSE 0.40979052637374314 END COLLATE RTRIM) FROM vt1, vt0, rt1 ORDER BY 0xfffffffff70cc8aa, rt1.c1  NULLS LAST, ((((rt1.c2) NOT NULL)) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1;
SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (rt1.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE ((NOT (rt1.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (((rt1.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT ALL rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ ((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ ((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ ((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON vt1.c0 GROUP BY rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON vt1.c0 WHERE (NULL) GROUP BY rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1 UNION SELECT rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON vt1.c0 WHERE ((NOT (NULL))) GROUP BY rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON vt1.c0 WHERE (((NULL) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1;
SELECT rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON vt1.c0 GROUP BY rt1.c0, rt1.c2, vt0.c0, vt1.c0, rt1.c3, rt1.c1;
SELECT rt1.c1 FROM rt1, vt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, vt1 GROUP BY rt1.c1 HAVING json_object(GROUP_CONCAT(COUNT(*)) COLLATE RTRIM, COALESCE(DISTINCT GROUP_CONCAT(rt1.c1), vt1.c1, vt1.c0, COUNT(*))) UNION ALL SELECT rt1.c1 FROM rt1, vt1 GROUP BY rt1.c1 HAVING (NOT (json_object(GROUP_CONCAT(COUNT(*)) COLLATE RTRIM, COALESCE(DISTINCT GROUP_CONCAT(rt1.c1), vt1.c1, vt1.c0, COUNT(*))))) UNION ALL SELECT rt1.c1 FROM rt1, vt1 GROUP BY rt1.c1 HAVING ((json_object(GROUP_CONCAT(COUNT(*)) COLLATE RTRIM, COALESCE(DISTINCT GROUP_CONCAT(rt1.c1), vt1.c1, vt1.c0, COUNT(*)))) ISNULL);
SELECT * FROM vt1, vt0, rt1;
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((rt1.c0)!=(rt1.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE ((NOT (((((rt1.c0)<>(rt1.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((((rt1.c0)!=(rt1.c0))) IS FALSE)) ISNULL));
SELECT * FROM vt1, vt0, rt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)>(JULIANDAY(vt1.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)>(JULIANDAY(vt1.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0)))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)>(JULIANDAY(vt1.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0, rt1.c1, rt1.c3)) NOT BETWEEN ((vt0.c0, (NOT ('-330409321')), ((rt1.c2)<=(rt1.c3)))) AND (((NOT (rt1.c2)), rt1.c3, (rt1.c3 IN ())))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0, rt1.c1, rt1.c3)) NOT BETWEEN ((vt0.c0, (NOT ('-330409321')), ((rt1.c2)<=(rt1.c3)))) AND (((NOT (rt1.c2)), rt1.c3, (rt1.c3 IN ())))) WHERE ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)) IN ())) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0, rt1.c1, rt1.c3)) NOT BETWEEN ((vt0.c0, (NOT ('-330409321')), ((rt1.c2)<=(rt1.c3)))) AND (((NOT (rt1.c2)), rt1.c3, (rt1.c3 IN ())))) WHERE ((NOT ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)) IN ())))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0, rt1.c1, rt1.c3)) NOT BETWEEN ((vt0.c0, (NOT ('-330409321')), ((rt1.c2)<=(rt1.c3)))) AND (((NOT (rt1.c2)), rt1.c3, (rt1.c3 IN ())))) WHERE ((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)) IN ())) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0, rt1.c1, rt1.c3)) NOT BETWEEN ((vt0.c0, (NOT ('-330409321')), ((rt1.c2)<=(rt1.c3)))) AND (((NOT (rt1.c2)), rt1.c3, (rt1.c3 IN ())))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING SUM(COUNT(rt1.c1)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING (NOT (SUM(COUNT(rt1.c1)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING ((SUM(COUNT(rt1.c1))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c1) NOTNULL))==(vt1.c1))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c1) NOTNULL))==(vt1.c1))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c1) NOTNULL))=(vt1.c1))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c1, vt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt1 ON 0Xfffffffff82e6811;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c1, vt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt1 ON 0xfffffffff82e6811 WHERE (CASE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0))  WHEN (('') NOT NULL) THEN (vt0.c0 IN (rt1.c0)) END) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt1.c1, vt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt1 ON 0Xfffffffff82e6811 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0))  WHEN (('') NOT NULL) THEN (vt0.c0 IN (rt1.c0)) END))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt1.c1, vt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt1 ON 0Xfffffffff82e6811 WHERE (((CASE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0))  WHEN (('') NOT NULL) THEN (vt0.c0 IN (rt1.c0)) END) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c1, vt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt1 ON 0Xfffffffff82e6811;
SELECT ALL vt1.c0, vt0.c0, vt1.c1, rt1.c0 FROM vt1 INNER JOIN rt1 ON ((-1.518128963E9)IS NOT(vt0.c0)) RIGHT OUTER JOIN vt0 ON vt1.c1 GROUP BY vt1.c0, vt0.c0, vt1.c1, rt1.c0;
SELECT ALL rt1.c1, vt1.c0, vt0.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c1, vt1.c0, vt0.c0;
SELECT rt1.c1, vt1.c0, vt0.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c1, vt1.c0, vt0.c0 HAVING GROUP_CONCAT(SUM(0.40979052637374314) COLLATE BINARY) UNION ALL SELECT ALL rt1.c1, vt1.c0, vt0.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c1, vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(0.40979052637374314) COLLATE BINARY))) UNION ALL SELECT ALL rt1.c1, vt1.c0, vt0.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c1, vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(SUM(0.40979052637374314) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM vt1, rt1, vt0;
SELECT * FROM vt1, rt1, vt0 WHERE ((((NOT (vt1.c0))) IS FALSE)) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE ((NOT ((((NOT (vt1.c0))) IS FALSE)))) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE ((((((NOT (vt1.c0))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((vt1.c1)OR(vt1.c1)))OR(rt1.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (((((vt1.c1)OR(vt1.c1)))OR(rt1.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(rt1.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1;
SELECT rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0)>=(vt1.c0))) AND (json_type(rt1.c2)))) GROUP BY rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1 UNION SELECT rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt0, vt1 WHERE ((NOT (((((vt0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0)>=(vt1.c0))) AND (json_type(rt1.c2)))))) GROUP BY rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1 UNION SELECT ALL rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt0, vt1 WHERE (((((((vt0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0)>=(vt1.c0))) AND (json_type(rt1.c2)))) ISNULL)) GROUP BY rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1;
SELECT rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c3, vt0.c0, rt1.c0, rt1.c2, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 HAVING ')0' UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 HAVING (NOT (')0')) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 HAVING ((')0') ISNULL);
SELECT ALL vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 HAVING ')0' UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 HAVING (NOT (')0')) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 HAVING ((')0') ISNULL);
SELECT ALL vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, vt1.c0, rt1.c2, rt1.c0;
SELECT MIN(x'04137a2c') FROM vt1, vt0, rt1 ORDER BY CASE (rt1.c0 IN ())  WHEN rt1.c0 COLLATE RTRIM THEN '1g戳+j(Gዒ' WHEN ((rt1.c2) IS TRUE) THEN ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c2)) WHEN CASE WHEN vt1.c1 THEN x'' ELSE vt0.c0 END THEN ((rt1.c1)>>(rt1.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)%(vt0.c0)) WHEN (~ (rt1.c0)) THEN (- ('ox.G-r')) ELSE CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END END ASC;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((+ (vt1.c1)))OR(((vt1.c0)||(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((+ (vt1.c1)))OR(((vt1.c0)||(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((+ (vt1.c1)))OR(((vt1.c0)||(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c1 IN ()) IN (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)), (vt0.c0 IN (vt1.c1))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt1.c1 IN ()) IN (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)), (vt0.c0 IN (vt1.c1))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c1 IN ()) IN (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)), (vt0.c0 IN (vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT rt1.c2 FROM rt1, vt0, vt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0, vt1 WHERE (CASE ((rt1.c0) ISNULL)  WHEN ((((((((x'')OR(vt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c3)) THEN ((rt1.c1)&(rt1.c3)) END) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, vt0, vt1 WHERE ((NOT (CASE ((rt1.c0) ISNULL)  WHEN ((((((((x'')OR(vt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c3)) THEN ((rt1.c1)&(rt1.c3)) END))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, vt0, vt1 WHERE (((CASE ((rt1.c0) ISNULL)  WHEN ((((((((x'')OR(vt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c3)) THEN ((rt1.c1)&(rt1.c3)) END) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0, vt1 GROUP BY rt1.c2;
SELECT ALL vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3;
SELECT ALL vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3 HAVING (SUM('-1055039314') IN (AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3 HAVING (NOT ((SUM('-1055039314') IN (AVG(vt1.c0))))) UNION ALL SELECT vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3 HAVING (((SUM('-1055039314') IN (AVG(vt1.c0)))) ISNULL);
SELECT ALL vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3;
SELECT ALL vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3 HAVING (SUM('-1055039314') IN (AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3 HAVING (NOT ((SUM('-1055039314') IN (AVG(vt1.c0))))) UNION ALL SELECT vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3 HAVING (((SUM('-1055039314') IN (AVG(vt1.c0)))) ISNULL);
SELECT ALL vt1.c1, rt1.c2, vt0.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY vt1.c1, rt1.c2, vt0.c0, rt1.c3;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC), CASE WHEN '-1745218002' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB)))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), NULL, CAST(vt0.c0 AS REAL))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((CAST(vt0.c0 AS NUMERIC), CASE WHEN '-1745218002' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB)))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), NULL, CAST(vt0.c0 AS REAL))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((CAST(vt0.c0 AS NUMERIC), CASE WHEN '-1745218002' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB)))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), NULL, CAST(vt0.c0 AS REAL))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((vt1.c0, vt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)-(vt1.c1)), (vt1.c1 IN (vt1.c1)), ((vt1.c1) IS TRUE))) AND (((- (vt1.c0)), COALESCE(rt1.c0, rt1.c0), ((((rt1.c2)AND(vt0.c0)))AND(rt1.c0)))));
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((vt1.c0, vt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)-(vt1.c1)), (vt1.c1 IN (vt1.c1)), ((vt1.c1) IS TRUE))) AND (((- (vt1.c0)), COALESCE(rt1.c0, rt1.c0), ((((rt1.c2)AND(vt0.c0)))AND(rt1.c0))))) WHERE (rt1.c1) UNION SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((vt1.c0, vt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)-(vt1.c1)), (vt1.c1 IN (vt1.c1)), ((vt1.c1) IS TRUE))) AND (((- (vt1.c0)), COALESCE(rt1.c0, rt1.c0), ((((rt1.c2)AND(vt0.c0)))AND(rt1.c0))))) WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((vt1.c0, vt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)-(vt1.c1)), (vt1.c1 IN (vt1.c1)), ((vt1.c1) IS TRUE))) AND (((- (vt1.c0)), COALESCE(rt1.c0, rt1.c0), ((((rt1.c2)AND(vt0.c0)))AND(rt1.c0))))) WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((vt1.c0, vt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)-(vt1.c1)), (vt1.c1 IN (vt1.c1)), ((vt1.c1) IS TRUE))) AND (((- (vt1.c0)), COALESCE(rt1.c0, rt1.c0), ((((rt1.c2)AND(vt0.c0)))AND(rt1.c0)))));
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c1))>(('-2064019726')))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((NOT ((((vt1.c1))>(('-2064019726')))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((NOT ((((vt1.c1))>(('-2064019726')))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt1.c2, rt1.c1, vt0.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt0.c0;
SELECT rt1.c2, rt1.c1, vt0.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt0.c0 HAVING AVG(AVG(COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt0.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt0.c0 HAVING (NOT (AVG(AVG(COUNT(*))))) UNION ALL SELECT rt1.c2, rt1.c1, vt0.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt0.c0 HAVING ((AVG(AVG(COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (LOWER(DISTINCT (vt0.c0 IN ()))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (LOWER(DISTINCT (vt0.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((LOWER(DISTINCT (vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT rt1.c3, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (rt1.c1) GROUP BY rt1.c3, rt1.c2, rt1.c0 UNION SELECT rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c3, rt1.c2, rt1.c0 UNION SELECT rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 6.1242868E7 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (6.1242868E7)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((6.1242868E7) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 6.1242868E7 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (6.1242868E7)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((6.1242868E7) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1, rt1.c0 FROM vt0 LEFT OUTER JOIN rt1 ON vt1.c1 FULL OUTER JOIN vt1 ON CAST((vt0.c0 IN (NULL)) AS TEXT);
SELECT DISTINCT vt0.c0 FROM vt0, vt1, rt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, rt1 WHERE ((CAST(vt1.c0 AS REAL) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, rt1 WHERE ((NOT ((CAST(vt1.c0 AS REAL) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, rt1 WHERE ((((CAST(vt1.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1, rt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (CAST(((vt1.c1)%(vt1.c0)) AS REAL)) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CAST(((vt1.c1)%(vt1.c0)) AS REAL)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST(((vt1.c1)%(vt1.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING MIN(COUNT(SUM(vt1.c0))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (MIN(COUNT(SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((MIN(COUNT(SUM(vt1.c0)))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS BLOB))AND((((rt1.c3))<=((rt1.c3)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((CAST(rt1.c1 AS BLOB))AND((((rt1.c3))<=((rt1.c3)))))))) UNION ALL SELECT * FROM rt1 WHERE (((((CAST(rt1.c1 AS BLOB))AND((((rt1.c3))<=((rt1.c3)))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((1.171390876E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((1.171390876E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((1.171390876E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (vt1.c0) AND (2.132679192E9))))==((((rt1.c0)>=(vt1.c1))))) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (vt1.c0) AND (2.132679192E9))))==((((rt1.c0)>=(vt1.c1))))) WHERE (CAST(CAST(vt1.c1 AS REAL) AS INTEGER)) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (vt1.c0) AND (2.132679192E9))))==((((rt1.c0)>=(vt1.c1))))) WHERE ((NOT (CAST(CAST(vt1.c1 AS REAL) AS INTEGER)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (vt1.c0) AND (2.132679192E9))))=((((rt1.c0)>=(vt1.c1))))) WHERE (((CAST(CAST(vt1.c1 AS REAL) AS INTEGER)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (vt1.c0) AND (2.132679192E9))))==((((rt1.c0)>=(vt1.c1))))) GROUP BY vt1.c1;
SELECT vt1.c1, rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1 NATURAL JOIN vt1 GROUP BY vt1.c1, rt1.c0, rt1.c1, rt1.c3, rt1.c2;
SELECT vt1.c1, rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1 NATURAL JOIN vt1 GROUP BY vt1.c1, rt1.c0, rt1.c1, rt1.c3, rt1.c2 HAVING AVG(AVG(TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt1.c1, rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1 NATURAL JOIN vt1 GROUP BY vt1.c1, rt1.c0, rt1.c1, rt1.c3, rt1.c2 HAVING (NOT (AVG(AVG(TOTAL(COUNT(*)))))) UNION ALL SELECT vt1.c1, rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1 NATURAL JOIN vt1 GROUP BY vt1.c1, rt1.c0, rt1.c1, rt1.c3, rt1.c2 HAVING ((AVG(AVG(TOTAL(COUNT(*))))) ISNULL);
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((x'')<(vt0.c0))) NOT BETWEEN (((rt1.c1)<>(rt1.c3))) AND ((~ (rt1.c0))));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((x'')<(vt0.c0))) NOT BETWEEN (((rt1.c1)!=(rt1.c3))) AND ((~ (rt1.c0)))) WHERE ((~ ((~ (rt1.c1))))) UNION ALL SELECT * FROM rt1 CROSS JOIN vt0 ON ((((x'')<(vt0.c0))) NOT BETWEEN (((rt1.c1)<>(rt1.c3))) AND ((~ (rt1.c0)))) WHERE ((NOT ((~ ((~ (rt1.c1))))))) UNION ALL SELECT * FROM rt1 CROSS JOIN vt0 ON ((((x'')<(vt0.c0))) NOT BETWEEN (((rt1.c1)<>(rt1.c3))) AND ((~ (rt1.c0)))) WHERE ((((~ ((~ (rt1.c1))))) ISNULL));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((x'')<(vt0.c0))) NOT BETWEEN (((rt1.c1)<>(rt1.c3))) AND ((~ (rt1.c0))));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((LTRIM(vt0.c0) IN ((+ (rt1.c3))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT ((LTRIM(vt0.c0) IN ((+ (rt1.c3))))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((((LTRIM(vt0.c0) IN ((+ (rt1.c3))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT vt1.c0, rt1.c1, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON (rt1.c2 IN (rt1.c1, rt1.c1, vt1.c1)) COLLATE BINARY GROUP BY vt1.c0, rt1.c1, vt1.c1;
SELECT ALL vt1.c0, rt1.c1, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON (rt1.c2 IN (rt1.c1, rt1.c1, vt1.c1)) COLLATE BINARY WHERE ((((rt1.c0 IN ()))OR(rt1.c2 COLLATE NOCASE))) GROUP BY vt1.c0, rt1.c1, vt1.c1 UNION SELECT ALL vt1.c0, rt1.c1, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON (rt1.c2 IN (rt1.c1, rt1.c1, vt1.c1)) COLLATE BINARY WHERE ((NOT ((((rt1.c0 IN ()))OR(rt1.c2 COLLATE NOCASE))))) GROUP BY vt1.c0, rt1.c1, vt1.c1 UNION SELECT ALL vt1.c0, rt1.c1, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON (rt1.c2 IN (rt1.c1, rt1.c1, vt1.c1)) COLLATE BINARY WHERE ((((((rt1.c0 IN ()))OR(rt1.c2 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0, rt1.c1, vt1.c1;
SELECT vt1.c0, rt1.c1, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON (rt1.c2 IN (rt1.c1, rt1.c1, vt1.c1)) COLLATE BINARY GROUP BY vt1.c0, rt1.c1, vt1.c1;
SELECT vt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c2;
SELECT ALL vt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c2 HAVING ((((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c1)) AND (MAX(rt1.c3))))>=(TOTAL(SUM(rt1.c2)))) UNION ALL SELECT ALL vt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c2 HAVING (NOT (((((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c1)) AND (MAX(rt1.c3))))>=(TOTAL(SUM(rt1.c2)))))) UNION ALL SELECT vt1.c1, rt1.c2 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c2 HAVING ((((((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c1)) AND (MAX(rt1.c3))))>=(TOTAL(SUM(rt1.c2))))) ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0;
SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (CASE (rt1.c0 IN (0.8194447142975243))  WHEN ((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN (rt1.c3 IN ()) WHEN (rt1.c1 IN ()) THEN TYPEOF(rt1.c0) WHEN 0xffffffff8706a971 THEN rt1.c0 COLLATE BINARY END) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((NOT (CASE (rt1.c0 IN (0.8194447142975243))  WHEN ((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN (rt1.c3 IN ()) WHEN (rt1.c1 IN ()) THEN TYPEOF(rt1.c0) WHEN 0xffffffff8706a971 THEN rt1.c0 COLLATE BINARY END))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((CASE (rt1.c0 IN (0.8194447142975243))  WHEN ((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN (rt1.c3 IN ()) WHEN (rt1.c1 IN ()) THEN TYPEOF(rt1.c0) WHEN 0Xffffffff8706a971 THEN rt1.c0 COLLATE BINARY END) ISNULL));
SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c0))<((rt1.c2))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((((rt1.c0))<((rt1.c2))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((((rt1.c0))<((rt1.c2))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE (((((vt1.c1) NOT NULL))>>(((rt1.c2)>(vt1.c0))))) GROUP BY rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1 UNION SELECT rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((NOT (((((vt1.c1) NOT NULL))>>(((rt1.c2)>(vt1.c0))))))) GROUP BY rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE (((((((vt1.c1) NOT NULL))>>(((rt1.c2)>(vt1.c0))))) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1;
SELECT rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt1.c3, vt1.c1, rt1.c0, rt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING MAX((+ (MIN(SUM(COUNT(AVG(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (MAX((+ (MIN(SUM(COUNT(AVG(vt1.c0))))))))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING ((MAX((+ (MIN(SUM(COUNT(AVG(vt1.c0)))))))) ISNULL);
SELECT vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((NULL)) AND (((- (vt1.c0)))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c1)) NOT BETWEEN ((NULL)) AND (((- (vt1.c0)))))))) UNION ALL SELECT vt1.c1 FROM vt1 NOT INDEXED WHERE ((((((vt1.c1)) NOT BETWEEN ((NULL)) AND (((- (vt1.c0)))))) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2 FROM vt1, rt1 WHERE (((((CAST(rt1.c3 AS REAL))AND(vt1.c1 COLLATE RTRIM)))OR(((vt1.c0)>>(rt1.c1))))) GROUP BY rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2 UNION SELECT rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2 FROM vt1, rt1 WHERE ((NOT (((((CAST(rt1.c3 AS REAL))AND(vt1.c1 COLLATE RTRIM)))OR(((vt1.c0)>>(rt1.c1))))))) GROUP BY rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2 FROM vt1, rt1 WHERE (((((((CAST(rt1.c3 AS REAL))AND(vt1.c1 COLLATE RTRIM)))OR(((vt1.c0)>>(rt1.c1))))) ISNULL)) GROUP BY rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2;
SELECT rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c1, rt1.c0, vt1.c0, rt1.c3, rt1.c2;
SELECT rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING GROUP_CONCAT(0.8975129991571354) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (GROUP_CONCAT(0.8975129991571354))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING ((GROUP_CONCAT(0.8975129991571354)) ISNULL);
SELECT rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING GROUP_CONCAT(0.8975129991571354) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (GROUP_CONCAT(0.8975129991571354))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING ((GROUP_CONCAT(0.8975129991571354)) ISNULL);
SELECT rt1.c2, rt1.c3, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(vt1.c1 AS BLOB) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c1 AS BLOB) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ('0.07045053592278949') UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ('0.07045053592278949'))) UNION SELECT DISTINCT * FROM rt1 WHERE ((('0.07045053592278949') ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (((((0.2089191897945557)AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(x'')))AND(vt1.c1))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((((0.2089191897945557)AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(x'')))AND(vt1.c1))))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((((((0.2089191897945557)AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(x'')))AND(vt1.c1))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CASE vt1.c1  WHEN vt1.c1 COLLATE NOCASE THEN (((vt1.c1))>=((vt1.c0))) ELSE (((vt1.c0))<((vt1.c1))) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE vt1.c1  WHEN vt1.c1 COLLATE NOCASE THEN (((vt1.c1))>=((vt1.c0))) ELSE (((vt1.c0))<((vt1.c1))) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c1 COLLATE NOCASE THEN (((vt1.c1))>=((vt1.c0))) ELSE (((vt1.c0))<((vt1.c1))) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((((((((((vt1.c0 IN (x'', rt1.c2)))AND(((rt1.c2) IS FALSE))))AND(((rt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND(('' IN ()))))AND(('-1895069542' IN (vt1.c0))))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT ((((((((((vt1.c0 IN (x'', rt1.c2)))AND(((rt1.c2) IS FALSE))))AND(((rt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND(('' IN ()))))AND(('-1895069542' IN (vt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((((((((((((vt1.c0 IN (x'', rt1.c2)))AND(((rt1.c2) IS FALSE))))AND(((rt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND(('' IN ()))))AND(('-1895069542' IN (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((((((rt1.c0)>=(rt1.c0)))AND(((NULL) ISNULL))))OR(rt1.c0))) GROUP BY rt1.c1, vt0.c0 UNION SELECT rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((((rt1.c0)>=(rt1.c0)))AND(((NULL) ISNULL))))OR(rt1.c0))))) GROUP BY rt1.c1, vt0.c0 UNION SELECT rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((((((((rt1.c0)>=(rt1.c0)))AND(((NULL) ISNULL))))OR(rt1.c0))) ISNULL)) GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING GROUP_CONCAT(((rt1.c2) NOT NULL)) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(((rt1.c2) NOT NULL)))) UNION ALL SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING ((GROUP_CONCAT(((rt1.c2) NOT NULL))) ISNULL);
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING GROUP_CONCAT(((rt1.c2) NOT NULL)) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(((rt1.c2) NOT NULL)))) UNION ALL SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0 HAVING ((GROUP_CONCAT(((rt1.c2) NOT NULL))) ISNULL);
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE ((NOT (0Xffffffffd4be2a03))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT ((NOT (0xffffffffd4be2a03))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((((NOT (0xffffffffd4be2a03))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))>>((- (vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT))>>((- (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))>>((- (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0;
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0 FROM rt1 NOT INDEXED, vt1, vt0 WHERE (((((CASE WHEN rt1.c0 THEN vt1.c1 WHEN ')0' THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE vt1.c0 END)AND(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 END)))OR(('-1197145734' IN ())))) GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1, vt0 WHERE ((NOT (((((CASE WHEN rt1.c0 THEN vt1.c1 WHEN ')0' THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE vt1.c0 END)AND(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 END)))OR(('-1197145734' IN ())))))) GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0 UNION SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1, vt0 WHERE (((((((CASE WHEN rt1.c0 THEN vt1.c1 WHEN ')0' THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE vt1.c0 END)AND(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 END)))OR(('-1197145734' IN ())))) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0;
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt1.c0;
SELECT vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1 HAVING MIN(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1 HAVING (NOT (MIN(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1 HAVING ((MIN(TOTAL(vt0.c0))) ISNULL);
SELECT rt1.c1, rt1.c2 FROM rt1, vt0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((((((rt1.c1) BETWEEN (rt1.c3) AND (0.4286416047303928)))AND(TRIM(rt1.c0, rt1.c3))))AND(((rt1.c2) NOTNULL)))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1, vt0 WHERE ((NOT (((((((rt1.c1) BETWEEN (rt1.c3) AND (0.4286416047303928)))AND(TRIM(rt1.c0, rt1.c3))))AND(((rt1.c2) NOTNULL)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((((((((rt1.c1) BETWEEN (rt1.c3) AND (0.4286416047303928)))AND(TRIM(rt1.c0, rt1.c3))))AND(((rt1.c2) NOTNULL)))) ISNULL));
SELECT rt1.c1, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN json_array_length(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c0 THEN 0.9965049426918553 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE (NOT (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN json_array_length(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c0 THEN 0.9965049426918553 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE (NOT (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN json_array_length(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c0 THEN 0.9965049426918553 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT ALL rt1.c3, rt1.c1, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c1 GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c1, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c1 WHERE ((((((+ (NULL)))OR(vt1.c1)))AND(((vt1.c0) NOTNULL)))) GROUP BY rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c3, rt1.c1, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c1 WHERE ((NOT ((((((+ (NULL)))OR(vt1.c1)))AND(((vt1.c0) NOTNULL)))))) GROUP BY rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c1 WHERE ((((((((+ (NULL)))OR(vt1.c1)))AND(((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c3, rt1.c1, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c1 GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt1.c1, rt1.c0, vt0.c0, rt1.c1;
SELECT ALL * FROM vt1, rt1 NATURAL JOIN vt0;
SELECT * FROM vt1, rt1 NATURAL JOIN vt0 WHERE ((- ((- (vt0.c0))))) UNION ALL SELECT * FROM vt1, rt1 NATURAL JOIN vt0 WHERE ((NOT ((- ((- (vt0.c0))))))) UNION ALL SELECT * FROM vt1, rt1 NATURAL JOIN vt0 WHERE ((((- ((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt1, rt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1, vt0, rt1;
SELECT DISTINCT * FROM vt1, vt0, rt1 WHERE (((CAST(rt1.c0 AS TEXT))>>(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))) UNION SELECT DISTINCT * FROM vt1, vt0, rt1 WHERE ((NOT (((CAST(rt1.c0 AS TEXT))>>(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))))) UNION SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED, rt1 WHERE (((((CAST(rt1.c0 AS TEXT))>>(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(0xffffffffa74eb9d0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 THEN (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(0xffffffffa74eb9d0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 THEN (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(0Xffffffffa74eb9d0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 THEN (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING vt1.c1 UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (vt1.c1)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((vt1.c1) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING vt1.c1 UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (vt1.c1)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((vt1.c1) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN 0.5986511344078222 ELSE vt1.c0 END));
SELECT vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN 0.5986511344078222 ELSE vt1.c0 END)) WHERE ((CAST(0.8616381742824529 AS BLOB) IN ())) UNION ALL SELECT vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN 0.5986511344078222 ELSE vt1.c0 END)) WHERE ((NOT ((CAST(0.8616381742824529 AS BLOB) IN ())))) UNION ALL SELECT vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN 0.5986511344078222 ELSE vt1.c0 END)) WHERE ((((CAST(0.8616381742824529 AS BLOB) IN ())) ISNULL));
SELECT ALL vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN 0.5986511344078222 ELSE vt1.c0 END));
SELECT DISTINCT vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c1 FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB)) NOTNULL)) UNION SELECT DISTINCT vt1.c1 FROM vt1, vt0 WHERE ((NOT (((CAST(vt1.c0 AS BLOB)) NOTNULL)))) UNION SELECT DISTINCT vt1.c1 FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB)) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1, vt0;
SELECT ALL rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c1, rt1.c3 FROM rt1 WHERE (CASE ((rt1.c1)LIKE(NULL))  WHEN ((((rt1.c3)AND('')))AND(rt1.c3)) THEN ((rt1.c3)OR(rt1.c3)) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((x'29ab'))) END) GROUP BY rt1.c1, rt1.c3 UNION SELECT rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (CASE ((rt1.c1)LIKE(NULL))  WHEN ((((rt1.c3)AND('')))AND(rt1.c3)) THEN ((rt1.c3)OR(rt1.c3)) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((x'29ab'))) END))) GROUP BY rt1.c1, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c3 FROM rt1 WHERE (((CASE ((rt1.c1)LIKE(NULL))  WHEN ((((rt1.c3)AND('')))AND(rt1.c3)) THEN ((rt1.c3)OR(rt1.c3)) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((x'29ab'))) END) ISNULL)) GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING (((((COUNT(*))) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY)) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING (NOT ((((((COUNT(*))) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING (((((((COUNT(*))) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))) ISNULL);
SELECT rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING (((((COUNT(*))) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY)) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING (NOT ((((((COUNT(*))) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0 HAVING (((((((COUNT(*))) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))) ISNULL);
SELECT rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOTNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)+(vt0.c0))) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0))) NOTNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((NOT (((rt1.c2)<=(vt1.c0))))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((NOT ((NOT (((rt1.c2)<=(vt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((((NOT (((rt1.c2)<=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1;
SELECT ALL rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1 WHERE (rt1.c0) GROUP BY rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1 UNION SELECT rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1;
SELECT rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c1;
SELECT vt1.c0, rt1.c3, vt1.c1 FROM vt0, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1;
SELECT vt1.c0, rt1.c3, vt1.c1 FROM vt0, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1 HAVING rt1.c1 UNION ALL SELECT vt1.c0, rt1.c3, vt1.c1 FROM vt0, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL vt1.c0, rt1.c3, vt1.c1 FROM vt0 NOT INDEXED, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT vt1.c0, rt1.c3, vt1.c1 FROM vt0, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1;
SELECT vt1.c0, rt1.c3, vt1.c1 FROM vt0, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1 HAVING rt1.c1 UNION ALL SELECT vt1.c0, rt1.c3, vt1.c1 FROM vt0, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL vt1.c0, rt1.c3, vt1.c1 FROM vt0 NOT INDEXED, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT vt1.c0, rt1.c3, vt1.c1 FROM vt0, vt1, rt1 GROUP BY vt1.c0, rt1.c3, vt1.c1;
SELECT rt1.c1, rt1.c3 FROM vt1, rt1 CROSS JOIN vt0 ON ((CAST(rt1.c1 AS REAL))>(((vt1.c1)OR(rt1.c3))));
SELECT ALL rt1.c1, rt1.c3 FROM vt1, rt1 CROSS JOIN vt0 ON ((CAST(rt1.c1 AS REAL))>(((vt1.c1)OR(rt1.c3)))) WHERE ((((rt1.c2 IN ()))+(((vt1.c1)IS(vt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c3 FROM vt1, rt1 CROSS JOIN vt0 ON ((CAST(rt1.c1 AS REAL))>(((vt1.c1)OR(rt1.c3)))) WHERE ((NOT ((((rt1.c2 IN ()))+(((vt1.c1)IS(vt1.c0))))))) UNION ALL SELECT ALL rt1.c1, rt1.c3 FROM vt1, rt1 CROSS JOIN vt0 ON ((CAST(rt1.c1 AS REAL))>(((vt1.c1)OR(rt1.c3)))) WHERE ((((((rt1.c2 IN ()))+(((vt1.c1)IS(vt1.c0))))) ISNULL));
SELECT rt1.c1, rt1.c3 FROM vt1, rt1 CROSS JOIN vt0 ON ((CAST(rt1.c1 AS REAL))>(((vt1.c1)OR(rt1.c3))));
SELECT DISTINCT rt1.c3 FROM vt0, vt1, rt1;
SELECT DISTINCT rt1.c3 FROM vt0, vt1, rt1 WHERE (((NOT (rt1.c2)) IN ((vt0.c0 IN (rt1.c0))))) UNION SELECT DISTINCT rt1.c3 FROM vt0, vt1, rt1 WHERE ((NOT (((NOT (rt1.c2)) IN ((vt0.c0 IN (rt1.c0))))))) UNION SELECT DISTINCT rt1.c3 FROM vt0, vt1, rt1 WHERE (((((NOT (rt1.c2)) IN ((vt0.c0 IN (rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c3 FROM vt0, vt1, rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((CASE NULL  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END IN ())) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((CASE NULL  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END IN ())))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((((CASE NULL  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c1, vt1.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c1, rt1.c3 FROM vt1 FULL OUTER JOIN vt0 ON ((((((rt1.c1)OR(rt1.c2)))OR(vt1.c0))) NOT NULL) LEFT OUTER JOIN rt1 ON CAST(((rt1.c0)||(vt1.c0)) AS BLOB) GROUP BY rt1.c1, vt1.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c1, rt1.c3;
SELECT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN rt1 ON ((((rt1.c1) NOT NULL))>(CASE vt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)) INNER JOIN vt1 ON (+ (rt1.c3)) COLLATE RTRIM;
SELECT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN rt1 ON ((((rt1.c1) NOT NULL))>(CASE vt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)) INNER JOIN vt1 ON (+ (rt1.c3)) COLLATE RTRIM WHERE (rt1.c1) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN rt1 ON ((((rt1.c1) NOT NULL))>(CASE vt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)) INNER JOIN vt1 ON (+ (rt1.c3)) COLLATE RTRIM WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN rt1 ON ((((rt1.c1) NOT NULL))>(CASE vt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)) INNER JOIN vt1 ON (+ (rt1.c3)) COLLATE RTRIM WHERE (((rt1.c1) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt0 CROSS JOIN rt1 ON ((((rt1.c1) NOT NULL))>(CASE vt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt1.c1 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)) INNER JOIN vt1 ON (+ (rt1.c3)) COLLATE RTRIM;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((']7J,蕁P}') NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((']7J,蕁P}') NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((']7J,蕁P}') NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0 WHERE ((CAST(rt1.c2 AS REAL) IN ())) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, vt0 WHERE ((NOT ((CAST(rt1.c2 AS REAL) IN ())))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, vt0 WHERE ((((CAST(rt1.c2 AS REAL) IN ())) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT ALL rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0;
SELECT rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0 HAVING NULL UNION ALL SELECT ALL rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0;
SELECT rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0 HAVING NULL UNION ALL SELECT ALL rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c3, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c3, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((+ ((rt1.c1 IN ())))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((+ ((rt1.c1 IN ())))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((((+ ((rt1.c1 IN ())))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 END)OR(((vt0.c0) NOT NULL))))AND(vt0.c0 COLLATE NOCASE)))OR((~ (x'')))))AND(vt0.c0))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 END)OR(((vt0.c0) NOT NULL))))AND(vt0.c0 COLLATE NOCASE)))OR((~ (x'')))))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 END)OR(((vt0.c0) NOT NULL))))AND(vt0.c0 COLLATE NOCASE)))OR((~ (x'')))))AND(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c3, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((((((0xffffffff9ca9db44))>=((rt1.c1)))) BETWEEN (CASE WHEN x'' THEN vt1.c0 END) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c3)))))) GROUP BY rt1.c1, rt1.c3, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((NOT ((((((0xffffffff9ca9db44))>=((rt1.c1)))) BETWEEN (CASE WHEN x'' THEN vt1.c0 END) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c3)))))))) GROUP BY rt1.c1, rt1.c3, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((((((((0Xffffffff9ca9db44))>=((rt1.c1)))) BETWEEN (CASE WHEN x'' THEN vt1.c0 END) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c3)))))) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c3, rt1.c0, vt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c3, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0) IS FALSE))AND(395757054)))AND(((((((((NULL)AND(vt1.c1)))OR(rt1.c3)))AND(rt1.c2)))OR(vt0.c0)))) LEFT OUTER JOIN rt1 ON ((((vt1.c0)LIKE(vt1.c0)))-(NULL)) GROUP BY rt1.c2, rt1.c1, rt1.c3, vt0.c0;
SELECT ALL * FROM vt1, rt1, vt0;
SELECT ALL * FROM vt1, rt1, vt0 WHERE (CASE ((((((((((((rt1.c0)OR('1612769831')))AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c1))  WHEN ((((rt1.c2)OR(vt1.c1)))OR(vt0.c0)) THEN (((('')AND(vt1.c1)))AND(vt1.c0)) END) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE ((NOT (CASE ((((((((((((rt1.c0)OR('1612769831')))AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c1))  WHEN ((((rt1.c2)OR(vt1.c1)))OR(vt0.c0)) THEN (((('')AND(vt1.c1)))AND(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE (((CASE ((((((((((((rt1.c0)OR('1612769831')))AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c3)))OR(rt1.c3)))AND(rt1.c1))  WHEN ((((rt1.c2)OR(vt1.c1)))OR(vt0.c0)) THEN (((('')AND(vt1.c1)))AND(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1, rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c3) IS FALSE)))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c3) IS FALSE)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0 WHERE (((((((vt0.c0) NOTNULL)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c3) IS FALSE)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT ALL rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1 FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((+ (rt1.c1))))) LEFT OUTER JOIN rt1 ON 0.11593744747052726 GROUP BY rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1 FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((+ (rt1.c1))))) LEFT OUTER JOIN rt1 ON 0.11593744747052726 WHERE (((CASE vt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN -574925752 ELSE rt1.c3 END)LIKE(CASE WHEN rt1.c0 THEN NULL WHEN vt0.c0 THEN rt1.c2 WHEN x'' THEN vt1.c1 ELSE vt1.c1 END))) GROUP BY rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1 FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((+ (rt1.c1))))) LEFT OUTER JOIN rt1 ON 0.11593744747052726 WHERE ((NOT (((CASE vt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN -574925752 ELSE rt1.c3 END)LIKE(CASE WHEN rt1.c0 THEN NULL WHEN vt0.c0 THEN rt1.c2 WHEN x'' THEN vt1.c1 ELSE vt1.c1 END))))) GROUP BY rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1 FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((+ (rt1.c1))))) LEFT OUTER JOIN rt1 ON 0.11593744747052726 WHERE (((((CASE vt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN -574925752 ELSE rt1.c3 END)LIKE(CASE WHEN rt1.c0 THEN NULL WHEN vt0.c0 THEN rt1.c2 WHEN x'' THEN vt1.c1 ELSE vt1.c1 END))) ISNULL)) GROUP BY rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1 FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((+ (rt1.c1))))) LEFT OUTER JOIN rt1 ON 0.11593744747052726 GROUP BY rt1.c2, vt1.c1, rt1.c3, vt0.c0, rt1.c0, rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST((((MAX(vt0.c0), vt0.c0, MIN(vt0.c0)))>((vt0.c0, COUNT(*), vt0.c0))) AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST((((MAX(vt0.c0), vt0.c0, MIN(vt0.c0)))>((vt0.c0, COUNT(*), vt0.c0))) AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST((((MAX(vt0.c0), vt0.c0, MIN(vt0.c0)))>((vt0.c0, COUNT(*), vt0.c0))) AS INTEGER)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST((((MAX(vt0.c0), vt0.c0, MIN(vt0.c0)))>((vt0.c0, COUNT(*), vt0.c0))) AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST((((MAX(vt0.c0), vt0.c0, MIN(vt0.c0)))>((vt0.c0, COUNT(*), vt0.c0))) AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST((((MAX(vt0.c0), vt0.c0, MIN(vt0.c0)))>((vt0.c0, COUNT(*), vt0.c0))) AS INTEGER)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, rt1, vt0;
SELECT * FROM vt1, rt1 NOT INDEXED, vt0 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE rt1.c3 END)>>(((vt0.c0) BETWEEN (0Xffffffffab0acd5f) AND (rt1.c1))))) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE rt1.c3 END)>>(((vt0.c0) BETWEEN (0xffffffffab0acd5f) AND (rt1.c1))))))) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE (((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE rt1.c3 END)>>(((vt0.c0) BETWEEN (0Xffffffffab0acd5f) AND (rt1.c1))))) ISNULL));
SELECT ALL * FROM vt1, rt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NOT (vt0.c0))))!=((CAST(vt0.c0 AS NUMERIC))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((NOT (vt0.c0))))<>((CAST(vt0.c0 AS NUMERIC))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((NOT (vt0.c0))))!=((CAST(vt0.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT ALL rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0, vt1 WHERE (((MIN(vt1.c1, vt1.c1, vt1.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0))<=((rt1.c1)))) AND (((rt1.c1)-(vt1.c1))))) GROUP BY rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0, vt1 WHERE ((NOT (((MIN(vt1.c1, vt1.c1, vt1.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0))<=((rt1.c1)))) AND (((rt1.c1)-(vt1.c1))))))) GROUP BY rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0, vt1 WHERE (((((MIN(vt1.c1, vt1.c1, vt1.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0))<=((rt1.c1)))) AND (((rt1.c1)-(vt1.c1))))) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c3, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('-2055523838' IN ()) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((('-2055523838' IN ()) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((('-2055523838' IN ()) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('-2055523838' IN ()) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((('-2055523838' IN ()) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((('-2055523838' IN ()) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((((('1732992299')<=(vt0.c0)))OR((((vt1.c1))>((vt1.c0))))))OR((((vt1.c0, vt1.c1, vt0.c0))>((vt1.c0, vt1.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((((('1732992299')<=(vt0.c0)))OR((((vt1.c1))>((vt1.c0))))))OR((((vt1.c0, vt1.c1, vt0.c0))>((vt1.c0, vt1.c0, vt0.c0)))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((((('1732992299')<=(vt0.c0)))OR((((vt1.c1))>((vt1.c0))))))OR((((vt1.c0, vt1.c1, vt0.c0))>((vt1.c0, vt1.c0, vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c1, rt1.c1, vt1.c0, rt1.c3, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt1.c1, rt1.c1, vt1.c0, rt1.c3, rt1.c0 FROM vt1, rt1 WHERE (((RTRIM(0.07185846370047944))IS(((rt1.c1) ISNULL)))) UNION SELECT DISTINCT vt1.c1, rt1.c1, vt1.c0, rt1.c3, rt1.c0 FROM vt1, rt1 WHERE ((NOT (((RTRIM(0.07185846370047944))IS(((rt1.c1) ISNULL)))))) UNION SELECT DISTINCT vt1.c1, rt1.c1, vt1.c0, rt1.c3, rt1.c0 FROM vt1, rt1 WHERE (((((RTRIM(0.07185846370047944))IS(((rt1.c1) ISNULL)))) ISNULL));
SELECT DISTINCT vt1.c1, rt1.c1, vt1.c0, rt1.c3, rt1.c0 FROM vt1, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)<<(9.23305281E8)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)<<(9.23305281E8)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)<<(9.23305281E8)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((GROUP_CONCAT(vt1.c1)) NOT NULL))GLOB(MIN(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((((GROUP_CONCAT(vt1.c1)) NOT NULL))GLOB(MIN(vt1.c1))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((((GROUP_CONCAT(vt1.c1)) NOT NULL))GLOB(MIN(vt1.c1)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((GROUP_CONCAT(vt1.c1)) NOT NULL))GLOB(MIN(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((((GROUP_CONCAT(vt1.c1)) NOT NULL))GLOB(MIN(vt1.c1))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((((GROUP_CONCAT(vt1.c1)) NOT NULL))GLOB(MIN(vt1.c1)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (LIKELIHOOD(CAST(vt0.c0 AS TEXT), 0.06829951809261137)) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (LIKELIHOOD(CAST(vt0.c0 AS TEXT), 0.06829951809261137)))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((LIKELIHOOD(CAST(vt0.c0 AS TEXT), 0.06829951809261137)) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)*(rt1.c2))) BETWEEN (NULL) AND ((((rt1.c2))==((rt1.c2)))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)*(rt1.c2))) BETWEEN (NULL) AND ((((rt1.c2))=((rt1.c2))))) WHERE (HEX(vt1.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)*(rt1.c2))) BETWEEN (NULL) AND ((((rt1.c2))=((rt1.c2))))) WHERE ((NOT (HEX(vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)*(rt1.c2))) BETWEEN (NULL) AND ((((rt1.c2))==((rt1.c2))))) WHERE (((HEX(vt1.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON ((((vt1.c1)*(rt1.c2))) BETWEEN (NULL) AND ((((rt1.c2))==((rt1.c2)))));
SELECT rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, vt0, vt1 WHERE (CAST(rt1.c0 AS TEXT) COLLATE BINARY) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1, vt0, vt1 WHERE ((NOT (CAST(rt1.c0 AS TEXT) COLLATE BINARY))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1, vt0, vt1 WHERE (((CAST(rt1.c0 AS TEXT) COLLATE BINARY) ISNULL)) GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3;
SELECT rt1.c1, vt1.c0, rt1.c3, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt1.c0, rt1.c3, vt0.c0, rt1.c0;
SELECT rt1.c1, vt1.c0, rt1.c3, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt1.c0, rt1.c3, vt0.c0, rt1.c0 HAVING MIN(MAX(COUNT(rt1.c0))) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c3, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt1.c0, rt1.c3, vt0.c0, rt1.c0 HAVING (NOT (MIN(MAX(COUNT(rt1.c0))))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c3, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt1.c0, rt1.c3, vt0.c0, rt1.c0 HAVING ((MIN(MAX(COUNT(rt1.c0)))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (('')) AND (((+ (vt1.c1)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN (('')) AND (((+ (vt1.c1)))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('')) AND (((+ (vt1.c1)))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE (((x'') NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((x'') NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE (((((x'') NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3;
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 NOT INDEXED GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING MAX(CAST(COUNT(*) AS REAL)) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING (NOT (MAX(CAST(COUNT(*) AS REAL)))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING ((MAX(CAST(COUNT(*) AS REAL))) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c2) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 END) NOT BETWEEN ((vt1.c0 IN ())) AND (IFNULL(DISTINCT vt1.c1, vt1.c1)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c1 END) NOT BETWEEN ((vt1.c0 IN ())) AND (IFNULL(DISTINCT vt1.c1, vt1.c1)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c1 END) NOT BETWEEN ((vt1.c0 IN ())) AND (IFNULL(DISTINCT vt1.c1, vt1.c1)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0;
SELECT ALL rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 WHERE ((+ (rt1.c1))) GROUP BY rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 WHERE ((NOT ((+ (rt1.c1))))) GROUP BY rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0 UNION SELECT rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 WHERE ((((+ (rt1.c1))) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0;
SELECT ALL rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3, vt1.c0;
SELECT rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, vt1.c1;
SELECT ALL rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, vt1.c1 HAVING AVG((((rt1.c1, '', COUNT(MAX(rt1.c2)))) NOT BETWEEN ((MIN(vt1.c0), AVG(COUNT(*)), x'')) AND ((vt0.c0, rt1.c0, COUNT(*))))) UNION ALL SELECT rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, vt1.c1 HAVING (NOT (AVG((((rt1.c1, '', COUNT(MAX(rt1.c2)))) NOT BETWEEN ((MIN(vt1.c0), AVG(COUNT(*)), x'')) AND ((vt0.c0, rt1.c0, COUNT(*))))))) UNION ALL SELECT rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, vt1.c1 HAVING ((AVG((((rt1.c1, '', COUNT(MAX(rt1.c2)))) NOT BETWEEN ((MIN(vt1.c0), AVG(COUNT(*)), x'')) AND ((vt0.c0, rt1.c0, COUNT(*)))))) ISNULL);
SELECT ALL MIN(((x'4480') IS FALSE)) FROM rt1;
SELECT * FROM vt1 INNER JOIN rt1 ON (- (((rt1.c2) NOT BETWEEN ('0.8194447142975243') AND (vt1.c0))));
SELECT * FROM vt1 INNER JOIN rt1 ON (- (((rt1.c2) NOT BETWEEN ('0.8194447142975243') AND (vt1.c0)))) WHERE (((((CAST(rt1.c0 AS REAL))OR(TYPEOF(DISTINCT 'TRUE'))))AND(CASE WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 END))) UNION ALL SELECT * FROM vt1 INNER JOIN rt1 ON (- (((rt1.c2) NOT BETWEEN ('0.8194447142975243') AND (vt1.c0)))) WHERE ((NOT (((((CAST(rt1.c0 AS REAL))OR(TYPEOF(DISTINCT 'TRUE'))))AND(CASE WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 END))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt1 ON (- (((rt1.c2) NOT BETWEEN ('0.8194447142975243') AND (vt1.c0)))) WHERE (((((((CAST(rt1.c0 AS REAL))OR(TYPEOF(DISTINCT 'TRUE'))))AND(CASE WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 END))) ISNULL));
SELECT * FROM vt1 INNER JOIN rt1 ON (- (((rt1.c2) NOT BETWEEN ('0.8194447142975243') AND (vt1.c0))));
SELECT DISTINCT rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(0x138ed3d8)))>(CAST(vt1.c0 AS INTEGER)));
SELECT DISTINCT rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(0X138ed3d8)))>(CAST(vt1.c0 AS INTEGER))) WHERE (((+ (rt1.c2)) IN ())) UNION SELECT DISTINCT rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(0X138ed3d8)))>(CAST(vt1.c0 AS INTEGER))) WHERE ((NOT (((+ (rt1.c2)) IN ())))) UNION SELECT DISTINCT rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(0X138ed3d8)))>(CAST(vt1.c0 AS INTEGER))) WHERE (((((+ (rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(0x138ed3d8)))>(CAST(vt1.c0 AS INTEGER)));
SELECT vt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE) IS TRUE)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0, rt1 WHERE ((NOT (((rt1.c0 COLLATE NOCASE) IS TRUE)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0, rt1 WHERE (((((rt1.c0 COLLATE NOCASE) IS TRUE)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c1;
SELECT vt1.c1, rt1.c3, rt1.c1, rt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((rt1.c0)AND(rt1.c2)) AS INTEGER) CROSS JOIN rt1 ON ((((((rt1.c1) IS TRUE))AND(CASE rt1.c0  WHEN NULL THEN x'' END)))OR(((vt0.c0)-(vt1.c1)))) GROUP BY vt1.c1, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((((('ow')OR(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN x'' ELSE rt1.c2 END)))OR(((rt1.c0)<(rt1.c3))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((((('ow')OR(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN x'' ELSE rt1.c2 END)))OR(((rt1.c0)<(rt1.c3))))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((((((('ow')OR(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN x'' ELSE rt1.c2 END)))OR(((rt1.c0)<(rt1.c3))))) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE BINARY, (((vt0.c0))==((vt0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (IFNULL(DISTINCT vt0.c0 COLLATE BINARY, (((vt0.c0))=((vt0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((IFNULL(DISTINCT vt0.c0 COLLATE BINARY, (((vt0.c0))=((vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT rt1.c3, vt1.c1, rt1.c0, vt1.c0 FROM vt1, vt0 CROSS JOIN rt1 ON ((((((((rt1.c2 COLLATE BINARY)OR(CASE WHEN 0.5985361342355306 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL END)))OR(rt1.c0)))OR(rt1.c3 COLLATE NOCASE)))AND((- (vt0.c0)))) GROUP BY rt1.c3, vt1.c1, rt1.c0, vt1.c0;
SELECT rt1.c3, vt1.c1, rt1.c0, vt1.c0 FROM vt1, vt0 CROSS JOIN rt1 ON ((((((((rt1.c2 COLLATE BINARY)OR(CASE WHEN 0.5985361342355306 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL END)))OR(rt1.c0)))OR(rt1.c3 COLLATE NOCASE)))AND((- (vt0.c0)))) WHERE (((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (rt1.c3) AND (vt1.c1))) GROUP BY rt1.c3, vt1.c1, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c3, vt1.c1, rt1.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED CROSS JOIN rt1 ON ((((((((rt1.c2 COLLATE BINARY)OR(CASE WHEN 0.5985361342355306 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL END)))OR(rt1.c0)))OR(rt1.c3 COLLATE NOCASE)))AND((- (vt0.c0)))) WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (rt1.c3) AND (vt1.c1))))) GROUP BY rt1.c3, vt1.c1, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c3, vt1.c1, rt1.c0, vt1.c0 FROM vt1, vt0 CROSS JOIN rt1 ON ((((((((rt1.c2 COLLATE BINARY)OR(CASE WHEN 0.5985361342355306 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL END)))OR(rt1.c0)))OR(rt1.c3 COLLATE NOCASE)))AND((- (vt0.c0)))) WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (rt1.c3) AND (vt1.c1))) ISNULL)) GROUP BY rt1.c3, vt1.c1, rt1.c0, vt1.c0;
SELECT rt1.c3, vt1.c1, rt1.c0, vt1.c0 FROM vt1, vt0 CROSS JOIN rt1 ON ((((((((rt1.c2 COLLATE BINARY)OR(CASE WHEN 0.5985361342355306 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL END)))OR(rt1.c0)))OR(rt1.c3 COLLATE NOCASE)))AND((- (vt0.c0)))) GROUP BY rt1.c3, vt1.c1, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c2, vt1.c0 FROM rt1 NOT INDEXED, vt1, vt0 GROUP BY rt1.c1, rt1.c2, vt1.c0;
SELECT ALL rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, vt1.c0 HAVING MIN(SUM(rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, vt1.c0 HAVING (NOT (MIN(SUM(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, vt1.c0 HAVING ((MIN(SUM(rt1.c0))) ISNULL);
SELECT * FROM rt1 INNER JOIN vt0 ON (NOT (((rt1.c3)+(rt1.c2)))) FULL OUTER JOIN vt1 ON '1746845512';
SELECT ALL * FROM rt1 INNER JOIN vt0 ON (NOT (((rt1.c3)+(rt1.c2)))) FULL OUTER JOIN vt1 ON '1746845512' WHERE (json_extract(rt1.c2, rt1.c2, vt0.c0, rt1.c2) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt1 INNER JOIN vt0 ON (NOT (((rt1.c3)+(rt1.c2)))) FULL OUTER JOIN vt1 ON '1746845512' WHERE ((NOT (json_extract(rt1.c2, rt1.c2, vt0.c0, rt1.c2) COLLATE RTRIM))) UNION ALL SELECT * FROM rt1 INNER JOIN vt0 ON (NOT (((rt1.c3)+(rt1.c2)))) FULL OUTER JOIN vt1 ON '1746845512' WHERE (((json_extract(rt1.c2, rt1.c2, vt0.c0, rt1.c2) COLLATE RTRIM) ISNULL));
SELECT * FROM rt1 INNER JOIN vt0 ON (NOT (((rt1.c3)+(rt1.c2)))) FULL OUTER JOIN vt1 ON '1746845512';
SELECT DISTINCT rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0))));
SELECT DISTINCT rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) WHERE (((CASE WHEN 0Xffffffffa3acf100 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 END)IS(((((rt1.c0)OR(rt1.c1)))OR(rt1.c3))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) WHERE ((NOT (((CASE WHEN 0xffffffffa3acf100 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 END)IS(((((rt1.c0)OR(rt1.c1)))OR(rt1.c3))))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) WHERE (((((CASE WHEN 0xffffffffa3acf100 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 END)IS(((((rt1.c0)OR(rt1.c1)))OR(rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))==(((vt0.c0)<(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))==(((vt0.c0)<(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))==(((vt0.c0)<(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((MIN(GROUP_CONCAT(vt1.c1))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((MIN(GROUP_CONCAT(vt1.c1))))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((MIN(GROUP_CONCAT(vt1.c1)))))))) ISNULL);
SELECT ALL * FROM rt1, vt1;
SELECT ALL * FROM rt1, vt1 WHERE (vt1.c1) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT * FROM rt1, vt1 WHERE (((vt1.c1) ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((NOT (((0X45d2019c) NOT BETWEEN (NULL) AND (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((NOT (((0X45d2019c) NOT BETWEEN (NULL) AND (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((NOT (((0x45d2019c) NOT BETWEEN (NULL) AND (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c1) NOT NULL))+((NULL IN (vt1.c1))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c1) NOT NULL))+((NULL IN (vt1.c1))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c1) NOT NULL))+((NULL IN (vt1.c1))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING MIN(vt1.c1) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (MIN(vt1.c1) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((MIN(vt1.c1) COLLATE NOCASE) ISNULL);
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING MIN(vt1.c1) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (MIN(vt1.c1) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((MIN(vt1.c1) COLLATE NOCASE) ISNULL);
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))) THEN ((NULL) NOT NULL) ELSE UNLIKELY(vt1.c1) END;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))) THEN ((NULL) NOT NULL) ELSE UNLIKELY(vt1.c1) END WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))) THEN ((NULL) NOT NULL) ELSE UNLIKELY(vt1.c1) END WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))) THEN ((NULL) NOT NULL) ELSE UNLIKELY(vt1.c1) END WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))) THEN ((NULL) NOT NULL) ELSE UNLIKELY(vt1.c1) END;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (((((((vt1.c1)||(rt1.c2)))AND(((rt1.c1)>=(rt1.c0)))))OR((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (((((((vt1.c1)||(rt1.c2)))AND(((rt1.c1)>=(rt1.c0)))))OR((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((((((((vt1.c1)||(rt1.c2)))AND(((rt1.c1)>=(rt1.c0)))))OR((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1;
SELECT ALL rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1 HAVING ((CHANGES())/(CASE WHEN x'7c70' THEN rt1.c1 END)) UNION ALL SELECT rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1 HAVING (NOT (((CHANGES())/(CASE WHEN x'7c70' THEN rt1.c1 END)))) UNION ALL SELECT ALL rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1 HAVING ((((CHANGES())/(CASE WHEN x'7c70' THEN rt1.c1 END))) ISNULL);
SELECT ALL rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1;
SELECT ALL rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1 HAVING ((CHANGES())/(CASE WHEN x'7c70' THEN rt1.c1 END)) UNION ALL SELECT rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1 HAVING (NOT (((CHANGES())/(CASE WHEN x'7c70' THEN rt1.c1 END)))) UNION ALL SELECT ALL rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1 HAVING ((((CHANGES())/(CASE WHEN x'7c70' THEN rt1.c1 END))) ISNULL);
SELECT ALL rt1.c0, vt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c0, vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1, rt1;
SELECT ALL vt1.c1 FROM vt0, vt1, rt1 WHERE (((rt1.c1)GLOB(((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c1))))) UNION ALL SELECT ALL vt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT (((rt1.c1)GLOB(((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c1))))))) UNION ALL SELECT vt1.c1 FROM vt0, vt1, rt1 WHERE (((((rt1.c1)GLOB(((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c1))))) ISNULL));
SELECT ALL vt1.c1 FROM vt0, vt1, rt1;
SELECT DISTINCT vt1.c0, vt1.c1, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt1, vt0;
SELECT DISTINCT vt1.c0, vt1.c1, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt1, vt0 WHERE (((CAST(vt1.c1 AS TEXT))-(vt1.c0))) UNION SELECT DISTINCT vt1.c0, vt1.c1, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt1, vt0 NOT INDEXED WHERE ((NOT (((CAST(vt1.c1 AS TEXT))-(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt1, vt0 WHERE (((((CAST(vt1.c1 AS TEXT))-(vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt1, vt0;
SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (CAST(CASE WHEN x'2e94' THEN rt1.c0 END AS INTEGER)) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CAST(CASE WHEN x'2e94' THEN rt1.c0 END AS INTEGER)))) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c2 FROM rt1 NOT INDEXED WHERE (((CAST(CASE WHEN x'2e94' THEN rt1.c0 END AS INTEGER)) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c2, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c2, rt1.c0 HAVING AVG(GROUP_CONCAT('-1224192089')) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (AVG(GROUP_CONCAT('-1224192089')))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c2, rt1.c0 HAVING ((AVG(GROUP_CONCAT('-1224192089'))) ISNULL);
SELECT rt1.c0, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, rt1, vt0;
SELECT ALL rt1.c0, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, rt1, vt0 WHERE (((((((((((((rt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(((vt1.c1) NOT NULL))))OR('-1706917677')))AND(((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c3)))OR(vt1.c0)))OR('ᘮsykxi ')))))AND(rt1.c2 COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, rt1 NOT INDEXED, vt0 WHERE ((NOT (((((((((((((rt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(((vt1.c1) NOT NULL))))OR('-1706917677')))AND(((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c3)))OR(vt1.c0)))OR('ᘮsykxi ')))))AND(rt1.c2 COLLATE NOCASE))))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, rt1, vt0 WHERE (((((((((((((((rt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(((vt1.c1) NOT NULL))))OR('-1706917677')))AND(((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c3)))OR(vt1.c0)))OR('ᘮsykxi ')))))AND(rt1.c2 COLLATE NOCASE))) ISNULL));
SELECT rt1.c0, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, rt1, vt0;
SELECT DISTINCT vt1.c1 FROM vt1, rt1;
SELECT DISTINCT vt1.c1 FROM vt1, rt1 WHERE ((rt1.c3 IN ())) UNION SELECT DISTINCT vt1.c1 FROM vt1, rt1 WHERE ((NOT ((rt1.c3 IN ())))) UNION SELECT DISTINCT vt1.c1 FROM vt1, rt1 WHERE ((((rt1.c3 IN ())) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1, rt1;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ())) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN NULL THEN vt0.c0 WHEN '-1481679666' THEN vt1.c0 ELSE vt1.c1 END)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ())) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN NULL THEN vt0.c0 WHEN '-1481679666' THEN vt1.c0 ELSE vt1.c1 END)) WHERE (((((((((vt1.c0)AND(((((vt1.c0)AND('b*8^')))AND(vt0.c0)))))AND((+ (vt1.c1)))))AND((- ('6WVT')))))OR((NOT (vt1.c1))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ())) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN NULL THEN vt0.c0 WHEN '-1481679666' THEN vt1.c0 ELSE vt1.c1 END)) WHERE ((NOT (((((((((vt1.c0)AND(((((vt1.c0)AND('b*8^')))AND(vt0.c0)))))AND((+ (vt1.c1)))))AND((- ('6WVT')))))OR((NOT (vt1.c1))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ())) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN NULL THEN vt0.c0 WHEN '-1481679666' THEN vt1.c0 ELSE vt1.c1 END)) WHERE (((((((((((vt1.c0)AND(((((vt1.c0)AND('b*8^')))AND(vt0.c0)))))AND((+ (vt1.c1)))))AND((- ('6WVT')))))OR((NOT (vt1.c1))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ())) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN NULL THEN vt0.c0 WHEN '-1481679666' THEN vt1.c0 ELSE vt1.c1 END)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)))AND((+ (vt1.c0)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (CASE ((0.8394930685662553)<<(0.10742361570860182))  WHEN ((vt1.c0) ISNULL) THEN (NOT (vt1.c1)) ELSE ((vt1.c1)<<(vt1.c0)) END) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CASE ((0.8394930685662553)<<(0.10742361570860182))  WHEN ((vt1.c0) ISNULL) THEN (NOT (vt1.c1)) ELSE ((vt1.c1)<<(vt1.c0)) END))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CASE ((0.8394930685662553)<<(0.10742361570860182))  WHEN ((vt1.c0) ISNULL) THEN (NOT (vt1.c1)) ELSE ((vt1.c1)<<(vt1.c0)) END) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON CAST(rt1.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN vt0 ON (((((rt1.c3)OR(rt1.c0)))OR(rt1.c2)) IN ());
SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON CAST(rt1.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN vt0 ON (((((rt1.c3)OR(rt1.c0)))OR(rt1.c2)) IN ()) WHERE (((rt1.c2)*(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON CAST(rt1.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN vt0 ON (((((rt1.c3)OR(rt1.c0)))OR(rt1.c2)) IN ()) WHERE ((NOT (((rt1.c2)*(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON CAST(rt1.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN vt0 ON (((((rt1.c3)OR(rt1.c0)))OR(rt1.c2)) IN ()) WHERE (((((rt1.c2)*(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN vt1 ON CAST(rt1.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN vt0 ON (((((rt1.c3)OR(rt1.c0)))OR(rt1.c2)) IN ());
SELECT rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 NOT INDEXED, vt0, vt1 WHERE ((x'' IN ())) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, vt0, vt1 WHERE ((NOT ((x'' IN ())))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, vt0, vt1 WHERE ((((x'' IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MAX(vt0.c0))) ISNULL);
SELECT MAX(CASE (NOT (rt1.c3))  WHEN LTRIM(rt1.c1) THEN 0.2638626455419041 END) FROM rt1 ORDER BY ((((rt1.c2)%(0Xffffffffd99b6233)))AND(((rt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT rt1.c2, vt0.c0, vt1.c1 FROM rt1, vt0, vt1;
SELECT rt1.c2, vt0.c0, vt1.c1 FROM rt1, vt0, vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (rt1.c2) AND ('0.2089191897945557'))))) UNION ALL SELECT rt1.c2, vt0.c0, vt1.c1 FROM rt1, vt0, vt1 WHERE ((NOT ((~ (((vt1.c0) NOT BETWEEN (rt1.c2) AND ('0.2089191897945557'))))))) UNION ALL SELECT rt1.c2, vt0.c0, vt1.c1 FROM rt1, vt0, vt1 WHERE ((((~ (((vt1.c0) NOT BETWEEN (rt1.c2) AND ('0.2089191897945557'))))) ISNULL));
SELECT rt1.c2, vt0.c0, vt1.c1 FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1 NOT INDEXED, vt0, vt1 WHERE (((0.7292309620088491)>=((rt1.c0 IN (rt1.c3))))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (((0.7292309620088491)>=((rt1.c0 IN (rt1.c3))))))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((0.7292309620088491)>=((rt1.c0 IN (rt1.c3))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT ALL vt0.c0, rt1.c1, vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt0.c0, rt1.c1, vt1.c1, rt1.c3;
SELECT vt0.c0, rt1.c1, vt1.c1, rt1.c3 FROM vt1, vt0, rt1 WHERE (TIME(((vt1.c0) BETWEEN ('0.07045053592278949') AND (vt1.c0)), ((rt1.c1)%(vt1.c1)), ((vt1.c1) NOT BETWEEN ('-11418709') AND (vt1.c0)))) GROUP BY vt0.c0, rt1.c1, vt1.c1, rt1.c3 UNION SELECT vt0.c0, rt1.c1, vt1.c1, rt1.c3 FROM vt1, vt0, rt1 WHERE ((NOT (TIME(((vt1.c0) BETWEEN ('0.07045053592278949') AND (vt1.c0)), ((rt1.c1)%(vt1.c1)), ((vt1.c1) NOT BETWEEN ('-11418709') AND (vt1.c0)))))) GROUP BY vt0.c0, rt1.c1, vt1.c1, rt1.c3 UNION SELECT ALL vt0.c0, rt1.c1, vt1.c1, rt1.c3 FROM vt1, vt0, rt1 WHERE (((TIME(((vt1.c0) BETWEEN ('0.07045053592278949') AND (vt1.c0)), ((rt1.c1)%(vt1.c1)), ((vt1.c1) NOT BETWEEN ('-11418709') AND (vt1.c0)))) ISNULL)) GROUP BY vt0.c0, rt1.c1, vt1.c1, rt1.c3;
SELECT ALL vt0.c0, rt1.c1, vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt0.c0, rt1.c1, vt1.c1, rt1.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT * FROM vt0, vt1 NATURAL JOIN rt1;
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt1 WHERE (((((vt0.c0)IS(rt1.c0)))+(CASE rt1.c3  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt1 WHERE ((NOT (((((vt0.c0)IS(rt1.c0)))+(CASE rt1.c3  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt0, vt1 NATURAL JOIN rt1 WHERE (((((((vt0.c0)IS(rt1.c0)))+(CASE rt1.c3  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT * FROM vt0, vt1 NATURAL JOIN rt1;
SELECT DISTINCT vt1.c0, rt1.c1, vt1.c1 FROM vt1, rt1, vt0;
SELECT DISTINCT vt1.c0, rt1.c1, vt1.c1 FROM vt1, rt1, vt0 WHERE (rt1.c3) UNION SELECT DISTINCT vt1.c0, rt1.c1, vt1.c1 FROM vt1, rt1, vt0 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT vt1.c0, rt1.c1, vt1.c1 FROM vt1, rt1, vt0 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c1, vt1.c1 FROM vt1, rt1, vt0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((~ ((((vt1.c1))!=((vt1.c1)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((~ ((((vt1.c1))!=((vt1.c1)))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((((~ ((((vt1.c1))<>((vt1.c1)))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((0.966551887008144)&(COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (((0.966551887008144)&(COUNT(COUNT(COUNT(*))))))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((((0.966551887008144)&(COUNT(COUNT(COUNT(*)))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (UNLIKELY((vt0.c0 IN (vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (UNLIKELY((vt0.c0 IN (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((UNLIKELY((vt0.c0 IN (vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (((547958909)IS NOT(rt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (((547958909)IS NOT(rt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((((547958909)IS NOT(rt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL vt1.c1, rt1.c0, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))  WHEN ((rt1.c2)<=(rt1.c3)) THEN '-791671294' ELSE (vt1.c1 IN (x'')) END LEFT OUTER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)))>(((((rt1.c0)OR(vt1.c0)))OR(vt1.c1)))) GROUP BY vt1.c1, rt1.c0, vt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c3, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c3, rt1.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c3, rt1.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c3, rt1.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0)))>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (COALESCE(DISTINCT CASE ''  WHEN rt1.c0 THEN rt1.c1 ELSE '3Ɯ J떍5떍' END, ((rt1.c3)<=(rt1.c0)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (COALESCE(DISTINCT CASE ''  WHEN rt1.c0 THEN rt1.c1 ELSE '3Ɯ J떍5떍' END, ((rt1.c3)<=(rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((COALESCE(DISTINCT CASE ''  WHEN rt1.c0 THEN rt1.c1 ELSE '3Ɯ J떍5떍' END, ((rt1.c3)<=(rt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2;
SELECT ALL rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2 FROM vt0, vt1, rt1 WHERE (((CAST(vt0.c0 AS TEXT))<(((rt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) GROUP BY rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2 UNION SELECT rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2 FROM vt0, vt1, rt1 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))<(((rt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))))) GROUP BY rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2 FROM vt0, vt1, rt1 WHERE (((((CAST(vt0.c0 AS TEXT))<(((rt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2;
SELECT ALL rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c3, vt1.c0, rt1.c2;
SELECT rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1 HAVING GROUP_CONCAT((NOT (rt1.c1))) UNION ALL SELECT rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT((NOT (rt1.c1))))) UNION ALL SELECT ALL rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1 HAVING ((GROUP_CONCAT((NOT (rt1.c1)))) ISNULL);
SELECT rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1 HAVING GROUP_CONCAT((NOT (rt1.c1))) UNION ALL SELECT rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT((NOT (rt1.c1))))) UNION ALL SELECT ALL rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1 HAVING ((GROUP_CONCAT((NOT (rt1.c1)))) ISNULL);
SELECT rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, vt1.c1 FROM vt1, rt1;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, vt1.c1 FROM vt1, rt1 WHERE ((vt1.c1 COLLATE NOCASE IN (CAST(vt1.c0 AS NUMERIC), rt1.c3 COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0, vt1.c1 FROM vt1, rt1 WHERE ((NOT ((vt1.c1 COLLATE NOCASE IN (CAST(vt1.c0 AS NUMERIC), rt1.c3 COLLATE NOCASE))))) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0, vt1.c1 FROM vt1, rt1 WHERE ((((vt1.c1 COLLATE NOCASE IN (CAST(vt1.c0 AS NUMERIC), rt1.c3 COLLATE NOCASE))) ISNULL));
SELECT ALL rt1.c1, rt1.c0, vt1.c0, vt1.c1 FROM vt1, rt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (CAST((('56844853') IS TRUE) AS INTEGER)) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CAST((('56844853') IS TRUE) AS INTEGER)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((CAST((('56844853') IS TRUE) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT rt1.c3, vt1.c1, vt1.c0, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c3, vt1.c1, vt1.c0, rt1.c1;
SELECT rt1.c3, vt1.c1, vt1.c0, rt1.c1 FROM vt0, vt1, rt1 WHERE ((((rt1.c1 IN ())) BETWEEN (((rt1.c1)/(rt1.c1))) AND ('O('))) GROUP BY rt1.c3, vt1.c1, vt1.c0, rt1.c1 UNION SELECT rt1.c3, vt1.c1, vt1.c0, rt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT ((((rt1.c1 IN ())) BETWEEN (((rt1.c1)/(rt1.c1))) AND ('O('))))) GROUP BY rt1.c3, vt1.c1, vt1.c0, rt1.c1 UNION SELECT ALL rt1.c3, vt1.c1, vt1.c0, rt1.c1 FROM vt0, vt1, rt1 WHERE ((((((rt1.c1 IN ())) BETWEEN (((rt1.c1)/(rt1.c1))) AND ('O('))) ISNULL)) GROUP BY rt1.c3, vt1.c1, vt1.c0, rt1.c1;
SELECT rt1.c3, vt1.c1, vt1.c0, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c3, vt1.c1, vt1.c0, rt1.c1;
SELECT rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3 HAVING CAST(((rt1.c3) BETWEEN (COUNT(*)) AND (vt0.c0)) AS BLOB) UNION ALL SELECT rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3 HAVING (NOT (CAST(((rt1.c3) BETWEEN (COUNT(*)) AND (vt0.c0)) AS BLOB))) UNION ALL SELECT ALL rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3 HAVING ((CAST(((rt1.c3) BETWEEN (COUNT(*)) AND (vt0.c0)) AS BLOB)) ISNULL);
SELECT rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3 HAVING CAST(((rt1.c3) BETWEEN (COUNT(*)) AND (vt0.c0)) AS BLOB) UNION ALL SELECT rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3 HAVING (NOT (CAST(((rt1.c3) BETWEEN (COUNT(*)) AND (vt0.c0)) AS BLOB))) UNION ALL SELECT ALL rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3 HAVING ((CAST(((rt1.c3) BETWEEN (COUNT(*)) AND (vt0.c0)) AS BLOB)) ISNULL);
SELECT rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c3;
SELECT * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE (((((rt1.c1) IS FALSE)) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((vt1.c0, rt1.c2, rt1.c0)) BETWEEN ((vt1.c0, rt1.c1, vt1.c0)) AND ((vt1.c1, rt1.c2, rt1.c3)))))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (((((rt1.c1) IS FALSE)) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((vt1.c0, rt1.c2, rt1.c0)) BETWEEN ((vt1.c0, rt1.c1, vt1.c0)) AND ((vt1.c1, rt1.c2, rt1.c3)))))))) UNION ALL SELECT * FROM vt1, rt1 WHERE (((((((rt1.c1) IS FALSE)) NOT BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((vt1.c0, rt1.c2, rt1.c0)) BETWEEN ((vt1.c0, rt1.c1, vt1.c0)) AND ((vt1.c1, rt1.c2, rt1.c3)))))) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE (((vt0.c0)<>(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))))) GROUP BY vt0.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE ((NOT (((vt0.c0)<>(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))))))) GROUP BY vt0.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE (((((vt0.c0)!=(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))))) ISNULL)) GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, vt0.c0;
SELECT rt1.c2, rt1.c0, vt0.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING (((vt1.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (MIN(vt1.c1)) AND (COUNT(COUNT(TOTAL(rt1.c0))))))) AND ((GROUP_CONCAT(SUM(AVG(-613495953)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING (NOT ((((vt1.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (MIN(vt1.c1)) AND (COUNT(COUNT(TOTAL(rt1.c0))))))) AND ((GROUP_CONCAT(SUM(AVG(-613495953)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING (((((vt1.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (MIN(vt1.c1)) AND (COUNT(COUNT(TOTAL(rt1.c0))))))) AND ((GROUP_CONCAT(SUM(AVG(-613495953))))))) ISNULL);
SELECT vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM vt0, rt1;
SELECT ALL vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE ((CAST(rt1.c3 AS BLOB) IN ())) UNION ALL SELECT ALL vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE ((NOT ((CAST(rt1.c3 AS BLOB) IN ())))) UNION ALL SELECT ALL vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE ((((CAST(rt1.c3 AS BLOB) IN ())) ISNULL));
SELECT vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ (0.8175393981057387))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ (0.8175393981057387))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ (0.8175393981057387))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c1 FROM vt1 NOT INDEXED LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT CAST(NULL AS TEXT), ((rt1.c3)>>(x''))) INNER JOIN rt1 ON ((((vt1.c0) ISNULL))>=((((vt1.c1)) BETWEEN ((-2.055523838E9)) AND ((vt1.c0))))) GROUP BY vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SQLITE_COMPILEOPTION_USED(MIN(MAX(COUNT(SUM(TOTAL(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_USED(MIN(MAX(COUNT(SUM(TOTAL(MIN(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SQLITE_COMPILEOPTION_USED(MIN(MAX(COUNT(SUM(TOTAL(MIN(vt0.c0)))))))) ISNULL);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) IS TRUE))<<(((vt1.c0)GLOB(x'e8bf'))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) IS TRUE))<<(((vt1.c0)GLOB(x'e8bf')))) WHERE (((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (((vt1.c1)IS NOT(vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) IS TRUE))<<(((vt1.c0)GLOB(x'e8bf')))) WHERE ((NOT (((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (((vt1.c1)IS NOT(vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) IS TRUE))<<(((vt1.c0)GLOB(x'e8bf')))) WHERE (((((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (((vt1.c1)IS NOT(vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) IS TRUE))<<(((vt1.c0)GLOB(x'e8bf'))));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((vt0.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT vt1.c0, vt1.c1, rt1.c1, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c3;
SELECT ALL vt1.c0, vt1.c1, rt1.c1, rt1.c3 FROM vt1, rt1 WHERE ((((('395757054')OR(((vt1.c1)GLOB(vt1.c0)))))OR((rt1.c1 IN (vt1.c0))))) GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c3 UNION SELECT ALL vt1.c0, vt1.c1, rt1.c1, rt1.c3 FROM vt1 NOT INDEXED, rt1 WHERE ((NOT ((((('395757054')OR(((vt1.c1)GLOB(vt1.c0)))))OR((rt1.c1 IN (vt1.c0))))))) GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c3 UNION SELECT vt1.c0, vt1.c1, rt1.c1, rt1.c3 FROM vt1, rt1 WHERE ((((((('395757054')OR(((vt1.c1)GLOB(vt1.c0)))))OR((rt1.c1 IN (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c3;
SELECT vt1.c0, vt1.c1, rt1.c1, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((vt0.c0 IN (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((vt0.c0 IN (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((vt0.c0 IN (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((vt0.c0 IN (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1, vt1;
SELECT vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1, vt1 WHERE (rt1.c1) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2 FROM vt0 NOT INDEXED, rt1, vt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1, vt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(LTRIM(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(LTRIM(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(LTRIM(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))|((vt1.c0 IN ())))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))|((vt1.c0 IN ())))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))|((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (TYPEOF(((rt1.c1)AND(rt1.c3)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (TYPEOF(((rt1.c1)AND(rt1.c3)))))) UNION ALL SELECT * FROM rt1 WHERE (((TYPEOF(((rt1.c1)AND(rt1.c3)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON HEX(DISTINCT (((rt1.c3)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c3)))) INNER JOIN rt1 ON NULL;
SELECT vt0.c0, rt1.c2 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2 FROM vt1, rt1, vt0 WHERE ((NOT ((rt1.c2 IN ())))) GROUP BY vt0.c0, rt1.c2 UNION SELECT vt0.c0, rt1.c2 FROM vt1, rt1, vt0 WHERE ((NOT ((NOT ((rt1.c2 IN ())))))) GROUP BY vt0.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c2 FROM vt1, rt1, vt0 WHERE ((((NOT ((rt1.c2 IN ())))) ISNULL)) GROUP BY vt0.c0, rt1.c2;
SELECT vt0.c0, rt1.c2 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c2;
SELECT ALL rt1.c2, rt1.c0, vt1.c1, vt0.c0, rt1.c3, vt1.c0, rt1.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((rt1.c3))!=((rt1.c0))) COLLATE BINARY LEFT OUTER JOIN rt1 ON (+ (vt0.c0)) COLLATE NOCASE GROUP BY rt1.c2, rt1.c0, vt1.c1, vt0.c0, rt1.c3, vt1.c0, rt1.c1;
SELECT rt1.c0 FROM rt1;
SELECT ALL rt1.c0 FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c1)))OR(0X354f155b)))!=(((rt1.c3)*(rt1.c2))))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE ((NOT (((((((rt1.c3)OR(rt1.c1)))OR(0x354f155b)))<>(((rt1.c3)*(rt1.c2))))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE (((((((((rt1.c3)OR(rt1.c1)))OR(0x354f155b)))<>(((rt1.c3)*(rt1.c2))))) ISNULL));
SELECT rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('}0'))) BETWEEN ('663834247') AND (((vt1.c1)|(vt1.c1))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('}0'))) BETWEEN ('663834247') AND (((vt1.c1)|(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('}0'))) BETWEEN ('663834247') AND (((vt1.c1)|(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(250850171 AS BLOB))||(0.2142265407146805))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((CAST(250850171 AS BLOB))||(0.2142265407146805))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((CAST(250850171 AS BLOB))||(0.2142265407146805))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING (('-791671294')&(AVG(MIN(TOTAL(AVG(COUNT(*))))))) UNION ALL SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING (NOT ((('-791671294')&(AVG(MIN(TOTAL(AVG(COUNT(*))))))))) UNION ALL SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1 HAVING (((('-791671294')&(AVG(MIN(TOTAL(AVG(COUNT(*)))))))) ISNULL);
SELECT TOTAL(CASE WHEN NULLIF(DISTINCT rt1.c0, rt1.c2) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)) WHEN ((vt1.c0)-(rt1.c2)) THEN rt1.c3 COLLATE NOCASE WHEN vt1.c1 THEN NULL ELSE ((rt1.c0)>=(rt1.c0)) END) FROM vt0, rt1, vt1 ORDER BY ((rt1.c3 COLLATE RTRIM) BETWEEN (((rt1.c2)>>(vt1.c1))) AND ((('') NOT BETWEEN (rt1.c3) AND (vt1.c1)))) DESC  NULLS FIRST;
SELECT ALL vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (- ((+ (vt1.c1))));
SELECT vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (- ((+ (vt1.c1)))) WHERE (CASE ((0.6082625270798941) NOTNULL)  WHEN (((vt0.c0, x'', '-654515287'))>=((vt1.c1, vt1.c0, vt1.c1))) THEN ((vt0.c0) NOTNULL) ELSE json_remove(vt1.c1, vt1.c1) END) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (- ((+ (vt1.c1)))) WHERE ((NOT (CASE ((0.6082625270798941) NOTNULL)  WHEN (((vt0.c0, x'', '-654515287'))>=((vt1.c1, vt1.c0, vt1.c1))) THEN ((vt0.c0) NOTNULL) ELSE json_remove(vt1.c1, vt1.c1) END))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (- ((+ (vt1.c1)))) WHERE (((CASE ((0.6082625270798941) NOTNULL)  WHEN (((vt0.c0, x'', '-654515287'))>=((vt1.c1, vt1.c0, vt1.c1))) THEN ((vt0.c0) NOTNULL) ELSE json_remove(vt1.c1, vt1.c1) END) ISNULL));
SELECT ALL vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (- ((+ (vt1.c1))));
SELECT DISTINCT rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)&(vt1.c0))) NOT NULL);
SELECT DISTINCT rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)&(vt1.c0))) NOT NULL) WHERE ((((~ (vt1.c0))) IS TRUE)) UNION SELECT DISTINCT rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)&(vt1.c0))) NOT NULL) WHERE ((NOT ((((~ (vt1.c0))) IS TRUE)))) UNION SELECT DISTINCT rt1.c0, vt1.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt1 ON ((((rt1.c0)&(vt1.c0))) NOT NULL) WHERE ((((((~ (vt1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)&(vt1.c0))) NOT NULL);
SELECT ALL rt1.c0, rt1.c2, vt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CAST((('356740494')&(rt1.c1)) AS BLOB) INNER JOIN vt0 ON '1e500' GROUP BY rt1.c0, rt1.c2, vt1.c1;
SELECT ALL rt1.c0, rt1.c2, vt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CAST((('356740494')&(rt1.c1)) AS BLOB) INNER JOIN vt0 ON '1e500' WHERE ((((((((((rt1.c3 IN ()))AND(((vt0.c0)&(rt1.c2)))))OR(((((vt1.c0)AND(rt1.c1)))OR('M5Gg>9')))))OR((~ (vt1.c0)))))OR(rt1.c0))) GROUP BY rt1.c0, rt1.c2, vt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CAST((('356740494')&(rt1.c1)) AS BLOB) INNER JOIN vt0 ON '1e500' WHERE ((NOT ((((((((((rt1.c3 IN ()))AND(((vt0.c0)&(rt1.c2)))))OR(((((vt1.c0)AND(rt1.c1)))OR('M5Gg>9')))))OR((~ (vt1.c0)))))OR(rt1.c0))))) GROUP BY rt1.c0, rt1.c2, vt1.c1 UNION SELECT rt1.c0, rt1.c2, vt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CAST((('356740494')&(rt1.c1)) AS BLOB) INNER JOIN vt0 ON '1e500' WHERE ((((((((((((rt1.c3 IN ()))AND(((vt0.c0)&(rt1.c2)))))OR(((((vt1.c0)AND(rt1.c1)))OR('M5Gg>9')))))OR((~ (vt1.c0)))))OR(rt1.c0))) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c1;
SELECT ALL rt1.c0, rt1.c2, vt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CAST((('356740494')&(rt1.c1)) AS BLOB) INNER JOIN vt0 ON '1e500' GROUP BY rt1.c0, rt1.c2, vt1.c1;
SELECT ALL vt1.c1, vt0.c0, rt1.c3, rt1.c2, rt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c0 IN (vt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON (TRIM(DISTINCT vt1.c0, vt0.c0) IN (vt1.c1, rt1.c3 COLLATE NOCASE)) GROUP BY vt1.c1, vt0.c0, rt1.c3, rt1.c2, rt1.c0;
SELECT ALL vt1.c1, vt0.c0, rt1.c3, rt1.c2, rt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c0 IN (vt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON (TRIM(DISTINCT vt1.c0, vt0.c0) IN (vt1.c1, rt1.c3 COLLATE NOCASE)) GROUP BY vt1.c1, vt0.c0, rt1.c3, rt1.c2, rt1.c0 HAVING AVG(COUNT(rt1.c1)) UNION ALL SELECT vt1.c1, vt0.c0, rt1.c3, rt1.c2, rt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c0 IN (vt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON (TRIM(DISTINCT vt1.c0, vt0.c0) IN (vt1.c1, rt1.c3 COLLATE NOCASE)) GROUP BY vt1.c1, vt0.c0, rt1.c3, rt1.c2, rt1.c0 HAVING (NOT (AVG(COUNT(rt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt0.c0, rt1.c3, rt1.c2, rt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c0 IN (vt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON (TRIM(DISTINCT vt1.c0, vt0.c0) IN (vt1.c1, rt1.c3 COLLATE NOCASE)) GROUP BY vt1.c1, vt0.c0, rt1.c3, rt1.c2, rt1.c0 HAVING ((AVG(COUNT(rt1.c1))) ISNULL);
SELECT SUM(((((vt0.c0) NOT NULL)) NOT NULL)) FROM vt1, vt0, rt1 ORDER BY (((((vt1.c0, rt1.c0, vt1.c0)) BETWEEN ((vt0.c0, rt1.c0, vt1.c0)) AND ((vt1.c0, rt1.c3, vt0.c0)))) BETWEEN (((((vt0.c0)OR(rt1.c2)))AND(NULL))) AND ((((rt1.c3))!=((vt0.c0)))));
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((LIKELY(DISTINCT 0.4392704034828415))LIKE(((vt1.c1) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((LIKELY(DISTINCT 0.4392704034828415))LIKE(((vt1.c1) IS TRUE)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((LIKELY(DISTINCT 0.4392704034828415))LIKE(((vt1.c1) IS TRUE)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((((vt0.c0)IS('0.2239866313899268')), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((((0X7f1e1a18, vt0.c0, vt1.c0))>=(('', vt1.c1, vt1.c0))), (((vt1.c1))==((NULL))), CAST(vt1.c1 AS TEXT))))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((((vt0.c0)IS('0.2239866313899268')), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((((0x7f1e1a18, vt0.c0, vt1.c0))>=(('', vt1.c1, vt1.c0))), (((vt1.c1))==((NULL))), CAST(vt1.c1 AS TEXT))))))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((((((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((((vt0.c0)IS('0.2239866313899268')), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((((0x7f1e1a18, vt0.c0, vt1.c0))>=(('', vt1.c1, vt1.c0))), (((vt1.c1))=((NULL))), CAST(vt1.c1 AS TEXT))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt0, vt1;
SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM vt0, vt1, rt1 WHERE (CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT (CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)))) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM vt0, vt1, rt1 WHERE (((CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1, vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING TOTAL(((SUM(vt0.c0))||(vt0.c0))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (TOTAL(((SUM(vt0.c0))||(vt0.c0))))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((TOTAL(((SUM(vt0.c0))||(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE ((((vt1.c1)<<(rt1.c3)) IN (((rt1.c2)LIKE(rt1.c2))))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT ((((vt1.c1)<<(rt1.c3)) IN (((rt1.c2)LIKE(rt1.c2))))))) UNION ALL SELECT * FROM vt1, rt1 WHERE ((((((vt1.c1)<<(rt1.c3)) IN (((rt1.c2)LIKE(rt1.c2))))) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((vt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY CROSS JOIN vt1 ON (~ ((vt0.c0 IN ())));
SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c3, rt1.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (CAST((~ (rt1.c1)) AS BLOB)) GROUP BY rt1.c1, rt1.c3, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((NOT (CAST((~ (rt1.c1)) AS BLOB)))) GROUP BY rt1.c1, rt1.c3, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (((CAST((~ (rt1.c1)) AS BLOB)) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c3, rt1.c0, vt0.c0;
SELECT ALL vt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2;
SELECT ALL vt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2 HAVING GROUP_CONCAT((((COUNT(SUM(SUM(vt1.c0))), vt1.c1, COUNT(GROUP_CONCAT(rt1.c3)))) NOT BETWEEN ((vt1.c0, GROUP_CONCAT(rt1.c3), MAX(NULL))) AND ((TOTAL(x''), TOTAL(rt1.c1), COUNT(rt1.c2))))) UNION ALL SELECT ALL vt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2 HAVING (NOT (GROUP_CONCAT((((COUNT(SUM(SUM(vt1.c0))), vt1.c1, COUNT(GROUP_CONCAT(rt1.c3)))) NOT BETWEEN ((vt1.c0, GROUP_CONCAT(rt1.c3), MAX(NULL))) AND ((TOTAL(x''), TOTAL(rt1.c1), COUNT(rt1.c2))))))) UNION ALL SELECT ALL vt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2 HAVING ((GROUP_CONCAT((((COUNT(SUM(SUM(vt1.c0))), vt1.c1, COUNT(GROUP_CONCAT(rt1.c3)))) NOT BETWEEN ((vt1.c0, GROUP_CONCAT(rt1.c3), MAX(NULL))) AND ((TOTAL(x''), TOTAL(rt1.c1), COUNT(rt1.c2)))))) ISNULL);
SELECT * FROM vt1, rt1, vt0;
SELECT * FROM vt1, rt1, vt0 WHERE ((((+ (rt1.c1)))GLOB((rt1.c1 IN ())))) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE ((NOT ((((+ (rt1.c1)))GLOB((rt1.c1 IN ())))))) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE ((((((+ (rt1.c1)))GLOB((rt1.c1 IN ())))) ISNULL));
SELECT * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(NULL AS REAL))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.9205792179824698'))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(NULL AS REAL))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.9205792179824698'))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(NULL AS REAL))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.9205792179824698'))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (((((vt1.c1)|(vt1.c0))) NOTNULL)) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c1)|(vt1.c0))) NOTNULL)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((((((vt1.c1)|(vt1.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING AVG(CAST(MAX(vt1.c1) AS INTEGER)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (AVG(CAST(MAX(vt1.c1) AS INTEGER)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG(CAST(MAX(vt1.c1) AS INTEGER))) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (0Xffffffffd9c2567c) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (0Xffffffffd9c2567c))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((0Xffffffffd9c2567c) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1 WHERE (((((rt1.c0)OR(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1 WHERE ((NOT (((((rt1.c0)OR(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1 WHERE (((((((rt1.c0)OR(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM vt0, rt1;
SELECT ALL rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE (NULL) GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT (NULL))) GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE (((NULL) ISNULL)) GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT rt1.c0, vt1.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c0, vt1.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3, vt1.c0;
SELECT rt1.c0, vt1.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c0, vt1.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3, vt1.c0 HAVING TOTAL(MAX(rt1.c0)) UNION ALL SELECT rt1.c0, vt1.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c0, vt1.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3, vt1.c0 HAVING (NOT (TOTAL(MAX(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, vt1.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c0, vt1.c1, rt1.c2, vt0.c0, rt1.c1, rt1.c3, vt1.c0 HAVING ((TOTAL(MAX(rt1.c0))) ISNULL);
SELECT ALL * FROM vt0, rt1, vt1;
SELECT * FROM vt0, rt1, vt1 WHERE ('-2064019726') UNION ALL SELECT * FROM vt0, rt1, vt1 WHERE ((NOT ('-2064019726'))) UNION ALL SELECT * FROM vt0, rt1, vt1 WHERE ((('-2064019726') ISNULL));
SELECT ALL * FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c2 FROM vt1, rt1;
SELECT DISTINCT rt1.c2 FROM vt1, rt1 WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c2 FROM vt1, rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c2 FROM vt1, rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c2 FROM vt1, rt1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (0.5969563872894752) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (0.5969563872894752))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((0.5969563872894752) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING SUM(ABS(AVG(rt1.c2))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (SUM(ABS(AVG(rt1.c2))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((SUM(ABS(AVG(rt1.c2)))) ISNULL);
SELECT ALL * FROM vt0, rt1, vt1;
SELECT * FROM vt0, rt1, vt1 WHERE (CAST(((rt1.c1) IS TRUE) AS TEXT)) UNION ALL SELECT * FROM vt0, rt1, vt1 WHERE ((NOT (CAST(((rt1.c1) IS TRUE) AS TEXT)))) UNION ALL SELECT * FROM vt0, rt1, vt1 WHERE (((CAST(((rt1.c1) IS TRUE) AS TEXT)) ISNULL));
SELECT ALL * FROM vt0, rt1, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (vt1.c1) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()) GROUP BY rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0;
SELECT rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()) WHERE (((x'725b')<<(((rt1.c3)IS(rt1.c2))))) GROUP BY rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()) WHERE ((NOT (((x'725b')<<(((rt1.c3)IS(rt1.c2))))))) GROUP BY rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()) WHERE (((((x'725b')<<(((rt1.c3)IS(rt1.c2))))) ISNULL)) GROUP BY rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) IN ()) GROUP BY rt1.c1, vt1.c1, rt1.c3, rt1.c2, rt1.c0, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING MIN(vt1.c1) COLLATE NOCASE UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (MIN(vt1.c1) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING ((MIN(vt1.c1) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING MIN(vt1.c1) COLLATE NOCASE UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (MIN(vt1.c1) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING ((MIN(vt1.c1) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT rt1.c3, rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c3, rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((((vt1.c0)GLOB(vt1.c1))) BETWEEN (((rt1.c2) NOT NULL)) AND (CASE rt1.c2  WHEN vt1.c1 THEN vt1.c1 END))) UNION ALL SELECT ALL rt1.c3, rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE ((NOT (((((vt1.c0)GLOB(vt1.c1))) BETWEEN (((rt1.c2) NOT NULL)) AND (CASE rt1.c2  WHEN vt1.c1 THEN vt1.c1 END))))) UNION ALL SELECT ALL rt1.c3, rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((((((vt1.c0)GLOB(vt1.c1))) BETWEEN (((rt1.c2) NOT NULL)) AND (CASE rt1.c2  WHEN vt1.c1 THEN vt1.c1 END))) ISNULL));
SELECT rt1.c3, rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c3 IN ()) IN ((~ (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c3 IN ()) IN ((~ (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c3 IN ()) IN ((~ (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 WHERE (CASE WHEN ((rt1.c3)%(rt1.c2)) THEN ((rt1.c0)<<(rt1.c3)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN 0X27914e87 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 END WHEN CASE WHEN rt1.c0 THEN rt1.c1 END THEN rt1.c0 COLLATE BINARY ELSE CAST(rt1.c2 AS NUMERIC) END) GROUP BY rt1.c0, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c3)%(rt1.c2)) THEN ((rt1.c0)<<(rt1.c3)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN 0x27914e87 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 END WHEN CASE WHEN rt1.c0 THEN rt1.c1 END THEN rt1.c0 COLLATE BINARY ELSE CAST(rt1.c2 AS NUMERIC) END))) GROUP BY rt1.c0, rt1.c3 UNION SELECT rt1.c0, rt1.c3 FROM rt1 WHERE (((CASE WHEN ((rt1.c3)%(rt1.c2)) THEN ((rt1.c0)<<(rt1.c3)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN 0x27914e87 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 END WHEN CASE WHEN rt1.c0 THEN rt1.c1 END THEN rt1.c0 COLLATE BINARY ELSE CAST(rt1.c2 AS NUMERIC) END) ISNULL)) GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt0.c0 HAVING SUM((- (MAX(rt1.c2)))) UNION ALL SELECT vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((- (MAX(rt1.c2)))))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt0.c0 HAVING ((SUM((- (MAX(rt1.c2))))) ISNULL);
SELECT ALL * FROM vt0, vt1, rt1;
SELECT ALL * FROM vt0, vt1, rt1 WHERE (json_quote(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE ((NOT (json_quote(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)))) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE (((json_quote(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)) ISNULL));
SELECT ALL * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) COLLATE NOCASE WHERE (LIKELY(DISTINCT ((0Xffffffff98a19f96)GLOB(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) COLLATE NOCASE WHERE ((NOT (LIKELY(DISTINCT ((0xffffffff98a19f96)GLOB(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) COLLATE NOCASE WHERE (((LIKELY(DISTINCT ((0Xffffffff98a19f96)GLOB(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) COLLATE NOCASE;
SELECT vt1.c0, rt1.c3, vt0.c0 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c3, vt0.c0;
SELECT vt1.c0, rt1.c3, vt0.c0 FROM rt1, vt0, vt1 WHERE ((- (rt1.c1))) GROUP BY vt1.c0, rt1.c3, vt0.c0 UNION SELECT ALL vt1.c0, rt1.c3, vt0.c0 FROM rt1, vt0, vt1 WHERE ((NOT ((- (rt1.c1))))) GROUP BY vt1.c0, rt1.c3, vt0.c0 UNION SELECT ALL vt1.c0, rt1.c3, vt0.c0 FROM rt1, vt0, vt1 WHERE ((((- (rt1.c1))) ISNULL)) GROUP BY vt1.c0, rt1.c3, vt0.c0;
SELECT vt1.c0, rt1.c3, vt0.c0 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c3, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN '-879735247' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN '-879735247' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN '-879735247' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (CAST(((rt1.c2)GLOB(rt1.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (CAST(((rt1.c2)GLOB(rt1.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((CAST(((rt1.c2)GLOB(rt1.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1;
SELECT ALL rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1, vt0 WHERE (ABS((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c3))))) GROUP BY rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1 UNION SELECT rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1, vt0 WHERE ((NOT (ABS((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c3))))))) GROUP BY rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1 UNION SELECT ALL rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1, vt0 WHERE (((ABS((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c3))))) ISNULL)) GROUP BY rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1;
SELECT rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c3, vt0.c0, vt1.c0, vt1.c1, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 HAVING COUNT((AVG(rt1.c0) IN ())) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 HAVING (NOT (COUNT((AVG(rt1.c0) IN ())))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 HAVING ((COUNT((AVG(rt1.c0) IN ()))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 HAVING COUNT((AVG(rt1.c0) IN ())) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 HAVING (NOT (COUNT((AVG(rt1.c0) IN ())))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 HAVING ((COUNT((AVG(rt1.c0) IN ()))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL * FROM rt1, vt0, vt1;
SELECT * FROM rt1, vt0, vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (CASE vt1.c1  WHEN rt1.c2 THEN vt1.c0 END) AND (((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1))))) UNION ALL SELECT * FROM rt1, vt0, vt1 WHERE ((NOT (((vt1.c1 COLLATE RTRIM) BETWEEN (CASE vt1.c1  WHEN rt1.c2 THEN vt1.c0 END) AND (((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1))))))) UNION ALL SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((vt1.c1 COLLATE RTRIM) BETWEEN (CASE vt1.c1  WHEN rt1.c2 THEN vt1.c0 END) AND (((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT ALL rt1.c3, rt1.c1 FROM rt1 WHERE ((((((rt1.c2)OR(rt1.c1)))AND(rt1.c3)) IN ((NOT ('1752612805')), TRIM(rt1.c0, rt1.c1)))) GROUP BY rt1.c3, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c2)OR(rt1.c1)))AND(rt1.c3)) IN ((NOT ('1752612805')), TRIM(rt1.c0, rt1.c1)))))) GROUP BY rt1.c3, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c1 FROM rt1 WHERE ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c3)) IN ((NOT ('1752612805')), TRIM(rt1.c0, rt1.c1)))) ISNULL)) GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING json_valid(LAST_INSERT_ROWID()) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (json_valid(LAST_INSERT_ROWID()))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((json_valid(LAST_INSERT_ROWID())) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING json_valid(LAST_INSERT_ROWID()) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (json_valid(LAST_INSERT_ROWID()))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((json_valid(LAST_INSERT_ROWID())) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (RTRIM(((vt1.c1)>=(vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (RTRIM(((vt1.c1)>=(vt1.c1)))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((RTRIM(((vt1.c1)>=(vt1.c1)))) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((((rt1.c2 IN ()))IS NOT(((1.257508099E9)||(rt1.c3))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c2 IN ()))IS NOT(((1.257508099E9)||(rt1.c3))))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((((((rt1.c2 IN ()))IS NOT(((1.257508099E9)||(rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)>=(vt0.c0)))))OR((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)>=(vt0.c0)))))OR((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)>=(vt0.c0)))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt1.c3, vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON ((0.1987545807816835) NOTNULL) RIGHT OUTER JOIN vt0 ON ((((rt1.c1)%(rt1.c2)))-(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)))) GROUP BY vt0.c0, rt1.c3, vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c3, vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON ((0.1987545807816835) NOTNULL) RIGHT OUTER JOIN vt0 ON ((((rt1.c1)%(rt1.c2)))-(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)))) GROUP BY vt0.c0, rt1.c3, vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c0 HAVING CASE WHEN AVG(TOTAL(TOTAL(rt1.c1))) THEN ((rt1.c0)>(SUM(AVG('61242868')))) WHEN '499996432' THEN COUNT(SUM(rt1.c2)) WHEN rt1.c0 THEN SUM(vt0.c0) WHEN COUNT(*) THEN SUM(vt1.c0) WHEN rt1.c0 COLLATE BINARY THEN MAX(MIN(COUNT(MAX(GROUP_CONCAT(COUNT(*)))))) END UNION ALL SELECT vt0.c0, rt1.c3, vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON ((0.1987545807816835) NOTNULL) RIGHT OUTER JOIN vt0 ON ((((rt1.c1)%(rt1.c2)))-(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)))) GROUP BY vt0.c0, rt1.c3, vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (CASE WHEN AVG(TOTAL(TOTAL(rt1.c1))) THEN ((rt1.c0)>(SUM(AVG('61242868')))) WHEN '499996432' THEN COUNT(SUM(rt1.c2)) WHEN rt1.c0 THEN SUM(vt0.c0) WHEN COUNT(*) THEN SUM(vt1.c0) WHEN rt1.c0 COLLATE BINARY THEN MAX(MIN(COUNT(MAX(GROUP_CONCAT(COUNT(*)))))) END)) UNION ALL SELECT ALL vt0.c0, rt1.c3, vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON ((0.1987545807816835) NOTNULL) RIGHT OUTER JOIN vt0 ON ((((rt1.c1)%(rt1.c2)))-(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)))) GROUP BY vt0.c0, rt1.c3, vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c0 HAVING ((CASE WHEN AVG(TOTAL(TOTAL(rt1.c1))) THEN ((rt1.c0)>(SUM(AVG('61242868')))) WHEN '499996432' THEN COUNT(SUM(rt1.c2)) WHEN rt1.c0 THEN SUM(vt0.c0) WHEN COUNT(*) THEN SUM(vt1.c0) WHEN rt1.c0 COLLATE BINARY THEN MAX(MIN(COUNT(MAX(GROUP_CONCAT(COUNT(*)))))) END) ISNULL);
SELECT ALL rt1.c0, vt1.c0, vt0.c0, vt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON 0.3506648152103159 INNER JOIN vt0 ON ((((vt0.c0)AND(vt1.c0))) IS FALSE);
SELECT ALL rt1.c0, vt1.c0, vt0.c0, vt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON 0.3506648152103159 INNER JOIN vt0 ON ((((vt0.c0)AND(vt1.c0))) IS FALSE) WHERE ((((rt1.c0)OR(rt1.c2)) IN ())) UNION ALL SELECT ALL rt1.c0, vt1.c0, vt0.c0, vt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON 0.3506648152103159 INNER JOIN vt0 ON ((((vt0.c0)AND(vt1.c0))) IS FALSE) WHERE ((NOT ((((rt1.c0)OR(rt1.c2)) IN ())))) UNION ALL SELECT rt1.c0, vt1.c0, vt0.c0, vt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON 0.3506648152103159 INNER JOIN vt0 ON ((((vt0.c0)AND(vt1.c0))) IS FALSE) WHERE ((((((rt1.c0)OR(rt1.c2)) IN ())) ISNULL));
SELECT ALL rt1.c0, vt1.c0, vt0.c0, vt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON 0.3506648152103159 INNER JOIN vt0 ON ((((vt0.c0)AND(vt1.c0))) IS FALSE);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (COALESCE((vt0.c0 IN ()), ((vt0.c0)IS NOT(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (COALESCE((vt0.c0 IN ()), ((vt0.c0)IS NOT(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((COALESCE((vt0.c0 IN ()), ((vt0.c0)IS NOT(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c3, rt1.c0, rt1.c1 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON ((x'' IN ()) IN (((vt1.c0) ISNULL))) GROUP BY rt1.c3, rt1.c0, rt1.c1;
SELECT rt1.c3, rt1.c0, rt1.c1 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON ((x'' IN ()) IN (((vt1.c0) ISNULL))) WHERE ((((-1197145734)) NOT BETWEEN (((NOT (NULL)))) AND ((((vt1.c1) NOT BETWEEN (rt1.c3) AND (vt1.c0)))))) GROUP BY rt1.c3, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c1 FROM vt0, vt1 NOT INDEXED RIGHT OUTER JOIN rt1 ON ((x'' IN ()) IN (((vt1.c0) ISNULL))) WHERE ((NOT ((((-1197145734)) NOT BETWEEN (((NOT (NULL)))) AND ((((vt1.c1) NOT BETWEEN (rt1.c3) AND (vt1.c0)))))))) GROUP BY rt1.c3, rt1.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c0, rt1.c1 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON ((x'' IN ()) IN (((vt1.c0) ISNULL))) WHERE ((((((-1197145734)) NOT BETWEEN (((NOT (NULL)))) AND ((((vt1.c1) NOT BETWEEN (rt1.c3) AND (vt1.c0)))))) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c1;
SELECT rt1.c3, rt1.c0, rt1.c1 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON ((x'' IN ()) IN (((vt1.c0) ISNULL))) GROUP BY rt1.c3, rt1.c0, rt1.c1;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING -1678577076 UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (-1678577076)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((-1678577076) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING -1678577076 UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (-1678577076)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((-1678577076) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c0, rt1.c1 FROM rt1, vt1;
SELECT ALL vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE (((((('-5r	I2*Rd') IS FALSE), ((((rt1.c2)OR(rt1.c1)))AND(vt1.c1)), ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(vt1.c0)), ((rt1.c0) NOTNULL), ((rt1.c0)=(rt1.c3))))<=((((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c0)), vt1.c0 COLLATE BINARY, ((rt1.c1) IS TRUE), '0.8445447447240346', rt1.c0 COLLATE NOCASE)))) UNION ALL SELECT vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((NOT (((((('-5r	I2*Rd') IS FALSE), ((((rt1.c2)OR(rt1.c1)))AND(vt1.c1)), ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(vt1.c0)), ((rt1.c0) NOTNULL), ((rt1.c0)=(rt1.c3))))<=((((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c0)), vt1.c0 COLLATE BINARY, ((rt1.c1) IS TRUE), '0.8445447447240346', rt1.c0 COLLATE NOCASE)))))) UNION ALL SELECT ALL vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE (((((((('-5r	I2*Rd') IS FALSE), ((((rt1.c2)OR(rt1.c1)))AND(vt1.c1)), ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(vt1.c0)), ((rt1.c0) NOTNULL), ((rt1.c0)=(rt1.c3))))<=((((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c0)), vt1.c0 COLLATE BINARY, ((rt1.c1) IS TRUE), '0.8445447447240346', rt1.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL vt1.c1, rt1.c2, rt1.c3, vt1.c0, rt1.c0, rt1.c1 FROM rt1, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END) BETWEEN ((+ (rt1.c2))) AND (rt1.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END) BETWEEN ((+ (rt1.c2))) AND (rt1.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END) BETWEEN ((+ (rt1.c2))) AND (rt1.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0 COLLATE BINARY))<=((vt0.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0 COLLATE BINARY))<=((vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0 COLLATE BINARY))<=((vt0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE MIN(vt0.c0)  WHEN TOTAL(vt0.c0) THEN MAX(MAX(GROUP_CONCAT(vt0.c0))) WHEN MAX(vt0.c0) THEN vt0.c0 COLLATE RTRIM WHEN ((x'')!=(vt0.c0)) THEN json_type(COUNT(*)) ELSE ((vt0.c0)IS(vt0.c0)) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE MIN(vt0.c0)  WHEN TOTAL(vt0.c0) THEN MAX(MAX(GROUP_CONCAT(vt0.c0))) WHEN MAX(vt0.c0) THEN vt0.c0 COLLATE RTRIM WHEN ((x'')<>(vt0.c0)) THEN json_type(COUNT(*)) ELSE ((vt0.c0)IS(vt0.c0)) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE MIN(vt0.c0)  WHEN TOTAL(vt0.c0) THEN MAX(MAX(GROUP_CONCAT(vt0.c0))) WHEN MAX(vt0.c0) THEN vt0.c0 COLLATE RTRIM WHEN ((x'')<>(vt0.c0)) THEN json_type(COUNT(*)) ELSE ((vt0.c0)IS(vt0.c0)) END) ISNULL);
SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt1 ON CAST(ABS(rt1.c2) AS NUMERIC) LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE);
SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt1 ON CAST(ABS(rt1.c2) AS NUMERIC) LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE) WHERE ((((rt1.c0 IN (rt1.c1)))==(((rt1.c1)<=(vt1.c1))))) UNION ALL SELECT rt1.c2, rt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt1 ON CAST(ABS(rt1.c2) AS NUMERIC) LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE) WHERE ((NOT ((((rt1.c0 IN (rt1.c1)))=(((rt1.c1)<=(vt1.c1))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt1 ON CAST(ABS(rt1.c2) AS NUMERIC) LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE) WHERE ((((((rt1.c0 IN (rt1.c1)))==(((rt1.c1)<=(vt1.c1))))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt1 ON CAST(ABS(rt1.c2) AS NUMERIC) LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE);
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, vt0.c0, rt1.c2, vt1.c1, rt1.c3 FROM vt0 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))AND(vt1.c1)))OR(vt1.c0))) NOT NULL) INNER JOIN vt1 ON 0Xffffffffd87a981c;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((((((((((((((0X4956f9f4)AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END)))OR(CAST(rt1.c1 AS REAL))))AND(((rt1.c3)%(rt1.c2)))))AND(((rt1.c2)IS(rt1.c1)))))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)))OR((+ (rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))))OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE NULL END))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((((((((((((((0x4956f9f4)AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END)))OR(CAST(rt1.c1 AS REAL))))AND(((rt1.c3)%(rt1.c2)))))AND(((rt1.c2)IS(rt1.c1)))))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)))OR((+ (rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))))OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE NULL END))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((((((((((((((((0x4956f9f4)AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END)))OR(CAST(rt1.c1 AS REAL))))AND(((rt1.c3)%(rt1.c2)))))AND(((rt1.c2)IS(rt1.c1)))))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)))OR((+ (rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))))OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE NULL END))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (~ (vt1.c0)) COLLATE BINARY UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((~ (vt1.c0)) COLLATE BINARY)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((~ (vt1.c0)) COLLATE BINARY) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (~ (vt1.c0)) COLLATE BINARY UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((~ (vt1.c0)) COLLATE BINARY)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((~ (vt1.c0)) COLLATE BINARY) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((vt1.c1) NOTNULL))GLOB(rt1.c3)) RIGHT OUTER JOIN vt1 ON rt1.c0;
SELECT DISTINCT rt1.c3, rt1.c0, vt1.c0, vt0.c0 FROM rt1, vt0 CROSS JOIN vt1 ON rt1.c0;
SELECT DISTINCT rt1.c3, rt1.c0, vt1.c0, vt0.c0 FROM rt1, vt0 CROSS JOIN vt1 ON rt1.c0 WHERE (((+ (rt1.c1)) IN (CAST(rt1.c0 AS NUMERIC), ((rt1.c0)/(vt1.c0))))) UNION SELECT DISTINCT rt1.c3, rt1.c0, vt1.c0, vt0.c0 FROM rt1, vt0 CROSS JOIN vt1 ON rt1.c0 WHERE ((NOT (((+ (rt1.c1)) IN (CAST(rt1.c0 AS NUMERIC), ((rt1.c0)/(vt1.c0))))))) UNION SELECT DISTINCT rt1.c3, rt1.c0, vt1.c0, vt0.c0 FROM rt1, vt0 CROSS JOIN vt1 ON rt1.c0 WHERE (((((+ (rt1.c1)) IN (CAST(rt1.c0 AS NUMERIC), ((rt1.c0)/(vt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, vt1.c0, vt0.c0 FROM rt1, vt0 CROSS JOIN vt1 ON rt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c0 THEN 0Xffffffffe7a0a0cc END)OR(((vt1.c1)=(vt1.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c0 THEN 0Xffffffffe7a0a0cc END)OR(((vt1.c1)==(vt1.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) WHERE (((CASE WHEN vt0.c0 THEN NULL WHEN vt1.c1 THEN x'' WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END) ISNULL)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c0 THEN 0Xffffffffe7a0a0cc END)OR(((vt1.c1)==(vt1.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) WHERE ((NOT (((CASE WHEN vt0.c0 THEN NULL WHEN vt1.c1 THEN x'' WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END) ISNULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c0 THEN 0xffffffffe7a0a0cc END)OR(((vt1.c1)==(vt1.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) WHERE (((((CASE WHEN vt0.c0 THEN NULL WHEN vt1.c1 THEN x'' WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END) ISNULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c0 THEN 0Xffffffffe7a0a0cc END)OR(((vt1.c1)=(vt1.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MIN(((((vt1.c0)AND(SUM(SUM(vt1.c1)))))AND(TOTAL(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MIN(((((vt1.c0)AND(SUM(SUM(vt1.c1)))))AND(TOTAL(COUNT(*))))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MIN(((((vt1.c0)AND(SUM(SUM(vt1.c1)))))AND(TOTAL(COUNT(*)))))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((((((((((NULL) NOTNULL))AND(((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0) NOTNULL))))OR(CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((((((NULL) NOTNULL))AND(((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0) NOTNULL))))OR(CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((((((((((((NULL) NOTNULL))AND(((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0) NOTNULL))))OR(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0;
SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0 WHERE ((+ ((+ (vt1.c0))))) UNION SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0 WHERE ((NOT ((+ ((+ (vt1.c0))))))) UNION SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0 WHERE ((((+ ((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0;
SELECT ALL vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3 FROM rt1, vt1 CROSS JOIN vt0 ON (NOT ((vt1.c1 IN ()))) GROUP BY vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3;
SELECT ALL vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3 FROM rt1, vt1 CROSS JOIN vt0 ON (NOT ((vt1.c1 IN ()))) WHERE (json_valid((rt1.c0 IN ()))) GROUP BY vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3 UNION SELECT ALL vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3 FROM rt1, vt1 CROSS JOIN vt0 ON (NOT ((vt1.c1 IN ()))) WHERE ((NOT (json_valid((rt1.c0 IN ()))))) GROUP BY vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3 UNION SELECT vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3 FROM rt1, vt1 CROSS JOIN vt0 ON (NOT ((vt1.c1 IN ()))) WHERE (((json_valid((rt1.c0 IN ()))) ISNULL)) GROUP BY vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3;
SELECT ALL vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3 FROM rt1, vt1 CROSS JOIN vt0 ON (NOT ((vt1.c1 IN ()))) GROUP BY vt1.c0, rt1.c1, vt1.c1, vt0.c0, rt1.c0, rt1.c3;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING TYPEOF(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (TYPEOF(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((TYPEOF(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING TYPEOF(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (TYPEOF(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((TYPEOF(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE (CHAR(vt1.c0 COLLATE NOCASE)) UNION ALL SELECT * FROM vt1, rt1 WHERE ((NOT (CHAR(vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((CHAR(vt1.c0 COLLATE NOCASE)) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT vt0.c0, rt1.c0, vt1.c0 FROM vt1, rt1 FULL OUTER JOIN vt0 ON ((((rt1.c3, vt1.c0, vt1.c1))>((rt1.c0, rt1.c1, rt1.c2))) IN ());
SELECT DISTINCT vt0.c0, rt1.c0, vt1.c0 FROM vt1, rt1 FULL OUTER JOIN vt0 ON ((((rt1.c3, vt1.c0, vt1.c1))>((rt1.c0, rt1.c1, rt1.c2))) IN ()) WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, rt1.c0, vt1.c0 FROM vt1, rt1 FULL OUTER JOIN vt0 ON ((((rt1.c3, vt1.c0, vt1.c1))>((rt1.c0, rt1.c1, rt1.c2))) IN ()) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, rt1.c0, vt1.c0 FROM vt1, rt1 FULL OUTER JOIN vt0 ON ((((rt1.c3, vt1.c0, vt1.c1))>((rt1.c0, rt1.c1, rt1.c2))) IN ()) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c0, vt1.c0 FROM vt1, rt1 FULL OUTER JOIN vt0 ON ((((rt1.c3, vt1.c0, vt1.c1))>((rt1.c0, rt1.c1, rt1.c2))) IN ());
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 WHERE (COALESCE(((rt1.c0)<=(rt1.c3)), ((rt1.c0) IS FALSE), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((((0.09695163484217417)AND(rt1.c1)))AND(rt1.c1)))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1 WHERE ((NOT (COALESCE(((rt1.c0)<=(rt1.c3)), ((rt1.c0) IS FALSE), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((((0.09695163484217417)AND(rt1.c1)))AND(rt1.c1)))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1 WHERE (((COALESCE(((rt1.c0)<=(rt1.c3)), ((rt1.c0) IS FALSE), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((((0.09695163484217417)AND(rt1.c1)))AND(rt1.c1)))) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c2, vt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt1;
SELECT rt1.c2, vt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt1 WHERE (TRIM((((vt1.c1, rt1.c3, '3~9/H', rt1.c2, rt1.c2))=((rt1.c2, rt1.c2, vt0.c0, vt1.c1, vt0.c0))), (- (rt1.c1)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt1 WHERE ((NOT (TRIM((((vt1.c1, rt1.c3, '3~9/H', rt1.c2, rt1.c2))=((rt1.c2, rt1.c2, vt0.c0, vt1.c1, vt0.c0))), (- (rt1.c1)))))) UNION ALL SELECT rt1.c2, vt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((TRIM((((vt1.c1, rt1.c3, '3~9/H', rt1.c2, rt1.c2))=((rt1.c2, rt1.c2, vt0.c0, vt1.c1, vt0.c0))), (- (rt1.c1)))) ISNULL));
SELECT ALL rt1.c2, vt0.c0, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (CAST(((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR('')) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (CAST(((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR('')) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((CAST(((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR('')) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1;
SELECT ALL rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt1, vt0 WHERE (TOTAL_CHANGES()) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1 UNION SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt1, vt0 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt1, vt0 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1;
SELECT ALL rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0, vt1.c1;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING TOTAL((vt0.c0 IN ())) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (TOTAL((vt0.c0 IN ())))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((TOTAL((vt0.c0 IN ()))) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING TOTAL((vt0.c0 IN ())) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (TOTAL((vt0.c0 IN ())))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((TOTAL((vt0.c0 IN ()))) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((((rt1.c1) ISNULL), ((rt1.c0)==(rt1.c3)), rt1.c3 COLLATE NOCASE))<((rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS REAL), CAST(rt1.c0 AS REAL))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((rt1.c1) ISNULL), ((rt1.c0)==(rt1.c3)), rt1.c3 COLLATE NOCASE))<((rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS REAL), CAST(rt1.c0 AS REAL))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1) ISNULL), ((rt1.c0)==(rt1.c3)), rt1.c3 COLLATE NOCASE))<((rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS REAL), CAST(rt1.c0 AS REAL))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0)) BETWEEN ((GLOB(vt1.c1, rt1.c3))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (vt0.c0)), ((rt1.c3)LIKE(vt0.c0)));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0)) BETWEEN ((GLOB(vt1.c1, rt1.c3))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (vt0.c0)), ((rt1.c3)LIKE(vt0.c0))) WHERE ((+ (vt1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0)) BETWEEN ((GLOB(vt1.c1, rt1.c3))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (vt0.c0)), ((rt1.c3)LIKE(vt0.c0))) WHERE ((NOT ((+ (vt1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0)) BETWEEN ((GLOB(vt1.c1, rt1.c3))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (vt0.c0)), ((rt1.c3)LIKE(vt0.c0))) WHERE ((((+ (vt1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0)) BETWEEN ((GLOB(vt1.c1, rt1.c3))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (vt0.c0)), ((rt1.c3)LIKE(vt0.c0)));
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC))OR((1.746845512E9 IN ()))))AND(HEX(DISTINCT vt1.c1)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((CAST(vt1.c1 AS NUMERIC))OR((1.746845512E9 IN ()))))AND(HEX(DISTINCT vt1.c1)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((CAST(vt1.c1 AS NUMERIC))OR((1.746845512E9 IN ()))))AND(HEX(DISTINCT vt1.c1)))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((COUNT(*)) BETWEEN ((((SUM(GROUP_CONCAT('-1286220306'))))<=((rt1.c0)))) AND (MAX(rt1.c3))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((COUNT(*)) BETWEEN ((((SUM(GROUP_CONCAT('-1286220306'))))<=((rt1.c0)))) AND (MAX(rt1.c3))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((((COUNT(*)) BETWEEN ((((SUM(GROUP_CONCAT('-1286220306'))))<=((rt1.c0)))) AND (MAX(rt1.c3)))) ISNULL);
SELECT ALL SUM(CASE ((((rt1.c3)AND(vt1.c0)))OR(rt1.c0))  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((((rt1.c3)OR(vt1.c1)))AND(rt1.c1)) ELSE ((vt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)) END) FROM vt0, vt1, rt1 ORDER BY (+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))));
SELECT rt1.c1, rt1.c3, vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c1 END) AND (CASE WHEN '쐓#' THEN vt1.c1 ELSE vt1.c0 END)) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c1) NOT NULL))OR(((rt1.c1)<=(rt1.c0)))))OR(-3.27786161E8)))OR(((1.983366163E9)OR(vt1.c1)))))AND(-5.50293392E8));
SELECT rt1.c1, rt1.c3, vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c1 END) AND (CASE WHEN '쐓#' THEN vt1.c1 ELSE vt1.c0 END)) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c1) NOT NULL))OR(((rt1.c1)<=(rt1.c0)))))OR(-3.27786161E8)))OR(((1.983366163E9)OR(vt1.c1)))))AND(-5.50293392E8)) WHERE (rt1.c3) UNION ALL SELECT rt1.c1, rt1.c3, vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c1 END) AND (CASE WHEN '쐓#' THEN vt1.c1 ELSE vt1.c0 END)) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c1) NOT NULL))OR(((rt1.c1)<=(rt1.c0)))))OR(-3.27786161E8)))OR(((1.983366163E9)OR(vt1.c1)))))AND(-5.50293392E8)) WHERE ((NOT (rt1.c3))) UNION ALL SELECT rt1.c1, rt1.c3, vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c1 END) AND (CASE WHEN '쐓#' THEN vt1.c1 ELSE vt1.c0 END)) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c1) NOT NULL))OR(((rt1.c1)<=(rt1.c0)))))OR(-3.27786161E8)))OR(((1.983366163E9)OR(vt1.c1)))))AND(-5.50293392E8)) WHERE (((rt1.c3) ISNULL));
SELECT rt1.c1, rt1.c3, vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c1 END) AND (CASE WHEN '쐓#' THEN vt1.c1 ELSE vt1.c0 END)) LEFT OUTER JOIN vt1 ON ((((((((((rt1.c1) NOT NULL))OR(((rt1.c1)<=(rt1.c0)))))OR(-3.27786161E8)))OR(((1.983366163E9)OR(vt1.c1)))))AND(-5.50293392E8));
SELECT DISTINCT rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c1 FROM vt0, rt1 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1 FROM vt0, rt1 WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1 FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1 FROM vt0, rt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0) IS TRUE) IN (((vt1.c1) BETWEEN (vt0.c0) AND ('1043238560')), LIKELY(DISTINCT vt1.c1)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0) IS TRUE) IN (((vt1.c1) BETWEEN (vt0.c0) AND ('1043238560')), LIKELY(DISTINCT vt1.c1)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0) IS TRUE) IN (((vt1.c1) BETWEEN (vt0.c0) AND ('1043238560')), LIKELY(DISTINCT vt1.c1)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2 FROM vt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c3, rt1.c1, vt1.c0, rt1.c0, vt0.c0, vt1.c1 FROM vt0 NOT INDEXED, rt1, vt1;
SELECT rt1.c3, rt1.c1, vt1.c0, rt1.c0, vt0.c0, vt1.c1 FROM vt0, rt1, vt1 WHERE ((~ (IFNULL(rt1.c3, NULL)))) UNION ALL SELECT ALL rt1.c3, rt1.c1, vt1.c0, rt1.c0, vt0.c0, vt1.c1 FROM vt0, rt1, vt1 WHERE ((NOT ((~ (IFNULL(rt1.c3, NULL)))))) UNION ALL SELECT ALL rt1.c3, rt1.c1, vt1.c0, rt1.c0, vt0.c0, vt1.c1 FROM vt0, rt1, vt1 WHERE ((((~ (IFNULL(rt1.c3, NULL)))) ISNULL));
SELECT rt1.c3, rt1.c1, vt1.c0, rt1.c0, vt0.c0, vt1.c1 FROM vt0 NOT INDEXED, rt1, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((((((rt1.c1))>=((vt1.c1))))+(rt1.c0 COLLATE RTRIM))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT ((((((rt1.c1))>=((vt1.c1))))+(rt1.c0 COLLATE RTRIM))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((((((((rt1.c1))>=((vt1.c1))))+(rt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING GROUP_CONCAT(((((((((GROUP_CONCAT(NULL))AND(rt1.c2)))OR(COUNT(*))))AND(rt1.c1)))OR(rt1.c3))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (GROUP_CONCAT(((((((((GROUP_CONCAT(NULL))AND(rt1.c2)))OR(COUNT(*))))AND(rt1.c1)))OR(rt1.c3))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((GROUP_CONCAT(((((((((GROUP_CONCAT(NULL))AND(rt1.c2)))OR(COUNT(*))))AND(rt1.c1)))OR(rt1.c3)))) ISNULL);
SELECT ALL * FROM vt0 NATURAL JOIN vt1;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((('1304765159')<>(((vt1.c0)/(vt1.c1))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((('1304765159')<>(((vt1.c0)/(vt1.c1))))))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((((('1304765159')<>(((vt1.c0)/(vt1.c1))))) ISNULL));
SELECT ALL * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON (- ((((rt1.c0, vt1.c0, rt1.c1, vt1.c1, rt1.c3)) NOT BETWEEN (('dzk917dF*', vt1.c1, NULL, vt1.c0, vt1.c0)) AND ((vt1.c1, rt1.c1, vt1.c1, rt1.c0, rt1.c3)))));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON (- ((((rt1.c0, vt1.c0, rt1.c1, vt1.c1, rt1.c3)) NOT BETWEEN (('dzk917dF*', vt1.c1, NULL, vt1.c0, vt1.c0)) AND ((vt1.c1, rt1.c1, vt1.c1, rt1.c0, rt1.c3))))) WHERE (NULL) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON (- ((((rt1.c0, vt1.c0, rt1.c1, vt1.c1, rt1.c3)) NOT BETWEEN (('dzk917dF*', vt1.c1, NULL, vt1.c0, vt1.c0)) AND ((vt1.c1, rt1.c1, vt1.c1, rt1.c0, rt1.c3))))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON (- ((((rt1.c0, vt1.c0, rt1.c1, vt1.c1, rt1.c3)) NOT BETWEEN (('dzk917dF*', vt1.c1, NULL, vt1.c0, vt1.c0)) AND ((vt1.c1, rt1.c1, vt1.c1, rt1.c0, rt1.c3))))) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON (- ((((rt1.c0, vt1.c0, rt1.c1, vt1.c1, rt1.c3)) NOT BETWEEN (('dzk917dF*', vt1.c1, NULL, vt1.c0, vt1.c0)) AND ((vt1.c1, rt1.c1, vt1.c1, rt1.c0, rt1.c3)))));
SELECT ALL vt1.c1 FROM vt0, rt1, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, rt1, vt1 WHERE (((((vt0.c0)AND(CAST(vt1.c1 AS REAL))))AND(vt0.c0))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, rt1, vt1 WHERE ((NOT (((((vt0.c0)AND(CAST(vt1.c1 AS REAL))))AND(vt0.c0))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, rt1, vt1 WHERE (((((((vt0.c0)AND(CAST(vt1.c1 AS REAL))))AND(vt0.c0))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, rt1, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)LIKE(vt1.c0)))*(CASE WHEN vt0.c0 THEN 6.76546951E8 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)LIKE(vt1.c0)))*(CASE WHEN vt0.c0 THEN 6.76546951E8 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(((vt0.c0)<(MIN(SUM(SUM(MIN(vt1.c1))))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)LIKE(vt1.c0)))*(CASE WHEN vt0.c0 THEN 6.76546951E8 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0)<(MIN(SUM(SUM(MIN(vt1.c1))))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)LIKE(vt1.c0)))*(CASE WHEN vt0.c0 THEN 6.76546951E8 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0)<(MIN(SUM(SUM(MIN(vt1.c1)))))))) ISNULL);
SELECT rt1.c3, rt1.c0 FROM rt1;
SELECT rt1.c3, rt1.c0 FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)/(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c2 COLLATE RTRIM)/(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))))) UNION ALL SELECT rt1.c3, rt1.c0 FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM)/(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ISNULL));
SELECT rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c3 FROM vt0, rt1;
SELECT DISTINCT rt1.c3 FROM vt0, rt1 WHERE (json_valid(x'771dadc5' COLLATE BINARY)) UNION SELECT DISTINCT rt1.c3 FROM vt0, rt1 WHERE ((NOT (json_valid(x'771dadc5' COLLATE BINARY)))) UNION SELECT DISTINCT rt1.c3 FROM vt0, rt1 WHERE (((json_valid(x'771dadc5' COLLATE BINARY)) ISNULL));
SELECT DISTINCT rt1.c3 FROM vt0, rt1;
SELECT ALL rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, vt1, rt1 WHERE (((((rt1.c1)/(vt1.c1))) IS TRUE)) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT (((((rt1.c1)/(vt1.c1))) IS TRUE)))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM vt0, vt1, rt1 WHERE (((((((rt1.c1)/(vt1.c1))) IS TRUE)) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c1;
SELECT rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c1 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((LTRIM(vt1.c0, 0.5190827366882599)) IS FALSE)) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((LTRIM(vt1.c0, 0.5190827366882599)) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((LTRIM(vt1.c0, 0.5190827366882599)) IS FALSE)) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt1.c1, rt1.c2 FROM rt1, vt1;
SELECT DISTINCT vt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((((vt1.c1)) BETWEEN ((((rt1.c3)||(rt1.c0)))) AND ((0.7731484522399349)))) UNION SELECT DISTINCT vt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((NOT ((((vt1.c1)) BETWEEN ((((rt1.c3)||(rt1.c0)))) AND ((0.7731484522399349)))))) UNION SELECT DISTINCT vt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((((((vt1.c1)) BETWEEN ((((rt1.c3)||(rt1.c0)))) AND ((0.7731484522399349)))) ISNULL));
SELECT DISTINCT vt1.c1, rt1.c2 FROM rt1, vt1;
SELECT rt1.c3, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c2;
SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE ('H''O?yE]*') GROUP BY rt1.c3, rt1.c1, rt1.c2 UNION SELECT rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ('H''O?yE]*'))) GROUP BY rt1.c3, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE ((('H''O?yE]*') ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c2;
SELECT rt1.c3, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c2;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING CAST((((vt1.c0))==((vt0.c0))) AS BLOB) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (CAST((((vt1.c0))==((vt0.c0))) AS BLOB))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING ((CAST((((vt1.c0))=((vt0.c0))) AS BLOB)) ISNULL);
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING CAST((((vt1.c0))==((vt0.c0))) AS BLOB) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (CAST((((vt1.c0))==((vt0.c0))) AS BLOB))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1 HAVING ((CAST((((vt1.c0))=((vt0.c0))) AS BLOB)) ISNULL);
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((vt1.c0) NOT NULL) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((vt1.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (((((((((CAST(rt1.c2 AS REAL))AND((~ (rt1.c2)))))AND((+ (rt1.c0)))))OR((~ (rt1.c1)))))AND(((rt1.c0)<<('&YR,jUp'))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT (((((((((CAST(rt1.c2 AS REAL))AND((~ (rt1.c2)))))AND((+ (rt1.c0)))))OR((~ (rt1.c1)))))AND(((rt1.c0)<<('&YR,jUp'))))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (((((((((((CAST(rt1.c2 AS REAL))AND((~ (rt1.c2)))))AND((+ (rt1.c0)))))OR((~ (rt1.c1)))))AND(((rt1.c0)<<('&YR,jUp'))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0;
SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0 HAVING ((((((((rt1.c2)AND(SUM('1542931343'))))OR(rt1.c0)))AND(rt1.c3)))OR(MAX(rt1.c1))) COLLATE BINARY UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt0 NOT INDEXED GROUP BY rt1.c3, rt1.c0 HAVING (NOT (((((((((rt1.c2)AND(SUM('1542931343'))))OR(rt1.c0)))AND(rt1.c3)))OR(MAX(rt1.c1))) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0 HAVING ((((((((((rt1.c2)AND(SUM('1542931343'))))OR(rt1.c0)))AND(rt1.c3)))OR(MAX(rt1.c1))) COLLATE BINARY) ISNULL);
SELECT rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0;
SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0 HAVING ((((((((rt1.c2)AND(SUM('1542931343'))))OR(rt1.c0)))AND(rt1.c3)))OR(MAX(rt1.c1))) COLLATE BINARY UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt0 NOT INDEXED GROUP BY rt1.c3, rt1.c0 HAVING (NOT (((((((((rt1.c2)AND(SUM('1542931343'))))OR(rt1.c0)))AND(rt1.c3)))OR(MAX(rt1.c1))) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0 HAVING ((((((((((rt1.c2)AND(SUM('1542931343'))))OR(rt1.c0)))AND(rt1.c3)))OR(MAX(rt1.c1))) COLLATE BINARY) ISNULL);
SELECT rt1.c3, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR(vt0.c0)))AND(CAST(x'' AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) NOTNULL))OR(vt0.c0)))AND(CAST(x'' AS INTEGER)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) NOTNULL))OR(vt0.c0)))AND(CAST(x'' AS INTEGER)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c1) NOT NULL))%(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c1) NOT NULL))%(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c1) NOT NULL))%(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c3;
SELECT vt0.c0, rt1.c3 FROM rt1, vt0, vt1 WHERE ((((rt1.c1 IN ()))*(x''))) GROUP BY vt0.c0, rt1.c3 UNION SELECT ALL vt0.c0, rt1.c3 FROM rt1, vt0, vt1 WHERE ((NOT ((((rt1.c1 IN ()))*(x''))))) GROUP BY vt0.c0, rt1.c3 UNION SELECT ALL vt0.c0, rt1.c3 FROM rt1, vt0 NOT INDEXED, vt1 WHERE ((((((rt1.c1 IN ()))*(x''))) ISNULL)) GROUP BY vt0.c0, rt1.c3;
SELECT ALL vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((SUM(MAX(rt1.c0))) NOT BETWEEN (MIN(COUNT('-1099894841'))) AND (((rt1.c3) IS TRUE))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (((SUM(MAX(rt1.c0))) NOT BETWEEN (MIN(COUNT('-1099894841'))) AND (((rt1.c3) IS TRUE))))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((((SUM(MAX(rt1.c0))) NOT BETWEEN (MIN(COUNT('-1099894841'))) AND (((rt1.c3) IS TRUE)))) ISNULL);
SELECT rt1.c0 FROM vt0, rt1 NATURAL JOIN vt1;
SELECT ALL rt1.c0 FROM vt0, rt1 NATURAL JOIN vt1 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c0 FROM vt0, rt1 NATURAL JOIN vt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT rt1.c0 FROM vt0, rt1 NATURAL JOIN vt1 WHERE (((rt1.c2) ISNULL));
SELECT rt1.c0 FROM vt0, rt1 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((~ ((NOT (vt1.c1))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((~ ((NOT (vt1.c1))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((~ ((NOT (vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM) GROUP BY vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM))) GROUP BY vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((CASE WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT rt1.c2, vt1.c0, vt1.c1, rt1.c3, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, vt1.c1, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c2, vt1.c0, vt1.c1, rt1.c3, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, vt1.c1, rt1.c3, rt1.c1, rt1.c0 HAVING ((x'') NOT BETWEEN (AVG(COUNT(*))) AND (DATETIME(GROUP_CONCAT(rt1.c2), COUNT(*), rt1.c2))) UNION ALL SELECT ALL rt1.c2, vt1.c0, vt1.c1, rt1.c3, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, vt1.c1, rt1.c3, rt1.c1, rt1.c0 HAVING (NOT (((x'') NOT BETWEEN (AVG(COUNT(*))) AND (DATETIME(GROUP_CONCAT(rt1.c2), COUNT(*), rt1.c2))))) UNION ALL SELECT ALL rt1.c2, vt1.c0, vt1.c1, rt1.c3, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, vt1.c1, rt1.c3, rt1.c1, rt1.c0 HAVING ((((x'') NOT BETWEEN (AVG(COUNT(*))) AND (DATETIME(GROUP_CONCAT(rt1.c2), COUNT(*), rt1.c2)))) ISNULL);
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE ('D5') UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT ('D5'))) UNION ALL SELECT * FROM rt1, vt0 WHERE ((('D5') ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT ((x'ea1e') NOTNULL), CASE WHEN vt0.c0 THEN vt0.c0 END)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT ((x'ea1e') NOTNULL), CASE WHEN vt0.c0 THEN vt0.c0 END)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT ((x'ea1e') NOTNULL), CASE WHEN vt0.c0 THEN vt0.c0 END)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c2, vt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c2, vt1.c1;
SELECT ALL rt1.c2, vt1.c1 FROM vt0, vt1, rt1 WHERE (0.3436083875139381) GROUP BY rt1.c2, vt1.c1 UNION SELECT rt1.c2, vt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT (0.3436083875139381))) GROUP BY rt1.c2, vt1.c1 UNION SELECT rt1.c2, vt1.c1 FROM vt0, vt1, rt1 WHERE (((0.3436083875139381) ISNULL)) GROUP BY rt1.c2, vt1.c1;
SELECT ALL rt1.c2, vt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c2, vt1.c1;
SELECT rt1.c2, vt1.c1, vt1.c0, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ())) NOT BETWEEN (CASE WHEN rt1.c1 THEN vt1.c0 END) AND (((rt1.c3)IS NOT(rt1.c3)))) GROUP BY rt1.c2, vt1.c1, vt1.c0, rt1.c0;
SELECT rt1.c2, vt1.c1, vt1.c0, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ())) NOT BETWEEN (CASE WHEN rt1.c1 THEN vt1.c0 END) AND (((rt1.c3)IS NOT(rt1.c3)))) GROUP BY rt1.c2, vt1.c1, vt1.c0, rt1.c0 HAVING LIKE(((rt1.c0)>>(COUNT(*))), AVG(MAX(SUM(GROUP_CONCAT(vt1.c1))))) UNION ALL SELECT ALL rt1.c2, vt1.c1, vt1.c0, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ())) NOT BETWEEN (CASE WHEN rt1.c1 THEN vt1.c0 END) AND (((rt1.c3)IS NOT(rt1.c3)))) GROUP BY rt1.c2, vt1.c1, vt1.c0, rt1.c0 HAVING (NOT (LIKE(((rt1.c0)>>(COUNT(*))), AVG(MAX(SUM(GROUP_CONCAT(vt1.c1))))))) UNION ALL SELECT ALL rt1.c2, vt1.c1, vt1.c0, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ())) NOT BETWEEN (CASE WHEN rt1.c1 THEN vt1.c0 END) AND (((rt1.c3)IS NOT(rt1.c3)))) GROUP BY rt1.c2, vt1.c1, vt1.c0, rt1.c0 HAVING ((LIKE(((rt1.c0)>>(COUNT(*))), AVG(MAX(SUM(GROUP_CONCAT(vt1.c1)))))) ISNULL);
SELECT ALL rt1.c1, vt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON (x'bf91' IN (((0.9909195801500811)%(vt1.c1)), SQLITE_COMPILEOPTION_USED(rt1.c0)));
SELECT ALL rt1.c1, vt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON (x'bf91' IN (((0.9909195801500811)%(vt1.c1)), SQLITE_COMPILEOPTION_USED(rt1.c0))) WHERE (CAST((vt1.c0 IN ()) AS TEXT)) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON (x'bf91' IN (((0.9909195801500811)%(vt1.c1)), SQLITE_COMPILEOPTION_USED(rt1.c0))) WHERE ((NOT (CAST((vt1.c0 IN ()) AS TEXT)))) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON (x'bf91' IN (((0.9909195801500811)%(vt1.c1)), SQLITE_COMPILEOPTION_USED(rt1.c0))) WHERE (((CAST((vt1.c0 IN ()) AS TEXT)) ISNULL));
SELECT ALL rt1.c1, vt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt1 ON (x'bf91' IN (((0.9909195801500811)%(vt1.c1)), SQLITE_COMPILEOPTION_USED(rt1.c0)));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE (((((rt1.c2)%(rt1.c0)))%(((rt1.c1)/(rt1.c1))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT (((((rt1.c2)%(rt1.c0)))%(((rt1.c1)/(rt1.c1))))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE (((((((rt1.c2)%(rt1.c0)))%(((rt1.c1)/(rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT rt1.c0, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1 WHERE (((((((rt1.c2) IS FALSE))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))OR(rt1.c2 COLLATE RTRIM))) GROUP BY rt1.c0, rt1.c1, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (((((((rt1.c2) IS FALSE))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))OR(rt1.c2 COLLATE RTRIM))))) GROUP BY rt1.c0, rt1.c1, rt1.c3 UNION SELECT rt1.c0, rt1.c1, rt1.c3 FROM rt1 WHERE (((((((((rt1.c2) IS FALSE))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))OR(rt1.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c3;
SELECT rt1.c0, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((IFNULL(DISTINCT SUM(GROUP_CONCAT(vt0.c0)), COUNT(vt0.c0)))AND(TOTAL(COUNT(*)))))OR(COUNT(vt0.c0))))OR(TOTAL(vt0.c0))))OR(MIN(x'c8b6', vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((IFNULL(DISTINCT SUM(GROUP_CONCAT(vt0.c0)), COUNT(vt0.c0)))AND(TOTAL(COUNT(*)))))OR(COUNT(vt0.c0))))OR(TOTAL(vt0.c0))))OR(MIN(x'c8b6', vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((IFNULL(DISTINCT SUM(GROUP_CONCAT(vt0.c0)), COUNT(vt0.c0)))AND(TOTAL(COUNT(*)))))OR(COUNT(vt0.c0))))OR(TOTAL(vt0.c0))))OR(MIN(x'c8b6', vt0.c0)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON (NOT (((vt1.c1) IS FALSE))) LEFT OUTER JOIN vt1 ON UPPER(vt1.c0 COLLATE RTRIM);
SELECT ALL vt1.c1, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON (NOT (((vt1.c1) IS FALSE))) LEFT OUTER JOIN vt1 ON UPPER(vt1.c0 COLLATE RTRIM) WHERE (((((rt1.c0)<=(vt1.c1)))>(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON (NOT (((vt1.c1) IS FALSE))) LEFT OUTER JOIN vt1 ON UPPER(vt1.c0 COLLATE RTRIM) WHERE ((NOT (((((rt1.c0)<=(vt1.c1)))>(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT vt1.c1, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON (NOT (((vt1.c1) IS FALSE))) LEFT OUTER JOIN vt1 ON UPPER(vt1.c0 COLLATE RTRIM) WHERE (((((((rt1.c0)<=(vt1.c1)))>(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt1.c1, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON (NOT (((vt1.c1) IS FALSE))) LEFT OUTER JOIN vt1 ON UPPER(vt1.c0 COLLATE RTRIM);
SELECT DISTINCT vt0.c0 FROM vt1, vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt1, vt0, rt1 WHERE ((((('1352336767')IS NOT(vt1.c1)))GLOB((rt1.c3 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0, rt1 WHERE ((NOT ((((('1352336767')IS NOT(vt1.c1)))GLOB((rt1.c3 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0, rt1 WHERE ((((((('1352336767')IS NOT(vt1.c1)))GLOB((rt1.c3 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0, rt1;
SELECT ALL rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt1.c1, vt1.c0, rt1.c0;
SELECT ALL rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1, vt0 WHERE (((('1883326700')) NOT BETWEEN ((x'')) AND ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt1.c1)))))) GROUP BY rt1.c1, vt1.c1, vt1.c0, rt1.c0 UNION SELECT ALL rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1, vt0 WHERE ((NOT (((('1883326700')) NOT BETWEEN ((x'')) AND ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt1.c1)))))))) GROUP BY rt1.c1, vt1.c1, vt1.c0, rt1.c0 UNION SELECT ALL rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1, vt0 WHERE (((((('1883326700')) NOT BETWEEN ((x'')) AND ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt1.c1)))))) ISNULL)) GROUP BY rt1.c1, vt1.c1, vt1.c0, rt1.c0;
SELECT ALL rt1.c1, vt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt1.c1, vt1.c0, rt1.c0;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0 HAVING MIN(rt1.c1) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (MIN(rt1.c1))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0 HAVING ((MIN(rt1.c1)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0 HAVING MIN(rt1.c1) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (MIN(rt1.c1))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0 HAVING ((MIN(rt1.c1)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0;
SELECT * FROM rt1, vt0, vt1;
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))>=(CASE WHEN vt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN 0.17948575158914282 WHEN vt1.c1 THEN rt1.c3 END))) UNION ALL SELECT ALL * FROM rt1, vt0, vt1 WHERE ((NOT (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))>=(CASE WHEN vt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN 0.17948575158914282 WHEN vt1.c1 THEN rt1.c3 END))))) UNION ALL SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))>=(CASE WHEN vt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN 0.17948575158914282 WHEN vt1.c1 THEN rt1.c3 END))) ISNULL));
SELECT * FROM rt1, vt0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (TRIM(DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((TRIM(DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt0, rt1, vt1 WHERE (vt0.c0 COLLATE NOCASE) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt0, rt1, vt1 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt0, rt1, vt1 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2;
SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1;
SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 HAVING ((TOTAL(vt1.c0)) NOT BETWEEN (MIN(rt1.c1)) AND (((((((((0.1987545807816835)AND(AVG(vt1.c1))))AND(vt1.c1)))OR(rt1.c1)))OR(rt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 HAVING (NOT (((TOTAL(vt1.c0)) NOT BETWEEN (MIN(rt1.c1)) AND (((((((((0.1987545807816835)AND(AVG(vt1.c1))))AND(vt1.c1)))OR(rt1.c1)))OR(rt1.c1)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 HAVING ((((TOTAL(vt1.c0)) NOT BETWEEN (MIN(rt1.c1)) AND (((((((((0.1987545807816835)AND(AVG(vt1.c1))))AND(vt1.c1)))OR(rt1.c1)))OR(rt1.c1))))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1;
SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 HAVING ((TOTAL(vt1.c0)) NOT BETWEEN (MIN(rt1.c1)) AND (((((((((0.1987545807816835)AND(AVG(vt1.c1))))AND(vt1.c1)))OR(rt1.c1)))OR(rt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 HAVING (NOT (((TOTAL(vt1.c0)) NOT BETWEEN (MIN(rt1.c1)) AND (((((((((0.1987545807816835)AND(AVG(vt1.c1))))AND(vt1.c1)))OR(rt1.c1)))OR(rt1.c1)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 HAVING ((((TOTAL(vt1.c0)) NOT BETWEEN (MIN(rt1.c1)) AND (((((((((0.1987545807816835)AND(AVG(vt1.c1))))AND(vt1.c1)))OR(rt1.c1)))OR(rt1.c1))))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c1, vt1.c0, rt1.c3, rt1.c0, rt1.c1;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (load_extension(((vt0.c0)OR(vt1.c1)), (vt1.c0 IN ()))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (load_extension(((vt0.c0)OR(vt1.c1)), (vt1.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (((load_extension(((vt0.c0)OR(vt1.c1)), (vt1.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c3)GLOB(rt1.c0)))) AND (((((x'', rt1.c3, rt1.c2))!=((rt1.c0, rt1.c0, rt1.c3))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((((rt1.c3)GLOB(rt1.c0)))) AND (((((x'', rt1.c3, rt1.c2))<>((rt1.c0, rt1.c0, rt1.c3))))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((((rt1.c3)GLOB(rt1.c0)))) AND (((((x'', rt1.c3, rt1.c2))<>((rt1.c0, rt1.c0, rt1.c3))))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1 FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((UPPER(DISTINCT vt1.c0)))) GROUP BY rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1;
SELECT rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1 FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((UPPER(DISTINCT vt1.c0)))) WHERE ((((vt1.c1) IS TRUE) IN (CAST(rt1.c2 AS BLOB), NULL))) GROUP BY rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1 UNION SELECT rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1 FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((UPPER(DISTINCT vt1.c0)))) WHERE ((NOT ((((vt1.c1) IS TRUE) IN (CAST(rt1.c2 AS BLOB), NULL))))) GROUP BY rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1 UNION SELECT rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1 FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((UPPER(DISTINCT vt1.c0)))) WHERE ((((((vt1.c1) IS TRUE) IN (CAST(rt1.c2 AS BLOB), NULL))) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1;
SELECT ALL rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1 FROM rt1, vt0 CROSS JOIN vt1 ON (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((UPPER(DISTINCT vt1.c0)))) GROUP BY rt1.c3, rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0, vt1.c1;
SELECT vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING ((vt1.c1) NOT BETWEEN (vt1.c1) AND (COUNT(*))) COLLATE RTRIM UNION ALL SELECT vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING (NOT (((vt1.c1) NOT BETWEEN (vt1.c1) AND (COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING ((vt1.c1) NOT BETWEEN (vt1.c1) AND (COUNT(*))) COLLATE RTRIM UNION ALL SELECT vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING (NOT (((vt1.c1) NOT BETWEEN (vt1.c1) AND (COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY vt1.c0, rt1.c2;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (rt1.c0) UNION ALL SELECT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((-308760057)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((-308760057)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((-308760057)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 NOT INDEXED, vt0 WHERE (((((rt1.c2) ISNULL)) BETWEEN (((((rt1.c3)OR(rt1.c0)))AND(rt1.c0))) AND (((rt1.c0)-(rt1.c0))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((((rt1.c2) ISNULL)) BETWEEN (((((rt1.c3)OR(rt1.c0)))AND(rt1.c0))) AND (((rt1.c0)-(rt1.c0))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt0 WHERE (((((((rt1.c2) ISNULL)) BETWEEN (((((rt1.c3)OR(rt1.c0)))AND(rt1.c0))) AND (((rt1.c0)-(rt1.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c3, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (NOT (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))) GROUP BY rt1.c2, rt1.c3, rt1.c1;
SELECT rt1.c2, rt1.c3, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (NOT (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))) GROUP BY rt1.c2, rt1.c3, rt1.c1 HAVING SUM(SUM(rt1.c3)) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (NOT (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))) GROUP BY rt1.c2, rt1.c3, rt1.c1 HAVING (NOT (SUM(SUM(rt1.c3)))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (NOT (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))) GROUP BY rt1.c2, rt1.c3, rt1.c1 HAVING ((SUM(SUM(rt1.c3))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c1 FROM vt0, rt1, vt1 NOT INDEXED;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c1 FROM vt0, rt1, vt1 WHERE ((((rt1.c2 IN (vt1.c0))) BETWEEN (CAST(rt1.c1 AS BLOB)) AND (((((rt1.c3)AND(vt1.c1)))AND(vt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c1 FROM vt0, rt1 NOT INDEXED, vt1 WHERE ((NOT ((((rt1.c2 IN (vt1.c0))) BETWEEN (CAST(rt1.c1 AS BLOB)) AND (((((rt1.c3)AND(vt1.c1)))AND(vt1.c0))))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c1 FROM vt0, rt1, vt1 WHERE ((((((rt1.c2 IN (vt1.c0))) BETWEEN (CAST(rt1.c1 AS BLOB)) AND (((((rt1.c3)AND(vt1.c1)))AND(vt1.c0))))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c1 FROM vt0, rt1, vt1 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) NOTNULL), 0.6109460604174987)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((vt0.c0) NOTNULL), 0.6109460604174987)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT ((vt0.c0) NOTNULL), 0.6109460604174987)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((NULL))) ELSE vt0.c0 END) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((NULL))) ELSE vt0.c0 END))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (((CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((NULL))) ELSE vt0.c0 END) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING AVG(x'81e8c3397a51') UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (AVG(x'81e8c3397a51'))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG(x'81e8c3397a51')) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING AVG(x'81e8c3397a51') UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (AVG(x'81e8c3397a51'))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG(x'81e8c3397a51')) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT rt1.c3, rt1.c1, rt1.c2 FROM vt0, vt1, rt1;
SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM vt0, vt1, rt1 WHERE (NULLIF(rt1.c1, LIKELY('J2}㇧踖X+~^'))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c2 FROM vt0, vt1, rt1 WHERE ((NOT (NULLIF(rt1.c1, LIKELY('J2}㇧踖X+~^'))))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM vt0, vt1, rt1 WHERE (((NULLIF(rt1.c1, LIKELY('J2}㇧踖X+~^'))) ISNULL));
SELECT rt1.c3, rt1.c1, rt1.c2 FROM vt0, vt1, rt1;
SELECT DISTINCT vt1.c0, rt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c3 FROM vt1, rt1, vt0;
SELECT DISTINCT vt1.c0, rt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c3 FROM vt1, rt1, vt0 WHERE (CAST(CAST(vt1.c0 AS REAL) AS INTEGER)) UNION SELECT DISTINCT vt1.c0, rt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c3 FROM vt1, rt1, vt0 WHERE ((NOT (CAST(CAST(vt1.c0 AS REAL) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0, rt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c3 FROM vt1, rt1, vt0 WHERE (((CAST(CAST(vt1.c0 AS REAL) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c0, vt1.c1, rt1.c2, rt1.c1, rt1.c3 FROM vt1, rt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c3, vt1.c1, rt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c3, vt1.c1, rt1.c1;
SELECT ALL rt1.c3, vt1.c1, rt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c3, vt1.c1, rt1.c1 HAVING ((((TOTAL(TOTAL(rt1.c3))) BETWEEN (MIN(rt1.c1)) AND (SUM(GROUP_CONCAT(vt1.c1)))))||(SUM(MAX(vt1.c1)))) UNION ALL SELECT rt1.c3, vt1.c1, rt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c3, vt1.c1, rt1.c1 HAVING (NOT (((((TOTAL(TOTAL(rt1.c3))) BETWEEN (MIN(rt1.c1)) AND (SUM(GROUP_CONCAT(vt1.c1)))))||(SUM(MAX(vt1.c1)))))) UNION ALL SELECT ALL rt1.c3, vt1.c1, rt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c3, vt1.c1, rt1.c1 HAVING ((((((TOTAL(TOTAL(rt1.c3))) BETWEEN (MIN(rt1.c1)) AND (SUM(GROUP_CONCAT(vt1.c1)))))||(SUM(MAX(vt1.c1))))) ISNULL);
SELECT ALL vt1.c0, rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3 FROM rt1, vt1;
SELECT ALL vt1.c0, rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3 FROM rt1, vt1 WHERE (((((rt1.c2)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END))) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3 FROM rt1, vt1 WHERE ((NOT (((((rt1.c2)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END))))) UNION ALL SELECT vt1.c0, rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3 FROM rt1, vt1 WHERE (((((((rt1.c2)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END))) ISNULL));
SELECT ALL vt1.c0, rt1.c0, rt1.c2, vt1.c1, rt1.c1, rt1.c3 FROM rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((+ (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT ((+ (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((((+ (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT ALL rt1.c2, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3;
SELECT ALL rt1.c2, rt1.c3 FROM rt1, vt0 WHERE ((((('[ru')OR(((rt1.c2)&(rt1.c2)))))OR(CAST(rt1.c0 AS NUMERIC)))) GROUP BY rt1.c2, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c3 FROM rt1, vt0 WHERE ((NOT ((((('[ru')OR(((rt1.c2)&(rt1.c2)))))OR(CAST(rt1.c0 AS NUMERIC)))))) GROUP BY rt1.c2, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c3 FROM rt1, vt0 WHERE ((((((('[ru')OR(((rt1.c2)&(rt1.c2)))))OR(CAST(rt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt1.c2, rt1.c3;
SELECT ALL rt1.c2, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING TOTAL(MIN(MAX(vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (TOTAL(MIN(MAX(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((TOTAL(MIN(MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0, rt1.c2, vt1.c1, rt1.c0, rt1.c1, rt1.c3 FROM vt0, vt1, rt1;
SELECT vt1.c0, vt0.c0, rt1.c2, vt1.c1, rt1.c0, rt1.c1, rt1.c3 FROM vt0, vt1, rt1 WHERE (((((NULL)IS NOT(rt1.c3)))>((NOT (rt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt1.c2, vt1.c1, rt1.c0, rt1.c1, rt1.c3 FROM vt0, vt1, rt1 WHERE ((NOT (((((NULL)IS NOT(rt1.c3)))>((NOT (rt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt1.c2, vt1.c1, rt1.c0, rt1.c1, rt1.c3 FROM vt0, vt1, rt1 WHERE (((((((NULL)IS NOT(rt1.c3)))>((NOT (rt1.c0))))) ISNULL));
SELECT vt1.c0, vt0.c0, rt1.c2, vt1.c1, rt1.c0, rt1.c1, rt1.c3 FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c1)OR(vt1.c1))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((NOT (((vt1.c1)OR(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((NOT (((vt1.c1)OR(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE ((~ (CASE WHEN rt1.c1 THEN rt1.c2 END))) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE ((NOT ((~ (CASE WHEN rt1.c1 THEN rt1.c2 END))))) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 WHERE ((((~ (CASE WHEN rt1.c1 THEN rt1.c2 END))) ISNULL)) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT ALL vt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c3;
SELECT ALL vt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c3 HAVING (((SUM(rt1.c0)))=(((((MIN(GROUP_CONCAT(rt1.c0)), rt1.c2, GROUP_CONCAT(rt1.c1), COUNT(rt1.c3), MIN(rt1.c3)))=((GROUP_CONCAT(rt1.c0), rt1.c3, '1709441294', vt1.c0, rt1.c1)))))) UNION ALL SELECT vt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c3 HAVING (NOT ((((SUM(rt1.c0)))=(((((MIN(GROUP_CONCAT(rt1.c0)), rt1.c2, GROUP_CONCAT(rt1.c1), COUNT(rt1.c3), MIN(rt1.c3)))==((GROUP_CONCAT(rt1.c0), rt1.c3, '1709441294', vt1.c0, rt1.c1)))))))) UNION ALL SELECT ALL vt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, vt0.c0, rt1.c0, rt1.c2, rt1.c3 HAVING (((((SUM(rt1.c0)))==(((((MIN(GROUP_CONCAT(rt1.c0)), rt1.c2, GROUP_CONCAT(rt1.c1), COUNT(rt1.c3), MIN(rt1.c3)))=((GROUP_CONCAT(rt1.c0), rt1.c3, '1709441294', vt1.c0, rt1.c1))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN '754835507' THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)/(vt0.c0)))))OR((~ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((CASE vt0.c0  WHEN '754835507' THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)/(vt0.c0)))))OR((~ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((CASE vt0.c0  WHEN '754835507' THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)/(vt0.c0)))))OR((~ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE (('1397435544' IN ())) GROUP BY rt1.c3, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT (('1397435544' IN ())))) GROUP BY rt1.c3, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt0 WHERE (((('1397435544' IN ())) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT ALL rt1.c2, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3;
SELECT ALL rt1.c2, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3 HAVING MIN(MAX(rt1.c3)) UNION ALL SELECT rt1.c2, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3 HAVING (NOT (MIN(MAX(rt1.c3)))) UNION ALL SELECT rt1.c2, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3 HAVING ((MIN(MAX(rt1.c3))) ISNULL);
SELECT MAX(CASE WHEN NULL THEN ABS(DISTINCT vt1.c0) END) FROM vt1, rt1, vt0;
SELECT rt1.c1, rt1.c3, vt0.c0, rt1.c2 FROM rt1, vt0;
SELECT ALL rt1.c1, rt1.c3, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((((((rt1.c1 IN (rt1.c2)))OR((rt1.c0 IN ()))))AND((~ (rt1.c3))))) UNION ALL SELECT rt1.c1, rt1.c3, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT ((((((rt1.c1 IN (rt1.c2)))OR((rt1.c0 IN ()))))AND((~ (rt1.c3))))))) UNION ALL SELECT rt1.c1, rt1.c3, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((((((((rt1.c1 IN (rt1.c2)))OR((rt1.c0 IN ()))))AND((~ (rt1.c3))))) ISNULL));
SELECT rt1.c1, rt1.c3, vt0.c0, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c2 IN ()))OR('L9~6}(Xd')))OR(rt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((rt1.c2 IN ()))OR('L9~6}(Xd')))OR(rt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c2 IN ()))OR('L9~6}(Xd')))OR(rt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1;
SELECT ALL vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((rt1.c1 IN ())) GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1 UNION SELECT ALL vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((NOT ((rt1.c1 IN ())))) GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1 UNION SELECT ALL vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((((rt1.c1 IN ())) ISNULL)) GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1;
SELECT vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt1 NOT INDEXED, vt0 GROUP BY rt1.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING COUNT(MAX(GROUP_CONCAT(rt1.c3))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING (NOT (COUNT(MAX(GROUP_CONCAT(rt1.c3))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING ((COUNT(MAX(GROUP_CONCAT(rt1.c3)))) ISNULL);
SELECT MAX((((((vt1.c1)GLOB(vt1.c0)), vt0.c0, RTRIM(vt1.c1)))>=((CASE vt1.c0  WHEN vt1.c0 THEN '-5r	I2*Rd' END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END, (vt1.c1 IN ()))))) FROM vt1, vt0 ORDER BY CAST(IFNULL(DISTINCT vt1.c0, vt1.c0) AS REAL), 'ZO' DESC  NULLS FIRST, CAST(((vt0.c0) ISNULL) AS NUMERIC) DESC  NULLS FIRST;
SELECT rt1.c3 FROM vt0, rt1;
SELECT ALL rt1.c3 FROM vt0, rt1 WHERE (((((((rt1.c1)OR(vt0.c0)))OR(rt1.c3)))|((((rt1.c2))=((rt1.c3)))))) UNION ALL SELECT rt1.c3 FROM vt0, rt1 WHERE ((NOT (((((((rt1.c1)OR(vt0.c0)))OR(rt1.c3)))|((((rt1.c2))==((rt1.c3)))))))) UNION ALL SELECT ALL rt1.c3 FROM vt0, rt1 WHERE (((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c3)))|((((rt1.c2))==((rt1.c3)))))) ISNULL));
SELECT rt1.c3 FROM vt0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) NOTNULL), ((vt0.c0)IS NOT(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (TRIM(DISTINCT ((vt0.c0) NOTNULL), ((vt0.c0)IS NOT(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((TRIM(DISTINCT ((vt0.c0) NOTNULL), ((vt0.c0)IS NOT(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((- (CAST(vt1.c1 AS REAL)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((- (CAST(vt1.c1 AS REAL)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((- (CAST(vt1.c1 AS REAL)))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING vt1.c1 UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((vt1.c1) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING vt1.c1 UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((vt1.c1) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT MAX(((((x'')OR(((vt1.c1)<<(vt1.c1)))))OR(vt1.c1 COLLATE NOCASE))) FROM vt1 ORDER BY ((((((((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(((vt1.c1)>>(vt1.c0)))))OR(((vt1.c0)>=(vt1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c1) ISNULL) IN ())) ORDER BY ((0.2110466357602433) NOT NULL) DESC, CASE ((vt1.c1) ISNULL)  WHEN ((0.7681881126567863)>(vt1.c1)) THEN ((vt1.c0) NOTNULL) END, NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c1) ISNULL) IN ())))) ORDER BY ((0.2110466357602433) NOT NULL) DESC, CASE ((vt1.c1) ISNULL)  WHEN ((0.7681881126567863)>(vt1.c1)) THEN ((vt1.c0) NOTNULL) END, NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1) ISNULL) IN ())) ISNULL)) ORDER BY ((0.2110466357602433) NOT NULL) DESC, CASE ((vt1.c1) ISNULL)  WHEN ((0.7681881126567863)>(vt1.c1)) THEN ((vt1.c0) NOTNULL) END, NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((- (vt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((- (vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((- (vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((x'') NOTNULL)) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((x'') NOTNULL)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (((((x'') NOTNULL)) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, vt1.c1, rt1.c2, rt1.c3, rt1.c0, vt1.c0 FROM vt0, rt1, vt1 NOT INDEXED;
SELECT ALL rt1.c1, vt1.c1, rt1.c2, rt1.c3, rt1.c0, vt1.c0 FROM vt0, rt1, vt1 WHERE (CASE WHEN x'' THEN '' WHEN ((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0))) WHEN (((rt1.c0, rt1.c0, rt1.c3))>=((vt1.c0, vt0.c0, vt1.c1))) THEN (('\nhFZT!P') IS FALSE) WHEN NULLIF(vt1.c1, rt1.c1) THEN NULL WHEN (+ (vt1.c0)) THEN vt1.c1 COLLATE BINARY ELSE CAST(rt1.c0 AS INTEGER) END) UNION ALL SELECT ALL rt1.c1, vt1.c1, rt1.c2, rt1.c3, rt1.c0, vt1.c0 FROM vt0, rt1, vt1 WHERE ((NOT (CASE WHEN x'' THEN '' WHEN ((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0))) WHEN (((rt1.c0, rt1.c0, rt1.c3))>=((vt1.c0, vt0.c0, vt1.c1))) THEN (('\nhFZT!P') IS FALSE) WHEN NULLIF(vt1.c1, rt1.c1) THEN NULL WHEN (+ (vt1.c0)) THEN vt1.c1 COLLATE BINARY ELSE CAST(rt1.c0 AS INTEGER) END))) UNION ALL SELECT rt1.c1, vt1.c1, rt1.c2, rt1.c3, rt1.c0, vt1.c0 FROM vt0, rt1, vt1 WHERE (((CASE WHEN x'' THEN '' WHEN ((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0))) WHEN (((rt1.c0, rt1.c0, rt1.c3))>=((vt1.c0, vt0.c0, vt1.c1))) THEN (('\nhFZT!P') IS FALSE) WHEN NULLIF(vt1.c1, rt1.c1) THEN NULL WHEN (+ (vt1.c0)) THEN vt1.c1 COLLATE BINARY ELSE CAST(rt1.c0 AS INTEGER) END) ISNULL));
SELECT ALL rt1.c1, vt1.c1, rt1.c2, rt1.c3, rt1.c0, vt1.c0 FROM vt0, rt1, vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2)IS NOT(CAST(vt1.c0 AS BLOB)));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2)IS NOT(CAST(vt1.c0 AS BLOB))) WHERE (rt1.c3 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2)IS NOT(CAST(vt1.c0 AS BLOB))) WHERE ((NOT (rt1.c3 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2)IS NOT(CAST(vt1.c0 AS BLOB))) WHERE (((rt1.c3 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2)IS NOT(CAST(vt1.c0 AS BLOB)));
SELECT ALL rt1.c2 FROM vt1, rt1, vt0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt1, rt1, vt0 WHERE (((((((rt1.c1) NOTNULL))AND(HEX(rt1.c2))))OR(((('M')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt1, rt1, vt0 WHERE ((NOT (((((((rt1.c1) NOTNULL))AND(HEX(rt1.c2))))OR(((('M')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM vt1, rt1, vt0 WHERE (((((((((rt1.c1) NOTNULL))AND(HEX(rt1.c2))))OR(((('M')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt1, rt1, vt0 GROUP BY rt1.c2;
SELECT ALL rt1.c1, vt0.c0, rt1.c2, vt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c1;
SELECT ALL rt1.c1, vt0.c0, rt1.c2, vt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c1 HAVING ((((SUM(GROUP_CONCAT(vt1.c0))) NOT NULL)) ISNULL) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c2, vt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c1 HAVING (NOT (((((SUM(GROUP_CONCAT(vt1.c0))) NOT NULL)) ISNULL))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c2, vt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c1 HAVING ((((((SUM(GROUP_CONCAT(vt1.c0))) NOT NULL)) ISNULL)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (TRIM((- (vt1.c0)), ((vt1.c1)GLOB(0.46569235898834205)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (TRIM((- (vt1.c0)), ((vt1.c1)GLOB(0.46569235898834205)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((TRIM((- (vt1.c0)), ((vt1.c1)GLOB(0.46569235898834205)))) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((((rt1.c1)/(rt1.c1)) IN ())) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c1)/(rt1.c1)) IN ())))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((((((rt1.c1)/(rt1.c1)) IN ())) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((((vt1.c0 IN ())) IS FALSE)) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) IS FALSE)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c0 IN ())) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1 HAVING '' UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ('')) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1 HAVING (('') ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1 HAVING '' UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ('')) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1 HAVING (('') ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c1))!=((vt1.c1)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((vt1.c1))!=((vt1.c1)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt1.c1))!=((vt1.c1)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c0)>>(rt1.c1))))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((NOT (((rt1.c0)>>(rt1.c1))))))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((((NOT (((rt1.c0)>>(rt1.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING TOTAL('~䔉䫱Wh') UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING (NOT (TOTAL('~䔉䫱Wh'))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING ((TOTAL('~䔉䫱Wh')) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING TOTAL('~䔉䫱Wh') UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING (NOT (TOTAL('~䔉䫱Wh'))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING ((TOTAL('~䔉䫱Wh')) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CHANGES()) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CHANGES()))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CHANGES()) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1 WHERE (NULL) UNION SELECT DISTINCT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM vt0 NATURAL JOIN rt1;
SELECT ALL rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CAST(rt1.c0 AS INTEGER))<<(CASE vt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE vt1.c1 END)) GROUP BY rt1.c0, rt1.c2, vt1.c0, vt1.c1;
SELECT rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CAST(rt1.c0 AS INTEGER))<<(CASE vt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE vt1.c1 END)) WHERE ((NOT ((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) GROUP BY rt1.c0, rt1.c2, vt1.c0, vt1.c1 UNION SELECT rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CAST(rt1.c0 AS INTEGER))<<(CASE vt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE vt1.c1 END)) WHERE ((NOT ((NOT ((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))))))) GROUP BY rt1.c0, rt1.c2, vt1.c0, vt1.c1 UNION SELECT rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CAST(rt1.c0 AS INTEGER))<<(CASE vt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE vt1.c1 END)) WHERE ((((NOT ((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c0, vt1.c1;
SELECT ALL rt1.c0, rt1.c2, vt1.c0, vt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CAST(rt1.c0 AS INTEGER))<<(CASE vt1.c0  WHEN rt1.c3 THEN rt1.c0 ELSE vt1.c1 END)) GROUP BY rt1.c0, rt1.c2, vt1.c0, vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((GROUP_CONCAT(vt1.c0))GLOB(((MIN(GROUP_CONCAT(vt1.c1)))%(MIN(vt1.c1))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (((GROUP_CONCAT(vt1.c0))GLOB(((MIN(GROUP_CONCAT(vt1.c1)))%(MIN(vt1.c1))))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((GROUP_CONCAT(vt1.c0))GLOB(((MIN(GROUP_CONCAT(vt1.c1)))%(MIN(vt1.c1)))))) ISNULL);
SELECT ALL * FROM rt1, vt1, vt0;
SELECT * FROM rt1, vt1, vt0 WHERE (TRIM(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(vt1.c0)))) UNION ALL SELECT * FROM rt1, vt1, vt0 WHERE ((NOT (TRIM(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(vt1.c0)))))) UNION ALL SELECT * FROM rt1, vt1, vt0 WHERE (((TRIM(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(vt1.c0)))) ISNULL));
SELECT ALL * FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT ((((rt1.c0))>((x'')))))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0 WHERE ((NOT ((NOT ((((rt1.c0))>((x'')))))))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0 NOT INDEXED WHERE ((((NOT ((((rt1.c0))>((x'')))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))))AND((- (vt1.c1))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))))AND((- (vt1.c1))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))))AND((- (vt1.c1))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c1 FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (((rt1.c3)>('')))) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (((rt1.c3)>('')))) GROUP BY vt1.c1 HAVING MAX(MAX(x'd42b')) UNION ALL SELECT ALL vt1.c1 FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (((rt1.c3)>('')))) GROUP BY vt1.c1 HAVING (NOT (MAX(MAX(x'd42b')))) UNION ALL SELECT vt1.c1 FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (((rt1.c3)>('')))) GROUP BY vt1.c1 HAVING ((MAX(MAX(x'd42b'))) ISNULL);
SELECT ALL * FROM vt1, vt0, rt1;
SELECT ALL * FROM vt1, vt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (0.40591055729831704) AND (rt1.c0)))) AND ((rt1.c0 COLLATE RTRIM)))) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE ((NOT ((((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (0.40591055729831704) AND (rt1.c0)))) AND ((rt1.c0 COLLATE RTRIM)))))) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE ((((((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (0.40591055729831704) AND (rt1.c0)))) AND ((rt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT ALL * FROM vt1, vt0, rt1;
SELECT DISTINCT vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE (CAST(x'' AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((NOT (CAST(x'' AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE (((CAST(x'' AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, rt1.c3, vt0.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c2)&(vt0.c0))) NOT BETWEEN (rt1.c0) AND (TYPEOF(rt1.c2))) INNER JOIN vt0 ON (- (rt1.c1)) COLLATE NOCASE GROUP BY vt1.c1, rt1.c3, vt0.c0;
SELECT vt1.c1, rt1.c3, vt0.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c2)&(vt0.c0))) NOT BETWEEN (rt1.c0) AND (TYPEOF(rt1.c2))) INNER JOIN vt0 ON (- (rt1.c1)) COLLATE NOCASE GROUP BY vt1.c1, rt1.c3, vt0.c0 HAVING LIKELIHOOD(DISTINCT MAX(MIN(MIN(vt0.c0))), 0.2618111679642019) UNION ALL SELECT ALL vt1.c1, rt1.c3, vt0.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c2)&(vt0.c0))) NOT BETWEEN (rt1.c0) AND (TYPEOF(rt1.c2))) INNER JOIN vt0 ON (- (rt1.c1)) COLLATE NOCASE GROUP BY vt1.c1, rt1.c3, vt0.c0 HAVING (NOT (LIKELIHOOD(DISTINCT MAX(MIN(MIN(vt0.c0))), 0.2618111679642019))) UNION ALL SELECT vt1.c1, rt1.c3, vt0.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c2)&(vt0.c0))) NOT BETWEEN (rt1.c0) AND (TYPEOF(rt1.c2))) INNER JOIN vt0 ON (- (rt1.c1)) COLLATE NOCASE GROUP BY vt1.c1, rt1.c3, vt0.c0 HAVING ((LIKELIHOOD(DISTINCT MAX(MIN(MIN(vt0.c0))), 0.2618111679642019)) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (json_patch((NOT (rt1.c1)), ((rt1.c2) IS FALSE))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (json_patch((NOT (rt1.c1)), ((rt1.c2) IS FALSE))))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((json_patch((NOT (rt1.c1)), ((rt1.c2) IS FALSE))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c1 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON (~ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c1 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON (~ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) WHERE ((((CAST(vt1.c1 AS TEXT)))<((((rt1.c0)>>(rt1.c2)))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c1 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON (~ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) WHERE ((NOT ((((CAST(vt1.c1 AS TEXT)))<((((rt1.c0)>>(rt1.c2)))))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c1 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON (~ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) WHERE ((((((CAST(vt1.c1 AS TEXT)))<((((rt1.c0)>>(rt1.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c1 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON (~ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))));
SELECT vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 LEFT OUTER JOIN vt1 ON CASE WHEN (((x'')) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (rt1.c0 IN (rt1.c2)) ELSE (~ (rt1.c3)) END GROUP BY vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 LEFT OUTER JOIN vt1 ON CASE WHEN (((x'')) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (rt1.c0 IN (rt1.c2)) ELSE (~ (rt1.c3)) END WHERE (LIKELY(DISTINCT rt1.c0)) GROUP BY vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 UNION SELECT vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 LEFT OUTER JOIN vt1 ON CASE WHEN (((x'')) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (rt1.c0 IN (rt1.c2)) ELSE (~ (rt1.c3)) END WHERE ((NOT (LIKELY(DISTINCT rt1.c0)))) GROUP BY vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 UNION SELECT vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 LEFT OUTER JOIN vt1 ON CASE WHEN (((x'')) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (rt1.c0 IN (rt1.c2)) ELSE (~ (rt1.c3)) END WHERE (((LIKELY(DISTINCT rt1.c0)) ISNULL)) GROUP BY vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1 LEFT OUTER JOIN vt1 ON CASE WHEN (((x'')) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (rt1.c0 IN (rt1.c2)) ELSE (~ (rt1.c3)) END GROUP BY vt1.c1, vt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3;
SELECT ALL vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3 HAVING SUM('I慏P+') COLLATE NOCASE UNION ALL SELECT ALL vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3 HAVING (NOT (SUM('I慏P+') COLLATE NOCASE)) UNION ALL SELECT vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3 HAVING ((SUM('I慏P+') COLLATE NOCASE) ISNULL);
SELECT vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3;
SELECT ALL vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3 HAVING SUM('I慏P+') COLLATE NOCASE UNION ALL SELECT ALL vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3 HAVING (NOT (SUM('I慏P+') COLLATE NOCASE)) UNION ALL SELECT vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3 HAVING ((SUM('I慏P+') COLLATE NOCASE) ISNULL);
SELECT vt1.c1, rt1.c2, rt1.c3 FROM vt1, rt1 GROUP BY vt1.c1, rt1.c2, rt1.c3;
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON 0.1303090194987493;
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON 0.1303090194987493 WHERE (((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((vt0.c0)>(vt1.c1)))))OR(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON 0.1303090194987493 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((vt0.c0)>(vt1.c1)))))OR(((vt0.c0) ISNULL)))))) UNION ALL SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON 0.1303090194987493 WHERE (((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((vt0.c0)>(vt1.c1)))))OR(((vt0.c0) ISNULL)))) ISNULL));
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON 0.1303090194987493;
SELECT DISTINCT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((((rt1.c2, '', rt1.c0)) NOT BETWEEN ((vt1.c0, rt1.c3, vt1.c1)) AND ((vt0.c0, '0.9373281906161964', vt0.c0)))) ISNULL);
SELECT DISTINCT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((((rt1.c2, '', rt1.c0)) NOT BETWEEN ((vt1.c0, rt1.c3, vt1.c1)) AND ((vt0.c0, '0.9373281906161964', vt0.c0)))) ISNULL) WHERE (CHAR(0.42593025879334157)) UNION SELECT DISTINCT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((((rt1.c2, '', rt1.c0)) NOT BETWEEN ((vt1.c0, rt1.c3, vt1.c1)) AND ((vt0.c0, '0.9373281906161964', vt0.c0)))) ISNULL) WHERE ((NOT (CHAR(0.42593025879334157)))) UNION SELECT DISTINCT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((((rt1.c2, '', rt1.c0)) NOT BETWEEN ((vt1.c0, rt1.c3, vt1.c1)) AND ((vt0.c0, '0.9373281906161964', vt0.c0)))) ISNULL) WHERE (((CHAR(0.42593025879334157)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((((rt1.c2, '', rt1.c0)) NOT BETWEEN ((vt1.c0, rt1.c3, vt1.c1)) AND ((vt0.c0, '0.9373281906161964', vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)%(rt1.c2))) IS FALSE) GROUP BY vt0.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)%(rt1.c2))) IS FALSE) WHERE ((~ (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0))))) GROUP BY vt0.c0, rt1.c1, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)%(rt1.c2))) IS FALSE) WHERE ((NOT ((~ (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0))))))) GROUP BY vt0.c0, rt1.c1, rt1.c2 UNION SELECT vt0.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)%(rt1.c2))) IS FALSE) WHERE ((((~ (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0))))) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c2;
SELECT ALL vt0.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)%(rt1.c2))) IS FALSE) GROUP BY vt0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING NULLIF(((SUM(rt1.c2))GLOB(rt1.c3)), ((GROUP_CONCAT(MIN(rt1.c2))) NOT NULL)) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (NULLIF(((SUM(rt1.c2))GLOB(rt1.c3)), ((GROUP_CONCAT(MIN(rt1.c2))) NOT NULL)))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((NULLIF(((SUM(rt1.c2))GLOB(rt1.c3)), ((GROUP_CONCAT(MIN(rt1.c2))) NOT NULL))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c3 FROM vt0, rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c3 FROM vt0, rt1 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0)+(rt1.c3))) AND (NULL))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c3 FROM vt0, rt1 WHERE ((NOT (((vt0.c0) NOT BETWEEN (((vt0.c0)+(rt1.c3))) AND (NULL))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c3 FROM vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (((vt0.c0)+(rt1.c3))) AND (NULL))) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c3 FROM vt0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((+ ((((vt0.c0))!=(('-550293392')))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ ((((vt0.c0))!=(('-550293392')))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ ((((vt0.c0))<>(('-550293392')))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt0, rt1, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, rt1, vt1 WHERE ((CAST(rt1.c3 AS NUMERIC) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, rt1, vt1 WHERE ((NOT ((CAST(rt1.c3 AS NUMERIC) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, rt1, vt1 WHERE ((((CAST(rt1.c3 AS NUMERIC) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, rt1, vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2 HAVING CAST(((((AVG(rt1.c3))OR(vt1.c0)))AND('-155982330')) AS INTEGER) UNION ALL SELECT rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2 HAVING (NOT (CAST(((((AVG(rt1.c3))OR(vt1.c0)))AND('-155982330')) AS INTEGER))) UNION ALL SELECT ALL rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2 HAVING ((CAST(((((AVG(rt1.c3))OR(vt1.c0)))AND('-155982330')) AS INTEGER)) ISNULL);
SELECT ALL rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2 HAVING CAST(((((AVG(rt1.c3))OR(vt1.c0)))AND('-155982330')) AS INTEGER) UNION ALL SELECT rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2 HAVING (NOT (CAST(((((AVG(rt1.c3))OR(vt1.c0)))AND('-155982330')) AS INTEGER))) UNION ALL SELECT ALL rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2 HAVING ((CAST(((((AVG(rt1.c3))OR(vt1.c0)))AND('-155982330')) AS INTEGER)) ISNULL);
SELECT ALL rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c0, vt0.c0, vt1.c0, rt1.c3, rt1.c2, vt1.c1, rt1.c1 FROM vt0, rt1, vt1;
SELECT rt1.c0, vt0.c0, vt1.c0, rt1.c3, rt1.c2, vt1.c1, rt1.c1 FROM vt0, rt1, vt1 WHERE (rt1.c3) ORDER BY (((rt1.c0 IN ())) NOTNULL);
SELECT ALL rt1.c0, vt0.c0, vt1.c0, rt1.c3, rt1.c2, vt1.c1, rt1.c1 FROM vt0, rt1, vt1 WHERE ((NOT (rt1.c3))) ORDER BY (((rt1.c0 IN ())) NOTNULL);
SELECT rt1.c0, vt0.c0, vt1.c0, rt1.c3, rt1.c2, vt1.c1, rt1.c1 FROM vt0, rt1, vt1 WHERE (((rt1.c3) ISNULL)) ORDER BY (((rt1.c0 IN ())) NOTNULL);
SELECT rt1.c0, vt0.c0, vt1.c0, rt1.c3, rt1.c2, vt1.c1, rt1.c1 FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt1, rt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1, rt1 NATURAL JOIN vt0 WHERE (((((((rt1.c1))>((rt1.c3))), CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 END, TYPEOF(rt1.c0)))>=((json_insert(NULL, rt1.c1, vt0.c0), ((((rt1.c2)OR(vt0.c0)))AND(rt1.c3)), rt1.c2)))) UNION SELECT DISTINCT * FROM vt1, rt1 NOT INDEXED NATURAL JOIN vt0 WHERE ((NOT (((((((rt1.c1))>((rt1.c3))), CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 END, TYPEOF(rt1.c0)))>=((json_insert(NULL, rt1.c1, vt0.c0), ((((rt1.c2)OR(vt0.c0)))AND(rt1.c3)), rt1.c2)))))) UNION SELECT DISTINCT * FROM vt1, rt1 NATURAL JOIN vt0 WHERE (((((((((rt1.c1))>((rt1.c3))), CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 END, TYPEOF(rt1.c0)))>=((json_insert(NULL, rt1.c1, vt0.c0), ((((rt1.c2)OR(vt0.c0)))AND(rt1.c3)), rt1.c2)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1 NATURAL JOIN vt0;
SELECT ALL vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1 WHERE (vt1.c0) GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 UNION SELECT vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 UNION SELECT vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT ALL vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, vt1.c1, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c1, rt1.c0, rt1.c2, rt1.c3, vt1.c0, vt1.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0)<<(rt1.c0)) COLLATE RTRIM FULL OUTER JOIN rt1 ON (~ (((((((((vt0.c0)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)))) GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3, vt1.c0, vt1.c1, vt0.c0;
SELECT ALL rt1.c1, rt1.c3 FROM rt1;
SELECT ALL rt1.c1, rt1.c3 FROM rt1 WHERE (rt1.c3) UNION ALL SELECT rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT rt1.c1, rt1.c3 FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT ALL rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((vt1.c0 IN ())) NOTNULL)) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOTNULL)))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c0 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1 FROM vt1 INNER JOIN rt1 ON ((((rt1.c3) NOTNULL))|((rt1.c1 IN (NULL, vt1.c1)))) GROUP BY rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1 FROM vt1 INNER JOIN rt1 ON ((((rt1.c3) NOTNULL))|((rt1.c1 IN (NULL, vt1.c1)))) WHERE (((HEX(rt1.c3))*((NOT (rt1.c0))))) GROUP BY rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1 FROM vt1 INNER JOIN rt1 ON ((((rt1.c3) NOTNULL))|((rt1.c1 IN (NULL, vt1.c1)))) WHERE ((NOT (((HEX(rt1.c3))*((NOT (rt1.c0))))))) GROUP BY rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1 FROM vt1 INNER JOIN rt1 ON ((((rt1.c3) NOTNULL))|((rt1.c1 IN (NULL, vt1.c1)))) WHERE (((((HEX(rt1.c3))*((NOT (rt1.c0))))) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1 FROM vt1 INNER JOIN rt1 ON ((((rt1.c3) NOTNULL))|((rt1.c1 IN (NULL, vt1.c1)))) GROUP BY rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt1.c1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c0) IS FALSE))&(rt1.c3))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c0) IS FALSE))&(rt1.c3))))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c0) IS FALSE))&(rt1.c3))) ISNULL));
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c1) IS FALSE) THEN ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt1.c1)<<(vt1.c0)) THEN vt0.c0 WHEN (((vt1.c0, vt1.c1, NULL, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c1, vt1.c1, vt0.c0))) THEN (vt0.c0 IN (vt1.c0, x'')) ELSE load_extension(vt1.c0, vt0.c0) END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c1) IS FALSE) THEN ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt1.c1)<<(vt1.c0)) THEN vt0.c0 WHEN (((vt1.c0, vt1.c1, NULL, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c1, vt1.c1, vt0.c0))) THEN (vt0.c0 IN (vt1.c0, x'')) ELSE load_extension(vt1.c0, vt0.c0) END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN ((vt1.c1) IS FALSE) THEN ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt1.c1)<<(vt1.c0)) THEN vt0.c0 WHEN (((vt1.c0, vt1.c1, NULL, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c1, vt1.c1, vt0.c0))) THEN (vt0.c0 IN (vt1.c0, x'')) ELSE load_extension(vt1.c0, vt0.c0) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 INNER JOIN rt1 ON rt1.c3 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt1 ON rt1.c3 WHERE (rt1.c3) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 INNER JOIN rt1 ON rt1.c3 WHERE ((NOT (rt1.c3))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 INNER JOIN rt1 ON rt1.c3 WHERE (((rt1.c3) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN rt1 ON rt1.c3 GROUP BY vt1.c0;
SELECT rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0;
SELECT rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0 HAVING (((('') BETWEEN (AVG(rt1.c1)) AND (rt1.c1))) NOT NULL) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0 HAVING (NOT ((((('') BETWEEN (AVG(rt1.c1)) AND (rt1.c1))) NOT NULL))) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0 HAVING (((((('') BETWEEN (AVG(rt1.c1)) AND (rt1.c1))) NOT NULL)) ISNULL);
SELECT rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0;
SELECT rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0 HAVING (((('') BETWEEN (AVG(rt1.c1)) AND (rt1.c1))) NOT NULL) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0 HAVING (NOT ((((('') BETWEEN (AVG(rt1.c1)) AND (rt1.c1))) NOT NULL))) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0 HAVING (((((('') BETWEEN (AVG(rt1.c1)) AND (rt1.c1))) NOT NULL)) ISNULL);
SELECT rt1.c0, rt1.c3, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0, rt1.c3, vt0.c0;
SELECT ALL * FROM rt1, vt1, vt0;
SELECT * FROM rt1, vt1, vt0 WHERE (((((rt1.c0)OR(vt1.c0))) NOTNULL)) UNION ALL SELECT ALL * FROM rt1, vt1, vt0 WHERE ((NOT (((((rt1.c0)OR(vt1.c0))) NOTNULL)))) UNION ALL SELECT * FROM rt1, vt1, vt0 WHERE (((((((rt1.c0)OR(vt1.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt1, vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c1, rt1.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c3 FROM vt0, rt1, vt1;
SELECT DISTINCT vt0.c0, vt1.c1, rt1.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c3 FROM vt0, rt1 NOT INDEXED, vt1 WHERE (CAST((rt1.c3 IN ()) AS REAL)) UNION SELECT DISTINCT vt0.c0, vt1.c1, rt1.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c3 FROM vt0, rt1, vt1 WHERE ((NOT (CAST((rt1.c3 IN ()) AS REAL)))) UNION SELECT DISTINCT vt0.c0, vt1.c1, rt1.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c3 FROM vt0, rt1, vt1 WHERE (((CAST((rt1.c3 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c1, rt1.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c3 FROM vt0, rt1, vt1;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON json_extract(NULL, CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN x'd1fd' END) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON json_extract(NULL, CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN x'd1fd' END) WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON json_extract(NULL, CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN x'd1fd' END) WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON json_extract(NULL, CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN x'd1fd' END) WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON json_extract(NULL, CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN x'd1fd' END) GROUP BY vt1.c0;
SELECT rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt1.c0;
SELECT rt1.c0 FROM rt1, vt1, vt0;
SELECT rt1.c0 FROM rt1, vt1, vt0 WHERE (ABS(json_insert(rt1.c1, rt1.c2, rt1.c1))) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1, vt0 WHERE ((NOT (ABS(json_insert(rt1.c1, rt1.c2, rt1.c1))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1, vt0 WHERE (((ABS(json_insert(rt1.c1, rt1.c2, rt1.c1))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((vt1.c1) BETWEEN ('641217512') AND (GROUP_CONCAT(vt1.c0))))||(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (((((vt1.c1) BETWEEN ('641217512') AND (GROUP_CONCAT(vt1.c0))))||(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((((vt1.c1) BETWEEN ('641217512') AND (GROUP_CONCAT(vt1.c0))))||(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((vt1.c1) BETWEEN ('641217512') AND (GROUP_CONCAT(vt1.c0))))||(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (((((vt1.c1) BETWEEN ('641217512') AND (GROUP_CONCAT(vt1.c0))))||(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((((vt1.c1) BETWEEN ('641217512') AND (GROUP_CONCAT(vt1.c0))))||(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL * FROM vt1, vt0, rt1;
SELECT * FROM vt1, vt0, rt1 WHERE (LTRIM(rt1.c0) COLLATE BINARY) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE ((NOT (LTRIM(rt1.c0) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE (((LTRIM(rt1.c0) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, vt0, rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((vt1.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((vt1.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)>(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)>(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)>(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 HAVING NULL UNION ALL SELECT rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 HAVING NULL UNION ALL SELECT rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c3, vt1.c1, rt1.c2, rt1.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (LIKELY(DISTINCT ((x'')||(vt0.c0)))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (LIKELY(DISTINCT ((x'')||(vt0.c0)))))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((LIKELY(DISTINCT ((x'')||(vt0.c0)))) ISNULL));
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c3, vt1.c1, rt1.c2, rt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(NULL AS BLOB) COLLATE BINARY FULL OUTER JOIN vt0 ON JULIANDAY(rt1.c2, rt1.c1, rt1.c3) COLLATE NOCASE;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c3, vt1.c1, rt1.c2, rt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(NULL AS BLOB) COLLATE BINARY FULL OUTER JOIN vt0 ON JULIANDAY(rt1.c2, rt1.c1, rt1.c3) COLLATE NOCASE WHERE (((((vt1.c1)AND('lr1k')))OR(vt1.c1)) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c3, vt1.c1, rt1.c2, rt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(NULL AS BLOB) COLLATE BINARY FULL OUTER JOIN vt0 ON JULIANDAY(rt1.c2, rt1.c1, rt1.c3) COLLATE NOCASE WHERE ((NOT (((((vt1.c1)AND('lr1k')))OR(vt1.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c3, vt1.c1, rt1.c2, rt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(NULL AS BLOB) COLLATE BINARY FULL OUTER JOIN vt0 ON JULIANDAY(rt1.c2, rt1.c1, rt1.c3) COLLATE NOCASE WHERE (((((((vt1.c1)AND('lr1k')))OR(vt1.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c3, vt1.c1, rt1.c2, rt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(NULL AS BLOB) COLLATE BINARY FULL OUTER JOIN vt0 ON JULIANDAY(rt1.c2, rt1.c1, rt1.c3) COLLATE NOCASE;
SELECT vt1.c1, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON HEX('-754918590') GROUP BY vt1.c1, rt1.c1, vt1.c0;
SELECT ALL vt1.c1, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON HEX('-754918590') WHERE ((~ (((((vt1.c0)AND(rt1.c0)))OR(rt1.c3))))) GROUP BY vt1.c1, rt1.c1, vt1.c0 UNION SELECT vt1.c1, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON HEX('-754918590') WHERE ((NOT ((~ (((((vt1.c0)AND(rt1.c0)))OR(rt1.c3))))))) GROUP BY vt1.c1, rt1.c1, vt1.c0 UNION SELECT vt1.c1, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON HEX('-754918590') WHERE ((((~ (((((vt1.c0)AND(rt1.c0)))OR(rt1.c3))))) ISNULL)) GROUP BY vt1.c1, rt1.c1, vt1.c0;
SELECT vt1.c1, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON HEX('-754918590') GROUP BY vt1.c1, rt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (+ (vt1.c1)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((+ (vt1.c1)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((+ (vt1.c1))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (+ (vt1.c1)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((+ (vt1.c1)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((+ (vt1.c1))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c3 FROM rt1;
SELECT ALL rt1.c2, rt1.c3 FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c1 END) NOT BETWEEN ((- (rt1.c3))) AND (rt1.c1 COLLATE NOCASE))) UNION ALL SELECT rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c3 THEN rt1.c1 END) NOT BETWEEN ((- (rt1.c3))) AND (rt1.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL rt1.c2, rt1.c3 FROM rt1 WHERE (((((CASE WHEN rt1.c3 THEN rt1.c1 END) NOT BETWEEN ((- (rt1.c3))) AND (rt1.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL rt1.c2, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c1 AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(vt1.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c0)LIKE(vt1.c1)) IN ())) GROUP BY vt1.c1, vt0.c0 UNION SELECT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0)LIKE(vt1.c1)) IN ())))) GROUP BY vt1.c1, vt0.c0 UNION SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c0)LIKE(vt1.c1)) IN ())) ISNULL)) GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0;
SELECT rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0;
SELECT rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0;
SELECT rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c3, vt1.c0, rt1.c1, vt1.c1, vt0.c0;
SELECT vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c1)%(vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt1.c1)%(vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c1)%(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1 NOT INDEXED, vt0 WHERE (((0.9996544927196588) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (vt1.c1))) GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1, vt0 WHERE ((NOT (((0.9996544927196588) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (vt1.c1))))) GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1, vt0 WHERE (((((0.9996544927196588) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (vt1.c1))) ISNULL)) GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c3, vt1.c0, rt1.c1 FROM vt1, rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c0, vt1.c1 HAVING CASE WHEN TOTAL(MIN(rt1.c0)) COLLATE BINARY THEN AVG(AVG(AVG(rt1.c3))) END UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CASE WHEN TOTAL(MIN(rt1.c0)) COLLATE BINARY THEN AVG(AVG(AVG(rt1.c3))) END)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CASE WHEN TOTAL(MIN(rt1.c0)) COLLATE BINARY THEN AVG(AVG(AVG(rt1.c3))) END) ISNULL);
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c2) IS TRUE))GLOB((NOT (rt1.c2))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c2) IS TRUE))GLOB((NOT (rt1.c2))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c2) IS TRUE))GLOB((NOT (rt1.c2))))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, vt1.c1, vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0)) AS BLOB);
SELECT DISTINCT rt1.c1, vt1.c1, vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0)) AS BLOB) WHERE (CASE WHEN ((((((((rt1.c0)OR(rt1.c2)))OR(0.6630488351992774)))OR(rt1.c1)))AND(rt1.c0)) THEN CASE ''  WHEN rt1.c0 THEN rt1.c0 ELSE x'' END ELSE vt1.c1 COLLATE NOCASE END) UNION SELECT DISTINCT rt1.c1, vt1.c1, vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0)) AS BLOB) WHERE ((NOT (CASE WHEN ((((((((rt1.c0)OR(rt1.c2)))OR(0.6630488351992774)))OR(rt1.c1)))AND(rt1.c0)) THEN CASE ''  WHEN rt1.c0 THEN rt1.c0 ELSE x'' END ELSE vt1.c1 COLLATE NOCASE END))) UNION SELECT DISTINCT rt1.c1, vt1.c1, vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0)) AS BLOB) WHERE (((CASE WHEN ((((((((rt1.c0)OR(rt1.c2)))OR(0.6630488351992774)))OR(rt1.c1)))AND(rt1.c0)) THEN CASE ''  WHEN rt1.c0 THEN rt1.c0 ELSE x'' END ELSE vt1.c1 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT rt1.c1, vt1.c1, vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN (vt1.c0)) AS BLOB);
SELECT ALL rt1.c3, rt1.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt1 ON rt1.c2 GROUP BY rt1.c3, rt1.c0, vt1.c1;
SELECT ALL rt1.c3, rt1.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt1 ON rt1.c2 WHERE ((((rt1.c0 IN ()))LIKE((+ (rt1.c1))))) GROUP BY rt1.c3, rt1.c0, vt1.c1 UNION SELECT rt1.c3, rt1.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt1 ON rt1.c2 WHERE ((NOT ((((rt1.c0 IN ()))LIKE((+ (rt1.c1))))))) GROUP BY rt1.c3, rt1.c0, vt1.c1 UNION SELECT ALL rt1.c3, rt1.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt1 ON rt1.c2 WHERE ((((((rt1.c0 IN ()))LIKE((+ (rt1.c1))))) ISNULL)) GROUP BY rt1.c3, rt1.c0, vt1.c1;
SELECT ALL rt1.c3, rt1.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt1 ON rt1.c2 GROUP BY rt1.c3, rt1.c0, vt1.c1;
SELECT rt1.c1, rt1.c3 FROM rt1 FULL OUTER JOIN vt1 ON '1044457448' GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c1, rt1.c3 FROM rt1 FULL OUTER JOIN vt1 ON '1044457448' GROUP BY rt1.c1, rt1.c3 HAVING ((TOTAL(COUNT(rt1.c3))) IS FALSE) UNION ALL SELECT ALL rt1.c1, rt1.c3 FROM rt1 FULL OUTER JOIN vt1 ON '1044457448' GROUP BY rt1.c1, rt1.c3 HAVING (NOT (((TOTAL(COUNT(rt1.c3))) IS FALSE))) UNION ALL SELECT rt1.c1, rt1.c3 FROM rt1 FULL OUTER JOIN vt1 ON '1044457448' GROUP BY rt1.c1, rt1.c3 HAVING ((((TOTAL(COUNT(rt1.c3))) IS FALSE)) ISNULL);
SELECT rt1.c3, rt1.c2 FROM vt1, rt1;
SELECT ALL rt1.c3, rt1.c2 FROM vt1, rt1 WHERE (CASE WHEN ((((((((rt1.c2)OR(vt1.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)) THEN (- (rt1.c3)) ELSE (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((vt1.c1))) END) UNION ALL SELECT ALL rt1.c3, rt1.c2 FROM vt1, rt1 WHERE ((NOT (CASE WHEN ((((((((rt1.c2)OR(vt1.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)) THEN (- (rt1.c3)) ELSE (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((vt1.c1))) END))) UNION ALL SELECT rt1.c3, rt1.c2 FROM vt1, rt1 WHERE (((CASE WHEN ((((((((rt1.c2)OR(vt1.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)) THEN (- (rt1.c3)) ELSE (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((vt1.c1))) END) ISNULL));
SELECT rt1.c3, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE (TYPEOF(DISTINCT rt1.c3) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (TYPEOF(DISTINCT rt1.c3) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c3) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- ((((vt0.c0))==((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- ((((vt0.c0))=((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- ((((vt0.c0))==((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(SUM(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(SUM(AVG(vt0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (x''));
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (x'')) WHERE (((((vt1.c1)AND(0.12225495853773205)))|((('') BETWEEN (vt1.c0) AND (vt1.c1))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (x'')) WHERE ((NOT (((((vt1.c1)AND(0.12225495853773205)))|((('') BETWEEN (vt1.c0) AND (vt1.c1))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (x'')) WHERE (((((((vt1.c1)AND(0.12225495853773205)))|((('') BETWEEN (vt1.c0) AND (vt1.c1))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (x''));
SELECT DISTINCT rt1.c3 FROM vt0, rt1 NOT INDEXED;
SELECT DISTINCT rt1.c3 FROM vt0, rt1 WHERE (json_remove((rt1.c1 IN (rt1.c2)), (vt0.c0 IN ()))) UNION SELECT DISTINCT rt1.c3 FROM vt0, rt1 WHERE ((NOT (json_remove((rt1.c1 IN (rt1.c2)), (vt0.c0 IN ()))))) UNION SELECT DISTINCT rt1.c3 FROM vt0, rt1 WHERE (((json_remove((rt1.c1 IN (rt1.c2)), (vt0.c0 IN ()))) ISNULL));
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM vt1, rt1 WHERE (((x'') NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c3 END) AND ((vt1.c1 IN ())))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM vt1, rt1 WHERE ((NOT (((x'') NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c3 END) AND ((vt1.c1 IN ())))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 WHERE (((((x'') NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c3 END) AND ((vt1.c1 IN ())))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1 HAVING '-443976516' UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1 HAVING (NOT ('-443976516')) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1 HAVING (('-443976516') ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1 HAVING '-443976516' UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1 HAVING (NOT ('-443976516')) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1 HAVING (('-443976516') ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt0.c0)!=(vt1.c1)))) GROUP BY vt1.c0, vt1.c1;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((((x'') BETWEEN (vt1.c1) AND (vt1.c0)))-(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((x'') BETWEEN (vt1.c1) AND (vt1.c0)))-(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))))) UNION ALL SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (((((((x'') BETWEEN (vt1.c1) AND (vt1.c0)))-(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('-2051469250') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ('-2051469250'))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('-2051469250') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0;
SELECT ALL rt1.c2, vt0.c0 FROM vt0, rt1 WHERE ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END))<>((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))) GROUP BY rt1.c2, vt0.c0 UNION SELECT rt1.c2, vt0.c0 FROM vt0, rt1 WHERE ((NOT ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END))!=((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))))) GROUP BY rt1.c2, vt0.c0 UNION SELECT ALL rt1.c2, vt0.c0 FROM vt0, rt1 WHERE ((((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END))<>((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))) ISNULL)) GROUP BY rt1.c2, vt0.c0;
SELECT rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c2, vt0.c0;
SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 HAVING ((CAST(vt1.c0 AS TEXT)) IS FALSE) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 HAVING (NOT (((CAST(vt1.c0 AS TEXT)) IS FALSE))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 HAVING ((((CAST(vt1.c0 AS TEXT)) IS FALSE)) ISNULL);
SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 HAVING ((CAST(vt1.c0 AS TEXT)) IS FALSE) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 HAVING (NOT (((CAST(vt1.c0 AS TEXT)) IS FALSE))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 HAVING ((((CAST(vt1.c0 AS TEXT)) IS FALSE)) ISNULL);
SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0, vt0.c0, rt1.c3;
SELECT SUM((((~ (x'')))%((((rt1.c1))>((rt1.c1)))))) FROM vt0, rt1, vt1;
SELECT * FROM rt1, vt1 CROSS JOIN vt0 ON json_extract(CAST(rt1.c2 AS BLOB), CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END);
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)) IN ())) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((((~ (vt1.c1)))&(((vt1.c1)LIKE(vt1.c1))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((((~ (vt1.c1)))&(((vt1.c1)LIKE(vt1.c1))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((((((~ (vt1.c1)))&(((vt1.c1)LIKE(vt1.c1))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3;
SELECT ALL vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3 HAVING rt1.c1 UNION ALL SELECT vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3 HAVING (NOT (rt1.c1)) UNION ALL SELECT vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3 HAVING ((rt1.c1) ISNULL);
SELECT vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3;
SELECT ALL vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3 HAVING rt1.c1 UNION ALL SELECT vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3 HAVING (NOT (rt1.c1)) UNION ALL SELECT vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3 HAVING ((rt1.c1) ISNULL);
SELECT vt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY vt1.c1, rt1.c3;
SELECT MIN((((vt1.c0)!=(vt1.c1)) IN ())) FROM vt1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (CASE vt1.c1  WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE RTRIM) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (CASE vt1.c1  WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE RTRIM))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (((CASE vt1.c1  WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((vt1.c1)IS('-1601038062')) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c1)IS('-1601038062')) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c1)IS('-1601038062')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (SQLITE_VERSION()) GROUP BY vt0.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY vt0.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL rt1.c2, vt1.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt1 ON (vt1.c0 IN (((((NULL)OR(vt0.c0)))OR(rt1.c2)))) GROUP BY rt1.c2, vt1.c1, vt1.c0;
SELECT ALL rt1.c2, vt1.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt1 ON (vt1.c0 IN (((((NULL)OR(vt0.c0)))OR(rt1.c2)))) GROUP BY rt1.c2, vt1.c1, vt1.c0 HAVING ((((GROUP_CONCAT(COUNT(*)) COLLATE NOCASE)OR(COUNT(*))))OR(SUM(SUM(rt1.c2)))) UNION ALL SELECT ALL rt1.c2, vt1.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt1 ON (vt1.c0 IN (((((NULL)OR(vt0.c0)))OR(rt1.c2)))) GROUP BY rt1.c2, vt1.c1, vt1.c0 HAVING (NOT (((((GROUP_CONCAT(COUNT(*)) COLLATE NOCASE)OR(COUNT(*))))OR(SUM(SUM(rt1.c2)))))) UNION ALL SELECT rt1.c2, vt1.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt1 ON (vt1.c0 IN (((((NULL)OR(vt0.c0)))OR(rt1.c2)))) GROUP BY rt1.c2, vt1.c1, vt1.c0 HAVING ((((((GROUP_CONCAT(COUNT(*)) COLLATE NOCASE)OR(COUNT(*))))OR(SUM(SUM(rt1.c2))))) ISNULL);
SELECT rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE ((('1325970089' COLLATE RTRIM) NOT BETWEEN (HEX(rt1.c0)) AND (((rt1.c0) NOTNULL)))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT ((('1325970089' COLLATE RTRIM) NOT BETWEEN (HEX(rt1.c0)) AND (((rt1.c0) NOTNULL)))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((((('1325970089' COLLATE RTRIM) NOT BETWEEN (HEX(rt1.c0)) AND (((rt1.c0) NOTNULL)))) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0, rt1.c3, vt1.c1, vt1.c0 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0, rt1.c3, vt1.c1, vt1.c0 FROM vt1, vt0, rt1 WHERE (((((rt1.c0)-(rt1.c0)))>(((rt1.c3)<<('158522433'))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0, rt1.c3, vt1.c1, vt1.c0 FROM vt1, vt0, rt1 WHERE ((NOT (((((rt1.c0)-(rt1.c0)))>(((rt1.c3)<<('158522433'))))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0, rt1.c3, vt1.c1, vt1.c0 FROM vt1, vt0, rt1 WHERE (((((((rt1.c0)-(rt1.c0)))>(((rt1.c3)<<('158522433'))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, vt0.c0, rt1.c3, vt1.c1, vt1.c0 FROM vt1, vt0, rt1;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON ((rt1.c2 COLLATE BINARY)IS(((NULL)+(rt1.c0)))) GROUP BY rt1.c0, rt1.c3;
SELECT rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON ((rt1.c2 COLLATE BINARY)IS(((NULL)+(rt1.c0)))) WHERE ((- (7.10602126E8))) GROUP BY rt1.c0, rt1.c3 UNION SELECT rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON ((rt1.c2 COLLATE BINARY)IS(((NULL)+(rt1.c0)))) WHERE ((NOT ((- (7.10602126E8))))) GROUP BY rt1.c0, rt1.c3 UNION SELECT rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON ((rt1.c2 COLLATE BINARY)IS(((NULL)+(rt1.c0)))) WHERE ((((- (7.10602126E8))) ISNULL)) GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt0 ON ((rt1.c2 COLLATE BINARY)IS(((NULL)+(rt1.c0)))) GROUP BY rt1.c0, rt1.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN ((MAX(vt0.c0))&(AVG(vt0.c0))) THEN AVG(GROUP_CONCAT(MAX(NULL))) ELSE ((((((((vt0.c0)OR(MAX(MIN(vt0.c0)))))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN ((MAX(vt0.c0))&(AVG(vt0.c0))) THEN AVG(GROUP_CONCAT(MAX(NULL))) ELSE ((((((((vt0.c0)OR(MAX(MIN(vt0.c0)))))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN ((MAX(vt0.c0))&(AVG(vt0.c0))) THEN AVG(GROUP_CONCAT(MAX(NULL))) ELSE ((((((((vt0.c0)OR(MAX(MIN(vt0.c0)))))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END) ISNULL);
SELECT * FROM vt1, rt1, vt0;
SELECT * FROM vt1, rt1, vt0 WHERE (((((((rt1.c1)>=(rt1.c2)))AND(rt1.c2 COLLATE RTRIM)))OR(NULL COLLATE BINARY))) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE ((NOT (((((((rt1.c1)>=(rt1.c2)))AND(rt1.c2 COLLATE RTRIM)))OR(NULL COLLATE BINARY))))) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE (((((((((rt1.c1)>=(rt1.c2)))AND(rt1.c2 COLLATE RTRIM)))OR(NULL COLLATE BINARY))) ISNULL));
SELECT * FROM vt1, rt1, vt0;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (CASE vt1.c1  WHEN NULL THEN (((vt1.c0, vt1.c0, '-1296087976')) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) END) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE vt1.c1  WHEN NULL THEN (((vt1.c0, vt1.c0, '-1296087976')) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) END))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (((CASE vt1.c1  WHEN NULL THEN (((vt1.c0, vt1.c0, '-1296087976')) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) END) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c1)) THEN ((((vt1.c0)AND(vt0.c0)))OR(NULL)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN (vt1.c1 IN (vt1.c1)) THEN ((((vt1.c0)AND(vt0.c0)))OR(NULL)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN (vt1.c1 IN (vt1.c1)) THEN ((((vt1.c0)AND(vt0.c0)))OR(NULL)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1, rt1.c2 FROM rt1, vt1;
SELECT vt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((((rt1.c1 IN (rt1.c0, rt1.c0))) NOT BETWEEN (((rt1.c0)/(vt1.c0))) AND (((rt1.c1)-(rt1.c0))))) UNION ALL SELECT vt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((NOT ((((rt1.c1 IN (rt1.c0, rt1.c0))) NOT BETWEEN (((rt1.c0)/(vt1.c0))) AND (((rt1.c1)-(rt1.c0))))))) UNION ALL SELECT ALL vt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((((((rt1.c1 IN (rt1.c0, rt1.c0))) NOT BETWEEN (((rt1.c0)/(vt1.c0))) AND (((rt1.c1)-(rt1.c0))))) ISNULL));
SELECT ALL vt1.c1, rt1.c2 FROM rt1, vt1;
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE ((x'' IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE ((NOT ((x'' IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE ((((x'' IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))||((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))||((+ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))||((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING UPPER(SUM(vt1.c1)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (UPPER(SUM(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((UPPER(SUM(vt1.c1))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING UPPER(SUM(vt1.c1)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (UPPER(SUM(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((UPPER(SUM(vt1.c1))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((TRIM(DISTINCT vt1.c1) IN (-339720965))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT ((TRIM(DISTINCT vt1.c1) IN (-339720965))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((((TRIM(DISTINCT vt1.c1) IN (-339720965))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((((rt1.c0)IS('1818504452')))LIKE(CASE 0.09832065810541646  WHEN '' THEN rt1.c2 ELSE rt1.c0 END))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c0)IS('1818504452')))LIKE(CASE 0.09832065810541646  WHEN '' THEN rt1.c2 ELSE rt1.c0 END))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((((((rt1.c0)IS('1818504452')))LIKE(CASE 0.09832065810541646  WHEN '' THEN rt1.c2 ELSE rt1.c0 END))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((COUNT(*)) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (((((COUNT(*)) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((((COUNT(*)) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL)) ISNULL);
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((COUNT(*)) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (((((COUNT(*)) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((((COUNT(*)) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL)) ISNULL);
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c1 IN ()) THEN ('1830930206' IN ()) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c1 IN ()) THEN ('1830930206' IN ()) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c1 IN ()) THEN ('1830930206' IN ()) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 END)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((0.3436083875139381 IN ()))*(TRIM(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((0.3436083875139381 IN ()))*(TRIM(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((0.3436083875139381 IN ()))*(TRIM(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 HAVING CAST(TOTAL(vt1.c1) AS NUMERIC) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 HAVING (NOT (CAST(TOTAL(vt1.c1) AS NUMERIC))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 HAVING ((CAST(TOTAL(vt1.c1) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 HAVING CAST(TOTAL(vt1.c1) AS NUMERIC) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 HAVING (NOT (CAST(TOTAL(vt1.c1) AS NUMERIC))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 HAVING ((CAST(TOTAL(vt1.c1) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2, vt0.c0, vt1.c0;
SELECT MIN((((vt0.c0))<(((((vt0.c0))>((vt0.c0))))))) FROM vt0;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0 WHERE (COALESCE((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), LTRIM(NULL, vt1.c1))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0 NOT INDEXED WHERE ((NOT (COALESCE((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), LTRIM(NULL, vt1.c1))))) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0 WHERE (((COALESCE((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), LTRIM(NULL, vt1.c1))) ISNULL));
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c3, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.7340056969534836)OR((vt0.c0 IN (rt1.c0)))))OR(((rt1.c1)&(rt1.c3))));
SELECT DISTINCT rt1.c3, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.7340056969534836)OR((vt0.c0 IN (rt1.c0)))))OR(((rt1.c1)&(rt1.c3)))) WHERE (CAST(((rt1.c3)OR(rt1.c2)) AS INTEGER)) UNION SELECT DISTINCT rt1.c3, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.7340056969534836)OR((vt0.c0 IN (rt1.c0)))))OR(((rt1.c1)&(rt1.c3)))) WHERE ((NOT (CAST(((rt1.c3)OR(rt1.c2)) AS INTEGER)))) UNION SELECT DISTINCT rt1.c3, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.7340056969534836)OR((vt0.c0 IN (rt1.c0)))))OR(((rt1.c1)&(rt1.c3)))) WHERE (((CAST(((rt1.c3)OR(rt1.c2)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.7340056969534836)OR((vt0.c0 IN (rt1.c0)))))OR(((rt1.c1)&(rt1.c3))));
SELECT ALL rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0;
SELECT rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (((rt1.c3)-(-550293392)) COLLATE BINARY) GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((NOT (((rt1.c3)-(-550293392)) COLLATE BINARY))) GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (((((rt1.c3)-(-550293392)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 HAVING MAX((rt1.c0 IN ())) UNION ALL SELECT rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (MAX((rt1.c0 IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 NOT INDEXED GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 HAVING ((MAX((rt1.c0 IN ()))) ISNULL);
SELECT rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 HAVING MAX((rt1.c0 IN ())) UNION ALL SELECT rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (MAX((rt1.c0 IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 NOT INDEXED GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 HAVING ((MAX((rt1.c0 IN ()))) ISNULL);
SELECT rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c3, vt0.c0, rt1.c1, rt1.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.7686563379770228)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.7686563379770228)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.7686563379770228)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt1.c0, vt1.c1, rt1.c0 FROM rt1, vt1;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt1.c0, vt1.c1, rt1.c0 FROM rt1, vt1 WHERE ((CAST(vt1.c1 AS INTEGER) IN ())) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt1.c0, vt1.c1, rt1.c0 FROM rt1, vt1 WHERE ((NOT ((CAST(vt1.c1 AS INTEGER) IN ())))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt1.c0, vt1.c1, rt1.c0 FROM rt1, vt1 WHERE ((((CAST(vt1.c1 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt1.c0, vt1.c1, rt1.c0 FROM rt1, vt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB) WHERE ((((rt1.c3 IN (1.766681167E9))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB) WHERE ((NOT ((((rt1.c3 IN (1.766681167E9))) ISNULL)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB) WHERE ((((((rt1.c3 IN (1.766681167E9))) ISNULL)) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0 HAVING SUM(vt0.c0 COLLATE NOCASE) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0 HAVING (NOT (SUM(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0 HAVING ((SUM(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0 HAVING SUM(vt0.c0 COLLATE NOCASE) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0 HAVING (NOT (SUM(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0 HAVING ((SUM(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT COALESCE(vt1.c1, vt1.c0, vt1.c1, vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (TYPEOF(DISTINCT COALESCE(vt1.c1, vt1.c0, vt1.c1, vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE (((TYPEOF(DISTINCT COALESCE(vt1.c1, vt1.c0, vt1.c1, vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (vt1.c1) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
