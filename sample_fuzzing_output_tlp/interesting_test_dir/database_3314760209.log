-- Time: 2024/06/09 20:45:18
-- Database: database9
-- Database version: 3.40.0
-- seed value: 3314760209
PRAGMA cache_size = 50000; -- 12ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
UPDATE OR FAIL vt1 SET c0=NULL WHERE (vt1.c0 IN ()) COLLATE NOCASE; -- 0ms;
UPDATE OR ABORT t0 SET (c0, c0)=(x'2d3b', '2{æ¾Œ]') WHERE ((t0.c0 COLLATE BINARY) NOT BETWEEN (json_patch('-1988661364', t0.c0)) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '22351'); -- 1ms;
REINDEX; -- 0ms;
PRAGMA cache_size = -317906312615721981; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.5653278415566136), (NULL), (NULL); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (-835431967), (''), (0.8549684800832252), (NULL), (0.06703492193170646); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.5653278415566136, c0=NULL WHERE (NOT ((- (vt1.c0)))); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET c0=-1722089989 WHERE (((t0.c0) NOT BETWEEN (x'a58a') AND (t0.c0)) IN (((t0.c0) ISNULL))); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-1.722089989E9 WHERE 0.8816407745100694; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (((((((x'4ab1') IS FALSE))AND(((0.4516486975351399)/('2034695249')))))AND(((-1.722089989E9)>=(0xffffffff89776f8c))))); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.23347352088138618; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET c0=-1.988661364E9 WHERE (vt1.c0 IN ()); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.5322845107098677) WHERE ((CAST(t0.c0 AS NUMERIC))|((+ (t0.c0)))); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=NULL, c0=x''; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(0.06703492193170646) WHERE ((((t0.c0 COLLATE RTRIM)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE BINARY)); -- 0ms;
UPDATE OR FAIL t0 SET c0='', c0='' WHERE CASE WHEN (+ (t0.c0)) THEN t0.c0 COLLATE NOCASE END; -- 0ms;
UPDATE vt1 SET (c0)=('1706104517') WHERE ((((x'8dfa')GLOB('1979265987'))) ISNULL); -- 0ms;
UPDATE OR REPLACE vt1 SET c0='0.5322845107098677', c0=573130915 WHERE ((((vt1.c0)AND(vt1.c0)))/(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('341193345'); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c1; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c86; -- 0ms;
ALTER TABLE t0 ADD COLUMN c53 REAL; -- 0ms;
UPDATE OR REPLACE vt1 SET c0=0.7663058221538221 WHERE CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((0.32417360538604345) ISNULL) END; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'', 1692917253), (0.07141888907788152, 0.4516486975351399), (5.73130915E8, -1.722089989E9); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE t0 SET c53=x'' WHERE t0.c53; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 921677871);\n; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (CAST(((1692917253)AND(x'')) AS BLOB)); -- 1ms;
UPDATE OR ABORT t0 SET c53=NULL, c53=x''; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO t0(c53, c86) VALUES (0.1255304965874262, NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.47554907345219954), (0.4714420540441666), (0.06703492193170646); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('0.7663058221538221'); -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i68 ON t0(x'3cf4',CAST(((c86) NOT BETWEEN (c86) AND (c86)) AS NUMERIC)); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i57 ON t0(((LOWER(DISTINCT 0.03461121597932382))GLOB((((c53, c53, c53))>((c86, c86, c53))))) ASC,(((x'')) BETWEEN ((LIKELIHOOD(c53, 0.19145273150473785))) AND ((c86 COLLATE NOCASE))) ASC); -- 0ms;
CREATE INDEX i88 ON t0(((((((c53)OR('\n0-x5#BBé¥¥')))OR(c86)))>>(494386152)),((((c53) BETWEEN (c86) AND (c86)))/(((c86) BETWEEN (c86) AND (c86))))); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA threads; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
INSERT OR REPLACE INTO t0(c53) VALUES (0.32417360538604345); -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ABORT INTO t0(c86, c53) VALUES (x'', '-553895654'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (-1233510457), (x''), (0.46101088150150926); -- 0ms;
UPDATE OR IGNORE t0 SET (c53)=(')') WHERE NULL COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO t0(c86) VALUES (''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '58315'); -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', 0.6148955537975727), (x'', NULL), (0.684964976108113, 0x74db6b81) ON CONFLICT DO NOTHING; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA stats; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE VIRTUAL TABLE vt20 USING fts4(c0 UNINDEXED); -- 0ms;
INSERT INTO vt20(vt20) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
CREATE TEMP TABLE t1 (c0 REAL UNIQUE NOT NULL ); -- 0ms;
INSERT INTO vt20(vt20) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE t0 SET c53='	c\n)?1n'; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt20(vt20, rank) VALUES('merge', 0);\n; -- 0ms;
INSERT INTO vt20(vt20, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '58419'); -- 0ms;
INSERT OR REPLACE INTO vt20(c0) VALUES (''), (NULL), (x'93b27696'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('}3S'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (NULL), (x''); -- 0ms;
PRAGMA incremental_vacuum(-533357993); -- 0ms;
UPDATE t0 SET c0=x'8ea131d1'; -- 1ms;
UPDATE OR FAIL t0 SET c0='-1069224244' WHERE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c0))) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((SQLITE_COMPILEOPTION_USED(t0.c0)))>((((vt1.c0)==(vt1.c0)))));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((SQLITE_COMPILEOPTION_USED(t0.c0)))>((((vt1.c0)==(vt1.c0))))) WHERE (LOWER(t0.c0) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((SQLITE_COMPILEOPTION_USED(t0.c0)))>((((vt1.c0)=(vt1.c0))))) WHERE ((NOT (LOWER(t0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((SQLITE_COMPILEOPTION_USED(t0.c0)))>((((vt1.c0)==(vt1.c0))))) WHERE (((LOWER(t0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((SQLITE_COMPILEOPTION_USED(t0.c0)))>((((vt1.c0)==(vt1.c0)))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0))) NOTNULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)IS(vt1.c0))) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)IS(vt1.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL MAX(((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0)-(vt1.c0)))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('')))))) FROM vt1;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))GLOB(CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))GLOB(CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))GLOB(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (TRIM(DISTINCT '' COLLATE NOCASE, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (TRIM(DISTINCT '' COLLATE NOCASE, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((TRIM(DISTINCT '' COLLATE NOCASE, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON (((IFNULL(DISTINCT vt1.c0, vt1.c0)))>=(((((vt1.c0))<=((vt1.c0)))))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON (((IFNULL(DISTINCT vt1.c0, vt1.c0)))>=(((((vt1.c0))<=((vt1.c0)))))) WHERE (((((t0.c0)==('0.5322845107098677'))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON (((IFNULL(DISTINCT vt1.c0, vt1.c0)))>=(((((vt1.c0))<=((vt1.c0)))))) WHERE ((NOT (((((t0.c0)==('0.5322845107098677'))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON (((IFNULL(DISTINCT vt1.c0, vt1.c0)))>=(((((vt1.c0))<=((vt1.c0)))))) WHERE (((((((t0.c0)==('0.5322845107098677'))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON (((IFNULL(DISTINCT vt1.c0, vt1.c0)))>=(((((vt1.c0))<=((vt1.c0)))))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((MAX(COUNT(vt1.c0)), MAX(vt1.c0), TOTAL(vt1.c0))) AND ((MAX(TOTAL(vt1.c0)), AVG(vt1.c0), CAST(COUNT(*) AS INTEGER)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((MAX(COUNT(vt1.c0)), MAX(vt1.c0), TOTAL(vt1.c0))) AND ((MAX(TOTAL(vt1.c0)), AVG(vt1.c0), CAST(COUNT(*) AS INTEGER)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((MAX(COUNT(vt1.c0)), MAX(vt1.c0), TOTAL(vt1.c0))) AND ((MAX(TOTAL(vt1.c0)), AVG(vt1.c0), CAST(COUNT(*) AS INTEGER))))) ISNULL);
SELECT TOTAL(t0.c0) FROM t0;
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON (+ (((vt1.c0)IS NOT(vt1.c0))));
SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON (+ (((vt1.c0)IS NOT(vt1.c0)))) WHERE (CASE WHEN ((t0.c0)%(vt1.c0)) THEN (((vt1.c0, NULL, vt1.c0))>=((vt1.c0, vt1.c0, t0.c0))) ELSE (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON (+ (((vt1.c0)IS NOT(vt1.c0)))) WHERE ((NOT (CASE WHEN ((t0.c0)%(vt1.c0)) THEN (((vt1.c0, NULL, vt1.c0))>=((vt1.c0, vt1.c0, t0.c0))) ELSE (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON (+ (((vt1.c0)IS NOT(vt1.c0)))) WHERE (((CASE WHEN ((t0.c0)%(vt1.c0)) THEN (((vt1.c0, NULL, vt1.c0))>=((vt1.c0, vt1.c0, t0.c0))) ELSE (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END) ISNULL));
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON (+ (((vt1.c0)IS NOT(vt1.c0))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 WHERE (((rtreenode(vt1.c0, t0.c0))<>(LOWER(DISTINCT vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE ((NOT (((rtreenode(vt1.c0, t0.c0))<>(LOWER(DISTINCT vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE (((((rtreenode(vt1.c0, t0.c0))<>(LOWER(DISTINCT vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON HEX(((((t0.c0)OR(t0.c0)))OR(vt1.c0))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON HEX(((((t0.c0)OR(t0.c0)))OR(vt1.c0))) GROUP BY vt1.c0 HAVING MIN(((SUM(AVG(AVG(MAX(vt1.c0)))))<=(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON HEX(((((t0.c0)OR(t0.c0)))OR(vt1.c0))) GROUP BY vt1.c0 HAVING (NOT (MIN(((SUM(AVG(AVG(MAX(vt1.c0)))))<=(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON HEX(((((t0.c0)OR(t0.c0)))OR(vt1.c0))) GROUP BY vt1.c0 HAVING ((MIN(((SUM(AVG(AVG(MAX(vt1.c0)))))<=(vt1.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((~ (t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((~ (t0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM t0 WHERE ((((~ (t0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (LIKELY((vt1.c0 IN ()))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (LIKELY((vt1.c0 IN ()))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((LIKELY((vt1.c0 IN ()))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(COUNT(vt1.c0)))|((NOT (vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(vt1.c0)))|((NOT (vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(COUNT(vt1.c0)))|((NOT (vt1.c0))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)LIKE('-189270244'))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((~ (((vt1.c0)LIKE('-189270244'))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((~ (((vt1.c0)LIKE('-189270244'))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))*(-8.35431967E8))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)IS NOT(t0.c0)))*(-8.35431967E8))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)IS NOT(t0.c0)))*(-8.35431967E8))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN (t0.c0))) AND ((((t0.c0))<>((t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN (t0.c0))) AND ((((t0.c0))!=((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN (t0.c0))) AND ((((t0.c0))!=((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING SUM(AVG(t0.c0)) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(AVG(t0.c0)))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((SUM(AVG(t0.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1, t0 WHERE (((CHAR(t0.c0)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((NOT (((CHAR(t0.c0)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 WHERE (((((CHAR(t0.c0)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (LIKE(((vt1.c0)OR(0.38341593201509816)), vt1.c0 COLLATE NOCASE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (LIKE(((vt1.c0)OR(0.38341593201509816)), vt1.c0 COLLATE NOCASE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((LIKE(((vt1.c0)OR(0.38341593201509816)), vt1.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING CASE WHEN ((((t0.c0)OR(SUM(GROUP_CONCAT(t0.c0)))))AND(AVG(vt1.c0))) THEN AVG(COUNT(*)) END UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN ((((t0.c0)OR(SUM(GROUP_CONCAT(t0.c0)))))AND(AVG(vt1.c0))) THEN AVG(COUNT(*)) END)) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN ((((t0.c0)OR(SUM(GROUP_CONCAT(t0.c0)))))AND(AVG(vt1.c0))) THEN AVG(COUNT(*)) END) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)GLOB(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT (((t0.c0)GLOB(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((NOT (((t0.c0)GLOB(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT ((NOT (vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((((NOT (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((0.7849976279760942)OR(t0.c0 COLLATE BINARY)))AND(((t0.c0) NOT BETWEEN ('-1284143163') AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((0.7849976279760942)OR(t0.c0 COLLATE BINARY)))AND(((t0.c0) NOT BETWEEN ('-1284143163') AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((0.7849976279760942)OR(t0.c0 COLLATE BINARY)))AND(((t0.c0) NOT BETWEEN ('-1284143163') AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((MAX(vt1.c0)) BETWEEN (TOTAL(MIN(COUNT(-710310325)))) AND (((GROUP_CONCAT(t0.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (((MAX(vt1.c0)) BETWEEN (TOTAL(MIN(COUNT(-710310325)))) AND (((GROUP_CONCAT(t0.c0)) NOT NULL))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((MAX(vt1.c0)) BETWEEN (TOTAL(MIN(COUNT(-710310325)))) AND (((GROUP_CONCAT(t0.c0)) NOT NULL)))) ISNULL);
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (((((t0.c0) IS FALSE))<>((NOT (vt1.c0))))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (((((t0.c0) IS FALSE))!=((NOT (vt1.c0))))))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((((((t0.c0) IS FALSE))!=((NOT (vt1.c0))))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE BINARY)OR(t0.c0 COLLATE BINARY)))OR(0.7616253455320808))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 COLLATE BINARY)OR(t0.c0 COLLATE BINARY)))OR(0.7616253455320808))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE BINARY)OR(t0.c0 COLLATE BINARY)))OR(0.7616253455320808))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE ((~ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((~ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((~ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING CAST((+ (SUM(SUM(COUNT(*))))) AS NUMERIC) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (CAST((+ (SUM(SUM(COUNT(*))))) AS NUMERIC))) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((CAST((+ (SUM(SUM(COUNT(*))))) AS NUMERIC)) ISNULL);
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (t0.c0) ORDER BY ((t0.c0) ISNULL) COLLATE RTRIM DESC;
SELECT ALL * FROM vt1, t0 WHERE ((NOT (t0.c0))) ORDER BY ((t0.c0) ISNULL) COLLATE RTRIM DESC;
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0) ISNULL)) ORDER BY ((t0.c0) ISNULL) COLLATE RTRIM DESC;
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (CAST(((t0.c0) NOT NULL) AS INTEGER)) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (CAST(((t0.c0) NOT NULL) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((CAST(((t0.c0) NOT NULL) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)<(t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)<(t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)<(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt1 ON ((((((((((t0.c0)IS(vt1.c0)))AND(((t0.c0) IS FALSE))))AND(vt1.c0)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0) IS FALSE)));
SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt1 ON ((((((((((t0.c0)IS(vt1.c0)))AND(((t0.c0) IS FALSE))))AND(vt1.c0)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0) IS FALSE))) WHERE ((((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0 CROSS JOIN vt1 ON ((((((((((t0.c0)IS(vt1.c0)))AND(((t0.c0) IS FALSE))))AND(vt1.c0)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0) IS FALSE))) WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt1 ON ((((((((((t0.c0)IS(vt1.c0)))AND(((t0.c0) IS FALSE))))AND(vt1.c0)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0) IS FALSE))) WHERE ((((((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))) ISNULL));
SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt1 ON ((((((((((t0.c0)IS(vt1.c0)))AND(((t0.c0) IS FALSE))))AND(vt1.c0)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0) IS FALSE)));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (((((t0.c0)AND(NULL)))AND(t0.c0))) AND (0.7663058221538221))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) NOT BETWEEN (((((t0.c0)AND(NULL)))AND(t0.c0))) AND (0.7663058221538221))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((vt1.c0) IS TRUE)) NOT BETWEEN (((((t0.c0)AND(NULL)))AND(t0.c0))) AND (0.7663058221538221))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULLIF((+ (vt1.c0)), CAST(vt1.c0 AS NUMERIC))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULLIF((+ (vt1.c0)), CAST(vt1.c0 AS NUMERIC))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((NULLIF((+ (vt1.c0)), CAST(vt1.c0 AS NUMERIC))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (- (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- (vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (- (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- (vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (LIKELY(vt1.c0)) AND (CASE vt1.c0  WHEN 0.994041193229416 THEN vt1.c0 ELSE x'' END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOT NULL)) NOT BETWEEN (LIKELY(vt1.c0)) AND (CASE vt1.c0  WHEN 0.994041193229416 THEN vt1.c0 ELSE x'' END))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL)) NOT BETWEEN (LIKELY(vt1.c0)) AND (CASE vt1.c0  WHEN 0.994041193229416 THEN vt1.c0 ELSE x'' END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 WHERE ((t0.c0 IN (t0.c0)) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((NOT ((t0.c0 IN (t0.c0)) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((((t0.c0 IN (t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt1 ON ((((vt1.c0) NOT NULL))IS NOT(((vt1.c0)AND(vt1.c0)))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 CROSS JOIN vt1 ON ((((vt1.c0) NOT NULL))IS NOT(((vt1.c0)AND(vt1.c0)))) GROUP BY t0.c0 HAVING AVG(GROUP_CONCAT(MAX(COUNT(vt1.c0)))) UNION ALL SELECT t0.c0 FROM t0 CROSS JOIN vt1 ON ((((vt1.c0) NOT NULL))IS NOT(((vt1.c0)AND(vt1.c0)))) GROUP BY t0.c0 HAVING (NOT (AVG(GROUP_CONCAT(MAX(COUNT(vt1.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 CROSS JOIN vt1 ON ((((vt1.c0) NOT NULL))IS NOT(((vt1.c0)AND(vt1.c0)))) GROUP BY t0.c0 HAVING ((AVG(GROUP_CONCAT(MAX(COUNT(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM t0, vt1;
SELECT ALL vt1.c0 FROM t0, vt1 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM t0, vt1 WHERE ((NOT (((t0.c0 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 WHERE (((((t0.c0 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0)AND(vt1.c0)))))OR(((vt1.c0)-(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0)AND(vt1.c0)))))OR(((vt1.c0)-(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0)AND(vt1.c0)))))OR(((vt1.c0)-(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)AND((- (t0.c0)))))AND(((t0.c0)<(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 COLLATE NOCASE)AND((- (t0.c0)))))AND(((t0.c0)<(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)AND((- (t0.c0)))))AND(((t0.c0)<(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((SUM(COUNT(COUNT(AVG(t0.c0)))))|(COUNT(vt1.c0))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((SUM(COUNT(COUNT(AVG(t0.c0)))))|(COUNT(vt1.c0))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((((SUM(COUNT(COUNT(AVG(t0.c0)))))|(COUNT(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (CAST((t0.c0 IN ()) AS NUMERIC)) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (CAST((t0.c0 IN ()) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((CAST((t0.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((UNICODE(vt1.c0))) AND ((((((t0.c0)AND(t0.c0)))AND('1j')))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((UNICODE(vt1.c0))) AND ((((((t0.c0)AND(t0.c0)))AND('1j')))))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((UNICODE(vt1.c0))) AND ((((((t0.c0)AND(t0.c0)))AND('1j')))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((t0.c0 COLLATE NOCASE) NOT NULL)) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT NULL)))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((t0.c0 COLLATE NOCASE) NOT NULL)) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING MAX(CASE vt1.c0  WHEN vt1.c0 THEN COUNT(t0.c0) WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN AVG(AVG(t0.c0)) END) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (MAX(CASE vt1.c0  WHEN vt1.c0 THEN COUNT(t0.c0) WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN AVG(AVG(t0.c0)) END))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((MAX(CASE vt1.c0  WHEN vt1.c0 THEN COUNT(t0.c0) WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN AVG(AVG(t0.c0)) END)) ISNULL);
SELECT MIN(((t0.c0) NOT NULL)) FROM t0 ORDER BY ((((t0.c0)/(9.21677871E8)))!=(t0.c0)) DESC  NULLS FIRST, ((CASE WHEN t0.c0 THEN '-354316500' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<<(((t0.c0)LIKE(NULL))))  NULLS LAST;
SELECT t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((t0.c0)&(vt1.c0))) NOT NULL)) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((((t0.c0)&(vt1.c0))) NOT NULL)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((((t0.c0)&(vt1.c0))) NOT NULL)) ISNULL));
SELECT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, IFNULL(DISTINCT t0.c0, vt1.c0))) AND (((- (vt1.c0)), 1325761760, t0.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE ((NOT ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, IFNULL(DISTINCT t0.c0, vt1.c0))) AND (((- (vt1.c0)), 1325761760, t0.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE ((((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, IFNULL(DISTINCT t0.c0, vt1.c0))) AND (((- (vt1.c0)), 1325761760, t0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) BETWEEN (((t0.c0) IS TRUE)) AND ((((('341193345')AND(t0.c0)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) BETWEEN (((t0.c0) IS TRUE)) AND ((((('341193345')AND(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS TEXT)) BETWEEN (((t0.c0) IS TRUE)) AND ((((('341193345')AND(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0 HAVING ((SUM(GROUP_CONCAT(vt1.c0)) IN ()) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0 HAVING (NOT (((SUM(GROUP_CONCAT(vt1.c0)) IN ()) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0 HAVING ((((SUM(GROUP_CONCAT(vt1.c0)) IN ()) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0 HAVING ((SUM(GROUP_CONCAT(vt1.c0)) IN ()) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0 HAVING (NOT (((SUM(GROUP_CONCAT(vt1.c0)) IN ()) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0 HAVING ((((SUM(GROUP_CONCAT(vt1.c0)) IN ()) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 CROSS JOIN t0 ON (+ (t0.c0)) COLLATE NOCASE GROUP BY vt1.c0;
SELECT ALL SUM(((((NULL)<=(vt1.c0)))<=(((t0.c0)>(vt1.c0))))) FROM t0, vt1;
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0)/(t0.c0)))AND(((vt1.c0) NOTNULL))))AND(((((vt1.c0)OR(vt1.c0)))AND(NULL))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (((((((vt1.c0)/(t0.c0)))AND(((vt1.c0) NOTNULL))))AND(((((vt1.c0)OR(vt1.c0)))AND(NULL))))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE (((((((((vt1.c0)/(t0.c0)))AND(((vt1.c0) NOTNULL))))AND(((((vt1.c0)OR(vt1.c0)))AND(NULL))))) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (CASE t0.c0  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) WHEN t0.c0 THEN (x'' IN ()) WHEN (~ (vt1.c0)) THEN (((vt1.c0))<((vt1.c0))) END) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (CASE t0.c0  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) WHEN t0.c0 THEN (x'' IN ()) WHEN (~ (vt1.c0)) THEN (((vt1.c0))<((vt1.c0))) END))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) WHEN t0.c0 THEN (x'' IN ()) WHEN (~ (vt1.c0)) THEN (((vt1.c0))<((vt1.c0))) END) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND ((vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND ((vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 HAVING COUNT(TOTAL('2034695249')) UNION ALL SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND ((vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL('2034695249')))) UNION ALL SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND ((vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 HAVING ((COUNT(TOTAL('2034695249'))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((json_extract(x'', t0.c0) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((json_extract(x'', t0.c0) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((((json_extract(x'', t0.c0) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)+(t0.c0)))<(((t0.c0)|(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)+(t0.c0)))<(((t0.c0)|(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)+(t0.c0)))<(((t0.c0)|(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((- (t0.c0)))>=(t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c0)))>=(t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((- (t0.c0)))>=(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING MIN(TOTAL(vt1.c0)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (MIN(TOTAL(vt1.c0)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((MIN(TOTAL(vt1.c0))) ISNULL);
SELECT vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN (((t0.c0))>((NULL))) WHEN ((vt1.c0) IS TRUE) THEN HEX(DISTINCT t0.c0) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) ELSE t0.c0 COLLATE RTRIM END;
SELECT vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN (((t0.c0))>((NULL))) WHEN ((vt1.c0) IS TRUE) THEN HEX(DISTINCT t0.c0) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) ELSE t0.c0 COLLATE RTRIM END WHERE (json_array_length(CAST(t0.c0 AS NUMERIC))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN (((t0.c0))>((NULL))) WHEN ((vt1.c0) IS TRUE) THEN HEX(DISTINCT t0.c0) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) ELSE t0.c0 COLLATE RTRIM END WHERE ((NOT (json_array_length(CAST(t0.c0 AS NUMERIC))))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN (((t0.c0))>((NULL))) WHEN ((vt1.c0) IS TRUE) THEN HEX(DISTINCT t0.c0) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) ELSE t0.c0 COLLATE RTRIM END WHERE (((json_array_length(CAST(t0.c0 AS NUMERIC))) ISNULL));
SELECT vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN (((t0.c0))>((NULL))) WHEN ((vt1.c0) IS TRUE) THEN HEX(DISTINCT t0.c0) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) ELSE t0.c0 COLLATE RTRIM END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED((~ (t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED((~ (t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((SQLITE_COMPILEOPTION_USED((~ (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) IS TRUE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))GLOB(CASE t0.c0  WHEN '' THEN t0.c0 END))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))GLOB(CASE t0.c0  WHEN '' THEN t0.c0 END))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))GLOB(CASE t0.c0  WHEN '' THEN t0.c0 END))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0 FROM vt1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 NATURAL JOIN t0 WHERE (vt1.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT (vt1.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 NATURAL JOIN t0 WHERE (((vt1.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON '' GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN vt1 ON '' GROUP BY t0.c0 HAVING TOTAL(MIN(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON '' GROUP BY t0.c0 HAVING (NOT (TOTAL(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON '' GROUP BY t0.c0 HAVING ((TOTAL(MIN(t0.c0))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt1 CROSS JOIN t0 ON ((json_object(t0.c0, vt1.c0, vt1.c0, t0.c0, vt1.c0, t0.c0))>('1396759741' COLLATE NOCASE));
SELECT t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)&(t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)&(t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) WHERE (LIKELY(DISTINCT vt1.c0)) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)&(t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) WHERE ((NOT (LIKELY(DISTINCT vt1.c0)))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)&(t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) WHERE (((LIKELY(DISTINCT vt1.c0)) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)&(t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY t0.c0, vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING SUM(TOTAL(MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(TOTAL(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((SUM(TOTAL(MIN(vt1.c0)))) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt1, t0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((ABS(DISTINCT t0.c0)) IS TRUE)) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((ABS(DISTINCT t0.c0)) IS TRUE)))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((ABS(DISTINCT t0.c0)) IS TRUE)) ISNULL));
SELECT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE (((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE (((((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(SUM(AVG(t0.c0))) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(SUM(AVG(t0.c0))) COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(SUM(AVG(t0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0 IN ())))<=((CAST(t0.c0 AS INTEGER))));
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0 IN ())))<=((CAST(t0.c0 AS INTEGER)))) WHERE ((((UNLIKELY(vt1.c0)))>((vt1.c0)))) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0 IN ())))<=((CAST(t0.c0 AS INTEGER)))) WHERE ((NOT ((((UNLIKELY(vt1.c0)))>((vt1.c0)))))) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0 IN ())))<=((CAST(t0.c0 AS INTEGER)))) WHERE ((((((UNLIKELY(vt1.c0)))>((vt1.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0 IN ())))<=((CAST(t0.c0 AS INTEGER))));
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((vt1.c0 IN (vt1.c0, vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((vt1.c0 IN (vt1.c0, vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((vt1.c0 IN (vt1.c0, vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON (((- (vt1.c0))) IS TRUE) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON (((- (vt1.c0))) IS TRUE) WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON (((- (vt1.c0))) IS TRUE) WHERE ((NOT (CAST(vt1.c0 AS TEXT) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON (((- (vt1.c0))) IS TRUE) WHERE (((CAST(vt1.c0 AS TEXT) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON (((- (vt1.c0))) IS TRUE) GROUP BY vt1.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING TOTAL('921677871') UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (TOTAL('921677871'))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((TOTAL('921677871')) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING TOTAL('921677871') UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (TOTAL('921677871'))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((TOTAL('921677871')) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((0Xffffffffc992603f) NOT BETWEEN (x'') AND (0.684964976108113)) IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((0xffffffffc992603f) NOT BETWEEN (x'') AND (0.684964976108113)) IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((((0xffffffffc992603f) NOT BETWEEN (x'') AND (0.684964976108113)) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) IN ())) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) IN ())))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) IN ())) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ('') UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((NOT (''))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((('') ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE ((((((vt1.c0, t0.c0, NULL)) NOT BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((x'', vt1.c0, t0.c0))))|(((t0.c0)=(vt1.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE ((NOT ((((((vt1.c0, t0.c0, NULL)) NOT BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((x'', vt1.c0, t0.c0))))|(((t0.c0)==(vt1.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((((((((vt1.c0, t0.c0, NULL)) NOT BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((x'', vt1.c0, t0.c0))))|(((t0.c0)==(vt1.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((MAX(AVG(AVG(t0.c0))))==(t0.c0)) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((MAX(AVG(AVG(t0.c0))))=(t0.c0)) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((MAX(AVG(AVG(t0.c0))))=(t0.c0)) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((MAX(AVG(AVG(t0.c0))))==(t0.c0)) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((MAX(AVG(AVG(t0.c0))))=(t0.c0)) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((MAX(AVG(AVG(t0.c0))))=(t0.c0)) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE WHEN '0.7616253455320808' THEN t0.c0 END THEN ((t0.c0) NOTNULL) WHEN 0.821307616833655 THEN ((t0.c0)LIKE(t0.c0)) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN PRINTF(t0.c0, t0.c0, NULL) END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE WHEN CASE WHEN '0.7616253455320808' THEN t0.c0 END THEN ((t0.c0) NOTNULL) WHEN 0.821307616833655 THEN ((t0.c0)LIKE(t0.c0)) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN PRINTF(t0.c0, t0.c0, NULL) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE WHEN CASE WHEN '0.7616253455320808' THEN t0.c0 END THEN ((t0.c0) NOTNULL) WHEN 0.821307616833655 THEN ((t0.c0)LIKE(t0.c0)) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN PRINTF(t0.c0, t0.c0, NULL) END) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON (((COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))));
SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON (((COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((((((t0.c0)OR(t0.c0)))AND(vt1.c0))))) WHERE (((vt1.c0) NOT NULL)) UNION SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON (((COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((((((t0.c0)OR(t0.c0)))AND(vt1.c0))))) WHERE ((NOT (((vt1.c0) NOT NULL)))) UNION SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON (((COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((((((t0.c0)OR(t0.c0)))AND(vt1.c0))))) WHERE (((((vt1.c0) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON (((COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN NULL THEN UNICODE(t0.c0) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN NULL THEN UNICODE(t0.c0) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN NULL THEN UNICODE(t0.c0) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((CAST(vt1.c0 AS BLOB) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((0X4c6bfae4 IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((0X4c6bfae4 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((0x4c6bfae4 IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 WHERE (vt1.c0 COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((NOT (vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE (((vt1.c0 COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(COUNT(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(t0.c0)))) UNION ALL SELECT t0.c0 FROM vt1 NOT INDEXED, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(t0.c0))) ISNULL);
SELECT ALL TOTAL((~ (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) FROM t0, vt1;
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((x'') BETWEEN (((x'') NOTNULL)) AND (x''))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (((x'') BETWEEN (((x'') NOTNULL)) AND (x''))))) UNION ALL SELECT * FROM vt1, t0 WHERE (((((x'') BETWEEN (((x'') NOTNULL)) AND (x''))) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((+ (vt1.c0)))==(vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((+ (vt1.c0)))==(vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((+ (vt1.c0)))=(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(x'')))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(x'')))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(x'')))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL * FROM t0 NOT INDEXED;
SELECT ALL * FROM t0 WHERE (CASE (~ (t0.c0))  WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0x19ebf05a THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE (~ (t0.c0))  WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0X19ebf05a THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE (~ (t0.c0))  WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0X19ebf05a THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END) ISNULL));
SELECT ALL * FROM t0 NOT INDEXED;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS TEXT)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (CASE 0Xffffffffa568d9cd  WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ (CASE 0xffffffffa568d9cd  WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((+ (CASE 0xffffffffa568d9cd  WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING SUM(((SUM(t0.c0))GLOB(t0.c0))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (SUM(((SUM(t0.c0))GLOB(t0.c0))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((SUM(((SUM(t0.c0))GLOB(t0.c0)))) ISNULL);
SELECT ALL TOTAL(((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE NOCASE))) FROM vt1;
SELECT ALL * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT) COLLATE NOCASE))) UNION ALL SELECT * FROM t0, vt1 WHERE (((CAST(vt1.c0 AS TEXT) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((x'43141122f154' IN ())) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((x'43141122f154' IN ())))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((x'43141122f154' IN ())) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((CAST(SUM(AVG('-913153985')) AS NUMERIC)) IS FALSE) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((CAST(SUM(AVG('-913153985')) AS NUMERIC)) IS FALSE))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((((CAST(SUM(AVG('-913153985')) AS NUMERIC)) IS FALSE)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ()))%((((t0.c0))<=((t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ()))%((((t0.c0))<=((t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))%((((t0.c0))<=((t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (TRIM(vt1.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (TRIM(vt1.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((TRIM(vt1.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0)) IS FALSE) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 NOT INDEXED LEFT OUTER JOIN t0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0)) IS FALSE) WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((t0.c0 IN (vt1.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0)) IS FALSE) WHERE ((NOT (((TRIM(DISTINCT vt1.c0, vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((t0.c0 IN (vt1.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0)) IS FALSE) WHERE (((((TRIM(DISTINCT vt1.c0, vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((t0.c0 IN (vt1.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((SQLITE_COMPILEOPTION_USED(t0.c0)) IS FALSE) GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '?a94' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('?a94')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('?a94') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '?a94' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('?a94')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('?a94') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN 0xffffffff868a378f THEN CAST(vt1.c0 AS BLOB) ELSE ((NULL)GLOB(vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN 0Xffffffff868a378f THEN CAST(vt1.c0 AS BLOB) ELSE ((NULL)GLOB(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN 0Xffffffff868a378f THEN CAST(vt1.c0 AS BLOB) ELSE ((NULL)GLOB(vt1.c0)) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) BETWEEN (('-233650070')) AND (((t0.c0 IN ()))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (('-233650070')) AND (((t0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) BETWEEN (('-233650070')) AND (((t0.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (json_object(CAST(0x66b79c62 AS BLOB), -233650070 COLLATE BINARY)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_object(CAST(0x66b79c62 AS BLOB), -233650070 COLLATE BINARY)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((json_object(CAST(0X66b79c62 AS BLOB), -233650070 COLLATE BINARY)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (AVG(vt1.c0) IN ()) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((AVG(vt1.c0) IN ()) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG(vt1.c0) IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (AVG(vt1.c0) IN ()) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((AVG(vt1.c0) IN ()) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG(vt1.c0) IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM t0, vt1 WHERE (CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE RTRIM) UNION ALL SELECT t0.c0 FROM t0, vt1 WHERE ((NOT (CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0, vt1 WHERE (((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (vt1.c0 IN ()) ELSE ((((t0.c0)AND(vt1.c0)))OR(t0.c0)) END GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (vt1.c0 IN ()) ELSE ((((t0.c0)AND(vt1.c0)))OR(t0.c0)) END WHERE (CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c0) IS TRUE) ELSE CAST(vt1.c0 AS BLOB) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (vt1.c0 IN ()) ELSE ((((t0.c0)AND(vt1.c0)))OR(t0.c0)) END WHERE ((NOT (CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c0) IS TRUE) ELSE CAST(vt1.c0 AS BLOB) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (vt1.c0 IN ()) ELSE ((((t0.c0)AND(vt1.c0)))OR(t0.c0)) END WHERE (((CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c0) IS TRUE) ELSE CAST(vt1.c0 AS BLOB) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (vt1.c0 IN ()) ELSE ((((t0.c0)AND(vt1.c0)))OR(t0.c0)) END GROUP BY vt1.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 NOT INDEXED GROUP BY vt1.c0, t0.c0 HAVING ((MAX(COUNT(t0.c0))) NOTNULL) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((MAX(COUNT(t0.c0))) NOTNULL))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((MAX(COUNT(t0.c0))) NOTNULL)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((vt1.c0) BETWEEN (DATE(vt1.c0, vt1.c0, 1.723309154E9, vt1.c0, t0.c0)) AND (CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((vt1.c0) BETWEEN (DATE(vt1.c0, vt1.c0, 1.723309154E9, vt1.c0, t0.c0)) AND (CAST(t0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((vt1.c0) BETWEEN (DATE(vt1.c0, vt1.c0, 1.723309154E9, vt1.c0, t0.c0)) AND (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 WHERE (CASE CAST(t0.c0 AS REAL)  WHEN TRIM(vt1.c0) THEN CAST(t0.c0 AS NUMERIC) WHEN UPPER(DISTINCT vt1.c0) THEN ((NULL)>=(vt1.c0)) WHEN x'938f' THEN rtreenode(vt1.c0, t0.c0) ELSE (t0.c0 IN ()) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE ((NOT (CASE CAST(t0.c0 AS REAL)  WHEN TRIM(vt1.c0) THEN CAST(t0.c0 AS NUMERIC) WHEN UPPER(DISTINCT vt1.c0) THEN ((NULL)>=(vt1.c0)) WHEN x'938f' THEN rtreenode(vt1.c0, t0.c0) ELSE (t0.c0 IN ()) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE (((CASE CAST(t0.c0 AS REAL)  WHEN TRIM(vt1.c0) THEN CAST(t0.c0 AS NUMERIC) WHEN UPPER(DISTINCT vt1.c0) THEN ((NULL)>=(vt1.c0)) WHEN x'938f' THEN rtreenode(vt1.c0, t0.c0) ELSE (t0.c0 IN ()) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0 HAVING (((COUNT(*) IN ()))||(TOTAL(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0 HAVING (NOT ((((COUNT(*) IN ()))||(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0 HAVING (((((COUNT(*) IN ()))||(TOTAL(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0 HAVING (((COUNT(*) IN ()))||(TOTAL(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0 HAVING (NOT ((((COUNT(*) IN ()))||(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0 HAVING (((((COUNT(*) IN ()))||(TOTAL(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c0 AS TEXT) IN ()) GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CHANGES()) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CHANGES()))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CHANGES()) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, t0.c0, vt1.c0))))OR((t0.c0 IN (vt1.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, t0.c0, vt1.c0))))OR((t0.c0 IN (vt1.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, t0.c0, vt1.c0))))OR((t0.c0 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((x'')-(vt1.c0)))>>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((((x'')-(vt1.c0)))>>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((((x'')-(vt1.c0)))>>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(0Xffffffffe84d120d))AND(GROUP_CONCAT('-1794887799'))))AND((+ (SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((SUM(0Xffffffffe84d120d))AND(GROUP_CONCAT('-1794887799'))))AND((+ (SUM(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((SUM(0Xffffffffe84d120d))AND(GROUP_CONCAT('-1794887799'))))AND((+ (SUM(t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(0Xffffffffe84d120d))AND(GROUP_CONCAT('-1794887799'))))AND((+ (SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((SUM(0Xffffffffe84d120d))AND(GROUP_CONCAT('-1794887799'))))AND((+ (SUM(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((SUM(0Xffffffffe84d120d))AND(GROUP_CONCAT('-1794887799'))))AND((+ (SUM(t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((CAST(vt1.c0 AS BLOB) IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((- (vt1.c0)))))AND((((t0.c0, vt1.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT (((((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((- (vt1.c0)))))AND((((t0.c0, vt1.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((((((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((- (vt1.c0)))))AND((((t0.c0, vt1.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((- ((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((- ((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((- ((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((t0.c0 IN (t0.c0))))<=((COUNT(*)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((((t0.c0 IN (t0.c0))))<=((COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((((t0.c0 IN (t0.c0))))<=((COUNT(*))))) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((t0.c0 IN (t0.c0))))<=((COUNT(*)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((((t0.c0 IN (t0.c0))))<=((COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((((t0.c0 IN (t0.c0))))<=((COUNT(*))))) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS BLOB)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) NOTNULL) AS BLOB)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) NOTNULL) AS BLOB)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON (((((t0.c0))<>((x'028b')))) NOT NULL);
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON (((((t0.c0))!=((x'028b')))) NOT NULL) WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON (((((t0.c0))!=((x'028b')))) NOT NULL) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON (((((t0.c0))<>((x'028b')))) NOT NULL) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON (((((t0.c0))<>((x'028b')))) NOT NULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<((NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<((NULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<((NULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1, t0;
SELECT * FROM vt1, t0 WHERE ((((('KG')OR(((vt1.c0)||(vt1.c0)))))OR(t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT ((((('KG')OR(((vt1.c0)||(vt1.c0)))))OR(t0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((((((('KG')OR(((vt1.c0)||(vt1.c0)))))OR(t0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)+(vt1.c0)) AS TEXT)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)+(vt1.c0)) AS TEXT)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)+(vt1.c0)) AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TYPEOF(t0.c0))IS NOT(((AVG(COUNT(MAX(t0.c0))))OR(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TYPEOF(t0.c0))IS NOT(((AVG(COUNT(MAX(t0.c0))))OR(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TYPEOF(t0.c0))IS NOT(((AVG(COUNT(MAX(t0.c0))))OR(t0.c0))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (((t0.c0))!=((t0.c0))) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c0)AND(t0.c0)) THEN HEX(DISTINCT t0.c0) WHEN t0.c0 THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (t0.c0 IN ()) WHEN ((t0.c0)>(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (((t0.c0))!=((t0.c0))) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c0)AND(t0.c0)) THEN HEX(DISTINCT t0.c0) WHEN t0.c0 THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (t0.c0 IN ()) WHEN ((t0.c0)>(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (((t0.c0))!=((t0.c0))) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c0)AND(t0.c0)) THEN HEX(DISTINCT t0.c0) WHEN t0.c0 THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (t0.c0 IN ()) WHEN ((t0.c0)>(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING 0.5322845107098677 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (0.5322845107098677)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.5322845107098677) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING 0.5322845107098677 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (0.5322845107098677)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.5322845107098677) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((((t0.c0))=((t0.c0)))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((NOT ((((t0.c0))=((t0.c0)))))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1 NOT INDEXED, t0 WHERE ((((NOT ((((t0.c0))=((t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((('T') BETWEEN (vt1.c0) AND (vt1.c0)))==(vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((('T') BETWEEN (vt1.c0) AND (vt1.c0)))=(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((('T') BETWEEN (vt1.c0) AND (vt1.c0)))=(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(((t0.c0) BETWEEN (TOTAL(t0.c0)) AND (TOTAL(MIN(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(((t0.c0) BETWEEN (TOTAL(t0.c0)) AND (TOTAL(MIN(GROUP_CONCAT(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(((t0.c0) BETWEEN (TOTAL(t0.c0)) AND (TOTAL(MIN(GROUP_CONCAT(t0.c0))))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0x22e529be)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0X22e529be)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0X22e529be)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((t0.c0 IN (vt1.c0, vt1.c0)) IN ())) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((t0.c0 IN (vt1.c0, vt1.c0)) IN ())))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((t0.c0 IN (vt1.c0, vt1.c0)) IN ())) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING GROUP_CONCAT(MAX(t0.c0)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(MAX(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((GROUP_CONCAT(MAX(t0.c0))) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((((((((((vt1.c0)OR(t0.c0)))AND('-1530219593')))OR(t0.c0)))AND(x''))) NOT BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (TRIM(DISTINCT vt1.c0)))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (((((((((((vt1.c0)OR(t0.c0)))AND('-1530219593')))OR(t0.c0)))AND(x''))) NOT BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (TRIM(DISTINCT vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE (((((((((((((vt1.c0)OR(t0.c0)))AND('-1530219593')))OR(t0.c0)))AND(x''))) NOT BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (TRIM(DISTINCT vt1.c0)))) ISNULL));
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (x'02c6') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (x'02c6'))) UNION SELECT DISTINCT * FROM vt1 WHERE (((x'02c6') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (RTRIM((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (RTRIM((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((RTRIM((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING MIN(json_remove(vt1.c0, 'ê­¬&')) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (MIN(json_remove(vt1.c0, 'ê­¬&')))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((MIN(json_remove(vt1.c0, 'ê­¬&'))) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt1.c0)>>(vt1.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt1.c0)>>(vt1.c0)))) WHERE (1811615280) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt1.c0)>>(vt1.c0)))) WHERE ((NOT (1811615280))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt1.c0)>>(vt1.c0)))) WHERE (((1811615280) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt1.c0)>>(vt1.c0))));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((t0.c0)IS NOT(((t0.c0)>(t0.c0))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((t0.c0)IS NOT(((t0.c0)>(t0.c0))))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((t0.c0)IS NOT(((t0.c0)>(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('D7') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('D7'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('D7') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (MIN(t0.c0) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((MIN(t0.c0) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((MIN(t0.c0) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (MIN(t0.c0) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((MIN(t0.c0) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((MIN(t0.c0) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1;
SELECT t0.c0 FROM t0, vt1 WHERE (vt1.c0) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((+ (vt1.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((+ (vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((+ (vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 WHERE (NULLIF(DISTINCT ((((t0.c0)OR(t0.c0)))OR(vt1.c0)), ((t0.c0)>(vt1.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1 WHERE ((NOT (NULLIF(DISTINCT ((((t0.c0)OR(t0.c0)))OR(vt1.c0)), ((t0.c0)>(vt1.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt1 WHERE (((NULLIF(DISTINCT ((((t0.c0)OR(t0.c0)))OR(vt1.c0)), ((t0.c0)>(vt1.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL TOTAL(((((((vt1.c0)GLOB(vt1.c0)))OR(((vt1.c0) NOT NULL))))OR(NULL))) FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.1440928194723745, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))|(vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((x'') BETWEEN (((1.296149493E9) ISNULL)) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((((vt1.c0) NOT NULL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL)) ASC  NULLS LAST, vt1.c0 DESC;
SELECT t0.c0 FROM t0 NATURAL JOIN vt1;
SELECT t0.c0 FROM t0 NATURAL JOIN vt1 WHERE (CAST(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) AS BLOB)) UNION ALL SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) AS BLOB)))) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN vt1 WHERE (((CAST(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) AS BLOB)) ISNULL));
SELECT t0.c0 FROM t0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CASE WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (CAST((t0.c0 IN ()) AS TEXT)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (CAST((t0.c0 IN ()) AS TEXT)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE (((CAST((t0.c0 IN ()) AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (x'4e64') UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (x'4e64'))) UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE (((x'4e64') ISNULL));
SELECT t0.c0 FROM vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (1.766566293E9) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (1.766566293E9))) UNION SELECT DISTINCT * FROM vt1 WHERE (((1.766566293E9) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((+ (t0.c0)), ((t0.c0) IS TRUE), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))!=((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%(t0.c0)), t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((+ (t0.c0)), ((t0.c0) IS TRUE), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<>((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%(t0.c0)), t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((+ (t0.c0)), ((t0.c0) IS TRUE), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<>((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%(t0.c0)), t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((MIN(t0.c0)) NOT BETWEEN (MIN(NULL)) AND ((TOTAL(vt1.c0) IN ()))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((MIN(t0.c0)) NOT BETWEEN (MIN(NULL)) AND ((TOTAL(vt1.c0) IN ()))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((((MIN(t0.c0)) NOT BETWEEN (MIN(NULL)) AND ((TOTAL(vt1.c0) IN ())))) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((MIN(t0.c0)) NOT BETWEEN (MIN(NULL)) AND ((TOTAL(vt1.c0) IN ()))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((MIN(t0.c0)) NOT BETWEEN (MIN(NULL)) AND ((TOTAL(vt1.c0) IN ()))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((((MIN(t0.c0)) NOT BETWEEN (MIN(NULL)) AND ((TOTAL(vt1.c0) IN ())))) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0 COLLATE RTRIM)OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)AND('-1696922750')))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(STRFTIME(t0.c0, t0.c0, x'')))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((((((t0.c0 COLLATE RTRIM)OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)AND('-1696922750')))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(STRFTIME(t0.c0, t0.c0, x'')))))) UNION ALL SELECT * FROM t0 WHERE (((((((((((t0.c0 COLLATE RTRIM)OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)AND('-1696922750')))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(STRFTIME(t0.c0, t0.c0, x'')))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((- (((vt1.c0)>>(vt1.c0))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((- (((vt1.c0)>>(vt1.c0))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((- (((vt1.c0)>>(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (- (t0.c0)) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT ((- (t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (((- (t0.c0))) ISNULL);
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (- (t0.c0)) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT ((- (t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (((- (t0.c0))) ISNULL);
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN NULL THEN 0.8145261584045496 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END COLLATE BINARY) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN NULL THEN 0.8145261584045496 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END COLLATE BINARY))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN NULL THEN 0.8145261584045496 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END COLLATE BINARY) ISNULL));
SELECT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED, vt1 WHERE (TRIM(((vt1.c0) NOTNULL))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((NOT (TRIM(((vt1.c0) NOTNULL))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE (((TRIM(((vt1.c0) NOTNULL))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<=(vt1.c0))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<=(vt1.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((IFNULL(DISTINCT t0.c0, t0.c0)) IS TRUE) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((IFNULL(DISTINCT t0.c0, t0.c0)) IS TRUE))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((IFNULL(DISTINCT t0.c0, t0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((IFNULL(DISTINCT t0.c0, t0.c0)) IS TRUE) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((IFNULL(DISTINCT t0.c0, t0.c0)) IS TRUE))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((IFNULL(DISTINCT t0.c0, t0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT TOTAL((((((NULL)AND(vt1.c0)))AND(vt1.c0)) IN (0.5964289447947674))) FROM vt1 ORDER BY ((9.21677871E8 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (1713741789) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (1713741789))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((1713741789) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((0x5dc58b5f IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE ((NOT ((0X5dc58b5f IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE ((((0x5dc58b5f IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(MAX(COUNT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(MAX(COUNT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(MAX(COUNT(t0.c0)))) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((- (vt1.c0)))||(t0.c0 COLLATE BINARY))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((((- (vt1.c0)))||(t0.c0 COLLATE BINARY))))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((- (vt1.c0)))||(t0.c0 COLLATE BINARY))) ISNULL));
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ())) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ())))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ('768637651') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ('768637651'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('768637651') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING TOTAL(MAX(t0.c0)) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MAX(t0.c0)))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MAX(t0.c0))) ISNULL);
SELECT * FROM t0 CROSS JOIN vt1 ON ((DATETIME(0.2614046699883549, vt1.c0, t0.c0))OR((t0.c0 IN (']z', vt1.c0))));
SELECT * FROM t0 CROSS JOIN vt1 ON ((DATETIME(0.2614046699883549, vt1.c0, t0.c0))OR((t0.c0 IN (']z', vt1.c0)))) WHERE (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))), LAST_INSERT_ROWID(), (((vt1.c0))<((t0.c0)))))<((vt1.c0 COLLATE BINARY, vt1.c0, ((vt1.c0)AND(t0.c0)))))) UNION ALL SELECT * FROM t0 CROSS JOIN vt1 ON ((DATETIME(0.2614046699883549, vt1.c0, t0.c0))OR((t0.c0 IN (']z', vt1.c0)))) WHERE ((NOT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))), LAST_INSERT_ROWID(), (((vt1.c0))<((t0.c0)))))<((vt1.c0 COLLATE BINARY, vt1.c0, ((vt1.c0)AND(t0.c0)))))))) UNION ALL SELECT * FROM t0 CROSS JOIN vt1 ON ((DATETIME(0.2614046699883549, vt1.c0, t0.c0))OR((t0.c0 IN (']z', vt1.c0)))) WHERE (((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))), LAST_INSERT_ROWID(), (((vt1.c0))<((t0.c0)))))<((vt1.c0 COLLATE BINARY, vt1.c0, ((vt1.c0)AND(t0.c0)))))) ISNULL));
SELECT * FROM t0 CROSS JOIN vt1 ON ((DATETIME(0.2614046699883549, vt1.c0, t0.c0))OR((t0.c0 IN (']z', vt1.c0))));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)LIKE(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)LIKE(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)LIKE(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 WHERE (((t0.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((NOT (((t0.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1 WHERE (((((t0.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING GROUP_CONCAT(AVG(t0.c0)) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(t0.c0)))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((GROUP_CONCAT(AVG(t0.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ())) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (NULL))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (NULL))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((NULL) IS FALSE)) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((NULL) IS FALSE)))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((NULL) IS FALSE)) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(t0.c0)) NOTNULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(t0.c0)) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0)) NOTNULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(t0.c0)) NOTNULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(t0.c0)) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0)) NOTNULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT MIN(((vt1.c0) ISNULL) COLLATE RTRIM) FROM vt1, t0 ORDER BY (((0.6701187969773327)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((QUOTE(t0.c0))<<(((t0.c0)|(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((QUOTE(t0.c0))<<(((t0.c0)|(t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((QUOTE(t0.c0))<<(((t0.c0)|(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE (((((t0.c0)*('')))+(((((t0.c0)OR(t0.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((NOT (((((t0.c0)*('')))+(((((t0.c0)OR(t0.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE (((((((t0.c0)*('')))+(((((t0.c0)OR(t0.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING SUM(TOTAL(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(TOTAL(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING ((SUM(TOTAL(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL SUM(((((((((((t0.c0)LIKE(t0.c0)))OR('1155687635')))AND((t0.c0 IN (NULL)))))AND(0.05322752208138615)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) FROM t0;
SELECT ALL t0.c0 FROM vt1, t0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE ((NOT (2.04923315E8))) UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE ((NOT ((NOT (2.04923315E8))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 WHERE ((((NOT (2.04923315E8))) ISNULL));
SELECT ALL t0.c0 FROM vt1, t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)<=(').')))OR((NOT (t0.c0)))))OR('-1985565133')))AND(CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)<=(').')))OR((NOT (t0.c0)))))OR('-1985565133')))AND(CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE RTRIM)) WHERE (((t0.c0) NOT BETWEEN (0.9914881733660856) AND (((t0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)<=(').')))OR((NOT (t0.c0)))))OR('-1985565133')))AND(CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE RTRIM)) WHERE ((NOT (((t0.c0) NOT BETWEEN (0.9914881733660856) AND (((t0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)<=(').')))OR((NOT (t0.c0)))))OR('-1985565133')))AND(CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE RTRIM)) WHERE (((((t0.c0) NOT BETWEEN (0.9914881733660856) AND (((t0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)<=(').')))OR((NOT (t0.c0)))))OR('-1985565133')))AND(CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE RTRIM));
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((0.8188746590079441)OR(t0.c0 COLLATE BINARY))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (((0.8188746590079441)OR(t0.c0 COLLATE BINARY))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE (((((0.8188746590079441)OR(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (t0.c0) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((0x30ad913e)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND (((t0.c0 IN (t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((0X30ad913e)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND (((t0.c0 IN (t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((0X30ad913e)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND (((t0.c0 IN (t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((x'b71298e5')IS NOT(((t0.c0)*(vt1.c0)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((x'b71298e5')IS NOT(((t0.c0)*(vt1.c0)))) WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)IS NOT(vt1.c0)))) AND ((NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((x'b71298e5')IS NOT(((t0.c0)*(vt1.c0)))) WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0)IS NOT(vt1.c0)))) AND ((NULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((x'b71298e5')IS NOT(((t0.c0)*(vt1.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0)IS NOT(vt1.c0)))) AND ((NULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((x'b71298e5')IS NOT(((t0.c0)*(vt1.c0)))) GROUP BY vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (~ (CAST(GROUP_CONCAT(t0.c0) AS NUMERIC))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT ((~ (CAST(GROUP_CONCAT(t0.c0) AS NUMERIC))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((~ (CAST(GROUP_CONCAT(t0.c0) AS NUMERIC)))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (~ (CAST(GROUP_CONCAT(t0.c0) AS NUMERIC))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT ((~ (CAST(GROUP_CONCAT(t0.c0) AS NUMERIC))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((~ (CAST(GROUP_CONCAT(t0.c0) AS NUMERIC)))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) WHEN ((t0.c0) NOT NULL) THEN (('1466230051') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((t0.c0)>>(t0.c0)) THEN t0.c0 ELSE NULL END) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) WHEN ((t0.c0) NOT NULL) THEN (('1466230051') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((t0.c0)>>(t0.c0)) THEN t0.c0 ELSE NULL END))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) WHEN ((t0.c0) NOT NULL) THEN (('1466230051') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((t0.c0)>>(t0.c0)) THEN t0.c0 ELSE NULL END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN 1.706104517E9 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((+ (CASE WHEN t0.c0 THEN 1.706104517E9 END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((+ (CASE WHEN t0.c0 THEN 1.706104517E9 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING TOTAL(MIN(vt1.c0)) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (TOTAL(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((TOTAL(MIN(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)+(vt1.c0)))<(CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)+(vt1.c0)))<(CAST(vt1.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)+(vt1.c0)))<(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (CASE t0.c0  WHEN vt1.c0 THEN (~ (vt1.c0)) ELSE '-1722089989' END) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (CASE t0.c0  WHEN vt1.c0 THEN (~ (vt1.c0)) ELSE '-1722089989' END))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN (~ (vt1.c0)) ELSE '-1722089989' END) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((- (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- (NULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((- (NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (TYPEOF(UPPER(vt1.c0))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (TYPEOF(UPPER(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE (((TYPEOF(UPPER(vt1.c0))) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (HEX((t0.c0 IN ()))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT (HEX((t0.c0 IN ()))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((HEX((t0.c0 IN ()))) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) NOT NULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((((vt1.c0)OR(SUM(vt1.c0))))OR(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((((vt1.c0)OR(SUM(vt1.c0))))OR(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((((vt1.c0)OR(SUM(vt1.c0))))OR(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((x'') NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND ((NOT (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((x'') NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND ((NOT (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((x'') NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND ((NOT (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((((((t0.c0))==((t0.c0))))%(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((((((t0.c0))=((t0.c0))))%(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((((((t0.c0))=((t0.c0))))%(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (COALESCE(0.6302826735533323, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), 0xffffffffa82349aa, -158353940)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (COALESCE(0.6302826735533323, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), 0xffffffffa82349aa, -158353940)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((COALESCE(0.6302826735533323, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), 0xffffffffa82349aa, -158353940)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((COUNT(TOTAL(AVG(MAX(t0.c0))))) NOT NULL)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((COUNT(TOTAL(AVG(MAX(t0.c0))))) NOT NULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((COUNT(TOTAL(AVG(MAX(t0.c0))))) NOT NULL))) ISNULL);
SELECT ALL t0.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM t0, vt1 WHERE (((vt1.c0)<(vt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 WHERE ((NOT (((vt1.c0)<(vt1.c0)) COLLATE BINARY))) UNION ALL SELECT t0.c0 FROM t0, vt1 WHERE (((((vt1.c0)<(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1 NOT INDEXED;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (- (t0.c0)), CASE WHEN t0.c0 THEN vt1.c0 END)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))), ((vt1.c0)+(t0.c0)), ((vt1.c0)*(t0.c0)))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (- (t0.c0)), CASE WHEN t0.c0 THEN vt1.c0 END)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))), ((vt1.c0)+(t0.c0)), ((vt1.c0)*(t0.c0)))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (- (t0.c0)), CASE WHEN t0.c0 THEN vt1.c0 END)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))), ((vt1.c0)+(t0.c0)), ((vt1.c0)*(t0.c0)))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM vt1 INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 NOT INDEXED INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0 HAVING ((CAST(t0.c0 AS TEXT)) BETWEEN (QUOTE(AVG(vt1.c0))) AND (COUNT(*))) UNION ALL SELECT t0.c0 FROM vt1 INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0 HAVING (NOT (((CAST(t0.c0 AS TEXT)) BETWEEN (QUOTE(AVG(vt1.c0))) AND (COUNT(*))))) UNION ALL SELECT t0.c0 FROM vt1 INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0 HAVING ((((CAST(t0.c0 AS TEXT)) BETWEEN (QUOTE(AVG(vt1.c0))) AND (COUNT(*)))) ISNULL);
SELECT ALL t0.c0 FROM vt1 INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 NOT INDEXED INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0 HAVING ((CAST(t0.c0 AS TEXT)) BETWEEN (QUOTE(AVG(vt1.c0))) AND (COUNT(*))) UNION ALL SELECT t0.c0 FROM vt1 INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0 HAVING (NOT (((CAST(t0.c0 AS TEXT)) BETWEEN (QUOTE(AVG(vt1.c0))) AND (COUNT(*))))) UNION ALL SELECT t0.c0 FROM vt1 INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0 HAVING ((((CAST(t0.c0 AS TEXT)) BETWEEN (QUOTE(AVG(vt1.c0))) AND (COUNT(*)))) ISNULL);
SELECT ALL t0.c0 FROM vt1 INNER JOIN t0 ON (('o#' COLLATE BINARY) NOTNULL) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND('a_k/LNB4P')) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))AND('a_k/LNB4P')) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND('a_k/LNB4P')) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS TEXT), (((vt1.c0))<=((vt1.c0))), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) ISNULL))) AND ((0.14187502098313465, vt1.c0, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (~ (vt1.c0)), ((vt1.c0)>>(vt1.c0)), ((vt1.c0) NOTNULL), CAST(vt1.c0 AS TEXT))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS TEXT), (((vt1.c0))<=((vt1.c0))), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) ISNULL))) AND ((0.14187502098313465, vt1.c0, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (~ (vt1.c0)), ((vt1.c0)>>(vt1.c0)), ((vt1.c0) NOTNULL), CAST(vt1.c0 AS TEXT))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS TEXT), (((vt1.c0))<=((vt1.c0))), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) ISNULL))) AND ((0.14187502098313465, vt1.c0, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (~ (vt1.c0)), ((vt1.c0)>>(vt1.c0)), ((vt1.c0) NOTNULL), CAST(vt1.c0 AS TEXT))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(GROUP_CONCAT(t0.c0) COLLATE NOCASE) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(GROUP_CONCAT(t0.c0) COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(GROUP_CONCAT(t0.c0) COLLATE NOCASE)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((NULLIF(t0.c0, t0.c0)))!=((t0.c0 COLLATE BINARY)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((NULLIF(t0.c0, t0.c0)))<>((t0.c0 COLLATE BINARY)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((NULLIF(t0.c0, t0.c0)))<>((t0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((SUM(MIN(SUM(t0.c0))))<=(MAX(COUNT(COUNT(vt1.c0))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (((SUM(MIN(SUM(t0.c0))))<=(MAX(COUNT(COUNT(vt1.c0))))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((((SUM(MIN(SUM(t0.c0))))<=(MAX(COUNT(COUNT(vt1.c0)))))) ISNULL);
SELECT ALL MIN(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) FROM vt1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((+ (t0.c0)) IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((+ (t0.c0)) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE (((((+ (t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((0.7849976279760942)AND(((vt1.c0) BETWEEN (vt1.c0) AND (0xffffffff8669dc98)))))AND(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((0.7849976279760942)AND(((vt1.c0) BETWEEN (vt1.c0) AND (0Xffffffff8669dc98)))))AND(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((0.7849976279760942)AND(((vt1.c0) BETWEEN (vt1.c0) AND (0Xffffffff8669dc98)))))AND(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((- (vt1.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((- (vt1.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(AVG(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(AVG(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(AVG(t0.c0))) ISNULL);
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE ((((((t0.c0))!=((vt1.c0))))>>((('0.36879726623577347') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT ((((((t0.c0))!=((vt1.c0))))>>((('0.36879726623577347') NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT * FROM t0, vt1 WHERE ((((((((t0.c0))!=((vt1.c0))))>>((('0.36879726623577347') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((((((CAST(vt1.c0 AS INTEGER))AND(highlight(t0.c0, t0.c0, vt1.c0, vt1.c0))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)))OR((((t0.c0))<=((''))))))OR(t0.c0)))AND(vt1.c0)))OR(CAST(t0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((((((((((CAST(vt1.c0 AS INTEGER))AND(highlight(t0.c0, t0.c0, vt1.c0, vt1.c0))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)))OR((((t0.c0))<=((''))))))OR(t0.c0)))AND(vt1.c0)))OR(CAST(t0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((((((((CAST(vt1.c0 AS INTEGER))AND(highlight(t0.c0, t0.c0, vt1.c0, vt1.c0))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)))OR((((t0.c0))<=((''))))))OR(t0.c0)))AND(vt1.c0)))OR(CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 WHERE (t0.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((NOT (t0.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE (((t0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0 HAVING ((((MIN('cQd[E'))IS(vt1.c0))) ISNULL) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0 HAVING (NOT (((((MIN('cQd[E'))IS(vt1.c0))) ISNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0 HAVING ((((((MIN('cQd[E'))IS(vt1.c0))) ISNULL)) ISNULL);
SELECT t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0 HAVING ((((MIN('cQd[E'))IS(vt1.c0))) ISNULL) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0 HAVING (NOT (((((MIN('cQd[E'))IS(vt1.c0))) ISNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0 HAVING ((((((MIN('cQd[E'))IS(vt1.c0))) ISNULL)) ISNULL);
SELECT t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((((t0.c0, vt1.c0, vt1.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))), LIKELY(vt1.c0), (((((((('0.23347352088138618')AND(0X6c22afe0)))OR(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))) AND ((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, ((t0.c0) NOT NULL), ((t0.c0)LIKE(t0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((((t0.c0, vt1.c0, vt1.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))), LIKELY(vt1.c0), (((((((('0.23347352088138618')AND(0x6c22afe0)))OR(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))) AND ((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, ((t0.c0) NOT NULL), ((t0.c0)LIKE(t0.c0)))))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((((t0.c0, vt1.c0, vt1.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))), LIKELY(vt1.c0), (((((((('0.23347352088138618')AND(0X6c22afe0)))OR(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))) AND ((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, ((t0.c0) NOT NULL), ((t0.c0)LIKE(t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (((UNLIKELY(vt1.c0))-(((vt1.c0) NOT NULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE ((NOT (((UNLIKELY(vt1.c0))-(((vt1.c0) NOT NULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE (((((UNLIKELY(vt1.c0))-(((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((LIKELY(vt1.c0))&(TRIM(t0.c0, vt1.c0))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((LIKELY(vt1.c0))&(TRIM(t0.c0, vt1.c0))) GROUP BY vt1.c0 HAVING (((AVG(vt1.c0), vt1.c0, MAX(vt1.c0))) BETWEEN ((TYPEOF(COUNT(COUNT(GROUP_CONCAT(t0.c0)))), GROUP_CONCAT(vt1.c0), COUNT(*))) AND ((COUNT(*), ((COUNT(vt1.c0))|(t0.c0)), CAST(t0.c0 AS TEXT)))) UNION ALL SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((LIKELY(vt1.c0))&(TRIM(t0.c0, vt1.c0))) GROUP BY vt1.c0 HAVING (NOT ((((AVG(vt1.c0), vt1.c0, MAX(vt1.c0))) BETWEEN ((TYPEOF(COUNT(COUNT(GROUP_CONCAT(t0.c0)))), GROUP_CONCAT(vt1.c0), COUNT(*))) AND ((COUNT(*), ((COUNT(vt1.c0))|(t0.c0)), CAST(t0.c0 AS TEXT)))))) UNION ALL SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((LIKELY(vt1.c0))&(TRIM(t0.c0, vt1.c0))) GROUP BY vt1.c0 HAVING (((((AVG(vt1.c0), vt1.c0, MAX(vt1.c0))) BETWEEN ((TYPEOF(COUNT(COUNT(GROUP_CONCAT(t0.c0)))), GROUP_CONCAT(vt1.c0), COUNT(*))) AND ((COUNT(*), ((COUNT(vt1.c0))|(t0.c0)), CAST(t0.c0 AS TEXT))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (-1.5835394E8) UNION ALL SELECT * FROM vt1 WHERE ((NOT (-1.5835394E8))) UNION ALL SELECT * FROM vt1 WHERE (((-1.5835394E8) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((~ ((~ (''))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((~ ((~ (''))))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((~ ((~ (''))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (t0.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT (t0.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (((t0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(COUNT(NULL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(NULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(NULL))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))!=('0.38341593201509816'))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0 IN ()))<>('0.38341593201509816'))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))<>('0.38341593201509816'))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((+ (t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((+ (t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING AVG(TOTAL(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(TOTAL(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((AVG(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL)))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (0.8911922469762102) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (0.8911922469762102))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((0.8911922469762102) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE (((json_array_length(vt1.c0))IS(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (((json_array_length(vt1.c0))IS(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((((json_array_length(vt1.c0))IS(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((vt1.c0 IN (MAX(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((vt1.c0 IN (MAX(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((vt1.c0 IN (MAX(vt1.c0))))) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt1, t0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((CAST(0x64e7de05 AS BLOB)) BETWEEN (vt1.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((CAST(0X64e7de05 AS BLOB)) BETWEEN (vt1.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((CAST(0x64e7de05 AS BLOB)) BETWEEN (vt1.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ISNULL));
SELECT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS TEXT)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(CAST(t0.c0 AS INTEGER) AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(CAST(t0.c0 AS INTEGER) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((HEX(t0.c0))) AND ((t0.c0 COLLATE BINARY)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((HEX(t0.c0))) AND ((t0.c0 COLLATE BINARY)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((HEX(t0.c0))) AND ((t0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0 HAVING (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0 HAVING (NOT ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))))) UNION ALL SELECT t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0 HAVING (((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))) ISNULL);
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0 HAVING (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0 HAVING (NOT ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))))) UNION ALL SELECT t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0 HAVING (((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))) ISNULL);
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON TYPEOF(DISTINCT LIKELY(t0.c0)) GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))) AND ((COALESCE(DISTINCT t0.c0, vt1.c0))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((((t0.c0)) BETWEEN ((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))) AND ((COALESCE(DISTINCT t0.c0, vt1.c0))))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((((t0.c0)) BETWEEN ((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))) AND ((COALESCE(DISTINCT t0.c0, vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((NOT (t0.c0)) AS TEXT)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST((NOT (t0.c0)) AS TEXT)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST((NOT (t0.c0)) AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING t0.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING t0.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((vt1.c0)||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.6148955537975727 END))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((vt1.c0)||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.6148955537975727 END))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((vt1.c0)||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.6148955537975727 END))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (json(((t0.c0)LIKE(t0.c0)))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (json(((t0.c0)LIKE(t0.c0)))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((json(((t0.c0)LIKE(t0.c0)))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.38993007638136634) NOT BETWEEN (UPPER(vt1.c0)) AND (MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((0.38993007638136634) NOT BETWEEN (UPPER(vt1.c0)) AND (MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((0.38993007638136634) NOT BETWEEN (UPPER(vt1.c0)) AND (MIN(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.38993007638136634) NOT BETWEEN (UPPER(vt1.c0)) AND (MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((0.38993007638136634) NOT BETWEEN (UPPER(vt1.c0)) AND (MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((0.38993007638136634) NOT BETWEEN (UPPER(vt1.c0)) AND (MIN(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0) ISNULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((((MAX(t0.c0))OR(GROUP_CONCAT(TOTAL(MIN(t0.c0))))))OR(((vt1.c0)|(t0.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (((((MAX(t0.c0))OR(GROUP_CONCAT(TOTAL(MIN(t0.c0))))))OR(((vt1.c0)|(t0.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((((((MAX(t0.c0))OR(GROUP_CONCAT(TOTAL(MIN(t0.c0))))))OR(((vt1.c0)|(t0.c0))))) ISNULL);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND (('q\n')))) AND (((vt1.c0) IS FALSE)));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND (('q\n')))) AND (((vt1.c0) IS FALSE))) WHERE (('-1474082390' IN ()) COLLATE NOCASE) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND (('q\n')))) AND (((vt1.c0) IS FALSE))) WHERE ((NOT (('-1474082390' IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND (('q\n')))) AND (((vt1.c0) IS FALSE))) WHERE (((('-1474082390' IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND (('q\n')))) AND (((vt1.c0) IS FALSE)));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON (((+ (t0.c0))) NOT BETWEEN (-1021231317) AND (-9.18541186E8));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON (((+ (t0.c0))) NOT BETWEEN (-1021231317) AND (-9.18541186E8)) WHERE (((vt1.c0 COLLATE BINARY)&((((t0.c0))>=((t0.c0)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON (((+ (t0.c0))) NOT BETWEEN (-1021231317) AND (-9.18541186E8)) WHERE ((NOT (((vt1.c0 COLLATE BINARY)&((((t0.c0))>=((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON (((+ (t0.c0))) NOT BETWEEN (-1021231317) AND (-9.18541186E8)) WHERE (((((vt1.c0 COLLATE BINARY)&((((t0.c0))>=((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON (((+ (t0.c0))) NOT BETWEEN (-1021231317) AND (-9.18541186E8));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COALESCE(DISTINCT MAX(SUM(AVG(vt1.c0))), ((vt1.c0) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COALESCE(DISTINCT MAX(SUM(AVG(vt1.c0))), ((vt1.c0) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COALESCE(DISTINCT MAX(SUM(AVG(vt1.c0))), ((vt1.c0) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(vt1.c0))))) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (x'cd8b0429') UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (x'cd8b0429'))) UNION ALL SELECT * FROM t0, vt1 WHERE (((x'cd8b0429') ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE ((t0.c0)-(t0.c0))  WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0))=((t0.c0))) ELSE (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0)-(t0.c0))  WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0))==((t0.c0))) ELSE (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE ((t0.c0)-(t0.c0))  WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0))=((t0.c0))) ELSE (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ()) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)AND(vt1.c0)))AND(t0.c0))) NOT NULL);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)AND(vt1.c0)))AND(t0.c0))) NOT NULL) WHERE (CAST(((t0.c0) ISNULL) AS TEXT)) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)AND(vt1.c0)))AND(t0.c0))) NOT NULL) WHERE ((NOT (CAST(((t0.c0) ISNULL) AS TEXT)))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)AND(vt1.c0)))AND(t0.c0))) NOT NULL) WHERE (((CAST(((t0.c0) ISNULL) AS TEXT)) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)AND(vt1.c0)))AND(t0.c0))) NOT NULL);
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (t0.c0) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM vt1, t0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (json_extract(CASE WHEN x'' THEN vt1.c0 END, ((((t0.c0)OR(t0.c0)))AND(vt1.c0)))) UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (json_extract(CASE WHEN x'' THEN vt1.c0 END, ((((t0.c0)OR(t0.c0)))AND(vt1.c0)))))) UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE (((json_extract(CASE WHEN x'' THEN vt1.c0 END, ((((t0.c0)OR(t0.c0)))AND(vt1.c0)))) ISNULL));
SELECT ALL t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE (((vt1.c0)IS(vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0)IS(vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE (((((vt1.c0)IS(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) NOT BETWEEN ('-913153985') AND (vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN ('-913153985') AND (vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ('-913153985') AND (vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(COUNT(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM t0, vt1;
SELECT vt1.c0 FROM t0, vt1 WHERE (((((NULL)%(0.040417263321001706))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((NOT (((((NULL)%(0.040417263321001706))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 WHERE (((((((NULL)%(0.040417263321001706))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((CAST(t0.c0 AS REAL))>((t0.c0 IN ())));
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((CAST(t0.c0 AS REAL))>((t0.c0 IN ()))) WHERE (((t0.c0) NOT NULL)) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((CAST(t0.c0 AS REAL))>((t0.c0 IN ()))) WHERE ((NOT (((t0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((CAST(t0.c0 AS REAL))>((t0.c0 IN ()))) WHERE (((((t0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((CAST(t0.c0 AS REAL))>((t0.c0 IN ())));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((('-222895964' COLLATE RTRIM)AND(((t0.c0) NOT NULL))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR((- (t0.c0)))))OR(((t0.c0)<=(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((((('-222895964' COLLATE RTRIM)AND(((t0.c0) NOT NULL))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR((- (t0.c0)))))OR(((t0.c0)<=(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((((('-222895964' COLLATE RTRIM)AND(((t0.c0) NOT NULL))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR((- (t0.c0)))))OR(((t0.c0)<=(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0 HAVING MAX(NULL) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0 HAVING MAX(NULL) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) ELSE CASE t0.c0  WHEN x'' THEN t0.c0 END END GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))%(CAST('eu' AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))%(CAST('eu' AS NUMERIC)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))%(CAST('eu' AS NUMERIC)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(0x2a9e3d0)))OR(vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(0X2a9e3d0)))OR(vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(0X2a9e3d0)))OR(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE CAST(t0.c0 AS REAL)  WHEN (t0.c0 IN ()) THEN (((t0.c0))==((t0.c0))) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE CAST(t0.c0 AS REAL)  WHEN (t0.c0 IN ()) THEN (((t0.c0))==((t0.c0))) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE CAST(t0.c0 AS REAL)  WHEN (t0.c0 IN ()) THEN (((t0.c0))==((t0.c0))) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1, t0;
SELECT vt1.c0 FROM vt1, t0 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN ((t0.c0)%(vt1.c0)) THEN ((vt1.c0) IS TRUE) END) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((NOT (CASE ((vt1.c0) NOT NULL)  WHEN ((t0.c0)%(vt1.c0)) THEN ((vt1.c0) IS TRUE) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 WHERE (((CASE ((vt1.c0) NOT NULL)  WHEN ((t0.c0)%(vt1.c0)) THEN ((vt1.c0) IS TRUE) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('1995793705' COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ('1995793705' COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('1995793705' COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON '811252352' GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON '811252352' WHERE ((~ (vt1.c0)) COLLATE RTRIM) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON '811252352' WHERE ((NOT ((~ (vt1.c0)) COLLATE RTRIM))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON '811252352' WHERE ((((~ (vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON '811252352' GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((TOTAL(MIN(COUNT(*))))OR(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((TOTAL(MIN(COUNT(*))))OR(MIN(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((TOTAL(MIN(COUNT(*))))OR(MIN(t0.c0))))) ISNULL);
SELECT TOTAL(((((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(NULL))) ISNULL)) FROM vt1;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)), ((vt1.c0)/(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ABS(DISTINCT vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)), ((vt1.c0)/(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ABS(DISTINCT vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)), ((vt1.c0)/(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ABS(DISTINCT vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NULL))=((vt1.c0))) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((NULL))=((vt1.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((NULL))==((vt1.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING TOTAL(ABS(MAX(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (TOTAL(ABS(MAX(MIN(t0.c0)))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((TOTAL(ABS(MAX(MIN(t0.c0))))) ISNULL);
SELECT ALL SUM(TYPEOF(DISTINCT t0.c0) COLLATE BINARY) FROM vt1, t0 ORDER BY NULL ASC  NULLS FIRST;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'6c86', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, x''))) AS NUMERIC)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'6c86', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, x''))) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'6c86', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, x''))) AS NUMERIC)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((~ (t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((~ (t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((~ (t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((((((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(1.396759741E9)))))OR(vt1.c0)))AND((t0.c0 IN ('-1974668634')))) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((((((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(1.396759741E9)))))OR(vt1.c0)))AND((t0.c0 IN ('-1974668634')))) WHERE (((((vt1.c0)<(vt1.c0))) BETWEEN ((t0.c0 IN (vt1.c0))) AND (((t0.c0) BETWEEN (vt1.c0) AND ('EU'))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((((((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(1.396759741E9)))))OR(vt1.c0)))AND((t0.c0 IN ('-1974668634')))) WHERE ((NOT (((((vt1.c0)<(vt1.c0))) BETWEEN ((t0.c0 IN (vt1.c0))) AND (((t0.c0) BETWEEN (vt1.c0) AND ('EU'))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((((((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(1.396759741E9)))))OR(vt1.c0)))AND((t0.c0 IN ('-1974668634')))) WHERE (((((((vt1.c0)<(vt1.c0))) BETWEEN ((t0.c0 IN (vt1.c0))) AND (((t0.c0) BETWEEN (vt1.c0) AND ('EU'))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((((((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(1.396759741E9)))))OR(vt1.c0)))AND((t0.c0 IN ('-1974668634')))) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING MIN(SUM(t0.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (MIN(SUM(t0.c0)))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 NOT INDEXED GROUP BY vt1.c0, t0.c0 HAVING ((MIN(SUM(t0.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) ISNULL)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((NOT (((vt1.c0) ISNULL)))))) UNION ALL SELECT * FROM vt1 WHERE ((((NOT (((vt1.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS BLOB)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0 HAVING 0.7564190241407197 UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0 HAVING (NOT (0.7564190241407197)) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0 HAVING ((0.7564190241407197) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0 HAVING 0.7564190241407197 UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0 HAVING (NOT (0.7564190241407197)) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0 HAVING ((0.7564190241407197) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CAST(COALESCE(t0.c0, t0.c0) AS BLOB) GROUP BY t0.c0, vt1.c0;
SELECT MIN((- (((t0.c0)*(t0.c0))))) FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND (((t0.c0 IN ()))))  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((0.7616253455320808)AND(vt1.c0))) ISNULL)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((0.7616253455320808)AND(vt1.c0))) ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((0.7616253455320808)AND(vt1.c0))) ISNULL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((GLOB(t0.c0, vt1.c0) IN ())) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((NOT ((GLOB(t0.c0, vt1.c0) IN ())))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((((GLOB(t0.c0, vt1.c0) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING t0.c0 UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING t0.c0 UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (((((vt1.c0) BETWEEN ('1155687635') AND (t0.c0))) IS FALSE)) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (((((vt1.c0) BETWEEN ('1155687635') AND (t0.c0))) IS FALSE)))) UNION ALL SELECT * FROM t0, vt1 WHERE (((((((vt1.c0) BETWEEN ('1155687635') AND (t0.c0))) IS FALSE)) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((HEX(DISTINCT vt1.c0))) AND (((((t0.c0))!=((t0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((HEX(DISTINCT vt1.c0))) AND (((((t0.c0))<>((t0.c0))))))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((HEX(DISTINCT vt1.c0))) AND (((((t0.c0))<>((t0.c0))))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 WHERE (CASE vt1.c0  WHEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN t0.c0 ELSE CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt1 WHERE ((NOT (CASE vt1.c0  WHEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN t0.c0 ELSE CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN t0.c0 ELSE CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) NOT BETWEEN ((COUNT(vt1.c0))) AND ((TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) NOT BETWEEN ((COUNT(vt1.c0))) AND ((TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) NOT BETWEEN ((COUNT(vt1.c0))) AND ((TOTAL(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) NOT BETWEEN ((COUNT(vt1.c0))) AND ((TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) NOT BETWEEN ((COUNT(vt1.c0))) AND ((TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) NOT BETWEEN ((COUNT(vt1.c0))) AND ((TOTAL(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (CASE CAST(t0.c0 AS REAL)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>((t0.c0))) WHEN ((t0.c0)*(t0.c0)) THEN ((vt1.c0)<(t0.c0)) WHEN ((NULL)==(vt1.c0)) THEN CAST(t0.c0 AS TEXT) END) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (CASE CAST(t0.c0 AS REAL)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>((t0.c0))) WHEN ((t0.c0)*(t0.c0)) THEN ((vt1.c0)<(t0.c0)) WHEN ((NULL)==(vt1.c0)) THEN CAST(t0.c0 AS TEXT) END))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((CASE CAST(t0.c0 AS REAL)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>((t0.c0))) WHEN ((t0.c0)*(t0.c0)) THEN ((vt1.c0)<(t0.c0)) WHEN ((NULL)=(vt1.c0)) THEN CAST(t0.c0 AS TEXT) END) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN 'vMQl>)^' THEN t0.c0 ELSE t0.c0 END ELSE CASE 0xf40077f  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN 'vMQl>)^' THEN t0.c0 ELSE t0.c0 END ELSE CASE 0Xf40077f  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN 'vMQl>)^' THEN t0.c0 ELSE t0.c0 END ELSE CASE 0Xf40077f  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0 HAVING TOTAL('å’›1y<ï¯¯z{)}2') UNION ALL SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0 HAVING (NOT (TOTAL('å’›1y<ï¯¯z{)}2'))) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0 HAVING ((TOTAL('å’›1y<ï¯¯z{)}2')) ISNULL);
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0 HAVING TOTAL('å’›1y<ï¯¯z{)}2') UNION ALL SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0 HAVING (NOT (TOTAL('å’›1y<ï¯¯z{)}2'))) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0 HAVING ((TOTAL('å’›1y<ï¯¯z{)}2')) ISNULL);
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY t0.c0;
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE ('% qAIDM&{') UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT ('% qAIDM&{'))) UNION ALL SELECT * FROM vt1, t0 WHERE ((('% qAIDM&{') ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 NOT INDEXED WHERE (((((+ (vt1.c0)), ((t0.c0)/('Hq')), (vt1.c0 IN ())))==(((t0.c0 IN ()), ((vt1.c0) NOT BETWEEN (0xffffffffa564ab6c) AND (t0.c0)), vt1.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((+ (vt1.c0)), ((t0.c0)/('Hq')), (vt1.c0 IN ())))=(((t0.c0 IN ()), ((vt1.c0) NOT BETWEEN (0xffffffffa564ab6c) AND (t0.c0)), vt1.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((+ (vt1.c0)), ((t0.c0)/('Hq')), (vt1.c0 IN ())))==(((t0.c0 IN ()), ((vt1.c0) NOT BETWEEN (0xffffffffa564ab6c) AND (t0.c0)), vt1.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE t0.c0 END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE t0.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE t0.c0 END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((x'')AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))))AND(((t0.c0) IS TRUE))) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((x'')AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))))AND(((t0.c0) IS TRUE))) GROUP BY t0.c0, vt1.c0 HAVING (((((vt1.c0))>((t0.c0)))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((AVG(MAX(t0.c0))) NOTNULL))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((x'')AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))))AND(((t0.c0) IS TRUE))) GROUP BY t0.c0, vt1.c0 HAVING (NOT ((((((vt1.c0))>((t0.c0)))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((AVG(MAX(t0.c0))) NOTNULL))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((x'')AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))))AND(((t0.c0) IS TRUE))) GROUP BY t0.c0, vt1.c0 HAVING (((((((vt1.c0))>((t0.c0)))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((AVG(MAX(t0.c0))) NOTNULL)))) ISNULL);
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (CASE (((vt1.c0, vt1.c0, t0.c0))>((t0.c0, vt1.c0, vt1.c0)))  WHEN ((t0.c0)-(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (+ (t0.c0)) THEN x'' WHEN (((vt1.c0, vt1.c0, t0.c0))<>((vt1.c0, t0.c0, vt1.c0))) THEN ((t0.c0)&(vt1.c0)) ELSE NULL END) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (CASE (((vt1.c0, vt1.c0, t0.c0))>((t0.c0, vt1.c0, vt1.c0)))  WHEN ((t0.c0)-(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (+ (t0.c0)) THEN x'' WHEN (((vt1.c0, vt1.c0, t0.c0))!=((vt1.c0, t0.c0, vt1.c0))) THEN ((t0.c0)&(vt1.c0)) ELSE NULL END))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((CASE (((vt1.c0, vt1.c0, t0.c0))>((t0.c0, vt1.c0, vt1.c0)))  WHEN ((t0.c0)-(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (+ (t0.c0)) THEN x'' WHEN (((vt1.c0, vt1.c0, t0.c0))<>((vt1.c0, t0.c0, vt1.c0))) THEN ((t0.c0)&(vt1.c0)) ELSE NULL END) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt1 ON '1462917642';
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt1 ON '1462917642' WHERE (((CAST(t0.c0 AS REAL))&(t0.c0))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt1 ON '1462917642' WHERE ((NOT (((CAST(t0.c0 AS REAL))&(t0.c0))))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt1 ON '1462917642' WHERE (((((CAST(t0.c0 AS REAL))&(t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt1 ON '1462917642';
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0)GLOB(NULL)) WHEN ((t0.c0)%(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN '1462917642' THEN x'' END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0)GLOB(NULL)) WHEN ((t0.c0)%(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN '1462917642' THEN x'' END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0)GLOB(NULL)) WHEN ((t0.c0)%(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN '1462917642' THEN x'' END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 NOT INDEXED, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((((((((COUNT(*))AND(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c0))))))OR(AVG(t0.c0))))AND(COUNT(*))))AND(COUNT(vt1.c0))) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (((((((((COUNT(*))AND(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c0))))))OR(AVG(t0.c0))))AND(COUNT(*))))AND(COUNT(vt1.c0))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((((((((((COUNT(*))AND(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c0))))))OR(AVG(t0.c0))))AND(COUNT(*))))AND(COUNT(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((+ (LIKELY(NULL)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((+ (LIKELY(NULL)))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((+ (LIKELY(NULL)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((- (t0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (CAST(t0.c0 AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (CAST(t0.c0 AS NUMERIC)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((- (t0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (MIN(MIN(GROUP_CONCAT(NULL))) IN ((~ (SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((MIN(MIN(GROUP_CONCAT(NULL))) IN ((~ (SUM(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((MIN(MIN(GROUP_CONCAT(NULL))) IN ((~ (SUM(t0.c0)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(-5.53895654E8)))AND(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(-5.53895654E8)))AND(CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM t0 WHERE (((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(-5.53895654E8)))AND(CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))>=((t0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))>=((t0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))>=((t0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)-(vt1.c0)) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)-(vt1.c0)) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)-(vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN vt1.c0 COLLATE RTRIM THEN COUNT(*) WHEN NULLIF(vt1.c0, GROUP_CONCAT(vt1.c0)) THEN x'1f05' WHEN SUM(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN COUNT(*) WHEN NULLIF(vt1.c0, GROUP_CONCAT(vt1.c0)) THEN x'1f05' WHEN SUM(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN vt1.c0 COLLATE RTRIM THEN COUNT(*) WHEN NULLIF(vt1.c0, GROUP_CONCAT(vt1.c0)) THEN x'1f05' WHEN SUM(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN vt1.c0 COLLATE RTRIM THEN COUNT(*) WHEN NULLIF(vt1.c0, GROUP_CONCAT(vt1.c0)) THEN x'1f05' WHEN SUM(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN COUNT(*) WHEN NULLIF(vt1.c0, GROUP_CONCAT(vt1.c0)) THEN x'1f05' WHEN SUM(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN vt1.c0 COLLATE RTRIM THEN COUNT(*) WHEN NULLIF(vt1.c0, GROUP_CONCAT(vt1.c0)) THEN x'1f05' WHEN SUM(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((- (t0.c0)))<=(NULL))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((((- (t0.c0)))<=(NULL))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((((- (t0.c0)))<=(NULL))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0 HAVING (COUNT(*) IN ((+ (vt1.c0)), CAST(SUM(vt1.c0) AS INTEGER))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0 HAVING (NOT ((COUNT(*) IN ((+ (vt1.c0)), CAST(SUM(vt1.c0) AS INTEGER))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0 HAVING (((COUNT(*) IN ((+ (vt1.c0)), CAST(SUM(vt1.c0) AS INTEGER)))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0 HAVING (COUNT(*) IN ((+ (vt1.c0)), CAST(SUM(vt1.c0) AS INTEGER))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0 HAVING (NOT ((COUNT(*) IN ((+ (vt1.c0)), CAST(SUM(vt1.c0) AS INTEGER))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0 HAVING (((COUNT(*) IN ((+ (vt1.c0)), CAST(SUM(vt1.c0) AS INTEGER)))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ABS((vt1.c0 IN ())) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((((t0.c0, '-839516113', t0.c0))>((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((((t0.c0, '-839516113', t0.c0))>((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((((t0.c0, '-839516113', t0.c0))>((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((((-1.233510457E9)OR(t0.c0)))AND(t0.c0))) BETWEEN (((((vt1.c0)OR(t0.c0)))AND(vt1.c0))) AND (((vt1.c0)<=(t0.c0))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((((((-1.233510457E9)OR(t0.c0)))AND(t0.c0))) BETWEEN (((((vt1.c0)OR(t0.c0)))AND(vt1.c0))) AND (((vt1.c0)<=(t0.c0))))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((((((-1.233510457E9)OR(t0.c0)))AND(t0.c0))) BETWEEN (((((vt1.c0)OR(t0.c0)))AND(vt1.c0))) AND (((vt1.c0)<=(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY COLLATE BINARY GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY COLLATE BINARY WHERE (CASE (NOT (t0.c0))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)>>(vt1.c0)) ELSE TRIM(t0.c0, vt1.c0) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY COLLATE BINARY WHERE ((NOT (CASE (NOT (t0.c0))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)>>(vt1.c0)) ELSE TRIM(t0.c0, vt1.c0) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY COLLATE BINARY WHERE (((CASE (NOT (t0.c0))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)>>(vt1.c0)) ELSE TRIM(t0.c0, vt1.c0) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY COLLATE BINARY GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING LIKELY(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (LIKELY(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((LIKELY(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE NOCASE AS BLOB)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 COLLATE NOCASE AS BLOB)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((- (t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((- (t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((- (t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)IS NOT(0.8718003800360026))))=(('1487639057' COLLATE NOCASE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)IS NOT(0.8718003800360026))))=(('1487639057' COLLATE NOCASE)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0)IS NOT(0.8718003800360026))))=(('1487639057' COLLATE NOCASE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((json(vt1.c0)) BETWEEN (t0.c0 COLLATE RTRIM) AND ((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) GROUP BY t0.c0, vt1.c0;
SELECT TOTAL(CASE WHEN ((0.08527871380820962)<=(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) END) FROM vt1 ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0)) DESC  NULLS LAST;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (1384586141) UNION ALL SELECT * FROM vt1 WHERE ((NOT (1384586141))) UNION ALL SELECT ALL * FROM vt1 WHERE (((1384586141) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON x'';
SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON x'' WHERE ((~ (((t0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON x'' WHERE ((NOT ((~ (((t0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON x'' WHERE ((((~ (((t0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON x'';
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(((NULL)<(t0.c0)) AS NUMERIC)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((NULL)<(t0.c0)) AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(((NULL)<(t0.c0)) AS NUMERIC)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MAX(GROUP_CONCAT(AVG(SUM(AVG('MGQ{FoB4i')))))) UNION ALL SELECT vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MAX(GROUP_CONCAT(AVG(SUM(AVG('MGQ{FoB4i')))))))) UNION ALL SELECT vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MAX(GROUP_CONCAT(AVG(SUM(AVG('MGQ{FoB4i'))))))) ISNULL);
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 NOT INDEXED WHERE (CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (('''-#	') NOT BETWEEN (vt1.c0) AND (t0.c0)) END) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (('''-#	') NOT BETWEEN (vt1.c0) AND (t0.c0)) END))) UNION ALL SELECT * FROM vt1, t0 WHERE (((CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (('''-#	') NOT BETWEEN (vt1.c0) AND (t0.c0)) END) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)IS(vt1.c0))))<((ABS(DISTINCT vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)IS(vt1.c0))))<((ABS(DISTINCT vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)IS(vt1.c0))))<((ABS(DISTINCT vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING COUNT(((GROUP_CONCAT(t0.c0)) BETWEEN (COUNT(*)) AND (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (COUNT(((GROUP_CONCAT(t0.c0)) BETWEEN (COUNT(*)) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((COUNT(((GROUP_CONCAT(t0.c0)) BETWEEN (COUNT(*)) AND (vt1.c0)))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((t0.c0)OR(t0.c0))) NOTNULL)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((((t0.c0)OR(t0.c0))) NOTNULL)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((((t0.c0)OR(t0.c0))) NOTNULL)) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0 COLLATE BINARY) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(t0.c0))AND(TOTAL(t0.c0))))OR(TOTAL(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((SUM(t0.c0))AND(TOTAL(t0.c0))))OR(TOTAL(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((SUM(t0.c0))AND(TOTAL(t0.c0))))OR(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON NULL;
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON NULL WHERE ((((((((((((vt1.c0, vt1.c0, vt1.c0))>=((0.4714420540441666, t0.c0, t0.c0))))AND(((vt1.c0)+(t0.c0)))))AND(x'')))AND(vt1.c0 COLLATE NOCASE)))AND('' COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON NULL WHERE ((NOT ((((((((((((vt1.c0, vt1.c0, vt1.c0))>=((0.4714420540441666, t0.c0, t0.c0))))AND(((vt1.c0)+(t0.c0)))))AND(x'')))AND(vt1.c0 COLLATE NOCASE)))AND('' COLLATE BINARY))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON NULL WHERE ((((((((((((((vt1.c0, vt1.c0, vt1.c0))>=((0.4714420540441666, t0.c0, t0.c0))))AND(((vt1.c0)+(t0.c0)))))AND(x'')))AND(vt1.c0 COLLATE NOCASE)))AND('' COLLATE BINARY))) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON NULL;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 COLLATE BINARY;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 COLLATE BINARY WHERE (((((vt1.c0)+(NULL)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 COLLATE BINARY WHERE ((NOT (((((vt1.c0)+(NULL)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 COLLATE BINARY WHERE (((((((vt1.c0)+(NULL)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 COLLATE BINARY;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (COUNT(t0.c0) IN ()) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT ((COUNT(t0.c0) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (((COUNT(t0.c0) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (COUNT(t0.c0) IN ()) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT ((COUNT(t0.c0) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (((COUNT(t0.c0) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((+ (x'6013'))))<((((t0.c0)||(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((+ (x'6013'))))<((((t0.c0)||(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((+ (x'6013'))))<((((t0.c0)||(t0.c0)))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 IN ())))=(((((0.925886809833576)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0 IN ())))=(((((0.925886809833576)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0 IN ())))=(((((0.925886809833576)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((0x34999965) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((0x34999965) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((0x34999965) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0)>>(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0)>>(SUM(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0)>>(SUM(t0.c0))))) ISNULL);
SELECT ALL MAX(CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)) FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN (t0.c0))  NULLS FIRST;
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((TRIM(t0.c0))OR(t0.c0 COLLATE BINARY)))AND((((vt1.c0))<=((t0.c0)))))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((((TRIM(t0.c0))OR(t0.c0 COLLATE BINARY)))AND((((vt1.c0))<=((t0.c0)))))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((TRIM(t0.c0))OR(t0.c0 COLLATE BINARY)))AND((((vt1.c0))<=((t0.c0)))))) ISNULL));
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((+ (vt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((+ (vt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((0.20454387374631589) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((0.47414541665702203) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((0.20454387374631589) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((0.47414541665702203) NOTNULL)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((0.20454387374631589) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((0.47414541665702203) NOTNULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0 HAVING (vt1.c0 IN ()) COLLATE BINARY UNION ALL SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0 HAVING (NOT ((vt1.c0 IN ()) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0 HAVING (((vt1.c0 IN ()) COLLATE BINARY) ISNULL);
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0 HAVING (vt1.c0 IN ()) COLLATE BINARY UNION ALL SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0 HAVING (NOT ((vt1.c0 IN ()) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0 HAVING (((vt1.c0 IN ()) COLLATE BINARY) ISNULL);
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE ABS(vt1.c0)  WHEN TRIM(vt1.c0, '&3xus') THEN (- (vt1.c0)) END GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((((t0.c0))<>((t0.c0))) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0))<>((t0.c0))) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((vt1.c0)IS(t0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((t0.c0)>=(vt1.c0)) END;
SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((vt1.c0)IS(t0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((t0.c0)>=(vt1.c0)) END WHERE ((('')!=(CAST(vt1.c0 AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((vt1.c0)IS(t0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((t0.c0)>=(vt1.c0)) END WHERE ((NOT ((('')!=(CAST(vt1.c0 AS TEXT)))))) UNION SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((vt1.c0)IS(t0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((t0.c0)>=(vt1.c0)) END WHERE ((((('')<>(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN ((vt1.c0)IS(t0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((t0.c0)>=(vt1.c0)) END;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((t0.c0)<(t0.c0))) AND ((+ ('0.40034473874348564'))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOTNULL)) BETWEEN (((t0.c0)<(t0.c0))) AND ((+ ('0.40034473874348564'))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOTNULL)) BETWEEN (((t0.c0)<(t0.c0))) AND ((+ ('0.40034473874348564'))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING CASE SUM(SUM(vt1.c0))  WHEN (((t0.c0, MAX(MAX(t0.c0)), GROUP_CONCAT(t0.c0))) NOT BETWEEN ((MAX(SUM(vt1.c0)), MAX(t0.c0), GROUP_CONCAT(t0.c0))) AND ((t0.c0, TOTAL(vt1.c0), t0.c0))) THEN CASE WHEN COUNT(*) THEN COUNT(t0.c0) ELSE MAX(vt1.c0) END ELSE AVG(TOTAL(SUM(MAX(vt1.c0)))) END UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (CASE SUM(SUM(vt1.c0))  WHEN (((t0.c0, MAX(MAX(t0.c0)), GROUP_CONCAT(t0.c0))) NOT BETWEEN ((MAX(SUM(vt1.c0)), MAX(t0.c0), GROUP_CONCAT(t0.c0))) AND ((t0.c0, TOTAL(vt1.c0), t0.c0))) THEN CASE WHEN COUNT(*) THEN COUNT(t0.c0) ELSE MAX(vt1.c0) END ELSE AVG(TOTAL(SUM(MAX(vt1.c0)))) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((CASE SUM(SUM(vt1.c0))  WHEN (((t0.c0, MAX(MAX(t0.c0)), GROUP_CONCAT(t0.c0))) NOT BETWEEN ((MAX(SUM(vt1.c0)), MAX(t0.c0), GROUP_CONCAT(t0.c0))) AND ((t0.c0, TOTAL(vt1.c0), t0.c0))) THEN CASE WHEN COUNT(*) THEN COUNT(t0.c0) ELSE MAX(vt1.c0) END ELSE AVG(TOTAL(SUM(MAX(vt1.c0)))) END) ISNULL);
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE ((+ (t0.c0)) COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT ((+ (t0.c0)) COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT * FROM t0, vt1 WHERE ((((+ (t0.c0)) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ('' COLLATE RTRIM) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ('' COLLATE RTRIM))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((('' COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (MIN(MAX(COUNT(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ((NOT (MIN(MAX(COUNT(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((NOT (MIN(MAX(COUNT(t0.c0)))))) ISNULL);
SELECT t0.c0 FROM vt1, t0;
SELECT t0.c0 FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)), CAST(vt1.c0 AS TEXT), vt1.c0)) AND (((NULL IN (vt1.c0)), (NULL IN ()), t0.c0)))) UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)), CAST(vt1.c0 AS TEXT), vt1.c0)) AND (((NULL IN (vt1.c0)), (NULL IN ()), t0.c0)))))) UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)), CAST(vt1.c0 AS TEXT), vt1.c0)) AND (((NULL IN (vt1.c0)), (NULL IN ()), t0.c0)))) ISNULL));
SELECT t0.c0 FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((((- (t0.c0)))/(t0.c0))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((((- (t0.c0)))/(t0.c0))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((((- (t0.c0)))/(t0.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)) NOT BETWEEN ((-7.7110531E8)) AND ((t0.c0)))))==((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)) NOT BETWEEN ((-7.7110531E8)) AND ((t0.c0)))))==((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0)) NOT BETWEEN ((-7.7110531E8)) AND ((t0.c0)))))==((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN((((vt1.c0))>((vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN((((vt1.c0))>((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN((((vt1.c0))>((vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN((((vt1.c0))>((vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN((((vt1.c0))>((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN((((vt1.c0))>((vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 NATURAL JOIN vt1;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((+ (x''))) UNION ALL SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT ((+ (x''))))) UNION ALL SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((((+ (x''))) ISNULL));
SELECT t0.c0 FROM t0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)LIKE(4.3489289E8)))+(((vt1.c0)OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)LIKE(4.3489289E8)))+(((vt1.c0)OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)LIKE(4.3489289E8)))+(((vt1.c0)OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'36aa' END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'36aa' END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'36aa' END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(COUNT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(vt1.c0))) ISNULL);
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (0.33730106489739187) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (0.33730106489739187))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((0.33730106489739187) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((x'') NOT NULL)))=((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((((((x'') NOT NULL)))==((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((((x'') NOT NULL)))=((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) BETWEEN (vt1.c0) AND (CAST(MIN(vt1.c0) AS BLOB))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*)) BETWEEN (vt1.c0) AND (CAST(MIN(vt1.c0) AS BLOB))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*)) BETWEEN (vt1.c0) AND (CAST(MIN(vt1.c0) AS BLOB)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) BETWEEN (vt1.c0) AND (CAST(MIN(vt1.c0) AS BLOB))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*)) BETWEEN (vt1.c0) AND (CAST(MIN(vt1.c0) AS BLOB))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*)) BETWEEN (vt1.c0) AND (CAST(MIN(vt1.c0) AS BLOB)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0 COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM t0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (UNLIKELY(DISTINCT t0.c0) COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (UNLIKELY(DISTINCT t0.c0) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(SUM(TOTAL(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(SUM(TOTAL(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(SUM(TOTAL(t0.c0)))) ISNULL);
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (CASE WHEN vt1.c0 THEN LTRIM(t0.c0, '-211033816') ELSE CHANGES() END) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN LTRIM(t0.c0, '-211033816') ELSE CHANGES() END))) UNION ALL SELECT * FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN LTRIM(t0.c0, '-211033816') ELSE CHANGES() END) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((((((((((((t0.c0))<=((t0.c0))))OR((NOT (t0.c0)))))AND(((t0.c0) NOTNULL))))AND(t0.c0)))AND((~ (t0.c0)))))OR(((t0.c0)>=(t0.c0)))))AND(CASE WHEN 0Xffffffffaee174cf THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((((((((((((t0.c0))<=((t0.c0))))OR((NOT (t0.c0)))))AND(((t0.c0) NOTNULL))))AND(t0.c0)))AND((~ (t0.c0)))))OR(((t0.c0)>=(t0.c0)))))AND(CASE WHEN 0Xffffffffaee174cf THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((((((((((((t0.c0))<=((t0.c0))))OR((NOT (t0.c0)))))AND(((t0.c0) NOTNULL))))AND(t0.c0)))AND((~ (t0.c0)))))OR(((t0.c0)>=(t0.c0)))))AND(CASE WHEN 0Xffffffffaee174cf THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)), CAST(t0.c0 AS INTEGER))) AND (((((0x14624e75, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((x'ba78')<=(t0.c0)), ((((t0.c0)AND(0.8145261584045496)))OR('% qaidm&{')))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)), CAST(t0.c0 AS INTEGER))) AND (((((0X14624e75, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((x'ba78')<=(t0.c0)), ((((t0.c0)AND(0.8145261584045496)))OR('% qaidm&{')))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)), CAST(t0.c0 AS INTEGER))) AND (((((0X14624e75, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((x'ba78')<=(t0.c0)), ((((t0.c0)AND(0.8145261584045496)))OR('% qaidm&{')))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT ((((vt1.c0) IS FALSE) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((((((vt1.c0) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt1.c0))) IS TRUE) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt1.c0))) IS TRUE) WHERE (-2.22895964E8 COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt1.c0))) IS TRUE) WHERE ((NOT (-2.22895964E8 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt1.c0))) IS TRUE) WHERE (((-2.22895964E8 COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt1.c0))) IS TRUE) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0))OR(COUNT(TOTAL(COUNT(*))))))OR(GROUP_CONCAT(MIN(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((COUNT(t0.c0))OR(COUNT(TOTAL(COUNT(*))))))OR(GROUP_CONCAT(MIN(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((COUNT(t0.c0))OR(COUNT(TOTAL(COUNT(*))))))OR(GROUP_CONCAT(MIN(t0.c0))))) ISNULL);
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (CAST(t0.c0 AS REAL)) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (CAST(t0.c0 AS REAL)))) UNION ALL SELECT * FROM t0, vt1 WHERE (((CAST(t0.c0 AS REAL)) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((0.00698249741120871)) BETWEEN ((HEX(t0.c0))) AND ((((((0.3716177367467617)OR(t0.c0)))AND(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((0.00698249741120871)) BETWEEN ((HEX(t0.c0))) AND ((((((0.3716177367467617)OR(t0.c0)))AND(t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((0.00698249741120871)) BETWEEN ((HEX(t0.c0))) AND ((((((0.3716177367467617)OR(t0.c0)))AND(t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (HEX((((vt1.c0))>((vt1.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (HEX((((vt1.c0))>((vt1.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 NOT INDEXED WHERE (((HEX((((vt1.c0))>((vt1.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN MIN(vt1.c0) THEN AVG(vt1.c0) WHEN ((vt1.c0)>(COUNT(AVG(vt1.c0)))) THEN ((COUNT(TOTAL(vt1.c0))) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (COUNT(*))) WHEN MIN(vt1.c0) THEN ((MIN(vt1.c0))OR(MAX(NULL))) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN MIN(vt1.c0) THEN AVG(vt1.c0) WHEN ((vt1.c0)>(COUNT(AVG(vt1.c0)))) THEN ((COUNT(TOTAL(vt1.c0))) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (COUNT(*))) WHEN MIN(vt1.c0) THEN ((MIN(vt1.c0))OR(MAX(NULL))) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN MIN(vt1.c0) THEN AVG(vt1.c0) WHEN ((vt1.c0)>(COUNT(AVG(vt1.c0)))) THEN ((COUNT(TOTAL(vt1.c0))) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (COUNT(*))) WHEN MIN(vt1.c0) THEN ((MIN(vt1.c0))OR(MAX(NULL))) END) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (((((t0.c0)<<(vt1.c0)))<(t0.c0))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (((((t0.c0)<<(vt1.c0)))<(t0.c0))))) UNION ALL SELECT * FROM t0, vt1 WHERE (((((((t0.c0)<<(vt1.c0)))<(t0.c0))) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) ISNULL))<(((t0.c0)AND(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) ISNULL))<(((t0.c0)AND(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) ISNULL))<(((t0.c0)AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '0.4249927351163493' END) IS TRUE)) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '0.4249927351163493' END) IS TRUE)))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '0.4249927351163493' END) IS TRUE)) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE GROUP_CONCAT(vt1.c0)  WHEN 'QR<>r' THEN vt1.c0 END)AND(MIN(vt1.c0))))AND(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((CASE GROUP_CONCAT(vt1.c0)  WHEN 'QR<>r' THEN vt1.c0 END)AND(MIN(vt1.c0))))AND(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((CASE GROUP_CONCAT(vt1.c0)  WHEN 'QR<>r' THEN vt1.c0 END)AND(MIN(vt1.c0))))AND(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE GROUP_CONCAT(vt1.c0)  WHEN 'QR<>r' THEN vt1.c0 END)AND(MIN(vt1.c0))))AND(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((CASE GROUP_CONCAT(vt1.c0)  WHEN 'QR<>r' THEN vt1.c0 END)AND(MIN(vt1.c0))))AND(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((CASE GROUP_CONCAT(vt1.c0)  WHEN 'QR<>r' THEN vt1.c0 END)AND(MIN(vt1.c0))))AND(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1, t0;
SELECT * FROM vt1, t0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT)) UNION ALL SELECT * FROM vt1, t0 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS TEXT)))) UNION ALL SELECT * FROM vt1, t0 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (LIKE(((t0.c0)GLOB(t0.c0)), t0.c0 COLLATE RTRIM)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (LIKE(((t0.c0)GLOB(t0.c0)), t0.c0 COLLATE RTRIM)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((LIKE(((t0.c0)GLOB(t0.c0)), t0.c0 COLLATE RTRIM)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0)||(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0)||(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0)||(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0)||(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0)||(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0)||(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT SUM(((((t0.c0)AND(((t0.c0) IS TRUE))))OR(json_array_length(0xffffffffb8c9fdeb)))) FROM t0 ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS LAST;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE x'b547'  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE x'b547'  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE x'b547'  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))GLOB(CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))GLOB(CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))GLOB(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((t0.c0 IN ()), COUNT(*), SQLITE_SOURCE_ID()))!=((COUNT(*), GROUP_CONCAT(COUNT(t0.c0)), SUM(MIN(t0.c0))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((((t0.c0 IN ()), COUNT(*), SQLITE_SOURCE_ID()))!=((COUNT(*), GROUP_CONCAT(COUNT(t0.c0)), SUM(MIN(t0.c0))))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((((t0.c0 IN ()), COUNT(*), SQLITE_SOURCE_ID()))!=((COUNT(*), GROUP_CONCAT(COUNT(t0.c0)), SUM(MIN(t0.c0)))))) ISNULL);
SELECT ALL MAX(NULLIF(DISTINCT t0.c0, t0.c0 COLLATE BINARY)) FROM t0, vt1 ORDER BY CASE WHEN t0.c0 THEN (0.5356610548757059 IN ()) END DESC;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (0.3712301811492348) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (0.3712301811492348))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((0.3712301811492348) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 NOT INDEXED WHERE (TRIM(((vt1.c0) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 END)) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (TRIM(((vt1.c0) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 END)))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE (((TRIM(((vt1.c0) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 END)) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING TOTAL(COUNT(t0.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (TOTAL(COUNT(t0.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((TOTAL(COUNT(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE BINARY)AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) NOT NULL)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 COLLATE BINARY)AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) NOT NULL)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE BINARY)AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) NOT NULL)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((((t0.c0)>=(t0.c0)))AND((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((-1.284143163E9, t0.c0, t0.c0))))))OR(t0.c0)))AND(((x'2f14')IS NOT(t0.c0)))))AND(((vt1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((((((((t0.c0)>=(t0.c0)))AND((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((-1.284143163E9, t0.c0, t0.c0))))))OR(t0.c0)))AND(((x'2f14')IS NOT(t0.c0)))))AND(((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((((((t0.c0)>=(t0.c0)))AND((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((-1.284143163E9, t0.c0, t0.c0))))))OR(t0.c0)))AND(((x'2f14')IS NOT(t0.c0)))))AND(((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END WHEN (~ (vt1.c0)) THEN ((0.8771117277229119)IS NOT(vt1.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE TYPEOF(t0.c0) END) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END WHEN (~ (vt1.c0)) THEN ((0.8771117277229119)IS NOT(vt1.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE TYPEOF(t0.c0) END))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END WHEN (~ (vt1.c0)) THEN ((0.8771117277229119)IS NOT(vt1.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE TYPEOF(t0.c0) END) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING LIKE(CAST(MIN(vt1.c0) AS INTEGER), MIN(MIN(vt1.c0))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (LIKE(CAST(MIN(vt1.c0) AS INTEGER), MIN(MIN(vt1.c0))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((LIKE(CAST(MIN(vt1.c0) AS INTEGER), MIN(MIN(vt1.c0)))) ISNULL);
SELECT MAX(ABS(DISTINCT ((((((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR('|pné¼¶''x(W')))OR(t0.c0)))) FROM vt1, t0 ORDER BY ((json_quote(t0.c0)) BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((+ (t0.c0)))), t0.c0 ASC, '134656159' ASC  NULLS LAST;
SELECT t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c0)||(vt1.c0))))>((vt1.c0)));
SELECT ALL t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c0)||(vt1.c0))))>((vt1.c0))) WHERE (-1039201501) UNION ALL SELECT ALL t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c0)||(vt1.c0))))>((vt1.c0))) WHERE ((NOT (-1039201501))) UNION ALL SELECT t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c0)||(vt1.c0))))>((vt1.c0))) WHERE (((-1039201501) ISNULL));
SELECT t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c0)||(vt1.c0))))>((vt1.c0)));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0 IN (0Xffffffff822a8078, vt1.c0))) IS TRUE);
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0 IN (0xffffffff822a8078, vt1.c0))) IS TRUE) WHERE (IFNULL(((0.81895426535442) BETWEEN (t0.c0) AND (vt1.c0)), CAST(vt1.c0 AS TEXT))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0 IN (0xffffffff822a8078, vt1.c0))) IS TRUE) WHERE ((NOT (IFNULL(((0.81895426535442) BETWEEN (t0.c0) AND (vt1.c0)), CAST(vt1.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0 IN (0Xffffffff822a8078, vt1.c0))) IS TRUE) WHERE (((IFNULL(((0.81895426535442) BETWEEN (t0.c0) AND (vt1.c0)), CAST(vt1.c0 AS TEXT))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0 IN (0Xffffffff822a8078, vt1.c0))) IS TRUE);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ('Y[csu''?') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ('Y[csu''?'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('Y[csu''?') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS NUMERIC) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS NUMERIC))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS NUMERIC)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS NUMERIC) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS NUMERIC))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS NUMERIC)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((NOT ('-1119448113'))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((NOT ('-1119448113'))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((NOT ('-1119448113'))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN 'vmql>)^' WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((t0.c0 IN ()))))AND(CAST('now' AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN 'vmql>)^' WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((t0.c0 IN ()))))AND(CAST('now' AS TEXT)))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN 'vmql>)^' WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((t0.c0 IN ()))))AND(CAST('now' AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0))OR(AVG(vt1.c0))))OR(COUNT(SUM(x'')))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (((((MIN(vt1.c0))OR(AVG(vt1.c0))))OR(COUNT(SUM(x'')))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((((((MIN(vt1.c0))OR(AVG(vt1.c0))))OR(COUNT(SUM(x''))))) ISNULL);
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (NULLIF(((vt1.c0) IS TRUE), ((vt1.c0)-(vt1.c0)))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (NULLIF(((vt1.c0) IS TRUE), ((vt1.c0)-(vt1.c0)))))) UNION ALL SELECT * FROM t0, vt1 WHERE (((NULLIF(((vt1.c0) IS TRUE), ((vt1.c0)-(vt1.c0)))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((945527461)) AND ((t0.c0)))) NOT BETWEEN (((t0.c0)*(0xffffffff88c7afb5))) AND ((((t0.c0))>((0X4f35ca3f)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((945527461)) AND ((t0.c0)))) NOT BETWEEN (((t0.c0)*(0Xffffffff88c7afb5))) AND ((((t0.c0))>((0x4f35ca3f)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((945527461)) AND ((t0.c0)))) NOT BETWEEN (((t0.c0)*(0Xffffffff88c7afb5))) AND ((((t0.c0))>((0X4f35ca3f)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((((t0.c0) NOTNULL) IN ((('3)') BETWEEN (NULL) AND (t0.c0))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT ((((t0.c0) NOTNULL) IN ((('3)') BETWEEN (NULL) AND (t0.c0))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((((((t0.c0) NOTNULL) IN ((('3)') BETWEEN (NULL) AND (t0.c0))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MIN(((((vt1.c0)%(vt1.c0))) NOT NULL)) FROM vt1;
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0 COLLATE BINARY) NOTNULL)) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (((t0.c0 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE (((((t0.c0 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((NOT ((NOT (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((((NOT (t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE)/(((t0.c0)IS(vt1.c0))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)/(((t0.c0)IS(vt1.c0))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((vt1.c0 COLLATE NOCASE)/(((t0.c0)IS(vt1.c0))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0;
SELECT t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE ((QUOTE(NULL) IN ())) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT ((QUOTE(NULL) IN ())))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE ((((QUOTE(NULL) IN ())) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM vt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((x'')<=(vt1.c0)))AND((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((x'')<=(vt1.c0)))AND((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((x'')<=(vt1.c0)))AND((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((NULL) BETWEEN (0x74bf014b) AND (t0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((NULL) BETWEEN (0x74bf014b) AND (t0.c0))) ISNULL)))) UNION ALL SELECT * FROM t0 WHERE (((((((NULL) BETWEEN (0x74bf014b) AND (t0.c0))) ISNULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((((vt1.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((- (NULL COLLATE RTRIM))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT ((- (NULL COLLATE RTRIM))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((- (NULL COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CASE DATE(t0.c0, vt1.c0, NULL, t0.c0, t0.c0)  WHEN vt1.c0 COLLATE RTRIM THEN x'' END;
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CASE DATE(t0.c0, vt1.c0, NULL, t0.c0, t0.c0)  WHEN vt1.c0 COLLATE RTRIM THEN x'' END WHERE ((~ (CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CASE DATE(t0.c0, vt1.c0, NULL, t0.c0, t0.c0)  WHEN vt1.c0 COLLATE RTRIM THEN x'' END WHERE ((NOT ((~ (CAST(t0.c0 AS INTEGER)))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CASE DATE(t0.c0, vt1.c0, NULL, t0.c0, t0.c0)  WHEN vt1.c0 COLLATE RTRIM THEN x'' END WHERE ((((~ (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON CASE DATE(t0.c0, vt1.c0, NULL, t0.c0, t0.c0)  WHEN vt1.c0 COLLATE RTRIM THEN x'' END;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (UNLIKELY(CAST('-1013807049' AS REAL))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (UNLIKELY(CAST('-1013807049' AS REAL))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((UNLIKELY(CAST('-1013807049' AS REAL))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (((vt1.c0 COLLATE BINARY)<<(CASE WHEN vt1.c0 THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE ((NOT (((vt1.c0 COLLATE BINARY)<<(CASE WHEN vt1.c0 THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE (((((vt1.c0 COLLATE BINARY)<<(CASE WHEN vt1.c0 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING GROUP_CONCAT((((vt1.c0, vt1.c0, TOTAL(COUNT(MIN(vt1.c0)))))<=((MAX(vt1.c0), GROUP_CONCAT(MIN(t0.c0)), vt1.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT((((vt1.c0, vt1.c0, TOTAL(COUNT(MIN(vt1.c0)))))<=((MAX(vt1.c0), GROUP_CONCAT(MIN(t0.c0)), vt1.c0)))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((GROUP_CONCAT((((vt1.c0, vt1.c0, TOTAL(COUNT(MIN(vt1.c0)))))<=((MAX(vt1.c0), GROUP_CONCAT(MIN(t0.c0)), vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))>=((vt1.c0))))OR((+ (vt1.c0)))))AND(((vt1.c0) ISNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0))>=((vt1.c0))))OR((+ (vt1.c0)))))AND(((vt1.c0) ISNULL)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0))>=((vt1.c0))))OR((+ (vt1.c0)))))AND(((vt1.c0) ISNULL)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (0Xffffffffe6d0a92b) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (0xffffffffe6d0a92b))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((0xffffffffe6d0a92b) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS BLOB)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN x'' THEN ((t0.c0) BETWEEN (GROUP_CONCAT(t0.c0)) AND (MIN(t0.c0))) ELSE NULL END UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN x'' THEN ((t0.c0) BETWEEN (GROUP_CONCAT(t0.c0)) AND (MIN(t0.c0))) ELSE NULL END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN x'' THEN ((t0.c0) BETWEEN (GROUP_CONCAT(t0.c0)) AND (MIN(t0.c0))) ELSE NULL END) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN x'' THEN ((t0.c0) BETWEEN (GROUP_CONCAT(t0.c0)) AND (MIN(t0.c0))) ELSE NULL END UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN x'' THEN ((t0.c0) BETWEEN (GROUP_CONCAT(t0.c0)) AND (MIN(t0.c0))) ELSE NULL END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN x'' THEN ((t0.c0) BETWEEN (GROUP_CONCAT(t0.c0)) AND (MIN(t0.c0))) ELSE NULL END) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((vt1.c0 IN ()) IN (0x179d7f5c))) UNION ALL SELECT * FROM vt1, t0 WHERE ((NOT (((vt1.c0 IN ()) IN (0x179d7f5c))))) UNION ALL SELECT * FROM vt1, t0 WHERE (((((vt1.c0 IN ()) IN (0x179d7f5c))) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (CASE ((((vt1.c0)OR(t0.c0)))OR(t0.c0))  WHEN (vt1.c0 IN ()) THEN (((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0))) END) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, t0 WHERE ((NOT (CASE ((((vt1.c0)OR(t0.c0)))OR(t0.c0))  WHEN (vt1.c0 IN ()) THEN (((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0))) END))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((CASE ((((vt1.c0)OR(t0.c0)))OR(t0.c0))  WHEN (vt1.c0 IN ()) THEN (((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL t0.c0 FROM vt1 NOT INDEXED CROSS JOIN t0 ON CASE WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 CROSS JOIN t0 ON CASE WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END END WHERE ((CAST(t0.c0 AS BLOB) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 CROSS JOIN t0 ON CASE WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END END WHERE ((NOT ((CAST(t0.c0 AS BLOB) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 CROSS JOIN t0 ON CASE WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END END WHERE ((((CAST(t0.c0 AS BLOB) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 NOT INDEXED CROSS JOIN t0 ON CASE WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END END GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING COUNT(HEX(DISTINCT COUNT(*))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(HEX(DISTINCT COUNT(*))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(HEX(DISTINCT COUNT(*)))) ISNULL);
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1, t0 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT * FROM t0 NOT INDEXED LEFT OUTER JOIN vt1 ON (-1883589937 IN ());
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (-1883589937 IN ()) WHERE ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (-1883589937 IN ()) WHERE ((NOT ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (-1883589937 IN ()) WHERE ((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED LEFT OUTER JOIN vt1 ON (-1883589937 IN ());
SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON vt1.c0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON vt1.c0 WHERE (CAST(vt1.c0 AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON vt1.c0 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON vt1.c0 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON vt1.c0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING COUNT(COUNT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS INTEGER)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) ISNULL) AS INTEGER)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) ISNULL) AS INTEGER)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (TRIM(CASE WHEN t0.c0 THEN t0.c0 WHEN 0x7ccd5290 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT NULL))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (TRIM(CASE WHEN t0.c0 THEN t0.c0 WHEN 0x7ccd5290 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT NULL))))) UNION SELECT DISTINCT * FROM t0 WHERE (((TRIM(CASE WHEN t0.c0 THEN t0.c0 WHEN 0X7ccd5290 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT NULL))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END)<<((+ (t0.c0)))) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END)<<((+ (t0.c0)))) WHERE (CASE x''  WHEN UNLIKELY(DISTINCT vt1.c0) THEN t0.c0 END) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END)<<((+ (t0.c0)))) WHERE ((NOT (CASE x''  WHEN UNLIKELY(DISTINCT vt1.c0) THEN t0.c0 END))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END)<<((+ (t0.c0)))) WHERE (((CASE x''  WHEN UNLIKELY(DISTINCT vt1.c0) THEN t0.c0 END) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END)<<((+ (t0.c0)))) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((+ ('\rUd[au'))) BETWEEN ((MIN(MIN(vt1.c0)) IN ())) AND (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ((((+ ('\rUd[au'))) BETWEEN ((MIN(MIN(vt1.c0)) IN ())) AND (COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((((+ ('\rUd[au'))) BETWEEN ((MIN(MIN(vt1.c0)) IN ())) AND (COUNT(*)))) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((+ ('\rUd[au'))) BETWEEN ((MIN(MIN(vt1.c0)) IN ())) AND (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ((((+ ('\rUd[au'))) BETWEEN ((MIN(MIN(vt1.c0)) IN ())) AND (COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((((+ ('\rUd[au'))) BETWEEN ((MIN(MIN(vt1.c0)) IN ())) AND (COUNT(*)))) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (vt1.c0) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (IFNULL(((vt1.c0)/(vt1.c0)), (('15|~_') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (IFNULL(((vt1.c0)/(vt1.c0)), (('15|~_') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((IFNULL(((vt1.c0)/(vt1.c0)), (('15|~_') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((t0.c0)&(t0.c0)))) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((t0.c0)&(t0.c0)))) WHERE (447797692) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((t0.c0)&(t0.c0)))) WHERE ((NOT (447797692))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((t0.c0)&(t0.c0)))) WHERE (((447797692) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((t0.c0)&(t0.c0)))) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((~ (vt1.c0))) NOTNULL)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((((~ (vt1.c0))) NOTNULL)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((((~ (vt1.c0))) NOTNULL)) ISNULL));
SELECT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) IS FALSE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN (NOT (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN (NOT (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0) NOTNULL), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(0x2f8d45e8)), t0.c0 COLLATE NOCASE))=(((NOT (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0) NOTNULL), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(0x2f8d45e8)), t0.c0 COLLATE NOCASE))==(((NOT (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0) NOTNULL), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(0X2f8d45e8)), t0.c0 COLLATE NOCASE))==(((NOT (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (IFNULL((t0.c0 IN (t0.c0, t0.c0)), t0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (IFNULL((t0.c0 IN (t0.c0, t0.c0)), t0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((IFNULL((t0.c0 IN (t0.c0, t0.c0)), t0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 WHERE (NULL) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1 WHERE ((NOT (NULL))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1 WHERE (((NULL) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((8.11252352E8) IS TRUE))IS(t0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((8.11252352E8) IS TRUE))IS(t0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((8.11252352E8) IS TRUE))IS(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((TRIM(DISTINCT vt1.c0))AND(((vt1.c0)/(vt1.c0)))))OR(((vt1.c0)IS NOT(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((TRIM(DISTINCT vt1.c0))AND(((vt1.c0)/(vt1.c0)))))OR(((vt1.c0)IS NOT(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((TRIM(DISTINCT vt1.c0))AND(((vt1.c0)/(vt1.c0)))))OR(((vt1.c0)IS NOT(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0 NOT INDEXED, vt1 GROUP BY vt1.c0, t0.c0 HAVING COUNT(TOTAL(t0.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (COUNT(TOTAL(t0.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((COUNT(TOTAL(t0.c0))) ISNULL);
SELECT ALL MIN(((NULL) NOTNULL)) FROM vt1, t0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)+(t0.c0)) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)+(t0.c0)) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)+(t0.c0)) IN ())) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- ((((t0.c0))!=((t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- ((((t0.c0))<>((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- ((((t0.c0))!=((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (HEX(((vt1.c0) ISNULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (HEX(((vt1.c0) ISNULL))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((HEX(((vt1.c0) ISNULL))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((((COUNT(*))) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((((COUNT(*))) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((((COUNT(*))) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((vt1.c0))))) ISNULL);
SELECT ALL MIN(vt1.c0) FROM vt1;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(((t0.c0) NOT NULL) AS REAL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) NOT NULL) AS REAL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(((t0.c0) NOT NULL) AS REAL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (((t0.c0)-(vt1.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE ((NOT (((t0.c0)-(vt1.c0 COLLATE NOCASE))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE (((((t0.c0)-(vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (SUM(TOTAL(SUM(COUNT(*)))) IN (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT ((SUM(TOTAL(SUM(COUNT(*)))) IN (COUNT(*) COLLATE NOCASE)))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (((SUM(TOTAL(SUM(COUNT(*)))) IN (COUNT(*) COLLATE NOCASE))) ISNULL);
SELECT * FROM t0 INNER JOIN vt1 ON vt1.c0;
SELECT ALL * FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE (vt1.c0) UNION ALL SELECT * FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE (((vt1.c0) ISNULL));
SELECT * FROM t0 INNER JOIN vt1 ON vt1.c0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((NULL)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR((t0.c0 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((NULL)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR((t0.c0 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((NULL)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR((t0.c0 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING MAX(MAX(t0.c0)) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (MAX(MAX(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((MAX(MAX(t0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)LIKE(t0.c0)))) AND ((((((((((t0.c0)AND(t0.c0)))OR(0.2886602129318816)))AND(t0.c0)))OR(x'')))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t0.c0)LIKE(t0.c0)))) AND ((((((((((t0.c0)AND(t0.c0)))OR(0.2886602129318816)))AND(t0.c0)))OR(x'')))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0)LIKE(t0.c0)))) AND ((((((((((t0.c0)AND(t0.c0)))OR(0.2886602129318816)))AND(t0.c0)))OR(x'')))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (HEX(((vt1.c0)<<(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (HEX(((vt1.c0)<<(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((HEX(((vt1.c0)<<(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((- (CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((- (CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN 0x22e529be WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN MAX(vt1.c0, vt1.c0) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN json_quote(vt1.c0) THEN (~ (vt1.c0)) WHEN '-1794887799' THEN NULL END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN 0X22e529be WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN MAX(vt1.c0, vt1.c0) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN json_quote(vt1.c0) THEN (~ (vt1.c0)) WHEN '-1794887799' THEN NULL END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN 0X22e529be WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN MAX(vt1.c0, vt1.c0) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN json_quote(vt1.c0) THEN (~ (vt1.c0)) WHEN '-1794887799' THEN NULL END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((- (vt1.c0)) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((- (vt1.c0)) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST((- (vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING TOTAL(((((((((COUNT(vt1.c0))AND(MIN(t0.c0))))AND(MIN(MIN(COUNT(*))))))OR(GROUP_CONCAT(TOTAL(vt1.c0)))))OR(COUNT(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (TOTAL(((((((((COUNT(vt1.c0))AND(MIN(t0.c0))))AND(MIN(MIN(COUNT(*))))))OR(GROUP_CONCAT(TOTAL(vt1.c0)))))OR(COUNT(COUNT(*))))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((TOTAL(((((((((COUNT(vt1.c0))AND(MIN(t0.c0))))AND(MIN(MIN(COUNT(*))))))OR(GROUP_CONCAT(TOTAL(vt1.c0)))))OR(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))=(((NOT (vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))==(((NOT (vt1.c0)))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))==(((NOT (vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ (t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (TOTAL_CHANGES()) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((((((TOTAL(vt1.c0))OR(vt1.c0)))OR(COUNT(*)))) BETWEEN (COUNT(*)) AND (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((((((TOTAL(vt1.c0))OR(vt1.c0)))OR(COUNT(*)))) BETWEEN (COUNT(*)) AND (COUNT(*))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((((((((TOTAL(vt1.c0))OR(vt1.c0)))OR(COUNT(*)))) BETWEEN (COUNT(*)) AND (COUNT(*)))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((((((TOTAL(vt1.c0))OR(vt1.c0)))OR(COUNT(*)))) BETWEEN (COUNT(*)) AND (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((((((TOTAL(vt1.c0))OR(vt1.c0)))OR(COUNT(*)))) BETWEEN (COUNT(*)) AND (COUNT(*))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((((((((TOTAL(vt1.c0))OR(vt1.c0)))OR(COUNT(*)))) BETWEEN (COUNT(*)) AND (COUNT(*)))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ('0.933038476351466') UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ('0.933038476351466'))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((('0.933038476351466') ISNULL));
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1 CROSS JOIN t0 ON x'';
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1 CROSS JOIN t0 ON x'' WHERE (((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))AND(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (0.4718997461884662))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1 CROSS JOIN t0 ON x'' WHERE ((NOT (((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))AND(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (0.4718997461884662))))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1 CROSS JOIN t0 ON x'' WHERE (((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))AND(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (0.4718997461884662))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1 CROSS JOIN t0 ON x'';
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (-1.530219593E9) AND (vt1.c0)))<<((((vt1.c0))>=((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (-1.530219593E9) AND (vt1.c0)))<<((((vt1.c0))>=((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (-1.530219593E9) AND (vt1.c0)))<<((((vt1.c0))>=((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((COUNT(*))) BETWEEN ((AVG(t0.c0))) AND ((CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((AVG(t0.c0))) AND ((CAST(vt1.c0 AS REAL)))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((((COUNT(*))) BETWEEN ((AVG(t0.c0))) AND ((CAST(vt1.c0 AS REAL))))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((COUNT(*))) BETWEEN ((AVG(t0.c0))) AND ((CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((AVG(t0.c0))) AND ((CAST(vt1.c0 AS REAL)))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((((COUNT(*))) BETWEEN ((AVG(t0.c0))) AND ((CAST(vt1.c0 AS REAL))))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL TOTAL((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))) NOT BETWEEN ((((0xffffffffd147737a)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)<<(vt1.c0))))) FROM t0, vt1;
SELECT * FROM t0 CROSS JOIN vt1 ON '486136747';
SELECT * FROM t0 CROSS JOIN vt1 ON '486136747' WHERE (SUBSTR(RTRIM(vt1.c0), TRIM(t0.c0, vt1.c0))) UNION ALL SELECT * FROM t0 CROSS JOIN vt1 ON '486136747' WHERE ((NOT (SUBSTR(RTRIM(vt1.c0), TRIM(t0.c0, vt1.c0))))) UNION ALL SELECT * FROM t0 CROSS JOIN vt1 ON '486136747' WHERE (((SUBSTR(RTRIM(vt1.c0), TRIM(t0.c0, vt1.c0))) ISNULL));
SELECT * FROM t0 CROSS JOIN vt1 ON '486136747';
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS REAL) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS REAL) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (((- (vt1.c0))) BETWEEN (CAST(AVG(vt1.c0) AS INTEGER)) AND (MAX(MAX(COUNT(*))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT ((((- (vt1.c0))) BETWEEN (CAST(AVG(vt1.c0) AS INTEGER)) AND (MAX(MAX(COUNT(*))))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (((((- (vt1.c0))) BETWEEN (CAST(AVG(vt1.c0) AS INTEGER)) AND (MAX(MAX(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((((vt1.c0))==((5.85443774E8))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((((vt1.c0))=((5.85443774E8))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((((vt1.c0))==((5.85443774E8))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (IFNULL(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)IS(t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (IFNULL(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)IS(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((IFNULL(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)IS(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (json_patch((t0.c0 IN ()), ((t0.c0)>(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (json_patch((t0.c0 IN ()), ((t0.c0)>(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((json_patch((t0.c0 IN ()), ((t0.c0)>(t0.c0)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt1.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE (((((((t0.c0) NOTNULL))OR(0.445035862050399)))OR(((((NULL)OR(t0.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE ((NOT (((((((t0.c0) NOTNULL))OR(0.445035862050399)))OR(((((NULL)OR(t0.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE (((((((((t0.c0) NOTNULL))OR(0.445035862050399)))OR(((((NULL)OR(t0.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)<<(((-1354409719)||(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)<<(((-1354409719)||(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)<<(((-1354409719)||(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(SUM(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(SUM(vt1.c0))) ISNULL);
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (- (((((t0.c0)OR(t0.c0)))AND(vt1.c0))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (- (((((t0.c0)OR(t0.c0)))AND(vt1.c0)))) WHERE (MIN(CAST(t0.c0 AS TEXT), ((vt1.c0) ISNULL))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (- (((((t0.c0)OR(t0.c0)))AND(vt1.c0)))) WHERE ((NOT (MIN(CAST(t0.c0 AS TEXT), ((vt1.c0) ISNULL))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (- (((((t0.c0)OR(t0.c0)))AND(vt1.c0)))) WHERE (((MIN(CAST(t0.c0 AS TEXT), ((vt1.c0) ISNULL))) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (- (((((t0.c0)OR(t0.c0)))AND(vt1.c0))));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (((((((vt1.c0)AND(t0.c0)))AND(t0.c0))))==((((t0.c0)IS NOT(t0.c0))))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (((((((vt1.c0)AND(t0.c0)))AND(t0.c0))))==((((t0.c0)IS NOT(t0.c0))))) WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((NULL))) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (((((((vt1.c0)AND(t0.c0)))AND(t0.c0))))==((((t0.c0)IS NOT(t0.c0))))) WHERE ((NOT (CASE WHEN CAST(x'' AS NUMERIC) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((NULL))) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (((((((vt1.c0)AND(t0.c0)))AND(t0.c0))))==((((t0.c0)IS NOT(t0.c0))))) WHERE (((CASE WHEN CAST(x'' AS NUMERIC) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((NULL))) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (((((((vt1.c0)AND(t0.c0)))AND(t0.c0))))==((((t0.c0)IS NOT(t0.c0))))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0)) NOT BETWEEN (((((((((t0.c0)AND(t0.c0)))AND(MAX(t0.c0))))OR(MIN(AVG(COUNT(*))))))AND(t0.c0))) AND (MIN(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((AVG(t0.c0)) NOT BETWEEN (((((((((t0.c0)AND(t0.c0)))AND(MAX(t0.c0))))OR(MIN(AVG(COUNT(*))))))AND(t0.c0))) AND (MIN(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((AVG(t0.c0)) NOT BETWEEN (((((((((t0.c0)AND(t0.c0)))AND(MAX(t0.c0))))OR(MIN(AVG(COUNT(*))))))AND(t0.c0))) AND (MIN(GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (CAST(1537040911 AS NUMERIC) IN ());
SELECT vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (CAST(1537040911 AS NUMERIC) IN ()) WHERE ((((+ (t0.c0))) BETWEEN ((NOT (t0.c0))) AND (t0.c0))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (CAST(1537040911 AS NUMERIC) IN ()) WHERE ((NOT ((((+ (t0.c0))) BETWEEN ((NOT (t0.c0))) AND (t0.c0))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (CAST(1537040911 AS NUMERIC) IN ()) WHERE ((((((+ (t0.c0))) BETWEEN ((NOT (t0.c0))) AND (t0.c0))) ISNULL));
SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (CAST(1537040911 AS NUMERIC) IN ());
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (load_extension(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (load_extension(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((load_extension(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ISNULL));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((LIKELY(t0.c0), CASE '( \ 1é‰–'  WHEN t0.c0 THEN t0.c0 END, (~ (t0.c0)))) AND ((CASE WHEN t0.c0 THEN '*y''/AD' END, highlight(t0.c0, t0.c0, t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((LIKELY(t0.c0), CASE '( \ 1é‰–'  WHEN t0.c0 THEN t0.c0 END, (~ (t0.c0)))) AND ((CASE WHEN t0.c0 THEN '*y''/AD' END, highlight(t0.c0, t0.c0, t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((LIKELY(t0.c0), CASE '( \ 1é‰–'  WHEN t0.c0 THEN t0.c0 END, (~ (t0.c0)))) AND ((CASE WHEN t0.c0 THEN '*y''/AD' END, highlight(t0.c0, t0.c0, t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING 0.3802277901859257 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (0.3802277901859257)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.3802277901859257) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING 0.3802277901859257 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (0.3802277901859257)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.3802277901859257) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1;
SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((((((t0.c0) NOTNULL)))>=((NULLIF(vt1.c0, t0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((NOT ((((((t0.c0) NOTNULL)))>=((NULLIF(vt1.c0, t0.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((((((((t0.c0) NOTNULL)))>=((NULLIF(vt1.c0, t0.c0))))) ISNULL));
SELECT vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (ROUND('', NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (ROUND('', NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((ROUND('', NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING TRIM(MAX(vt1.c0), AVG(t0.c0)) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (TRIM(MAX(vt1.c0), AVG(t0.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((TRIM(MAX(vt1.c0), AVG(t0.c0))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING TRIM(MAX(vt1.c0), AVG(t0.c0)) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (TRIM(MAX(vt1.c0), AVG(t0.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((TRIM(MAX(vt1.c0), AVG(t0.c0))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT TOTAL(x'ab27') FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER) ASC  NULLS FIRST, CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN 0.7957850693374697 WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END DESC  NULLS LAST;
SELECT t0.c0 FROM t0 CROSS JOIN vt1 ON (('563260759') IS FALSE);
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt1 ON (('563260759') IS FALSE) WHERE (((((((((t0.c0)AND(CAST(t0.c0 AS REAL))))AND('-115016721')))OR(CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) UNION ALL SELECT t0.c0 FROM t0 CROSS JOIN vt1 ON (('563260759') IS FALSE) WHERE ((NOT (((((((((t0.c0)AND(CAST(t0.c0 AS REAL))))AND('-115016721')))OR(CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 CROSS JOIN vt1 ON (('563260759') IS FALSE) WHERE (((((((((((t0.c0)AND(CAST(t0.c0 AS REAL))))AND('-115016721')))OR(CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ISNULL));
SELECT t0.c0 FROM t0 CROSS JOIN vt1 ON (('563260759') IS FALSE);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('e2') IS FALSE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((('e2') IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((('e2') IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE ''  WHEN CAST(t0.c0 AS REAL) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END END GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE ''  WHEN CAST(t0.c0 AS REAL) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END END WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE ''  WHEN CAST(t0.c0 AS REAL) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END END WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE ''  WHEN CAST(t0.c0 AS REAL) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END END WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE ''  WHEN CAST(t0.c0 AS REAL) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END END GROUP BY t0.c0;
