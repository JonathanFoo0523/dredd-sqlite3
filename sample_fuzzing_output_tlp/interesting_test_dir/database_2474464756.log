-- Time: 2024/06/11 09:13:28
-- Database: database56
-- Database version: 3.40.0
-- seed value: 2474464756
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES (0.6928720499135451, x'3dfb'), (x'4017', ''), (NULL, x'81210454'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 5ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-381406209'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (NULL), ('620200967'); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES ('-1355208598', x''); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (x''), (0.07921768483360847), ('0.6928720499135451'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'76c7') NOT BETWEEN (x'') AND (x'')))<(CASE 0.5065077618063033  WHEN NULL THEN x'' ELSE NULL END)); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (282144357); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((rt0.c0 IN ()) IN ()) FROM vt1; -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.6140188578353893); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('K7e4+kv'), (NULL), ('-1911619294'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('e%Dk?DgR', 0.057614020887318595); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (2.82144357E8); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL); -- 5ms;
INSERT OR IGNORE INTO rt0 VALUES (0.044922855022705876, NULL, x''); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0xffffffffd88754f7), (NULL), ('-662219529'), (0Xfffffffff6b346f6), (NULL); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-39791917); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x''); -- 8ms;
PRAGMA integrity_check; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (0.731940509388024), ('-156023050'), (x'57630a52'); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('1574998969'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=13'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''), ('D[-&JxP቏%'), (''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1977644904,2');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('0.6928720499135451', 1305398280, 0.6616122931755404); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (x'f7c3', '቏e'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0.08035062080270783), (x''), (0.48583506466521154); -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
DELETE FROM vt1 WHERE CASE (vt1.c0 IN (vt1.c0))  WHEN NULL THEN LIKELIHOOD(DISTINCT vt1.c0, 0.29323604162307326) ELSE (0.7992784479778942 IN ()) END; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1009360131); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES ('E/ੋT\nCrd'), (x''), (x''); -- 5ms;
PRAGMA temp.cache_spill = 8724435871957915633; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (1180692096, 'O('); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (387326967), (0.7780610053609343), ('_[\nmW'); -- 1ms;
ANALYZE vt1; -- 1ms;
INSERT OR FAIL INTO rt0(c2) VALUES (0xffffffffdb79ef0f); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-1.355208598E9); -- 0ms;
PRAGMA main.optimize; -- 0ms;
PRAGMA cache_spill; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
PRAGMA main.optimize; -- 0ms;
ANALYZE rt0; -- 8ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
REINDEX  vt1; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'b627', x'', ''), (x'', '', 0.8824804428876906), (NULL, '<st', x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0, c2) VALUES (0.6111137718709093, 0.6111137718709093, 0.3977321315002744); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('*V'), (0.140786548322114), ('l0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.threads; -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('555315919'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.5388919719535971), (1167417032), (x''); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (0xffffffff857bd044); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((+ (((vt1.c0) NOT NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((+ (((vt1.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c0, x'', vt1.c0))<>((rt0.c2, vt1.c0, rt0.c2))) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0, x'', vt1.c0))<>((rt0.c2, vt1.c0, rt0.c2))) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c0, x'', vt1.c0))<>((rt0.c2, vt1.c0, rt0.c2))) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(vt1.c0 COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0 COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0 COLLATE BINARY)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(vt1.c0 COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0 COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0 COLLATE BINARY)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MAX(LIKE(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((((((((((vt1.c0)OR(vt1.c0)))OR('')))AND(vt1.c0)))OR(vt1.c0)))AND(-3.81406209E8)))AND(vt1.c0)))) FROM vt1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (401173482 COLLATE RTRIM) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (401173482 COLLATE RTRIM))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((401173482 COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((0Xffffffffd36dcf41))<((rt0.c0))))OR((rt0.c2 IN (rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((0Xffffffffd36dcf41))<((rt0.c0))))OR((rt0.c2 IN (rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((0xffffffffd36dcf41))<((rt0.c0))))OR((rt0.c2 IN (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING '鎹TGk' UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (NOT ('鎹TGk')) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (('鎹TGk') ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING '鎹TGk' UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (NOT ('鎹TGk')) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (('鎹TGk') ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (((rt0.c0))=((rt0.c1))) THEN NULL ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c0))==((rt0.c1))) THEN NULL ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (((rt0.c0))=((rt0.c1))) THEN NULL ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END  WHEN ((rt0.c2)>=(rt0.c2)) THEN ((rt0.c1)<=(rt0.c1)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) WHEN rt0.c1 THEN CAST(-662219529 AS INTEGER) END) GROUP BY rt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END  WHEN ((rt0.c2)>=(rt0.c2)) THEN ((rt0.c1)<=(rt0.c1)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) WHEN rt0.c1 THEN CAST(-662219529 AS INTEGER) END))) GROUP BY rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((CASE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END  WHEN ((rt0.c2)>=(rt0.c2)) THEN ((rt0.c1)<=(rt0.c1)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) WHEN rt0.c1 THEN CAST(-662219529 AS INTEGER) END) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING COALESCE(COUNT(*), (((vt1.c0, COUNT(*), rt0.c2)) BETWEEN ((vt1.c0, MAX(COUNT(*)), rt0.c0)) AND ((COUNT(rt0.c2), rt0.c2, COUNT(TOTAL(vt1.c0))))), GROUP_CONCAT('T'), CASE WHEN GROUP_CONCAT(rt0.c1) THEN '-1' WHEN COUNT(TOTAL(MIN(rt0.c1))) THEN SUM(MIN(GROUP_CONCAT(rt0.c0))) WHEN MAX(rt0.c1) THEN COUNT(TOTAL(SUM(rt0.c1))) ELSE SUM(AVG(rt0.c0)) END) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (COALESCE(COUNT(*), (((vt1.c0, COUNT(*), rt0.c2)) BETWEEN ((vt1.c0, MAX(COUNT(*)), rt0.c0)) AND ((COUNT(rt0.c2), rt0.c2, COUNT(TOTAL(vt1.c0))))), GROUP_CONCAT('T'), CASE WHEN GROUP_CONCAT(rt0.c1) THEN '-1' WHEN COUNT(TOTAL(MIN(rt0.c1))) THEN SUM(MIN(GROUP_CONCAT(rt0.c0))) WHEN MAX(rt0.c1) THEN COUNT(TOTAL(SUM(rt0.c1))) ELSE SUM(AVG(rt0.c0)) END))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((COALESCE(COUNT(*), (((vt1.c0, COUNT(*), rt0.c2)) BETWEEN ((vt1.c0, MAX(COUNT(*)), rt0.c0)) AND ((COUNT(rt0.c2), rt0.c2, COUNT(TOTAL(vt1.c0))))), GROUP_CONCAT('T'), CASE WHEN GROUP_CONCAT(rt0.c1) THEN '-1' WHEN COUNT(TOTAL(MIN(rt0.c1))) THEN SUM(MIN(GROUP_CONCAT(rt0.c0))) WHEN MAX(rt0.c1) THEN COUNT(TOTAL(SUM(rt0.c1))) ELSE SUM(AVG(rt0.c0)) END)) ISNULL);
SELECT MAX((+ (((((vt1.c0)AND('353355072')))OR(rt0.c2))))) FROM rt0, vt1 ORDER BY ((x'')IS(rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, rt0.c0)))*(UPPER(rt0.c2)));
SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, rt0.c0)))*(UPPER(rt0.c2))) WHERE ((NOT (CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, rt0.c0)))*(UPPER(rt0.c2))) WHERE ((NOT ((NOT (CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, rt0.c0)))*(UPPER(rt0.c2))) WHERE ((((NOT (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, rt0.c0)))*(UPPER(rt0.c2)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 WHERE ((((vt1.c0)) NOT BETWEEN ((1.977644904E9)) AND (((- (rt0.c2)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((1.977644904E9)) AND (((- (rt0.c2)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0 NOT INDEXED WHERE ((((((vt1.c0)) NOT BETWEEN ((1.977644904E9)) AND (((- (rt0.c2)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (CASE WHEN rt0.c0 THEN vt1.c0 END IN ()) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (NOT ((CASE WHEN rt0.c0 THEN vt1.c0 END IN ()))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (((CASE WHEN rt0.c0 THEN vt1.c0 END IN ())) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (CASE WHEN rt0.c0 THEN vt1.c0 END IN ()) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (NOT ((CASE WHEN rt0.c0 THEN vt1.c0 END IN ()))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (((CASE WHEN rt0.c0 THEN vt1.c0 END IN ())) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c1 FROM rt0, vt1;
SELECT rt0.c1 FROM rt0, vt1 WHERE (((((((rt0.c2) IS FALSE))OR(CAST(rt0.c2 AS TEXT))))OR((rt0.c2 IN ())))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c2) IS FALSE))OR(CAST(rt0.c2 AS TEXT))))OR((rt0.c2 IN ())))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((((((((rt0.c2) IS FALSE))OR(CAST(rt0.c2 AS TEXT))))OR((rt0.c2 IN ())))) ISNULL));
SELECT rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)||(CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)||(CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)||(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((DATE(vt1.c0, vt1.c0, vt1.c0, '521307028', vt1.c0))%(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((DATE(vt1.c0, vt1.c0, vt1.c0, '521307028', vt1.c0))%(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((DATE(vt1.c0, vt1.c0, vt1.c0, '521307028', vt1.c0))%(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '2138554602' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('2138554602')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('2138554602') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '2138554602' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('2138554602')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('2138554602') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((+ (TRIM(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((+ (TRIM(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((+ (TRIM(rt0.c0)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (json_type(rt0.c2)) AND (((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (json_type(rt0.c2)) AND (((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (json_type(rt0.c2)) AND (((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 WHERE (rt0.c0) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING rt0.c2 COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (rt0.c2 COLLATE NOCASE)) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((rt0.c2 COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING rt0.c2 COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (rt0.c2 COLLATE NOCASE)) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((rt0.c2 COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0)LIKE(vt1.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0) IS FALSE)) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0)LIKE(vt1.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c0) IS FALSE)) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0)LIKE(vt1.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2)))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((((((((((rt0.c1)OR('&')))OR(rt0.c1)))AND(vt1.c0)))AND(x'')))AND(rt0.c1)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2)))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((((((((((rt0.c1)OR('&')))OR(rt0.c1)))AND(vt1.c0)))AND(x'')))AND(rt0.c1)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2)))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((((((((((rt0.c1)OR('&')))OR(rt0.c1)))AND(vt1.c0)))AND(x'')))AND(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (GROUP_CONCAT(vt1.c0) IN ()) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT ((GROUP_CONCAT(vt1.c0) IN ()))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (((GROUP_CONCAT(vt1.c0) IN ())) ISNULL);
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (GROUP_CONCAT(vt1.c0) IN ()) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT ((GROUP_CONCAT(vt1.c0) IN ()))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (((GROUP_CONCAT(vt1.c0) IN ())) ISNULL);
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0)))LIKE((rt0.c2 IN ())))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c0)))LIKE((rt0.c2 IN ())))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))LIKE((rt0.c2 IN ())))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (UNICODE(((vt1.c0)>=(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (UNICODE(((vt1.c0)>=(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((UNICODE(((vt1.c0)>=(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1)>(0.9329722619367112)), rt0.c0))>=((x'', CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END, (vt1.c0 IN ()))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1)>(0.9329722619367112)), rt0.c0))>=((x'', CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END, (vt1.c0 IN ()))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1)>(0.9329722619367112)), rt0.c0))>=((x'', CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END, (vt1.c0 IN ()))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING COUNT(TOTAL('')) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL('')))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(''))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (CAST(((rt0.c2) NOTNULL) AS BLOB)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(((rt0.c2) NOTNULL) AS BLOB)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((CAST(((rt0.c2) NOTNULL) AS BLOB)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0x742cfa10)OR((rt0.c2 IN (vt1.c0)))))OR(((vt1.c0) IS TRUE)));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0x742cfa10)OR((rt0.c2 IN (vt1.c0)))))OR(((vt1.c0) IS TRUE))) WHERE (((((rt0.c2)<=(rt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0x742cfa10)OR((rt0.c2 IN (vt1.c0)))))OR(((vt1.c0) IS TRUE))) WHERE ((NOT (((((rt0.c2)<=(rt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0x742cfa10)OR((rt0.c2 IN (vt1.c0)))))OR(((vt1.c0) IS TRUE))) WHERE (((((((rt0.c2)<=(rt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0x742cfa10)OR((rt0.c2 IN (vt1.c0)))))OR(((vt1.c0) IS TRUE)));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((((((((vt1.c0)AND(0.10416307968226013)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((((((vt1.c0)AND(0.10416307968226013)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((((((((vt1.c0)AND(0.10416307968226013)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((rt0.c2) NOT BETWEEN (MAX(COUNT(*))) AND (rt0.c2))))>=((((0Xffffffff8ffced2f)OR(SUM(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((((rt0.c2) NOT BETWEEN (MAX(COUNT(*))) AND (rt0.c2))))>=((((0Xffffffff8ffced2f)OR(SUM(rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((((rt0.c2) NOT BETWEEN (MAX(COUNT(*))) AND (rt0.c2))))>=((((0Xffffffff8ffced2f)OR(SUM(rt0.c2))))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((((((((vt1.c0)%(rt0.c0)))OR((+ (rt0.c1)))))OR(CAST('-39791917' AS REAL))))AND(((vt1.c0)%(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (vt1.c0) AND (x''))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((((((((vt1.c0)%(rt0.c0)))OR((+ (rt0.c1)))))OR(CAST('-39791917' AS REAL))))AND(((vt1.c0)%(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (vt1.c0) AND (x''))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((((((((((vt1.c0)%(rt0.c0)))OR((+ (rt0.c1)))))OR(CAST('-39791917' AS REAL))))AND(((vt1.c0)%(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (vt1.c0) AND (x''))))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c2)))OR(x'1212')) COLLATE BINARY;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c2)))OR(x'1212')) COLLATE BINARY WHERE (((x'')|(((vt1.c0)>>(vt1.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c2)))OR(x'1212')) COLLATE BINARY WHERE ((NOT (((x'')|(((vt1.c0)>>(vt1.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c2)))OR(x'1212')) COLLATE BINARY WHERE (((((x'')|(((vt1.c0)>>(vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c2)))OR(x'1212')) COLLATE BINARY;
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(NULL)))AND(rt0.c2))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c0)>>(rt0.c2)))) GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(NULL)))AND(rt0.c2))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c0)>>(rt0.c2)))) WHERE ((+ (((rt0.c1)OR(rt0.c1))))) GROUP BY rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(NULL)))AND(rt0.c2))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c0)>>(rt0.c2)))) WHERE ((NOT ((+ (((rt0.c1)OR(rt0.c1))))))) GROUP BY rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(NULL)))AND(rt0.c2))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c0)>>(rt0.c2)))) WHERE ((((+ (((rt0.c1)OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(NULL)))AND(rt0.c2))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c0)>>(rt0.c2)))) GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM GROUP BY rt0.c1 HAVING SUM(TOTAL(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM GROUP BY rt0.c1 HAVING (NOT (SUM(TOTAL(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM GROUP BY rt0.c1 HAVING ((SUM(TOTAL(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS INTEGER)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS INTEGER)))) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE (((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((- (vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((- (vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS REAL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(((COUNT(COUNT(TOTAL(MAX(rt0.c2)))))/(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(((COUNT(COUNT(TOTAL(MAX(rt0.c2)))))/(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(((COUNT(COUNT(TOTAL(MAX(rt0.c2)))))/(rt0.c0)))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((((~ (rt0.c2))) IS FALSE)) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) IS FALSE)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c2))) IS FALSE)) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((((NULL))>=((rt0.c1)))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((NULL))>=((rt0.c1)))))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((((((NULL))>=((rt0.c1)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING ((((AVG(rt0.c2))OR(TYPEOF(AVG(rt0.c0)))))OR(AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((AVG(rt0.c2))OR(TYPEOF(AVG(rt0.c0)))))OR(AVG(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING ((((((AVG(rt0.c2))OR(TYPEOF(AVG(rt0.c0)))))OR(AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING ((((AVG(rt0.c2))OR(TYPEOF(AVG(rt0.c0)))))OR(AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((AVG(rt0.c2))OR(TYPEOF(AVG(rt0.c0)))))OR(AVG(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING ((((((AVG(rt0.c2))OR(TYPEOF(AVG(rt0.c0)))))OR(AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT SUM((((rt0.c1)+(rt0.c1)) IN (((rt0.c2)IS(vt1.c0)), rt0.c0))) FROM vt1, rt0;
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c1;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c1 WHERE (COALESCE(NULL, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2)<(rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c1 WHERE ((NOT (COALESCE(NULL, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2)<(rt0.c2)))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c1 WHERE (((COALESCE(NULL, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2)<(rt0.c2)))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (NULL) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 WHERE (((rt0.c2) IS FALSE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE ((NOT (((rt0.c2) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (UNICODE(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (UNICODE(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((UNICODE(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN NULL THEN rt0.c2 ELSE 0.1889679223483257 END AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN NULL THEN rt0.c2 ELSE 0.1889679223483257 END AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN NULL THEN rt0.c2 ELSE 0.1889679223483257 END AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0 WHERE ((CAST(NULL AS INTEGER) IN ())) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((NOT ((CAST(NULL AS INTEGER) IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE ((((CAST(NULL AS INTEGER) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING CAST(COUNT(vt1.c0) AS INTEGER) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (CAST(COUNT(vt1.c0) AS INTEGER))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((CAST(COUNT(vt1.c0) AS INTEGER)) ISNULL);
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING CAST(COUNT(vt1.c0) AS INTEGER) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (CAST(COUNT(vt1.c0) AS INTEGER))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((CAST(COUNT(vt1.c0) AS INTEGER)) ISNULL);
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN NULL THEN rt0.c0 END) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE (rt0.c2 IN ())  WHEN NULL THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE (rt0.c2 IN ())  WHEN NULL THEN rt0.c0 END) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)IS(rt0.c2)))OR(50387120 COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c2)))OR(50387120 COLLATE NOCASE))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)IS(rt0.c2)))OR(50387120 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((vt1.c0)=(AVG(vt1.c0))))OR((COUNT(*) IN ()))))AND(CAST(COUNT(TOTAL(TOTAL(rt0.c0))) AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((((vt1.c0)=(AVG(vt1.c0))))OR((COUNT(*) IN ()))))AND(CAST(COUNT(TOTAL(TOTAL(rt0.c0))) AS REAL))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((((vt1.c0)=(AVG(vt1.c0))))OR((COUNT(*) IN ()))))AND(CAST(COUNT(TOTAL(TOTAL(rt0.c0))) AS REAL)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (0x5f4dc496) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (0x5f4dc496))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((0x5f4dc496) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((((((vt1.c0)*(vt1.c0)))AND(CASE WHEN x'' THEN rt0.c1 ELSE vt1.c0 END)))OR(0xffffffffeef60bd2))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((((vt1.c0)*(vt1.c0)))AND(CASE WHEN x'' THEN rt0.c1 ELSE vt1.c0 END)))OR(0xffffffffeef60bd2))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((((((((vt1.c0)*(vt1.c0)))AND(CASE WHEN x'' THEN rt0.c1 ELSE vt1.c0 END)))OR(0Xffffffffeef60bd2))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING x'bb82' UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (x'bb82')) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING ((x'bb82') ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING x'bb82' UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (x'bb82')) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING ((x'bb82') ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT MAX((+ (((rt0.c0)+(NULL))))) FROM rt0 ORDER BY LIKELY((rt0.c1 IN ())) DESC;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0))==((rt0.c0))))) AND ((rt0.c1 COLLATE BINARY)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN (((((rt0.c0))=((rt0.c0))))) AND ((rt0.c1 COLLATE BINARY)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN (((((rt0.c0))=((rt0.c0))))) AND ((rt0.c1 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (CAST(rt0.c2 AS REAL) COLLATE BINARY) GROUP BY vt1.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CAST(rt0.c2 AS REAL) COLLATE BINARY))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((CAST(rt0.c2 AS REAL) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.39701697309217365) ISNULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((0.39701697309217365) ISNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((0.39701697309217365) ISNULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.39701697309217365) ISNULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((0.39701697309217365) ISNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((0.39701697309217365) ISNULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MIN(CAST(rt0.c2 AS TEXT) COLLATE BINARY) FROM vt1, rt0 ORDER BY ((((((((((vt1.c0)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c1)))/(((rt0.c2)IS(rt0.c2)))) DESC, (((- (x'd187')))IS NOT(CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS FIRST, ((((((((vt1.c0)OR(((rt0.c2) ISNULL))))AND(rt0.c2)))AND(vt1.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)<(vt1.c0)) COLLATE RTRIM COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)<(vt1.c0)) COLLATE RTRIM COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<(vt1.c0)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c2 AS INTEGER) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c2 AS INTEGER) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING SUM(COUNT(*)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c2 AS INTEGER) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c2 AS INTEGER) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON rt0.c0;
SELECT * FROM rt0 INNER JOIN vt1 ON rt0.c0 WHERE ((- (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt1 ON rt0.c0 WHERE ((NOT ((- (rt0.c1))))) UNION ALL SELECT * FROM rt0 INNER JOIN vt1 ON rt0.c0 WHERE ((((- (rt0.c1))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON rt0.c0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))AND((rt0.c2 IN ()))))AND('YWR饖/>W')))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)))OR(CAST('' AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS INTEGER))AND((rt0.c2 IN ()))))AND('YWR饖/>W')))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)))OR(CAST('' AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((((CAST(rt0.c1 AS INTEGER))AND((rt0.c2 IN ()))))AND('YWR饖/>W')))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)))OR(CAST('' AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (LOWER((+ (vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (LOWER((+ (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((LOWER((+ (vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING MAX(MIN(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (MAX(MIN(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING ((MAX(MIN(SUM(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c1)AND(rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0)AND(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0)AND(rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0)AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN((((COUNT(*)))<((SUM(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN((((COUNT(*)))<((SUM(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN((((COUNT(*)))<((SUM(rt0.c1)))))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((0.49027344023166164) IS FALSE);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((0.49027344023166164) IS FALSE) WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND((~ (rt0.c2)))))OR(NULLIF(DISTINCT vt1.c0, vt1.c0)))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((0.49027344023166164) IS FALSE) WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND((~ (rt0.c2)))))OR(NULLIF(DISTINCT vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((0.49027344023166164) IS FALSE) WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND((~ (rt0.c2)))))OR(NULLIF(DISTINCT vt1.c0, vt1.c0)))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((0.49027344023166164) IS FALSE);
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((rt0.c1)-(rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((rt0.c1)-(rt0.c0)))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((rt0.c1)-(rt0.c0)))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE MIN(SUM(SUM(GROUP_CONCAT(COUNT(COUNT(*))))))  WHEN (NOT (vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE MIN(SUM(SUM(GROUP_CONCAT(COUNT(COUNT(*))))))  WHEN (NOT (vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE MIN(SUM(SUM(GROUP_CONCAT(COUNT(COUNT(*))))))  WHEN (NOT (vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END) ISNULL);
SELECT * FROM rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN x'f195' THEN '-294807210' WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN 0xffffffffea367e07 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END END;
SELECT * FROM rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN x'f195' THEN '-294807210' WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN 0xffffffffea367e07 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END END WHERE (((- (vt1.c0)) IN ())) UNION ALL SELECT * FROM rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN x'f195' THEN '-294807210' WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN 0Xffffffffea367e07 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END END WHERE ((NOT (((- (vt1.c0)) IN ())))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN x'f195' THEN '-294807210' WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN 0xffffffffea367e07 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END END WHERE (((((- (vt1.c0)) IN ())) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN x'f195' THEN '-294807210' WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN 0xffffffffea367e07 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END END;
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (((('1574998969' IN (NULL))) BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(vt1.c0))) AND ((vt1.c0 IN ())))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT (((('1574998969' IN (NULL))) BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(vt1.c0))) AND ((vt1.c0 IN ())))))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (((((('1574998969' IN (NULL))) BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(vt1.c0))) AND ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((((((((vt1.c0 COLLATE NOCASE)OR(0.38483269728542735)))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)))OR(vt1.c0)))AND(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))))OR(LTRIM(vt1.c0, vt1.c0))))OR(CAST('-203589807' AS INTEGER)))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 NOT INDEXED, rt0 WHERE ((NOT (((((((((((((vt1.c0 COLLATE NOCASE)OR(0.38483269728542735)))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)))OR(vt1.c0)))AND(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))))OR(LTRIM(vt1.c0, vt1.c0))))OR(CAST('-203589807' AS INTEGER)))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((((((((((vt1.c0 COLLATE NOCASE)OR(0.38483269728542735)))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)))OR(vt1.c0)))AND(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))))OR(LTRIM(vt1.c0, vt1.c0))))OR(CAST('-203589807' AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING json_insert(rt0.c1, COUNT(COUNT(SUM(rt0.c0))), rt0.c2 COLLATE NOCASE) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (json_insert(rt0.c1, COUNT(COUNT(SUM(rt0.c0))), rt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((json_insert(rt0.c1, COUNT(COUNT(SUM(rt0.c0))), rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (rt0.c0 COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((rt0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((0x75e07768)<=(0x13c72cd6)))==(((x'308b') NOTNULL)))) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((0x75e07768)<=(0X13c72cd6)))==(((x'308b') NOTNULL)))))) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((((0X75e07768)<=(0X13c72cd6)))=(((x'308b') NOTNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(*)))||(SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(COUNT(*)))||(SUM(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(COUNT(*)))||(SUM(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((UNLIKELY(vt1.c0)) NOT NULL)) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((UNLIKELY(vt1.c0)) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((((UNLIKELY(vt1.c0)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2) NOT NULL) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2) NOT NULL) WHERE (((((((1.180692096E9) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(x'')))AND(((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))AND(vt1.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2) NOT NULL) WHERE ((NOT (((((((1.180692096E9) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(x'')))AND(((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))AND(vt1.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2) NOT NULL) WHERE (((((((((1.180692096E9) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(x'')))AND(((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2) NOT NULL) GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT TOTAL((((0.29471404997267037, x'', ((rt0.c1)>(50387120))))<(((- (rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c1)>>(rt0.c2)))))) FROM vt1, rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON '-394837554';
SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON '-394837554' WHERE (((((((x'')>>(rt0.c1)))OR((- (rt0.c0)))))AND(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON '-394837554' WHERE ((NOT (((((((x'')>>(rt0.c1)))OR((- (rt0.c0)))))AND(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON '-394837554' WHERE (((((((((x'')>>(rt0.c1)))OR((- (rt0.c0)))))AND(rt0.c0))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON '-394837554';
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((vt1.c0 IN (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN (((vt1.c0 IN (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (((vt1.c0 IN (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0) IS FALSE) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0) IS FALSE) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0) IS FALSE) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING TOTAL(COUNT(COUNT(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (TOTAL(COUNT(COUNT(MAX(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING ((TOTAL(COUNT(COUNT(MAX(rt0.c2))))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)<<(rt0.c2)) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)<<(rt0.c2)) IN ())) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL) COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(MIN(TOTAL(SUM(vt1.c0)))))>>(TOTAL(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(MIN(TOTAL(SUM(vt1.c0)))))>>(TOTAL(MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(MIN(TOTAL(SUM(vt1.c0)))))>>(TOTAL(MIN(vt1.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0, rt0.c1, NULL)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), (((rt0.c2, rt0.c0, '521307028')) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, NULL))), json_valid(rt0.c1), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((((rt0.c0)OR(rt0.c0)))AND('{bAj')), rt0.c1 COLLATE RTRIM, rt0.c2 COLLATE BINARY, CAST(rt0.c1 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c0, rt0.c1, NULL)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), (((rt0.c2, rt0.c0, '521307028')) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, NULL))), json_valid(rt0.c1), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((((rt0.c0)OR(rt0.c0)))AND('{bAj')), rt0.c1 COLLATE RTRIM, rt0.c2 COLLATE BINARY, CAST(rt0.c1 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0, rt0.c1, NULL)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), (((rt0.c2, rt0.c0, '521307028')) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, NULL))), json_valid(rt0.c1), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((((rt0.c0)OR(rt0.c0)))AND('{bAj')), rt0.c1 COLLATE RTRIM, rt0.c2 COLLATE BINARY, CAST(rt0.c1 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((NULL)LIKE(NULL))) NOT BETWEEN (LOWER(rt0.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((NULL)LIKE(NULL))) NOT BETWEEN (LOWER(rt0.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((NULL)LIKE(NULL))) NOT BETWEEN (LOWER(rt0.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((NULL IN ()))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c1 COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((NULL IN ()))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c1 COLLATE BINARY))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((NULL IN ()))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MAX(0.6735247983819889)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MAX(0.6735247983819889)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MAX(0.6735247983819889))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE)) NOTNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) NOTNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE)) NOTNULL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ('') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((('') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(LIKELY(DISTINCT rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(LIKELY(DISTINCT rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(LIKELY(DISTINCT rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(LIKELY(DISTINCT rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(LIKELY(DISTINCT rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(LIKELY(DISTINCT rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (((rt0.c1) NOTNULL)));
SELECT ALL vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (((rt0.c1) NOTNULL))) WHERE ((((((rt0.c2 IN ()))AND((((rt0.c0))<>((rt0.c2))))))OR((- (rt0.c2))))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (((rt0.c1) NOTNULL))) WHERE ((NOT ((((((rt0.c2 IN ()))AND((((rt0.c0))<>((rt0.c2))))))OR((- (rt0.c2))))))) UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (((rt0.c1) NOTNULL))) WHERE ((((((((rt0.c2 IN ()))AND((((rt0.c0))<>((rt0.c2))))))OR((- (rt0.c2))))) ISNULL));
SELECT ALL vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (vt1.c0 IN (((rt0.c1) NOTNULL)));
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (CAST('905229636' AS INTEGER)) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 NOT INDEXED WHERE ((NOT (CAST('905229636' AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (((CAST('905229636' AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2)||((rt0.c1 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)||((rt0.c1 IN ())))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)||((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(((SUM(rt0.c0)) NOT BETWEEN (COUNT(*)) AND (vt1.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(((SUM(rt0.c0)) NOT BETWEEN (COUNT(*)) AND (vt1.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(((SUM(rt0.c0)) NOT BETWEEN (COUNT(*)) AND (vt1.c0)))) ISNULL);
SELECT SUM(((CASE WHEN vt1.c0 THEN vt1.c0 END)>(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) FROM vt1 ORDER BY (- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '(/CG)u\r~''r' END)) ASC;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (1601978486) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (1601978486))) UNION ALL SELECT ALL * FROM vt1 WHERE (((1601978486) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((CAST(vt1.c0 AS BLOB))))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((CAST(vt1.c0 AS BLOB))))))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((CAST(vt1.c0 AS BLOB))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (json_object((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (json_object((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((json_object((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 IN ()), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY))=((((vt1.c0)<<(vt1.c0)), CAST(vt1.c0 AS NUMERIC), ((((vt1.c0)AND(vt1.c0)))AND(0.5296295606021879)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0 IN ()), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY))==((((vt1.c0)<<(vt1.c0)), CAST(vt1.c0 AS NUMERIC), ((((vt1.c0)AND(vt1.c0)))AND(0.5296295606021879)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0 IN ()), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY))=((((vt1.c0)<<(vt1.c0)), CAST(vt1.c0 AS NUMERIC), ((((vt1.c0)AND(vt1.c0)))AND(0.5296295606021879)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG((vt1.c0 IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG((vt1.c0 IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG((vt1.c0 IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG((vt1.c0 IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE 5.038712E7  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN LAST_INSERT_ROWID() ELSE rt0.c1 COLLATE BINARY END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE 5.038712E7  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN LAST_INSERT_ROWID() ELSE rt0.c1 COLLATE BINARY END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE 5.038712E7  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN LAST_INSERT_ROWID() ELSE rt0.c1 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN DATE(rt0.c2, rt0.c0, rt0.c1) THEN 0.5987025188767586 END) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN DATE(rt0.c2, rt0.c0, rt0.c1) THEN 0.5987025188767586 END))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN DATE(rt0.c2, rt0.c0, rt0.c1) THEN 0.5987025188767586 END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((~ (((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((NOT ((~ (((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE ((((~ (((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING 0Xffffffffdbef77a1 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (0xffffffffdbef77a1)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING ((0Xffffffffdbef77a1) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING 0Xffffffffdbef77a1 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (0xffffffffdbef77a1)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING ((0Xffffffffdbef77a1) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (json_quote(((vt1.c0)|(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_quote(((vt1.c0)|(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((json_quote(((vt1.c0)|(vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (TRIM((('') NOT NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (TRIM((('') NOT NULL))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((TRIM((('') NOT NULL))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(TOTAL(GROUP_CONCAT(MAX(AVG(SUM(vt1.c0)))))) AS BLOB) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(TOTAL(GROUP_CONCAT(MAX(AVG(SUM(vt1.c0)))))) AS BLOB))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(TOTAL(GROUP_CONCAT(MAX(AVG(SUM(vt1.c0)))))) AS BLOB)) ISNULL);
SELECT ALL SUM((+ (((rt0.c1)>(rt0.c2))))) FROM vt1, rt0;
SELECT rt0.c1 FROM rt0, vt1;
SELECT rt0.c1 FROM rt0, vt1 WHERE (((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))<<(((((vt1.c0)OR(rt0.c0)))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))<<(((((vt1.c0)OR(rt0.c0)))AND(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))<<(((((vt1.c0)OR(rt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) IS TRUE) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING CASE SUM(rt0.c1)  WHEN AVG(MAX(rt0.c0)) THEN SUM(GROUP_CONCAT(COUNT(*))) WHEN ((']ࢿ')<(AVG(MAX('-971037182')))) THEN MIN(vt1.c0) WHEN ((AVG(MAX(rt0.c1)))<=(COUNT(*))) THEN ((MIN(vt1.c0))LIKE(GROUP_CONCAT(rt0.c1))) ELSE GROUP_CONCAT(rt0.c1) END UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE SUM(rt0.c1)  WHEN AVG(MAX(rt0.c0)) THEN SUM(GROUP_CONCAT(COUNT(*))) WHEN ((']ࢿ')<(AVG(MAX('-971037182')))) THEN MIN(vt1.c0) WHEN ((AVG(MAX(rt0.c1)))<=(COUNT(*))) THEN ((MIN(vt1.c0))LIKE(GROUP_CONCAT(rt0.c1))) ELSE GROUP_CONCAT(rt0.c1) END)) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((CASE SUM(rt0.c1)  WHEN AVG(MAX(rt0.c0)) THEN SUM(GROUP_CONCAT(COUNT(*))) WHEN ((']ࢿ')<(AVG(MAX('-971037182')))) THEN MIN(vt1.c0) WHEN ((AVG(MAX(rt0.c1)))<=(COUNT(*))) THEN ((MIN(vt1.c0))LIKE(GROUP_CONCAT(rt0.c1))) ELSE GROUP_CONCAT(rt0.c1) END) ISNULL);
SELECT ALL MIN(((((rt0.c2)%(0.2409397955435758))) ISNULL)) FROM vt1, rt0 ORDER BY 'now';
SELECT ALL vt1.c0 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1, rt0 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1, rt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (CASE (~ (vt1.c0))  WHEN ((((rt0.c0)OR(2055712110)))AND(rt0.c2)) THEN ((vt1.c0)IS(rt0.c0)) WHEN ((rt0.c0)!=(x'')) THEN (((rt0.c1, NULL, rt0.c2))>((rt0.c0, x'', rt0.c2))) WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE (((rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((x'', vt1.c0, rt0.c2)) AND ((rt0.c2, vt1.c0, x'22a0'))) END) UNION SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (CASE (~ (vt1.c0))  WHEN ((((rt0.c0)OR(2055712110)))AND(rt0.c2)) THEN ((vt1.c0)IS(rt0.c0)) WHEN ((rt0.c0)<>(x'')) THEN (((rt0.c1, NULL, rt0.c2))>((rt0.c0, x'', rt0.c2))) WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE (((rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((x'', vt1.c0, rt0.c2)) AND ((rt0.c2, vt1.c0, x'22a0'))) END))) UNION SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((CASE (~ (vt1.c0))  WHEN ((((rt0.c0)OR(2055712110)))AND(rt0.c2)) THEN ((vt1.c0)IS(rt0.c0)) WHEN ((rt0.c0)!=(x'')) THEN (((rt0.c1, NULL, rt0.c2))>((rt0.c0, x'', rt0.c2))) WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE (((rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((x'', vt1.c0, rt0.c2)) AND ((rt0.c2, vt1.c0, x'22a0'))) END) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c0)|(rt0.c1))) NOT BETWEEN (rt0.c0) AND ((+ (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0)|(rt0.c1))) NOT BETWEEN (rt0.c0) AND ((+ (rt0.c2))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c0)|(rt0.c1))) NOT BETWEEN (rt0.c0) AND ((+ (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(0.5040815797368493) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(0.5040815797368493))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(0.5040815797368493)) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(0.5040815797368493) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(0.5040815797368493))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(0.5040815797368493)) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt1 ON ((((rt0.c1)&(rt0.c2)))*(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((vt1.c0)+(vt1.c0)))OR(0.11396763114671771 COLLATE RTRIM)))OR(vt1.c0)))AND(TIME(vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)=(vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))AND((((('1')AND(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((((vt1.c0)+(vt1.c0)))OR(0.11396763114671771 COLLATE RTRIM)))OR(vt1.c0)))AND(TIME(vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)==(vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))AND((((('1')AND(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((((vt1.c0)+(vt1.c0)))OR(0.11396763114671771 COLLATE RTRIM)))OR(vt1.c0)))AND(TIME(vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)==(vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))AND((((('1')AND(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((MAX(vt1.c0))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((MAX(vt1.c0))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((MAX(vt1.c0))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((MAX(vt1.c0))AND(SUM(vt1.c0))))OR(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1) BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (x''))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (x''))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c1) BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (x''))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (LOWER(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (LOWER(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((LOWER(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0 IN ()))OR(((vt1.c0)+(vt1.c0)))))AND(((vt1.c0)GLOB(vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((((((vt1.c0 IN ()))OR(((vt1.c0)+(vt1.c0)))))AND(((vt1.c0)GLOB(vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((((vt1.c0 IN ()))OR(((vt1.c0)+(vt1.c0)))))AND(((vt1.c0)GLOB(vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING AVG(MIN(MAX(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (AVG(MIN(MAX(SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING ((AVG(MIN(MAX(SUM(COUNT(*)))))) ISNULL);
SELECT ALL MAX((NOT (vt1.c0 COLLATE BINARY))) FROM vt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((0.8891869198293573) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((0.8891869198293573) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((0.8891869198293573) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)<(NULL)) COLLATE BINARY GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)<(NULL)) COLLATE BINARY WHERE (CAST(0xffffffffaf39286a AS REAL)) GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)<(NULL)) COLLATE BINARY WHERE ((NOT (CAST(0xffffffffaf39286a AS REAL)))) GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)<(NULL)) COLLATE BINARY WHERE (((CAST(0Xffffffffaf39286a AS REAL)) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)<(NULL)) COLLATE BINARY GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((CAST(COUNT(*) AS TEXT)) NOT BETWEEN (SUM(AVG(rt0.c0))) AND (0Xffffffffe94433ff)) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (((CAST(COUNT(*) AS TEXT)) NOT BETWEEN (SUM(AVG(rt0.c0))) AND (0xffffffffe94433ff)))) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((((CAST(COUNT(*) AS TEXT)) NOT BETWEEN (SUM(AVG(rt0.c0))) AND (0Xffffffffe94433ff))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2 IN (rt0.c0, rt0.c1)))AND(((rt0.c0) IS TRUE))))OR((+ (rt0.c0)))))AND(LIKELY(rt0.c0))))OR(STRFTIME(rt0.c2, rt0.c0, rt0.c0)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((((((rt0.c2 IN (rt0.c0, rt0.c1)))AND(((rt0.c0) IS TRUE))))OR((+ (rt0.c0)))))AND(LIKELY(rt0.c0))))OR(STRFTIME(rt0.c2, rt0.c0, rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((((rt0.c2 IN (rt0.c0, rt0.c1)))AND(((rt0.c0) IS TRUE))))OR((+ (rt0.c0)))))AND(LIKELY(rt0.c0))))OR(STRFTIME(rt0.c2, rt0.c0, rt0.c0)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (x'' COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (x'' COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((x'' COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END THEN ((vt1.c0)||(NULL)) END) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END THEN ((vt1.c0)||(NULL)) END))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END THEN ((vt1.c0)||(NULL)) END) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING CASE COUNT(*)  WHEN ((((COUNT(*))OR(COUNT(*))))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (CASE COUNT(*)  WHEN ((((COUNT(*))OR(COUNT(*))))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING ((CASE COUNT(*)  WHEN ((((COUNT(*))OR(COUNT(*))))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING CASE COUNT(*)  WHEN ((((COUNT(*))OR(COUNT(*))))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (CASE COUNT(*)  WHEN ((((COUNT(*))OR(COUNT(*))))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING ((CASE COUNT(*)  WHEN ((((COUNT(*))OR(COUNT(*))))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT MIN(((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) FROM vt1;
SELECT * FROM vt1 CROSS JOIN rt0 ON (((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))<((((rt0.c0) NOT NULL))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))<((((rt0.c0) NOT NULL)))) WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))<((((rt0.c0) NOT NULL)))) WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))<((((rt0.c0) NOT NULL)))) WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT * FROM vt1 CROSS JOIN rt0 ON (((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))<((((rt0.c0) NOT NULL))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c0 IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER)) ISNULL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER)) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT MAX(((((vt1.c0)<>(rt0.c0)))||(CAST(vt1.c0 AS REAL)))) FROM rt0, vt1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0)AND(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULLIF(DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN '0.11396763114671771' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULLIF(DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN '0.11396763114671771' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULLIF(DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN '0.11396763114671771' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((COUNT(*))OR(AVG(SUM(AVG(MIN(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*))OR(AVG(SUM(AVG(MIN(GROUP_CONCAT(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((((COUNT(*))OR(AVG(SUM(AVG(MIN(GROUP_CONCAT(rt0.c0)))))))) ISNULL);
SELECT MIN((((+ (vt1.c0)))<<(CAST(vt1.c0 AS REAL)))) FROM vt1 ORDER BY IFNULL(vt1.c0 COLLATE RTRIM, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) ASC  NULLS LAST;
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c0)+(rt0.c2)) END) UNION SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c0)+(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c0)+(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 WHERE (0.6052313151585306) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE ((NOT (0.6052313151585306))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE (((0.6052313151585306) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((MIN(AVG(rt0.c1)) COLLATE BINARY)AND((- (SUM(MAX(AVG(vt1.c0))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (((MIN(AVG(rt0.c1)) COLLATE BINARY)AND((- (SUM(MAX(AVG(vt1.c0))))))))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((((MIN(AVG(rt0.c1)) COLLATE BINARY)AND((- (SUM(MAX(AVG(vt1.c0)))))))) ISNULL);
SELECT ALL rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((('-690813215') NOT NULL)) UNION ALL SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((('-690813215') NOT NULL)))) UNION ALL SELECT rt0.c1 FROM vt1, rt0 WHERE ((((('-690813215') NOT NULL)) ISNULL));
SELECT ALL rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (LIKE((NULL IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN '50387120' THEN vt1.c0 WHEN vt1.c0 THEN '-1601443195' END)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (LIKE((NULL IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN '50387120' THEN vt1.c0 WHEN vt1.c0 THEN '-1601443195' END)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((LIKE((NULL IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN '50387120' THEN vt1.c0 WHEN vt1.c0 THEN '-1601443195' END)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (vt1.c0))) IS FALSE) WHERE (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (vt1.c0))) IS FALSE) WHERE ((NOT (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (vt1.c0))) IS FALSE) WHERE (((CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)<<(vt1.c0)))/(MAX(SUM(MIN(AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)<<(vt1.c0)))/(MAX(SUM(MIN(AVG(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)<<(vt1.c0)))/(MAX(SUM(MIN(AVG(vt1.c0))))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (CAST(((rt0.c1)<(vt1.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CAST(((rt0.c1)<(vt1.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((CAST(((rt0.c1)<(vt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<=((vt1.c0 IN (rt0.c1, vt1.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<=((vt1.c0 IN (rt0.c1, vt1.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<=((vt1.c0 IN (rt0.c1, vt1.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((NULL) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((NULL) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (ABS(0.5243453468199215)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (ABS(0.5243453468199215)))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((ABS(0.5243453468199215)) ISNULL));
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE (CAST(('-1879249617' IN (rt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE ((NOT (CAST(('-1879249617' IN (rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE (((CAST(('-1879249617' IN (rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING AVG(rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (AVG(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((AVG(rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING AVG(rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (AVG(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((AVG(rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT MAX((((((rt0.c0, '-2117889638', vt1.c0))=((rt0.c1, rt0.c1, vt1.c0)))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((~ (rt0.c0))))) FROM rt0, vt1 ORDER BY (~ (rt0.c0)), (((CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN 1.574998969E9 ELSE rt0.c2 END))<=((((rt0.c2)<(vt1.c0))))) ASC;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((- (TRIM(rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (TRIM(rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (TRIM(rt0.c2)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL);
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL) WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL) WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL) WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL);
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE))) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c0 HAVING SUM(LOWER(DISTINCT SUM(MIN(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (SUM(LOWER(DISTINCT SUM(MIN(rt0.c1)))))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((SUM(LOWER(DISTINCT SUM(MIN(rt0.c1))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (CAST(((rt0.c0)GLOB(rt0.c2)) AS INTEGER)) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)GLOB(rt0.c2)) AS INTEGER)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c0)GLOB(rt0.c2)) AS INTEGER)) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS INTEGER)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) IS FALSE) AS INTEGER)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1) IS FALSE) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING LOWER(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (LOWER(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING ((LOWER(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING LOWER(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (LOWER(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING ((LOWER(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((QUOTE(0.012194806458557972) IN (CAST(rt0.c1 AS BLOB), (vt1.c0 IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((QUOTE(0.012194806458557972) IN (CAST(rt0.c1 AS BLOB), (vt1.c0 IN ())))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((QUOTE(0.012194806458557972) IN (CAST(rt0.c1 AS BLOB), (vt1.c0 IN ())))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (COALESCE(vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (COALESCE(vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((COALESCE(vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<=('-285837081')))>>(((vt1.c0) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<=('-285837081')))>>(((vt1.c0) IS TRUE)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<=('-285837081')))>>(((vt1.c0) IS TRUE)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING TOTAL(CAST(MAX(MIN(GROUP_CONCAT(MIN(rt0.c1)))) AS BLOB)) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (TOTAL(CAST(MAX(MIN(GROUP_CONCAT(MIN(rt0.c1)))) AS BLOB)))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING ((TOTAL(CAST(MAX(MIN(GROUP_CONCAT(MIN(rt0.c1)))) AS BLOB))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))AND((((vt1.c0))==((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))AND((((vt1.c0))=((vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))AND((((vt1.c0))==((vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((x'')IS(rt0.c2)))OR(0xffffffff8aac92ab COLLATE NOCASE)))AND((('-2117889638')GLOB(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((x'')IS(rt0.c2)))OR(0xffffffff8aac92ab COLLATE NOCASE)))AND((('-2117889638')GLOB(rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((x'')IS(rt0.c2)))OR(0xffffffff8aac92ab COLLATE NOCASE)))AND((('-2117889638')GLOB(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)+(vt1.c0)) IN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, x''), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)+(vt1.c0)) IN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, x''), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)+(vt1.c0)) IN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, x''), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(CAST(rt0.c1 AS REAL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(CAST(rt0.c1 AS REAL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((- (((rt0.c0)IS(rt0.c1))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((- (((rt0.c0)IS(rt0.c1))))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((- (((rt0.c0)IS(rt0.c1))))) ISNULL));
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(rt0.c1))) IS FALSE)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))OR(rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c2 IN ())) NOT NULL)) GROUP BY rt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT ((((rt0.c2 IN ())) NOT NULL)))) GROUP BY rt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((((((rt0.c2 IN ())) NOT NULL)) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT((rt0.c1 IN ())))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT((rt0.c1 IN ()))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT((rt0.c1 IN ())))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT((rt0.c1 IN ()))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED CROSS JOIN vt1 ON (((((NULL)OR(vt1.c0))))>((rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))%(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))%(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))%(vt1.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((NOT (rt0.c0)))AND(((rt0.c1)IS NOT(rt0.c1))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((NOT (rt0.c0)))AND(((rt0.c1)IS NOT(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((NOT (rt0.c0)))AND(((rt0.c1)IS NOT(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON x'e729' GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON x'e729' GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING SUM(MIN(vt1.c0)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON x'e729' GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (SUM(MIN(vt1.c0)))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON x'e729' GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((SUM(MIN(vt1.c0))) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (- (UNLIKELY(DISTINCT vt1.c0)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (- (UNLIKELY(DISTINCT vt1.c0))) WHERE ((('8c8Q^\r%)')<(((rt0.c1)!=(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (- (UNLIKELY(DISTINCT vt1.c0))) WHERE ((NOT ((('8c8Q^\r%)')<(((rt0.c1)<>(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (- (UNLIKELY(DISTINCT vt1.c0))) WHERE ((((('8c8Q^\r%)')<(((rt0.c1)!=(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (- (UNLIKELY(DISTINCT vt1.c0)));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) NOT NULL);
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) NOT NULL) WHERE (CASE ((rt0.c0) NOT NULL)  WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END THEN CAST(vt1.c0 AS INTEGER) WHEN json_remove(rt0.c1, vt1.c0) THEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (x'')) THEN (+ (vt1.c0)) END) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) NOT NULL) WHERE ((NOT (CASE ((rt0.c0) NOT NULL)  WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END THEN CAST(vt1.c0 AS INTEGER) WHEN json_remove(rt0.c1, vt1.c0) THEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (x'')) THEN (+ (vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) NOT NULL) WHERE (((CASE ((rt0.c0) NOT NULL)  WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END THEN CAST(vt1.c0 AS INTEGER) WHEN json_remove(rt0.c1, vt1.c0) THEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (x'')) THEN (+ (vt1.c0)) END) ISNULL));
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 WHERE ((((rt0.c2 IN ()))<<(rt0.c1 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((rt0.c2 IN ()))<<(rt0.c1 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c2 IN ()))<<(rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING AVG(GROUP_CONCAT(GROUP_CONCAT(TOTAL(x'')))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(GROUP_CONCAT(GROUP_CONCAT(TOTAL(x'')))))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING ((AVG(GROUP_CONCAT(GROUP_CONCAT(TOTAL(x''))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN INSTR(rt0.c0, vt1.c0) THEN ((rt0.c0)*(rt0.c1)) END) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CASE vt1.c0 COLLATE NOCASE  WHEN INSTR(rt0.c0, vt1.c0) THEN ((rt0.c0)*(rt0.c1)) END))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((CASE vt1.c0 COLLATE NOCASE  WHEN INSTR(rt0.c0, vt1.c0) THEN ((rt0.c0)*(rt0.c1)) END) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1))=((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ((((rt0.c1))==((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((((rt0.c1))=((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (x'7b55') GROUP BY vt1.c0, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (x'7b55'))) GROUP BY vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((x'7b55') ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c2 IN ()))))AND(((rt0.c1)-(vt1.c0)))) GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c2 COLLATE NOCASE)AND((((vt1.c0))<>((rt0.c0))))))OR((~ (rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2 COLLATE NOCASE)AND((((vt1.c0))!=((rt0.c0))))))OR((~ (rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c2 COLLATE NOCASE)AND((((vt1.c0))<>((rt0.c0))))))OR((~ (rt0.c2))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((0.5279653049319015 COLLATE BINARY)<<((0.30033935980978177 IN (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((0.5279653049319015 COLLATE BINARY)<<((0.30033935980978177 IN (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((((0.5279653049319015 COLLATE BINARY)<<((0.30033935980978177 IN (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<(rt0.c0))) BETWEEN (LIKELIHOOD(rt0.c0, 0.7615614305587135)) AND (((vt1.c0)/(vt1.c0)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<(rt0.c0))) BETWEEN (LIKELIHOOD(rt0.c0, 0.7615614305587135)) AND (((vt1.c0)/(vt1.c0)))) WHERE (((((((((rt0.c1 COLLATE BINARY)AND(json_patch(vt1.c0, rt0.c0))))AND(((rt0.c1)<>(vt1.c0)))))OR(((vt1.c0)AND(rt0.c1)))))OR(((rt0.c1)IS NOT(vt1.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<(rt0.c0))) BETWEEN (LIKELIHOOD(rt0.c0, 0.7615614305587135)) AND (((vt1.c0)/(vt1.c0)))) WHERE ((NOT (((((((((rt0.c1 COLLATE BINARY)AND(json_patch(vt1.c0, rt0.c0))))AND(((rt0.c1)<>(vt1.c0)))))OR(((vt1.c0)AND(rt0.c1)))))OR(((rt0.c1)IS NOT(vt1.c0))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<(rt0.c0))) BETWEEN (LIKELIHOOD(rt0.c0, 0.7615614305587135)) AND (((vt1.c0)/(vt1.c0)))) WHERE (((((((((((rt0.c1 COLLATE BINARY)AND(json_patch(vt1.c0, rt0.c0))))AND(((rt0.c1)<>(vt1.c0)))))OR(((vt1.c0)AND(rt0.c1)))))OR(((rt0.c1)IS NOT(vt1.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ ((((GROUP_CONCAT(vt1.c0), TOTAL(SUM(COUNT(vt1.c0))), AVG(COUNT(*)))) NOT BETWEEN ((COUNT(vt1.c0), COUNT(*), SUM(AVG(vt1.c0)))) AND ((vt1.c0, vt1.c0, TOTAL(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ ((((GROUP_CONCAT(vt1.c0), TOTAL(SUM(COUNT(vt1.c0))), AVG(COUNT(*)))) NOT BETWEEN ((COUNT(vt1.c0), COUNT(*), SUM(AVG(vt1.c0)))) AND ((vt1.c0, vt1.c0, TOTAL(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ ((((GROUP_CONCAT(vt1.c0), TOTAL(SUM(COUNT(vt1.c0))), AVG(COUNT(*)))) NOT BETWEEN ((COUNT(vt1.c0), COUNT(*), SUM(AVG(vt1.c0)))) AND ((vt1.c0, vt1.c0, TOTAL(vt1.c0))))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS TEXT)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((NOT (vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((NOT (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((('0.6111137718709093' IN ()))LIKE((~ (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((('0.6111137718709093' IN ()))LIKE((~ (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((('0.6111137718709093' IN ()))LIKE((~ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL_CHANGES() UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL_CHANGES())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL_CHANGES()) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL_CHANGES() UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL_CHANGES())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL_CHANGES()) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((- (rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'50f1949f')))));
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((- (rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'50f1949f'))))) WHERE (0.17575866077014168) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((- (rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'50f1949f'))))) WHERE ((NOT (0.17575866077014168))) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((- (rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'50f1949f'))))) WHERE (((0.17575866077014168) ISNULL));
SELECT ALL rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((- (rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'50f1949f')))));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)>(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((x'') NOT NULL)  WHEN ((((rt0.c2)OR(rt0.c2)))OR(x'')) THEN ((rt0.c0)<(rt0.c0)) ELSE '-662219529' END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((x'') NOT NULL)  WHEN ((((rt0.c2)OR(rt0.c2)))OR(x'')) THEN ((rt0.c0)<(rt0.c0)) ELSE '-662219529' END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((x'') NOT NULL)  WHEN ((((rt0.c2)OR(rt0.c2)))OR(x'')) THEN ((rt0.c0)<(rt0.c0)) ELSE '-662219529' END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (-1842183254 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0 NOT INDEXED, vt1 WHERE ((NOT ((NOT (-1842183254 COLLATE RTRIM))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((((NOT (-1842183254 COLLATE RTRIM))) ISNULL));
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ ('')))!=(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((+ ('')))!=(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((+ ('')))!=(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1 NOT INDEXED, rt0 WHERE (CASE WHEN LAST_INSERT_ROWID() THEN (((vt1.c0))<((rt0.c0))) ELSE ((rt0.c0)IS NOT(rt0.c0)) END) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN LAST_INSERT_ROWID() THEN (((vt1.c0))<((rt0.c0))) ELSE ((rt0.c0)IS NOT(rt0.c0)) END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((CASE WHEN LAST_INSERT_ROWID() THEN (((vt1.c0))<((rt0.c0))) ELSE ((rt0.c0)IS NOT(rt0.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(SUM(0Xffffffffa2734f3d) AS TEXT) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(SUM(0xffffffffa2734f3d) AS TEXT))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(SUM(0Xffffffffa2734f3d) AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(SUM(0Xffffffffa2734f3d) AS TEXT) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(SUM(0xffffffffa2734f3d) AS TEXT))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(SUM(0Xffffffffa2734f3d) AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (x'') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((- (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((- (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))))) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((- (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING TRIM(TRIM(AVG(vt1.c0))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (TRIM(TRIM(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((TRIM(TRIM(AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING TRIM(TRIM(AVG(vt1.c0))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (TRIM(TRIM(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((TRIM(TRIM(AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((NULLIF(DISTINCT vt1.c0, rt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE NOCASE)))OR(((x'')==(rt0.c1)))))AND(-605063263 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((vt1.c0) NOTNULL)) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((vt1.c0) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (((rt0.c0)&(rt0.c1))) AND (CAST(rt0.c2 AS REAL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (((rt0.c0)&(rt0.c1))) AND (CAST(rt0.c2 AS REAL)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (((rt0.c0)&(rt0.c1))) AND (CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING CASE WHEN IFNULL(DISTINCT MIN(rt0.c1), rt0.c1) THEN (- (AVG(COUNT(rt0.c0)))) WHEN COUNT(*) THEN (~ (AVG(AVG(MIN(rt0.c1))))) WHEN CAST(rt0.c0 AS NUMERIC) THEN SUM(MIN(vt1.c0)) COLLATE RTRIM END UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN IFNULL(DISTINCT MIN(rt0.c1), rt0.c1) THEN (- (AVG(COUNT(rt0.c0)))) WHEN COUNT(*) THEN (~ (AVG(AVG(MIN(rt0.c1))))) WHEN CAST(rt0.c0 AS NUMERIC) THEN SUM(MIN(vt1.c0)) COLLATE RTRIM END)) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((CASE WHEN IFNULL(DISTINCT MIN(rt0.c1), rt0.c1) THEN (- (AVG(COUNT(rt0.c0)))) WHEN COUNT(*) THEN (~ (AVG(AVG(MIN(rt0.c1))))) WHEN CAST(rt0.c0 AS NUMERIC) THEN SUM(MIN(vt1.c0)) COLLATE RTRIM END) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((-2.117889638E9)) AND ((rt0.c1)))) BETWEEN (rt0.c2) AND (((rt0.c2) NOTNULL)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((-2.117889638E9)) AND ((rt0.c1)))) BETWEEN (rt0.c2) AND (((rt0.c2) NOTNULL)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((-2.117889638E9)) AND ((rt0.c1)))) BETWEEN (rt0.c2) AND (((rt0.c2) NOTNULL)))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR('-2005600165')))=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))OR('-2005600165')))=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR('-2005600165')))=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1)=(rt0.c2)))))AND((~ (rt0.c1)))))AND(x'5af3')))OR(((rt0.c2)|(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(LIKELIHOOD(rt0.c0, 0.8943135503667868)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1)=(rt0.c2)))))AND((~ (rt0.c1)))))AND(x'5af3')))OR(((rt0.c2)|(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(LIKELIHOOD(rt0.c0, 0.8943135503667868)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1)==(rt0.c2)))))AND((~ (rt0.c1)))))AND(x'5af3')))OR(((rt0.c2)|(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(LIKELIHOOD(rt0.c0, 0.8943135503667868)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING COUNT(SUM(MIN(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (COUNT(SUM(MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING ((COUNT(SUM(MIN(rt0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, 0.11349161286181864, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))))>(LIKELIHOOD(vt1.c0, 0.1488511770047638)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, 0.11349161286181864, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))))>(LIKELIHOOD(vt1.c0, 0.1488511770047638)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, 0.11349161286181864, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))))>(LIKELIHOOD(vt1.c0, 0.1488511770047638)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 COLLATE RTRIM;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE ((((rt0.c1 IN ()))OR((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE ((NOT ((((rt0.c1 IN ()))OR((+ (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE ((((((rt0.c1 IN ()))OR((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 COLLATE RTRIM;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(0x2af7e18f AS INTEGER)) NOT NULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(0x2af7e18f AS INTEGER)) NOT NULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(0x2af7e18f AS INTEGER)) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (AVG(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (AVG(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(NULL)))OR(rt0.c1)) COLLATE NOCASE;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(NULL)))OR(rt0.c1)) COLLATE NOCASE WHERE (NULL) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(NULL)))OR(rt0.c1)) COLLATE NOCASE WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(NULL)))OR(rt0.c1)) COLLATE NOCASE WHERE (((NULL) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(NULL)))OR(rt0.c1)) COLLATE NOCASE;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT rt0.c2 FROM rt0 NOT INDEXED, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END)AND(CHANGES()))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE ((NOT (((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END)AND(CHANGES()))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END)AND(CHANGES()))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 NOT INDEXED, vt1 GROUP BY rt0.c2;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((x'36c8')-(SUM(MAX(COUNT(*))) COLLATE NOCASE)) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (((x'36c8')-(SUM(MAX(COUNT(*))) COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((((x'36c8')-(SUM(MAX(COUNT(*))) COLLATE NOCASE))) ISNULL);
SELECT ALL TOTAL((((((rt0.c2)&(rt0.c2))))>((CAST(rt0.c1 AS BLOB))))) FROM rt0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ('-1318898751') UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('-1318898751'))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((('-1318898751') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((vt1.c0)*(vt1.c0))) AND (((vt1.c0)OR(rt0.c1))))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((vt1.c0)*(vt1.c0))) AND (((vt1.c0)OR(rt0.c1))))))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((vt1.c0)*(vt1.c0))) AND (((vt1.c0)OR(rt0.c1))))) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((MAX(SUM(SUM(COUNT(*)))))GLOB(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((MAX(SUM(SUM(COUNT(*)))))GLOB(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((MAX(SUM(SUM(COUNT(*)))))GLOB(vt1.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((~ ((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((NULL, rt0.c2, vt1.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((~ ((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((NULL, rt0.c2, vt1.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((~ ((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((NULL, rt0.c2, vt1.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE '805188594' END)<=(CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE '805188594' END)<=(CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE '805188594' END)<=(CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((((rt0.c2)+(rt0.c1)), x'3215', (((rt0.c1, NULL, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, '')) AND ((rt0.c1, rt0.c1, rt0.c1)))))<>((CASE x'1d18'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), ((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c2)+(rt0.c1)), x'3215', (((rt0.c1, NULL, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, '')) AND ((rt0.c1, rt0.c1, rt0.c1)))))<>((CASE x'1d18'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), ((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((((((rt0.c2)+(rt0.c1)), x'3215', (((rt0.c1, NULL, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, '')) AND ((rt0.c1, rt0.c1, rt0.c1)))))!=((CASE x'1d18'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), ((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(MIN(TOTAL(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(MIN(TOTAL(TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(MIN(TOTAL(TOTAL(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)<<(vt1.c0))) AND (((vt1.c0)<<(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)<<(vt1.c0))) AND (((vt1.c0)<<(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)<<(vt1.c0))) AND (((vt1.c0)<<(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))-(vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))-(vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))-(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN '-1975701136' ELSE CAST(x'' AS REAL) END) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) ISNULL) THEN '-1975701136' ELSE CAST(x'' AS REAL) END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) ISNULL) THEN '-1975701136' ELSE CAST(x'' AS REAL) END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (- ((- (COUNT(*))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((- ((- (COUNT(*))))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (((- ((- (COUNT(*)))))) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (- ((- (COUNT(*))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((- ((- (COUNT(*))))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (((- ((- (COUNT(*)))))) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN LOWER(rt0.c0) THEN (NOT (vt1.c0)) WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(vt1.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN (((vt1.c0))<((vt1.c0))) THEN COALESCE(DISTINCT rt0.c2, '^g') END) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (CASE CAST(rt0.c1 AS BLOB)  WHEN LOWER(rt0.c0) THEN (NOT (vt1.c0)) WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(vt1.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN (((vt1.c0))<((vt1.c0))) THEN COALESCE(DISTINCT rt0.c2, '^g') END))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (((CASE CAST(rt0.c1 AS BLOB)  WHEN LOWER(rt0.c0) THEN (NOT (vt1.c0)) WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(vt1.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN (((vt1.c0))<((vt1.c0))) THEN COALESCE(DISTINCT rt0.c2, '^g') END) ISNULL));
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN ((('924152878')>(rt0.c1))) AND (0x467b9722));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN ((('924152878')>(rt0.c1))) AND (0X467b9722)) WHERE ((((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((rt0.c2) NOTNULL))))OR(CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN ((('924152878')>(rt0.c1))) AND (0X467b9722)) WHERE ((NOT ((((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((rt0.c2) NOTNULL))))OR(CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN ((('924152878')>(rt0.c1))) AND (0X467b9722)) WHERE ((((((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((rt0.c2) NOTNULL))))OR(CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN ((('924152878')>(rt0.c1))) AND (0x467b9722));
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER)))) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER)))))) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0 HAVING (AVG(SUM(AVG(MAX(SUM(rt0.c0))))) IN ()) COLLATE NOCASE UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0 HAVING (NOT ((AVG(SUM(AVG(MAX(SUM(rt0.c0))))) IN ()) COLLATE NOCASE)) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0 HAVING (((AVG(SUM(AVG(MAX(SUM(rt0.c0))))) IN ()) COLLATE NOCASE) ISNULL);
SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0 HAVING (AVG(SUM(AVG(MAX(SUM(rt0.c0))))) IN ()) COLLATE NOCASE UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0 HAVING (NOT ((AVG(SUM(AVG(MAX(SUM(rt0.c0))))) IN ()) COLLATE NOCASE)) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0 HAVING (((AVG(SUM(AVG(MAX(SUM(rt0.c0))))) IN ()) COLLATE NOCASE) ISNULL);
SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)IS(rt0.c1)) THEN (+ (rt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('D}h7'))) END GROUP BY vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((TRIM(NULL))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))AND(CHANGES())))OR(TRIM(rt0.c0, rt0.c2))))AND(CAST(rt0.c0 AS BLOB))))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '213458470' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 END)))AND(((rt0.c1) NOTNULL)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((((((((((((TRIM(NULL))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))AND(CHANGES())))OR(TRIM(rt0.c0, rt0.c2))))AND(CAST(rt0.c0 AS BLOB))))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '213458470' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 END)))AND(((rt0.c1) NOTNULL)))))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((((TRIM(NULL))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))AND(CHANGES())))OR(TRIM(rt0.c0, rt0.c2))))AND(CAST(rt0.c0 AS BLOB))))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '213458470' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 END)))AND(((rt0.c1) NOTNULL)))) ISNULL));
SELECT rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE WHEN 'ij' THEN SQLITE_SOURCE_ID() END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN 'ij' THEN SQLITE_SOURCE_ID() END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE WHEN 'ij' THEN SQLITE_SOURCE_ID() END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((vt1.c0)<<((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'4989cc44')))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE ((NOT (((vt1.c0)<<((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'4989cc44')))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c0)<<((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'4989cc44')))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(TOTAL(MIN(TOTAL(vt1.c0))) AS BLOB) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(TOTAL(MIN(TOTAL(vt1.c0))) AS BLOB))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(TOTAL(MIN(TOTAL(vt1.c0))) AS BLOB)) ISNULL);
SELECT ALL SUM((+ (rt0.c2)) COLLATE RTRIM) FROM rt0, vt1;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((-2.005600165E9 COLLATE NOCASE)AND(((rt0.c1) NOT NULL))))AND((rt0.c2 IN ())));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((-2.005600165E9 COLLATE NOCASE)AND(((rt0.c1) NOT NULL))))AND((rt0.c2 IN ()))) WHERE (((((rt0.c0)||(vt1.c0)))-((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((-2.005600165E9 COLLATE NOCASE)AND(((rt0.c1) NOT NULL))))AND((rt0.c2 IN ()))) WHERE ((NOT (((((rt0.c0)||(vt1.c0)))-((vt1.c0 IN ())))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((-2.005600165E9 COLLATE NOCASE)AND(((rt0.c1) NOT NULL))))AND((rt0.c2 IN ()))) WHERE (((((((rt0.c0)||(vt1.c0)))-((vt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((-2.005600165E9 COLLATE NOCASE)AND(((rt0.c1) NOT NULL))))AND((rt0.c2 IN ())));
SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS BLOB);
SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS BLOB) WHERE (((855347585)IS(((((((((rt0.c0)OR(vt1.c0)))AND(-2059721613)))AND(rt0.c1)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS BLOB) WHERE ((NOT (((855347585)IS(((((((((rt0.c0)OR(vt1.c0)))AND(-2059721613)))AND(rt0.c1)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS BLOB) WHERE (((((855347585)IS(((((((((rt0.c0)OR(vt1.c0)))AND(-2059721613)))AND(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS BLOB);
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((CAST(vt1.c0 AS REAL))LIKE(MAX(rt0.c2, vt1.c0)))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((CAST(vt1.c0 AS REAL))LIKE(MAX(rt0.c2, vt1.c0)))))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((((CAST(vt1.c0 AS REAL))LIKE(MAX(rt0.c2, vt1.c0)))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((LENGTH(rt0.c1))<(((((((((x'')AND(920340443)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((LENGTH(rt0.c1))<(((((((((x'')AND(920340443)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) GROUP BY rt0.c1, vt1.c0 HAVING MAX((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((LENGTH(rt0.c1))<(((((((((x'')AND(920340443)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) GROUP BY rt0.c1, vt1.c0 HAVING (NOT (MAX((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((LENGTH(rt0.c1))<(((((((((x'')AND(920340443)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) GROUP BY rt0.c1, vt1.c0 HAVING ((MAX((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ISNULL);
SELECT ALL SUM('762573462') FROM vt1;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((+ ((rt0.c1 IN (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((+ ((rt0.c1 IN (rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((+ ((rt0.c1 IN (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN (('2138554602')LIKE(MIN(vt1.c0))) THEN SUM(vt1.c0) ELSE COUNT(*) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN (('2138554602')LIKE(MIN(vt1.c0))) THEN SUM(vt1.c0) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN (('2138554602')LIKE(MIN(vt1.c0))) THEN SUM(vt1.c0) ELSE COUNT(*) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN (('2138554602')LIKE(MIN(vt1.c0))) THEN SUM(vt1.c0) ELSE COUNT(*) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN (('2138554602')LIKE(MIN(vt1.c0))) THEN SUM(vt1.c0) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN (('2138554602')LIKE(MIN(vt1.c0))) THEN SUM(vt1.c0) ELSE COUNT(*) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((rt0.c1) BETWEEN (vt1.c0) AND ('HwZ霢z')) COLLATE BINARY) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c1) BETWEEN (vt1.c0) AND ('HwZ霢z')) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (vt1.c0) AND ('HwZ霢z')) COLLATE BINARY) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))-(((-1911619294) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))-(((-1911619294) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))-(((-1911619294) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((0X12c96ea9)LIKE(rt0.c0)) COLLATE RTRIM) GROUP BY vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((0X12c96ea9)LIKE(rt0.c0)) COLLATE RTRIM))) GROUP BY vt1.c0, rt0.c2, rt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((0x12c96ea9)LIKE(rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (0.6629612164687418) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (0.6629612164687418))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((0.6629612164687418) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING AVG(((rt0.c0) ISNULL)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (AVG(((rt0.c0) ISNULL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c0 HAVING ((AVG(((rt0.c0) ISNULL))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING AVG(((rt0.c0) ISNULL)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (AVG(((rt0.c0) ISNULL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c0 HAVING ((AVG(((rt0.c0) ISNULL))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))>((rt0.c1)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))>((rt0.c1))))) WHERE ((((1598932118)) BETWEEN (('-108662527')) AND ((json_insert(rt0.c2, rt0.c0, rt0.c0))))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))>((rt0.c1))))) WHERE ((NOT ((((1598932118)) BETWEEN (('-108662527')) AND ((json_insert(rt0.c2, rt0.c0, rt0.c0))))))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1))>((rt0.c1))))) WHERE ((((((1598932118)) BETWEEN (('-108662527')) AND ((json_insert(rt0.c2, rt0.c0, rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (rtreenode(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS REAL))) UNION SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (rtreenode(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS REAL))))) UNION SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((rtreenode(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS REAL))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((((NULL)-(rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((NULL)-(rt0.c2))) ISNULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((((((NULL)-(rt0.c2))) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (x'') UNION ALL SELECT * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (((((vt1.c0) IS FALSE)) NOTNULL)) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (((((vt1.c0) IS FALSE)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (((((((vt1.c0) IS FALSE)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (0.09688042188822765) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (0.09688042188822765))) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((0.09688042188822765) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(SUM(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((NOT (TOTAL(SUM(COUNT(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((NOT (TOTAL(SUM(COUNT(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS FALSE))-(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE))-(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) IS FALSE))-(rt0.c1))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 WHERE (((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c2)<=(NULL)))))OR(CASE vt1.c0  WHEN NULL THEN rt0.c2 ELSE vt1.c0 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c2)<=(NULL)))))OR(CASE vt1.c0  WHEN NULL THEN rt0.c2 ELSE vt1.c0 END))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c2)<=(NULL)))))OR(CASE vt1.c0  WHEN NULL THEN rt0.c2 ELSE vt1.c0 END))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN((TOTAL(COUNT(*)) IN (MAX(rt0.c1), rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN((TOTAL(COUNT(*)) IN (MAX(rt0.c1), rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN((TOTAL(COUNT(*)) IN (MAX(rt0.c1), rt0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((x'0fc4')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((x'0fc4')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((x'0fc4')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1)<<(vt1.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1)<<(vt1.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1)<<(vt1.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c1) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) ISNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c1) NOT NULL)) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MIN((((((rt0.c0, rt0.c1, rt0.c2))!=((vt1.c0, rt0.c1, rt0.c0)))) NOT NULL)) FROM vt1, rt0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN (+ (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ELSE LAST_INSERT_ROWID() END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN (+ (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ELSE LAST_INSERT_ROWID() END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN (+ (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ELSE LAST_INSERT_ROWID() END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)<=(vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)<=(vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(rt0.c1))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(rt0.c1))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (-7.4511797E7) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(rt0.c1))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE ((NOT (-7.4511797E7))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(rt0.c1))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (((-7.4511797E7) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((LIKELY(rt0.c1))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) GROUP BY rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0))/(COUNT(*))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((GROUP_CONCAT(vt1.c0))/(COUNT(*))) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((GROUP_CONCAT(vt1.c0))/(COUNT(*))) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0))/(COUNT(*))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((GROUP_CONCAT(vt1.c0))/(COUNT(*))) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((GROUP_CONCAT(vt1.c0))/(COUNT(*))) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((rt0.c1 IN ()))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((rt0.c1 IN ()))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((rt0.c1 IN ()))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(x'')) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(x'')) COLLATE BINARY WHERE ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(x'')) COLLATE BINARY WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(x'')) COLLATE BINARY WHERE ((((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(x'')) COLLATE BINARY;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)|(vt1.c0))  WHEN ((vt1.c0)-(vt1.c0)) THEN (NOT (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)|(vt1.c0))  WHEN ((vt1.c0)-(vt1.c0)) THEN (NOT (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)|(vt1.c0))  WHEN ((vt1.c0)-(vt1.c0)) THEN (NOT (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(*)))>=(GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(COUNT(*)))>=(GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(COUNT(*)))>=(GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt1.c0)))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (CAST((vt1.c0 IN ()) AS TEXT)))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CAST((vt1.c0 IN ()) AS TEXT)) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2)<<(vt1.c0)))>>((rt0.c1 IN (vt1.c0))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2)<<(vt1.c0)))>>((rt0.c1 IN (vt1.c0)))) WHERE ((((((0.06277607172048394))<=((-1125533454)))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((0Xffffffffaa8657c5) BETWEEN (rt0.c1) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2)<<(vt1.c0)))>>((rt0.c1 IN (vt1.c0)))) WHERE ((NOT ((((((0.06277607172048394))<=((-1125533454)))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((0Xffffffffaa8657c5) BETWEEN (rt0.c1) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2)<<(vt1.c0)))>>((rt0.c1 IN (vt1.c0)))) WHERE ((((((((0.06277607172048394))<=((-1125533454)))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((0Xffffffffaa8657c5) BETWEEN (rt0.c1) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2)<<(vt1.c0)))>>((rt0.c1 IN (vt1.c0))));
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CASE WHEN DATE(rt0.c1, rt0.c0, rt0.c1) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CASE WHEN DATE(rt0.c1, rt0.c0, rt0.c1) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END WHERE (((rt0.c2)=(vt1.c0))) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CASE WHEN DATE(rt0.c1, rt0.c0, rt0.c1) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END WHERE ((NOT (((rt0.c2)=(vt1.c0))))) GROUP BY rt0.c2, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CASE WHEN DATE(rt0.c1, rt0.c0, rt0.c1) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END WHERE (((((rt0.c2)=(vt1.c0))) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CASE WHEN DATE(rt0.c1, rt0.c0, rt0.c1) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END GROUP BY rt0.c2, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(TOTAL(vt1.c0))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT ((rt0.c1 IN (rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT ((NOT ((rt0.c1 IN (rt0.c2))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((((NOT ((rt0.c1 IN (rt0.c2))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)||(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)<=(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)||(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)<=(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)||(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)<=(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c1) IS TRUE))))OR(((rt0.c2) IS TRUE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(((rt0.c1) IS TRUE))))OR(((rt0.c2) IS TRUE)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c2)AND(((rt0.c1) IS TRUE))))OR(((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((((AVG(COUNT(*))))==((GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((((AVG(COUNT(*))))==((GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((((AVG(COUNT(*))))=((GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (PRINTF(json_array(rt0.c2, rt0.c1))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (PRINTF(json_array(rt0.c2, rt0.c1))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((PRINTF(json_array(rt0.c2, rt0.c1))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)IS(rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((('\n2''''U_A')<(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((('\n2''''U_A')<(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)IS(rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((('\n2''''U_A')<(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0)))>((COUNT(TOTAL(SUM(']4j')))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((GROUP_CONCAT(vt1.c0)))>((COUNT(TOTAL(SUM(']4j')))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((GROUP_CONCAT(vt1.c0)))>((COUNT(TOTAL(SUM(']4j'))))))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (rt0.c0) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((~ (vt1.c0)))AND(vt1.c0)))OR(((0.6709931357110772)<=(vt1.c0)))))OR(0.4733585517304173)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((((((~ (vt1.c0)))AND(vt1.c0)))OR(((0.6709931357110772)<=(vt1.c0)))))OR(0.4733585517304173)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((((((~ (vt1.c0)))AND(vt1.c0)))OR(((0.6709931357110772)<=(vt1.c0)))))OR(0.4733585517304173)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 WHERE ((((('f^')/(rt0.c0)))!=(LIKELY(rt0.c2)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((('f^')/(rt0.c0)))!=(LIKELY(rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((((((('f^')/(rt0.c0)))<>(LIKELY(rt0.c2)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING LTRIM((GROUP_CONCAT(COUNT(MIN(COUNT(MIN(rt0.c2))))) IN (TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (LTRIM((GROUP_CONCAT(COUNT(MIN(COUNT(MIN(rt0.c2))))) IN (TOTAL(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((LTRIM((GROUP_CONCAT(COUNT(MIN(COUNT(MIN(rt0.c2))))) IN (TOTAL(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN SQLITE_SOURCE_ID() THEN (rt0.c0 IN ()) WHEN ((rt0.c2)IS(2.1345847E8)) THEN LIKELIHOOD(DISTINCT 'g', 0.8227511949238756) WHEN (rt0.c0 IN (rt0.c2)) THEN (((rt0.c0))>((rt0.c1))) ELSE (NOT ('Hbﲊ⿖U')) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c0 AS TEXT)  WHEN SQLITE_SOURCE_ID() THEN (rt0.c0 IN ()) WHEN ((rt0.c2)IS(2.1345847E8)) THEN LIKELIHOOD(DISTINCT 'g', 0.8227511949238756) WHEN (rt0.c0 IN (rt0.c2)) THEN (((rt0.c0))>((rt0.c1))) ELSE (NOT ('Hbﲊ⿖U')) END))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CASE CAST(rt0.c0 AS TEXT)  WHEN SQLITE_SOURCE_ID() THEN (rt0.c0 IN ()) WHEN ((rt0.c2)IS(2.1345847E8)) THEN LIKELIHOOD(DISTINCT 'g', 0.8227511949238756) WHEN (rt0.c0 IN (rt0.c2)) THEN (((rt0.c0))>((rt0.c1))) ELSE (NOT ('Hbﲊ⿖U')) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (json_quote((+ (vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (json_quote((+ (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((json_quote((+ (vt1.c0)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE TOTAL_CHANGES()  WHEN (((rt0.c0, -511319465, NULL)) NOT BETWEEN ((NULL, NULL, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (rt0.c2 IN ()) ELSE ((rt0.c2)IS(rt0.c1)) END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE TOTAL_CHANGES()  WHEN (((rt0.c0, -511319465, NULL)) NOT BETWEEN ((NULL, NULL, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (rt0.c2 IN ()) ELSE ((rt0.c2)IS(rt0.c1)) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE TOTAL_CHANGES()  WHEN (((rt0.c0, -511319465, NULL)) NOT BETWEEN ((NULL, NULL, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (rt0.c2 IN ()) ELSE ((rt0.c2)IS(rt0.c1)) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING AVG(TYPEOF(DISTINCT TOTAL(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG(TYPEOF(DISTINCT TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG(TYPEOF(DISTINCT TOTAL(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c1)<=(vt1.c0)))>=(SUBSTR(rt0.c1, rt0.c1)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1)<=(vt1.c0)))>=(SUBSTR(rt0.c1, rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((rt0.c1)<=(vt1.c0)))>=(SUBSTR(rt0.c1, rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CAST(((rt0.c0)=(rt0.c1)) AS TEXT)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(((rt0.c0)==(rt0.c1)) AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((CAST(((rt0.c0)==(rt0.c1)) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((+ (rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((+ (rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((+ (rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (NULL) AND (CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) BETWEEN (NULL) AND (CAST(rt0.c1 AS TEXT)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE RTRIM) BETWEEN (NULL) AND (CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((COUNT(MIN(GROUP_CONCAT(NULL)))) BETWEEN (COUNT(x'14ca')) AND (GROUP_CONCAT(MAX(GROUP_CONCAT(MIN(AVG(COUNT(*))))))))) BETWEEN (((COUNT(*))LIKE(vt1.c0))) AND (GROUP_CONCAT(SUM(TOTAL(vt1.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((COUNT(MIN(GROUP_CONCAT(NULL)))) BETWEEN (COUNT(x'14ca')) AND (GROUP_CONCAT(MAX(GROUP_CONCAT(MIN(AVG(COUNT(*))))))))) BETWEEN (((COUNT(*))LIKE(vt1.c0))) AND (GROUP_CONCAT(SUM(TOTAL(vt1.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((COUNT(MIN(GROUP_CONCAT(NULL)))) BETWEEN (COUNT(x'14ca')) AND (GROUP_CONCAT(MAX(GROUP_CONCAT(MIN(AVG(COUNT(*))))))))) BETWEEN (((COUNT(*))LIKE(vt1.c0))) AND (GROUP_CONCAT(SUM(TOTAL(vt1.c0)))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((('/M' COLLATE NOCASE) NOTNULL)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((('/M' COLLATE NOCASE) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((('/M' COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((0xffffffff89bb4f51) ISNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((0xffffffff89bb4f51) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((0xffffffff89bb4f51) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT rt0.c2))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT rt0.c2))) WHERE (((rt0.c2 COLLATE RTRIM)IS(CASE rt0.c0  WHEN 'pb~9袜' THEN rt0.c1 END))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT rt0.c2))) WHERE ((NOT (((rt0.c2 COLLATE RTRIM)IS(CASE rt0.c0  WHEN 'pb~9袜' THEN rt0.c1 END))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT rt0.c2))) WHERE (((((rt0.c2 COLLATE RTRIM)IS(CASE rt0.c0  WHEN 'pb~9袜' THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT rt0.c2))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((((rt0.c1) NOT NULL))AND((NULL IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c1) NOT NULL))AND((NULL IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((((((rt0.c1) NOT NULL))AND((NULL IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((+ (((NULL) NOT NULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((+ (((NULL) NOT NULL)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((+ (((NULL) NOT NULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (x'')) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (x'')) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (x'')) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (x'')) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (x'')) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c0)) AND (x'')) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND ((+ (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND ((+ (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND ((+ (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0 COLLATE RTRIM)))OR(((1601978486) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0 COLLATE RTRIM)))OR(((1601978486) IS FALSE)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0 COLLATE RTRIM)))OR(((1601978486) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ())) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((CAST(vt1.c0 AS REAL) IN ())))) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((((CAST(vt1.c0 AS REAL) IN ())) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(((((MAX(COUNT(*)))OR(SUM(TOTAL(SUM(MIN(rt0.c0)))))))OR(AVG(rt0.c0)))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(((((MAX(COUNT(*)))OR(SUM(TOTAL(SUM(MIN(rt0.c0)))))))OR(AVG(rt0.c0)))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(((((MAX(COUNT(*)))OR(SUM(TOTAL(SUM(MIN(rt0.c0)))))))OR(AVG(rt0.c0))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c2)+(rt0.c0))) NOT NULL)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2)+(rt0.c0))) NOT NULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c2)+(rt0.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING COUNT(MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((COUNT(MIN(rt0.c2))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c0))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN ('1965296102') AND (CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE)) BETWEEN ('1965296102') AND (CAST(rt0.c0 AS BLOB)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) IS FALSE)) BETWEEN ('1965296102') AND (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((((GROUP_CONCAT(SUM(vt1.c0)))OR(GROUP_CONCAT(MIN(AVG(rt0.c1))))))OR(MIN(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (((((GROUP_CONCAT(SUM(vt1.c0)))OR(GROUP_CONCAT(MIN(AVG(rt0.c1))))))OR(MIN(MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((((((GROUP_CONCAT(SUM(vt1.c0)))OR(GROUP_CONCAT(MIN(AVG(rt0.c1))))))OR(MIN(MIN(rt0.c2))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((~ (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((rt0.c0)AND(rt0.c1)) THEN COALESCE(DISTINCT vt1.c0, rt0.c2) END;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((rt0.c0)AND(rt0.c1)) THEN COALESCE(DISTINCT vt1.c0, rt0.c2) END WHERE (((((vt1.c0)<<(rt0.c0))) IS FALSE)) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((rt0.c0)AND(rt0.c1)) THEN COALESCE(DISTINCT vt1.c0, rt0.c2) END WHERE ((NOT (((((vt1.c0)<<(rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((rt0.c0)AND(rt0.c1)) THEN COALESCE(DISTINCT vt1.c0, rt0.c2) END WHERE (((((((vt1.c0)<<(rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((rt0.c0)AND(rt0.c1)) THEN COALESCE(DISTINCT vt1.c0, rt0.c2) END;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN rt0.c2 END)-(x''))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN rt0.c2 END)-(x''))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c2 END)-(x''))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(SUM(rt0.c2))) ISNULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((AVG(SUM(rt0.c2))) ISNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((AVG(SUM(rt0.c2))) ISNULL)) ISNULL);
SELECT ALL rt0.c0 FROM vt1 NATURAL JOIN rt0;
SELECT rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE (1248247733) UNION ALL SELECT ALL rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (1248247733))) UNION ALL SELECT ALL rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((1248247733) ISNULL));
SELECT ALL rt0.c0 FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((- (vt1.c0))))>((((vt1.c0)IS NOT(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((- (vt1.c0))))>((((vt1.c0)IS NOT(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((- (vt1.c0))))>((((vt1.c0)IS NOT(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) ISNULL)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((~ (rt0.c2))) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0))>=((vt1.c0)))) BETWEEN (SUM(AVG(GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0)))))) AND (COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((((vt1.c0))>=((vt1.c0)))) BETWEEN (SUM(AVG(GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0)))))) AND (COUNT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((((vt1.c0))>=((vt1.c0)))) BETWEEN (SUM(AVG(GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0)))))) AND (COUNT(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM;
SELECT * FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS NUMERIC)))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM;
SELECT * FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS NUMERIC)) ISNULL)) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM;
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, (~ (rt0.c2)), NULL)) AND (((rt0.c0 IN (rt0.c2)), x'', ((((NULL)OR(rt0.c1)))OR('387326967')))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, (~ (rt0.c2)), NULL)) AND (((rt0.c0 IN (rt0.c2)), x'', ((((NULL)OR(rt0.c1)))OR('387326967')))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, (~ (rt0.c2)), NULL)) AND (((rt0.c0 IN (rt0.c2)), x'', ((((NULL)OR(rt0.c1)))OR('387326967')))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (RTRIM(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, rt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (RTRIM(vt1.c0 COLLATE BINARY)))) GROUP BY rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((RTRIM(vt1.c0 COLLATE BINARY)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(json_array_length(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(json_array_length(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(json_array_length(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((((((rt0.c0 COLLATE BINARY)OR(((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))))AND(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 END)))OR(-108662527 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((((((rt0.c0 COLLATE BINARY)OR(((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))))AND(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 END)))OR(-108662527 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((((((((rt0.c0 COLLATE BINARY)OR(((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))))AND(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 END)))OR(-108662527 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING AVG(LOWER(vt1.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(LOWER(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(LOWER(vt1.c0))) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING AVG(LOWER(vt1.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(LOWER(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(LOWER(vt1.c0))) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((NULL)GLOB(rt0.c2)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (TYPEOF(IFNULL(rt0.c1, rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (TYPEOF(IFNULL(rt0.c1, rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((TYPEOF(IFNULL(rt0.c1, rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (CAST(LAST_INSERT_ROWID() AS INTEGER)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(LAST_INSERT_ROWID() AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((CAST(LAST_INSERT_ROWID() AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING SUM(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((SUM(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)) IN ())) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)) IN ())) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c1 IN ())) NOT BETWEEN ((((vt1.c0, rt0.c0, vt1.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2)))) AND (((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((rt0.c1 IN ())) NOT BETWEEN ((((vt1.c0, rt0.c0, vt1.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2)))) AND (((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((((((rt0.c1 IN ())) NOT BETWEEN ((((vt1.c0, rt0.c0, vt1.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2)))) AND (((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (CASE ((0X2ae57700)<<(rt0.c2))  WHEN vt1.c0 THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)=(vt1.c0)) THEN ((vt1.c0) BETWEEN (657652874) AND (rt0.c2)) ELSE ((x'bc1f')>=(rt0.c2)) END) GROUP BY rt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE ((0X2ae57700)<<(rt0.c2))  WHEN vt1.c0 THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)==(vt1.c0)) THEN ((vt1.c0) BETWEEN (657652874) AND (rt0.c2)) ELSE ((x'bc1f')>=(rt0.c2)) END))) GROUP BY rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((CASE ((0x2ae57700)<<(rt0.c2))  WHEN vt1.c0 THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)=(vt1.c0)) THEN ((vt1.c0) BETWEEN (657652874) AND (rt0.c2)) ELSE ((x'bc1f')>=(rt0.c2)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING CAST(COUNT(x'6b23') COLLATE NOCASE AS NUMERIC) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(x'6b23') COLLATE NOCASE AS NUMERIC))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(x'6b23') COLLATE NOCASE AS NUMERIC)) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING CAST(COUNT(x'6b23') COLLATE NOCASE AS NUMERIC) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(x'6b23') COLLATE NOCASE AS NUMERIC))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(x'6b23') COLLATE NOCASE AS NUMERIC)) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((rt0.c2 COLLATE NOCASE)IS NOT((x'' IN ()))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (TYPEOF((rt0.c2 IN (rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (TYPEOF((rt0.c2 IN (rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((TYPEOF((rt0.c2 IN (rt0.c1)))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 WHERE (x'') GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(((GROUP_CONCAT(COUNT(rt0.c2)))/(TOTAL(AVG(TOTAL(TOTAL(COUNT(rt0.c1)))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(((GROUP_CONCAT(COUNT(rt0.c2)))/(TOTAL(AVG(TOTAL(TOTAL(COUNT(rt0.c1)))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(((GROUP_CONCAT(COUNT(rt0.c2)))/(TOTAL(AVG(TOTAL(TOTAL(COUNT(rt0.c1))))))))) ISNULL);
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (CASE WHEN x'c12e' THEN rt0.c2 WHEN x'a095d60b' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (CASE WHEN x'c12e' THEN rt0.c2 WHEN x'a095d60b' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((CASE WHEN x'c12e' THEN rt0.c2 WHEN x'a095d60b' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY) ISNULL));
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((~ (rt0.c0))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((~ (rt0.c0))))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((~ (rt0.c0))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ ('F^'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ ('F^'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ ('F^'))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING ((((COUNT(vt1.c0))AND(AVG(rt0.c1))))AND((~ (SUM(MAX(0.24600544439811944)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (((((COUNT(vt1.c0))AND(AVG(rt0.c1))))AND((~ (SUM(MAX(0.24600544439811944)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING ((((((COUNT(vt1.c0))AND(AVG(rt0.c1))))AND((~ (SUM(MAX(0.24600544439811944))))))) ISNULL);
SELECT ALL TOTAL(((((rt0.c1)*(rt0.c0))) NOT BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM))) FROM rt0 ORDER BY x'f0c0', rt0.c0 DESC, rt0.c2  NULLS FIRST;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((rt0.c0)IS(vt1.c0)) THEN NULL COLLATE NOCASE END) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CASE vt1.c0 COLLATE BINARY  WHEN ((rt0.c0)IS(vt1.c0)) THEN NULL COLLATE NOCASE END))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((CASE vt1.c0 COLLATE BINARY  WHEN ((rt0.c0)IS(vt1.c0)) THEN NULL COLLATE NOCASE END) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND ((RTRIM(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND ((RTRIM(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND ((RTRIM(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT((MIN(rt0.c1) IN (rt0.c2))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT((MIN(rt0.c1) IN (rt0.c2))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT((MIN(rt0.c1) IN (rt0.c2)))) ISNULL);
SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END COLLATE NOCASE;
SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END COLLATE NOCASE WHERE ((((vt1.c0 IN ()))OR(CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END COLLATE NOCASE WHERE ((NOT ((((vt1.c0 IN ()))OR(CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END COLLATE NOCASE WHERE ((((((vt1.c0 IN ()))OR(CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END COLLATE NOCASE;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((CHANGES()) IS FALSE)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((CHANGES()) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((CHANGES()) IS FALSE)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS REAL)) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CAST(((rt0.c1) IS FALSE) AS REAL)))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((CAST(((rt0.c1) IS FALSE) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c2, rt0.c1))) IN ())) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c2, rt0.c1))) IN ())))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c2, rt0.c1))) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0 HAVING AVG(((rt0.c2) IS TRUE)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (AVG(((rt0.c2) IS TRUE)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0 HAVING ((AVG(((rt0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0 HAVING AVG(((rt0.c2) IS TRUE)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (AVG(((rt0.c2) IS TRUE)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0 HAVING ((AVG(((rt0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (json_insert(UPPER(vt1.c0), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS INTEGER))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (json_insert(UPPER(vt1.c0), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS INTEGER))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((json_insert(UPPER(vt1.c0), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS INTEGER))) ISNULL));
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 NOT INDEXED WHERE ((- ((- (rt0.c0))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((- ((- (rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((- ((- (rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (SUM(vt1.c0) IN ()) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((SUM(vt1.c0) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((SUM(vt1.c0) IN ())) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (SUM(vt1.c0) IN ()) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((SUM(vt1.c0) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((SUM(vt1.c0) IN ())) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((rt0.c2) NOT BETWEEN ('') AND (vt1.c0)))))OR(UPPER(vt1.c0)))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((rt0.c2) NOT BETWEEN ('') AND (vt1.c0)))))OR(UPPER(vt1.c0)))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((rt0.c2) NOT BETWEEN ('') AND (vt1.c0)))))OR(UPPER(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c0 END) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((CASE WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c0 END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((((rt0.c1)<>(vt1.c0)) IN ())) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((rt0.c1)<>(vt1.c0)) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((((((rt0.c1)!=(vt1.c0)) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((LOWER(DISTINCT NULL)) NOT BETWEEN (MAX(rt0.c2)) AND (((rt0.c0)+(TOTAL(GROUP_CONCAT(AVG(COUNT(rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((LOWER(DISTINCT NULL)) NOT BETWEEN (MAX(rt0.c2)) AND (((rt0.c0)+(TOTAL(GROUP_CONCAT(AVG(COUNT(rt0.c0)))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((LOWER(DISTINCT NULL)) NOT BETWEEN (MAX(rt0.c2)) AND (((rt0.c0)+(TOTAL(GROUP_CONCAT(AVG(COUNT(rt0.c0))))))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((((((((-1340976464)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND ((~ (rt0.c1))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((((((((((-1340976464)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND ((~ (rt0.c1))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((((((((((-1340976464)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND ((~ (rt0.c1))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))AND(0.7611402771514042)) AS INTEGER)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)AND(rt0.c0)))AND(0.7611402771514042)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(((((rt0.c2)AND(rt0.c0)))AND(0.7611402771514042)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (5.21307028E8) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (5.21307028E8))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((5.21307028E8) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(TOTAL(rt0.c0)) COLLATE BINARY) BETWEEN (0X36db47db) AND ((rt0.c1 IN ()))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((AVG(TOTAL(rt0.c0)) COLLATE BINARY) BETWEEN (0x36db47db) AND ((rt0.c1 IN ()))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((AVG(TOTAL(rt0.c0)) COLLATE BINARY) BETWEEN (0X36db47db) AND ((rt0.c1 IN ())))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) AND (((rt0.c0) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) AND (((rt0.c0) NOT NULL)))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) AND (((rt0.c0) NOT NULL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2) NOT BETWEEN ((NOT (rt0.c2))) AND ((rt0.c2 IN (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN ((NOT (rt0.c2))) AND ((rt0.c2 IN (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN ((NOT (rt0.c2))) AND ((rt0.c2 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (COALESCE(DISTINCT (~ ('-446100921')), ((vt1.c0) NOTNULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (COALESCE(DISTINCT (~ ('-446100921')), ((vt1.c0) NOTNULL))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((COALESCE(DISTINCT (~ ('-446100921')), ((vt1.c0) NOTNULL))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(COUNT(TOTAL(COUNT(vt1.c0)))) AS NUMERIC) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(COUNT(TOTAL(COUNT(vt1.c0)))) AS NUMERIC))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(COUNT(TOTAL(COUNT(vt1.c0)))) AS NUMERIC)) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)+('353355072'))) NOT NULL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)+('353355072'))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)+('353355072'))) NOT NULL)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(ABS(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(ABS(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(ABS(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) IN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) IN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) IN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING TOTAL(COUNT(TOTAL(GROUP_CONCAT(AVG(vt1.c0))))) UNION ALL SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING (NOT (TOTAL(COUNT(TOTAL(GROUP_CONCAT(AVG(vt1.c0))))))) UNION ALL SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING ((TOTAL(COUNT(TOTAL(GROUP_CONCAT(AVG(vt1.c0)))))) ISNULL);
SELECT * FROM vt1 CROSS JOIN rt0 ON NULLIF(((rt0.c1)!=(NULL)), (NULL IN ()));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON NULLIF(((rt0.c1)!=(NULL)), (NULL IN ())) WHERE (((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<=(((-6.12765937E8) BETWEEN (rt0.c2) AND (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt0 ON NULLIF(((rt0.c1)!=(NULL)), (NULL IN ())) WHERE ((NOT (((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<=(((-6.12765937E8) BETWEEN (rt0.c2) AND (vt1.c0))))))) UNION ALL SELECT * FROM vt1 CROSS JOIN rt0 ON NULLIF(((rt0.c1)<>(NULL)), (NULL IN ())) WHERE (((((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<=(((-6.12765937E8) BETWEEN (rt0.c2) AND (vt1.c0))))) ISNULL));
SELECT * FROM vt1 CROSS JOIN rt0 ON NULLIF(((rt0.c1)!=(NULL)), (NULL IN ()));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((TYPEOF(rt0.c0), ((rt0.c1) ISNULL), ((((((((((((rt0.c0)AND(NULL)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1))))<((CAST(vt1.c0 AS NUMERIC), (- (rt0.c1)), (vt1.c0 IN ()))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((TYPEOF(rt0.c0), ((rt0.c1) ISNULL), ((((((((((((rt0.c0)AND(NULL)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1))))<((CAST(vt1.c0 AS NUMERIC), (- (rt0.c1)), (vt1.c0 IN ()))))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((TYPEOF(rt0.c0), ((rt0.c1) ISNULL), ((((((((((((rt0.c0)AND(NULL)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1))))<((CAST(vt1.c0 AS NUMERIC), (- (rt0.c1)), (vt1.c0 IN ()))))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT ((NOT (MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (((NOT (MIN(rt0.c0)))) ISNULL);
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT ((NOT (MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (((NOT (MIN(rt0.c0)))) ISNULL);
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (json_insert(CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END, (+ (vt1.c0)), ((rt0.c2)AND(rt0.c2)))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (json_insert(CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END, (+ (vt1.c0)), ((rt0.c2)AND(rt0.c2)))))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((json_insert(CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END, (+ (vt1.c0)), ((rt0.c2)AND(rt0.c2)))) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((CAST(rt0.c1 AS INTEGER))AND(CAST(rt0.c2 AS TEXT))))OR(CAST(rt0.c1 AS INTEGER)))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((CAST(rt0.c1 AS INTEGER))AND(CAST(rt0.c2 AS TEXT))))OR(CAST(rt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((((CAST(rt0.c1 AS INTEGER))AND(CAST(rt0.c2 AS TEXT))))OR(CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (NULL))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((rt0.c1 COLLATE NOCASE IN (NULL))))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c1 COLLATE NOCASE IN (NULL))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (SUM(rt0.c2) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((SUM(rt0.c2) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((SUM(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (SUM(rt0.c2) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((SUM(rt0.c2) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((SUM(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (rt0.c0) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN (rt0.c1) AND (((rt0.c1)>>(NULL))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) BETWEEN (rt0.c1) AND (((rt0.c1)>>(NULL))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((rt0.c1) NOT NULL)) BETWEEN (rt0.c1) AND (((rt0.c1)>>(NULL))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (CASE WHEN -1096502837 THEN ((-1566825010)<(rt0.c0)) END) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN -1096502837 THEN ((-1566825010)<(rt0.c0)) END))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 NOT INDEXED WHERE (((CASE WHEN -1096502837 THEN ((-1566825010)<(rt0.c0)) END) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 COLLATE NOCASE)AND(((((vt1.c0)AND(rt0.c0)))AND('vg1[]9?')))))AND((rt0.c2 IN ()))) GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 COLLATE NOCASE)AND(((((vt1.c0)AND(rt0.c0)))AND('vg1[]9?')))))AND((rt0.c2 IN ()))) GROUP BY vt1.c0, rt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 COLLATE NOCASE)AND(((((vt1.c0)AND(rt0.c0)))AND('vg1[]9?')))))AND((rt0.c2 IN ()))) GROUP BY vt1.c0, rt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 COLLATE NOCASE)AND(((((vt1.c0)AND(rt0.c0)))AND('vg1[]9?')))))AND((rt0.c2 IN ()))) GROUP BY vt1.c0, rt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0)))*((vt1.c0 IN (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((NOT (vt1.c0)))*((vt1.c0 IN (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((NOT (vt1.c0)))*((vt1.c0 IN (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c2 THEN 0.3727859978943191 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT);
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c2 THEN 0.3727859978943191 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT) WHERE (CAST(((x'')>(x'')) AS INTEGER)) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c2 THEN 0.3727859978943191 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT) WHERE ((NOT (CAST(((x'')>(x'')) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c2 THEN 0.3727859978943191 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT) WHERE (((CAST(((x'')>(x'')) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c2 THEN 0.3727859978943191 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((~ (rt0.c0)) AS INTEGER)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((~ (rt0.c0)) AS INTEGER)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((~ (rt0.c0)) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((vt1.c0) IS FALSE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((vt1.c0) IS FALSE))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((vt1.c0) IS FALSE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((vt1.c0) IS FALSE))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON NULL;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) IS TRUE)) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON NULL WHERE ((NOT (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) IS TRUE)) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON NULL;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c1 IN ()) END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c1 IN ()) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((CASE WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(MIN(rt0.c0)) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(MIN(rt0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(MIN(rt0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON (((((x'' IN ()))OR(((((((((rt0.c0)AND(rt0.c0)))OR(0.9928479746434329)))AND(rt0.c2)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE));
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON (((((x'' IN ()))OR(((((((((rt0.c0)AND(rt0.c0)))OR(0.9928479746434329)))AND(rt0.c2)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)) WHERE ((NOT (((rt0.c1) NOT NULL)))) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN rt0 ON (((((x'' IN ()))OR(((((((((rt0.c0)AND(rt0.c0)))OR(0.9928479746434329)))AND(rt0.c2)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)) WHERE ((NOT ((NOT (((rt0.c1) NOT NULL)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON (((((x'' IN ()))OR(((((((((rt0.c0)AND(rt0.c0)))OR(0.9928479746434329)))AND(rt0.c2)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)) WHERE ((((NOT (((rt0.c1) NOT NULL)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON (((((x'' IN ()))OR(((((((((rt0.c0)AND(rt0.c0)))OR(0.9928479746434329)))AND(rt0.c2)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((0x45791a62) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((0X45791a62) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((0X45791a62) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT((((MAX(0.140786548322114))) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT((((MAX(0.140786548322114))) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT((((MAX(0.140786548322114))) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ())) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ((rt0.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((- ((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((- ((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((- ((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)%(rt0.c1))) BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt0.c2))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)%(rt0.c1))) BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt0.c2))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)%(rt0.c1))) BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(AVG(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(AVG(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(AVG(MAX(vt1.c0)))) ISNULL);
SELECT MIN(((((((vt1.c0)OR(rt0.c2)))OR(rt0.c0))) NOTNULL)) FROM vt1, rt0;
SELECT rt0.c1 FROM vt1, rt0 NOT INDEXED;
SELECT rt0.c1 FROM vt1, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) UNION ALL SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT rt0.c1 FROM vt1, rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT rt0.c1 FROM vt1, rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('-248466751') NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('-248466751') NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('-248466751') NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0))=((vt1.c0))), ((vt1.c0) IS FALSE), ((vt1.c0)|(vt1.c0)), '])F<', ((((((((vt1.c0)AND(vt1.c0)))AND(-498735949)))OR(vt1.c0)))AND(vt1.c0))))=((CASE WHEN vt1.c0 THEN 0Xffffffff841dd80f END, CASE WHEN vt1.c0 THEN vt1.c0 END, NULL, (+ (0.2109821306569568)), (+ (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0))==((vt1.c0))), ((vt1.c0) IS FALSE), ((vt1.c0)|(vt1.c0)), '])F<', ((((((((vt1.c0)AND(vt1.c0)))AND(-498735949)))OR(vt1.c0)))AND(vt1.c0))))=((CASE WHEN vt1.c0 THEN 0Xffffffff841dd80f END, CASE WHEN vt1.c0 THEN vt1.c0 END, NULL, (+ (0.2109821306569568)), (+ (vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0))==((vt1.c0))), ((vt1.c0) IS FALSE), ((vt1.c0)|(vt1.c0)), '])F<', ((((((((vt1.c0)AND(vt1.c0)))AND(-498735949)))OR(vt1.c0)))AND(vt1.c0))))==((CASE WHEN vt1.c0 THEN 0xffffffff841dd80f END, CASE WHEN vt1.c0 THEN vt1.c0 END, NULL, (+ (0.2109821306569568)), (+ (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))>=((rt0.c0 IN ()))) GROUP BY rt0.c2, vt1.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c0))==((rt0.c0))))<((~ (rt0.c1))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((((vt1.c0))==((rt0.c0))))<((~ (rt0.c1))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((((((vt1.c0))==((rt0.c0))))<((~ (rt0.c1))))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (x'' COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (x'' COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((x'' COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((x'10318f8d') BETWEEN (rt0.c2) AND (rt0.c0)))>=(CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((x'10318f8d') BETWEEN (rt0.c2) AND (rt0.c0)))>=(CAST(rt0.c0 AS TEXT)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((x'10318f8d') BETWEEN (rt0.c2) AND (rt0.c0)))>=(CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL TOTAL(((rt0.c0 COLLATE BINARY) IS FALSE)) FROM vt1, rt0 ORDER BY (((((((((((((- (rt0.c1)))OR(ABS(vt1.c0))))OR(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(NULL)))OR(((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)))))OR(((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))) ASC, CASE WHEN 0.7831703490153178 COLLATE NOCASE THEN (vt1.c0 IN ()) ELSE ((rt0.c2)&(rt0.c0)) END;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((('EJ')OR(NULLIF(rt0.c2, -1e500))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((('EJ')OR(NULLIF(rt0.c2, -1e500))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((('EJ')OR(NULLIF(rt0.c2, -1e500))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((~ ((- (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((~ ((- (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((~ ((- (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ())) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((CAST(rt0.c0 AS NUMERIC) IN ())))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((CAST(rt0.c0 AS NUMERIC) IN ())) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN(SUM(rt0.c2)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(SUM(rt0.c2))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)%(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((~ (((vt1.c0)%(vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((~ (((vt1.c0)%(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(rt0.c1 AS NUMERIC) WHEN MIN(rt0.c2, rt0.c2) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END WHEN x'' THEN ((((rt0.c1)OR(rt0.c2)))OR(vt1.c0)) WHEN ((rt0.c2)%(0.09897392705803854)) THEN NULL WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c2 COLLATE NOCASE ELSE HEX(rt0.c1) END) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(rt0.c1 AS NUMERIC) WHEN MIN(rt0.c2, rt0.c2) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END WHEN x'' THEN ((((rt0.c1)OR(rt0.c2)))OR(vt1.c0)) WHEN ((rt0.c2)%(0.09897392705803854)) THEN NULL WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c2 COLLATE NOCASE ELSE HEX(rt0.c1) END))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(rt0.c1 AS NUMERIC) WHEN MIN(rt0.c2, rt0.c2) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 END WHEN x'' THEN ((((rt0.c1)OR(rt0.c2)))OR(vt1.c0)) WHEN ((rt0.c2)%(0.09897392705803854)) THEN NULL WHEN ((rt0.c0)||(rt0.c0)) THEN rt0.c2 COLLATE NOCASE ELSE HEX(rt0.c1) END) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (((((vt1.c0)AND(vt1.c0)))AND(0.29255383285000114))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ (((((vt1.c0)AND(vt1.c0)))AND(0.29255383285000114))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((+ (((((vt1.c0)AND(vt1.c0)))AND(0.29255383285000114))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) END GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) END GROUP BY rt0.c1 HAVING SUM(TOTAL(SUM(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) END GROUP BY rt0.c1 HAVING (NOT (SUM(TOTAL(SUM(MAX(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) END GROUP BY rt0.c1 HAVING ((SUM(TOTAL(SUM(MAX(rt0.c2))))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)-(rt0.c1)) COLLATE NOCASE;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)-(rt0.c1)) COLLATE NOCASE WHERE (((rt0.c0)IS NOT((- (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)-(rt0.c1)) COLLATE NOCASE WHERE ((NOT (((rt0.c0)IS NOT((- (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)-(rt0.c1)) COLLATE NOCASE WHERE (((((rt0.c0)IS NOT((- (rt0.c2))))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)-(rt0.c1)) COLLATE NOCASE;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((((((((((vt1.c0)AND(((x'9b56') BETWEEN (vt1.c0) AND (NULL)))))AND((('{x.EY!') BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0)))))OR((+ (vt1.c0)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((('')OR(NULL))));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((((((((((vt1.c0)AND(((x'9b56') BETWEEN (vt1.c0) AND (NULL)))))AND((('{x.EY!') BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0)))))OR((+ (vt1.c0)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((('')OR(NULL)))) WHERE (rt0.c0) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((((((((((vt1.c0)AND(((x'9b56') BETWEEN (vt1.c0) AND (NULL)))))AND((('{x.EY!') BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0)))))OR((+ (vt1.c0)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((('')OR(NULL)))) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((((((((((vt1.c0)AND(((x'9b56') BETWEEN (vt1.c0) AND (NULL)))))AND((('{x.EY!') BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0)))))OR((+ (vt1.c0)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((('')OR(NULL)))) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((((((((((vt1.c0)AND(((x'9b56') BETWEEN (vt1.c0) AND (NULL)))))AND((('{x.EY!') BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0)))))OR((+ (vt1.c0)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((('')OR(NULL))));
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (AVG(vt1.c0) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT ((AVG(vt1.c0) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (((AVG(vt1.c0) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (AVG(vt1.c0) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT ((AVG(vt1.c0) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (((AVG(vt1.c0) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (RTRIM((~ (rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (RTRIM((~ (rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((RTRIM((~ (rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((LIKELY(DISTINCT '0.5040815797368493')) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((LIKELY(DISTINCT '0.5040815797368493')) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED WHERE (((((LIKELY(DISTINCT '0.5040815797368493')) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (COALESCE(((vt1.c0)==(vt1.c0)), ((vt1.c0)-('-203589807')))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (COALESCE(((vt1.c0)==(vt1.c0)), ((vt1.c0)-('-203589807')))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((COALESCE(((vt1.c0)==(vt1.c0)), ((vt1.c0)-('-203589807')))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING vt1.c0 UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING ((vt1.c0) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING vt1.c0 UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING ((vt1.c0) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON rt0.c2 WHERE (TYPEOF(CAST(vt1.c0 AS INTEGER))) ORDER BY ((- (NULL)) IN ());
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON rt0.c2 WHERE ((NOT (TYPEOF(CAST(vt1.c0 AS INTEGER))))) ORDER BY ((- (NULL)) IN ());
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON rt0.c2 WHERE (((TYPEOF(CAST(vt1.c0 AS INTEGER))) ISNULL)) ORDER BY ((- (NULL)) IN ());
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON rt0.c2;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c0)) NOT BETWEEN ((0.5094453943012458)) AND ((LTRIM(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((0.5094453943012458)) AND ((LTRIM(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((0.5094453943012458)) AND ((LTRIM(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE UNLIKELY(vt1.c0) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE UNLIKELY(vt1.c0) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE UNLIKELY(vt1.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(((rt0.c0) NOTNULL))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(((rt0.c0) NOTNULL))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(((rt0.c0) NOTNULL))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c0)<<(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN rt0.c0 COLLATE RTRIM THEN x'' WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0)<<(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN rt0.c0 COLLATE RTRIM THEN x'' WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c0)<<(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN rt0.c0 COLLATE RTRIM THEN x'' WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 CROSS JOIN vt1 ON (NOT (((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 CROSS JOIN vt1 ON (NOT (((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))) WHERE (vt1.c0) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 CROSS JOIN vt1 ON (NOT (((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))) WHERE ((NOT (vt1.c0))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 CROSS JOIN vt1 ON (NOT (((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))) WHERE (((vt1.c0) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 CROSS JOIN vt1 ON (NOT (((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (ROUND(((0.2082084299386675) IS FALSE), CAST(rt0.c1 AS INTEGER))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (ROUND(((0.2082084299386675) IS FALSE), CAST(rt0.c1 AS INTEGER))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((ROUND(((0.2082084299386675) IS FALSE), CAST(rt0.c1 AS INTEGER))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))/(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB))/(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB))/(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (LIKELY(((rt0.c0)<=(rt0.c2)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (LIKELY(((rt0.c0)<=(rt0.c2)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((LIKELY(((rt0.c0)<=(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(ABS(DISTINCT rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(ABS(DISTINCT rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(ABS(DISTINCT rt0.c1))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(ABS(DISTINCT rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(ABS(DISTINCT rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(ABS(DISTINCT rt0.c1))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0)))<((((NULL, rt0.c0, rt0.c2))==((vt1.c0, rt0.c1, rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0)))<((((NULL, rt0.c0, rt0.c2))=((vt1.c0, rt0.c1, rt0.c0)))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0)))<((((NULL, rt0.c0, rt0.c2))==((vt1.c0, rt0.c1, rt0.c0)))))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (0.27159109188212327) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (0.27159109188212327))) UNION SELECT DISTINCT * FROM vt1 WHERE (((0.27159109188212327) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE CAST(COUNT(GROUP_CONCAT(rt0.c2)) AS NUMERIC)  WHEN SUM(COUNT(COUNT(AVG(rt0.c2)))) THEN GROUP_CONCAT(rt0.c0) END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE CAST(COUNT(GROUP_CONCAT(rt0.c2)) AS NUMERIC)  WHEN SUM(COUNT(COUNT(AVG(rt0.c2)))) THEN GROUP_CONCAT(rt0.c0) END)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE CAST(COUNT(GROUP_CONCAT(rt0.c2)) AS NUMERIC)  WHEN SUM(COUNT(COUNT(AVG(rt0.c2)))) THEN GROUP_CONCAT(rt0.c0) END) ISNULL);
SELECT MAX(COALESCE(rt0.c2, rt0.c2 COLLATE NOCASE)) FROM rt0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (CASE WHEN vt1.c0 THEN 0.3714789306118428 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (CASE WHEN vt1.c0 THEN 0.3714789306118428 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (CASE WHEN vt1.c0 THEN 0.3714789306118428 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN x'' THEN rt0.c1 ELSE (NOT (rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CASE WHEN x'' THEN rt0.c1 ELSE (NOT (rt0.c1)) END))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((CASE WHEN x'' THEN rt0.c1 ELSE (NOT (rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (CASE x''  WHEN (rt0.c2 IN (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN LOWER(rt0.c1) THEN rt0.c0 COLLATE BINARY WHEN (~ (rt0.c1)) THEN ((rt0.c0)&(vt1.c0)) ELSE CAST(rt0.c0 AS BLOB) END) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE x''  WHEN (rt0.c2 IN (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN LOWER(rt0.c1) THEN rt0.c0 COLLATE BINARY WHEN (~ (rt0.c1)) THEN ((rt0.c0)&(vt1.c0)) ELSE CAST(rt0.c0 AS BLOB) END))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((CASE x''  WHEN (rt0.c2 IN (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN LOWER(rt0.c1) THEN rt0.c0 COLLATE BINARY WHEN (~ (rt0.c1)) THEN ((rt0.c0)&(vt1.c0)) ELSE CAST(rt0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(''))*(((rt0.c1)IS NOT(rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(''))*(((rt0.c1)IS NOT(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((SQLITE_COMPILEOPTION_GET(''))*(((rt0.c1)IS NOT(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) BETWEEN ((+ (rt0.c2))) AND (COUNT(MAX(COUNT(vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (((COUNT(*)) BETWEEN ((+ (rt0.c2))) AND (COUNT(MAX(COUNT(vt1.c0))))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((((COUNT(*)) BETWEEN ((+ (rt0.c2))) AND (COUNT(MAX(COUNT(vt1.c0)))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((rt0.c0)>=(vt1.c0)))) AND (((0.2121220708713264 IN ()))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((rt0.c0)>=(vt1.c0)))) AND (((0.2121220708713264 IN ()))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((((rt0.c0)>=(vt1.c0)))) AND (((0.2121220708713264 IN ()))))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS BLOB);
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS BLOB) WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN (- (vt1.c0)) WHEN ((rt0.c1)>>(rt0.c0)) THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c0)) WHEN ((rt0.c2)<(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 END END) UNION SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS BLOB) WHERE ((NOT (CASE WHEN vt1.c0 COLLATE BINARY THEN (- (vt1.c0)) WHEN ((rt0.c1)>>(rt0.c0)) THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c0)) WHEN ((rt0.c2)<(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 END END))) UNION SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS BLOB) WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN (- (vt1.c0)) WHEN ((rt0.c1)>>(rt0.c0)) THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c0)) WHEN ((rt0.c2)<(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 END END) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS BLOB);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((+ (x''))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((+ (x''))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((+ (x''))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))<>((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))!=((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((rt0.c0 IN ()) IN ()) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))<>((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (((rt0.c0 IN ()) IN ()))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))!=((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((((rt0.c0 IN ()) IN ())) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))<>((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))!=((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((rt0.c0 IN ()) IN ()) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))<>((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (((rt0.c0 IN ()) IN ()))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))!=((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((((rt0.c0 IN ()) IN ())) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((NULL))<>((NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (NULL) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((TIME(rt0.c1, rt0.c1, rt0.c1))AND((rt0.c2 IN ()))))AND(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))OR((('') NOT BETWEEN (rt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((TIME(rt0.c1, rt0.c1, rt0.c1))AND((rt0.c2 IN ()))))AND(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))OR((('') NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((TIME(rt0.c1, rt0.c1, rt0.c1))AND((rt0.c2 IN ()))))AND(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))OR((('') NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (CAST(-1.049030065E9 COLLATE BINARY AS INTEGER)) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CAST(-1.049030065E9 COLLATE BINARY AS INTEGER)))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((CAST(-1.049030065E9 COLLATE BINARY AS INTEGER)) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((CAST(vt1.c0 AS REAL)) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL)) NOT NULL)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((CAST(vt1.c0 AS REAL)) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((x'' IN ()) IN ())) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED WHERE ((NOT (((x'' IN ()) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((x'' IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((CAST(rt0.c2 AS REAL) IN (0.48236863646328354))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((CAST(rt0.c2 AS REAL) IN (0.48236863646328354))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((CAST(rt0.c2 AS REAL) IN (0.48236863646328354))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '1222455254' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('1222455254')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('1222455254') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '1222455254' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('1222455254')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('1222455254') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE COLLATE BINARY;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE COLLATE BINARY WHERE (LTRIM(CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END, CAST(rt0.c0 AS TEXT))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE COLLATE BINARY WHERE ((NOT (LTRIM(CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END, CAST(rt0.c0 AS TEXT))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE COLLATE BINARY WHERE (((LTRIM(CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END, CAST(rt0.c0 AS TEXT))) ISNULL));
SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE COLLATE BINARY;
SELECT DISTINCT vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS BLOB);
SELECT DISTINCT vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS BLOB) WHERE (((((rt0.c0)AND((~ (NULL)))))AND(CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS BLOB) WHERE ((NOT (((((rt0.c0)AND((~ (NULL)))))AND(CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS BLOB) WHERE (((((((rt0.c0)AND((~ (NULL)))))AND(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS BLOB);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((x''))>((rt0.c1)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((x''))>((rt0.c1)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((x''))>((rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING MIN(GROUP_CONCAT(COUNT(MAX(vt1.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(MAX(vt1.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(GROUP_CONCAT(COUNT(MAX(vt1.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT NULL))>(x''))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))>(x''))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))>(x''))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (x'c339') UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (x'c339'))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((x'c339') ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (NOT ((+ (rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (NOT ((+ (rt0.c1)))) WHERE ((((NOT (vt1.c0)))LIKE(0.7416433693732848))) GROUP BY rt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (NOT ((+ (rt0.c1)))) WHERE ((NOT ((((NOT (vt1.c0)))LIKE(0.7416433693732848))))) GROUP BY rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (NOT ((+ (rt0.c1)))) WHERE ((((((NOT (vt1.c0)))LIKE(0.7416433693732848))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (NOT ((+ (rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*))AND(((COUNT(vt1.c0)) IS TRUE))))AND(MIN(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((COUNT(*))AND(((COUNT(vt1.c0)) IS TRUE))))AND(MIN(AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((COUNT(*))AND(((COUNT(vt1.c0)) IS TRUE))))AND(MIN(AVG(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) IS FALSE) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) IS FALSE) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING CAST(AVG(vt1.c0) AS REAL) UNION ALL SELECT ALL rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(AVG(vt1.c0) AS REAL))) UNION ALL SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING ((CAST(AVG(vt1.c0) AS REAL)) ISNULL);
SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING CAST(AVG(vt1.c0) AS REAL) UNION ALL SELECT ALL rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(AVG(vt1.c0) AS REAL))) UNION ALL SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING ((CAST(AVG(vt1.c0) AS REAL)) ISNULL);
SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((((rt0.c0))!=((rt0.c2)))) AND ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((((rt0.c0))<>((rt0.c2)))) AND ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((((rt0.c0))!=((rt0.c2)))) AND ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c0 IN ())))<=((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((rt0.c0 IN ())))<=((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((rt0.c0 IN ())))<=((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND ('R#'))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND ('R#'))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND ('R#'))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST((vt1.c0 IN ()) AS NUMERIC) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((vt1.c0 IN ()) AS NUMERIC))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST((vt1.c0 IN ()) AS NUMERIC)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST((vt1.c0 IN ()) AS NUMERIC) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((vt1.c0 IN ()) AS NUMERIC))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST((vt1.c0 IN ()) AS NUMERIC)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('-1288353142') UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('-1288353142'))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('-1288353142') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2)-(rt0.c1)))<(rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)-(rt0.c1)))<(rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)-(rt0.c1)))<(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c2) ISNULL))||(MIN(rt0.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c2) ISNULL))||(MIN(rt0.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((((((rt0.c2) ISNULL))||(MIN(rt0.c0)))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c2) ISNULL))||(MIN(rt0.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c2) ISNULL))||(MIN(rt0.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((((((rt0.c2) ISNULL))||(MIN(rt0.c0)))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL MAX(ROUND((rt0.c0 IN ()), CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0, vt1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE NOCASE) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2) IS FALSE) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))<>(((vt1.c0) IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)/(vt1.c0)))<>(((vt1.c0) IS FALSE)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0)))<>(((vt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (0xffffffffbe2b1128) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (0Xffffffffbe2b1128))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((0Xffffffffbe2b1128) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0 HAVING vt1.c0 UNION ALL SELECT rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0 HAVING vt1.c0 UNION ALL SELECT rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt0.c0 FROM vt1 INNER JOIN rt0 ON UPPER(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ('-688196681') UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('-688196681'))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((('-688196681') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((NULL) IS TRUE))) AND ((((vt1.c0) ISNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (NOT (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((NULL) IS TRUE))) AND ((((vt1.c0) ISNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (NOT (vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((NULL) IS TRUE))) AND ((((vt1.c0) ISNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (NOT (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING GROUP_CONCAT(AVG(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((GROUP_CONCAT(AVG(rt0.c2))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0)&(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0)&(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0)&(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((((NULL)<(vt1.c0)), '', (vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((((NULL)<(vt1.c0)), '', (vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((((NULL)<(vt1.c0)), '', (vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING MIN(TOTAL(COUNT(AVG(x'')))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (MIN(TOTAL(COUNT(AVG(x'')))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((MIN(TOTAL(COUNT(AVG(x''))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS FALSE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) IS FALSE)))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(CAST(0.6941773519757665 AS TEXT) AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CAST(0.6941773519757665 AS TEXT) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(CAST(0.6941773519757665 AS TEXT) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_USED(rt0.c1) THEN rt0.c2 COLLATE BINARY ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN SQLITE_COMPILEOPTION_USED(rt0.c1) THEN rt0.c2 COLLATE BINARY ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN SQLITE_COMPILEOPTION_USED(rt0.c1) THEN rt0.c2 COLLATE BINARY ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((COUNT(*))<(NULL)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*))<(NULL)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((((COUNT(*))<(NULL)) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((COUNT(*))<(NULL)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*))<(NULL)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((((COUNT(*))<(NULL)) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND((- (NULL)))))AND(DATE(vt1.c0, '-39791917', vt1.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, 1817754364, vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND((- (NULL)))))AND(DATE(vt1.c0, '-39791917', vt1.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, 1817754364, vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND((- (NULL)))))AND(DATE(vt1.c0, '-39791917', vt1.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, 1817754364, vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c1)>>(rt0.c0))) AND ((((rt0.c0, rt0.c1, rt0.c1))<>((rt0.c2, '-605063263', rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c1)>>(rt0.c0))) AND ((((rt0.c0, rt0.c1, rt0.c1))<>((rt0.c2, '-605063263', rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c1)>>(rt0.c0))) AND ((((rt0.c0, rt0.c1, rt0.c1))!=((rt0.c2, '-605063263', rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON json_object(((vt1.c0) NOT BETWEEN (rt0.c0) AND ('-2055483324')), (((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((vt1.c0, vt1.c0, rt0.c2))), LOWER(DISTINCT rt0.c1), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (rt0.c2 IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((rt0.c2 IN ()))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c2 IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (rt0.c2 IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((rt0.c2 IN ()))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c2 IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))!=('hN'));
SELECT ALL vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<>('hN')) WHERE ('tQ4R' COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<>('hN')) WHERE ((NOT ('tQ4R' COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<>('hN')) WHERE ((('tQ4R' COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))!=('hN'));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c1) IS FALSE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c1) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (TRIM(NULL, ((vt1.c0)>(rt0.c1)))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (TRIM(NULL, ((vt1.c0)>(rt0.c1)))))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((TRIM(NULL, ((vt1.c0)>(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING ((MIN(vt1.c0))OR(MIN(vt1.c0))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (((MIN(vt1.c0))OR(MIN(vt1.c0))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING ((((MIN(vt1.c0))OR(MIN(vt1.c0)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING ((MIN(vt1.c0))OR(MIN(vt1.c0))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (((MIN(vt1.c0))OR(MIN(vt1.c0))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2 HAVING ((((MIN(vt1.c0))OR(MIN(vt1.c0)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2;
