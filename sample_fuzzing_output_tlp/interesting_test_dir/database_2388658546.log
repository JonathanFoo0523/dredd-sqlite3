-- Time: 2024/06/10 04:30:22
-- Database: database46
-- Database version: 3.40.0
-- seed value: 2388658546
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA temp.mmap_size = 5648805382299712918; -- 0ms;
PRAGMA temp.stats; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE (- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=(0.44791688737170343, x''); -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA mmap_size; -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint = 3475863443235316654; -- 0ms;
PRAGMA mmap_size; -- 0ms;
UPDATE OR ABORT rt0 SET c1=NULL; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(-57097111); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
PRAGMA locking_mode; -- 0ms;
UPDATE OR ABORT rt0 SET c2='V', c1=x'', c0=x''; -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(x''); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0)=(x'cdd8'); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (599812251, 0.8456017713989522, NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0.9428794506157004, NULL, NULL); -- 1ms;
PRAGMA defer_foreign_keys; -- 0ms;
REINDEX NOCASE; -- 0ms;
REINDEX; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
PRAGMA optimize; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.1411231988552052 AS BLOB) THEN (x'' IN ()) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'') WHERE CASE WHEN x'a4ef' THEN (- (rt0.c2)) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=(0.9428794506157004) WHERE TRIM(DISTINCT rt0.c1); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('0.8456017713989522') WHERE LOWER(DISTINCT x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA default_cache_size = 298296309; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2) VALUES ('599812251', '599812251'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'', c0=x'' WHERE CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)<<(rt0.c1)) ELSE rt0.c0 END; -- 1ms;
UPDATE OR FAIL rt0 SET (c0, c2, c1)=(0Xfffffffffc98c469, x'', NULL); -- 4ms;
UPDATE OR IGNORE rt0 SET (c2)=('0.9428794506157004'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0xffffffffa486f916), ('|'), (x''); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 1ms;
ANALYZE main; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOTNULL)) BETWEEN (rt0.c2) AND (((rt0.c1)IS('-1534658282'))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOTNULL)) BETWEEN (rt0.c2) AND (((rt0.c1)IS('-1534658282'))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOTNULL)) BETWEEN (rt0.c2) AND (((rt0.c1)IS('-1534658282'))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c2))>(((rt0.c0)AND('Wz'))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((IFNULL(DISTINCT rt0.c0, rt0.c2))>(((rt0.c0)AND('Wz'))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, rt0.c2))>(((rt0.c0)AND('Wz'))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(UNLIKELY(rt0.c2)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(UNLIKELY(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(UNLIKELY(rt0.c2))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(UNLIKELY(rt0.c2)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(UNLIKELY(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(UNLIKELY(rt0.c2))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((((CASE WHEN x'' THEN rt0.c2 ELSE 0.8304371690757223 END)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((CASE WHEN x'' THEN rt0.c2 ELSE 0.8304371690757223 END)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((((CASE WHEN x'' THEN rt0.c2 ELSE 0.8304371690757223 END)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((UNICODE(rt0.c1)) NOT NULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((UNICODE(rt0.c1)) NOT NULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((UNICODE(rt0.c1)) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE MIN(rt0.c0)  WHEN (- (AVG(AVG(TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))) THEN MAX(rt0.c1) ELSE NULL END UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE MIN(rt0.c0)  WHEN (- (AVG(AVG(TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))) THEN MAX(rt0.c1) ELSE NULL END)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE MIN(rt0.c0)  WHEN (- (AVG(AVG(TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))) THEN MAX(rt0.c1) ELSE NULL END) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c1)))<(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1)))<(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c1)))<(rt0.c0))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)*(((rt0.c2) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)*(((rt0.c2) IS FALSE)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)*(((rt0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1)IS(rt0.c1)) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)IS(rt0.c1)) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)IS(rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(GROUP_CONCAT(COUNT(COUNT(COUNT(*)))) COLLATE BINARY) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(COUNT(COUNT(*)))) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(COUNT(COUNT(COUNT(*)))) COLLATE BINARY)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((- (((x'e57e') NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- (((x'e57e') NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((- (((x'e57e') NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, NULL, rt0.c0))))>(HEX(rt0.c0)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, NULL, rt0.c0))))>(HEX(rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, NULL, rt0.c0))))>(HEX(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(MIN(COUNT(GROUP_CONCAT('')))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(MIN(COUNT(GROUP_CONCAT('')))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(MIN(COUNT(GROUP_CONCAT(''))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- ((~ (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- ((~ (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- ((~ (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((0X180525b2) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((0X180525b2) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((0X180525b2) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (TYPEOF(DISTINCT (((rt0.c1))<=((rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT (((rt0.c1))<=((rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((TYPEOF(DISTINCT (((rt0.c1))<=((rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(UPPER(DISTINCT rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(UPPER(DISTINCT rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(UPPER(DISTINCT rt0.c2))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(UPPER(DISTINCT rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(UPPER(DISTINCT rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(UPPER(DISTINCT rt0.c2))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((1.05196642E8)OR(((rt0.c2)-(rt0.c2)))))OR(NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((1.05196642E8)OR(((rt0.c2)-(rt0.c2)))))OR(NULL))))) UNION ALL SELECT * FROM rt0 WHERE (((((((1.05196642E8)OR(((rt0.c2)-(rt0.c2)))))OR(NULL))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0)IS NOT(((rt0.c2)*(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)IS NOT(((rt0.c2)*(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0)IS NOT(((rt0.c2)*(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(SUM(rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(SUM(rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(SUM(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (json_patch(CAST(']{Php' AS REAL), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (json_patch(CAST(']{Php' AS REAL), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((json_patch(CAST(']{Php' AS REAL), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING TOTAL(COUNT(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL(COUNT(rt0.c1))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((rt0.c0) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c1))<((rt0.c2)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c1))<((rt0.c2)))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c1))<((rt0.c2)))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((+ (CAST(rt0.c1 AS BLOB)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((+ (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c1)<>(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)!=(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c1)<>(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((0.012699014762796224)*(AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((0.012699014762796224)*(AVG(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((0.012699014762796224)*(AVG(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((0.012699014762796224)*(AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((0.012699014762796224)*(AVG(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((0.012699014762796224)*(AVG(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT TOTAL(NULL) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)IS NOT(rt0.c0)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2)IS NOT(rt0.c0)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2)IS NOT(rt0.c0)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS INTEGER)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST((NOT (rt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))) NOT NULL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))) NOT NULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((('785215405')AND(NULL)))OR(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((('785215405')AND(NULL)))OR(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((('785215405')AND(NULL)))OR(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((('785215405')AND(NULL)))OR(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((('785215405')AND(NULL)))OR(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((('785215405')AND(NULL)))OR(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN (CASE WHEN rt0.c2 THEN rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS INTEGER) IN (CASE WHEN rt0.c2 THEN rt0.c1 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c2 AS INTEGER) IN (CASE WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((- (rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((- (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (COALESCE(rt0.c0, rt0.c0)) AND (HEX(DISTINCT rt0.c1)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (COALESCE(rt0.c0, rt0.c0)) AND (HEX(DISTINCT rt0.c1)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (COALESCE(rt0.c0, rt0.c0)) AND (HEX(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL MIN(HEX(DISTINCT ((rt0.c2)%(rt0.c0)))) FROM rt0 ORDER BY CAST(COALESCE(0x149ee2fd, rt0.c1) AS NUMERIC);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN UPPER(rt0.c0) THEN ((((rt0.c0)OR(0.6842912012854602)))AND(rt0.c1)) END) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN UPPER(rt0.c0) THEN ((((rt0.c0)OR(0.6842912012854602)))AND(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN UPPER(rt0.c0) THEN ((((rt0.c0)OR(0.6842912012854602)))AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST(x'' AS BLOB)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(x'' AS BLOB)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (ROUND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c0)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (ROUND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c0)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((ROUND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c0)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((HEX(DISTINCT rt0.c1))) AND (((~ (rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((HEX(DISTINCT rt0.c1))) AND (((~ (rt0.c1)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((HEX(DISTINCT rt0.c1))) AND (((~ (rt0.c1)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(COUNT(AVG(MAX(MIN(rt0.c1)))))) IS TRUE) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((MIN(COUNT(AVG(MAX(MIN(rt0.c1)))))) IS TRUE))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((MIN(COUNT(AVG(MAX(MIN(rt0.c1)))))) IS TRUE)) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c2) IS FALSE), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), (- (rt0.c1))))<((rt0.c2 COLLATE RTRIM, ((rt0.c1) ISNULL), (NOT (rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2) IS FALSE), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), (- (rt0.c1))))<((rt0.c2 COLLATE RTRIM, ((rt0.c1) ISNULL), (NOT (rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((rt0.c2) IS FALSE), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), (- (rt0.c1))))<((rt0.c2 COLLATE RTRIM, ((rt0.c1) ISNULL), (NOT (rt0.c0)))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((- (rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((- (rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((- (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ('-933007609') GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('-933007609'))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((('-933007609') ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) NOT NULL))AND('u}' COLLATE BINARY)))AND(((rt0.c1) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c2) NOT NULL))AND('u}' COLLATE BINARY)))AND(((rt0.c1) NOTNULL)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c2) NOT NULL))AND('u}' COLLATE BINARY)))AND(((rt0.c1) NOTNULL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((('R	bx')OR(rt0.c2)))AND(rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((('R	bx')OR(rt0.c2)))AND(rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((('R	bx')OR(rt0.c2)))AND(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE '2040045302'  WHEN rt0.c0 THEN rt0.c2 WHEN 'B8Jv\r%''' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE '2040045302'  WHEN rt0.c0 THEN rt0.c2 WHEN 'B8Jv\r%''' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE '2040045302'  WHEN rt0.c0 THEN rt0.c2 WHEN 'B8Jv\r%''' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(rt0.c2) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(rt0.c2) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(rt0.c2) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(rt0.c2) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(rt0.c2) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(rt0.c2) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((DATETIME(rt0.c2, rt0.c0, rt0.c1))%(x''))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((DATETIME(rt0.c2, rt0.c0, rt0.c1))%(x''))))) UNION ALL SELECT * FROM rt0 WHERE (((((DATETIME(rt0.c2, rt0.c0, rt0.c1))%(x''))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS TEXT)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS TEXT)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c1)AND(1322847220))) AND ((rt0.c2 IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c1)AND(1322847220))) AND ((rt0.c2 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c1)AND(1322847220))) AND ((rt0.c2 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS TEXT)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (COALESCE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))), (((rt0.c1))==((rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (COALESCE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))), (((rt0.c1))=((rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((COALESCE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))), (((rt0.c1))=((rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(CAST(SUM(rt0.c2) AS INTEGER) AS INTEGER) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(CAST(SUM(rt0.c2) AS INTEGER) AS INTEGER))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(CAST(SUM(rt0.c2) AS INTEGER) AS INTEGER)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(CAST(SUM(rt0.c2) AS INTEGER) AS INTEGER) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(CAST(SUM(rt0.c2) AS INTEGER) AS INTEGER))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(CAST(SUM(rt0.c2) AS INTEGER) AS INTEGER)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (0.237057188373753) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (0.237057188373753))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((0.237057188373753) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((('') BETWEEN (rt0.c0) AND (rt0.c2)) IN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((('') BETWEEN (rt0.c0) AND (rt0.c2)) IN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((('') BETWEEN (rt0.c0) AND (rt0.c2)) IN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (('' IN ())) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (('' IN ())))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((('' IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (+ (SUM(MAX(AVG(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((+ (SUM(MAX(AVG(GROUP_CONCAT(rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((+ (SUM(MAX(AVG(GROUP_CONCAT(rt0.c1))))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((~ (''))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((~ (''))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((~ (''))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((('0.13591487268777402')<<(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((('0.13591487268777402')<<(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((('0.13591487268777402')<<(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (TRIM((rt0.c2 IN (rt0.c2, rt0.c2)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (TRIM((rt0.c2 IN (rt0.c2, rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((TRIM((rt0.c2 IN (rt0.c2, rt0.c2)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(GROUP_CONCAT(TOTAL(TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(GROUP_CONCAT(TOTAL(TOTAL(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(GROUP_CONCAT(TOTAL(TOTAL(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (JULIANDAY(x'', rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (JULIANDAY(x'', rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((JULIANDAY(x'', rt0.c2 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((((((rt0.c0)OR(rt0.c1)))AND(COUNT(*))))AND(rt0.c2)))AND(rt0.c0))) IS TRUE) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((((((((rt0.c0)OR(rt0.c1)))AND(COUNT(*))))AND(rt0.c2)))AND(rt0.c0))) IS TRUE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((((((((rt0.c0)OR(rt0.c1)))AND(COUNT(*))))AND(rt0.c2)))AND(rt0.c0))) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((((((rt0.c0)OR(rt0.c1)))AND(COUNT(*))))AND(rt0.c2)))AND(rt0.c0))) IS TRUE) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((((((((rt0.c0)OR(rt0.c1)))AND(COUNT(*))))AND(rt0.c2)))AND(rt0.c0))) IS TRUE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((((((((rt0.c0)OR(rt0.c1)))AND(COUNT(*))))AND(rt0.c2)))AND(rt0.c0))) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7435848512543436) THEN 295151620 END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7435848512543436) THEN 295151620 END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7435848512543436) THEN 295151620 END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<(((rt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<(((rt0.c2 IN ()))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<(((rt0.c2 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2)))<(((rt0.c1)<>(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c2)))<(((rt0.c1)<>(rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c2)))<(((rt0.c1)<>(rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(SUM(COUNT(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(SUM(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(SUM(COUNT(rt0.c1)))) ISNULL);
SELECT MIN(NULL) FROM rt0;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((-57097111 IN ((rt0.c2 IN ()), json_type(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((-57097111 IN ((rt0.c2 IN ()), json_type(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((-57097111 IN ((rt0.c2 IN ()), json_type(rt0.c0)))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)<<(rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)<<(rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)<<(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (((rt0.c2)/(rt0.c0))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((~ (((rt0.c2)/(rt0.c0))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (((rt0.c2)/(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MAX(MAX(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MAX(MAX(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MAX(MAX(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((x'')OR(((rt0.c0)%(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((x'')OR(((rt0.c0)%(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((x'')OR(((rt0.c0)%(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TYPEOF(rt0.c2))IS NOT(MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((TYPEOF(rt0.c2))IS NOT(MAX(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((TYPEOF(rt0.c2))IS NOT(MAX(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TYPEOF(rt0.c2))IS NOT(MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((TYPEOF(rt0.c2))IS NOT(MAX(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((TYPEOF(rt0.c2))IS NOT(MAX(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT SUM((-4.97807951E8 IN ())) FROM rt0 ORDER BY 2.9515162E8 ASC;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1))) BETWEEN (NULLIF(rt0.c2, rt0.c0)) AND (((rt0.c2)|(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((~ (rt0.c1))) BETWEEN (NULLIF(rt0.c2, rt0.c0)) AND (((rt0.c2)|(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((~ (rt0.c1))) BETWEEN (NULLIF(rt0.c2, rt0.c0)) AND (((rt0.c2)|(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (NULLIF(1389258349, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (NULLIF(1389258349, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((NULLIF(1389258349, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c1))==((rt0.c2)))) BETWEEN ('') AND (rt0.c1))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1))==((rt0.c2)))) BETWEEN ('') AND (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c1))==((rt0.c2)))) BETWEEN ('') AND (rt0.c1))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(AVG(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(AVG(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(AVG(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c1) NOT NULL)) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (HEX(0x27fe761b)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (HEX(0x27fe761b)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((HEX(0x27fe761b)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((- (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((- (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((- (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT((('0.056255602777166125') NOT BETWEEN (rt0.c0) AND (COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT((('0.056255602777166125') NOT BETWEEN (rt0.c0) AND (COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT((('0.056255602777166125') NOT BETWEEN (rt0.c0) AND (COUNT(*))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((x'5832', ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), rt0.c1 COLLATE BINARY))>((RTRIM(rt0.c1), (~ (rt0.c2)), TOTAL_CHANGES())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((x'5832', ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), rt0.c1 COLLATE BINARY))>((RTRIM(rt0.c1), (~ (rt0.c2)), TOTAL_CHANGES())))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((x'5832', ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), rt0.c1 COLLATE BINARY))>((RTRIM(rt0.c1), (~ (rt0.c2)), TOTAL_CHANGES())))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((x'05e5')+(rt0.c2))) BETWEEN (rt0.c0) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('?j雯IS]P'))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((x'05e5')+(rt0.c2))) BETWEEN (rt0.c0) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('?j雯IS]P'))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (((((((x'05e5')+(rt0.c2))) BETWEEN (rt0.c0) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('?j雯IS]P'))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(rt0.c2) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(rt0.c2) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('0.3613053629321067' COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((('0.3613053629321067' COLLATE BINARY) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((('0.3613053629321067' COLLATE BINARY) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1)AND(rt0.c0)))IS((((rt0.c0)) NOT BETWEEN (('997168879')) AND ((rt0.c1)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))IS((((rt0.c0)) NOT BETWEEN (('997168879')) AND ((rt0.c1)))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))IS((((rt0.c0)) NOT BETWEEN (('997168879')) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (ABS(((rt0.c1)>=(rt0.c1)))) ORDER BY (~ (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))));
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (ABS(((rt0.c1)>=(rt0.c1)))))) ORDER BY (~ (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))));
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((ABS(((rt0.c1)>=(rt0.c1)))) ISNULL)) ORDER BY (~ (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)GLOB(rt0.c2)))))AND((rt0.c1 IN ()))))OR(((rt0.c0)*(rt0.c1)))))OR(((rt0.c2) NOT NULL))))OR(0xffffffff9393eb60))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((rt0.c2)AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)GLOB(rt0.c2)))))AND((rt0.c1 IN ()))))OR(((rt0.c0)*(rt0.c1)))))OR(((rt0.c2) NOT NULL))))OR(0xffffffff9393eb60))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((((rt0.c2)AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)GLOB(rt0.c2)))))AND((rt0.c1 IN ()))))OR(((rt0.c0)*(rt0.c1)))))OR(((rt0.c2) NOT NULL))))OR(0xffffffff9393eb60))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2) ISNULL) AS REAL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2) ISNULL) AS REAL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2) ISNULL) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(STRFTIME(rt0.c2, GROUP_CONCAT(rt0.c1), rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(STRFTIME(rt0.c2, GROUP_CONCAT(rt0.c1), rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(STRFTIME(rt0.c2, GROUP_CONCAT(rt0.c1), rt0.c2))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c0)AND(rt0.c2)) IN ())) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)AND(rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c2)) IN ())) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (x'' COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (x'' COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((x'' COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((9.97168879E8)) BETWEEN ((TOTAL_CHANGES())) AND ((UPPER(rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((9.97168879E8)) BETWEEN ((TOTAL_CHANGES())) AND ((UPPER(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((9.97168879E8)) BETWEEN ((TOTAL_CHANGES())) AND ((UPPER(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE (((rt0.c1 COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (QUOTE(((rt0.c2) BETWEEN (rt0.c2) AND ('&n瑅6''vGR')))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (QUOTE(((rt0.c2) BETWEEN (rt0.c2) AND ('&n瑅6''vGR')))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((QUOTE(((rt0.c2) BETWEEN (rt0.c2) AND ('&n瑅6''vGR')))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) IN ())) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) IN ())))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('0.8699298335775774')<<(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('0.8699298335775774')<<(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('0.8699298335775774')<<(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(x'')) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(x'')) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(x'')) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(COUNT(TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(COUNT(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(COUNT(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL SUM(((((((1430532891) NOTNULL))OR(CAST(rt0.c1 AS NUMERIC))))OR(CASE ''  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) FROM rt0 ORDER BY ((rt0.c2)&(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))));
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))  WHEN (NOT (0Xffffffffc602cc9a)) THEN rt0.c1 COLLATE NOCASE END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))  WHEN (NOT (0xffffffffc602cc9a)) THEN rt0.c1 COLLATE NOCASE END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))  WHEN (NOT (0xffffffffc602cc9a)) THEN rt0.c1 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (0X1197a804) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (0X1197a804))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((0X1197a804) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0)/(rt0.c2)) IN ())) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)/(rt0.c2)) IN ())))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)/(rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c2) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c2) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c1)>>(1804274189)))&('6NbEH*oMw'))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)>>(1804274189)))&('6NbEH*oMw'))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c1)>>(1804274189)))&('6NbEH*oMw'))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((GROUP_CONCAT(rt0.c2))) BETWEEN ((SUM(COUNT(rt0.c1)))) AND ((rt0.c2))) IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((GROUP_CONCAT(rt0.c2))) BETWEEN ((SUM(COUNT(rt0.c1)))) AND ((rt0.c2))) IN ()))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((GROUP_CONCAT(rt0.c2))) BETWEEN ((SUM(COUNT(rt0.c1)))) AND ((rt0.c2))) IN ())) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((GROUP_CONCAT(rt0.c2))) BETWEEN ((SUM(COUNT(rt0.c1)))) AND ((rt0.c2))) IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((GROUP_CONCAT(rt0.c2))) BETWEEN ((SUM(COUNT(rt0.c1)))) AND ((rt0.c2))) IN ()))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((GROUP_CONCAT(rt0.c2))) BETWEEN ((SUM(COUNT(rt0.c1)))) AND ((rt0.c2))) IN ())) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((SQLITE_VERSION()) IS FALSE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((SQLITE_VERSION()) IS FALSE)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((SQLITE_VERSION()) IS FALSE)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ('' COLLATE BINARY) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ('' COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((('' COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))) AND (((rt0.c2 IN (rt0.c0, '0.6106267817616928')))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))) AND (((rt0.c2 IN (rt0.c0, '0.6106267817616928')))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))) AND (((rt0.c2 IN (rt0.c0, '0.6106267817616928')))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(((rt0.c1)-(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(((rt0.c1)-(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(((rt0.c1)-(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(((rt0.c1)-(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(((rt0.c1)-(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(((rt0.c1)-(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))&(((rt0.c1) IS TRUE)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))&(((rt0.c1) IS TRUE)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))&(((rt0.c1) IS TRUE)))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1)||(rt0.c0)))))AND(((0xffffffffb3dfcbc3)<=(rt0.c0)))))AND(QUOTE(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1)||(rt0.c0)))))AND(((0Xffffffffb3dfcbc3)<=(rt0.c0)))))AND(QUOTE(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1)||(rt0.c0)))))AND(((0Xffffffffb3dfcbc3)<=(rt0.c0)))))AND(QUOTE(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)>(rt0.c1))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (CASE '|'  WHEN rt0.c0 THEN rt0.c0 END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)>(rt0.c1))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (CASE '|'  WHEN rt0.c0 THEN rt0.c0 END))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)>(rt0.c1))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (CASE '|'  WHEN rt0.c0 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING AVG((((rt0.c1)) NOT BETWEEN ((x'')) AND ((COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG((((rt0.c1)) NOT BETWEEN ((x'')) AND ((COUNT(*))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG((((rt0.c1)) NOT BETWEEN ((x'')) AND ((COUNT(*)))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0, NULL, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((x'', rt0.c0, rt0.c0))) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0, NULL, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((x'', rt0.c0, rt0.c0))) COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0, NULL, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((x'', rt0.c0, rt0.c0))) COLLATE NOCASE) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ ((- (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ ((- (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ ((- (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)<<(CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)<<(CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT MIN(CAST(CASE rt0.c2  WHEN rt0.c0 THEN '1651596032' ELSE rt0.c1 END AS BLOB)) FROM rt0 ORDER BY ((((MAX(rt0.c0, rt0.c1))OR(rt0.c0)))OR(((rt0.c1)+(rt0.c0)))) DESC  NULLS LAST, CASE WHEN ((rt0.c1)*(rt0.c0)) THEN (((rt0.c2))>=((rt0.c1))) END  NULLS FIRST;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((~ ((~ (rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((~ ((~ (rt0.c0))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((~ ((~ (rt0.c0))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((('1458587922')OR((NOT (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((('1458587922')OR((NOT (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((('1458587922')OR((NOT (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)&(LIKE('', '295151620', '-')))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)&(LIKE('', '295151620', '-')))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)&(LIKE('', '295151620', '-')))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT TOTAL(CASE WHEN CASE x'fcc0'  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c1 THEN rt0.c1 WHEN ((0.02931299175639923)IS(rt0.c0)) THEN ((rt0.c1)>=(rt0.c0)) END) FROM rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) ISNULL), ((rt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CASE NULL  WHEN (((rt0.c1, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c0, rt0.c2))) THEN ((rt0.c0)*(rt0.c0)) END) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE NULL  WHEN (((rt0.c1, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c0, rt0.c2))) THEN ((rt0.c0)*(rt0.c0)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE NULL  WHEN (((rt0.c1, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c0, rt0.c2))) THEN ((rt0.c0)*(rt0.c0)) END) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CAST(rt0.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (+ (COUNT(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((+ (COUNT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((+ (COUNT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (+ (COUNT(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((+ (COUNT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((+ (COUNT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c0) ISNULL))||(CASE WHEN rt0.c0 THEN NULL END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))||(CASE WHEN rt0.c0 THEN NULL END))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c0) ISNULL))||(CASE WHEN rt0.c0 THEN NULL END))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (988383363) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (988383363))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((988383363) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c1 COLLATE NOCASE)-(SUM(MAX(GROUP_CONCAT(AVG(MIN(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((rt0.c1 COLLATE NOCASE)-(SUM(MAX(GROUP_CONCAT(AVG(MIN(COUNT(*)))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((rt0.c1 COLLATE NOCASE)-(SUM(MAX(GROUP_CONCAT(AVG(MIN(COUNT(*))))))))) ISNULL);
SELECT rt0.c0 FROM rt0 NOT INDEXED;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS TEXT)) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS TEXT) AS TEXT)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS TEXT) AS TEXT)) ISNULL));
SELECT rt0.c0 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOT NULL))GLOB(((((rt0.c2)AND(rt0.c2)))AND(x'6987'))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL))GLOB(((((rt0.c2)AND(rt0.c2)))AND(x'6987'))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c1) NOT NULL))GLOB(((((rt0.c2)AND(rt0.c2)))AND(x'6987'))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(MAX(COUNT(SUM(NULL)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(MAX(COUNT(SUM(NULL)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(MAX(COUNT(SUM(NULL))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((CAST(rt0.c1 AS REAL))AND(CAST(rt0.c2 AS BLOB))))OR(SUBSTR(rt0.c1, rt0.c2))))OR(((('-1381323074'))>((0xffffffffa639ed4b))))))AND(((rt0.c2) ISNULL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS REAL))AND(CAST(rt0.c2 AS BLOB))))OR(SUBSTR(rt0.c1, rt0.c2))))OR(((('-1381323074'))>((0xffffffffa639ed4b))))))AND(((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((((CAST(rt0.c1 AS REAL))AND(CAST(rt0.c2 AS BLOB))))OR(SUBSTR(rt0.c1, rt0.c2))))OR(((('-1381323074'))>((0xffffffffa639ed4b))))))AND(((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((0.4037771561839757)<>(((rt0.c1) ISNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((0.4037771561839757)<>(((rt0.c1) ISNULL)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((0.4037771561839757)<>(((rt0.c1) ISNULL)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((rt0.c0) BETWEEN (SUM(AVG(rt0.c2))) AND (SUM(GROUP_CONCAT(TOTAL(rt0.c2))))))AND(TOTAL(COUNT(rt0.c1)))))AND(COUNT(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((((rt0.c0) BETWEEN (SUM(AVG(rt0.c2))) AND (SUM(GROUP_CONCAT(TOTAL(rt0.c2))))))AND(TOTAL(COUNT(rt0.c1)))))AND(COUNT(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((((rt0.c0) BETWEEN (SUM(AVG(rt0.c2))) AND (SUM(GROUP_CONCAT(TOTAL(rt0.c2))))))AND(TOTAL(COUNT(rt0.c1)))))AND(COUNT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)<=(rt0.c0)))<(x''))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)<=(rt0.c0)))<(x''))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)<=(rt0.c0)))<(x''))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0))<((rt0.c1))))|(((((0.40801011546653154)OR(rt0.c0)))AND(''))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0))<((rt0.c1))))|(((((0.40801011546653154)OR(rt0.c0)))AND(''))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((((rt0.c0))<((rt0.c1))))|(((((0.40801011546653154)OR(rt0.c0)))AND(''))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(-1466310074))/(COUNT(GROUP_CONCAT(SUM(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((AVG(-1466310074))/(COUNT(GROUP_CONCAT(SUM(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((AVG(-1466310074))/(COUNT(GROUP_CONCAT(SUM(rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((((((rt0.c2)AND(0X20506d2a)))OR('')))OR(rt0.c0)))OR(rt0.c1)), CAST(rt0.c2 AS INTEGER)))<((rt0.c2, rt0.c2 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((((((rt0.c2)AND(0x20506d2a)))OR('')))OR(rt0.c0)))OR(rt0.c1)), CAST(rt0.c2 AS INTEGER)))<((rt0.c2, rt0.c2 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((((((rt0.c2)AND(0x20506d2a)))OR('')))OR(rt0.c0)))OR(rt0.c1)), CAST(rt0.c2 AS INTEGER)))<((rt0.c2, rt0.c2 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(((rt0.c0)||(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((rt0.c0)||(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(((rt0.c0)||(COUNT(rt0.c1))))) ISNULL);
SELECT ALL TOTAL((((rt0.c1, x'', rt0.c1)) BETWEEN ((0.9075836484681765, ((rt0.c2)>=(rt0.c1)), ((rt0.c2)*(rt0.c1)))) AND ((((rt0.c0)|(rt0.c0)), (NOT (rt0.c1)), CAST(rt0.c2 AS REAL))))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS REAL) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS REAL) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))/(((rt0.c2) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE))/(((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) IS FALSE))/(((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((LIKELY(rt0.c2))AND(CAST(rt0.c1 AS REAL))))OR(NULL))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((LIKELY(rt0.c2))AND(CAST(rt0.c1 AS REAL))))OR(NULL))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((LIKELY(rt0.c2))AND(CAST(rt0.c1 AS REAL))))OR(NULL))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM((((TOTAL(rt0.c1))) BETWEEN ((rt0.c2)) AND ((GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM((((TOTAL(rt0.c1))) BETWEEN ((rt0.c2)) AND ((GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM((((TOTAL(rt0.c1))) BETWEEN ((rt0.c2)) AND ((GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c1 AS INTEGER) ELSE '268346960' END) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c1 AS INTEGER) ELSE '268346960' END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c1 AS INTEGER) ELSE '268346960' END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c2)IS(rt0.c0)) AS INTEGER)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)IS(rt0.c0)) AS INTEGER)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c2)IS(rt0.c0)) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((rt0.c2)) BETWEEN ((AVG(rt0.c0))) AND (((((rt0.c2)) BETWEEN ((GROUP_CONCAT(SUM(rt0.c2)))) AND ((rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c2)) BETWEEN ((AVG(rt0.c0))) AND (((((rt0.c2)) BETWEEN ((GROUP_CONCAT(SUM(rt0.c2)))) AND ((rt0.c2)))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((rt0.c2)) BETWEEN ((AVG(rt0.c0))) AND (((((rt0.c2)) BETWEEN ((GROUP_CONCAT(SUM(rt0.c2)))) AND ((rt0.c2))))))) ISNULL);
SELECT SUM(((NULL) IS TRUE)) FROM rt0;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((~ (rt0.c2))) BETWEEN (rt0.c2) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) BETWEEN (rt0.c2) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((~ (rt0.c2))) BETWEEN (rt0.c2) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c1)) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((COUNT(*), COUNT(*), rt0.c1)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c2)), MIN(SUM(rt0.c2)), (rt0.c1 IN (rt0.c0)))) AND ((((SUM(MIN(rt0.c1))) BETWEEN (rt0.c1) AND (0.32488794242494945)), COUNT(rt0.c1), ((((rt0.c2)OR(SUM(COUNT(*)))))AND(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((COUNT(*), COUNT(*), rt0.c1)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c2)), MIN(SUM(rt0.c2)), (rt0.c1 IN (rt0.c0)))) AND ((((SUM(MIN(rt0.c1))) BETWEEN (rt0.c1) AND (0.32488794242494945)), COUNT(rt0.c1), ((((rt0.c2)OR(SUM(COUNT(*)))))AND(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((COUNT(*), COUNT(*), rt0.c1)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c2)), MIN(SUM(rt0.c2)), (rt0.c1 IN (rt0.c0)))) AND ((((SUM(MIN(rt0.c1))) BETWEEN (rt0.c1) AND (0.32488794242494945)), COUNT(rt0.c1), ((((rt0.c2)OR(SUM(COUNT(*)))))AND(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2))<=((CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2))<=((CAST(rt0.c0 AS NUMERIC))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2))<=((CAST(rt0.c0 AS NUMERIC))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((0.9896403257812858)) AND ((rt0.c0))))OR((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, 186953386, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0))))))AND(CAST(x'' AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((rt0.c1)) NOT BETWEEN ((0.9896403257812858)) AND ((rt0.c0))))OR((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, 186953386, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0))))))AND(CAST(x'' AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c1)) NOT BETWEEN ((0.9896403257812858)) AND ((rt0.c0))))OR((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, 186953386, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0))))))AND(CAST(x'' AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((0.268083814066309)+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((0.268083814066309)+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((0.268083814066309)+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c1)LIKE(COUNT(SUM(MAX(rt0.c0))))) COLLATE BINARY COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((rt0.c1)LIKE(COUNT(SUM(MAX(rt0.c0))))) COLLATE BINARY COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((rt0.c1)LIKE(COUNT(SUM(MAX(rt0.c0))))) COLLATE BINARY COLLATE RTRIM) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2) ISNULL)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c2) ISNULL)) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c1 COLLATE NOCASE COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (json_object(rt0.c0, (((rt0.c2))<((rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (json_object(rt0.c0, (((rt0.c2))<((rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((json_object(rt0.c0, (((rt0.c2))<((rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING AVG(((((((((rt0.c0)AND(MAX(COUNT(*)))))OR(MAX(rt0.c2))))OR(COUNT(MAX(COUNT(TOTAL(rt0.c0)))))))OR(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG(((((((((rt0.c0)AND(MAX(COUNT(*)))))OR(MAX(rt0.c2))))OR(COUNT(MAX(COUNT(TOTAL(rt0.c0)))))))OR(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG(((((((((rt0.c0)AND(MAX(COUNT(*)))))OR(MAX(rt0.c2))))OR(COUNT(MAX(COUNT(TOTAL(rt0.c0)))))))OR(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (0.7222875884659112 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (0.7222875884659112 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (0.7222875884659112 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)LIKE(((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)LIKE(((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)LIKE(((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((- ((+ (rt0.c1))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((- ((+ (rt0.c1))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((- ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(MAX(rt0.c1)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(MAX(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(MAX(rt0.c1))) ISNULL);
SELECT TOTAL((NOT (((rt0.c2)%(rt0.c1))))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c0)))GLOB(LIKELIHOOD(rt0.c0, 0.21249412730485107)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((- (rt0.c0)))GLOB(LIKELIHOOD(rt0.c0, 0.21249412730485107)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c0)))GLOB(LIKELIHOOD(rt0.c0, 0.21249412730485107)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c1) IS FALSE))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c1) IS FALSE))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c1) IS FALSE))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR((+ (rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0 COLLATE RTRIM)AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR((+ (rt0.c1))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c0 COLLATE RTRIM)AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR((+ (rt0.c1))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN (- (rt0.c1)) WHEN SQLITE_VERSION() THEN rt0.c2 COLLATE NOCASE WHEN NULLIF(DISTINCT rt0.c0, x'689b') THEN ((rt0.c0)-(rt0.c2)) WHEN ('2040045302' IN ()) THEN ((x'') BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c1 THEN (~ (rt0.c1)) END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS REAL) THEN (- (rt0.c1)) WHEN SQLITE_VERSION() THEN rt0.c2 COLLATE NOCASE WHEN NULLIF(DISTINCT rt0.c0, x'689b') THEN ((rt0.c0)-(rt0.c2)) WHEN ('2040045302' IN ()) THEN ((x'') BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c1 THEN (~ (rt0.c1)) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c1 AS REAL) THEN (- (rt0.c1)) WHEN SQLITE_VERSION() THEN rt0.c2 COLLATE NOCASE WHEN NULLIF(DISTINCT rt0.c0, x'689b') THEN ((rt0.c0)-(rt0.c2)) WHEN ('2040045302' IN ()) THEN ((x'') BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c1 THEN (~ (rt0.c1)) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (~ (1489781058)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((~ (1489781058)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((~ (1489781058))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (~ (1489781058)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((~ (1489781058)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((~ (1489781058))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.8106862644477908) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0.8106862644477908))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0.8106862644477908) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((x'3d39' IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((x'3d39' IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((x'3d39' IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, CAST(rt0.c0 AS INTEGER), rt0.c2))<((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) IS FALSE), ((rt0.c0)IS NOT(NULL)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, CAST(rt0.c0 AS INTEGER), rt0.c2))<((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) IS FALSE), ((rt0.c0)IS NOT(NULL)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, CAST(rt0.c0 AS INTEGER), rt0.c2))<((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) IS FALSE), ((rt0.c0)IS NOT(NULL)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN 7.85215405E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)||(rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN 7.85215405E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)||(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE rt0.c0  WHEN 7.85215405E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)||(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) THEN (rt0.c2 IN ()) END) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) THEN (rt0.c2 IN ()) END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) THEN (rt0.c2 IN ()) END) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(TOTAL(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(TOTAL(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(rt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(rt0.c2 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((x'')&(rt0.c1))) IS TRUE)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((x'')&(rt0.c1))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((x'')&(rt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((('105196642') IS FALSE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((('105196642') IS FALSE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((('105196642') IS FALSE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (CAST(COUNT(*) AS INTEGER) IN (((AVG(TOTAL(rt0.c0))) ISNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((CAST(COUNT(*) AS INTEGER) IN (((AVG(TOTAL(rt0.c0))) ISNULL))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((CAST(COUNT(*) AS INTEGER) IN (((AVG(TOTAL(rt0.c0))) ISNULL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST((((rt0.c2))<((rt0.c1))) AS REAL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST((((rt0.c2))<((rt0.c1))) AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST((((rt0.c2))<((rt0.c1))) AS REAL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((~ ((+ (rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((~ ((+ (rt0.c0))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((~ ((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)IS((rt0.c0 IN ())))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)IS((rt0.c0 IN ())))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)IS((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX((rt0.c0 IN (rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX((rt0.c0 IN (rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX((rt0.c0 IN (rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX((rt0.c0 IN (rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX((rt0.c0 IN (rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX((rt0.c0 IN (rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((LIKELY(rt0.c0)))<(((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((LIKELY(rt0.c0)))<(((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((LIKELY(rt0.c0)))<(((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('붞wZ.''ꭣO')))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOTNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('붞wZ.''ꭣO')))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOTNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('붞wZ.''ꭣO')))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((IFNULL(rt0.c2, rt0.c2))<=(CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((IFNULL(rt0.c2, rt0.c2))<=(CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((IFNULL(rt0.c2, rt0.c2))<=(CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((rt0.c0)/(COUNT(rt0.c1)))) NOT BETWEEN (CASE WHEN MAX(SUM(rt0.c1)) THEN COUNT(rt0.c1) END) AND (SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((rt0.c0)/(COUNT(rt0.c1)))) NOT BETWEEN (CASE WHEN MAX(SUM(rt0.c1)) THEN COUNT(rt0.c1) END) AND (SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((rt0.c0)/(COUNT(rt0.c1)))) NOT BETWEEN (CASE WHEN MAX(SUM(rt0.c1)) THEN COUNT(rt0.c1) END) AND (SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END END) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOTNULL) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END END))) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED WHERE (((CASE WHEN ((rt0.c1) NOTNULL) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END END) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2) ISNULL) IN (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2) ISNULL) IN (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2) ISNULL) IN (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) ISNULL) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) ISNULL) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT BETWEEN ((MIN(MAX(rt0.c0)) IN (rt0.c2, rt0.c2))) AND (MIN(COUNT(SUM(SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN ((MIN(MAX(rt0.c0)) IN (rt0.c2, rt0.c2))) AND (MIN(COUNT(SUM(SUM(rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN ((MIN(MAX(rt0.c0)) IN (rt0.c2, rt0.c2))) AND (MIN(COUNT(SUM(SUM(rt0.c0))))))) ISNULL);
SELECT ALL MIN(((((rt0.c0)*(0.755886546229613)))!=(TYPEOF(DISTINCT 0.1382888262528229)))) FROM rt0 NOT INDEXED ORDER BY CASE WHEN CAST(rt0.c0 AS TEXT) THEN '%j' ELSE CAST(rt0.c0 AS NUMERIC) END ASC;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CASE ((rt0.c0)!=(rt0.c2))  WHEN '-865335833' THEN (- (rt0.c2)) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)<>(rt0.c2))  WHEN '-865335833' THEN (- (rt0.c2)) END))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c0)!=(rt0.c2))  WHEN '-865335833' THEN (- (rt0.c2)) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0.25133841501077103)IS NOT(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0.25133841501077103)IS NOT(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0.25133841501077103)IS NOT(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE BINARY) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING LIKE(COUNT(SUM(rt0.c1)), ((((TOTAL(rt0.c0))AND(GROUP_CONCAT(COUNT(*)))))AND(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (LIKE(COUNT(SUM(rt0.c1)), ((((TOTAL(rt0.c0))AND(GROUP_CONCAT(COUNT(*)))))AND(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((LIKE(COUNT(SUM(rt0.c1)), ((((TOTAL(rt0.c0))AND(GROUP_CONCAT(COUNT(*)))))AND(rt0.c2)))) ISNULL);
SELECT SUM(rt0.c2) FROM rt0 ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)>>(0.7290857512992436)))!=((rt0.c2 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1)>>(0.7290857512992436)))!=((rt0.c2 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c1)>>(0.7290857512992436)))!=((rt0.c2 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c1)))=(((rt0.c2) IS TRUE)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1)))=(((rt0.c2) IS TRUE)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c1)))==(((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG(MAX(rt0.c2)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(MAX(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(MAX(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN (('UtAg+!d')) AND ((rt0.c2))) THEN CASE ''  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c2)) NOT BETWEEN (('UtAg+!d')) AND ((rt0.c2))) THEN CASE ''  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN (((rt0.c2)) NOT BETWEEN (('UtAg+!d')) AND ((rt0.c2))) THEN CASE ''  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(((((((((MIN(rt0.c0))OR(GROUP_CONCAT(rt0.c0))))OR(rt0.c2)))AND(rt0.c1)))AND('H,'))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(((((((((MIN(rt0.c0))OR(GROUP_CONCAT(rt0.c0))))OR(rt0.c2)))AND(rt0.c1)))AND('H,'))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(((((((((MIN(rt0.c0))OR(GROUP_CONCAT(rt0.c0))))OR(rt0.c2)))AND(rt0.c1)))AND('H,')))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (UPPER(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (UPPER(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((NOT (UPPER(rt0.c2)))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.7261489543858436) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.7261489543858436))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.7261489543858436) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CASE (((MAX(rt0.c0), 0.5251292385571436, COUNT(*)))<((rt0.c1, rt0.c2, MAX(rt0.c1))))  WHEN rt0.c1 THEN GROUP_CONCAT(TOTAL(rt0.c2)) ELSE json_patch(COUNT(*), rt0.c1) END UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE (((MAX(rt0.c0), 0.5251292385571436, COUNT(*)))<((rt0.c1, rt0.c2, MAX(rt0.c1))))  WHEN rt0.c1 THEN GROUP_CONCAT(TOTAL(rt0.c2)) ELSE json_patch(COUNT(*), rt0.c1) END)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CASE (((MAX(rt0.c0), 0.5251292385571436, COUNT(*)))<((rt0.c1, rt0.c2, MAX(rt0.c1))))  WHEN rt0.c1 THEN GROUP_CONCAT(TOTAL(rt0.c2)) ELSE json_patch(COUNT(*), rt0.c1) END) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (GLOB((('-214026778') NOTNULL), ((rt0.c2) IS FALSE))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (GLOB((('-214026778') NOTNULL), ((rt0.c2) IS FALSE))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((GLOB((('-214026778') NOTNULL), ((rt0.c2) IS FALSE))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 NOT INDEXED WHERE (CAST(NULL AS INTEGER)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(NULL AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c0))<((rt0.c0)))) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0))<((rt0.c0)))) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c1, rt0.c1)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c0))<((rt0.c0)))) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c1, rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((((((((0.02931299175639923)AND(x'')))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((((((((0.02931299175639923)AND(x'')))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((((((((0.02931299175639923)AND(x'')))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND ((NOT (rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND ((NOT (rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND ((NOT (rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))IS NOT((rt0.c2 IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))IS NOT((rt0.c2 IN ())))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))IS NOT((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ABS(DISTINCT CASE COUNT(rt0.c0)  WHEN TOTAL(MIN(SUM(rt0.c1))) THEN MAX(rt0.c0) WHEN COUNT(*) THEN 0.32146544516881337 WHEN GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))) THEN rt0.c1 ELSE GROUP_CONCAT(AVG(SUM(rt0.c1))) END) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (ABS(DISTINCT CASE COUNT(rt0.c0)  WHEN TOTAL(MIN(SUM(rt0.c1))) THEN MAX(rt0.c0) WHEN COUNT(*) THEN 0.32146544516881337 WHEN GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))) THEN rt0.c1 ELSE GROUP_CONCAT(AVG(SUM(rt0.c1))) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((ABS(DISTINCT CASE COUNT(rt0.c0)  WHEN TOTAL(MIN(SUM(rt0.c1))) THEN MAX(rt0.c0) WHEN COUNT(*) THEN 0.32146544516881337 WHEN GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))) THEN rt0.c1 ELSE GROUP_CONCAT(AVG(SUM(rt0.c1))) END)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2))) ELSE 'R	bx' END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2))) ELSE 'R	bx' END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2))) ELSE 'R	bx' END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS REAL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(MIN(MAX(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(MIN(MAX(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(MIN(MAX(rt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)>=(rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1)>(rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)>(rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)>(rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE TOTAL(GROUP_CONCAT(SUM(rt0.c2)))  WHEN MAX(rt0.c0) THEN (((rt0.c0, MIN(rt0.c1), rt0.c0))==((rt0.c2, rt0.c2, '1437352886'))) WHEN (((MIN(MAX(rt0.c1)), rt0.c2, MIN(rt0.c2))) NOT BETWEEN ((SUM(MAX(MIN(SUM(rt0.c2)))), COUNT(rt0.c1), SUM(rt0.c0))) AND ((TOTAL(COUNT(MAX(MIN(rt0.c0)))), rt0.c0, rt0.c2))) THEN TOTAL(rt0.c2) WHEN LIKELIHOOD(rt0.c1, 0.9642597274556878) THEN COUNT(rt0.c2) END UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE TOTAL(GROUP_CONCAT(SUM(rt0.c2)))  WHEN MAX(rt0.c0) THEN (((rt0.c0, MIN(rt0.c1), rt0.c0))==((rt0.c2, rt0.c2, '1437352886'))) WHEN (((MIN(MAX(rt0.c1)), rt0.c2, MIN(rt0.c2))) NOT BETWEEN ((SUM(MAX(MIN(SUM(rt0.c2)))), COUNT(rt0.c1), SUM(rt0.c0))) AND ((TOTAL(COUNT(MAX(MIN(rt0.c0)))), rt0.c0, rt0.c2))) THEN TOTAL(rt0.c2) WHEN LIKELIHOOD(rt0.c1, 0.9642597274556878) THEN COUNT(rt0.c2) END)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE TOTAL(GROUP_CONCAT(SUM(rt0.c2)))  WHEN MAX(rt0.c0) THEN (((rt0.c0, MIN(rt0.c1), rt0.c0))=((rt0.c2, rt0.c2, '1437352886'))) WHEN (((MIN(MAX(rt0.c1)), rt0.c2, MIN(rt0.c2))) NOT BETWEEN ((SUM(MAX(MIN(SUM(rt0.c2)))), COUNT(rt0.c1), SUM(rt0.c0))) AND ((TOTAL(COUNT(MAX(MIN(rt0.c0)))), rt0.c0, rt0.c2))) THEN TOTAL(rt0.c2) WHEN LIKELIHOOD(rt0.c1, 0.9642597274556878) THEN COUNT(rt0.c2) END) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2))<=((rt0.c1))) IN ())) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2))<=((rt0.c1))) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2))<=((rt0.c1))) IN ())) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))+(CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c2)))+(CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c2)))+(CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1)))|(NULL))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c1)))|(NULL))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))|(NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(COUNT(AVG(COUNT(*)))) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(COUNT(AVG(COUNT(*)))) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(COUNT(AVG(COUNT(*)))) COLLATE RTRIM) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (json_object(rt0.c0, (('''3yl') BETWEEN (rt0.c1) AND (rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (json_object(rt0.c0, (('''3yl') BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((json_object(rt0.c0, (('''3yl') BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 COLLATE BINARY))>=((('k9*t' IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1 COLLATE BINARY))>=((('k9*t' IN ()))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 COLLATE BINARY))>=((('k9*t' IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c0 COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING UPPER(DISTINCT (((AVG(COUNT(rt0.c1)))) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (UPPER(DISTINCT (((AVG(COUNT(rt0.c1)))) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((UPPER(DISTINCT (((AVG(COUNT(rt0.c1)))) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST((('-91182237')*(rt0.c0)) AS TEXT)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((('-91182237')*(rt0.c0)) AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST((('-91182237')*(rt0.c0)) AS TEXT)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c0) IS FALSE) END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c0) IS FALSE) END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c0) IS FALSE) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((x'ada0')%(rt0.c1)))<=((~ (rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((x'ada0')%(rt0.c1)))<=((~ (rt0.c2))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((x'ada0')%(rt0.c1)))<=((~ (rt0.c2))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((CAST(rt0.c0 AS REAL))AND(('' IN ()))))AND(rt0.c1)))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))OR(0.6355397944076343))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c0 AS REAL))AND(('' IN ()))))AND(rt0.c1)))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))OR(0.6355397944076343))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((CAST(rt0.c0 AS REAL))AND(('' IN ()))))AND(rt0.c1)))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))OR(0.6355397944076343))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)>=(NULL)))) AND ((((rt0.c1) IS FALSE))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c1)>=(NULL)))) AND ((((rt0.c1) IS FALSE))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c1)>=(NULL)))) AND ((((rt0.c1) IS FALSE))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM(MAX(MAX(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(MAX(MAX(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(MAX(MAX(COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)AND(((((rt0.c2)AND(rt0.c0)))OR(x'')))))AND(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2 COLLATE NOCASE)AND(((((rt0.c2)AND(rt0.c0)))OR(x'')))))AND(rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2 COLLATE NOCASE)AND(((((rt0.c2)AND(rt0.c0)))OR(x'')))))AND(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c2) AND (((rt0.c2)&(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c2) AND (((rt0.c2)&(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c2) AND (((rt0.c2)&(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)OR(NULL)))OR(rt0.c0)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)OR(NULL)))OR(rt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)OR(NULL)))OR(rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c0) NOT NULL) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((rt0.c0) NOT NULL) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((rt0.c0) NOT NULL) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c0) NOT NULL) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((rt0.c0) NOT NULL) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((rt0.c0) NOT NULL) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1)>>(rt0.c2)))>>((rt0.c2 IN (rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)>>(rt0.c2)))>>((rt0.c2 IN (rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)>>(rt0.c2)))>>((rt0.c2 IN (rt0.c1))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('1428147323' COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('1428147323' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('1428147323' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((HEX(rt0.c2))==(json(rt0.c2)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((HEX(rt0.c2))==(json(rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((HEX(rt0.c2))==(json(rt0.c2)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c2)) BETWEEN (TOTAL(COUNT(GROUP_CONCAT(rt0.c0)))) AND (((NULL)*(0.10366208310589198)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((GROUP_CONCAT(rt0.c2)) BETWEEN (TOTAL(COUNT(GROUP_CONCAT(rt0.c0)))) AND (((NULL)*(0.10366208310589198)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((GROUP_CONCAT(rt0.c2)) BETWEEN (TOTAL(COUNT(GROUP_CONCAT(rt0.c0)))) AND (((NULL)*(0.10366208310589198))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0))>((rt0.c1))))*(IFNULL(DISTINCT rt0.c0, rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0))>((rt0.c1))))*(IFNULL(DISTINCT rt0.c0, rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0))>((rt0.c1))))*(IFNULL(DISTINCT rt0.c0, rt0.c2)))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c0)) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) AND (LOWER(DISTINCT rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((IFNULL(DISTINCT rt0.c0, rt0.c0)) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) AND (LOWER(DISTINCT rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, rt0.c0)) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) AND (LOWER(DISTINCT rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2)<<(rt0.c0)) AS NUMERIC)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)<<(rt0.c0)) AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2)<<(rt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG(TOTAL(MIN(COUNT(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG(TOTAL(MIN(COUNT(COUNT(*))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(TOTAL(MIN(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c1 AS REAL) THEN TRIM(DISTINCT rt0.c0) ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) END) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c1 AS REAL) THEN TRIM(DISTINCT rt0.c0) ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) END))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c1 AS REAL) THEN TRIM(DISTINCT rt0.c0) ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) END) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (IFNULL((rt0.c2 IN (rt0.c0, rt0.c2)), CAST(rt0.c2 AS INTEGER))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (IFNULL((rt0.c2 IN (rt0.c0, rt0.c2)), CAST(rt0.c2 AS INTEGER))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((IFNULL((rt0.c2 IN (rt0.c0, rt0.c2)), CAST(rt0.c2 AS INTEGER))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0)OR(0.6090893137603177)))OR(rt0.c0)) IN (((NULL)>>(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0)OR(0.6090893137603177)))OR(rt0.c0)) IN (((NULL)>>(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((((((rt0.c0)OR(0.6090893137603177)))OR(rt0.c0)) IN (((NULL)>>(rt0.c1))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((+ (rt0.c0))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((+ (rt0.c0))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(COUNT(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(COUNT(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c0)<=('(V')))AND(TIME(rt0.c1, rt0.c1, rt0.c2))))AND(((rt0.c0)OR(rt0.c2)))))OR(((rt0.c1) IS FALSE))))OR((+ (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)<=('(V')))AND(TIME(rt0.c1, rt0.c1, rt0.c2))))AND(((rt0.c0)OR(rt0.c2)))))OR(((rt0.c1) IS FALSE))))OR((+ (rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c0)<=('(V')))AND(TIME(rt0.c1, rt0.c1, rt0.c2))))AND(((rt0.c0)OR(rt0.c2)))))OR(((rt0.c1) IS FALSE))))OR((+ (rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (x'f408') GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x'f408'))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((x'f408') ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (~ ((((rt0.c2))=((AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((~ ((((rt0.c2))==((AVG(rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1 HAVING (((~ ((((rt0.c2))=((AVG(rt0.c2))))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (~ ((((rt0.c2))=((AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((~ ((((rt0.c2))==((AVG(rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1 HAVING (((~ ((((rt0.c2))=((AVG(rt0.c2))))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(CASE rt0.c0  WHEN rt0.c0 THEN '0.32488794242494945' ELSE rt0.c0 END) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(CASE rt0.c0  WHEN rt0.c0 THEN '0.32488794242494945' ELSE rt0.c0 END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(CASE rt0.c0  WHEN rt0.c0 THEN '0.32488794242494945' ELSE rt0.c0 END)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(CASE rt0.c0  WHEN rt0.c0 THEN '0.32488794242494945' ELSE rt0.c0 END) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(CASE rt0.c0  WHEN rt0.c0 THEN '0.32488794242494945' ELSE rt0.c0 END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(CASE rt0.c0  WHEN rt0.c0 THEN '0.32488794242494945' ELSE rt0.c0 END)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c2)<=(rt0.c1))  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c2)<=(rt0.c1))  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c2)<=(rt0.c1))  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c0)AND('-1795866568'))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c0)AND('-1795866568'))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c0)AND('-1795866568'))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING LIKELY(TOTAL(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (LIKELY(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((LIKELY(TOTAL(rt0.c2))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING LIKELY(TOTAL(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (LIKELY(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((LIKELY(TOTAL(rt0.c2))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.23773508067806948) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0.23773508067806948))) UNION ALL SELECT * FROM rt0 WHERE (((0.23773508067806948) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST(((rt0.c2)IS NOT(rt0.c0)) AS INTEGER)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)IS NOT(rt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c2)IS NOT(rt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE '-352532274'  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE '-352532274'  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE '-352532274'  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL TOTAL(((- (rt0.c1)) IN ())) FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) NOT NULL)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (') i?垇쬭6') UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (') i?垇쬭6'))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((') i?垇쬭6') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((~ (rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((~ (rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(MIN(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1))=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1))==((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1))=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((NULL)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((NULL)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((NULL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((NULL)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((NULL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)%(rt0.c1))) AND ((rt0.c1 IN (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((NULL) NOT BETWEEN (((rt0.c2)%(rt0.c1))) AND ((rt0.c1 IN (rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((NULL) NOT BETWEEN (((rt0.c2)%(rt0.c1))) AND ((rt0.c1 IN (rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN ('-1795866568') AND (rt0.c2))  WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, 2.60457864E8)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (rt0.c2 IN ()) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c1) BETWEEN ('-1795866568') AND (rt0.c2))  WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, 2.60457864E8)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (rt0.c2 IN ()) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c1) BETWEEN ('-1795866568') AND (rt0.c2))  WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, 2.60457864E8)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (rt0.c2 IN ()) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c0))))%(((rt0.c1) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c0))))%(((rt0.c1) IS FALSE)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c0))))%(((rt0.c1) IS FALSE)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MAX(AVG(rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MAX(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MAX(AVG(rt0.c2))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ())))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY IN ())) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)>=((rt0.c2 IN (rt0.c0))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM)>=((rt0.c2 IN (rt0.c0))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)>=((rt0.c2 IN (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING '' UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (('') ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING '' UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (('') ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) IS TRUE)) BETWEEN ((('987371038')<=(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) IS TRUE)) BETWEEN ((('987371038')<=(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) IS TRUE)) BETWEEN ((('987371038')<=(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c2 COLLATE NOCASE END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c2 COLLATE NOCASE END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c2 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(SUM(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(SUM(rt0.c2))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c0)))%(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)IS NOT(rt0.c0)))%(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)IS NOT(rt0.c0)))%(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((NOT ((NOT (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((NOT ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (2.9515162E8) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (2.9515162E8))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((2.9515162E8) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) ISNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) ISNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c0 COLLATE BINARY) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (0.3999509743366003) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (0.3999509743366003))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((0.3999509743366003) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(CAST(rt0.c2 AS REAL) AS INTEGER) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(CAST(rt0.c2 AS REAL) AS INTEGER))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(CAST(rt0.c2 AS REAL) AS INTEGER) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(CAST(rt0.c2 AS REAL) AS INTEGER))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c2)IS NOT(rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((rt0.c0)OR(rt0.c0)) WHEN CASE ''  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN rt0.c2 COLLATE BINARY END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c2)IS NOT(rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((rt0.c0)OR(rt0.c0)) WHEN CASE ''  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN rt0.c2 COLLATE BINARY END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c2)IS NOT(rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((rt0.c0)OR(rt0.c0)) WHEN CASE ''  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN rt0.c2 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c2))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE COUNT(rt0.c0) END)))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN SUM(GROUP_CONCAT(rt0.c1)) WHEN SUM(rt0.c1) THEN MIN(COUNT(rt0.c0)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((GROUP_CONCAT(rt0.c2))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE COUNT(rt0.c0) END)))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN SUM(GROUP_CONCAT(rt0.c1)) WHEN SUM(rt0.c1) THEN MIN(COUNT(rt0.c0)) END)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((GROUP_CONCAT(rt0.c2))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE COUNT(rt0.c0) END)))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN SUM(GROUP_CONCAT(rt0.c1)) WHEN SUM(rt0.c1) THEN MIN(COUNT(rt0.c0)) END))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN (ROUND(rt0.c1, rt0.c0)) AND (CASE rt0.c0  WHEN '' THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((+ (rt0.c1))) BETWEEN (ROUND(rt0.c1, rt0.c0)) AND (CASE rt0.c0  WHEN '' THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE ((((((+ (rt0.c1))) BETWEEN (ROUND(rt0.c1, rt0.c0)) AND (CASE rt0.c0  WHEN '' THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, 1.162912902E9))))==(rt0.c2))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, 1.162912902E9))))==(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, 1.162912902E9))))==(rt0.c2))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(rt0.c2) COLLATE BINARY UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(rt0.c2) COLLATE BINARY)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c2) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(rt0.c2) COLLATE BINARY UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(rt0.c2) COLLATE BINARY)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c2) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT MAX(((((rt0.c2)GLOB(rt0.c1)))+(((rt0.c1)&(rt0.c1))))) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2)*(rt0.c2))) AND ((((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, x'', rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c0, rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2)*(rt0.c2))) AND ((((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, x'', rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c0, rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2)*(rt0.c2))) AND ((((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, x'', rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c0, rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(UNLIKELY(rt0.c1)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(UNLIKELY(rt0.c1)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(UNLIKELY(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1))==((rt0.c2))))/((- (rt0.c2))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1))==((rt0.c2))))/((- (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1))==((rt0.c2))))/((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX(MAX(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(MAX(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS INTEGER)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((rt0.c2) IS TRUE) AS INTEGER)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c2) IS TRUE) AS INTEGER)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((LIKELIHOOD(rt0.c1, 0.023840959363051195))<>(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((LIKELIHOOD(rt0.c1, 0.023840959363051195))<>(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((LIKELIHOOD(rt0.c1, 0.023840959363051195))<>(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE (~ (rt0.c0))  WHEN (+ (rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE (~ (rt0.c0))  WHEN (+ (rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE (~ (rt0.c0))  WHEN (+ (rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(((rt0.c2)==(rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(((rt0.c2)==(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(((rt0.c2)==(rt0.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(((rt0.c2)==(rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(((rt0.c2)==(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(((rt0.c2)==(rt0.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 NOT INDEXED WHERE (DATE(rt0.c0, -1740555178, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (DATE(rt0.c0, -1740555178, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((DATE(rt0.c0, -1740555178, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1))) NOTNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c1))) NOTNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c2 IN ()) IN ((~ (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2 IN ()) IN ((~ (rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2 IN ()) IN ((~ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(CAST(rt0.c0 AS REAL) AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(CAST(rt0.c0 AS REAL) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(CAST(rt0.c0 AS REAL) AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(CAST(rt0.c0 AS REAL) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c0 THEN 0.8105796646019905 END IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c0 THEN 0.8105796646019905 END IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN 0.8105796646019905 END IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (MAX(rt0.c1, rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (MAX(rt0.c1, rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (MAX(rt0.c1, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN NULL THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE (NOT (rt0.c2)) END) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN NULL THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE (NOT (rt0.c2)) END))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN NULL THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE (NOT (rt0.c2)) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN TRIM(DISTINCT SUM(rt0.c1)) THEN AVG(rt0.c1) ELSE ((rt0.c1) ISNULL) END UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN TRIM(DISTINCT SUM(rt0.c1)) THEN AVG(rt0.c1) ELSE ((rt0.c1) ISNULL) END)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN TRIM(DISTINCT SUM(rt0.c1)) THEN AVG(rt0.c1) ELSE ((rt0.c1) ISNULL) END) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN TRIM(DISTINCT SUM(rt0.c1)) THEN AVG(rt0.c1) ELSE ((rt0.c1) ISNULL) END UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN TRIM(DISTINCT SUM(rt0.c1)) THEN AVG(rt0.c1) ELSE ((rt0.c1) ISNULL) END)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN TRIM(DISTINCT SUM(rt0.c1)) THEN AVG(rt0.c1) ELSE ((rt0.c1) ISNULL) END) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) IS TRUE)) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) IS TRUE)) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)-(rt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)-(rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)-(rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ('L') GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('L'))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((('L') ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING TOTAL(((SUM(rt0.c1))==(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(((SUM(rt0.c1))==(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(((SUM(rt0.c1))=(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (NULLIF((+ (rt0.c2)), NULLIF(DISTINCT rt0.c0, rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULLIF((+ (rt0.c2)), NULLIF(DISTINCT rt0.c0, rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE (((NULLIF((+ (rt0.c2)), NULLIF(DISTINCT rt0.c0, rt0.c1))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (TRIM(MIN(rt0.c1, rt0.c2))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (TRIM(MIN(rt0.c1, rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((TRIM(MIN(rt0.c1, rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (((rt0.c1) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (((rt0.c1) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (((rt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0)GLOB(rt0.c2)), ((rt0.c1)>=(rt0.c2)), json_type(x'')))==((highlight(rt0.c2, NULL, rt0.c0, rt0.c2), ((((((((((((((((rt0.c2)OR(NULL)))OR(0X29e28419)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND('\nM')))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c2)+(rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)GLOB(rt0.c2)), ((rt0.c1)>=(rt0.c2)), json_type(x'')))=((highlight(rt0.c2, NULL, rt0.c0, rt0.c2), ((((((((((((((((rt0.c2)OR(NULL)))OR(0x29e28419)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND('\nM')))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c2)+(rt0.c2)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)GLOB(rt0.c2)), ((rt0.c1)>=(rt0.c2)), json_type(x'')))==((highlight(rt0.c2, NULL, rt0.c0, rt0.c2), ((((((((((((((((rt0.c2)OR(NULL)))OR(0X29e28419)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND('\nM')))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c2)+(rt0.c2)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)), MIN(1797507997), '1568937378', MIN(TOTAL(MIN(SUM(COUNT(rt0.c0)))))) AS BLOB) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)), MIN(1797507997), '1568937378', MIN(TOTAL(MIN(SUM(COUNT(rt0.c0)))))) AS BLOB))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)), MIN(1797507997), '1568937378', MIN(TOTAL(MIN(SUM(COUNT(rt0.c0)))))) AS BLOB)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1 IN (rt0.c2))))<((rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1 IN (rt0.c2))))<((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1 IN (rt0.c2))))<((rt0.c0)))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((~ (rt0.c1)) AS BLOB)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((~ (rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((~ (rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) ISNULL) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) ISNULL) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (rt0.c1 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (rt0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c1)) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((LIKELY(DISTINCT rt0.c1)) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((LIKELY(DISTINCT rt0.c1)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((~ (CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c1 AS INTEGER)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((~ (CAST(rt0.c1 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((+ (rt0.c1 COLLATE RTRIM))) ORDER BY (NULL IN ());
SELECT ALL * FROM rt0 WHERE ((NOT ((+ (rt0.c1 COLLATE RTRIM))))) ORDER BY (NULL IN ());
SELECT * FROM rt0 WHERE ((((+ (rt0.c1 COLLATE RTRIM))) ISNULL)) ORDER BY (NULL IN ());
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ('') UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS BLOB)) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2) IS TRUE) AS BLOB)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2) IS TRUE) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(SUM(rt0.c0))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c2) ORDER BY (((('654574058') ISNULL))|(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)) DESC  NULLS LAST;
SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) ORDER BY (((('654574058') ISNULL))|(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)) DESC  NULLS LAST;
SELECT rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) ORDER BY (((('654574058') ISNULL))|(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)) DESC  NULLS LAST;
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((rt0.c0)|(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((rt0.c0)|(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((rt0.c0)|(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2)*((- (rt0.c0))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)*((- (rt0.c0))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2)*((- (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING AVG(SUM(COUNT(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(SUM(COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(SUM(COUNT(COUNT(*))))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (HEX(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND ('9?G|1M%')))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (HEX(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND ('9?G|1M%')))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((HEX(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND ('9?G|1M%')))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1)))>=(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c1)))>=(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c1)))>=(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ('0.6842912012854602') GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ('0.6842912012854602'))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((('0.6842912012854602') ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((MIN(COUNT(*)) IN ()))OR(((AVG(TOTAL(AVG(rt0.c0))))%(SUM(MAX(rt0.c1)))))))OR(AVG(COUNT(SUM(AVG(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((((MIN(COUNT(*)) IN ()))OR(((AVG(TOTAL(AVG(rt0.c0))))%(SUM(MAX(rt0.c1)))))))OR(AVG(COUNT(SUM(AVG(rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((((MIN(COUNT(*)) IN ()))OR(((AVG(TOTAL(AVG(rt0.c0))))%(SUM(MAX(rt0.c1)))))))OR(AVG(COUNT(SUM(AVG(rt0.c1))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN 0.24510044013231536 THEN rt0.c1 WHEN '1028900259' THEN rt0.c2 WHEN rt0.c0 THEN 0.830121997100405 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END AS REAL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c1  WHEN 0.24510044013231536 THEN rt0.c1 WHEN '1028900259' THEN rt0.c2 WHEN rt0.c0 THEN 0.830121997100405 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(CASE rt0.c1  WHEN 0.24510044013231536 THEN rt0.c1 WHEN '1028900259' THEN rt0.c2 WHEN rt0.c0 THEN 0.830121997100405 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END AS REAL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c2, rt0.c0))) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c2, rt0.c0))) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c2, rt0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c2 AS TEXT)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c2 AS TEXT)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c2 AS TEXT)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING TOTAL(x'') UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL(x'')) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING TOTAL(x'') UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL(x'')) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2) NOTNULL) IN ())) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2) NOTNULL) IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2) NOTNULL) IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)|(rt0.c1)))<<((~ (rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)|(rt0.c1)))<<((~ (rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)|(rt0.c1)))<<((~ (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(rt0.c1) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(rt0.c1)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(rt0.c1) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(rt0.c1)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS TEXT) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c2 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((+ (rt0.c1))) NOTNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((+ (rt0.c1))) NOTNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((+ (rt0.c1))) NOTNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((json_object(rt0.c0, rt0.c2)) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((json_object(rt0.c0, rt0.c2)) NOT NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((json_object(rt0.c0, rt0.c2)) NOT NULL)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1, rt0.c1, rt0.c1))<((rt0.c0, '-1212931166', rt0.c0))) IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1, rt0.c1, rt0.c1))<((rt0.c0, '-1212931166', rt0.c0))) IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c1, rt0.c1, rt0.c1))<((rt0.c0, '-1212931166', rt0.c0))) IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c0 AS REAL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c0 AS REAL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c0 AS REAL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST(AVG(rt0.c1) AS BLOB) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(AVG(rt0.c1) AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(AVG(rt0.c1) AS BLOB)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST(AVG(rt0.c1) AS BLOB) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(AVG(rt0.c1) AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(AVG(rt0.c1) AS BLOB)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c2)IS NOT(NULL)), (+ (rt0.c0)), (rt0.c2 IN ()), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((NULLIF(rt0.c0, rt0.c2), (- (rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)&(rt0.c0)), ((rt0.c1) IS FALSE))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c2)IS NOT(NULL)), (+ (rt0.c0)), (rt0.c2 IN ()), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((NULLIF(rt0.c0, rt0.c2), (- (rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)&(rt0.c0)), ((rt0.c1) IS FALSE))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c2)IS NOT(NULL)), (+ (rt0.c0)), (rt0.c2 IN ()), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((NULLIF(rt0.c0, rt0.c2), (- (rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)&(rt0.c0)), ((rt0.c1) IS FALSE))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ('论]z㗦x'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ('论]z㗦x'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ('论]z㗦x'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))))AND(LIKE(rt0.c2, rt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))))AND(LIKE(rt0.c2, rt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))))AND(LIKE(rt0.c2, rt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MIN(((((((((COUNT(rt0.c0))OR(AVG(COUNT(rt0.c1)))))OR('-943546488')))AND(COUNT(*))))AND(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(((((((((COUNT(rt0.c0))OR(AVG(COUNT(rt0.c1)))))OR('-943546488')))AND(COUNT(*))))AND(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(((((((((COUNT(rt0.c0))OR(AVG(COUNT(rt0.c1)))))OR('-943546488')))AND(COUNT(*))))AND(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c0))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ('-91182237') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('-91182237'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('-91182237') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (x''))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (x''))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) IS TRUE)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB)) IS TRUE)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB)) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((- ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0)>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((0.8702143679833023) ISNULL)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((0.8702143679833023) ISNULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((0.8702143679833023) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c0)) BETWEEN (COUNT(*)) AND (AVG(rt0.c0))))<>(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((GROUP_CONCAT(rt0.c0)) BETWEEN (COUNT(*)) AND (AVG(rt0.c0))))!=(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((GROUP_CONCAT(rt0.c0)) BETWEEN (COUNT(*)) AND (AVG(rt0.c0))))<>(rt0.c1))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c0)) BETWEEN (COUNT(*)) AND (AVG(rt0.c0))))<>(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((GROUP_CONCAT(rt0.c0)) BETWEEN (COUNT(*)) AND (AVG(rt0.c0))))!=(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((GROUP_CONCAT(rt0.c0)) BETWEEN (COUNT(*)) AND (AVG(rt0.c0))))<>(rt0.c1))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (LIKELIHOOD(((((((((0.70036769001121)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(NULL)), 0.6294505881094461)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (LIKELIHOOD(((((((((0.70036769001121)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(NULL)), 0.6294505881094461)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((LIKELIHOOD(((((((((0.70036769001121)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(NULL)), 0.6294505881094461)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN ())))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((SUM(rt0.c2))AND(((((rt0.c1)OR(rt0.c2)))AND(MIN(rt0.c1))))))OR(MIN(COUNT(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((SUM(rt0.c2))AND(((((rt0.c1)OR(rt0.c2)))AND(MIN(rt0.c1))))))OR(MIN(COUNT(COUNT(*))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((SUM(rt0.c2))AND(((((rt0.c1)OR(rt0.c2)))AND(MIN(rt0.c1))))))OR(MIN(COUNT(COUNT(*)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((rt0.c2, rt0.c2, 2.042006458E9)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))AND(rt0.c0)))OR((NOT (rt0.c1))))) ORDER BY CASE ((x'') IS TRUE)  WHEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))) THEN ((rt0.c1)<=(rt0.c0)) WHEN (rt0.c2 IN ()) THEN (~ (rt0.c1)) WHEN (~ ('688742885')) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN ((('-1381323074'))<=((rt0.c2))) THEN CAST(NULL AS TEXT) END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT ((((((((rt0.c2, rt0.c2, 2.042006458E9)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))AND(rt0.c0)))OR((NOT (rt0.c1))))))) ORDER BY CASE ((x'') IS TRUE)  WHEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))) THEN ((rt0.c1)<=(rt0.c0)) WHEN (rt0.c2 IN ()) THEN (~ (rt0.c1)) WHEN (~ ('688742885')) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN ((('-1381323074'))<=((rt0.c2))) THEN CAST(NULL AS TEXT) END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2, rt0.c2, 2.042006458E9)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))AND(rt0.c0)))OR((NOT (rt0.c1))))) ISNULL)) ORDER BY CASE ((x'') IS TRUE)  WHEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))) THEN ((rt0.c1)<=(rt0.c0)) WHEN (rt0.c2 IN ()) THEN (~ (rt0.c1)) WHEN (~ ('688742885')) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN ((('-1381323074'))<=((rt0.c2))) THEN CAST(NULL AS TEXT) END ASC  NULLS LAST;
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (json_array_length(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c1 IN ()))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (json_array_length(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((json_array_length(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c1 IN ()))) ISNULL));
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1)-(rt0.c2))) NOT NULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)-(rt0.c2))) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c1)-(rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(TOTAL(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(TOTAL(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(TOTAL(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)>=(((((rt0.c0)OR(x'')))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)>=(((((rt0.c0)OR(x'')))AND(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE (((((rt0.c2 COLLATE BINARY)>=(((((rt0.c0)OR(x'')))AND(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((0.1411231988552052) BETWEEN (rt0.c2) AND ((rt0.c1 IN (rt0.c1))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((0.1411231988552052) BETWEEN (rt0.c2) AND ((rt0.c1 IN (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((0.1411231988552052) BETWEEN (rt0.c2) AND ((rt0.c1 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((NOT (0Xffffffff8a5d35c1))) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2)))) AND (rt0.c2))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((NOT (0xffffffff8a5d35c1))) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2)))) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((NOT (0xffffffff8a5d35c1))) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2)))) AND (rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (TOTAL(COUNT(*))))) NOT NULL) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (TOTAL(COUNT(*))))) NOT NULL))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (TOTAL(COUNT(*))))) NOT NULL)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('-331418311') UNION ALL SELECT * FROM rt0 WHERE ((NOT ('-331418311'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('-331418311') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN ()))>(CAST(rt0.c2 AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0 IN ()))>(CAST(rt0.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0 IN ()))>(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN '1458587922' END)>(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN '1458587922' END)>(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN '1458587922' END)>(rt0.c2))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT NULL))|(ABS(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))|(ABS(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))|(ABS(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((TOTAL(COUNT(*)))OR(COUNT(*))))OR(TOTAL(TOTAL(SUM(NULL))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((TOTAL(COUNT(*)))OR(COUNT(*))))OR(TOTAL(TOTAL(SUM(NULL))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((TOTAL(COUNT(*)))OR(COUNT(*))))OR(TOTAL(TOTAL(SUM(NULL)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))+(CASE WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE ((NOT (((CAST(rt0.c2 AS REAL))+(CASE WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))+(CASE WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)>(0.19142262588210845)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'0e53'))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)>(0.19142262588210845)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'0e53'))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)>(0.19142262588210845)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'0e53'))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE rt0.c2  WHEN -461911649 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN -461911649 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((CASE rt0.c2  WHEN -461911649 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT((COUNT(*) IN ())) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT((COUNT(*) IN ()))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT((COUNT(*) IN ())) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT((COUNT(*) IN ()))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (x''))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT ((~ (x''))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (x''))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN ((((rt0.c1))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS BLOB) IN ((((rt0.c1))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CAST(rt0.c2 AS BLOB) IN ((((rt0.c1))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2))) IS FALSE)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c2))) IS FALSE)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM(0.8263197304490597) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(0.8263197304490597))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(0.8263197304490597)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM(0.8263197304490597) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(0.8263197304490597))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(0.8263197304490597)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ('') UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (''))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((('') ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((COALESCE('V', rt0.c2)) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((COALESCE('V', rt0.c2)) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((COALESCE('V', rt0.c2)) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN((TOTAL(rt0.c1) IN ())) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN((TOTAL(rt0.c1) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN((TOTAL(rt0.c1) IN ()))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN((TOTAL(rt0.c1) IN ())) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN((TOTAL(rt0.c1) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN((TOTAL(rt0.c1) IN ()))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c1)IS('0.699519597829326'))) NOTNULL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)IS('0.699519597829326'))) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c1)IS('0.699519597829326'))) NOTNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(SUM(COUNT(rt0.c2))) COLLATE BINARY UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(SUM(COUNT(rt0.c2))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(SUM(COUNT(rt0.c2))) COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (LENGTH((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LENGTH((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((LENGTH((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (UPPER(((rt0.c1)<=(rt0.c0)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (UPPER(((rt0.c1)<=(rt0.c0)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((UPPER(((rt0.c1)<=(rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1)<>(rt0.c0)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)!=(rt0.c0)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)!=(rt0.c0)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2) NOTNULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0))!=((rt0.c1))))||(((rt0.c0)<<(rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0))<>((rt0.c1))))||(((rt0.c0)<<(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0))!=((rt0.c1))))||(((rt0.c0)<<(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(CAST(rt0.c0 AS BLOB)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(CAST(rt0.c0 AS BLOB))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(CAST(rt0.c0 AS BLOB)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(CAST(rt0.c0 AS BLOB))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((('u~~>')AND('629726528')))AND(((rt0.c2)>(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((('u~~>')AND('629726528')))AND(((rt0.c2)>(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((('u~~>')AND('629726528')))AND(((rt0.c2)>(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TIME(COALESCE(DISTINCT rt0.c0, rt0.c1), CAST(rt0.c1 AS NUMERIC), (NULL IN ()))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TIME(COALESCE(DISTINCT rt0.c0, rt0.c1), CAST(rt0.c1 AS NUMERIC), (NULL IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TIME(COALESCE(DISTINCT rt0.c0, rt0.c1), CAST(rt0.c1 AS NUMERIC), (NULL IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((rt0.c1)||(NULL)) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1)||(NULL)) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c1)||(NULL)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((- (rt0.c2))) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((- (rt0.c2))) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE ((((((- (rt0.c2))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((((((((rt0.c1)AND(rt0.c2)))OR(NULL)))AND(rt0.c1)))AND(rt0.c0)), (((rt0.c1))==((rt0.c1))), rt0.c1)) AND ((rt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c1, 0.8787438544144264), LIKELIHOOD(rt0.c1, 0.7137895109722658))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((((((((rt0.c1)AND(rt0.c2)))OR(NULL)))AND(rt0.c1)))AND(rt0.c0)), (((rt0.c1))=((rt0.c1))), rt0.c1)) AND ((rt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c1, 0.8787438544144264), LIKELIHOOD(rt0.c1, 0.7137895109722658))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((((((((rt0.c1)AND(rt0.c2)))OR(NULL)))AND(rt0.c1)))AND(rt0.c0)), (((rt0.c1))==((rt0.c1))), rt0.c1)) AND ((rt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c1, 0.8787438544144264), LIKELIHOOD(rt0.c1, 0.7137895109722658))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (JULIANDAY(((rt0.c0) NOTNULL), ((rt0.c2) IS FALSE), rt0.c0 COLLATE RTRIM)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (JULIANDAY(((rt0.c0) NOTNULL), ((rt0.c2) IS FALSE), rt0.c0 COLLATE RTRIM)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((JULIANDAY(((rt0.c0) NOTNULL), ((rt0.c2) IS FALSE), rt0.c0 COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING rt0.c0 COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (rt0.c0 COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c0 COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING rt0.c0 COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (rt0.c0 COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c0 COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT MIN((('') NOT BETWEEN ('') AND (((((rt0.c2)AND(rt0.c1)))OR(0.6847576347519805))))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2)||(rt0.c0)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c2)||(rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c2)||(rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('-2082321896')))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('-2082321896')))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('-2082321896')))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)|(CASE WHEN '1848127079' THEN x'' ELSE rt0.c1 END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)|(CASE WHEN '1848127079' THEN x'' ELSE rt0.c1 END))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)|(CASE WHEN '1848127079' THEN x'' ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST((((GROUP_CONCAT(TOTAL(rt0.c1))))>=((rt0.c0))) AS INTEGER) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST((((GROUP_CONCAT(TOTAL(rt0.c1))))>=((rt0.c0))) AS INTEGER))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST((((GROUP_CONCAT(TOTAL(rt0.c1))))>=((rt0.c0))) AS INTEGER)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UPPER(ABS(DISTINCT rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UPPER(ABS(DISTINCT rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UPPER(ABS(DISTINCT rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (rt0.c1)))GLOB((((rt0.c0))<=((rt0.c0)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((~ (rt0.c1)))GLOB((((rt0.c0))<=((rt0.c0)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((~ (rt0.c1)))GLOB((((rt0.c0))<=((rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)==(rt0.c1))) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)=(rt0.c1))) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)=(rt0.c1))) NOT NULL)) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (-1835299882) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (-1835299882))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((-1835299882) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(rt0.c1) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(rt0.c1)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(rt0.c1) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(rt0.c1)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1, rt0.c2, NULL)) NOT BETWEEN (((((((((('6')AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)), (('-1833540800') IS FALSE), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))) AND ((rt0.c1 COLLATE BINARY, LIKELIHOOD(rt0.c1, 0.25566263670120914), CASE WHEN rt0.c0 THEN rt0.c2 ELSE 1162912902 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c2, NULL)) NOT BETWEEN (((((((((('6')AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)), (('-1833540800') IS FALSE), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))) AND ((rt0.c1 COLLATE BINARY, LIKELIHOOD(rt0.c1, 0.25566263670120914), CASE WHEN rt0.c0 THEN rt0.c2 ELSE 1162912902 END)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1, rt0.c2, NULL)) NOT BETWEEN (((((((((('6')AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)), (('-1833540800') IS FALSE), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))) AND ((rt0.c1 COLLATE BINARY, LIKELIHOOD(rt0.c1, 0.25566263670120914), CASE WHEN rt0.c0 THEN rt0.c2 ELSE 1162912902 END)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN ((('0.830121997100405') BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) NOT BETWEEN ((('0.830121997100405') BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((((((+ (rt0.c0))) NOT BETWEEN ((('0.830121997100405') BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN json_type(rt0.c1) ELSE ((rt0.c1) NOT NULL) END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN json_type(rt0.c1) ELSE ((rt0.c1) NOT NULL) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN json_type(rt0.c1) ELSE ((rt0.c1) NOT NULL) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(MAX(rt0.c1)) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(MAX(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(MAX(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((rt0.c1 IN (rt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c1)) AS BLOB)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)+(rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c0)+(rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c0)!=(rt0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)>(rt0.c0)))))AND(rt0.c2)))AND(((((((((((((rt0.c0)OR(NULL)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)<>(rt0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)>(rt0.c0)))))AND(rt0.c2)))AND(((((((((((((rt0.c0)OR(NULL)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c0)<>(rt0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)>(rt0.c0)))))AND(rt0.c2)))AND(((((((((((((rt0.c0)OR(NULL)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (RTRIM(rt0.c1) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((RTRIM(rt0.c1) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((RTRIM(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (RTRIM(rt0.c1) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((RTRIM(rt0.c1) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((RTRIM(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c0)|(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (((rt0.c0)|(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (((rt0.c0)|(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ('0.19142262588210845') GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ('0.19142262588210845'))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((('0.19142262588210845') ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((0.3491202960538261)AND(((AVG(rt0.c0))<=(rt0.c1)))))OR(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((0.3491202960538261)AND(((AVG(rt0.c0))<=(rt0.c1)))))OR(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((0.3491202960538261)AND(((AVG(rt0.c0))<=(rt0.c1)))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((0.3491202960538261)AND(((AVG(rt0.c0))<=(rt0.c1)))))OR(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((0.3491202960538261)AND(((AVG(rt0.c0))<=(rt0.c1)))))OR(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((0.3491202960538261)AND(((AVG(rt0.c0))<=(rt0.c1)))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)LIKE(((NULL) NOT BETWEEN (rt0.c2) AND (0xffffffffe2540db1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM)LIKE(((NULL) NOT BETWEEN (rt0.c2) AND (0Xffffffffe2540db1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)LIKE(((NULL) NOT BETWEEN (rt0.c2) AND (0Xffffffffe2540db1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (0.8288285426768888))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (0.8288285426768888))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (0.8288285426768888))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(TRIM(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(TRIM(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(TRIM(COUNT(*)))) ISNULL);
SELECT MAX((NOT (SQLITE_SOURCE_ID()))) FROM rt0 NOT INDEXED ORDER BY (((NOT (rt0.c0)))=((((rt0.c0))<=((rt0.c2))))) DESC;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (LOWER(DISTINCT rt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LOWER(DISTINCT rt0.c0) COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((LOWER(DISTINCT rt0.c0) COLLATE NOCASE) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c2)))/(CAST(rt0.c1 AS BLOB)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (rt0.c2)))/(CAST(rt0.c1 AS BLOB)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((+ (rt0.c2)))/(CAST(rt0.c1 AS BLOB)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN((((AVG(rt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((MAX(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN((((AVG(rt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN((((AVG(rt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((MAX(rt0.c1)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (DATE(((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS REAL))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (DATE(((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS REAL))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((DATE(((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS REAL))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)OR(0.27427052881921066)))OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) NOT NULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c2)OR(0.27427052881921066)))OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) NOT NULL)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c2)OR(0.27427052881921066)))OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) NOT NULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(CAST(MAX(TOTAL(MIN(rt0.c1))) AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(CAST(MAX(TOTAL(MIN(rt0.c1))) AS NUMERIC)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(CAST(MAX(TOTAL(MIN(rt0.c1))) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((('1446458911' IN (x'f52f'))) NOTNULL)) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((('1446458911' IN (x'f52f'))) NOTNULL)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((('1446458911' IN (x'f52f'))) NOTNULL)) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((DATE(rt0.c0, rt0.c0, rt0.c0) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((DATE(rt0.c0, rt0.c0, rt0.c0) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((DATE(rt0.c0, rt0.c0, rt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c0)==(rt0.c2)) IN ())) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)==(rt0.c2)) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c0)=(rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(rt0.c0 AS REAL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(rt0.c0 AS REAL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(rt0.c0 AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(rt0.c0 AS REAL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(rt0.c0 AS REAL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(rt0.c0 AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1)+(rt0.c2)), CAST(rt0.c2 AS BLOB)))<((rt0.c2 COLLATE NOCASE, ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1)+(rt0.c2)), CAST(rt0.c2 AS BLOB)))<((rt0.c2 COLLATE NOCASE, ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1)+(rt0.c2)), CAST(rt0.c2 AS BLOB)))<((rt0.c2 COLLATE NOCASE, ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKELIHOOD(rt0.c2 COLLATE BINARY, 0.7123115529114046)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKELIHOOD(rt0.c2 COLLATE BINARY, 0.7123115529114046)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD(rt0.c2 COLLATE BINARY, 0.7123115529114046)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(1.458587922E9 AS NUMERIC))IS NOT(rt0.c1))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(1.458587922E9 AS NUMERIC))IS NOT(rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(1.458587922E9 AS NUMERIC))IS NOT(rt0.c1))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(rt0.c2) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(rt0.c2) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)<(((rt0.c2) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)<(((rt0.c2) ISNULL)))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)<(((rt0.c2) ISNULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c0) AND (highlight(rt0.c2, rt0.c0, 1097579555, rt0.c2)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c0) AND (highlight(rt0.c2, rt0.c0, 1097579555, rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c0) AND (highlight(rt0.c2, rt0.c0, 1097579555, rt0.c2)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0)||(rt0.c2)) WHEN ((rt0.c1)-(rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((('')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c0)>=(rt0.c2)) END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0)||(rt0.c2)) WHEN ((rt0.c1)-(rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((('')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c0)>=(rt0.c2)) END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0)||(rt0.c2)) WHEN ((rt0.c1)-(rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((('')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c0)>=(rt0.c2)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(TOTAL(MAX(AVG(COUNT(*)))))) ISNULL) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((MAX(TOTAL(MAX(AVG(COUNT(*)))))) ISNULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((MAX(TOTAL(MAX(AVG(COUNT(*)))))) ISNULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (QUOTE(CAST(rt0.c2 AS INTEGER))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (QUOTE(CAST(rt0.c2 AS INTEGER))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((QUOTE(CAST(rt0.c2 AS INTEGER))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN 0xffffffff96d285e8 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' ELSE rt0.c1 END)) AND ((LIKELIHOOD(rt0.c1, 0.15698770496122316), rt0.c2, rt0.c2 COLLATE BINARY)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN 0Xffffffff96d285e8 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' ELSE rt0.c1 END)) AND ((LIKELIHOOD(rt0.c1, 0.15698770496122316), rt0.c2, rt0.c2 COLLATE BINARY)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN 0Xffffffff96d285e8 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' ELSE rt0.c1 END)) AND ((LIKELIHOOD(rt0.c1, 0.15698770496122316), rt0.c2, rt0.c2 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (~ (GROUP_CONCAT(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((~ (GROUP_CONCAT(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((~ (GROUP_CONCAT(COUNT(rt0.c1))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS BLOB)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) NOTNULL) AS BLOB)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c0) NOTNULL) AS BLOB)) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1)))<=(rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c1)))<=(rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c1)))<=(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))*(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))*(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))*(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (- (SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((- (SUM(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((- (SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (- (SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((- (SUM(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((- (SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c0) ISNULL) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c0) ISNULL) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c0) ISNULL) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)<=(((rt0.c0)AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)<=(((rt0.c0)AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)<=(((rt0.c0)AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (CASE WHEN rt0.c1 THEN COUNT(rt0.c2) END IN ()) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((CASE WHEN rt0.c1 THEN COUNT(rt0.c2) END IN ()))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((CASE WHEN rt0.c1 THEN COUNT(rt0.c2) END IN ())) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (CASE WHEN rt0.c1 THEN COUNT(rt0.c2) END IN ()) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((CASE WHEN rt0.c1 THEN COUNT(rt0.c2) END IN ()))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((CASE WHEN rt0.c1 THEN COUNT(rt0.c2) END IN ())) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((((rt0.c0))<=((rt0.c0))) AS TEXT)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST((((rt0.c0))<=((rt0.c0))) AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST((((rt0.c0))<=((rt0.c0))) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((~ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((~ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(PRINTF(SUM(AVG(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(PRINTF(SUM(AVG(COUNT(*))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(PRINTF(SUM(AVG(COUNT(*)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c1)GLOB(rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (((rt0.c1)GLOB(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (((rt0.c1)GLOB(rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((CASE 0X412e47b5  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))<((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((CASE 0x412e47b5  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))<((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((CASE 0X412e47b5  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))<((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c0, rt0.c0, '2096067358')) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c1, 0.43772466506580243, rt0.c2))) IN (NULL))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0, rt0.c0, '2096067358')) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c1, 0.43772466506580243, rt0.c2))) IN (NULL))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c0, rt0.c0, '2096067358')) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c1, 0.43772466506580243, rt0.c2))) IN (NULL))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(rt0.c0))!=(MAX(AVG(GROUP_CONCAT(AVG(MIN(MAX(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((MAX(rt0.c0))!=(MAX(AVG(GROUP_CONCAT(AVG(MIN(MAX(rt0.c0)))))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((MAX(rt0.c0))!=(MAX(AVG(GROUP_CONCAT(AVG(MIN(MAX(rt0.c0))))))))) ISNULL);
SELECT TOTAL(CAST(rt0.c1 COLLATE RTRIM AS BLOB)) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)LIKE('8/ڦ-2T騢]')))<>(CASE WHEN '1489781058' THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0)LIKE('8/ڦ-2T騢]')))<>(CASE WHEN '1489781058' THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c0)LIKE('8/ڦ-2T騢]')))<>(CASE WHEN '1489781058' THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((0.0826588811861092) IS TRUE))OR(CAST(rt0.c0 AS REAL))))OR((~ (rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((0.0826588811861092) IS TRUE))OR(CAST(rt0.c0 AS REAL))))OR((~ (rt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((0.0826588811861092) IS TRUE))OR(CAST(rt0.c0 AS REAL))))OR((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING HEX(DISTINCT (('')&(MAX(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (HEX(DISTINCT (('')&(MAX(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((HEX(DISTINCT (('')&(MAX(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING HEX(DISTINCT (('')&(MAX(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (HEX(DISTINCT (('')&(MAX(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((HEX(DISTINCT (('')&(MAX(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS BLOB)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS BLOB)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS BLOB)) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0)-(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)-(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)-(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(rt0.c0))&('0.8105796646019905')) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((TOTAL(rt0.c0))&('0.8105796646019905')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((TOTAL(rt0.c0))&('0.8105796646019905'))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(rt0.c0))&('0.8105796646019905')) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((TOTAL(rt0.c0))&('0.8105796646019905')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((TOTAL(rt0.c0))&('0.8105796646019905'))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND('1595104600')))))OR(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND('1595104600')))))OR(CAST(rt0.c2 AS TEXT)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND('1595104600')))))OR(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((~ (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (0.7887311928226807) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (0.7887311928226807))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((0.7887311928226807) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(GROUP_CONCAT(MAX(rt0.c2))))>(((rt0.c2)>(TOTAL(MIN(rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((SUM(GROUP_CONCAT(MAX(rt0.c2))))>(((rt0.c2)>(TOTAL(MIN(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((SUM(GROUP_CONCAT(MAX(rt0.c2))))>(((rt0.c2)>(TOTAL(MIN(rt0.c0))))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((HEX('-1428793749'))<=((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((HEX('-1428793749'))<=((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((HEX('-1428793749'))<=((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
