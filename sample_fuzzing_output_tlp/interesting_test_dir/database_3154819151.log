-- Time: 2024/06/08 22:12:25
-- Database: database51
-- Database version: 3.40.0
-- seed value: 3154819151
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
ANALYZE temp; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.5704228278935835); -- 1ms;
PRAGMA temp.cache_spill = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.5704228278935835, 0.5704228278935835, x''), ('', 0.5704228278935835, '-416997709'), ('s', -4.16997709E8, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (0.24490788633088834, -4.16997709E8, 0x66a46c97); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('D') WHERE ',['; -- 0ms;
PRAGMA main.mmap_size = -7349581083882933034; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES ('oWCGM', x''); -- 0ms;
ANALYZE rt0; -- 1ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2) VALUES (NULL, '-810406869'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (NULL, 0.24490788633088834); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 7ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (x'afa2e68f', 's*F>', 0Xffffffffcfb22c2b), (CAST('w4' AS REAL) COLLATE BINARY, 0.29157977506333965, '횱now~'), (0.4776847601524149, 0.333743915344777, '1722051735'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE rt0 SET c1=NULL, c0='1547228849'; -- 0ms;
UPDATE OR REPLACE rt0 SET c1='1081413891', c0=1.722051735E9, c0=NULL WHERE (- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (x''); -- 0ms;
REINDEX; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM rt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -810406869);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 REAL ); -- 0ms;
UPDATE OR ABORT rt1 SET c3=NULL; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR FAIL INTO rt1(c2, c0, c1) VALUES ('#悌n-K6<', '', x''); -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44629'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1475990167); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c3=0.4776847601524149, c2='>8A .>K' WHERE ((0.333743915344777)IS(rt1.c0)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -182854790);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40663'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1954865234); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1609177046,10');\n; -- 0ms;
CREATE TEMP TABLE t0 (c0 INT ); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c64; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('-9223372036854775808'); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES ('-416997709'), (NULL), ('1211719820'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('Lt[w,Nz'); -- 1ms;
REINDEX; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
UPDATE rt0 SET (c2)=(NULL); -- 0ms;
DROP TABLE IF EXISTS rt0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1722051735);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'', x'fa81') WHERE (((((vt0.c0) NOT NULL)))<((CAST(vt0.c0 AS BLOB)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44567'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 512485376); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2030917318); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX  vt0; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('-182854790'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x'' WHERE ((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR('')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))); -- 0ms;
PRAGMA temp.cache_spill = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1)=('-1944507127', '>잏{b') WHERE (- (vt0.c1)); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULLIF(DISTINCT CAST(-1.944507127E9 AS BLOB), vt0.c1)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (NULLIF(DISTINCT CAST(-1.944507127E9 AS BLOB), vt0.c1)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((NULLIF(DISTINCT CAST(-1.944507127E9 AS BLOB), vt0.c1)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (highlight(((vt0.c0) ISNULL), CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL), ((vt0.c0)!=(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (highlight(((vt0.c0) ISNULL), CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL), ((vt0.c0)!=(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((highlight(((vt0.c0) ISNULL), CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL), ((vt0.c0)<>(vt0.c0)))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))LIKE(-524171377))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))LIKE(-524171377))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))LIKE(-524171377))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(MIN(AVG(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(MIN(AVG(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(MIN(AVG(COUNT(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(x'5a37')) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0)OR(vt0.c0)))OR(x'5a37')) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))OR(x'5a37')) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((-1169310231) IS TRUE)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((-1169310231) IS TRUE)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((-1169310231) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (1.609177046E9) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (1.609177046E9))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((1.609177046E9) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (PRINTF((NOT (vt0.c1)), (((('-1944507127')OR(vt0.c1)))AND(vt0.c1)), SQLITE_VERSION())) UNION ALL SELECT * FROM vt0 WHERE ((NOT (PRINTF((NOT (vt0.c1)), (((('-1944507127')OR(vt0.c1)))AND(vt0.c1)), SQLITE_VERSION())))) UNION ALL SELECT ALL * FROM vt0 WHERE (((PRINTF((NOT (vt0.c1)), (((('-1944507127')OR(vt0.c1)))AND(vt0.c1)), SQLITE_VERSION())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT vt0.c1)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (LIKELY(DISTINCT vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (LIKELY(DISTINCT vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((((vt0.c0)OR(x'')))OR(vt0.c1)) AS NUMERIC)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(x'')))OR(vt0.c1)) AS NUMERIC)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((((vt0.c0)OR(x'')))OR(vt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((LTRIM('1609177046'))<<(AVG(SUM(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((LTRIM('1609177046'))<<(AVG(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((LTRIM('1609177046'))<<(AVG(SUM(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 NOT INDEXED;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>=((('C*b	')OR(vt0.c1))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))>=((('C*b	')OR(vt0.c1))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))>=((('C*b	')OR(vt0.c1))))) ISNULL));
SELECT vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((x'')IS(vt0.c1)))) AND (((vt0.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((x'')IS(vt0.c1)))) AND (((vt0.c0 IN ()))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((((x'')IS(vt0.c1)))) AND (((vt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((vt0.c1)IS NOT(vt0.c1)) AS TEXT)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c1)IS NOT(vt0.c1)) AS TEXT)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c1)IS NOT(vt0.c1)) AS TEXT)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE (+ (MAX(COUNT(COUNT(*)))))  WHEN CAST(vt0.c1 AS INTEGER) THEN ((('-1944507127')) BETWEEN ((MIN(MIN(0xffffffffba4dbde9)))) AND ((vt0.c0))) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE (+ (MAX(COUNT(COUNT(*)))))  WHEN CAST(vt0.c1 AS INTEGER) THEN ((('-1944507127')) BETWEEN ((MIN(MIN(0Xffffffffba4dbde9)))) AND ((vt0.c0))) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE (+ (MAX(COUNT(COUNT(*)))))  WHEN CAST(vt0.c1 AS INTEGER) THEN ((('-1944507127')) BETWEEN ((MIN(MIN(0Xffffffffba4dbde9)))) AND ((vt0.c0))) END) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((x'', (+ (vt0.c0)), ((vt0.c0)&(vt0.c1))))>=((vt0.c0, UPPER(0.38721448070545506), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((x'', (+ (vt0.c0)), ((vt0.c0)&(vt0.c1))))>=((vt0.c0, UPPER(0.38721448070545506), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((x'', (+ (vt0.c0)), ((vt0.c0)&(vt0.c1))))>=((vt0.c0, UPPER(0.38721448070545506), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) IS TRUE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULLIF(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULLIF(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((- (COALESCE(vt0.c1, vt0.c0)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((- (COALESCE(vt0.c1, vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((- (COALESCE(vt0.c1, vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING SUM(((((MAX(vt0.c0))OR(AVG(MIN(SUM(SUM(vt0.c0)))))))AND(AVG(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(((((MAX(vt0.c0))OR(AVG(MIN(SUM(SUM(vt0.c0)))))))AND(AVG(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(((((MAX(vt0.c0))OR(AVG(MIN(SUM(SUM(vt0.c0)))))))AND(AVG(TOTAL(vt0.c0)))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)OR(((vt0.c1)%(vt0.c0)))))AND(((-5.24171377E8) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)OR(((vt0.c1)%(vt0.c0)))))AND(((-5.24171377E8) NOT NULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)OR(((vt0.c1)%(vt0.c0)))))AND(((-5.24171377E8) NOT NULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) AS TEXT)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) AS TEXT)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING LTRIM(vt0.c0) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (LTRIM(vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((LTRIM(vt0.c0)) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING LTRIM(vt0.c0) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (LTRIM(vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((LTRIM(vt0.c0)) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1)&(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1)&(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c1)&(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (INSTR(json_valid(vt0.c1), x'')) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (INSTR(json_valid(vt0.c1), x'')))) UNION SELECT DISTINCT * FROM vt0 WHERE (((INSTR(json_valid(vt0.c1), x'')) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c1) NOT NULL))=(((vt0.c1)>>(vt0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1) NOT NULL))==(((vt0.c1)>>(vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c1) NOT NULL))==(((vt0.c1)>>(vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(vt0.c0))<(AVG(vt0.c1))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((AVG(vt0.c0))<(AVG(vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((AVG(vt0.c0))<(AVG(vt0.c1)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(vt0.c0))<(AVG(vt0.c1))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((AVG(vt0.c0))<(AVG(vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((AVG(vt0.c0))<(AVG(vt0.c1)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE) FROM vt0 ORDER BY DATE(vt0.c0, vt0.c0, NULL) COLLATE NOCASE DESC;
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ('-1169310231') UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ('-1169310231'))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((('-1169310231') ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'517f4c38' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'517f4c38' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'517f4c38' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c1 IN (vt0.c1)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c1 IN (vt0.c1)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*))) BETWEEN ((MAX(vt0.c0))) AND ((COUNT(vt0.c0)))))*(((COUNT(*)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((COUNT(*))) BETWEEN ((MAX(vt0.c0))) AND ((COUNT(vt0.c0)))))*(((COUNT(*)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((COUNT(*))) BETWEEN ((MAX(vt0.c0))) AND ((COUNT(vt0.c0)))))*(((COUNT(*)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*))) BETWEEN ((MAX(vt0.c0))) AND ((COUNT(vt0.c0)))))*(((COUNT(*)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((COUNT(*))) BETWEEN ((MAX(vt0.c0))) AND ((COUNT(vt0.c0)))))*(((COUNT(*)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((COUNT(*))) BETWEEN ((MAX(vt0.c0))) AND ((COUNT(vt0.c0)))))*(((COUNT(*)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c1) IS FALSE))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR(x'')))OR((vt0.c0 IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((((((((vt0.c1) IS FALSE))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR(x'')))OR((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((((((((vt0.c1) IS FALSE))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR(x'')))OR((vt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)<<(vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)<<(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c0))<=((NULL))))AND(vt0.c0)))AND(CAST(x'' AS NUMERIC)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((((vt0.c0))<=((NULL))))AND(vt0.c0)))AND(CAST(x'' AS NUMERIC)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((((vt0.c0))<=((NULL))))AND(vt0.c0)))AND(CAST(x'' AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(MAX(COUNT(vt0.c1)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((NOT (GROUP_CONCAT(AVG(MAX(COUNT(vt0.c1)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((NOT (GROUP_CONCAT(AVG(MAX(COUNT(vt0.c1))))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (CASE ((vt0.c0)/(x'b718'))  WHEN vt0.c1 THEN (vt0.c1 IN ()) WHEN vt0.c1 COLLATE BINARY THEN (NOT (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END ELSE ((0.24490788633088834)<(vt0.c1)) END) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)/(x'b718'))  WHEN vt0.c1 THEN (vt0.c1 IN ()) WHEN vt0.c1 COLLATE BINARY THEN (NOT (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END ELSE ((0.24490788633088834)<(vt0.c1)) END))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE ((vt0.c0)/(x'b718'))  WHEN vt0.c1 THEN (vt0.c1 IN ()) WHEN vt0.c1 COLLATE BINARY THEN (NOT (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END ELSE ((0.24490788633088834)<(vt0.c1)) END) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((('1346469675'))<(('1211719820')))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((('1346469675'))<(('1211719820')))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((('1346469675'))<(('1211719820')))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN x'c8f5' END) BETWEEN (((0.6482858083807594) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((NOT (vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c0 THEN x'c8f5' END) BETWEEN (((0.6482858083807594) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((NOT (vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN x'c8f5' END) BETWEEN (((0.6482858083807594) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(COUNT(vt0.c0))) ISNULL);
SELECT TOTAL(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(TRIM(DISTINCT NULL, 0.6848619758045227)))) FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((- (vt0.c0))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((- (vt0.c0))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((- (vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((0.44051623782399796)) AND ((NULL)))) AND (json_remove(vt0.c1, vt0.c0)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((0.44051623782399796)) AND ((NULL)))) AND (json_remove(vt0.c1, vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((0.44051623782399796)) AND ((NULL)))) AND (json_remove(vt0.c1, vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(COUNT(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c1))=((vt0.c1))) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c1))==((vt0.c1))) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c1))=((vt0.c1))) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CAST(((((vt0.c1)AND(NULL)))AND(vt0.c1)) AS TEXT)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (CAST(((((vt0.c1)AND(NULL)))AND(vt0.c1)) AS TEXT)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CAST(((((vt0.c1)AND(NULL)))AND(vt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(CASE vt0.c1  WHEN vt0.c1 THEN '' END)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))AND(CASE vt0.c1  WHEN vt0.c1 THEN '' END)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((CAST(vt0.c0 AS REAL))AND(CASE vt0.c1  WHEN vt0.c1 THEN '' END)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MIN((~ (vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN((~ (vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN((~ (vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MIN((~ (vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN((~ (vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN((~ (vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)||(vt0.c0)))>(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1)||(vt0.c0)))>(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)||(vt0.c0)))>(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)IS((- (vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c1 END)IS((- (vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 END)IS((- (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((NULL)AND(SUM(vt0.c0))))AND(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((NULL)AND(SUM(vt0.c0))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((NULL)AND(SUM(vt0.c0))))AND(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((NULL)AND(SUM(vt0.c0))))AND(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((NULL)AND(SUM(vt0.c0))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((NULL)AND(SUM(vt0.c0))))AND(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE vt0.c0  WHEN ((vt0.c1)+(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((vt0.c0)AND(vt0.c0)) END  NULLS FIRST;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CAST(vt0.c1 AS INTEGER)))))) ORDER BY CASE vt0.c0  WHEN ((vt0.c1)+(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((vt0.c0)AND(vt0.c0)) END  NULLS FIRST;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CAST(vt0.c1 AS INTEGER)))) ISNULL)) ORDER BY CASE vt0.c0  WHEN ((vt0.c1)+(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((vt0.c0)AND(vt0.c0)) END  NULLS FIRST;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))AND(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))AND(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))AND(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(CAST(GROUP_CONCAT(MAX(MAX(vt0.c0))) AS TEXT)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(CAST(GROUP_CONCAT(MAX(MAX(vt0.c0))) AS TEXT)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(CAST(GROUP_CONCAT(MAX(MAX(vt0.c0))) AS TEXT))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((- (((vt0.c0) NOTNULL)))))) UNION ALL SELECT * FROM vt0 WHERE ((((- (((vt0.c0) NOTNULL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (json_remove(vt0.c1, 'jw', vt0.c0, vt0.c0, vt0.c0, vt0.c1) COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (json_remove(vt0.c1, 'jw', vt0.c0, vt0.c0, vt0.c0, vt0.c1) COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((json_remove(vt0.c1, 'jw', vt0.c0, vt0.c0, vt0.c0, vt0.c1) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(vt0.c0))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c1 AS INTEGER))))OR(vt0.c0)))OR('-23641267' COLLATE NOCASE)))OR(CAST(vt0.c1 AS INTEGER)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c1 AS INTEGER))))OR(vt0.c0)))OR('-23641267' COLLATE NOCASE)))OR(CAST(vt0.c1 AS INTEGER)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c1 AS INTEGER))))OR(vt0.c0)))OR('-23641267' COLLATE NOCASE)))OR(CAST(vt0.c1 AS INTEGER)))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (MIN(CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (+ (vt0.c1)), (vt0.c0 IN ()))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (MIN(CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (+ (vt0.c1)), (vt0.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((MIN(CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (+ (vt0.c1)), (vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((vt0.c0 IN ()))AND(TOTAL(MIN(TOTAL(vt0.c0))))))OR(((((((((((((MAX(GROUP_CONCAT(COUNT(COUNT(TOTAL(NULL))))))AND(AVG(TOTAL(vt0.c1)))))AND(MAX(MAX(vt0.c0)))))AND(COUNT('2107988243'))))OR(vt0.c1)))AND(COUNT(*))))AND(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((((vt0.c0 IN ()))AND(TOTAL(MIN(TOTAL(vt0.c0))))))OR(((((((((((((MAX(GROUP_CONCAT(COUNT(COUNT(TOTAL(NULL))))))AND(AVG(TOTAL(vt0.c1)))))AND(MAX(MAX(vt0.c0)))))AND(COUNT('2107988243'))))OR(vt0.c1)))AND(COUNT(*))))AND(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((((vt0.c0 IN ()))AND(TOTAL(MIN(TOTAL(vt0.c0))))))OR(((((((((((((MAX(GROUP_CONCAT(COUNT(COUNT(TOTAL(NULL))))))AND(AVG(TOTAL(vt0.c1)))))AND(MAX(MAX(vt0.c0)))))AND(COUNT('2107988243'))))OR(vt0.c1)))AND(COUNT(*))))AND(MAX(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c0)))OR(vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ('FALSE') GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ('FALSE'))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((('FALSE') ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c1) NOT BETWEEN (vt0.c0) AND (MAX(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c1) NOT BETWEEN (vt0.c0) AND (MAX(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c1) NOT BETWEEN (vt0.c0) AND (MAX(COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (x'536f'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (x'536f'))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (x'536f'))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (UNLIKELY(DISTINCT ((((vt0.c0)OR(vt0.c1)))AND(x'')))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT ((((vt0.c0)OR(vt0.c1)))AND(x'')))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((UNLIKELY(DISTINCT ((((vt0.c0)OR(vt0.c1)))AND(x'')))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)-(DATETIME(vt0.c0, vt0.c0, vt0.c1)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY)-(DATETIME(vt0.c0, vt0.c0, vt0.c1)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)-(DATETIME(vt0.c0, vt0.c0, vt0.c1)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE CAST(AVG(COUNT(vt0.c1)) AS REAL)  WHEN SUM(vt0.c1) THEN AVG(TOTAL(COUNT(GROUP_CONCAT(MAX(vt0.c0))))) WHEN vt0.c0 THEN ((((((((COUNT(vt0.c1))AND(SUM(vt0.c0))))AND(TOTAL(MIN(TOTAL(vt0.c1))))))AND(SUM(vt0.c0))))AND(MAX(MIN(COUNT(COUNT(*)))))) WHEN AVG(MAX(vt0.c1)) THEN COUNT(*) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE CAST(AVG(COUNT(vt0.c1)) AS REAL)  WHEN SUM(vt0.c1) THEN AVG(TOTAL(COUNT(GROUP_CONCAT(MAX(vt0.c0))))) WHEN vt0.c0 THEN ((((((((COUNT(vt0.c1))AND(SUM(vt0.c0))))AND(TOTAL(MIN(TOTAL(vt0.c1))))))AND(SUM(vt0.c0))))AND(MAX(MIN(COUNT(COUNT(*)))))) WHEN AVG(MAX(vt0.c1)) THEN COUNT(*) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE CAST(AVG(COUNT(vt0.c1)) AS REAL)  WHEN SUM(vt0.c1) THEN AVG(TOTAL(COUNT(GROUP_CONCAT(MAX(vt0.c0))))) WHEN vt0.c0 THEN ((((((((COUNT(vt0.c1))AND(SUM(vt0.c0))))AND(TOTAL(MIN(TOTAL(vt0.c1))))))AND(SUM(vt0.c0))))AND(MAX(MIN(COUNT(COUNT(*)))))) WHEN AVG(MAX(vt0.c1)) THEN COUNT(*) END) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND (('572908099'))))==(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND (('572908099'))))=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c0)) AND (('572908099'))))=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((-2131633136, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) IN (json_insert(vt0.c1, vt0.c0, NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((-2131633136, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) IN (json_insert(vt0.c1, vt0.c0, NULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((-2131633136, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) IN (json_insert(vt0.c1, vt0.c0, NULL)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING SUM(CASE vt0.c0  WHEN vt0.c1 THEN GROUP_CONCAT(MIN(vt0.c0)) WHEN AVG(COUNT(*)) THEN MIN(vt0.c0) WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(TOTAL(x'50ab')) ELSE vt0.c1 END) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (SUM(CASE vt0.c0  WHEN vt0.c1 THEN GROUP_CONCAT(MIN(vt0.c0)) WHEN AVG(COUNT(*)) THEN MIN(vt0.c0) WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(TOTAL(x'50ab')) ELSE vt0.c1 END))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(CASE vt0.c0  WHEN vt0.c1 THEN GROUP_CONCAT(MIN(vt0.c0)) WHEN AVG(COUNT(*)) THEN MIN(vt0.c0) WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(TOTAL(x'50ab')) ELSE vt0.c1 END)) ISNULL);
SELECT TOTAL((((vt0.c1 IN (vt0.c1)))<=((~ (vt0.c0))))) FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)+(vt0.c1)))<((((vt0.c1))>=((vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)+(vt0.c1)))<((((vt0.c1))>=((vt0.c0)))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)+(vt0.c1)))<((((vt0.c1))>=((vt0.c0)))))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((NULL, NULL COLLATE NOCASE, (- (NULL))))>(((~ (vt0.c1)), json_valid(vt0.c1), ((vt0.c1) IS TRUE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((NULL, NULL COLLATE NOCASE, (- (NULL))))>(((~ (vt0.c1)), json_valid(vt0.c1), ((vt0.c1) IS TRUE))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((NULL, NULL COLLATE NOCASE, (- (NULL))))>(((~ (vt0.c1)), json_valid(vt0.c1), ((vt0.c1) IS TRUE))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (CASE ((vt0.c1)=(vt0.c1))  WHEN CAST(0.004752853854386063 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)IS(NULL)) THEN vt0.c0 WHEN CASE WHEN NULL THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) END) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (CASE ((vt0.c1)=(vt0.c1))  WHEN CAST(0.004752853854386063 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)IS(NULL)) THEN vt0.c0 WHEN CASE WHEN NULL THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE ((vt0.c1)=(vt0.c1))  WHEN CAST(0.004752853854386063 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)IS(NULL)) THEN vt0.c0 WHEN CASE WHEN NULL THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) END) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (json_patch(COUNT(*), AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((NOT (json_patch(COUNT(*), AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((NOT (json_patch(COUNT(*), AVG(vt0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (json_patch(COUNT(*), AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((NOT (json_patch(COUNT(*), AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((NOT (json_patch(COUNT(*), AVG(vt0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c1, NULL, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1))))<(CAST(vt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c1, NULL, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1))))<(CAST(vt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((((vt0.c1, NULL, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1))))<(CAST(vt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND (((((x''))=((vt0.c0))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND (((((x''))=((vt0.c0))))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND (((((x''))==((vt0.c0))))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((x'25721950')AND(CASE WHEN '' THEN vt0.c1 WHEN vt0.c0 THEN -2.3641267E7 WHEN vt0.c1 THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((x'25721950')AND(CASE WHEN '' THEN vt0.c1 WHEN vt0.c0 THEN -2.3641267E7 WHEN vt0.c1 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE (((((x'25721950')AND(CASE WHEN '' THEN vt0.c1 WHEN vt0.c0 THEN -2.3641267E7 WHEN vt0.c1 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((0.5529183953321968 IN ()))OR(CAST(x'409e' AS NUMERIC))))OR(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((0.5529183953321968 IN ()))OR(CAST(x'409e' AS NUMERIC))))OR(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((0.5529183953321968 IN ()))OR(CAST(x'409e' AS NUMERIC))))OR(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS NUMERIC)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST((vt0.c1 IN ()) AS NUMERIC)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST((vt0.c1 IN ()) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(CAST(vt0.c1 AS BLOB)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(CAST(vt0.c1 AS BLOB))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(CAST(vt0.c1 AS BLOB)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(CAST(vt0.c1 AS BLOB))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND('-555857759')))OR(vt0.c1)))OR(vt0.c1)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND('-555857759')))OR(vt0.c1)))OR(vt0.c1)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND('-555857759')))OR(vt0.c1)))OR(vt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))>>(((vt0.c0)!=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))>>(((vt0.c0)<>(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))>>(((vt0.c0)<>(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG('>D'))<=(TOTAL(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((AVG('>D'))<=(TOTAL(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((AVG('>D'))<=(TOTAL(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG('>D'))<=(TOTAL(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((AVG('>D'))<=(TOTAL(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((AVG('>D'))<=(TOTAL(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) END) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) END))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) END) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((((vt0.c1, vt0.c0, x''))!=((vt0.c1, vt0.c1, vt0.c1))) AS REAL)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c1, vt0.c0, x''))<>((vt0.c1, vt0.c1, vt0.c1))) AS REAL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c1, vt0.c0, x''))!=((vt0.c1, vt0.c1, vt0.c1))) AS REAL)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING NULL UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING NULL UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c1) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c1) NOT NULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((0.8841722876098178)/(vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((0.8841722876098178)/(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((0.8841722876098178)/(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (LTRIM((vt0.c0 IN ()), COALESCE(vt0.c0, vt0.c1))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (LTRIM((vt0.c0 IN ()), COALESCE(vt0.c0, vt0.c1))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((LTRIM((vt0.c0 IN ()), COALESCE(vt0.c0, vt0.c1))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((vt0.c1, vt0.c0, COUNT(*))) BETWEEN (((~ (MAX(MAX(vt0.c0)))), (((COUNT(*), vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, MAX(vt0.c1), 0.4410125712427785)) AND ((vt0.c1, SUM(MIN(vt0.c0)), SUM(vt0.c1)))), COUNT(*) COLLATE BINARY)) AND ((vt0.c0, AVG(NULL), AVG(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((((vt0.c1, vt0.c0, COUNT(*))) BETWEEN (((~ (MAX(MAX(vt0.c0)))), (((COUNT(*), vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, MAX(vt0.c1), 0.4410125712427785)) AND ((vt0.c1, SUM(MIN(vt0.c0)), SUM(vt0.c1)))), COUNT(*) COLLATE BINARY)) AND ((vt0.c0, AVG(NULL), AVG(vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((((vt0.c1, vt0.c0, COUNT(*))) BETWEEN (((~ (MAX(MAX(vt0.c0)))), (((COUNT(*), vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, MAX(vt0.c1), 0.4410125712427785)) AND ((vt0.c1, SUM(MIN(vt0.c0)), SUM(vt0.c1)))), COUNT(*) COLLATE BINARY)) AND ((vt0.c0, AVG(NULL), AVG(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (TYPEOF(vt0.c1)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (TYPEOF(vt0.c1)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TYPEOF(vt0.c1)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE RTRIM AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND ((vt0.c0)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND ((vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND ((vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MIN(AVG(GROUP_CONCAT(AVG(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(AVG(GROUP_CONCAT(AVG(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(AVG(GROUP_CONCAT(AVG(vt0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c1, vt0.c0)))>=(((vt0.c0 IN ()))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((TRIM(DISTINCT vt0.c1, vt0.c0)))>=(((vt0.c0 IN ()))))))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((((((TRIM(DISTINCT vt0.c1, vt0.c0)))>=(((vt0.c0 IN ()))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)>=(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)>=(vt0.c0)) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((0x66a46c97 COLLATE BINARY) ISNULL)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((0X66a46c97 COLLATE BINARY) ISNULL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((0X66a46c97 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ABS(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (ABS(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((ABS(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ABS(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (ABS(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((ABS(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))AND(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)+(vt0.c0)))AND(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0)))AND(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c0) IS TRUE))))AND(((vt0.c1) NOTNULL))))AND(CAST(0.5227923646822993 AS BLOB))))AND(((vt0.c1)/(vt0.c0))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c0) IS TRUE))))AND(((vt0.c1) NOTNULL))))AND(CAST(0.5227923646822993 AS BLOB))))AND(((vt0.c1)/(vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c0) IS TRUE))))AND(((vt0.c1) NOTNULL))))AND(CAST(0.5227923646822993 AS BLOB))))AND(((vt0.c1)/(vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(AVG(COUNT(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(AVG(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(AVG(COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN CAST(1.22902705E8 AS TEXT) THEN (('|_GR')GLOB(vt0.c1)) END) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN CAST(1.22902705E8 AS TEXT) THEN (('|_GR')GLOB(vt0.c1)) END))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN CAST(1.22902705E8 AS TEXT) THEN (('|_GR')GLOB(vt0.c1)) END) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN (vt0.c1)), (~ (vt0.c1)), (NOT (vt0.c1))))<=(((~ (vt0.c0)), ((vt0.c1)<(vt0.c1)), ((vt0.c0) ISNULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 IN (vt0.c1)), (~ (vt0.c1)), (NOT (vt0.c1))))<=(((~ (vt0.c0)), ((vt0.c1)<(vt0.c1)), ((vt0.c0) ISNULL))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 IN (vt0.c1)), (~ (vt0.c1)), (NOT (vt0.c1))))<=(((~ (vt0.c0)), ((vt0.c1)<(vt0.c1)), ((vt0.c0) ISNULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(((((x'')OR(SUM(COUNT(*)))))OR(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(((((x'')OR(SUM(COUNT(*)))))OR(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(((((x'')OR(SUM(COUNT(*)))))OR(vt0.c1)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((('1211719820', vt0.c1, vt0.c1, vt0.c1, vt0.c0))>=((0X32253395, vt0.c1, vt0.c1, vt0.c0, vt0.c1))))+((x'8761' IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((('1211719820', vt0.c1, vt0.c1, vt0.c1, vt0.c0))>=((0X32253395, vt0.c1, vt0.c1, vt0.c0, vt0.c1))))+((x'8761' IN ())))))) UNION ALL SELECT * FROM vt0 WHERE (((((((('1211719820', vt0.c1, vt0.c1, vt0.c1, vt0.c0))>=((0X32253395, vt0.c1, vt0.c1, vt0.c0, vt0.c1))))+((x'8761' IN ())))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (LOWER(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (LOWER(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (LOWER(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) IS TRUE) COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) IS TRUE) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(vt0.c0 COLLATE BINARY) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(vt0.c0 COLLATE BINARY) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1)GLOB(vt0.c1)) THEN vt0.c1 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c1)GLOB(vt0.c1)) THEN vt0.c1 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN ((vt0.c1)GLOB(vt0.c1)) THEN vt0.c1 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0))!=(('1647858036')))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0))<>(('1647858036')))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((CAST(vt0.c0 AS REAL))AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0))<>(('1647858036')))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c1 IN ())) NOT NULL)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1 IN ())) NOT NULL)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((vt0.c1 IN ())) NOT NULL)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)AND(TOTAL(vt0.c0))))OR(vt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)AND(TOTAL(vt0.c0))))OR(vt0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)AND(TOTAL(vt0.c0))))OR(vt0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)AND(TOTAL(vt0.c0))))OR(vt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)AND(TOTAL(vt0.c0))))OR(vt0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)AND(TOTAL(vt0.c0))))OR(vt0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM((((- (vt0.c1)))||(CAST(vt0.c1 AS BLOB)))) FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (SUBSTR(((vt0.c0) IS TRUE), vt0.c1 COLLATE BINARY)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (SUBSTR(((vt0.c0) IS TRUE), vt0.c1 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((SUBSTR(((vt0.c0) IS TRUE), vt0.c1 COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((~ (((vt0.c1) IS TRUE)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((~ (((vt0.c1) IS TRUE)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((~ (((vt0.c1) IS TRUE)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (0xffffffffc2e240f9 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (0Xffffffffc2e240f9 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((0Xffffffffc2e240f9 COLLATE RTRIM) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))>=((vt0.c1)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))>=((vt0.c1)))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))>=((vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX(GROUP_CONCAT(AVG(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX(GROUP_CONCAT(AVG(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX(GROUP_CONCAT(AVG(vt0.c1)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)/(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((- (vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((- (vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((- (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c1)))OR(x'')))AND(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN IFNULL('1015490385', vt0.c1) END) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE ((((((((vt0.c0)AND(vt0.c1)))OR(x'')))AND(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN IFNULL('1015490385', vt0.c1) END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE ((((((((vt0.c0)AND(vt0.c1)))OR(x'')))AND(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN IFNULL('1015490385', vt0.c1) END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (0.44051623782399796 IN (COUNT(vt0.c0), ((((0X6d0e6919)AND(AVG(vt0.c1))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((0.44051623782399796 IN (COUNT(vt0.c0), ((((0x6d0e6919)AND(AVG(vt0.c1))))AND(vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((0.44051623782399796 IN (COUNT(vt0.c0), ((((0x6d0e6919)AND(AVG(vt0.c1))))AND(vt0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (0.44051623782399796 IN (COUNT(vt0.c0), ((((0X6d0e6919)AND(AVG(vt0.c1))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((0.44051623782399796 IN (COUNT(vt0.c0), ((((0x6d0e6919)AND(AVG(vt0.c1))))AND(vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((0.44051623782399796 IN (COUNT(vt0.c0), ((((0x6d0e6919)AND(AVG(vt0.c1))))AND(vt0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0))>>(vt0.c1))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((IFNULL(DISTINCT vt0.c0, vt0.c0))>>(vt0.c1))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((IFNULL(DISTINCT vt0.c0, vt0.c0))>>(vt0.c1))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c1 AS REAL) WHEN (vt0.c0 IN (x'6ab8')) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c1 AS REAL) WHEN (vt0.c0 IN (x'6ab8')) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c1 AS REAL) WHEN (vt0.c0 IN (x'6ab8')) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(vt0.c0))) NOT BETWEEN (CASE WHEN MIN(MIN(SUM(vt0.c1))) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(NULL) THEN MAX(vt0.c0) WHEN MIN(TOTAL(vt0.c0)) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c1 THEN MIN(0.4776847601524149) WHEN '혊짱_f00' THEN MIN(vt0.c0) END) AND (MIN(vt0.c1))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(COUNT(vt0.c0))) NOT BETWEEN (CASE WHEN MIN(MIN(SUM(vt0.c1))) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(NULL) THEN MAX(vt0.c0) WHEN MIN(TOTAL(vt0.c0)) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c1 THEN MIN(0.4776847601524149) WHEN '혊짱_f00' THEN MIN(vt0.c0) END) AND (MIN(vt0.c1))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(COUNT(vt0.c0))) NOT BETWEEN (CASE WHEN MIN(MIN(SUM(vt0.c1))) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(NULL) THEN MAX(vt0.c0) WHEN MIN(TOTAL(vt0.c0)) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c1 THEN MIN(0.4776847601524149) WHEN '혊짱_f00' THEN MIN(vt0.c0) END) AND (MIN(vt0.c1)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((0x53fb5760)IS NOT(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((0X53fb5760)IS NOT(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((0X53fb5760)IS NOT(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((- (NULL)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((- (NULL)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((- (NULL)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((('d沗q/!') NOT BETWEEN (vt0.c1) AND (vt0.c0)))-(((vt0.c1)LIKE(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((('d沗q/!') NOT BETWEEN (vt0.c1) AND (vt0.c0)))-(((vt0.c1)LIKE(vt0.c0))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((('d沗q/!') NOT BETWEEN (vt0.c1) AND (vt0.c0)))-(((vt0.c1)LIKE(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(SUM(COUNT(COUNT(*)))))IS NOT(((MAX(MIN(MAX(TOTAL(MAX(vt0.c0))))))==(-360825977)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((MAX(SUM(COUNT(COUNT(*)))))IS NOT(((MAX(MIN(MAX(TOTAL(MAX(vt0.c0))))))==(-360825977)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((MAX(SUM(COUNT(COUNT(*)))))IS NOT(((MAX(MIN(MAX(TOTAL(MAX(vt0.c0))))))=(-360825977))))) ISNULL);
SELECT ALL SUM((NOT (((vt0.c1)&(vt0.c0))))) FROM vt0;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))GLOB(vt0.c1 COLLATE BINARY))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS NUMERIC))GLOB(vt0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))GLOB(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))=(vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))==(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))==(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN ()))IS(((vt0.c0)>(vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1 IN ()))IS(((vt0.c0)>(vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1 IN ()))IS(((vt0.c0)>(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(GROUP_CONCAT(AVG(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(GROUP_CONCAT(AVG(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(GROUP_CONCAT(AVG(vt0.c1))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) IS TRUE)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((+ (vt0.c1))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((+ (vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((+ (vt0.c1))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL((((0.16165240589490182, SUM(vt0.c0), vt0.c1))<=((vt0.c1, AVG(COUNT(*)), vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((((0.16165240589490182, SUM(vt0.c0), vt0.c1))<=((vt0.c1, AVG(COUNT(*)), vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL((((0.16165240589490182, SUM(vt0.c0), vt0.c1))<=((vt0.c1, AVG(COUNT(*)), vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (json_insert(vt0.c0, 0.282174549569587, vt0.c1)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((- (vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (json_insert(vt0.c0, 0.282174549569587, vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((- (vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (json_insert(vt0.c0, 0.282174549569587, vt0.c1)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN (~ (-1847631491)) THEN vt0.c0 END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN (~ (-1847631491)) THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN (~ (-1847631491)) THEN vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) THEN (+ (vt0.c0)) WHEN x'' THEN ((vt0.c0) NOT BETWEEN (794677243) AND (vt0.c1)) WHEN (+ (vt0.c0)) THEN (vt0.c1 IN ()) WHEN (NOT (vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) WHEN (- (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) THEN (+ (vt0.c0)) WHEN x'' THEN ((vt0.c0) NOT BETWEEN (794677243) AND (vt0.c1)) WHEN (+ (vt0.c0)) THEN (vt0.c1 IN ()) WHEN (NOT (vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) WHEN (- (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) THEN (+ (vt0.c0)) WHEN x'' THEN ((vt0.c0) NOT BETWEEN (794677243) AND (vt0.c1)) WHEN (+ (vt0.c0)) THEN (vt0.c1 IN ()) WHEN (NOT (vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) WHEN (- (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (MAX(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (MAX(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (MAX(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((TYPEOF(vt0.c0)) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((TYPEOF(vt0.c0)) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((TYPEOF(vt0.c0)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ('1303971615') GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ('1303971615'))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((('1303971615') ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING AVG(AVG(vt0.c1)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (AVG(AVG(vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((AVG(AVG(vt0.c1))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)!=(vt0.c1))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0)!=(vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0)<>(vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING SUM(GROUP_CONCAT('2129012582')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT('2129012582')))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(GROUP_CONCAT('2129012582'))) ISNULL);
SELECT SUM(x'dbfd') FROM vt0 ORDER BY NULL ASC  NULLS LAST;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((((('0.5227923646822993')AND(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((((('0.5227923646822993')AND(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOT NULL)))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((((('0.5227923646822993')AND(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c0) ISNULL))))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOT NULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)OR(((vt0.c0) IS TRUE))))AND(load_extension(vt0.c1, vt0.c1)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)OR(((vt0.c0) IS TRUE))))AND(load_extension(vt0.c1, vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1)OR(((vt0.c0) IS TRUE))))AND(load_extension(vt0.c1, vt0.c1)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(CAST(MIN(vt0.c0) AS TEXT)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(CAST(MIN(vt0.c0) AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(CAST(MIN(vt0.c0) AS TEXT))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((~ ((- (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((~ ((- (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((~ ((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (x'46d0') UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (x'46d0'))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((x'46d0') ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))<(((- (vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((CAST(vt0.c0 AS REAL)))<(((- (vt0.c1)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((CAST(vt0.c0 AS REAL)))<(((- (vt0.c1)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(((TOTAL(vt0.c0))&(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((TOTAL(vt0.c0))&(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((TOTAL(vt0.c0))&(vt0.c1)))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(((vt0.c0)AND('1342058276')))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(((vt0.c0)AND('1342058276')))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(((vt0.c0)AND('1342058276')))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN 1.212430875E9 END IN (TRIM(DISTINCT vt0.c0, vt0.c1)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CASE vt0.c1  WHEN vt0.c1 THEN 1.212430875E9 END IN (TRIM(DISTINCT vt0.c0, vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c1 THEN 1.212430875E9 END IN (TRIM(DISTINCT vt0.c0, vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(ABS(DISTINCT vt0.c0) AS NUMERIC)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(ABS(DISTINCT vt0.c0) AS NUMERIC)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(ABS(DISTINCT vt0.c0) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((('-179825429')AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR((vt0.c0 IN ())))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((('-179825429')AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR((vt0.c0 IN ())))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((('-179825429')AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR((vt0.c0 IN ())))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ (((vt0.c1)AND(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ (((vt0.c1)AND(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ (((vt0.c1)AND(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)+(CAST(vt0.c1 AS NUMERIC)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)+(CAST(vt0.c1 AS NUMERIC)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)+(CAST(vt0.c1 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(((AVG(TOTAL(TOTAL(vt0.c1))))IS NOT(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(((AVG(TOTAL(TOTAL(vt0.c1))))IS NOT(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(((AVG(TOTAL(TOTAL(vt0.c1))))IS NOT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NULLIF(x'8f0f2000', vt0.c1) IN (CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((NULLIF(x'8f0f2000', vt0.c1) IN (CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((NULLIF(x'8f0f2000', vt0.c1) IN (CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('569327769') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('569327769'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('569327769') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&(CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)&(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)&(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*))>(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((COUNT(*))>(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COUNT(*))>(COUNT(vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*))>(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((COUNT(*))>(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COUNT(*))>(COUNT(vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0X445ef229 WHEN vt0.c1 THEN x'' END COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0X445ef229 WHEN vt0.c1 THEN x'' END COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0X445ef229 WHEN vt0.c1 THEN x'' END COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.7018431166928806 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)AND(vt0.c1)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.7018431166928806 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)AND(vt0.c1)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.7018431166928806 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)AND(vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((vt0.c0)|(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt0.c0)|(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt0.c0)|(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL MAX((((- (vt0.c1)))GLOB(((vt0.c1)==(vt0.c0))))) FROM vt0;
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (CAST(json_remove(vt0.c1, vt0.c0) AS TEXT)) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CAST(json_remove(vt0.c1, vt0.c0) AS TEXT)))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((CAST(json_remove(vt0.c1, vt0.c0) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((+ ('1408980832'))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((+ ('1408980832'))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((+ ('1408980832'))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((0xffffffff90129c81) IS FALSE))OR((vt0.c1 IN ()))))OR(UNLIKELY(vt0.c0)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((((0xffffffff90129c81) IS FALSE))OR((vt0.c1 IN ()))))OR(UNLIKELY(vt0.c0)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((0Xffffffff90129c81) IS FALSE))OR((vt0.c1 IN ()))))OR(UNLIKELY(vt0.c0)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((((vt0.c0) IS FALSE)) IS TRUE)) FROM vt0 ORDER BY ((((-1134959070)&(vt0.c1)))<>(((vt0.c1) NOT NULL))) ASC, ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('⾯N<<') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ('⾯N<<'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('⾯N<<') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)) END) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)) END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)) END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING IFNULL((((AVG(vt0.c0)))!=((MAX(MIN(AVG(vt0.c0)))))), GROUP_CONCAT(COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (IFNULL((((AVG(vt0.c0)))<>((MAX(MIN(AVG(vt0.c0)))))), GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((IFNULL((((AVG(vt0.c0)))<>((MAX(MIN(AVG(vt0.c0)))))), GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt0.c0)AND(vt0.c1)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt0.c0)AND(vt0.c1)))))))) UNION ALL SELECT vt0.c1 FROM vt0 NOT INDEXED WHERE ((((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt0.c0)AND(vt0.c1)))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((((vt0.c1)>=(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((((vt0.c1)>=(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((((vt0.c1)>=(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((+ (((vt0.c1)|(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((+ (((vt0.c1)|(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((+ (((vt0.c1)|(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(vt0.c1))%(vt0.c1))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(vt0.c1))%(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(vt0.c1))%(vt0.c1)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c1)))>>(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0, vt0.c1)))>>(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0, vt0.c1)))>>(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((~ ((vt0.c0 IN ())))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((~ ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((vt0.c1 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((NOT (x'')) IN ())) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((NOT (x'')) IN ())))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((NOT (x'')) IN ())) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(TOTAL(COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(TOTAL(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(TOTAL(COUNT(vt0.c0)))) ISNULL);
SELECT ALL MAX((('<Z	F/㏑') NOT BETWEEN (vt0.c0) AND (((((0xffffffffbb548225)AND(vt0.c0)))AND(vt0.c0))))) FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((NULL)/((((vt0.c0))<((vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((NULL)/((((vt0.c0))<((vt0.c1)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((NULL)/((((vt0.c0))<((vt0.c1)))))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((('7,+') NOT NULL)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((('7,+') NOT NULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((('7,+') NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND (((+ (vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND (((+ (vt0.c1)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND (((+ (vt0.c1)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG('-113348523') UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG('-113348523'))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG('-113348523')) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG('-113348523') UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG('-113348523'))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG('-113348523')) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (json_extract(vt0.c0, vt0.c1, vt0.c1, vt0.c1) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_extract(vt0.c0, vt0.c1, vt0.c1, vt0.c1) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((json_extract(vt0.c0, vt0.c1, vt0.c1, vt0.c1) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0) ISNULL) THEN LIKE(x'', vt0.c1) WHEN (vt0.c1 IN ()) THEN ((0.8569310041937259)<<(0.27916097467744205)) WHEN (((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE (+ (vt0.c0)) END) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0) ISNULL) THEN LIKE(x'', vt0.c1) WHEN (vt0.c1 IN ()) THEN ((0.8569310041937259)<<(0.27916097467744205)) WHEN (((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE (+ (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0) ISNULL) THEN LIKE(x'', vt0.c1) WHEN (vt0.c1 IN ()) THEN ((0.8569310041937259)<<(0.27916097467744205)) WHEN (((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE (+ (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (LIKE((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, '-')) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (LIKE((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, '-')))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((LIKE((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, '-')) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(COUNT(vt0.c1)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(vt0.c1))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (CAST((('0.24490788633088834')&(x'')) AS NUMERIC)) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CAST((('0.24490788633088834')&(x'')) AS NUMERIC)))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((CAST((('0.24490788633088834')&(x'')) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((('g>o1)')) BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS NOT(NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((('g>o1)')) BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS NOT(NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((('g>o1)')) BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS NOT(NULL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (vt0.c0 IN ()) THEN ((vt0.c1)AND(vt0.c0)) WHEN CAST(x'' AS BLOB) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN (vt0.c1 IN ()) THEN TYPEOF(vt0.c1) END) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) IS TRUE)  WHEN (vt0.c0 IN ()) THEN ((vt0.c1)AND(vt0.c0)) WHEN CAST(x'' AS BLOB) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN (vt0.c1 IN ()) THEN TYPEOF(vt0.c1) END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED WHERE (((CASE ((vt0.c0) IS TRUE)  WHEN (vt0.c0 IN ()) THEN ((vt0.c1)AND(vt0.c0)) WHEN CAST(x'' AS BLOB) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN (vt0.c1 IN ()) THEN TYPEOF(vt0.c1) END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING TOTAL(((vt0.c1) BETWEEN (vt0.c1) AND (COUNT(*)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(((vt0.c1) BETWEEN (vt0.c1) AND (COUNT(*)))))) UNION ALL SELECT vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c1 HAVING ((TOTAL(((vt0.c1) BETWEEN (vt0.c1) AND (COUNT(*))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((+ ((NULL IN ())))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((+ ((NULL IN ())))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((+ ((NULL IN ())))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (x'6656') UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (x'6656'))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((x'6656') ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 END)OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1)*(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c1 THEN vt0.c1 END)OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1)*(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((CASE WHEN vt0.c1 THEN vt0.c1 END)OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1)*(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) BETWEEN ((((vt0.c1, vt0.c1, NULL))==((vt0.c0, vt0.c1, vt0.c0)))) AND (NULLIF(vt0.c0, NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS TEXT)) BETWEEN ((((vt0.c1, vt0.c1, NULL))==((vt0.c0, vt0.c1, vt0.c0)))) AND (NULLIF(vt0.c0, NULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c1 AS TEXT)) BETWEEN ((((vt0.c1, vt0.c1, NULL))==((vt0.c0, vt0.c1, vt0.c0)))) AND (NULLIF(vt0.c0, NULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0 IN (vt0.c1)) IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 IN (vt0.c1)) IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0 IN (vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST('83945851' AS REAL)) IS FALSE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST('83945851' AS REAL)) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST('83945851' AS REAL)) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (GROUP_CONCAT(vt0.c1) IN ()) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((GROUP_CONCAT(vt0.c1) IN ()))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((GROUP_CONCAT(vt0.c1) IN ())) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (GROUP_CONCAT(vt0.c1) IN ()) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((GROUP_CONCAT(vt0.c1) IN ()))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((GROUP_CONCAT(vt0.c1) IN ())) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1)IS(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1)IS(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1)IS(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1 IN ()), ((vt0.c0)>(vt0.c1)), ((vt0.c0) NOT NULL)))<((CASE WHEN '-1253446406' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, 1.342058276E9)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1 IN ()), ((vt0.c0)>(vt0.c1)), ((vt0.c0) NOT NULL)))<((CASE WHEN '-1253446406' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, 1.342058276E9)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1 IN ()), ((vt0.c0)>(vt0.c1)), ((vt0.c0) NOT NULL)))<((CASE WHEN '-1253446406' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, 1.342058276E9)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((vt0.c0)>>((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0)>>((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0)>>((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(MAX(COUNT(GROUP_CONCAT(vt0.c1)))) AS BLOB) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(MAX(COUNT(GROUP_CONCAT(vt0.c1)))) AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(MAX(COUNT(GROUP_CONCAT(vt0.c1)))) AS BLOB)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE NULL  WHEN vt0.c1 COLLATE BINARY THEN '' WHEN (((vt0.c1))>((vt0.c1))) THEN 0.6656530778631422 WHEN (((vt0.c0))>=((vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE NULL  WHEN vt0.c1 COLLATE BINARY THEN '' WHEN (((vt0.c1))>((vt0.c1))) THEN 0.6656530778631422 WHEN (((vt0.c0))>=((vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE NULL  WHEN vt0.c1 COLLATE BINARY THEN '' WHEN (((vt0.c1))>((vt0.c1))) THEN 0.6656530778631422 WHEN (((vt0.c0))>=((vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS BLOB)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((NOT (CAST(vt0.c1 AS BLOB)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((NOT (CAST(vt0.c1 AS BLOB)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(vt0.c1) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(vt0.c1)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(vt0.c1) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(vt0.c1)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.10198481274380344)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.10198481274380344)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.10198481274380344)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)%(vt0.c1)))AND(((vt0.c1) NOT NULL))))AND((((vt0.c0))=((vt0.c1))))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)%(vt0.c1)))AND(((vt0.c1) NOT NULL))))AND((((vt0.c0))==((vt0.c1))))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)%(vt0.c1)))AND(((vt0.c1) NOT NULL))))AND((((vt0.c0))==((vt0.c1))))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(vt0.c1))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING SUM(COUNT(AVG(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(COUNT(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(COUNT(AVG(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c1) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((~ (((vt0.c0)<<(vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)<<(vt0.c1))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((~ (((vt0.c0)<<(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((NOT (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((7.94677243E8) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (json_array(vt0.c1, vt0.c0)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((7.94677243E8) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (json_array(vt0.c1, vt0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((7.94677243E8) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (json_array(vt0.c1, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(AVG(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(AVG(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(AVG(vt0.c1))) ISNULL);
SELECT ALL MAX(vt0.c0) FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((756571))<((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((756571))<((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((756571))<((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>((vt0.c0 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)>((vt0.c0 IN ())))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)>((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.6482858083807594)))  WHEN (NOT (vt0.c1)) THEN (((vt0.c0))>=((vt0.c0))) WHEN ((((vt0.c1)OR(vt0.c1)))AND(x'')) THEN ((vt0.c0) IS FALSE) WHEN (NOT (vt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.6482858083807594)))  WHEN (NOT (vt0.c1)) THEN (((vt0.c0))>=((vt0.c0))) WHEN ((((vt0.c1)OR(vt0.c1)))AND(x'')) THEN ((vt0.c0) IS FALSE) WHEN (NOT (vt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.6482858083807594)))  WHEN (NOT (vt0.c1)) THEN (((vt0.c0))>=((vt0.c0))) WHEN ((((vt0.c1)OR(vt0.c1)))AND(x'')) THEN ((vt0.c0) IS FALSE) WHEN (NOT (vt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-615368298') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-615368298'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('-615368298') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT NULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT NULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((TOTAL(vt0.c1)))<=(((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((COUNT(*), SUM(COUNT(*)), vt0.c0)) AND ((vt0.c1, vt0.c1, x'')))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((TOTAL(vt0.c1)))<=(((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((COUNT(*), SUM(COUNT(*)), vt0.c0)) AND ((vt0.c1, vt0.c1, x'')))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((TOTAL(vt0.c1)))<=(((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((COUNT(*), SUM(COUNT(*)), vt0.c0)) AND ((vt0.c1, vt0.c1, x''))))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((vt0.c0, (((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c1))), ''))>((UNICODE(vt0.c0), CAST(vt0.c0 AS NUMERIC), CAST(x'' AS NUMERIC))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0, (((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c1))), ''))>((UNICODE(vt0.c0), CAST(vt0.c0 AS NUMERIC), CAST(x'' AS NUMERIC))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((vt0.c0, (((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c1))), ''))>((UNICODE(vt0.c0), CAST(vt0.c0 AS NUMERIC), CAST(x'' AS NUMERIC))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((vt0.c1)<=(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt0.c1)<=(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt0.c1)<=(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((vt0.c1)<=(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt0.c1)<=(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt0.c1)<=(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ ((- (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ ((- (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ ((- (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND (((vt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND (((vt0.c1 IN ()))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND (((vt0.c1 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ('72156867'))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((- (vt0.c1))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ('72156867'))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((- (vt0.c1))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ('72156867'))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(((GROUP_CONCAT(vt0.c1)) NOT NULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((GROUP_CONCAT(vt0.c1)) NOT NULL)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((GROUP_CONCAT(vt0.c1)) NOT NULL))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN (((0.5504279469692273) IS FALSE)) AND (((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((NOT (vt0.c1))) NOT BETWEEN (((0.5504279469692273) IS FALSE)) AND (((vt0.c0) IS TRUE)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c1))) NOT BETWEEN (((0.5504279469692273) IS FALSE)) AND (((vt0.c0) IS TRUE)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1, NULL, vt0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1, NULL, vt0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1, NULL, vt0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((0.3143420592691747, NULL, vt0.c1))==((vt0.c0, vt0.c1, vt0.c1)))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0) NOT NULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((0.3143420592691747, NULL, vt0.c1))=((vt0.c0, vt0.c1, vt0.c1)))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((0.3143420592691747, NULL, vt0.c1))=((vt0.c0, vt0.c1, vt0.c1)))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)<=(vt0.c1)) WHEN (vt0.c1 IN ()) THEN (~ (NULL)) WHEN (~ (vt0.c0)) THEN (- (vt0.c0)) WHEN PRINTF(vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN json_insert(vt0.c0, vt0.c0, vt0.c1) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((x'')/(vt0.c1)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)<=(vt0.c1)) WHEN (vt0.c1 IN ()) THEN (~ (NULL)) WHEN (~ (vt0.c0)) THEN (- (vt0.c0)) WHEN PRINTF(vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN json_insert(vt0.c0, vt0.c0, vt0.c1) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((x'')/(vt0.c1)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)<=(vt0.c1)) WHEN (vt0.c1 IN ()) THEN (~ (NULL)) WHEN (~ (vt0.c0)) THEN (- (vt0.c0)) WHEN PRINTF(vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN json_insert(vt0.c0, vt0.c0, vt0.c1) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((x'')/(vt0.c1)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN ()))/((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1 IN ()))/((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN ()))/((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((- (vt0.c1 COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c1 COLLATE RTRIM))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (vt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN 'a2' ELSE vt0.c1 END) NOTNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c0 THEN 'a2' ELSE vt0.c1 END) NOTNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN 'a2' ELSE vt0.c1 END) NOTNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, -259915444, vt0.c0))))) AND ((IFNULL(vt0.c1, vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, -259915444, vt0.c0))))) AND ((IFNULL(vt0.c1, vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, -259915444, vt0.c0))))) AND ((IFNULL(vt0.c1, vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING UNLIKELY(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (UNLIKELY(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((UNLIKELY(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING UNLIKELY(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (UNLIKELY(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((UNLIKELY(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 NOT INDEXED WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (x'7fe10b4c')) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (x'7fe10b4c')) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (x'7fe10b4c')) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND (((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND (((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((NULL, ((vt0.c1)&(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE '72156867'  WHEN vt0.c0 THEN vt0.c1 ELSE x'54c0' END, (((vt0.c0))<((vt0.c0))), (vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((NULL, ((vt0.c1)&(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE '72156867'  WHEN vt0.c0 THEN vt0.c1 ELSE x'54c0' END, (((vt0.c0))<((vt0.c0))), (vt0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((NULL, ((vt0.c1)&(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE '72156867'  WHEN vt0.c0 THEN vt0.c1 ELSE x'54c0' END, (((vt0.c0))<((vt0.c0))), (vt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)/(vt0.c1)))|(((0.48300299242344347)|(vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)/(vt0.c1)))|(((0.48300299242344347)|(vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1)/(vt0.c1)))|(((0.48300299242344347)|(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(((vt0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(((vt0.c0) NOT NULL))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(((vt0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(((vt0.c0) NOT NULL))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) ELSE CAST(vt0.c0 AS REAL) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((vt0.c1) NOT NULL)  WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) ELSE CAST(vt0.c0 AS REAL) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((vt0.c1) NOT NULL)  WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) ELSE CAST(vt0.c0 AS REAL) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) ISNULL))>(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) ISNULL))>(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) ISNULL))>(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ('-1847631491') GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ('-1847631491'))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((('-1847631491') ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(GROUP_CONCAT(MIN(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(GROUP_CONCAT(MIN(vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1)%(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)%(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE CAST(x'45f9e264082d' AS NUMERIC)  WHEN '*fRO6?NYX' THEN ((vt0.c0)/(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE CAST(x'45f9e264082d' AS NUMERIC)  WHEN '*fRO6?NYX' THEN ((vt0.c0)/(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE CAST(x'45f9e264082d' AS NUMERIC)  WHEN '*fRO6?NYX' THEN ((vt0.c0)/(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((x'' IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((x'' IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((x'' IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(SUM(SUM(vt0.c1))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(SUM(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(SUM(SUM(vt0.c1)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)&(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)&(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))<=((x'74b3' IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))<=((x'74b3' IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))<=((x'74b3' IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(((AVG(vt0.c1)) ISNULL)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(((AVG(vt0.c1)) ISNULL)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(((AVG(vt0.c1)) ISNULL))) ISNULL);
SELECT ALL TOTAL(((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (((vt0.c1) IS FALSE)) AND (vt0.c0))) FROM vt0 ORDER BY vt0.c1  NULLS FIRST, vt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN 0.546537184056642 THEN (vt0.c0 IN (vt0.c0)) ELSE TRIM(DISTINCT vt0.c0, vt0.c1) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN 0.546537184056642 THEN (vt0.c0 IN (vt0.c0)) ELSE TRIM(DISTINCT vt0.c0, vt0.c1) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN 0.546537184056642 THEN (vt0.c0 IN (vt0.c0)) ELSE TRIM(DISTINCT vt0.c0, vt0.c1) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL))>=(GLOB(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))>=(GLOB(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))>=(GLOB(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((('b')IS NOT(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((('b')IS NOT(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((('b')IS NOT(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(TOTAL(MAX(TOTAL(COUNT(MAX(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(TOTAL(MAX(TOTAL(COUNT(MAX(vt0.c1)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(TOTAL(MAX(TOTAL(COUNT(MAX(vt0.c1))))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)*(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY)*(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)*(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)-(vt0.c0)))AND(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))))AND((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 NOT INDEXED WHERE ((NOT (((((((vt0.c0)-(vt0.c0)))AND(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))))AND((vt0.c1 IN ())))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)-(vt0.c0)))AND(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))))AND((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0, 0Xfffffffffdca995c, vt0.c1, 'Y', vt0.c0)) NOT BETWEEN ((((vt0.c1) ISNULL), NULL COLLATE BINARY, ((((1786849688)AND(vt0.c0)))AND(vt0.c0)), 0.9684528438641179, (vt0.c1 IN (vt0.c0, 1.786849688E9)))) AND (('⦚䭁2', ((vt0.c1) IS FALSE), (vt0.c0 IN ()), ((vt0.c1) NOT NULL), vt0.c1)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, 0Xfffffffffdca995c, vt0.c1, 'Y', vt0.c0)) NOT BETWEEN ((((vt0.c1) ISNULL), NULL COLLATE BINARY, ((((1786849688)AND(vt0.c0)))AND(vt0.c0)), 0.9684528438641179, (vt0.c1 IN (vt0.c0, 1.786849688E9)))) AND (('⦚䭁2', ((vt0.c1) IS FALSE), (vt0.c0 IN ()), ((vt0.c1) NOT NULL), vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0, 0Xfffffffffdca995c, vt0.c1, 'Y', vt0.c0)) NOT BETWEEN ((((vt0.c1) ISNULL), NULL COLLATE BINARY, ((((1786849688)AND(vt0.c0)))AND(vt0.c0)), 0.9684528438641179, (vt0.c1 IN (vt0.c0, 1.786849688E9)))) AND (('⦚䭁2', ((vt0.c1) IS FALSE), (vt0.c0 IN ()), ((vt0.c1) NOT NULL), vt0.c1)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.736014682030719))!=((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((LIKELIHOOD(DISTINCT vt0.c0, 0.736014682030719))!=((+ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.736014682030719))!=((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING IFNULL(CAST(vt0.c1 AS REAL), '-1389636516') UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (IFNULL(CAST(vt0.c1 AS REAL), '-1389636516'))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((IFNULL(CAST(vt0.c1 AS REAL), '-1389636516')) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING IFNULL(CAST(vt0.c1 AS REAL), '-1389636516') UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (IFNULL(CAST(vt0.c1 AS REAL), '-1389636516'))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((IFNULL(CAST(vt0.c1 AS REAL), '-1389636516')) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((vt0.c1 IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((vt0.c1 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)>>((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1)>>((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)>>((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) ISNULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0) IS TRUE)) ISNULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(x'') UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(x''))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(x'')) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(x'') UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(x''))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(x'')) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX(((((vt0.c1) IS FALSE))*(TOTAL_CHANGES()))) FROM vt0 ORDER BY CAST((vt0.c0 IN (0.3506717138214033)) AS BLOB) DESC;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, x'cfc45d2d', -2.131633136E9)) AND ((NULL, vt0.c0, vt0.c0)))) BETWEEN (vt0.c1) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, x'cfc45d2d', -2.131633136E9)) AND ((NULL, vt0.c0, vt0.c0)))) BETWEEN (vt0.c1) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, x'cfc45d2d', -2.131633136E9)) AND ((NULL, vt0.c0, vt0.c0)))) BETWEEN (vt0.c1) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE ((vt0.c1) IS FALSE)  WHEN CAST(vt0.c0 AS INTEGER) THEN UPPER(DISTINCT vt0.c1) END) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE ((vt0.c1) IS FALSE)  WHEN CAST(vt0.c0 AS INTEGER) THEN UPPER(DISTINCT vt0.c1) END))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE ((vt0.c1) IS FALSE)  WHEN CAST(vt0.c0 AS INTEGER) THEN UPPER(DISTINCT vt0.c1) END) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c1)=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((~ (((vt0.c1)==(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c1)==(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(AVG(COUNT(*))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((NOT (COUNT(AVG(COUNT(*))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((NOT (COUNT(AVG(COUNT(*)))))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((+ (x''))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((+ (x''))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((+ (x''))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))<(CAST(vt0.c1 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))<(CAST(vt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))<(CAST(vt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN (NOT (vt0.c1)) END) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN (NOT (vt0.c1)) END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN (NOT (vt0.c1)) END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(x'') AS REAL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(x'') AS REAL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(x'') AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(x'') AS REAL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(x'') AS REAL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(x'') AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(((vt0.c1) BETWEEN (MAX(vt0.c1)) AND (SUM(SUM(AVG(MAX(AVG(TOTAL(vt0.c1))))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(((vt0.c1) BETWEEN (MAX(vt0.c1)) AND (SUM(SUM(AVG(MAX(AVG(TOTAL(vt0.c1))))))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(((vt0.c1) BETWEEN (MAX(vt0.c1)) AND (SUM(SUM(AVG(MAX(AVG(TOTAL(vt0.c1)))))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))<>((vt0.c1 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))<>((vt0.c1 COLLATE BINARY)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))!=((vt0.c1 COLLATE BINARY)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, NULL, vt0.c0, vt0.c1)))) AND (((vt0.c1)&(x''))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, NULL, vt0.c0, vt0.c1)))) AND (((vt0.c1)&(x''))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, NULL, vt0.c0, vt0.c1)))) AND (((vt0.c1)&(x''))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('0.3143420592691747') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('0.3143420592691747'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('0.3143420592691747') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(GROUP_CONCAT(AVG(vt0.c1))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(GROUP_CONCAT(AVG(vt0.c1))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(GROUP_CONCAT(AVG(vt0.c1)))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((0.5855318691401471 COLLATE NOCASE IN (x'', LIKELY(DISTINCT vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((0.5855318691401471 COLLATE NOCASE IN (x'', LIKELY(DISTINCT vt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((0.5855318691401471 COLLATE NOCASE IN (x'', LIKELY(DISTINCT vt0.c1)))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0)GLOB((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)GLOB((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)GLOB((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<=((vt0.c1 COLLATE NOCASE)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<=((vt0.c1 COLLATE NOCASE)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<=((vt0.c1 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (0.6258905021786659) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (0.6258905021786659))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((0.6258905021786659) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, x''))))*(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, x''))))*(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, x''))))*(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1)GLOB((vt0.c1 IN (vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1)GLOB((vt0.c1 IN (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)GLOB((vt0.c1 IN (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((TOTAL(MAX(SUM(vt0.c0))))+(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((TOTAL(MAX(SUM(vt0.c0))))+(GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((TOTAL(MAX(SUM(vt0.c0))))+(GROUP_CONCAT(vt0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((SQLITE_COMPILEOPTION_GET(vt0.c1) IN (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((SQLITE_COMPILEOPTION_GET(vt0.c1) IN (CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((SQLITE_COMPILEOPTION_GET(vt0.c1) IN (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_extract(((x'')*(vt0.c1)), CAST(vt0.c1 AS TEXT), (- (vt0.c0)), ((vt0.c1)AND(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_extract(((x'')*(vt0.c1)), CAST(vt0.c1 AS TEXT), (- (vt0.c0)), ((vt0.c1)AND(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_extract(((x'')*(vt0.c1)), CAST(vt0.c1 AS TEXT), (- (vt0.c0)), ((vt0.c1)AND(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((8.1516827E7)*(0.8534697063898856))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((8.1516827E7)*(0.8534697063898856))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((8.1516827E7)*(0.8534697063898856))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(TRIM(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(TRIM(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(TRIM(vt0.c1))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(TRIM(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(TRIM(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(TRIM(vt0.c1))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (('BjdO_' IN ())) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (('BjdO_' IN ())))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((('BjdO_' IN ())) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c1)))) BETWEEN (vt0.c0) AND ((+ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c0))!=((vt0.c1)))) BETWEEN (vt0.c0) AND ((+ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c0))<>((vt0.c1)))) BETWEEN (vt0.c0) AND ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1))) BETWEEN ((NOT (1.786849688E9))) AND ((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c0, vt0.c0, vt0.c0)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)<<(vt0.c1))) BETWEEN ((NOT (1.786849688E9))) AND ((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1)<<(vt0.c1))) BETWEEN ((NOT (1.786849688E9))) AND ((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(AVG(TOTAL(MAX(AVG(MIN(COUNT(*))))))))>(MIN(AVG(0.9412997454034586)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((MIN(AVG(TOTAL(MAX(AVG(MIN(COUNT(*))))))))>(MIN(AVG(0.9412997454034586)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((MIN(AVG(TOTAL(MAX(AVG(MIN(COUNT(*))))))))>(MIN(AVG(0.9412997454034586))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(DATE(vt0.c1, vt0.c0, '') AS TEXT)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(DATE(vt0.c1, vt0.c0, '') AS TEXT)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(DATE(vt0.c1, vt0.c0, '') AS TEXT)) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c1, 0.8204219193080862) COLLATE BINARY) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT vt0.c1, 0.8204219193080862) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.8204219193080862) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS TEXT)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(SUM(MAX(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(SUM(MAX(COUNT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(SUM(MAX(COUNT(vt0.c1))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS FALSE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c1) ISNULL)) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) ISNULL)) IS FALSE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0 IN ())))<>((MAX(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0 IN ())))<>((MAX(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0 IN ())))<>((MAX(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c0)) BETWEEN (((x'5de0') BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c1 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((SQLITE_COMPILEOPTION_USED(vt0.c0)) BETWEEN (((x'5de0') BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c1 AS REAL)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_USED(vt0.c0)) BETWEEN (((x'5de0') BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((+ ((0.5227923646822993 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((+ ((0.5227923646822993 IN ())))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((+ ((0.5227923646822993 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)|(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1)|(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)|(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((NULL) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((NULL) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((NULL) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING HEX(DISTINCT COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING (NOT (HEX(DISTINCT COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((HEX(DISTINCT COUNT(*))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING HEX(DISTINCT COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING (NOT (HEX(DISTINCT COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((HEX(DISTINCT COUNT(*))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((x'')<<(NULL))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((x'')<<(NULL))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((x'')<<(NULL))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL((- (vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL((- (vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL((- (vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL((- (vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL((- (vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL((- (vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((- (vt0.c1)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((- (vt0.c1)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((- (vt0.c1)) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) ISNULL)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) ISNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (NULL) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((SUM(vt0.c0)))==((vt0.c0 COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((SUM(vt0.c0)))==((vt0.c0 COLLATE BINARY))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((SUM(vt0.c0)))=((vt0.c0 COLLATE BINARY)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((SUM(vt0.c0)))==((vt0.c0 COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((SUM(vt0.c0)))==((vt0.c0 COLLATE BINARY))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((SUM(vt0.c0)))=((vt0.c0 COLLATE BINARY)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (UNLIKELY(vt0.c1) COLLATE RTRIM) UNION ALL SELECT * FROM vt0 WHERE ((NOT (UNLIKELY(vt0.c1) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 WHERE (((UNLIKELY(vt0.c1) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((SUM(vt0.c1))<=(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((SUM(vt0.c1))<=(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((SUM(vt0.c1))<=(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1 COLLATE RTRIM)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1 COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1 COLLATE RTRIM)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1 COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((0.31045489274868676)OR(((vt0.c0)>=(vt0.c0)))))AND((vt0.c1 IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((0.31045489274868676)OR(((vt0.c0)>=(vt0.c0)))))AND((vt0.c1 IN ())))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((0.31045489274868676)OR(((vt0.c0)>=(vt0.c0)))))AND((vt0.c1 IN ())))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(((((0.9420401598591722)AND(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS NUMERIC))))AND(((0X3c872751)&(vt0.c0)))))OR(((vt0.c0)*(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(((((0.9420401598591722)AND(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS NUMERIC))))AND(((0x3c872751)&(vt0.c0)))))OR(((vt0.c0)*(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(((((0.9420401598591722)AND(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS NUMERIC))))AND(((0x3c872751)&(vt0.c0)))))OR(((vt0.c0)*(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN ((((((((vt0.c1)AND(756571)))AND(vt0.c1)))AND(vt0.c0)))AND(0X53fb5760)) THEN ((vt0.c0)|(vt0.c0)) ELSE (~ (vt0.c1)) END) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((((((vt0.c1)AND(756571)))AND(vt0.c1)))AND(vt0.c0)))AND(0X53fb5760)) THEN ((vt0.c0)|(vt0.c0)) ELSE (~ (vt0.c1)) END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((((((vt0.c1)AND(756571)))AND(vt0.c1)))AND(vt0.c0)))AND(0X53fb5760)) THEN ((vt0.c0)|(vt0.c0)) ELSE (~ (vt0.c1)) END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (json_object(((vt0.c0)<<(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_object(((vt0.c0)<<(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((json_object(((vt0.c0)<<(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((('-182854790') NOTNULL) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((('-182854790') NOTNULL) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST((('-182854790') NOTNULL) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((AVG(GROUP_CONCAT(AVG(MAX(COUNT(vt0.c1)))))) BETWEEN (MIN(vt0.c1)) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((AVG(GROUP_CONCAT(AVG(MAX(COUNT(vt0.c1)))))) BETWEEN (MIN(vt0.c1)) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((AVG(GROUP_CONCAT(AVG(MAX(COUNT(vt0.c1)))))) BETWEEN (MIN(vt0.c1)) AND (COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((json_array(vt0.c1, vt0.c1))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((json_array(vt0.c1, vt0.c1))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((json_array(vt0.c1, vt0.c1))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN (NOT ('1604283031')) WHEN ((vt0.c0) NOT NULL) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN (NOT ('1604283031')) WHEN ((vt0.c0) NOT NULL) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN (NOT ('1604283031')) WHEN ((vt0.c0) NOT NULL) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((0.24880014889304614) BETWEEN (vt0.c0) AND (vt0.c1)) IN ((vt0.c0 IN ()), ((vt0.c1) NOT NULL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((0.24880014889304614) BETWEEN (vt0.c0) AND (vt0.c1)) IN ((vt0.c0 IN ()), ((vt0.c1) NOT NULL)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((0.24880014889304614) BETWEEN (vt0.c0) AND (vt0.c1)) IN ((vt0.c0 IN ()), ((vt0.c1) NOT NULL)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (~ (SUM(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((~ (SUM(TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((~ (SUM(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c1)>>(vt0.c0)))OR(((vt0.c1)GLOB(vt0.c0)))))AND(((((-1613472756)OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c1)>>(vt0.c0)))OR(((vt0.c1)GLOB(vt0.c0)))))AND(((((-1613472756)OR(vt0.c1)))OR(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c1)>>(vt0.c0)))OR(((vt0.c1)GLOB(vt0.c0)))))AND(((((-1613472756)OR(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))IS((vt0.c1 IN (vt0.c1, vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)||(vt0.c0)))IS((vt0.c1 IN (vt0.c1, vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)||(vt0.c0)))IS((vt0.c1 IN (vt0.c1, vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((0.263945380976532)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN (('')) AND ((0.42818342836454926)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((0.263945380976532)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN (('')) AND ((0.42818342836454926)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((0.263945380976532)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN (('')) AND ((0.42818342836454926)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ABS(DISTINCT DATETIME(vt0.c1, vt0.c0, vt0.c0, TOTAL(GROUP_CONCAT(vt0.c1)), vt0.c1, AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))), vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (ABS(DISTINCT DATETIME(vt0.c1, vt0.c0, vt0.c0, TOTAL(GROUP_CONCAT(vt0.c1)), vt0.c1, AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))), vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((ABS(DISTINCT DATETIME(vt0.c1, vt0.c0, vt0.c0, TOTAL(GROUP_CONCAT(vt0.c1)), vt0.c1, AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))), vt0.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS NUMERIC)) IS TRUE)))) UNION ALL SELECT * FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0)%(vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN COUNT(*) THEN '' WHEN (((AVG(AVG(vt0.c0)), MIN(vt0.c0), MIN(vt0.c1))) NOT BETWEEN ((SUM(vt0.c0), NULL, vt0.c1)) AND ((vt0.c1, GROUP_CONCAT(vt0.c1), COUNT(COUNT(vt0.c0))))) THEN MIN(MAX(vt0.c1)) WHEN MAX(vt0.c0) THEN COUNT(vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN '' WHEN (((AVG(AVG(vt0.c0)), MIN(vt0.c0), MIN(vt0.c1))) NOT BETWEEN ((SUM(vt0.c0), NULL, vt0.c1)) AND ((vt0.c1, GROUP_CONCAT(vt0.c1), COUNT(COUNT(vt0.c0))))) THEN MIN(MAX(vt0.c1)) WHEN MAX(vt0.c0) THEN COUNT(vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN COUNT(*) THEN '' WHEN (((AVG(AVG(vt0.c0)), MIN(vt0.c0), MIN(vt0.c1))) NOT BETWEEN ((SUM(vt0.c0), NULL, vt0.c1)) AND ((vt0.c1, GROUP_CONCAT(vt0.c1), COUNT(COUNT(vt0.c0))))) THEN MIN(MAX(vt0.c1)) WHEN MAX(vt0.c0) THEN COUNT(vt0.c0) END) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)||(vt0.c0)))OR(CAST(vt0.c1 AS BLOB))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)AND(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)||(vt0.c0)))OR(CAST(vt0.c1 AS BLOB))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)AND(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c0)||(vt0.c0)))OR(CAST(vt0.c1 AS BLOB))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)AND(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (UPPER(DISTINCT (vt0.c0 IN ()))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (UPPER(DISTINCT (vt0.c0 IN ()))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((UPPER(DISTINCT (vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(MIN(vt0.c0))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (x'f201') AND (vt0.c0)))AND(x'')))OR((((vt0.c1))<=((NULL)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c0) BETWEEN (x'f201') AND (vt0.c0)))AND(x'')))OR((((vt0.c1))<=((NULL)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((vt0.c0) BETWEEN (x'f201') AND (vt0.c0)))AND(x'')))OR((((vt0.c1))<=((NULL)))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((- (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((- (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((- (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((COUNT(COUNT(*)))>(vt0.c0)))%(SQLITE_COMPILEOPTION_USED(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((COUNT(COUNT(*)))>(vt0.c0)))%(SQLITE_COMPILEOPTION_USED(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((COUNT(COUNT(*)))>(vt0.c0)))%(SQLITE_COMPILEOPTION_USED(vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c1 IN ()) COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((x'') NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((x'') NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((x'') NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ('794677243') GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ('794677243'))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((('794677243') ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(((vt0.c0)>=(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(((vt0.c0)>=(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(((vt0.c0)>=(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(((vt0.c0)>=(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(((vt0.c0)>=(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(((vt0.c0)>=(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c1) ISNULL))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT ((vt0.c1) ISNULL))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT ((vt0.c1) ISNULL))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((~ (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN vt0.c1 END) AND ('-951357566'))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((~ (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN vt0.c1 END) AND ('-951357566'))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((~ (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN vt0.c1 END) AND ('-951357566'))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(CAST(COUNT(*) AS INTEGER)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(CAST(COUNT(*) AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(CAST(COUNT(*) AS INTEGER))) ISNULL);
SELECT ALL TOTAL(((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))>=(vt0.c1 COLLATE BINARY))) FROM vt0 ORDER BY (((((((((vt0.c0 IN (vt0.c0)))AND(vt0.c1 COLLATE BINARY)))AND((vt0.c1 IN ()))))OR(((vt0.c1) IS TRUE))))OR((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE)OR(((vt0.c1) NOTNULL))))OR(((vt0.c0)>(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1 COLLATE NOCASE)OR(((vt0.c1) NOTNULL))))OR(((vt0.c0)>(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c1) NOTNULL))))OR(((vt0.c0)>(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (CAST(vt0.c1 AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)>((vt0.c0 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c1 END)>((vt0.c0 IN ())))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)>((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING AVG(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (AVG(MAX(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((AVG(MAX(vt0.c0))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1)-(vt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1)-(vt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)-(vt0.c1)) COLLATE BINARY) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (TRIM(vt0.c1, vt0.c0 COLLATE BINARY)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (TRIM(vt0.c1, vt0.c0 COLLATE BINARY)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((TRIM(vt0.c1, vt0.c0 COLLATE BINARY)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG('Y')) BETWEEN (CASE WHEN vt0.c1 THEN COUNT(vt0.c1) END) AND (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG('Y')) BETWEEN (CASE WHEN vt0.c1 THEN COUNT(vt0.c1) END) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG('Y')) BETWEEN (CASE WHEN vt0.c1 THEN COUNT(vt0.c1) END) AND (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG('Y')) BETWEEN (CASE WHEN vt0.c1 THEN COUNT(vt0.c1) END) AND (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG('Y')) BETWEEN (CASE WHEN vt0.c1 THEN COUNT(vt0.c1) END) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG('Y')) BETWEEN (CASE WHEN vt0.c1 THEN COUNT(vt0.c1) END) AND (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (json_extract((vt0.c0 IN ()), ((((x'')AND(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (json_extract((vt0.c0 IN ()), ((((x'')AND(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((json_extract((vt0.c0 IN ()), ((((x'')AND(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN (vt0.c1))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((CAST(vt0.c1 AS TEXT) IN (vt0.c1))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((CAST(vt0.c1 AS TEXT) IN (vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (((vt0.c0))<((vt0.c0)))  WHEN vt0.c1 THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN ((((vt0.c1)OR(0.7442921939465076)))OR(vt0.c0)) THEN ((vt0.c1)>>(vt0.c0)) WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN NULL ELSE vt0.c0 END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE (((vt0.c0))<((vt0.c0)))  WHEN vt0.c1 THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN ((((vt0.c1)OR(0.7442921939465076)))OR(vt0.c0)) THEN ((vt0.c1)>>(vt0.c0)) WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN NULL ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE (((vt0.c0))<((vt0.c0)))  WHEN vt0.c1 THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN ((((vt0.c1)OR(0.7442921939465076)))OR(vt0.c0)) THEN ((vt0.c1)>>(vt0.c0)) WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN NULL ELSE vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(vt0.c1) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(vt0.c1) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(vt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(vt0.c1) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(vt0.c1) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(vt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((NOT (x'')) AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((NOT (x'')) AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((NOT (x'')) AS REAL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT((~ (vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)IS NOT((~ (vt0.c1))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)IS NOT((~ (vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING CASE SUM(vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1))>((COUNT(*), vt0.c0, x''))) THEN vt0.c0 ELSE SUM(vt0.c1) END UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (CASE SUM(vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1))>((COUNT(*), vt0.c0, x''))) THEN vt0.c0 ELSE SUM(vt0.c1) END)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CASE SUM(vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1))>((COUNT(*), vt0.c0, x''))) THEN vt0.c0 ELSE SUM(vt0.c1) END) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING CASE SUM(vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1))>((COUNT(*), vt0.c0, x''))) THEN vt0.c0 ELSE SUM(vt0.c1) END UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (CASE SUM(vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1))>((COUNT(*), vt0.c0, x''))) THEN vt0.c0 ELSE SUM(vt0.c1) END)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CASE SUM(vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1))>((COUNT(*), vt0.c0, x''))) THEN vt0.c0 ELSE SUM(vt0.c1) END) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CHANGES())IS NOT((((vt0.c0))>=((vt0.c1)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CHANGES())IS NOT((((vt0.c0))>=((vt0.c1)))))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((((CHANGES())IS NOT((((vt0.c0))>=((vt0.c1)))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((x'a7c7490b')<=(vt0.c0)))) AND ((LOWER(DISTINCT vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((x'a7c7490b')<=(vt0.c0)))) AND ((LOWER(DISTINCT vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN ((((x'a7c7490b')<=(vt0.c0)))) AND ((LOWER(DISTINCT vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))IS(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))IS(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))IS(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MAX(TOTAL(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(TOTAL(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MAX(TOTAL(AVG(vt0.c0))))) ISNULL);
SELECT MIN('#\*mku ') FROM vt0;
SELECT ALL * FROM vt0 NOT INDEXED;
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ((vt0.c1 IN (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((CAST(vt0.c1 AS TEXT) IN ((vt0.c1 IN (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((CAST(vt0.c1 AS TEXT) IN ((vt0.c1 IN (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)GLOB(((vt0.c1)/(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(((vt0.c1)/(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)GLOB(((vt0.c1)/(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING CAST(COUNT(MIN(vt0.c1)) AS NUMERIC) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (CAST(COUNT(MIN(vt0.c1)) AS NUMERIC))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CAST(COUNT(MIN(vt0.c1)) AS NUMERIC)) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (0xffffffff97ca4971 COLLATE BINARY) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (0xffffffff97ca4971 COLLATE BINARY))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((0Xffffffff97ca4971 COLLATE BINARY) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((TRIM(DISTINCT vt0.c0) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (COUNT(AVG(vt0.c1)) IN (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((COUNT(AVG(vt0.c1)) IN (COUNT(*) COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((COUNT(AVG(vt0.c1)) IN (COUNT(*) COLLATE RTRIM))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE NULL  WHEN 0.23318118537696952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE NULL  WHEN 0.23318118537696952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE NULL  WHEN 0.23318118537696952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(((vt0.c0)>>(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(((vt0.c0)>>(COUNT(*)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(((vt0.c0)>>(COUNT(*))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (0.9412997454034586) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (0.9412997454034586))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((0.9412997454034586) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((DATE(vt0.c1, '-2079774922', vt0.c0))|(CAST('' AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((DATE(vt0.c1, '-2079774922', vt0.c0))|(CAST('' AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((DATE(vt0.c1, '-2079774922', vt0.c0))|(CAST('' AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((MIN(vt0.c1))) BETWEEN ((x'f83c')) AND ((vt0.c1)))) ISNULL) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((((MIN(vt0.c1))) BETWEEN ((x'f83c')) AND ((vt0.c1)))) ISNULL))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((((MIN(vt0.c1))) BETWEEN ((x'f83c')) AND ((vt0.c1)))) ISNULL)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((MIN(vt0.c1))) BETWEEN ((x'f83c')) AND ((vt0.c1)))) ISNULL) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((((MIN(vt0.c1))) BETWEEN ((x'f83c')) AND ((vt0.c1)))) ISNULL))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((((MIN(vt0.c1))) BETWEEN ((x'f83c')) AND ((vt0.c1)))) ISNULL)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL TOTAL(((((vt0.c0) NOT NULL))/(((vt0.c0) IS FALSE)))) FROM vt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)IS NOT(-1944507127)) IN (((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)IS NOT(-1944507127)) IN (((vt0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)IS NOT(-1944507127)) IN (((vt0.c0) IS FALSE)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 IN ('-1389636516', NULL)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 IN ('-1389636516', NULL)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 IN ('-1389636516', NULL)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((x'' IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((x'' IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((x'' IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN ('Ts*' COLLATE RTRIM) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) NOT BETWEEN ('Ts*' COLLATE RTRIM) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE) NOT BETWEEN ('Ts*' COLLATE RTRIM) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('?') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('?'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('?') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((vt0.c1 IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c1 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)IS('-179825429')))AND(((vt0.c1)IS NOT(vt0.c0)))))OR(((vt0.c1)||(vt0.c1))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c1)IS('-179825429')))AND(((vt0.c1)IS NOT(vt0.c0)))))OR(((vt0.c1)||(vt0.c1))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c1)IS('-179825429')))AND(((vt0.c1)IS NOT(vt0.c0)))))OR(((vt0.c1)||(vt0.c1))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN (+ (vt0.c1)) THEN NULL ELSE NULL COLLATE BINARY END) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (+ (vt0.c1)) THEN NULL ELSE NULL COLLATE BINARY END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN (+ (vt0.c1)) THEN NULL ELSE NULL COLLATE BINARY END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL((AVG(MIN(GROUP_CONCAT(vt0.c0))) IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL((AVG(MIN(GROUP_CONCAT(vt0.c0))) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL((AVG(MIN(GROUP_CONCAT(vt0.c0))) IN ()))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL((AVG(MIN(GROUP_CONCAT(vt0.c0))) IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL((AVG(MIN(GROUP_CONCAT(vt0.c0))) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL((AVG(MIN(GROUP_CONCAT(vt0.c0))) IN ()))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)AND(vt0.c1)) THEN vt0.c1 END) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)AND(vt0.c1)) THEN vt0.c1 END))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)AND(vt0.c1)) THEN vt0.c1 END) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) IS TRUE)) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) IS TRUE)) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) IS TRUE)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((- (((NULL)<(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT ((- (((NULL)<(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((- (((NULL)<(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(SUM(vt0.c1) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(SUM(vt0.c1) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(SUM(vt0.c1) AS REAL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(SUM(vt0.c1) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(SUM(vt0.c1) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(SUM(vt0.c1) AS REAL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)|(vt0.c1)) THEN (NOT (vt0.c1)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)|(vt0.c1)) THEN (NOT (vt0.c1)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0)|(vt0.c1)) THEN (NOT (vt0.c1)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LOWER(vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LOWER(vt0.c0 COLLATE RTRIM)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((LOWER(vt0.c0 COLLATE RTRIM)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(CASE vt0.c1  WHEN TOTAL(AVG(GROUP_CONCAT(vt0.c1))) THEN vt0.c0 WHEN GROUP_CONCAT(0.18673252218177439) THEN vt0.c0 WHEN SUM(MIN(TOTAL(vt0.c0))) THEN TOTAL(AVG(vt0.c0)) ELSE SUM(MIN(vt0.c0)) END) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(CASE vt0.c1  WHEN TOTAL(AVG(GROUP_CONCAT(vt0.c1))) THEN vt0.c0 WHEN GROUP_CONCAT(0.18673252218177439) THEN vt0.c0 WHEN SUM(MIN(TOTAL(vt0.c0))) THEN TOTAL(AVG(vt0.c0)) ELSE SUM(MIN(vt0.c0)) END))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(CASE vt0.c1  WHEN TOTAL(AVG(GROUP_CONCAT(vt0.c1))) THEN vt0.c0 WHEN GROUP_CONCAT(0.18673252218177439) THEN vt0.c0 WHEN SUM(MIN(TOTAL(vt0.c0))) THEN TOTAL(AVG(vt0.c0)) ELSE SUM(MIN(vt0.c0)) END)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((+ (CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((+ (CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))OR((((vt0.c0, vt0.c1, x''))<((vt0.c0, vt0.c0, vt0.c1)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)OR(vt0.c1)))OR((((vt0.c0, vt0.c1, x''))<((vt0.c0, vt0.c0, vt0.c1)))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR((((vt0.c0, vt0.c1, x''))<((vt0.c0, vt0.c0, vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)<>(((vt0.c0)!=(vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY)!=(((vt0.c0)<>(vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)<>(((vt0.c0)<>(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (((((((x'01b0', vt0.c1, NULL))<((vt0.c1, vt0.c1, vt0.c1)))))<(('3jE៖&g*{')))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((((x'01b0', vt0.c1, NULL))<((vt0.c1, vt0.c1, vt0.c1)))))<(('3jE៖&g*{')))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((x'01b0', vt0.c1, NULL))<((vt0.c1, vt0.c1, vt0.c1)))))<(('3jE៖&g*{')))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (json_patch(((x'')IS(vt0.c1)), NULLIF(vt0.c1, vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (json_patch(((x'')IS(vt0.c1)), NULLIF(vt0.c1, vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((json_patch(((x'')IS(vt0.c1)), NULLIF(vt0.c1, vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)|(vt0.c1)) THEN ((vt0.c1)<(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c1)>(vt0.c0)) END) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)|(vt0.c1)) THEN ((vt0.c1)<(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c1)>(vt0.c0)) END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)|(vt0.c1)) THEN ((vt0.c1)<(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c1)>(vt0.c0)) END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((NOT (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ('2129012582') UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ('2129012582'))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((('2129012582') ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((- (vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (vt0.c1))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING 'o' UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ('o')) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (('o') ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING 'o' UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ('o')) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (('o') ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))<=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))<=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))<=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT BETWEEN (0.6014522468994751) AND ((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)<(vt0.c0))) NOT BETWEEN (0.6014522468994751) AND ((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0))) NOT BETWEEN (0.6014522468994751) AND ((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c0)OR((((vt0.c1))==((vt0.c0))))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt0.c0)<<(vt0.c1)))))AND(CAST(vt0.c1 AS REAL))))AND(UNLIKELY(vt0.c1))))OR(vt0.c1))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((((((((vt0.c0)OR((((vt0.c1))=((vt0.c0))))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt0.c0)<<(vt0.c1)))))AND(CAST(vt0.c1 AS REAL))))AND(UNLIKELY(vt0.c1))))OR(vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((((((vt0.c0)OR((((vt0.c1))==((vt0.c0))))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt0.c0)<<(vt0.c1)))))AND(CAST(vt0.c1 AS REAL))))AND(UNLIKELY(vt0.c1))))OR(vt0.c1))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE vt0.c1  WHEN x'd6a2' THEN vt0.c1 ELSE vt0.c1 END)-(LIKE(vt0.c1, vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN x'd6a2' THEN vt0.c1 ELSE vt0.c1 END)-(LIKE(vt0.c1, vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((CASE vt0.c1  WHEN x'd6a2' THEN vt0.c1 ELSE vt0.c1 END)-(LIKE(vt0.c1, vt0.c0)))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(vt0.c1)) NOT BETWEEN (MAX(NULL)) AND (MIN(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((TOTAL(vt0.c1)) NOT BETWEEN (MAX(NULL)) AND (MIN(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((TOTAL(vt0.c1)) NOT BETWEEN (MAX(NULL)) AND (MIN(vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(vt0.c1)) NOT BETWEEN (MAX(NULL)) AND (MIN(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((TOTAL(vt0.c1)) NOT BETWEEN (MAX(NULL)) AND (MIN(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((TOTAL(vt0.c1)) NOT BETWEEN (MAX(NULL)) AND (MIN(vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((TOTAL_CHANGES()))<=((CAST(vt0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((TOTAL_CHANGES()))<=((CAST(vt0.c0 AS REAL))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((TOTAL_CHANGES()))<=((CAST(vt0.c0 AS REAL))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((((NULL, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('-953118277', vt0.c1, vt0.c1))))%(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((((NULL, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('-953118277', vt0.c1, vt0.c1))))%(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((((NULL, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('-953118277', vt0.c1, vt0.c1))))%(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)!=(0X2c05327a)))<<(((vt0.c1) NOTNULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)<>(0X2c05327a)))<<(((vt0.c1) NOTNULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)!=(0x2c05327a)))<<(((vt0.c1) NOTNULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c1)||(vt0.c1)), ((vt0.c0)*(vt0.c1)), vt0.c0))<((CAST(vt0.c1 AS TEXT), CAST(0.4837784893723923 AS INTEGER), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1)||(vt0.c1)), ((vt0.c0)*(vt0.c1)), vt0.c0))<((CAST(vt0.c1 AS TEXT), CAST(0.4837784893723923 AS INTEGER), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c1)||(vt0.c1)), ((vt0.c0)*(vt0.c1)), vt0.c0))<((CAST(vt0.c1 AS TEXT), CAST(0.4837784893723923 AS INTEGER), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (vt0.c0))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (vt0.c0))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((+ (vt0.c0))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((+ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE (vt0.c0 IN (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) END) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE (vt0.c0 IN (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(SUM(COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(SUM(COUNT(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(SUM(COUNT(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((~ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 WHERE (((((~ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 NOT INDEXED WHERE (CAST((NOT (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CAST((NOT (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) IS TRUE)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS REAL)) IS TRUE)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS REAL)) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(TOTAL(AVG(MAX(SUM(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(TOTAL(AVG(MAX(SUM(GROUP_CONCAT(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(TOTAL(AVG(MAX(SUM(GROUP_CONCAT(vt0.c0)))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((NULL) NOT NULL) THEN 'Zs_nB?k((' END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((NULL) NOT NULL) THEN 'Zs_nB?k((' END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((NULL) NOT NULL) THEN 'Zs_nB?k((' END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (NULLIF(vt0.c0, vt0.c1)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (NULLIF(vt0.c0, vt0.c1)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (NULLIF(vt0.c0, vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1 IN ()))>(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1 IN ()))>(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1 IN ()))>(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (((vt0.c0)+(vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) IS FALSE) IN (((vt0.c0)+(vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0) IS FALSE) IN (((vt0.c0)+(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(vt0.c0) FROM vt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0))) ISNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL)) IS FALSE)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) IS FALSE)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((vt0.c0) NOT NULL)) IS FALSE)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c1 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c1 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))=(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))=(vt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))=(vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('-602780381') AND (vt0.c1 COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('-602780381') AND (vt0.c1 COLLATE NOCASE))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('-602780381') AND (vt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '0#P' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('0#P')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('0#P') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '0#P' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('0#P')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('0#P') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (0.30678344059937857))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1) NOTNULL)) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (0.30678344059937857))))) UNION ALL SELECT vt0.c1 FROM vt0 NOT INDEXED WHERE (((((((vt0.c1) NOTNULL)) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (0.30678344059937857))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ (vt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ (vt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE 0.38369507108011947  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CASE 0.38369507108011947  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((CASE 0.38369507108011947  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR('-1134959070')))AND(vt0.c0)))OR((vt0.c1 IN (vt0.c1, vt0.c1, vt0.c1, vt0.c1)))))AND(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR('-1134959070')))AND(vt0.c0)))OR((vt0.c1 IN (vt0.c1, vt0.c1, vt0.c1, vt0.c1)))))AND(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR('-1134959070')))AND(vt0.c0)))OR((vt0.c1 IN (vt0.c1, vt0.c1, vt0.c1, vt0.c1)))))AND(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((- (vt0.c0)))OR(HEX(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((- (vt0.c0)))OR(HEX(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((- (vt0.c0)))OR(HEX(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c1)))) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.14602585782484412)) AND (json_quote(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))<>((vt0.c1)))) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.14602585782484412)) AND (json_quote(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))!=((vt0.c1)))) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.14602585782484412)) AND (json_quote(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING CASE COUNT(AVG(MAX(MIN(MIN(TOTAL(GROUP_CONCAT(vt0.c0)))))))  WHEN COUNT(*) THEN (COUNT(vt0.c1) IN ()) END UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (CASE COUNT(AVG(MAX(MIN(MIN(TOTAL(GROUP_CONCAT(vt0.c0)))))))  WHEN COUNT(*) THEN (COUNT(vt0.c1) IN ()) END)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CASE COUNT(AVG(MAX(MIN(MIN(TOTAL(GROUP_CONCAT(vt0.c0)))))))  WHEN COUNT(*) THEN (COUNT(vt0.c1) IN ()) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(vt0.c1)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0) ISNULL))AND(vt0.c1)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0) ISNULL))AND(vt0.c1)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) ISNULL) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c1) ISNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((((vt0.c1))>((vt0.c1))), ((vt0.c0) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((((vt0.c1))>((vt0.c1))), ((vt0.c0) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((((vt0.c1))>((vt0.c1))), ((vt0.c0) NOTNULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((((vt0.c1))>((vt0.c1))), ((vt0.c0) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((((vt0.c1))>((vt0.c1))), ((vt0.c0) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((((vt0.c1))>((vt0.c1))), ((vt0.c0) NOTNULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (json_quote((((173267619))>=((vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (json_quote((((173267619))>=((vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((json_quote((((173267619))>=((vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0))))<((~ (vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c0))>((vt0.c0))))<((~ (vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c0))>((vt0.c0))))<((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c1)IS(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1)IS(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c1)IS(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((CAST(vt0.c0 AS NUMERIC)))<=((AVG(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((CAST(vt0.c0 AS NUMERIC)))<=((AVG(vt0.c1)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((CAST(vt0.c0 AS NUMERIC)))<=((AVG(vt0.c1))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((CAST(vt0.c0 AS NUMERIC)))<=((AVG(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((CAST(vt0.c0 AS NUMERIC)))<=((AVG(vt0.c1)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((CAST(vt0.c0 AS NUMERIC)))<=((AVG(vt0.c1))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN ((x'') IS FALSE) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0)IS NOT(vt0.c1)) WHEN (NOT (vt0.c1)) THEN 0X71b39708 ELSE CAST(vt0.c0 AS TEXT) END) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN ((x'') IS FALSE) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0)IS NOT(vt0.c1)) WHEN (NOT (vt0.c1)) THEN 0X71b39708 ELSE CAST(vt0.c0 AS TEXT) END))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN ((x'') IS FALSE) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0)IS NOT(vt0.c1)) WHEN (NOT (vt0.c1)) THEN 0x71b39708 ELSE CAST(vt0.c0 AS TEXT) END) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG((+ (vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG((+ (vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG((+ (vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG((+ (vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG((+ (vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG((+ (vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT)) NOTNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((NOT ((vt0.c1 IN ())))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((NOT ((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN x'7f8a' THEN vt0.c1 ELSE vt0.c1 END IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN x'7f8a' THEN vt0.c1 ELSE vt0.c1 END IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN x'7f8a' THEN vt0.c1 ELSE vt0.c1 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((CAST(vt0.c1 AS INTEGER) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((CAST(vt0.c1 AS INTEGER) IN ())) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.5600137186473124) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0.5600137186473124))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.5600137186473124) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0)GLOB(vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1 IN (vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0)GLOB(vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0)GLOB(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(CAST(GROUP_CONCAT(COUNT(COUNT(MAX(vt0.c0)))) AS TEXT)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(CAST(GROUP_CONCAT(COUNT(COUNT(MAX(vt0.c0)))) AS TEXT)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(CAST(GROUP_CONCAT(COUNT(COUNT(MAX(vt0.c0)))) AS TEXT))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS TEXT)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM COLLATE RTRIM) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE RTRIM COLLATE RTRIM))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING x'cd9a' UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (x'cd9a')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((x'cd9a') ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING x'cd9a' UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (x'cd9a')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((x'cd9a') ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>((+ (vt0.c1))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>((+ (vt0.c1))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>((+ (vt0.c1))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c1 END)OR((~ (x'')))))OR(x''))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c1 END)OR((~ (x'')))))OR(x''))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c1 END)OR((~ (x'')))))OR(x''))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND ((((0.731927558763026) IS FALSE))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND ((((0.731927558763026) IS FALSE))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND ((((0.731927558763026) IS FALSE))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((vt0.c0)) NOT BETWEEN ((((vt0.c0)|(COUNT(COUNT(*)))))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)|(COUNT(COUNT(*)))))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (MAX(vt0.c0)))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)|(COUNT(COUNT(*)))))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (MAX(vt0.c0))))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)%(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)%(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)%(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) NOT NULL) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) NOT NULL) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING SUM(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((- (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((- (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((((- (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.34834034902820166 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.34834034902820166 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.34834034902820166 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN '1412896778' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (CAST('\' AS NUMERIC)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN '1412896778' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (CAST('\' AS NUMERIC)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN '1412896778' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (CAST('\' AS NUMERIC)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((((((((AVG(vt0.c0), vt0.c1, vt0.c1))<=((AVG(vt0.c0), MIN(vt0.c0), MIN(MIN(vt0.c0))))))AND(COUNT(vt0.c0))))AND(SUM(COUNT(*)))))OR(COUNT(*))))AND(MIN(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((((((((((AVG(vt0.c0), vt0.c1, vt0.c1))<=((AVG(vt0.c0), MIN(vt0.c0), MIN(MIN(vt0.c0))))))AND(COUNT(vt0.c0))))AND(SUM(COUNT(*)))))OR(COUNT(*))))AND(MIN(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((((((((((AVG(vt0.c0), vt0.c1, vt0.c1))<=((AVG(vt0.c0), MIN(vt0.c0), MIN(MIN(vt0.c0))))))AND(COUNT(vt0.c0))))AND(SUM(COUNT(*)))))OR(COUNT(*))))AND(MIN(vt0.c1)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOTNULL) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOTNULL) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (TRIM(UNLIKELY(DISTINCT vt0.c0), ((vt0.c0) ISNULL))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (TRIM(UNLIKELY(DISTINCT vt0.c0), ((vt0.c0) ISNULL))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((TRIM(UNLIKELY(DISTINCT vt0.c0), ((vt0.c0) ISNULL))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
