-- Time: 2024/06/09 12:47:01
-- Database: database33
-- Database version: 3.40.0
-- seed value: 3051364533
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.6243472025467138); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('', '-645446779'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='0.6243472025467138'; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-z', NULL), (x'', 0.8665722329836555), (NULL, NULL); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (NULL), ('rU'), ('-661169700'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, x'89ed'); -- 1ms;
UPDATE OR FAIL vt0 SET c0=-6.611697E8, c1=0.7834864508167243; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8644509031943711); -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN x'' THEN '-1749050992' WHEN 0x45204a12 THEN 0xfffffffff7f95a49 WHEN '-661169700' THEN NULL END) BETWEEN ((~ (-134653367))) AND (((((0.518100555267545)OR('肞7T6QEmB{')))OR('-134653367')))); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.5248453902468498) WHERE ((CAST(vt0.c1 AS TEXT))+(NULLIF(vt0.c0, vt0.c1))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1159744018,8');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1873142767); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 1ms;
UPDATE vt0 SET (c0, c1)=(x'', '-630174511') WHERE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((LIKE(vt0.c0, '')))); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.22143152971342683); -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (-6.30174511E8, ''); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE 880903692; -- 0ms;
UPDATE OR ABORT vt0 SET c1='-Z'; -- 1ms;
UPDATE OR IGNORE vt0 SET c1='1159744018'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1159744018' WHERE ((((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)OR((((((((((((('.巨KZ%')OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c1))))))OR((+ ('-1209758038')))))AND(((NULL)<=(vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58702'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'', -1.209758038E9); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8817'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR REPLACE vt0 SET c1=0Xffffffffadee8f7e; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE (+ (vt0.c1)) COLLATE NOCASE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46028'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 990175553); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 592148229); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1727535003); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64066'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1187192587); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1688151442 -2132298075 unordered noskipscan'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46002'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1, 0Xffffffffb6c8094b, vt0.c1))))&(vt0.c0)); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), (NULL), (''); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.3356160267222186 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM vt1 WHERE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=(x'', x'a19d'); -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.5695151497587484); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c1)=('-645446779'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '37701'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58588'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='', c0=x''; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
CREATE VIEW v0(c0) AS SELECT ALL (((((- (vt1.c0)))AND((('-1209758038') BETWEEN (vt1.c0) AND (vt0.c1)))))OR(vt1.c0)) FROM vt1, vt0 WHERE ((((NOT (0.9613584516139533))) BETWEEN ((- (NULL))) AND (((x'')*(NULL))))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('j8+tX', 'Q\*x'), (x'f0fc', '275544043'), (x'', NULL); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.9682607706667214) WHERE x''; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x''); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '16523'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
UPDATE rt0 SET (c1)=('1159744018') WHERE json_array(((rt0.c0) BETWEEN ('1724407272') AND (rt0.c0)), ((rt0.c1)<>(rt0.c1)), (((0Xcf42e8))<=((rt0.c1))), rt0.c0 COLLATE RTRIM); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '53269'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 178943756); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1766967056); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 872892967); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2080221170); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (NOT (LOWER(vt0.c1))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE vt1 SET c0=0.9023261462685531, c0=NULL, c0='쯻' WHERE (vt1.c0 IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 0ms;
UPDATE OR REPLACE vt1 SET (c0, c0)=(x'c3ac', 0Xffffffffb689cbfb); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.9419194607947922); -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=('1688151442') WHERE '-1749050992'; -- 0ms;
UPDATE OR FAIL rt0 SET c1=0xffffffffadee8f7e WHERE ((rt0.c1)/(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))); -- 0ms;
UPDATE vt1 SET (c0)=(0.8736274878627045); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c0)IS(vt0.c1)))))OR(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(((vt0.c0)IS(vt0.c1)))))OR(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(((vt0.c0)IS(vt0.c1)))))OR(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))*(((vt1.c0)OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))*(((vt1.c0)OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))*(((vt1.c0)OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((NOT (0.6116059252540547)) IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((rt0.c1)>=(0.456334635050882)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((NOT (0.6116059252540547)) IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((rt0.c1)>=(0.456334635050882)))) WHERE (LIKELIHOOD(((rt0.c2) NOT BETWEEN (-1964283021) AND (vt0.c0)), 0.22218802862422982)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((NOT (0.6116059252540547)) IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((rt0.c1)>=(0.456334635050882)))) WHERE ((NOT (LIKELIHOOD(((rt0.c2) NOT BETWEEN (-1964283021) AND (vt0.c0)), 0.22218802862422982)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((NOT (0.6116059252540547)) IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((rt0.c1)>=(0.456334635050882)))) WHERE (((LIKELIHOOD(((rt0.c2) NOT BETWEEN (-1964283021) AND (vt0.c0)), 0.22218802862422982)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((NOT (0.6116059252540547)) IN ((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((rt0.c1)>=(0.456334635050882)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE (((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)) COLLATE BINARY) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)) COLLATE BINARY))) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE (((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 NOT INDEXED GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 NOT INDEXED GROUP BY vt1.c0, rt0.c1 HAVING 'VdU<o' UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING (NOT ('VdU<o')) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING (('VdU<o') ISNULL);
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 NOT INDEXED GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 NOT INDEXED GROUP BY vt1.c0, rt0.c1 HAVING 'VdU<o' UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING (NOT ('VdU<o')) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING (('VdU<o') ISNULL);
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 NOT INDEXED GROUP BY vt1.c0, rt0.c1;
SELECT vt0.c0, rt0.c1, vt0.c1 FROM vt1 CROSS JOIN vt0 ON 0.625253616489259 INNER JOIN rt0 ON (((rt0.c0 IN (vt1.c0, x'', vt1.c0)))||((NOT (rt0.c0))));
SELECT vt0.c0, rt0.c1, vt0.c1 FROM vt1 CROSS JOIN vt0 ON 0.625253616489259 INNER JOIN rt0 ON (((rt0.c0 IN (vt1.c0, x'', vt1.c0)))||((NOT (rt0.c0)))) WHERE (((((vt0.c0 COLLATE NOCASE)AND((- (vt0.c0)))))AND(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, rt0.c1, vt0.c1 FROM vt1 CROSS JOIN vt0 ON 0.625253616489259 INNER JOIN rt0 ON (((rt0.c0 IN (vt1.c0, x'', vt1.c0)))||((NOT (rt0.c0)))) WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)AND((- (vt0.c0)))))AND(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.c1 FROM vt1 CROSS JOIN vt0 ON 0.625253616489259 INNER JOIN rt0 ON (((rt0.c0 IN (vt1.c0, x'', vt1.c0)))||((NOT (rt0.c0)))) WHERE (((((((vt0.c0 COLLATE NOCASE)AND((- (vt0.c0)))))AND(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT vt0.c0, rt0.c1, vt0.c1 FROM vt1 CROSS JOIN vt0 ON 0.625253616489259 INNER JOIN rt0 ON (((rt0.c0 IN (vt1.c0, x'', vt1.c0)))||((NOT (rt0.c0))));
SELECT DISTINCT rt0.c1, vt0.c0, vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.3585325897812204 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)<>(rt0.c0 COLLATE BINARY));
SELECT DISTINCT rt0.c1, vt0.c0, vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.3585325897812204 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)!=(rt0.c0 COLLATE BINARY)) WHERE ((((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN -1.749050992E9 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.3585325897812204 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)!=(rt0.c0 COLLATE BINARY)) WHERE ((NOT ((((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN -1.749050992E9 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.3585325897812204 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)!=(rt0.c0 COLLATE BINARY)) WHERE ((((((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN -1.749050992E9 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.3585325897812204 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)<>(rt0.c0 COLLATE BINARY));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((~ (vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((~ (vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(TOTAL(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(TOTAL(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(TOTAL(SUM(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 INNER JOIN vt1 ON (((('쯻')AND(vt0.c0)))OR(0.727400239297522));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 INNER JOIN vt1 ON (((('쯻')AND(vt0.c0)))OR(0.727400239297522)) WHERE (((2.75544043E8) IS TRUE)) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 INNER JOIN vt1 ON (((('쯻')AND(vt0.c0)))OR(0.727400239297522)) WHERE ((NOT (((2.75544043E8) IS TRUE)))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 INNER JOIN vt1 ON (((('쯻')AND(vt0.c0)))OR(0.727400239297522)) WHERE (((((2.75544043E8) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 INNER JOIN vt1 ON (((('쯻')AND(vt0.c0)))OR(0.727400239297522));
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((vt1.c0) NOT NULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((vt1.c0) NOT NULL)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (((~ (vt0.c1))) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((((~ (vt0.c1))) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (((((~ (vt0.c1))) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (((~ (vt0.c1))) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((((~ (vt0.c1))) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (((((~ (vt0.c1))) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((0.6749641724137442) IS TRUE) THEN vt1.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN ((rt0.c2)|(vt0.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) ELSE (((vt0.c1, vt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c2))) END;
SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((0.6749641724137442) IS TRUE) THEN vt1.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN ((rt0.c2)|(vt0.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) ELSE (((vt0.c1, vt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c2))) END WHERE (((('') NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((0.6749641724137442) IS TRUE) THEN vt1.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN ((rt0.c2)|(vt0.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) ELSE (((vt0.c1, vt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c2))) END WHERE ((NOT (((('') NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())))) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((0.6749641724137442) IS TRUE) THEN vt1.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN ((rt0.c2)|(vt0.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) ELSE (((vt0.c1, vt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c2))) END WHERE (((((('') NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ISNULL));
SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((0.6749641724137442) IS TRUE) THEN vt1.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN ((rt0.c2)|(vt0.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) ELSE (((vt0.c1, vt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c2))) END;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((+ ((+ (vt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT ((+ ((+ (vt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((+ ((+ (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT vt1.c0, vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE (json_type(rt0.c0)) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (json_type(rt0.c0)))) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE (((json_type(rt0.c0)) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MIN(vt0.c1) FROM rt0, vt1, vt0;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE ((((((rt0.c2) NOT NULL)))>=((rt0.c2 COLLATE RTRIM)))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT ((((((rt0.c2) NOT NULL)))>=((rt0.c2 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((((((rt0.c2) NOT NULL)))>=((rt0.c2 COLLATE RTRIM)))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((+ (vt0.c0))))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((NOT ((+ (vt0.c0))))))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((((NOT ((+ (vt0.c0))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN (((rt0.c1)IS NOT(rt0.c0)))) GROUP BY rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN (((rt0.c1)IS NOT(rt0.c0)))) GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING (((COUNT(NULL) COLLATE BINARY, TOTAL(MIN(rt0.c1)), TOTAL(MAX(TOTAL(rt0.c0)))))>((COUNT(MIN(rt0.c2)), CASE 0Xffffffff9bcc70b6  WHEN rt0.c0 THEN COUNT(*) END, MIN(MAX(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN (((rt0.c1)IS NOT(rt0.c0)))) GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING (NOT ((((COUNT(NULL) COLLATE BINARY, TOTAL(MIN(rt0.c1)), TOTAL(MAX(TOTAL(rt0.c0)))))>((COUNT(MIN(rt0.c2)), CASE 0Xffffffff9bcc70b6  WHEN rt0.c0 THEN COUNT(*) END, MIN(MAX(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN (((rt0.c1)IS NOT(rt0.c0)))) GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING (((((COUNT(NULL) COLLATE BINARY, TOTAL(MIN(rt0.c1)), TOTAL(MAX(TOTAL(rt0.c0)))))>((COUNT(MIN(rt0.c2)), CASE 0xffffffff9bcc70b6  WHEN rt0.c0 THEN COUNT(*) END, MIN(MAX(rt0.c0)))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 NOT INDEXED WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c1 COLLATE BINARY)AND(CAST(x'' AS INTEGER))))OR((NOT (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (COALESCE(DISTINCT vt0.c1, vt0.c0)) AND (0.8022957657752375)) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1;
SELECT rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 WHERE (CAST(((rt0.c2)AND(rt0.c0)) AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (CAST(((rt0.c2)AND(rt0.c0)) AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 WHERE (((CAST(((rt0.c2)AND(rt0.c0)) AS TEXT)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)>(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)>(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))/(rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))/(rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))/(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((rt0.c2 IN ())) BETWEEN (SUM(MIN(x''))) AND (((rt0.c0)+(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((rt0.c2 IN ())) BETWEEN (SUM(MIN(x''))) AND (((rt0.c0)+(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((rt0.c2 IN ())) BETWEEN (SUM(MIN(x''))) AND (((rt0.c0)+(GROUP_CONCAT(GROUP_CONCAT(rt0.c0))))))) ISNULL);
SELECT * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((rt0.c0) ISNULL) IN ())) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((((rt0.c0) ISNULL) IN ())))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((((((rt0.c0) ISNULL) IN ())) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((x'') ISNULL)) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (((x'') ISNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((((x'') ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))>>(SQLITE_COMPILEOPTION_USED(vt0.c1)))) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0 IN ()))>>(SQLITE_COMPILEOPTION_USED(vt0.c1)))))) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((vt0.c0 IN ()))>>(SQLITE_COMPILEOPTION_USED(vt0.c1)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))==(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))==(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0 HAVING (CAST(SUM(TOTAL(rt0.c0)) AS NUMERIC) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))==(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0 HAVING (NOT ((CAST(SUM(TOTAL(rt0.c0)) AS NUMERIC) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))=(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0 HAVING (((CAST(SUM(TOTAL(rt0.c0)) AS NUMERIC) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))==(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))==(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0 HAVING (CAST(SUM(TOTAL(rt0.c0)) AS NUMERIC) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))==(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0 HAVING (NOT ((CAST(SUM(TOTAL(rt0.c0)) AS NUMERIC) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))=(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0 HAVING (((CAST(SUM(TOTAL(rt0.c0)) AS NUMERIC) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(0.33942434794622045 AS NUMERIC) RIGHT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c0, rt0.c2))>((vt1.c0, rt0.c1, rt0.c2))))AND((((x'f40f', vt1.c0, rt0.c1))==(('', vt0.c0, rt0.c1))))) GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((x'ec2c') ISNULL)) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((x'ec2c') ISNULL)) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((x'ec2c') ISNULL)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (vt0.c1) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (vt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((vt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MIN(x'')) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(x'')))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MIN(x''))) ISNULL);
SELECT ALL * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) NOT NULL)) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER)) NOT NULL)))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CAST(vt1.c0 AS TEXT) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CAST(vt1.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)AND(rt0.c1)))AND(1870442109))) BETWEEN ((- (rt0.c1))) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)AND(rt0.c1)))AND(1870442109))) BETWEEN ((- (rt0.c1))) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))) WHERE (((((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<=(((rt0.c1 IN ()))))) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)AND(rt0.c1)))AND(1870442109))) BETWEEN ((- (rt0.c1))) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))) WHERE ((NOT (((((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<=(((rt0.c1 IN ()))))))) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)AND(rt0.c1)))AND(1870442109))) BETWEEN ((- (rt0.c1))) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))) WHERE (((((((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<=(((rt0.c1 IN ()))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)AND(rt0.c1)))AND(1870442109))) BETWEEN ((- (rt0.c1))) AND (((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((((COUNT(*))AND(COUNT(vt1.c0))))OR(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((((COUNT(*))AND(COUNT(vt1.c0))))OR(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((((COUNT(*))AND(COUNT(vt1.c0))))OR(vt1.c0)))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), (((vt1.c0))>=((vt1.c0))), ((vt1.c0) IS TRUE))) AND ((CASE WHEN vt0.c1 THEN -1137890990 END, (NOT (vt0.c0)), (NOT (vt0.c1)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), (((vt1.c0))>=((vt1.c0))), ((vt1.c0) IS TRUE))) AND ((CASE WHEN vt0.c1 THEN -1137890990 END, (NOT (vt0.c0)), (NOT (vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), (((vt1.c0))>=((vt1.c0))), ((vt1.c0) IS TRUE))) AND ((CASE WHEN vt0.c1 THEN -1137890990 END, (NOT (vt0.c0)), (NOT (vt0.c1)))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (CAST(((rt0.c1)>(rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (CAST(((rt0.c1)>(rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((CAST(((rt0.c1)>(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (CAST(vt1.c0 AS REAL)) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1 HAVING ((SUM(x'd535'))%(COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1 HAVING (NOT (((SUM(x'd535'))%(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1 HAVING ((((SUM(x'd535'))%(COUNT(*)))) ISNULL);
SELECT ALL vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1 HAVING ((SUM(x'd535'))%(COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1 HAVING (NOT (((SUM(x'd535'))%(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1 HAVING ((((SUM(x'd535'))%(COUNT(*)))) ISNULL);
SELECT ALL vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) ISNULL))LIKE(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))LIKE(rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) ISNULL))LIKE(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c1))) NOT NULL)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c1))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0 IN (vt0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE NOCASE INNER JOIN vt1 ON ((((('737723143')GLOB(rt0.c2)), '754395950', SQLITE_COMPILEOPTION_USED(vt1.c0)))!=((vt1.c0, rt0.c0, LIKELY(DISTINCT rt0.c2)))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE NOCASE INNER JOIN vt1 ON ((((('737723143')GLOB(rt0.c2)), '754395950', SQLITE_COMPILEOPTION_USED(vt1.c0)))<>((vt1.c0, rt0.c0, LIKELY(DISTINCT rt0.c2)))) WHERE (((((CAST(0x3d4461c4 AS INTEGER))OR(CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c1 END)))AND((- (rt0.c2))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE NOCASE INNER JOIN vt1 ON ((((('737723143')GLOB(rt0.c2)), '754395950', SQLITE_COMPILEOPTION_USED(vt1.c0)))!=((vt1.c0, rt0.c0, LIKELY(DISTINCT rt0.c2)))) WHERE ((NOT (((((CAST(0X3d4461c4 AS INTEGER))OR(CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c1 END)))AND((- (rt0.c2))))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE NOCASE INNER JOIN vt1 ON ((((('737723143')GLOB(rt0.c2)), '754395950', SQLITE_COMPILEOPTION_USED(vt1.c0)))<>((vt1.c0, rt0.c0, LIKELY(DISTINCT rt0.c2)))) WHERE (((((((CAST(0x3d4461c4 AS INTEGER))OR(CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c1 END)))AND((- (rt0.c2))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE NOCASE INNER JOIN vt1 ON ((((('737723143')GLOB(rt0.c2)), '754395950', SQLITE_COMPILEOPTION_USED(vt1.c0)))!=((vt1.c0, rt0.c0, LIKELY(DISTINCT rt0.c2)))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (+ ((((rt0.c2)) BETWEEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1))))) AND ((MAX(SUM(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((+ ((((rt0.c2)) BETWEEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1))))) AND ((MAX(SUM(COUNT(*)))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((+ ((((rt0.c2)) BETWEEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1))))) AND ((MAX(SUM(COUNT(*))))))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-336429321' WHEN vt0.c1 THEN vt1.c0 END));
SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-336429321' WHEN vt0.c1 THEN vt1.c0 END)) WHERE (vt0.c0) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-336429321' WHEN vt0.c1 THEN vt1.c0 END)) WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-336429321' WHEN vt0.c1 THEN vt1.c0 END)) WHERE (((vt0.c0) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-336429321' WHEN vt0.c1 THEN vt1.c0 END));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE (((((CHANGES())AND(CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END)))AND(CASE 0.5666513593506435  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN -788796676 END))) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((((CHANGES())AND(CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END)))AND(CASE 0.5666513593506435  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN -788796676 END))))) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE (((((((CHANGES())AND(CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END)))AND(CASE 0.5666513593506435  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN -788796676 END))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING ((((((((SUM(vt0.c1))OR(COUNT(*))))AND(CAST(rt0.c2 AS REAL))))AND(MIN(COUNT(rt0.c2)))))OR(SUM(MAX(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING (NOT (((((((((SUM(vt0.c1))OR(COUNT(*))))AND(CAST(rt0.c2 AS REAL))))AND(MIN(COUNT(rt0.c2)))))OR(SUM(MAX(MIN(rt0.c2))))))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING ((((((((((SUM(vt0.c1))OR(COUNT(*))))AND(CAST(rt0.c2 AS REAL))))AND(MIN(COUNT(rt0.c2)))))OR(SUM(MAX(MIN(rt0.c2)))))) ISNULL);
SELECT ALL * FROM vt1, rt0, vt0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE ((((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (CAST(vt0.c1 AS TEXT)))) UNION SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT ((((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (CAST(vt0.c1 AS TEXT)))))) UNION SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE ((((((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (CAST(vt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0, vt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((vt0.c1 IN ()) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (((((rt0.c1, vt0.c0, vt0.c0))>=((rt0.c2, vt1.c0, rt0.c1))))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((vt0.c1 IN ()) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (((((rt0.c1, vt0.c0, vt0.c0))>=((rt0.c2, vt1.c0, rt0.c1))))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (((((((NULL)AND(rt0.c1)))OR(vt0.c0)))OR(((rt0.c2) IS TRUE)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((vt0.c1 IN ()) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (((((rt0.c1, vt0.c0, vt0.c0))>=((rt0.c2, vt1.c0, rt0.c1))))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((NOT (((((((NULL)AND(rt0.c1)))OR(vt0.c0)))OR(((rt0.c2) IS TRUE)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((vt0.c1 IN ()) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (((((rt0.c1, vt0.c0, vt0.c0))>=((rt0.c2, vt1.c0, rt0.c1))))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (((((((((NULL)AND(rt0.c1)))OR(vt0.c0)))OR(((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((vt0.c1 IN ()) AS NUMERIC) RIGHT OUTER JOIN vt0 ON (((((rt0.c1, vt0.c0, vt0.c0))>=((rt0.c2, vt1.c0, rt0.c1))))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX(SUM(MIN(TOTAL(AVG(COUNT(MIN(MAX(COUNT(*))))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX(SUM(MIN(TOTAL(AVG(COUNT(MIN(MAX(COUNT(*))))))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX(SUM(MIN(TOTAL(AVG(COUNT(MIN(MAX(COUNT(*)))))))))) ISNULL);
SELECT rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ('0.8665722329836555') UNION ALL SELECT rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ('0.8665722329836555'))) UNION ALL SELECT rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((('0.8665722329836555') ISNULL));
SELECT rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(NULL AS NUMERIC)) ISNULL) INNER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(vt1.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(NULL AS NUMERIC)) ISNULL) INNER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(vt1.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL))) WHERE ((- ((+ (vt0.c0))))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(NULL AS NUMERIC)) ISNULL) INNER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(vt1.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL))) WHERE ((NOT ((- ((+ (vt0.c0))))))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(NULL AS NUMERIC)) ISNULL) INNER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(vt1.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL))) WHERE ((((- ((+ (vt0.c0))))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(NULL AS NUMERIC)) ISNULL) INNER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(vt1.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING AVG(((vt1.c0) NOT BETWEEN (GROUP_CONCAT(0.518100555267545)) AND (COUNT(MIN(NULL))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (AVG(((vt1.c0) NOT BETWEEN (GROUP_CONCAT(0.518100555267545)) AND (COUNT(MIN(NULL))))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((AVG(((vt1.c0) NOT BETWEEN (GROUP_CONCAT(0.518100555267545)) AND (COUNT(MIN(NULL)))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (NULL) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)!=('')) AS INTEGER) GROUP BY rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)<>('')) AS INTEGER) GROUP BY rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)!=('')) AS INTEGER) GROUP BY rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)!=('')) AS INTEGER) GROUP BY rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (0.4834892345910894) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (0.4834892345910894))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((0.4834892345910894) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE (CASE (((rt0.c1, vt0.c1, rt0.c0))=((vt0.c0, rt0.c0, vt1.c0)))  WHEN ((rt0.c1)&(vt0.c0)) THEN ((vt1.c0) NOTNULL) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)IS NOT(0.19614476681143345)) WHEN (rt0.c0 IN ()) THEN LIKE(rt0.c0, vt1.c0, '0') ELSE ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)) END) GROUP BY vt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT (CASE (((rt0.c1, vt0.c1, rt0.c0))=((vt0.c0, rt0.c0, vt1.c0)))  WHEN ((rt0.c1)&(vt0.c0)) THEN ((vt1.c0) NOTNULL) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)IS NOT(0.19614476681143345)) WHEN (rt0.c0 IN ()) THEN LIKE(rt0.c0, vt1.c0, '0') ELSE ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)) END))) GROUP BY vt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE (((CASE (((rt0.c1, vt0.c1, rt0.c0))=((vt0.c0, rt0.c0, vt1.c0)))  WHEN ((rt0.c1)&(vt0.c0)) THEN ((vt1.c0) NOTNULL) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)IS NOT(0.19614476681143345)) WHEN (rt0.c0 IN ()) THEN LIKE(rt0.c0, vt1.c0, '0') ELSE ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)) END) ISNULL)) GROUP BY vt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT vt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING '0.33942434794622045' COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ('0.33942434794622045' COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (('0.33942434794622045' COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING '0.33942434794622045' COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ('0.33942434794622045' COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (('0.33942434794622045' COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT NULL))*(((rt0.c1)*(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))*(((rt0.c1)*(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))*(((rt0.c1)*(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((((((((vt0.c0) IS TRUE))AND((vt0.c0 IN (vt0.c1)))))AND(vt0.c1)))AND(vt0.c0 COLLATE BINARY)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) IS TRUE))AND((vt0.c0 IN (vt0.c1)))))AND(vt0.c1)))AND(vt0.c0 COLLATE BINARY)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c0) IS TRUE))AND((vt0.c0 IN (vt0.c1)))))AND(vt0.c1)))AND(vt0.c0 COLLATE BINARY)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CAST(MAX(rt0.c2) AS TEXT) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CAST(MAX(rt0.c2) AS TEXT))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CAST(MAX(rt0.c2) AS TEXT)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CAST(MAX(rt0.c2) AS TEXT) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CAST(MAX(rt0.c2) AS TEXT))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CAST(MAX(rt0.c2) AS TEXT)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL SUM((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(x'e3e1')))) AND (((vt0.c0 IN (vt0.c1)))))) FROM vt0 ORDER BY (((((((((('') NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(TRIM(vt0.c0))))AND((+ (vt0.c0)))))OR(vt0.c0)))AND(CAST(vt0.c1 AS TEXT)))  NULLS FIRST, (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN ()) ASC;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (UPPER((vt1.c0 IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (UPPER((vt1.c0 IN ()))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((UPPER((vt1.c0 IN ()))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)))IS(((rt0.c2) NOT NULL)));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)))IS(((rt0.c2) NOT NULL))) WHERE (((CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (COALESCE(rt0.c0, vt0.c1)) AND (((((((((((((NULL)AND('-630174511')))OR(vt1.c0)))OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(-1.13789099E9))))) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)))IS(((rt0.c2) NOT NULL))) WHERE ((NOT (((CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (COALESCE(rt0.c0, vt0.c1)) AND (((((((((((((NULL)AND('-630174511')))OR(vt1.c0)))OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(-1.13789099E9))))))) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)))IS(((rt0.c2) NOT NULL))) WHERE (((((CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (COALESCE(rt0.c0, vt0.c1)) AND (((((((((((((NULL)AND('-630174511')))OR(vt1.c0)))OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(-1.13789099E9))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)))IS(((rt0.c2) NOT NULL)));
SELECT vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))>=(LIKELIHOOD(vt0.c1, 0.9328359044351916)))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))>=(LIKELIHOOD(vt0.c1, 0.9328359044351916)))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))>=(LIKELIHOOD(vt0.c1, 0.9328359044351916)))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0, vt0, vt1;
SELECT * FROM rt0, vt0, vt1 WHERE ((~ (((0Xffffffffd935a423) NOT BETWEEN (0.013739480596278275) AND (vt0.c1))))) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((NOT ((~ (((0Xffffffffd935a423) NOT BETWEEN (0.013739480596278275) AND (vt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((((~ (((0Xffffffffd935a423) NOT BETWEEN (0.013739480596278275) AND (vt0.c1))))) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((0.14417733821801915) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (((0.14417733821801915) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((NOT (rt0.c2))))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((((0.14417733821801915) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(MAX(MIN(COUNT(*))) AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MAX(MIN(COUNT(*))) AS INTEGER))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(MAX(MIN(COUNT(*))) AS INTEGER)) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))%(CAST(vt0.c1 AS REAL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))%(CAST(vt0.c1 AS REAL)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))%(CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(((vt1.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(((vt1.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING AVG(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING AVG(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT ALL MAX(((CHAR(vt1.c0))IS NOT(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)  NULLS LAST, ((((vt1.c0)>>(vt1.c0)))LIKE((vt1.c0 IN ())))  NULLS LAST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (CASE CAST(NULL AS TEXT)  WHEN json_type(NULL) THEN (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((vt1.c0, rt0.c1, rt0.c2)) AND ((vt1.c0, NULL, NULL))) WHEN (((vt1.c0, rt0.c0, rt0.c0))!=((NULL, vt1.c0, '澕'))) THEN ((((((((vt1.c0)AND(x'')))OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c2)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c0 COLLATE NOCASE ELSE (vt1.c0 IN (rt0.c1, rt0.c2)) END) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (CASE CAST(NULL AS TEXT)  WHEN json_type(NULL) THEN (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((vt1.c0, rt0.c1, rt0.c2)) AND ((vt1.c0, NULL, NULL))) WHEN (((vt1.c0, rt0.c0, rt0.c0))<>((NULL, vt1.c0, '澕'))) THEN ((((((((vt1.c0)AND(x'')))OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c2)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c0 COLLATE NOCASE ELSE (vt1.c0 IN (rt0.c1, rt0.c2)) END))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CASE CAST(NULL AS TEXT)  WHEN json_type(NULL) THEN (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((vt1.c0, rt0.c1, rt0.c2)) AND ((vt1.c0, NULL, NULL))) WHEN (((vt1.c0, rt0.c0, rt0.c0))<>((NULL, vt1.c0, '澕'))) THEN ((((((((vt1.c0)AND(x'')))OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c2)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c0 COLLATE NOCASE ELSE (vt1.c0 IN (rt0.c1, rt0.c2)) END) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT NULL)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT NULL)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((((vt1.c0)AND(COUNT(vt1.c0))))AND(GROUP_CONCAT(x'')))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((((vt1.c0)AND(COUNT(vt1.c0))))AND(GROUP_CONCAT(x'')))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((((vt1.c0)AND(COUNT(vt1.c0))))AND(GROUP_CONCAT(x''))))) ISNULL);
SELECT * FROM vt0 NOT INDEXED;
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1)IS NOT(vt0.c1)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT ((vt0.c1)IS NOT(vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT ((vt0.c1)IS NOT(vt0.c1)))) ISNULL));
SELECT * FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((NULL)GLOB(CAST(vt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((NULL)GLOB(CAST(vt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((NULL)GLOB(CAST(vt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 WHERE (STRFTIME(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c2)AND(rt0.c1)), (+ (rt0.c1)), vt0.c1, vt0.c1 COLLATE RTRIM)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT (STRFTIME(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c2)AND(rt0.c1)), (+ (rt0.c1)), vt0.c1, vt0.c1 COLLATE RTRIM)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 WHERE (((STRFTIME(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c2)AND(rt0.c1)), (+ (rt0.c1)), vt0.c1, vt0.c1 COLLATE RTRIM)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(TOTAL(vt0.c0)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(TOTAL(vt0.c0))) ISNULL);
SELECT vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN x'8c18' END)) AND ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND('737723143')))))) UNION ALL SELECT ALL vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN x'8c18' END)) AND ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND('737723143')))))))) UNION ALL SELECT ALL vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN x'8c18' END)) AND ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND('737723143')))))) ISNULL));
SELECT vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS REAL) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS REAL) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON json_extract(((rt0.c2) NOT NULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN NULL THEN rt0.c2 END)AND(((vt0.c1)<=(0.9763960155030867)))))AND((rt0.c2 IN ()))))AND(((rt0.c1) ISNULL))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 END)) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON json_extract(((rt0.c2) NOT NULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN NULL THEN rt0.c2 END)AND(((vt0.c1)<=(0.9763960155030867)))))AND((rt0.c2 IN ()))))AND(((rt0.c1) ISNULL))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 END)) WHERE (((((((rt0.c0)OR(0.5558318715671883)))AND(vt0.c1)))|((+ (rt0.c2))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON json_extract(((rt0.c2) NOT NULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN NULL THEN rt0.c2 END)AND(((vt0.c1)<=(0.9763960155030867)))))AND((rt0.c2 IN ()))))AND(((rt0.c1) ISNULL))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((NOT (((((((rt0.c0)OR(0.5558318715671883)))AND(vt0.c1)))|((+ (rt0.c2))))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON json_extract(((rt0.c2) NOT NULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN NULL THEN rt0.c2 END)AND(((vt0.c1)<=(0.9763960155030867)))))AND((rt0.c2 IN ()))))AND(((rt0.c1) ISNULL))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 END)) WHERE (((((((((rt0.c0)OR(0.5558318715671883)))AND(vt0.c1)))|((+ (rt0.c2))))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON json_extract(((rt0.c2) NOT NULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN NULL THEN rt0.c2 END)AND(((vt0.c1)<=(0.9763960155030867)))))AND((rt0.c2 IN ()))))AND(((rt0.c1) ISNULL))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 END)) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((COUNT(vt0.c1)))<((COUNT(MAX(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((((COUNT(vt0.c1)))<((COUNT(MAX(COUNT(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((((COUNT(vt0.c1)))<((COUNT(MAX(COUNT(vt0.c0))))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c1, '-627296229')) BETWEEN (((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), x'1850', (((rt0.c0, NULL, NULL))==((rt0.c0, vt0.c1, rt0.c2))))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE, ABS(rt0.c2))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((vt0.c0, vt0.c1, '-627296229')) BETWEEN (((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), x'1850', (((rt0.c0, NULL, NULL))==((rt0.c0, vt0.c1, rt0.c2))))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE, ABS(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0, vt0.c1, '-627296229')) BETWEEN (((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), x'1850', (((rt0.c0, NULL, NULL))=((rt0.c0, vt0.c1, rt0.c2))))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE, ABS(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1, rt0 WHERE (json_patch(vt0.c0 COLLATE RTRIM, (rt0.c1 IN ()))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (json_patch(vt0.c0 COLLATE RTRIM, (rt0.c1 IN ()))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1, rt0 WHERE (((json_patch(vt0.c0 COLLATE RTRIM, (rt0.c1 IN ()))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((NOT (vt0.c1)) AS BLOB)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c1)) AS BLOB)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((NOT (vt0.c1)) AS BLOB)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0))>((vt1.c0)))))>((NULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0))>((vt1.c0)))))>((NULL)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0))>((vt1.c0)))))>((NULL)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM rt0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))));
SELECT DISTINCT vt1.c0 FROM rt0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))))) WHERE (((rt0.c2)<<((rt0.c2 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM rt0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))))) WHERE ((NOT (((rt0.c2)<<((rt0.c2 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM rt0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))))) WHERE (((((rt0.c2)<<((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))));
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)!=(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) ELSE (rt0.c1 IN (rt0.c1, -0.0)) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)<>(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) ELSE (rt0.c1 IN (rt0.c1, -0.0)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)!=(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) ELSE (rt0.c1 IN (rt0.c1, -0.0)) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1 HAVING CASE (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((MIN(MIN(AVG('쯻'))))))  WHEN MAX(vt0.c1) THEN AVG(vt0.c1) END UNION ALL SELECT rt0.c1 FROM vt0 NOT INDEXED, vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (CASE (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((MIN(MIN(AVG('쯻'))))))  WHEN MAX(vt0.c1) THEN AVG(vt0.c1) END)) UNION ALL SELECT ALL rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1 HAVING ((CASE (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((MIN(MIN(AVG('쯻'))))))  WHEN MAX(vt0.c1) THEN AVG(vt0.c1) END) ISNULL);
SELECT ALL vt1.c0, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON json_object(vt0.c1, rt0.c0) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)))OR(((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))))OR(CAST(vt0.c1 AS NUMERIC)));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE 'aF-\<'  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (0.9969408958160157)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE 'aF-\<'  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (0.9969408958160157)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE 'aF-\<'  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (0.9969408958160157)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 WHERE (((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (rt0.c2) AND (rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (rt0.c2) AND (rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 WHERE (((((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (rt0.c2) AND (rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT vt1.c0, vt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c2 HAVING AVG(AVG(TOTAL(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c2 HAVING (NOT (AVG(AVG(TOTAL(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c2 HAVING ((AVG(AVG(TOTAL(COUNT(*))))) ISNULL);
SELECT MAX(((((rt0.c1)>(vt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) AND (((rt0.c2)&(vt1.c0))))) FROM rt0, vt0, vt1 ORDER BY HEX(DISTINCT MIN(rt0.c0, vt0.c1)) DESC, vt0.c0  NULLS FIRST, CAST((((rt0.c0))<((vt0.c1))) AS REAL) ASC  NULLS FIRST;
SELECT vt0.c1, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0;
SELECT vt0.c1, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((((x''))<(((rt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((x''))<(((rt0.c0 IN ()))))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((((((x''))<(((rt0.c0 IN ()))))) ISNULL));
SELECT vt0.c1, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1))) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON ((rt0.c2)&(((rt0.c2) NOTNULL))) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON ((rt0.c2)&(((rt0.c2) NOTNULL))) GROUP BY vt0.c0, rt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON ((rt0.c2)&(((rt0.c2) NOTNULL))) GROUP BY vt0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON ((rt0.c2)&(((rt0.c2) NOTNULL))) GROUP BY vt0.c0, rt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 NOT INDEXED WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c0)IS(vt0.c1)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)<=(vt0.c1)) THEN ((vt0.c1)<>('sꩶ')) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c0)IS(vt0.c1)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)<=(vt0.c1)) THEN ((vt0.c1)<>('sꩶ')) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c0)IS(vt0.c1)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)<=(vt0.c1)) THEN ((vt0.c1)<>('sꩶ')) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 WHERE (((((vt0.c1)<<(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN '4ZC-e' THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END) AND (CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT (((((vt0.c1)<<(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN '4ZC-e' THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END) AND (CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT vt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, rt0 WHERE (((((((vt0.c1)<<(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN '4ZC-e' THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END) AND (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, rt0;
SELECT ALL vt0.c1, rt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))AND(((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((((x'a69a', rt0.c1, '_%VSk'))>((vt1.c0, vt0.c0, rt0.c2))))))AND(rt0.c1)) INNER JOIN rt0 ON CAST('0.22143152971342683' AS TEXT) GROUP BY vt0.c1, rt0.c1, vt1.c0;
SELECT ALL vt0.c1, rt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))AND(((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((((x'a69a', rt0.c1, '_%VSk'))>((vt1.c0, vt0.c0, rt0.c2))))))AND(rt0.c1)) INNER JOIN rt0 ON CAST('0.22143152971342683' AS TEXT) WHERE (LIKELY(ABS(rt0.c2))) GROUP BY vt0.c1, rt0.c1, vt1.c0 UNION SELECT vt0.c1, rt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))AND(((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((((x'a69a', rt0.c1, '_%VSk'))>((vt1.c0, vt0.c0, rt0.c2))))))AND(rt0.c1)) INNER JOIN rt0 ON CAST('0.22143152971342683' AS TEXT) WHERE ((NOT (LIKELY(ABS(rt0.c2))))) GROUP BY vt0.c1, rt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, rt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))AND(((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((((x'a69a', rt0.c1, '_%VSk'))>((vt1.c0, vt0.c0, rt0.c2))))))AND(rt0.c1)) INNER JOIN rt0 ON CAST('0.22143152971342683' AS TEXT) WHERE (((LIKELY(ABS(rt0.c2))) ISNULL)) GROUP BY vt0.c1, rt0.c1, vt1.c0;
SELECT ALL vt0.c1, rt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))AND(((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((((x'a69a', rt0.c1, '_%VSk'))>((vt1.c0, vt0.c0, rt0.c2))))))AND(rt0.c1)) INNER JOIN rt0 ON CAST('0.22143152971342683' AS TEXT) GROUP BY vt0.c1, rt0.c1, vt1.c0;
SELECT vt1.c0, rt0.c0, vt0.c0, vt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, rt0.c0, vt0.c0, vt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, vt0.c0, vt0.c1 HAVING (((MIN(GROUP_CONCAT(rt0.c0)) COLLATE BINARY))>=((MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt0.c0, vt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, vt0.c0, vt0.c1 HAVING (NOT ((((MIN(GROUP_CONCAT(rt0.c0)) COLLATE BINARY))>=((MIN(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt0.c0, vt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, vt0.c0, vt0.c1 HAVING (((((MIN(GROUP_CONCAT(rt0.c0)) COLLATE BINARY))>=((MIN(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)>(vt1.c0)))) AND ((CAST(0.8199127090452933 AS BLOB))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)>(vt1.c0)))) AND ((CAST(0.8199127090452933 AS BLOB))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt1.c0)>(vt1.c0)))) AND ((CAST(0.8199127090452933 AS BLOB))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (CAST(TRIM(vt0.c0) AS TEXT)) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (CAST(TRIM(vt0.c0) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((CAST(TRIM(vt0.c0) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((((((vt0.c1)>(vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))AND((NOT (vt0.c1)))))OR(TRIM(DISTINCT vt0.c0))))AND(CAST(vt0.c1 AS BLOB))))OR((~ (vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((((((((((vt0.c1)>(vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))AND((NOT (vt0.c1)))))OR(TRIM(DISTINCT vt0.c0))))AND(CAST(vt0.c1 AS BLOB))))OR((~ (vt0.c0))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((((((((vt0.c1)>(vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))AND((NOT (vt0.c1)))))OR(TRIM(DISTINCT vt0.c0))))AND(CAST(vt0.c1 AS BLOB))))OR((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(((AVG(TOTAL(COUNT(COUNT(rt0.c0))))) IS TRUE)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((AVG(TOTAL(COUNT(COUNT(rt0.c0))))) IS TRUE)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(((AVG(TOTAL(COUNT(COUNT(rt0.c0))))) IS TRUE))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (CAST(COALESCE(rt0.c2, rt0.c1) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((NOT (CAST(COALESCE(rt0.c2, rt0.c1) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((CAST(COALESCE(rt0.c2, rt0.c1) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1;
SELECT rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt1, vt0, rt0 WHERE (CASE vt1.c0  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM) GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (CASE vt1.c0  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM))) GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt1, vt0, rt0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING '' UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ('')) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (('') ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING '' UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ('')) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (('') ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((vt0.c0)-(vt0.c1)) IN ())) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT ((((vt0.c0)-(vt0.c1)) IN ())))) UNION ALL SELECT * FROM vt0, rt0 NOT INDEXED, vt1 WHERE ((((((vt0.c0)-(vt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (LOWER(((rt0.c1) IS FALSE))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (LOWER(((rt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((LOWER(((rt0.c1) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOTNULL))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOTNULL))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE ((- (vt0.c1)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOTNULL))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE ((NOT ((- (vt0.c1)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOTNULL))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE ((((- (vt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOTNULL))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(AVG(MAX(MIN(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(AVG(MAX(MIN(COUNT(*))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1 HAVING ((MAX(AVG(MAX(MIN(COUNT(*)))))) ISNULL);
SELECT * FROM vt0, vt1, rt0;
SELECT * FROM vt0, vt1, rt0 WHERE ((((((vt1.c0) IS FALSE)))>((TRIM(DISTINCT x''))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT ((((((vt1.c0) IS FALSE)))>((TRIM(DISTINCT x''))))))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((((((((vt1.c0) IS FALSE)))>((TRIM(DISTINCT x''))))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((((rt0.c0))>=((vt0.c0)))) ISNULL)) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT ((((((rt0.c0))>=((vt0.c0)))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((((((rt0.c0))>=((vt0.c0)))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0.05823714136142799, (~ (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((((vt1.c0) NOTNULL), ((vt1.c0)>>(vt1.c0)), ((vt1.c0) NOTNULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0.05823714136142799, (~ (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((((vt1.c0) NOTNULL), ((vt1.c0)>>(vt1.c0)), ((vt1.c0) NOTNULL))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0.05823714136142799, (~ (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((((vt1.c0) NOTNULL), ((vt1.c0)>>(vt1.c0)), ((vt1.c0) NOTNULL))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING AVG((('1890533498')<<(NULL))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((('1890533498')<<(NULL))))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((AVG((('1890533498')<<(NULL)))) ISNULL);
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING AVG((('1890533498')<<(NULL))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((('1890533498')<<(NULL))))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((AVG((('1890533498')<<(NULL)))) ISNULL);
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT SUM((((rt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c1)))OR(vt0.c1)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), vt1.c0)) AND ((CASE vt1.c0  WHEN '487373839' THEN vt0.c1 END, NULL, ((rt0.c1)<(rt0.c1)))))) FROM rt0, vt0, vt1;
SELECT * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((rt0.c2 IN (rt0.c1)))*(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT ((((rt0.c2 IN (rt0.c1)))*(CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((((((rt0.c2 IN (rt0.c1)))*(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT vt0.c0, vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt0.c0, vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1, rt0;
SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((- (vt0.c1)) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT ((- (vt0.c1)) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((((- (vt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE (((NULL)) NOT BETWEEN ((vt0.c0)) AND (('pzh*|Tj')))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE (((NULL)) NOT BETWEEN ((vt0.c0)) AND (('pzh*|Tj')))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE (((NULL)) NOT BETWEEN ((vt0.c0)) AND (('pzh*|Tj')))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c1)%(vt0.c0)))-(vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)%(vt0.c0)))-(vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.c1)%(vt0.c0)))-(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 WHERE (DATETIME(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), (((NULL, vt1.c0, vt0.c1))==((vt1.c0, vt1.c0, vt0.c1))), NULL)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((NOT (DATETIME(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), (((NULL, vt1.c0, vt0.c1))==((vt1.c0, vt1.c0, vt0.c1))), NULL)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, vt0 WHERE (((DATETIME(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), (((NULL, vt1.c0, vt0.c1))=((vt1.c0, vt1.c0, vt0.c1))), NULL)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING TOTAL(COUNT(rt0.c2)) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (NOT (TOTAL(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING ((TOTAL(COUNT(rt0.c2))) ISNULL);
SELECT ALL rt0.c0 FROM vt1, rt0;
SELECT rt0.c0 FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS TEXT))<((((rt0.c1))>((vt1.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT))<((((rt0.c1))>((vt1.c0)))))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))<((((rt0.c1))>((vt1.c0)))))) ISNULL));
SELECT ALL rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM rt0, vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN (((0.44761783481870976)<(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN (((0.44761783481870976)<(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY IN (((0.44761783481870976)<(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (GROUP_CONCAT('1717564000') IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((GROUP_CONCAT('1717564000') IN ()))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((GROUP_CONCAT('1717564000') IN ())) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (GROUP_CONCAT('1717564000') IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((GROUP_CONCAT('1717564000') IN ()))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((GROUP_CONCAT('1717564000') IN ())) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN ((rt0.c1) NOTNULL) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN x'' THEN ((rt0.c1) NOTNULL) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN x'' THEN ((rt0.c1) NOTNULL) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))AND('-627296229')))OR(vt0.c1)))AND(0.42591343155818684)) IN ())) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((((((vt0.c0)AND(vt0.c0)))AND('-627296229')))OR(vt0.c1)))AND(0.42591343155818684)) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND('-627296229')))OR(vt0.c1)))AND(0.42591343155818684)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((0X775e4c40 IN ()))||(rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((0x775e4c40 IN ()))||(rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((0X775e4c40 IN ()))||(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2)) IS TRUE) GROUP BY vt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2)) IS TRUE) GROUP BY vt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING SUM((- (GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2)) IS TRUE) GROUP BY vt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (SUM((- (GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2)) IS TRUE) GROUP BY vt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((SUM((- (GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)IS(vt0.c0)), ((vt0.c1) NOT BETWEEN (0.16040608468423778) AND (vt0.c1)), ((vt0.c1)>(vt0.c1))))<>(((- (vt0.c0)), (NOT (0.5977674025355377)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c1)IS(vt0.c0)), ((vt0.c1) NOT BETWEEN (0.16040608468423778) AND (vt0.c1)), ((vt0.c1)>(vt0.c1))))<>(((- (vt0.c0)), (NOT (0.5977674025355377)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1)IS(vt0.c0)), ((vt0.c1) NOT BETWEEN (0.16040608468423778) AND (vt0.c1)), ((vt0.c1)>(vt0.c1))))<>(((- (vt0.c0)), (NOT (0.5977674025355377)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN (+ (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((-1049002968) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN 'UoF2▒' ELSE -466930908 END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0 COLLATE BINARY  WHEN (+ (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((-1049002968) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))) THEN 'UoF2▒' ELSE -466930908 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0 COLLATE BINARY  WHEN (+ (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((-1049002968) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))) THEN 'UoF2▒' ELSE -466930908 END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(CAST(rt0.c1 AS INTEGER))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(CAST(rt0.c1 AS INTEGER))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((- (x''))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT ((- (x''))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((- (x''))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))OR((vt1.c0 IN ()))))AND('q|'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((CAST(vt1.c0 AS REAL))OR((vt1.c0 IN ()))))AND('q|'))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((CAST(vt1.c0 AS REAL))OR((vt1.c0 IN ()))))AND('q|'))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c2 FROM vt1, rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0, vt0 GROUP BY rt0.c2 HAVING ((SUM(COUNT(vt1.c0)))AND(((((((((x'dfd5')AND(GROUP_CONCAT(vt0.c0))))AND(SUM(COUNT(rt0.c2)))))OR(rt0.c0)))OR(TOTAL(MAX('rU')))))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (((SUM(COUNT(vt1.c0)))AND(((((((((x'dfd5')AND(GROUP_CONCAT(vt0.c0))))AND(SUM(COUNT(rt0.c2)))))OR(rt0.c0)))OR(TOTAL(MAX('rU')))))))) UNION ALL SELECT rt0.c2 FROM vt1, rt0, vt0 GROUP BY rt0.c2 HAVING ((((SUM(COUNT(vt1.c0)))AND(((((((((x'dfd5')AND(GROUP_CONCAT(vt0.c0))))AND(SUM(COUNT(rt0.c2)))))OR(rt0.c0)))OR(TOTAL(MAX('rU'))))))) ISNULL);
SELECT ALL vt1.c0, vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0;
SELECT ALL vt1.c0, vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE (rt0.c0) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL vt1.c0, vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((NOT (vt1.c0))))<(((('Pe')OR(rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((((NOT (vt1.c0))))<(((('Pe')OR(rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((NOT (vt1.c0))))<(((('Pe')OR(rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)>>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)>>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)>>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (+ (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT ((+ (MAX(vt0.c0))))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (((+ (MAX(vt0.c0)))) ISNULL);
SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (+ (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT ((+ (MAX(vt0.c0))))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (((+ (MAX(vt0.c0)))) ISNULL);
SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) ISNULL) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE ((((vt0.c0 IN ()))IS NOT(rt0.c0))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT ((((vt0.c0 IN ()))IS NOT(rt0.c0))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((((vt0.c0 IN ()))IS NOT(rt0.c0))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (((vt0.c1)%(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT DISTINCT vt0.c1 FROM vt0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (((vt0.c1)%(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (((vt0.c1)%(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (((vt0.c1)%(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (((vt0.c1)%(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c0)IS(rt0.c1)) IN ())) GROUP BY rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)IS(rt0.c1)) IN ())))) GROUP BY rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c0)IS(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0 IN (NULL)))GLOB(((vt1.c0)LIKE(rt0.c1)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0 IN (NULL)))GLOB(((vt1.c0)LIKE(rt0.c1)))) GROUP BY rt0.c2 HAVING CAST(TOTAL(MIN(COUNT(*))) AS REAL) UNION ALL SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0 IN (NULL)))GLOB(((vt1.c0)LIKE(rt0.c1)))) GROUP BY rt0.c2 HAVING (NOT (CAST(TOTAL(MIN(COUNT(*))) AS REAL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0 IN (NULL)))GLOB(((vt1.c0)LIKE(rt0.c1)))) GROUP BY rt0.c2 HAVING ((CAST(TOTAL(MIN(COUNT(*))) AS REAL)) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((x'')*(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((x'')*(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((x'')*(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((~ (rt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((~ (rt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((~ (rt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((((vt1.c0)&(vt0.c1))) NOT BETWEEN ((+ (x''))) AND (((((vt1.c0)OR(rt0.c0)))AND(rt0.c2))))) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0, vt1 WHERE ((NOT (((((vt1.c0)&(vt0.c1))) NOT BETWEEN ((+ (x''))) AND (((((vt1.c0)OR(rt0.c0)))AND(rt0.c2))))))) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((((((vt1.c0)&(vt0.c1))) NOT BETWEEN ((+ (x''))) AND (((((vt1.c0)OR(rt0.c0)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT TOTAL(rt0.c0) FROM rt0;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((COALESCE(vt1.c0, vt1.c0) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((COALESCE(vt1.c0, vt1.c0) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((COALESCE(vt1.c0, vt1.c0) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN ((~ (vt1.c0))) AND ((vt1.c0 IN (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN ((~ (vt1.c0))) AND ((vt1.c0 IN (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN ((~ (vt1.c0))) AND ((vt1.c0 IN (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1;
SELECT * FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2 IN ())) ISNULL);
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2 IN ())) ISNULL) WHERE ((((((((rt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, x'')) AND ((rt0.c1, vt0.c1, vt1.c0))))OR((((vt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, rt0.c1)) AND ((rt0.c2, vt1.c0, 0.33572448651378806))))))OR(CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT * FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2 IN ())) ISNULL) WHERE ((NOT ((((((((rt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, x'')) AND ((rt0.c1, vt0.c1, vt1.c0))))OR((((vt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, rt0.c1)) AND ((rt0.c2, vt1.c0, 0.33572448651378806))))))OR(CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT * FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2 IN ())) ISNULL) WHERE ((((((((((rt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, x'')) AND ((rt0.c1, vt0.c1, vt1.c0))))OR((((vt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, rt0.c1)) AND ((rt0.c2, vt1.c0, 0.33572448651378806))))))OR(CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT * FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2 IN ())) ISNULL);
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c1) ISNULL) IN ())) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt0.c1) ISNULL) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c1) ISNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((~ (((rt0.c2) IS FALSE)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((~ (((rt0.c2) IS FALSE)))))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((((~ (((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING TOTAL(((COUNT('27䲁G5-ԭ}r')) BETWEEN (COUNT(*)) AND (COUNT(*)))) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((COUNT('27䲁G5-ԭ}r')) BETWEEN (COUNT(*)) AND (COUNT(*)))))) UNION ALL SELECT rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING ((TOTAL(((COUNT('27䲁G5-ԭ}r')) BETWEEN (COUNT(*)) AND (COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)+(rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)+(rt0.c2)) IN ())))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)+(rt0.c2)) IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (0.38298268266054725) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (0.38298268266054725))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((0.38298268266054725) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c2)))))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 NOT INDEXED, vt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c2)))))))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 WHERE ((((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c2)))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c1;
SELECT ALL rt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c1 HAVING TRIM((SUM(rt0.c0) IN ()), ((rt0.c2)IS NOT(GROUP_CONCAT(SUM(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c1 HAVING (NOT (TRIM((SUM(rt0.c0) IN ()), ((rt0.c2)IS NOT(GROUP_CONCAT(SUM(COUNT(rt0.c1)))))))) UNION ALL SELECT rt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c1 HAVING ((TRIM((SUM(rt0.c0) IN ()), ((rt0.c2)IS NOT(GROUP_CONCAT(SUM(COUNT(rt0.c1))))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS TEXT)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (NULLIF(DISTINCT LOWER(NULL), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (NULLIF(DISTINCT LOWER(NULL), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((NULLIF(DISTINCT LOWER(NULL), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2;
SELECT vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c0 END AS NUMERIC)) GROUP BY vt0.c1, vt0.c0, rt0.c2 UNION SELECT vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN rt0.c0 END AS NUMERIC)))) GROUP BY vt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN rt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG((vt1.c0 IN (MIN(0.6749641724137442)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((vt1.c0 IN (MIN(0.6749641724137442)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG((vt1.c0 IN (MIN(0.6749641724137442))))) ISNULL);
SELECT ALL MAX(((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END)/(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))) FROM vt1, rt0, vt0 ORDER BY ((((((((rt0.c2)AND(((rt0.c0)>=(rt0.c0)))))OR(CAST(vt1.c0 AS TEXT))))AND(((rt0.c1)IS(vt0.c0)))))OR(x'')) ASC  NULLS FIRST, ((((((vt0.c0)>>(vt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR((~ (vt1.c0)))) ASC;
SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, vt1;
SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE (CASE WHEN vt1.c0 THEN 'nl''拂[G⋌2D' END COLLATE RTRIM) UNION ALL SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN 'nl''拂[G⋌2D' END COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN 'nl''拂[G⋌2D' END COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((0.6134461468890602 COLLATE BINARY) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (((0.6134461468890602 COLLATE BINARY) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((0.6134461468890602 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 WHERE (CASE WHEN TRIM(vt0.c0) THEN CAST(vt0.c1 AS BLOB) END) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((NOT (CASE WHEN TRIM(vt0.c0) THEN CAST(vt0.c1 AS BLOB) END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE (((CASE WHEN TRIM(vt0.c0) THEN CAST(vt0.c1 AS BLOB) END) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM(SUM(vt1.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(SUM(vt1.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(SUM(vt1.c0))) ISNULL);
SELECT MAX(((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))*(CAST(rt0.c2 AS REAL)))) FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((- (0.6958317067934929))) IS FALSE)) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((- (0.6958317067934929))) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((- (0.6958317067934929))) IS FALSE)) ISNULL));
SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF((rt0.c1 IN ()));
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF((rt0.c1 IN ())) WHERE ((- (((rt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF((rt0.c1 IN ())) WHERE ((NOT ((- (((rt0.c0) IS FALSE)))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF((rt0.c1 IN ())) WHERE ((((- (((rt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF((rt0.c1 IN ()));
SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)==(vt0.c1)) INNER JOIN vt1 ON ((((rt0.c1)OR(vt0.c0))) IS FALSE) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)==(vt0.c1)) INNER JOIN vt1 ON ((((rt0.c1)OR(vt0.c0))) IS FALSE) WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))) BETWEEN (x'0e8c') AND ((+ (NULL))))) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)=(vt0.c1)) INNER JOIN vt1 ON ((((rt0.c1)OR(vt0.c0))) IS FALSE) WHERE ((NOT (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))) BETWEEN (x'0e8c') AND ((+ (NULL))))))) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)==(vt0.c1)) INNER JOIN vt1 ON ((((rt0.c1)OR(vt0.c0))) IS FALSE) WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))) BETWEEN (x'0e8c') AND ((+ (NULL))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)==(vt0.c1)) INNER JOIN vt1 ON ((((rt0.c1)OR(vt0.c0))) IS FALSE) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1 HAVING TOTAL(GROUP_CONCAT(SUM(vt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(SUM(vt0.c0))))) UNION ALL SELECT rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1 HAVING ((TOTAL(GROUP_CONCAT(SUM(vt0.c0)))) ISNULL);
SELECT * FROM vt1, rt0, vt0;
SELECT * FROM vt1, rt0, vt0 WHERE (TRIM(DISTINCT ((rt0.c0)>=(vt0.c0)), vt0.c0)) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c0)>=(vt0.c0)), vt0.c0)))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE (((TRIM(DISTINCT ((rt0.c0)>=(vt0.c0)), vt0.c0)) ISNULL));
SELECT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt0 ON CASE MAX(rt0.c2, rt0.c2)  WHEN (~ (rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE ((vt0.c1)==(rt0.c2)) END;
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt0 ON CASE MAX(rt0.c2, rt0.c2)  WHEN (~ (rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE ((vt0.c1)==(rt0.c2)) END WHERE (CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN rt0.c0 COLLATE BINARY END) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt0 ON CASE MAX(rt0.c2, rt0.c2)  WHEN (~ (rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE ((vt0.c1)=(rt0.c2)) END WHERE ((NOT (CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN rt0.c0 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt0 ON CASE MAX(rt0.c2, rt0.c2)  WHEN (~ (rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE ((vt0.c1)=(rt0.c2)) END WHERE (((CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN rt0.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt0 ON CASE MAX(rt0.c2, rt0.c2)  WHEN (~ (rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE ((vt0.c1)==(rt0.c2)) END;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (json_insert(vt1.c0, vt0.c0, vt1.c0) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (json_insert(vt1.c0, vt0.c0, vt1.c0) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((json_insert(vt1.c0, vt0.c0, vt1.c0) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((TOTAL(vt1.c0))/(CAST(0xffffffffab698ea6 AS REAL))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (((TOTAL(vt1.c0))/(CAST(0Xffffffffab698ea6 AS REAL))))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((((TOTAL(vt1.c0))/(CAST(0xffffffffab698ea6 AS REAL)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((TOTAL(vt1.c0))/(CAST(0xffffffffab698ea6 AS REAL))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (((TOTAL(vt1.c0))/(CAST(0Xffffffffab698ea6 AS REAL))))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((((TOTAL(vt1.c0))/(CAST(0xffffffffab698ea6 AS REAL)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt1.c0)OR(0.6401818946684203)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(NULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt1.c0)OR(0.6401818946684203)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(NULL)) WHERE (((((vt1.c0)OR(rt0.c1))) NOT NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt1.c0)OR(0.6401818946684203)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(NULL)) WHERE ((NOT (((((vt1.c0)OR(rt0.c1))) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt1.c0)OR(0.6401818946684203)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(NULL)) WHERE (((((((vt1.c0)OR(rt0.c1))) NOT NULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt1.c0)OR(0.6401818946684203)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(NULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (HEX(rt0.c2 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (HEX(rt0.c2 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((HEX(rt0.c2 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (NULL) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0) COLLATE RTRIM)AND(TOTAL(TOTAL(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0) COLLATE RTRIM)AND(TOTAL(TOTAL(COUNT(*))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0) COLLATE RTRIM)AND(TOTAL(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE;
SELECT vt0.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE WHERE (((rt0.c1)|(((rt0.c2)>=(vt0.c0))))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE WHERE ((NOT (((rt0.c1)|(((rt0.c2)>=(vt0.c0))))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE WHERE (((((rt0.c1)|(((rt0.c2)>=(vt0.c0))))) ISNULL));
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ('') UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 COLLATE RTRIM ELSE CAST('	g' AS INTEGER) END GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 COLLATE RTRIM ELSE CAST('	g' AS INTEGER) END WHERE (((((rt0.c1) IS TRUE)) NOTNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 COLLATE RTRIM ELSE CAST('	g' AS INTEGER) END WHERE ((NOT (((((rt0.c1) IS TRUE)) NOTNULL)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 COLLATE RTRIM ELSE CAST('	g' AS INTEGER) END WHERE (((((((rt0.c1) IS TRUE)) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 COLLATE RTRIM ELSE CAST('	g' AS INTEGER) END GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((vt0.c1) NOT BETWEEN (MIN(vt0.c0)) AND (vt0.c0))) NOT BETWEEN (SUM(vt0.c0)) AND (COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((vt0.c1) NOT BETWEEN (MIN(vt0.c0)) AND (vt0.c0))) NOT BETWEEN (SUM(vt0.c0)) AND (COUNT(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((vt0.c1) NOT BETWEEN (MIN(vt0.c0)) AND (vt0.c0))) NOT BETWEEN (SUM(vt0.c0)) AND (COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((vt0.c1) NOT BETWEEN (MIN(vt0.c0)) AND (vt0.c0))) NOT BETWEEN (SUM(vt0.c0)) AND (COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((vt0.c1) NOT BETWEEN (MIN(vt0.c0)) AND (vt0.c0))) NOT BETWEEN (SUM(vt0.c0)) AND (COUNT(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((vt0.c1) NOT BETWEEN (MIN(vt0.c0)) AND (vt0.c0))) NOT BETWEEN (SUM(vt0.c0)) AND (COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((((((('1406512899')OR(vt1.c0)))OR('GGN ')))AND(vt1.c0)))OR(rt0.c1))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((((((('1406512899')OR(vt1.c0)))OR('GGN ')))AND(vt1.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((((((((('1406512899')OR(vt1.c0)))OR('GGN ')))AND(vt1.c0)))OR(rt0.c1))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN (+ (rt0.c1)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN '67062913' THEN '' END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN (+ (rt0.c1)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN '67062913' THEN '' END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN (+ (rt0.c1)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN '67062913' THEN '' END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(((rt0.c0) IS FALSE))))AND((((rt0.c1))<>((rt0.c0)))))) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2 COLLATE RTRIM)OR(((rt0.c0) IS FALSE))))AND((((rt0.c1))<>((rt0.c0)))))))) GROUP BY rt0.c2, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c0) IS FALSE))))AND((((rt0.c1))<>((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN (- (vt1.c0)) THEN SUM(COUNT(COUNT(vt1.c0))) ELSE ABS(AVG(vt1.c0)) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN (- (vt1.c0)) THEN SUM(COUNT(COUNT(vt1.c0))) ELSE ABS(AVG(vt1.c0)) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN (- (vt1.c0)) THEN SUM(COUNT(COUNT(vt1.c0))) ELSE ABS(AVG(vt1.c0)) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((~ (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((~ (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((~ (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, rt0 WHERE ((((rt0.c2, vt0.c1, '')) NOT BETWEEN ((vt0.c1, (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c1))), CAST(vt0.c0 AS TEXT))) AND ((NULL, vt0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((((rt0.c2, vt0.c1, '')) NOT BETWEEN ((vt0.c1, (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c1))), CAST(vt0.c0 AS TEXT))) AND ((NULL, vt0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0, rt0 WHERE ((((((rt0.c2, vt0.c1, '')) NOT BETWEEN ((vt0.c1, (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c1))), CAST(vt0.c0 AS TEXT))) AND ((NULL, vt0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0;
SELECT rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(*)) BETWEEN (-1.808784692E9) AND (MAX(rt0.c2))) UNION ALL SELECT rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(*)) BETWEEN (-1.808784692E9) AND (MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING ((((COUNT(*)) BETWEEN (-1.808784692E9) AND (MAX(rt0.c2)))) ISNULL);
SELECT rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(*)) BETWEEN (-1.808784692E9) AND (MAX(rt0.c2))) UNION ALL SELECT rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(*)) BETWEEN (-1.808784692E9) AND (MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING ((((COUNT(*)) BETWEEN (-1.808784692E9) AND (MAX(rt0.c2)))) ISNULL);
SELECT rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS REAL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOTNULL)) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL)) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOTNULL)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT TOTAL(CASE WHEN ((vt0.c1)>=(vt0.c1)) THEN vt0.c0 END) FROM vt0 ORDER BY ((- (vt0.c1)) IN ()) DESC  NULLS LAST, (+ (x''))  NULLS LAST;
SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 NATURAL JOIN rt0;
SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((CAST(vt0.c1 AS REAL) IN (vt1.c0))) UNION ALL SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT ((CAST(vt0.c1 AS REAL) IN (vt1.c0))))) UNION ALL SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((CAST(vt0.c1 AS REAL) IN (vt1.c0))) ISNULL));
SELECT vt0.c0, rt0.c0, vt1.c0 FROM vt0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c1)>>(vt0.c1))));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c1)>>(vt0.c1)))) WHERE (((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, NULL)) AND ((rt0.c2, vt0.c0, rt0.c0))) IN ())) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c1)>>(vt0.c1)))) WHERE ((NOT (((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, NULL)) AND ((rt0.c2, vt0.c0, rt0.c0))) IN ())))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c1)>>(vt0.c1)))) WHERE (((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, NULL)) AND ((rt0.c2, vt0.c0, rt0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c1)>>(vt0.c1))));
SELECT rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, vt1, rt0 WHERE (CASE x''  WHEN 1.724407272E9 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 END COLLATE NOCASE) GROUP BY rt0.c1, vt0.c0 UNION SELECT rt0.c1, vt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (CASE x''  WHEN 1.724407272E9 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 END COLLATE NOCASE))) GROUP BY rt0.c1, vt0.c0 UNION SELECT rt0.c1, vt0.c0 FROM vt0, vt1, rt0 WHERE (((CASE x''  WHEN 1.724407272E9 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 END COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (((rt0.c1) IS FALSE) IN ()) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((rt0.c1) IS FALSE) IN ()))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (((((rt0.c1) IS FALSE) IN ())) ISNULL);
SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (((rt0.c1) IS FALSE) IN ()) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((rt0.c1) IS FALSE) IN ()))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (((((rt0.c1) IS FALSE) IN ())) ISNULL);
SELECT vt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((+ (vt0.c0))) NOT BETWEEN (COALESCE(DISTINCT rt0.c2, vt1.c0)) AND (rt0.c1))) UNION ALL SELECT * FROM rt0, vt0 NOT INDEXED, vt1 WHERE ((NOT ((((+ (vt0.c0))) NOT BETWEEN (COALESCE(DISTINCT rt0.c2, vt1.c0)) AND (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((+ (vt0.c0))) NOT BETWEEN (COALESCE(DISTINCT rt0.c2, vt1.c0)) AND (rt0.c1))) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((NOT (vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((((NOT (vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((NOT (vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))/((((vt1.c0))>((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))/((((vt1.c0))>((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))/((((vt1.c0))>((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING MIN(COUNT(-301188535)) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (MIN(COUNT(-301188535)))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING ((MIN(COUNT(-301188535))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)OR(vt1.c0)))))AND(vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)OR(vt1.c0)))))AND(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE (((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)OR(vt1.c0)))))AND(vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((x'') ISNULL);
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((x'') ISNULL) WHERE (((vt0.c0)GLOB(((vt0.c1)/(0.3348923166295218))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((x'') ISNULL) WHERE ((NOT (((vt0.c0)GLOB(((vt0.c1)/(0.3348923166295218))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((x'') ISNULL) WHERE (((((vt0.c0)GLOB(((vt0.c1)/(0.3348923166295218))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((x'') ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0)==(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)=(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (MIN(rt0.c2) IN (CAST(vt0.c1 AS BLOB))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT ((MIN(rt0.c2) IN (CAST(vt0.c1 AS BLOB))))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (((MIN(rt0.c2) IN (CAST(vt0.c1 AS BLOB)))) ISNULL);
SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (MIN(rt0.c2) IN (CAST(vt0.c1 AS BLOB))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT ((MIN(rt0.c2) IN (CAST(vt0.c1 AS BLOB))))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (((MIN(rt0.c2) IN (CAST(vt0.c1 AS BLOB)))) ISNULL);
SELECT rt0.c0, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((+ (904321673)))) AND (((~ (rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((+ (904321673)))) AND (((~ (rt0.c0)))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((+ (904321673)))) AND (((~ (rt0.c0)))))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (STRFTIME(vt1.c0, ((vt1.c0)||(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (STRFTIME(vt1.c0, ((vt1.c0)||(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((STRFTIME(vt1.c0, ((vt1.c0)||(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c0, rt0.c0;
SELECT ALL vt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((vt0.c0 IN ())) GROUP BY vt0.c1, vt1.c0, rt0.c0 UNION SELECT vt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((vt0.c0 IN ())))) GROUP BY vt0.c1, vt1.c0, rt0.c0 UNION SELECT vt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) GROUP BY vt0.c1, vt1.c0, rt0.c0;
SELECT vt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING '1149174268' UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ('1149174268')) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('1149174268') ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING '1149174268' UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ('1149174268')) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('1149174268') ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)OR(''))) NOT BETWEEN (((rt0.c1)*(NULL))) AND (NULL))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1)OR(''))) NOT BETWEEN (((rt0.c1)*(NULL))) AND (NULL))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)OR(''))) NOT BETWEEN (((rt0.c1)*(NULL))) AND (NULL))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE WHEN LOWER(vt0.c1) THEN NULL WHEN ((((rt0.c0)OR('_')))OR(vt0.c0)) THEN x'98fd' WHEN ((((((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c0) IS TRUE) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN LOWER(vt0.c1) THEN NULL WHEN ((((rt0.c0)OR('_')))OR(vt0.c0)) THEN x'98fd' WHEN ((((((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c0) IS TRUE) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN LOWER(vt0.c1) THEN NULL WHEN ((((rt0.c0)OR('_')))OR(vt0.c0)) THEN x'98fd' WHEN ((((((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c0) IS TRUE) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((((vt0.c1 IN ()))>=(CAST(rt0.c2 AS TEXT)))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c1 IN ()))>=(CAST(rt0.c2 AS TEXT)))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c1 IN ()))>=(CAST(rt0.c2 AS TEXT)))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (0.8723854905275303) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (0.8723854905275303))) UNION ALL SELECT ALL * FROM vt1 WHERE (((0.8723854905275303) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(rt0.c2))) AND (((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(rt0.c2))) AND (((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(rt0.c2))) AND (((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST('-1419145562' AS TEXT) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST('-1419145562' AS TEXT) WHERE ((+ (((rt0.c0)||(NULL))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST('-1419145562' AS TEXT) WHERE ((NOT ((+ (((rt0.c0)||(NULL))))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST('-1419145562' AS TEXT) WHERE ((((+ (((rt0.c0)||(NULL))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST('-1419145562' AS TEXT) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING MAX((SUM(vt0.c1) IN (vt0.c0, MAX(GROUP_CONCAT(TOTAL(vt0.c0)))))) UNION ALL SELECT rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (MAX((SUM(vt0.c1) IN (vt0.c0, MAX(GROUP_CONCAT(TOTAL(vt0.c0)))))))) UNION ALL SELECT rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING ((MAX((SUM(vt0.c1) IN (vt0.c0, MAX(GROUP_CONCAT(TOTAL(vt0.c0))))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((~ (((rt0.c1)%(rt0.c1))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((~ (((rt0.c1)%(rt0.c1))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((~ (((rt0.c1)%(rt0.c1))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (x'677ef8ce')) AS REAL)) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (x'677ef8ce')) AS REAL)))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1, rt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (x'677ef8ce')) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)|(vt0.c0))))>((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1)|(vt0.c0))))>((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c1)|(vt0.c0))))>((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT((COUNT(*) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((COUNT(*) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((COUNT(*) IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT((COUNT(*) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((COUNT(*) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((COUNT(*) IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((NOT (vt0.c1)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((NOT (vt0.c1)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((NOT (vt0.c1)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((vt0.c0))>((rt0.c2))))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND(((vt1.c0) IS FALSE))) LEFT OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN CAST(vt1.c0 AS TEXT) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) END;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((vt0.c0))>((rt0.c2))))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND(((vt1.c0) IS FALSE))) LEFT OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN CAST(vt1.c0 AS TEXT) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) END WHERE ((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) IN (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((vt0.c0))>((rt0.c2))))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND(((vt1.c0) IS FALSE))) LEFT OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN CAST(vt1.c0 AS TEXT) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) END WHERE ((NOT ((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) IN (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((vt0.c0))>((rt0.c2))))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND(((vt1.c0) IS FALSE))) LEFT OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN CAST(vt1.c0 AS TEXT) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) END WHERE ((((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) IN (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((vt0.c0))>((rt0.c2))))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND(((vt1.c0) IS FALSE))) LEFT OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN CAST(vt1.c0 AS TEXT) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) END;
SELECT rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END IN ())) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END IN ())))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((((CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING SUM(vt0.c1) COLLATE NOCASE UNION ALL SELECT rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (SUM(vt0.c1) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((SUM(vt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING SUM(vt0.c1) COLLATE NOCASE UNION ALL SELECT rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (SUM(vt0.c1) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((SUM(vt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN 0.2722714047857615 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND (((NOT (vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN 0.2722714047857615 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND (((NOT (vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN 0.2722714047857615 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND (((NOT (vt0.c0)))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (241808164) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (241808164))) UNION SELECT DISTINCT * FROM vt1 WHERE (((241808164) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c1)AND(vt1.c0))))<=((((vt1.c0)||(rt0.c2)))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c1)AND(vt1.c0))))<=((((vt1.c0)||(rt0.c2)))))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((((((rt0.c1)AND(vt1.c0))))<=((((vt1.c0)||(rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING LOWER(DISTINCT TOTAL(-417316408)) UNION ALL SELECT ALL vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (LOWER(DISTINCT TOTAL(-417316408)))) UNION ALL SELECT ALL vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((LOWER(DISTINCT TOTAL(-417316408))) ISNULL);
SELECT vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING LOWER(DISTINCT TOTAL(-417316408)) UNION ALL SELECT ALL vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (LOWER(DISTINCT TOTAL(-417316408)))) UNION ALL SELECT ALL vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((LOWER(DISTINCT TOTAL(-417316408))) ISNULL);
SELECT vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((- (rt0.c2)))+((~ (rt0.c1)))) CROSS JOIN vt0 ON (('肞7T6QEmB{') IS FALSE) GROUP BY vt0.c1, rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c1, vt1.c0 FROM vt1, rt0, vt0;
SELECT rt0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c1, vt1.c0 FROM vt1, rt0, vt0 WHERE (TRIM(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), x'')) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c1, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (TRIM(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), x'')))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c1, vt1.c0 FROM vt1, rt0, vt0 WHERE (((TRIM(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), x'')) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c1, vt1.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c2)OR((((rt0.c2))<>((rt0.c0))))))OR((vt0.c0 IN ())))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)OR((((rt0.c2))!=((rt0.c0))))))OR((vt0.c0 IN ())))))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c2)OR((((rt0.c2))<>((rt0.c0))))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((+ (rt0.c1)) IN ((rt0.c1 IN ()), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((+ (rt0.c1)) IN ((rt0.c1 IN ()), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) WHERE (((((((((rt0.c2)AND(vt1.c0)))OR(HEX(DISTINCT rt0.c2))))OR(((1821089477)GLOB(rt0.c2)))))AND((~ (rt0.c0))))) UNION ALL SELECT * FROM rt0 INNER JOIN vt1 ON ((+ (rt0.c1)) IN ((rt0.c1 IN ()), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) WHERE ((NOT (((((((((rt0.c2)AND(vt1.c0)))OR(HEX(DISTINCT rt0.c2))))OR(((1821089477)GLOB(rt0.c2)))))AND((~ (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((+ (rt0.c1)) IN ((rt0.c1 IN ()), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) WHERE (((((((((((rt0.c2)AND(vt1.c0)))OR(HEX(DISTINCT rt0.c2))))OR(((1821089477)GLOB(rt0.c2)))))AND((~ (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((+ (rt0.c1)) IN ((rt0.c1 IN ()), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((json_quote(rt0.c0)) IS FALSE) CROSS JOIN vt0 ON (((vt1.c0 IN (vt1.c0)))-(((vt0.c1)%(rt0.c0))));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((json_quote(rt0.c0)) IS FALSE) CROSS JOIN vt0 ON (((vt1.c0 IN (vt1.c0)))-(((vt0.c1)%(rt0.c0)))) WHERE (json_array((vt0.c1 IN ()), (((x'61f9'))<=((vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((json_quote(rt0.c0)) IS FALSE) CROSS JOIN vt0 ON (((vt1.c0 IN (vt1.c0)))-(((vt0.c1)%(rt0.c0)))) WHERE ((NOT (json_array((vt0.c1 IN ()), (((x'61f9'))<=((vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((json_quote(rt0.c0)) IS FALSE) CROSS JOIN vt0 ON (((vt1.c0 IN (vt1.c0)))-(((vt0.c1)%(rt0.c0)))) WHERE (((json_array((vt0.c1 IN ()), (((x'61f9'))<=((vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((json_quote(rt0.c0)) IS FALSE) CROSS JOIN vt0 ON (((vt1.c0 IN (vt1.c0)))-(((vt0.c1)%(rt0.c0))));
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((+ (vt1.c0))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((+ (vt1.c0))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((+ (vt1.c0))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(SUM(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(SUM(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(SUM(COUNT(*)))) ISNULL);
SELECT * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT ((CAST(rt0.c1 AS INTEGER) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((CAST(rt0.c1 AS INTEGER) IN ())) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((((vt0.c1)IS(vt0.c1)))OR((+ (vt0.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (((((vt0.c1)IS(vt0.c1)))OR((+ (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((((((vt0.c1)IS(vt0.c1)))OR((+ (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((LIKELIHOOD(DISTINCT vt1.c0, 0.4516881605466291)))=((((vt0.c1)-(vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((LIKELIHOOD(DISTINCT vt1.c0, 0.4516881605466291)))==((((vt0.c1)-(vt0.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((LIKELIHOOD(DISTINCT vt1.c0, 0.4516881605466291)))=((((vt0.c1)-(vt0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((MAX(NULL))<=(CASE GROUP_CONCAT(AVG(vt0.c1))  WHEN MIN(AVG(vt0.c1)) THEN COUNT(COUNT(*)) WHEN GROUP_CONCAT(vt1.c0) THEN COUNT(*) WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((MAX(NULL))<=(CASE GROUP_CONCAT(AVG(vt0.c1))  WHEN MIN(AVG(vt0.c1)) THEN COUNT(COUNT(*)) WHEN GROUP_CONCAT(vt1.c0) THEN COUNT(*) WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((MAX(NULL))<=(CASE GROUP_CONCAT(AVG(vt0.c1))  WHEN MIN(AVG(vt0.c1)) THEN COUNT(COUNT(*)) WHEN GROUP_CONCAT(vt1.c0) THEN COUNT(*) WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE) WHERE ((((0.5696541694121023 IN ('0.9419194607947922')))||(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE) WHERE ((NOT ((((0.5696541694121023 IN ('0.9419194607947922')))||(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE) WHERE ((((((0.5696541694121023 IN ('0.9419194607947922')))||(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE);
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN vt1 ON RTRIM(CAST(x'' AS REAL));
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN vt1 ON RTRIM(CAST(x'' AS REAL)) WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN vt1 ON RTRIM(CAST(x'' AS REAL)) WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN vt1 ON RTRIM(CAST(x'' AS REAL)) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN vt1 ON RTRIM(CAST(x'' AS REAL));
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CAST(highlight(rt0.c1, rt0.c1, rt0.c1, rt0.c2) AS NUMERIC)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(highlight(rt0.c1, rt0.c1, rt0.c1, rt0.c2) AS NUMERIC)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST(highlight(rt0.c1, rt0.c1, rt0.c1, rt0.c2) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END, STRFTIME(vt0.c1, rt0.c2, rt0.c2), ((((vt0.c1)OR(vt0.c1)))AND(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), vt0.c0, rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END, STRFTIME(vt0.c1, rt0.c2, rt0.c2), ((((vt0.c1)OR(vt0.c1)))AND(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), vt0.c0, rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING MIN(COUNT(rt0.c2)) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END, STRFTIME(vt0.c1, rt0.c2, rt0.c2), ((((vt0.c1)OR(vt0.c1)))AND(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), vt0.c0, rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (MIN(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END, STRFTIME(vt0.c1, rt0.c2, rt0.c2), ((((vt0.c1)OR(vt0.c1)))AND(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), vt0.c0, rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING ((MIN(COUNT(rt0.c2))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1 NOT INDEXED, vt0, rt0 WHERE ((((((rt0.c0)||(rt0.c1)), (- (vt0.c0)), ((vt0.c1)<(vt1.c0))))>=((CAST(rt0.c2 AS BLOB), ((rt0.c1)=(0X2bbdb810)), ((vt1.c0)>(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((((((rt0.c0)||(rt0.c1)), (- (vt0.c0)), ((vt0.c1)<(vt1.c0))))>=((CAST(rt0.c2 AS BLOB), ((rt0.c1)=(0x2bbdb810)), ((vt1.c0)>(rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 NOT INDEXED, rt0 WHERE ((((((((rt0.c0)||(rt0.c1)), (- (vt0.c0)), ((vt0.c1)<(vt1.c0))))>=((CAST(rt0.c2 AS BLOB), ((rt0.c1)==(0x2bbdb810)), ((vt1.c0)>(rt0.c0)))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((NOT ((~ (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((~ (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1 NATURAL JOIN vt0 GROUP BY rt0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL rt0.c0, vt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC)))<=((((vt1.c0)||(vt0.c1)))))) GROUP BY rt0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT rt0.c0, vt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((NOT ((((CAST(vt0.c1 AS NUMERIC)))<=((((vt1.c0)||(vt0.c1)))))))) GROUP BY rt0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT rt0.c0, vt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((((((CAST(vt0.c1 AS NUMERIC)))<=((((vt1.c0)||(vt0.c1)))))) ISNULL)) GROUP BY rt0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT rt0.c0, vt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1 NATURAL JOIN vt0 GROUP BY rt0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(-2059309163) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(-2059309163))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(-2059309163)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(-2059309163) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(-2059309163))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(-2059309163)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(COALESCE(DISTINCT rt0.c0, rt0.c2) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(COALESCE(DISTINCT rt0.c0, rt0.c2) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(COALESCE(DISTINCT rt0.c0, rt0.c2) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (((vt0.c1) NOT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (((((vt0.c1) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN (rt0.c1 IN ()) WHEN ((vt0.c0)*(rt0.c1)) THEN rt0.c0 COLLATE BINARY WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END THEN NULLIF(DISTINCT rt0.c1, rt0.c1) END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN (vt0.c1 IN ()) THEN (rt0.c1 IN ()) WHEN ((vt0.c0)*(rt0.c1)) THEN rt0.c0 COLLATE BINARY WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END THEN NULLIF(DISTINCT rt0.c1, rt0.c1) END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN (vt0.c1 IN ()) THEN (rt0.c1 IN ()) WHEN ((vt0.c0)*(rt0.c1)) THEN rt0.c0 COLLATE BINARY WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END THEN NULLIF(DISTINCT rt0.c1, rt0.c1) END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING TOTAL((COUNT(*) IN ())) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING (NOT (TOTAL((COUNT(*) IN ())))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING ((TOTAL((COUNT(*) IN ()))) ISNULL);
SELECT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING TOTAL((COUNT(*) IN ())) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING (NOT (TOTAL((COUNT(*) IN ())))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING ((TOTAL((COUNT(*) IN ()))) ISNULL);
SELECT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, 0.16284011238087848)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(((vt0.c0)AND(vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((NOT (NULL))) ORDER BY (((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, 0.16284011238087848)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(((vt0.c0)AND(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((NULL) ISNULL)) ORDER BY (((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, 0.16284011238087848)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(((vt0.c0)AND(vt0.c0))));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1)-(vt0.c0)) WHEN LOWER(rt0.c1) THEN ((rt0.c0) NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE json_type(6.7062913E7) END) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1)-(vt0.c0)) WHEN LOWER(rt0.c1) THEN ((rt0.c0) NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE json_type(6.7062913E7) END))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1)-(vt0.c0)) WHEN LOWER(rt0.c1) THEN ((rt0.c0) NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE json_type(6.7062913E7) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE (((((vt1.c0)OR(vt0.c1))) NOTNULL)) GROUP BY vt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c1, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (((((vt1.c0)OR(vt0.c1))) NOTNULL)))) GROUP BY vt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE (((((((vt1.c0)OR(vt0.c1))) NOTNULL)) ISNULL)) GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING SUM(x'') UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(x''))) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING ((SUM(x'')) ISNULL);
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING SUM(x'') UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(x''))) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING ((SUM(x'')) ISNULL);
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT MIN(((- (NULL)) IN (rt0.c0, rt0.c0 COLLATE NOCASE))) FROM rt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0;
SELECT rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((+ (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((((+ (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((((+ (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))) AND (CASE WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN x'e28d277c' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((CASE vt1.c0  WHEN vt1.c0 THEN x'e28d277c' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN x'e28d277c' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING MAX(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MAX(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MAX(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM rt0 NATURAL JOIN vt1;
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END)/(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(vt1.c0)))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c1 END)/(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(vt1.c0)))AND(rt0.c0))))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 END)/(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(vt1.c0)))AND(rt0.c0))))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST(((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 IN ()) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 IN ()) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((SUM(GROUP_CONCAT(rt0.c1))) NOT NULL) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((SUM(GROUP_CONCAT(rt0.c1))) NOT NULL) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((SUM(GROUP_CONCAT(rt0.c1))) NOT NULL) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((SUM(GROUP_CONCAT(rt0.c1))) NOT NULL) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((SUM(GROUP_CONCAT(rt0.c1))) NOT NULL) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((SUM(GROUP_CONCAT(rt0.c1))) NOT NULL) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT SUM(((vt1.c0)-(rt0.c0)) COLLATE NOCASE) FROM vt1, rt0 NOT INDEXED ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((((rt0.c2) IS FALSE)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) IS FALSE)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((((rt0.c0 IN ())) IS FALSE)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((rt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON UPPER(DISTINCT ((rt0.c2)IS NOT(rt0.c1))) INNER JOIN vt0 ON 'W?KZ*e' COLLATE BINARY;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON UPPER(DISTINCT ((rt0.c2)IS NOT(rt0.c1))) INNER JOIN vt0 ON 'W?KZ*e' COLLATE BINARY WHERE (CASE ((rt0.c2) NOTNULL)  WHEN json(rt0.c1) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt1.c0)||(vt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON UPPER(DISTINCT ((rt0.c2)IS NOT(rt0.c1))) INNER JOIN vt0 ON 'W?KZ*e' COLLATE BINARY WHERE ((NOT (CASE ((rt0.c2) NOTNULL)  WHEN json(rt0.c1) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt1.c0)||(vt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON UPPER(DISTINCT ((rt0.c2)IS NOT(rt0.c1))) INNER JOIN vt0 ON 'W?KZ*e' COLLATE BINARY WHERE (((CASE ((rt0.c2) NOTNULL)  WHEN json(rt0.c1) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt1.c0)||(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON UPPER(DISTINCT ((rt0.c2)IS NOT(rt0.c1))) INNER JOIN vt0 ON 'W?KZ*e' COLLATE BINARY;
SELECT ALL vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING json_type(GROUP_CONCAT(-417316408)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (json_type(GROUP_CONCAT(-417316408)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((json_type(GROUP_CONCAT(-417316408))) ISNULL);
SELECT rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN MIN(rt0.c1, rt0.c1) THEN ((rt0.c0) IS TRUE) ELSE ABS(rt0.c1) END;
SELECT rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN MIN(rt0.c1, rt0.c1) THEN ((rt0.c0) IS TRUE) ELSE ABS(rt0.c1) END WHERE (rt0.c2) UNION ALL SELECT rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN MIN(rt0.c1, rt0.c1) THEN ((rt0.c0) IS TRUE) ELSE ABS(rt0.c1) END WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN MIN(rt0.c1, rt0.c1) THEN ((rt0.c0) IS TRUE) ELSE ABS(rt0.c1) END WHERE (((rt0.c2) ISNULL));
SELECT rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN MIN(rt0.c1, rt0.c1) THEN ((rt0.c0) IS TRUE) ELSE ABS(rt0.c1) END;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((NULL) ISNULL))))OR(CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((NULL) ISNULL))))OR(CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((NULL) ISNULL))))OR(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (CAST(vt0.c1 AS TEXT)) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c1 AS TEXT)))) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT)) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 NOT INDEXED;
SELECT ALL rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE (LIKELY(DISTINCT rt0.c0) COLLATE NOCASE) UNION ALL SELECT rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE ((NOT (LIKELY(DISTINCT rt0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((LIKELY(DISTINCT rt0.c0) COLLATE NOCASE) ISNULL));
SELECT rt0.c2 FROM vt0, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN json_patch('', rt0.c0) THEN ((rt0.c0)&(rt0.c2)) ELSE CASE rt0.c2  WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END END) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN json_patch('', rt0.c0) THEN ((rt0.c0)&(rt0.c2)) ELSE CASE rt0.c2  WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN json_patch('', rt0.c0) THEN ((rt0.c0)&(rt0.c2)) ELSE CASE rt0.c2  WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((~ (rt0.c0))) NOT NULL)) GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((~ (rt0.c0))) NOT NULL)))) GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((~ (rt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING CASE GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*))))  WHEN rtreenode(SUM(vt0.c0), vt0.c0) THEN AVG(AVG(0.2618270775690619)) END UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*))))  WHEN rtreenode(SUM(vt0.c0), vt0.c0) THEN AVG(AVG(0.2618270775690619)) END)) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((CASE GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*))))  WHEN rtreenode(SUM(vt0.c0), vt0.c0) THEN AVG(AVG(0.2618270775690619)) END) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((vt0.c1) NOT NULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (((vt0.c1) NOT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((((vt0.c1) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, rt0 NOT INDEXED, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (json_type(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_type(vt1.c0 COLLATE BINARY)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((json_type(vt1.c0 COLLATE BINARY)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c1)*(vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c1)*(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c1)*(vt0.c1))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c1)*(vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c1)*(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c1)*(vt0.c1))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ((((vt0.c1)>=(rt0.c0)) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ((NOT ((((vt0.c1)>=(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ((((((vt0.c1)>=(rt0.c0)) IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON vt0.c0;
SELECT DISTINCT vt1.c0, vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0, vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE ((+ (((NULL)%(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT ((+ (((NULL)%(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE ((((+ (((NULL)%(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, vt0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (-2.91915559E8) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (-2.91915559E8))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((-2.91915559E8) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING LOWER(DISTINCT vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (LOWER(DISTINCT vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((LOWER(DISTINCT vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING LOWER(DISTINCT vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (LOWER(DISTINCT vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((LOWER(DISTINCT vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) IS TRUE)) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)<=(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)<=(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)<=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)AND(0.6844805437101953)))AND(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))))AND(json_object(vt0.c1, x'')))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(0.6844805437101953)))AND(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))))AND(json_object(vt0.c1, x'')))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((vt0.c0)AND(0.6844805437101953)))AND(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))))AND(json_object(vt0.c1, x'')))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MIN(MAX(TOTAL(MIN(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(MAX(TOTAL(MIN(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(MAX(TOTAL(MIN(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c1) NOTNULL))*(CASE WHEN vt0.c1 THEN vt0.c1 ELSE '' END))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1) NOTNULL))*(CASE WHEN vt0.c1 THEN vt0.c1 ELSE '' END))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c1) NOTNULL))*(CASE WHEN vt0.c1 THEN vt0.c1 ELSE '' END))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c0 FROM vt0, rt0, vt1 WHERE (ABS(((NULL) NOT BETWEEN (vt0.c1) AND (-1.376874626E9)))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (ABS(((NULL) NOT BETWEEN (vt0.c1) AND (-1.376874626E9)))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0, vt1 WHERE (((ABS(((NULL) NOT BETWEEN (vt0.c1) AND (-1.376874626E9)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)%(vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)%(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)%(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c1, rt0.c0 HAVING GROUP_CONCAT(TOTAL(vt0.c1)) COLLATE RTRIM UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt0.c1)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt0.c1)) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '1197227690' INNER JOIN vt1 ON x'';
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON '1197227690' INNER JOIN vt1 ON x'' WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '1197227690' INNER JOIN vt1 ON x'' WHERE ((NOT (CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '1197227690' INNER JOIN vt1 ON x'' WHERE (((CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '1197227690' INNER JOIN vt1 ON x'';
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('kkuVx') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ('kkuVx'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('kkuVx') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0)LIKE(vt0.c1)) COLLATE BINARY COLLATE NOCASE) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((vt0.c0)LIKE(vt0.c1)) COLLATE BINARY COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c0)LIKE(vt0.c1)) COLLATE BINARY COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING SUM((((rt0.c0)) NOT BETWEEN ((MAX(SUM(AVG(MIN(rt0.c1)))))) AND ((MAX(COUNT(*)))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (SUM((((rt0.c0)) NOT BETWEEN ((MAX(SUM(AVG(MIN(rt0.c1)))))) AND ((MAX(COUNT(*)))))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING ((SUM((((rt0.c0)) NOT BETWEEN ((MAX(SUM(AVG(MIN(rt0.c1)))))) AND ((MAX(COUNT(*))))))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((MIN(rt0.c2, '1860163741'))<=((- (rt0.c0))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((MIN(rt0.c2, '1860163741'))<=((- (rt0.c0))))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((((MIN(rt0.c2, '1860163741'))<=((- (rt0.c0))))) ISNULL));
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) WHERE (TYPEOF(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END)) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) WHERE ((NOT (TYPEOF(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END)))) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) WHERE (((TYPEOF(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END)) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL vt0.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c1, rt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c1, rt0.c1, vt1.c0, vt0.c0 HAVING MIN(CASE TOTAL(vt0.c0)  WHEN vt0.c1 THEN MIN(MAX(COUNT(SUM(vt1.c0)))) WHEN rt0.c0 THEN COUNT(rt0.c2) WHEN vt1.c0 THEN MIN(rt0.c0) ELSE '-615889980' END) UNION ALL SELECT vt0.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c1, rt0.c1, vt1.c0, vt0.c0 HAVING (NOT (MIN(CASE TOTAL(vt0.c0)  WHEN vt0.c1 THEN MIN(MAX(COUNT(SUM(vt1.c0)))) WHEN rt0.c0 THEN COUNT(rt0.c2) WHEN vt1.c0 THEN MIN(rt0.c0) ELSE '-615889980' END))) UNION ALL SELECT vt0.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c1, rt0.c1, vt1.c0, vt0.c0 HAVING ((MIN(CASE TOTAL(vt0.c0)  WHEN vt0.c1 THEN MIN(MAX(COUNT(SUM(vt1.c0)))) WHEN rt0.c0 THEN COUNT(rt0.c2) WHEN vt1.c0 THEN MIN(rt0.c0) ELSE '-615889980' END)) ISNULL);
SELECT * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN 'n!C㓨lX㟎 ' ELSE ROUND(rt0.c0, rt0.c2) END) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (CASE WHEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN 'n!C㓨lX㟎 ' ELSE ROUND(rt0.c0, rt0.c2) END))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE (((CASE WHEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN 'n!C㓨lX㟎 ' ELSE ROUND(rt0.c0, rt0.c2) END) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 NOT INDEXED WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0))) IS FALSE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0))) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0))) IS FALSE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (+ (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)) CROSS JOIN rt0 ON CHANGES() GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1)))IS NOT(((rt0.c2)=(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c1)))IS NOT(((rt0.c2)=(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1)))IS NOT(((rt0.c2)==(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(rt0.c0))<<(TOTAL(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((SUM(rt0.c0))<<(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((SUM(rt0.c0))<<(TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(rt0.c0))<<(TOTAL(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((SUM(rt0.c0))<<(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((SUM(rt0.c0))<<(TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM vt1, rt0, vt0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((vt1.c0)IS NOT(vt0.c0)) IN ())) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE ((NOT ((((vt1.c0)IS NOT(vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE ((((((vt1.c0)IS NOT(vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((((rt0.c0)*(rt0.c0)) IN ())) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c0)*(rt0.c0)) IN ())))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0)*(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR((((((((('|o}1Q<F^')AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))))OR((- (rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR((((((((('|o}1Q<F^')AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))))OR((- (rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1)) GROUP BY rt0.c0 HAVING GROUP_CONCAT(CASE WHEN MAX(vt0.c1) THEN AVG(COUNT(*)) ELSE rt0.c1 END) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR((((((((('|o}1Q<F^')AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))))OR((- (rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1)) GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN MAX(vt0.c1) THEN AVG(COUNT(*)) ELSE rt0.c1 END))) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR((((((((('|o}1Q<F^')AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))))OR((- (rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1)) GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(CASE WHEN MAX(vt0.c1) THEN AVG(COUNT(*)) ELSE rt0.c1 END)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('733853712') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('733853712'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('733853712') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=(((vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=(((vt0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=(((vt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((((((((NULL)OR(((rt0.c0)IS NOT(rt0.c2)))))OR(((vt1.c0)<=(rt0.c0)))))AND(CASE WHEN rt0.c1 THEN '1860163741' END)))OR(CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((((((NULL)OR(((rt0.c0)IS NOT(rt0.c2)))))OR(((vt1.c0)<=(rt0.c0)))))AND(CASE WHEN rt0.c1 THEN '1860163741' END)))OR(CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((((((((((NULL)OR(((rt0.c0)IS NOT(rt0.c2)))))OR(((vt1.c0)<=(rt0.c0)))))AND(CASE WHEN rt0.c1 THEN '1860163741' END)))OR(CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((rt0.c1)*(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (((rt0.c1)*(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((((rt0.c1)*(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((rt0.c1)*(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (((rt0.c1)*(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((((rt0.c1)*(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (((rt0.c1))>=((rt0.c2))) END) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (((rt0.c1))>=((rt0.c2))) END))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (((rt0.c1))>=((rt0.c2))) END) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))=(('1205460769'))) GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))==(('1205460769'))) WHERE (rt0.c1) GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1 UNION SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))==(('1205460769'))) WHERE ((NOT (rt0.c1))) GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))==(('1205460769'))) WHERE (((rt0.c1) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))=(('1205460769'))) GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT vt0.c0, rt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c1)))OR('556643714')))) AND ((JULIANDAY(vt0.c0, rt0.c1, vt0.c1)))) RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))AND(((rt0.c1)AND(vt0.c1)))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(x'')))))AND((((rt0.c2, rt0.c2, vt1.c0))==((rt0.c0, x'', vt0.c1))))))AND(((rt0.c1)>>(rt0.c0)))) GROUP BY vt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE '{z},|#/-1'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) AND ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END)))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CASE '{z},|#/-1'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) AND ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END)))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CASE '{z},|#/-1'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) AND ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END)))) ISNULL));
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0, rt0.c1, vt1.c0)) BETWEEN (((~ (rt0.c0)), ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)), (rt0.c0 IN ()))) AND (((- (rt0.c2)), MIN(rt0.c0, vt1.c0), 'r/')));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0, rt0.c1, vt1.c0)) BETWEEN (((~ (rt0.c0)), ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)), (rt0.c0 IN ()))) AND (((- (rt0.c2)), MIN(rt0.c0, vt1.c0), 'r/'))) WHERE ((rt0.c1 IN (rt0.c2, vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0, rt0.c1, vt1.c0)) BETWEEN (((~ (rt0.c0)), ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)), (rt0.c0 IN ()))) AND (((- (rt0.c2)), MIN(rt0.c0, vt1.c0), 'r/'))) WHERE ((NOT ((rt0.c1 IN (rt0.c2, vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0, rt0.c1, vt1.c0)) BETWEEN (((~ (rt0.c0)), ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)), (rt0.c0 IN ()))) AND (((- (rt0.c2)), MIN(rt0.c0, vt1.c0), 'r/'))) WHERE ((((rt0.c1 IN (rt0.c2, vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0, rt0.c1, vt1.c0)) BETWEEN (((~ (rt0.c0)), ((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)), (rt0.c0 IN ()))) AND (((- (rt0.c2)), MIN(rt0.c0, vt1.c0), 'r/')));
SELECT rt0.c2, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN ((- (rt0.c0))) AND (DATETIME(vt0.c0, 0.49832292413344503, NULL))) GROUP BY rt0.c2, rt0.c1, vt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN ((- (rt0.c0))) AND (DATETIME(vt0.c0, 0.49832292413344503, NULL))) WHERE (((vt1.c0) NOTNULL) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c1, vt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN ((- (rt0.c0))) AND (DATETIME(vt0.c0, 0.49832292413344503, NULL))) WHERE ((NOT (((vt1.c0) NOTNULL) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, vt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN ((- (rt0.c0))) AND (DATETIME(vt0.c0, 0.49832292413344503, NULL))) WHERE (((((vt1.c0) NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN ((- (rt0.c0))) AND (DATETIME(vt0.c0, 0.49832292413344503, NULL))) GROUP BY rt0.c2, rt0.c1, vt0.c1, vt1.c0;
SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS BLOB)) BETWEEN ((('-1419145562')GLOB(rt0.c2))) AND (((NULL)AND(vt0.c1)))) FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) BETWEEN (((vt1.c0) BETWEEN (rt0.c1) AND (vt0.c1))) AND (CASE WHEN vt1.c0 THEN rt0.c2 END)) GROUP BY rt0.c1;
SELECT ALL vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0;
SELECT vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 WHERE ((((rt0.c1 COLLATE NOCASE))=((((rt0.c2) NOT BETWEEN (vt1.c0) AND (1.149174268E9)))))) UNION ALL SELECT vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 WHERE ((NOT ((((rt0.c1 COLLATE NOCASE))==((((rt0.c2) NOT BETWEEN (vt1.c0) AND (1.149174268E9)))))))) UNION ALL SELECT ALL vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 WHERE ((((((rt0.c1 COLLATE NOCASE))=((((rt0.c2) NOT BETWEEN (vt1.c0) AND (1.149174268E9)))))) ISNULL));
SELECT ALL vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2)-(rt0.c0)) WHEN (vt1.c0 IN (vt1.c0, vt0.c1)) THEN (rt0.c1 IN (vt0.c1)) WHEN ((rt0.c2) NOTNULL) THEN LOWER(vt0.c0) ELSE (+ (rt0.c1)) END LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((ABS(DISTINCT 0xffffffff9880a58a)) BETWEEN ((((vt0.c0))>((vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((ABS(DISTINCT 0Xffffffff9880a58a)) BETWEEN ((((vt0.c0))>((vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((ABS(DISTINCT 0xffffffff9880a58a)) BETWEEN ((((vt0.c0))>((vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c1, vt1.c0, '-417316408')) NOT BETWEEN ((0.5567897631744794, vt0.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0)))) AND (((vt0.c1)<<(vt1.c0)))) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c1, vt1.c0, '-417316408')) NOT BETWEEN ((0.5567897631744794, vt0.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0)))) AND (((vt0.c1)<<(vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING CASE COUNT(*)  WHEN TOTAL(vt0.c0) THEN MIN(COUNT(vt0.c1)) ELSE MAX(vt0.c1) END UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c1, vt1.c0, '-417316408')) NOT BETWEEN ((0.5567897631744794, vt0.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0)))) AND (((vt0.c1)<<(vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING (NOT (CASE COUNT(*)  WHEN TOTAL(vt0.c0) THEN MIN(COUNT(vt0.c1)) ELSE MAX(vt0.c1) END)) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c1, vt1.c0, '-417316408')) NOT BETWEEN ((0.5567897631744794, vt0.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0)))) AND (((vt0.c1)<<(vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING ((CASE COUNT(*)  WHEN TOTAL(vt0.c0) THEN MIN(COUNT(vt0.c1)) ELSE MAX(vt0.c1) END) ISNULL);
SELECT rt0.c0 FROM vt0, rt0;
SELECT rt0.c0 FROM vt0, rt0 WHERE ('XO' COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT ('XO' COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((('XO' COLLATE NOCASE) ISNULL));
SELECT rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((~ (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(-1448221948 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((~ (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(-1448221948 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((~ (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(-1448221948 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 WHERE (((((((vt1.c0)*(rt0.c2)))OR((vt1.c0 IN ()))))AND(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 WHERE ((NOT (((((((vt1.c0)*(rt0.c2)))OR((vt1.c0 IN ()))))AND(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 END))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 WHERE (((((((((vt1.c0)*(rt0.c2)))OR((vt1.c0 IN ()))))AND(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(ABS(DISTINCT vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(ABS(DISTINCT vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(ABS(DISTINCT vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(ABS(DISTINCT vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(ABS(DISTINCT vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(ABS(DISTINCT vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (ABS(vt1.c0 COLLATE BINARY)) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT (ABS(vt1.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE (((ABS(vt1.c0 COLLATE BINARY)) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))<=((vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))<=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))<=((vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>=(((vt1.c0)>=('-839279111'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>=(((vt1.c0)>=('-839279111'))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>=(((vt1.c0)>=('-839279111'))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((x'de81')<>(rt0.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (('-1716435539' COLLATE RTRIM)+(CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt1.c0;
SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((x'de81')!=(rt0.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (('-1716435539' COLLATE RTRIM)+(CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt1.c0 HAVING CASE WHEN UNICODE(vt0.c0) THEN ((AVG(MAX(SUM(COUNT(*)))))/(vt0.c0)) WHEN (NOT (MIN(rt0.c0))) THEN x'' WHEN COUNT(MIN(vt0.c1)) THEN AVG(x'') END UNION ALL SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((x'de81')<>(rt0.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (('-1716435539' COLLATE RTRIM)+(CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt1.c0 HAVING (NOT (CASE WHEN UNICODE(vt0.c0) THEN ((AVG(MAX(SUM(COUNT(*)))))/(vt0.c0)) WHEN (NOT (MIN(rt0.c0))) THEN x'' WHEN COUNT(MIN(vt0.c1)) THEN AVG(x'') END)) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((x'de81')!=(rt0.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (('-1716435539' COLLATE RTRIM)+(CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt1.c0 HAVING ((CASE WHEN UNICODE(vt0.c0) THEN ((AVG(MAX(SUM(COUNT(*)))))/(vt0.c0)) WHEN (NOT (MIN(rt0.c0))) THEN x'' WHEN COUNT(MIN(vt0.c1)) THEN AVG(x'') END) ISNULL);
SELECT ALL * FROM vt1, rt0, vt0;
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c2)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE ((NOT (((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c2)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0))))))) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c2)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1, rt0, vt0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c1)*('now+W')) IN ())) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c1)*('now+W')) IN ())))) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c1)*('now+W')) IN ())) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((187621220) IS TRUE)) GROUP BY vt0.c1, rt0.c0, vt0.c0 UNION SELECT vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((187621220) IS TRUE)))) GROUP BY vt0.c1, rt0.c0, vt0.c0 UNION SELECT vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((187621220) IS TRUE)) ISNULL)) GROUP BY vt0.c1, rt0.c0, vt0.c0;
SELECT vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CASE WHEN MIN(COUNT(*)) THEN ((rt0.c2) IS TRUE) ELSE TOTAL(rt0.c1) END UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE WHEN MIN(COUNT(*)) THEN ((rt0.c2) IS TRUE) ELSE TOTAL(rt0.c1) END)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CASE WHEN MIN(COUNT(*)) THEN ((rt0.c2) IS TRUE) ELSE TOTAL(rt0.c1) END) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt0.c1 IN ())  WHEN (NOT (vt0.c1)) THEN '-733055325' ELSE ((rt0.c2) BETWEEN ('U}') AND (rt0.c0)) END FULL OUTER JOIN rt0 ON rt0.c0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN (NOT (rt0.c1)) ELSE rt0.c2 END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c2 AS TEXT) THEN (NOT (rt0.c1)) ELSE rt0.c2 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c2 AS TEXT) THEN (NOT (rt0.c1)) ELSE rt0.c2 END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(SUM(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(SUM(COUNT(*)))))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(SUM(COUNT(*))))))) ISNULL);
SELECT ALL MAX(((((rt0.c0 COLLATE RTRIM)AND(vt1.c0 COLLATE NOCASE)))OR(((vt0.c0) IS FALSE)))) FROM vt0, rt0, vt1 ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c1) NOTNULL) THEN (('3<weekday''Ǽi]F') BETWEEN (rt0.c0) AND (rt0.c2)) END  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(json_object(rt0.c2, '!	', rt0.c1, x'', rt0.c0, rt0.c2, rt0.c2, rt0.c2) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(json_object(rt0.c2, '!	', rt0.c1, x'', rt0.c0, rt0.c2, rt0.c2, rt0.c2) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(json_object(rt0.c2, '!	', rt0.c1, x'', rt0.c0, rt0.c2, rt0.c2, rt0.c2) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((((~ (rt0.c0)))OR(CASE WHEN vt0.c0 THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((((~ (rt0.c0)))OR(CASE WHEN vt0.c0 THEN rt0.c0 END))))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((((((~ (rt0.c0)))OR(CASE WHEN vt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt0, rt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN vt0.c1 END)AND(NULL)))AND((((rt0.c0, rt0.c1, vt0.c1))>=((vt0.c0, rt0.c1, vt0.c0))))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN vt0.c1 END)AND(NULL)))AND((((rt0.c0, rt0.c1, vt0.c1))>=((vt0.c0, rt0.c1, vt0.c0))))) WHERE (HEX(json(vt0.c1))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN vt0.c1 END)AND(NULL)))AND((((rt0.c0, rt0.c1, vt0.c1))>=((vt0.c0, rt0.c1, vt0.c0))))) WHERE ((NOT (HEX(json(vt0.c1))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN vt0.c1 END)AND(NULL)))AND((((rt0.c0, rt0.c1, vt0.c1))>=((vt0.c0, rt0.c1, vt0.c0))))) WHERE (((HEX(json(vt0.c1))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING '?t0' UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ('?t0')) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING (('?t0') ISNULL);
SELECT rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING '?t0' UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ('?t0')) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING (('?t0') ISNULL);
SELECT rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))LIKE(-1049002968))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)IS(vt0.c0)))LIKE(-1049002968))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))LIKE(-1049002968))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (((((vt0.c0)AND(rt0.c1)))AND(vt0.c0))) AND (((vt1.c0)<=(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (((((vt0.c0)AND(rt0.c1)))AND(vt0.c0))) AND (((vt1.c0)<=(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (((((vt0.c0)AND(rt0.c1)))AND(vt0.c0))) AND (((vt1.c0)<=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE (((((((((((rt0.c0)OR('Ox')))OR(vt1.c0)))OR(vt0.c1)))AND(rt0.c0)))<(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((((((((((rt0.c0)OR('Ox')))OR(vt1.c0)))OR(vt0.c1)))AND(rt0.c0)))<(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE (((((((((((((rt0.c0)OR('Ox')))OR(vt1.c0)))OR(vt0.c1)))AND(rt0.c0)))<(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 HAVING ((rt0.c2)<=(vt0.c1)) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 HAVING (NOT (((rt0.c2)<=(vt0.c1)) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 HAVING ((((rt0.c2)<=(vt0.c1)) COLLATE BINARY) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 HAVING ((rt0.c2)<=(vt0.c1)) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 HAVING (NOT (((rt0.c2)<=(vt0.c1)) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 HAVING ((((rt0.c2)<=(vt0.c1)) COLLATE BINARY) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((+ (vt1.c0)) AS REAL)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((+ (vt1.c0)) AS REAL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST((+ (vt1.c0)) AS REAL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c1)/(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c1)/(rt0.c2)) COLLATE BINARY WHERE (CAST(6.62266877E8 AS BLOB)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c1)/(rt0.c2)) COLLATE BINARY WHERE ((NOT (CAST(6.62266877E8 AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c1)/(rt0.c2)) COLLATE BINARY WHERE (((CAST(6.62266877E8 AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c1)/(rt0.c2)) COLLATE BINARY;
SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS NUMERIC) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS NUMERIC) WHERE (((((rt0.c2) IS FALSE))IS NOT(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS NUMERIC) WHERE ((NOT (((((rt0.c2) IS FALSE))IS NOT(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS NUMERIC) WHERE (((((((rt0.c2) IS FALSE))IS NOT(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS NUMERIC) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING CAST(TOTAL(MAX(vt0.c1)) AS NUMERIC) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(TOTAL(MAX(vt0.c1)) AS NUMERIC))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(TOTAL(MAX(vt0.c1)) AS NUMERIC)) ISNULL);
SELECT rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE NOCASE)) UNION ALL SELECT rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (LIKELY(DISTINCT vt0.c1 COLLATE NOCASE)))) UNION ALL SELECT rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (((LIKELY(DISTINCT vt0.c1 COLLATE NOCASE)) ISNULL));
SELECT rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>>(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0)OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)>>(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0)OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)>>(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0)OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0, vt1 WHERE (((((rt0.c2 COLLATE NOCASE)OR(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 ELSE vt1.c0 END)))AND(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((rt0.c2 COLLATE NOCASE)OR(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 ELSE vt1.c0 END)))AND(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0, vt1 WHERE (((((((rt0.c2 COLLATE NOCASE)OR(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 ELSE vt1.c0 END)))AND(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c1 IN ())) NOTNULL)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((((rt0.c1 IN ())) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c1 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((- (vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((- (vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((- (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)<(0x1b36304a)) THEN ((((((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) END RIGHT OUTER JOIN vt1 ON '-1191989218' GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)<(0X1b36304a)) THEN ((((((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) END RIGHT OUTER JOIN vt1 ON '-1191989218' WHERE (((vt0.c0) NOTNULL)) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)<(0x1b36304a)) THEN ((((((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) END RIGHT OUTER JOIN vt1 ON '-1191989218' WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)<(0x1b36304a)) THEN ((((((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) END RIGHT OUTER JOIN vt1 ON '-1191989218' WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)<(0x1b36304a)) THEN ((((((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) END RIGHT OUTER JOIN vt1 ON '-1191989218' GROUP BY rt0.c0, vt1.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX(((vt0.c1)||(TOTAL(MIN(TOTAL(MIN(SUM(vt0.c0)))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX(((vt0.c1)||(TOTAL(MIN(TOTAL(MIN(SUM(vt0.c0)))))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX(((vt0.c1)||(TOTAL(MIN(TOTAL(MIN(SUM(vt0.c0))))))))) ISNULL);
SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0 IN (rt0.c1))))<>((((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0 IN (rt0.c1))))<>((((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))))))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c0 IN (rt0.c1))))!=((((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))))) ISNULL));
SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(0X1d0cbc0f)) AS INTEGER)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(0x1d0cbc0f)) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(0X1d0cbc0f)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((x'831f' IN ())) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((x'831f' IN ())))) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((x'831f' IN ())) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING SUM(SUM(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (SUM(SUM(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((SUM(SUM(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((rt0.c2 COLLATE RTRIM)AND((('	{')>=(rt0.c2)))))OR(COALESCE(rt0.c2, rt0.c1))))OR(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((rt0.c2 COLLATE RTRIM)AND((('	{')>=(rt0.c2)))))OR(COALESCE(rt0.c2, rt0.c1))))OR(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE (CASE WHEN ((((((((rt0.c0)OR(0xffffffff99bab103)))OR(rt0.c2)))OR(rt0.c0)))AND(0.9510072357700873)) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c1 COLLATE RTRIM END) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((rt0.c2 COLLATE RTRIM)AND((('	{')>=(rt0.c2)))))OR(COALESCE(rt0.c2, rt0.c1))))OR(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE ((NOT (CASE WHEN ((((((((rt0.c0)OR(0Xffffffff99bab103)))OR(rt0.c2)))OR(rt0.c0)))AND(0.9510072357700873)) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c1 COLLATE RTRIM END))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((rt0.c2 COLLATE RTRIM)AND((('	{')>=(rt0.c2)))))OR(COALESCE(rt0.c2, rt0.c1))))OR(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE (((CASE WHEN ((((((((rt0.c0)OR(0xffffffff99bab103)))OR(rt0.c2)))OR(rt0.c0)))AND(0.9510072357700873)) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c1 COLLATE RTRIM END) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((rt0.c2 COLLATE RTRIM)AND((('	{')>=(rt0.c2)))))OR(COALESCE(rt0.c2, rt0.c1))))OR(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0))));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)|(rt0.c1)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)|(rt0.c1)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)|(rt0.c1)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.660680236587096)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.660680236587096)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.660680236587096)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING CASE COUNT(MIN(COUNT(*)))  WHEN MIN(AVG(rt0.c0)) THEN COUNT(COUNT(vt0.c0)) WHEN MIN(MIN(vt0.c0)) THEN '1197227690' WHEN TOTAL(MAX(COUNT(*))) THEN MIN(COUNT(*)) END UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING (NOT (CASE COUNT(MIN(COUNT(*)))  WHEN MIN(AVG(rt0.c0)) THEN COUNT(COUNT(vt0.c0)) WHEN MIN(MIN(vt0.c0)) THEN '1197227690' WHEN TOTAL(MAX(COUNT(*))) THEN MIN(COUNT(*)) END)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING ((CASE COUNT(MIN(COUNT(*)))  WHEN MIN(AVG(rt0.c0)) THEN COUNT(COUNT(vt0.c0)) WHEN MIN(MIN(vt0.c0)) THEN '1197227690' WHEN TOTAL(MAX(COUNT(*))) THEN MIN(COUNT(*)) END) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (IFNULL(vt0.c1 COLLATE BINARY, ((vt0.c1)IS(vt0.c0)))) ORDER BY ((x'')AND((vt0.c1 IN ()))) DESC;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt1 NOT INDEXED, vt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 WHERE ((((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)) IN (((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))OR(0X371bd3eb)))OR('FibMtE'))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)) IN (((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))OR(0x371bd3eb)))OR('FibMtE'))))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt1, vt0 WHERE ((((((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)) IN (((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))OR(0X371bd3eb)))OR('FibMtE'))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt1 NOT INDEXED, vt0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 WHERE ((((rt0.c1, vt1.c0, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<(((((vt1.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt1.c0))), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)), CAST(rt0.c2 AS NUMERIC))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1, vt1.c0, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<(((((vt1.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt1.c0))), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)), CAST(rt0.c2 AS NUMERIC))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE ((((((rt0.c1, vt1.c0, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<(((((vt1.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt1.c0))), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)), CAST(rt0.c2 AS NUMERIC))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(((rt0.c0) NOT NULL)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(((rt0.c0) NOT NULL)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(((rt0.c0) NOT NULL))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(((rt0.c0) NOT NULL)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(((rt0.c0) NOT NULL)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(((rt0.c0) NOT NULL))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST('O' AS INTEGER)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST('O' AS INTEGER)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST('O' AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c1 IN ()))LIKE(vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c1 IN ()))LIKE(vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c1 IN ()))LIKE(vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE (CASE ((vt0.c0)||(vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)) THEN rt0.c2 COLLATE BINARY END) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE ((NOT (CASE ((vt0.c0)||(vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)) THEN rt0.c2 COLLATE BINARY END))) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE (((CASE ((vt0.c0)||(vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)) THEN rt0.c2 COLLATE BINARY END) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0;
SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2 IN ()))>>(((rt0.c2)GLOB(rt0.c2))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c2 IN ()))>>(((rt0.c2)GLOB(rt0.c2))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2 IN ()))>>(((rt0.c2)GLOB(rt0.c2))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (LIKELIHOOD(rt0.c0 COLLATE RTRIM, 0.5181751419048716)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (LIKELIHOOD(rt0.c0 COLLATE RTRIM, 0.5181751419048716)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((LIKELIHOOD(rt0.c0 COLLATE RTRIM, 0.5181751419048716)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((vt0.c1) BETWEEN (AVG(vt1.c0)) AND (SUM(vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (((vt0.c1) BETWEEN (AVG(vt1.c0)) AND (SUM(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((((vt0.c1) BETWEEN (AVG(vt1.c0)) AND (SUM(vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((vt0.c1) BETWEEN (AVG(vt1.c0)) AND (SUM(vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (((vt0.c1) BETWEEN (AVG(vt1.c0)) AND (SUM(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((((vt0.c1) BETWEEN (AVG(vt1.c0)) AND (SUM(vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)OR((((vt0.c0))<>((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt0.c0)OR((((vt0.c0))!=((vt1.c0)))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)OR((((vt0.c0))!=((vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN CHAR(vt1.c0) WHEN vt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) WHEN '556643714' THEN (((rt0.c0, rt0.c0, NULL))=((vt1.c0, vt1.c0, rt0.c0))) ELSE (((('.M&')AND(rt0.c2)))AND(vt0.c1)) END) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (CASE WHEN (NOT (vt1.c0)) THEN CHAR(vt1.c0) WHEN vt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) WHEN '556643714' THEN (((rt0.c0, rt0.c0, NULL))==((vt1.c0, vt1.c0, rt0.c0))) ELSE (((('.M&')AND(rt0.c2)))AND(vt0.c1)) END))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 WHERE (((CASE WHEN (NOT (vt1.c0)) THEN CHAR(vt1.c0) WHEN vt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) WHEN '556643714' THEN (((rt0.c0, rt0.c0, NULL))=((vt1.c0, vt1.c0, rt0.c0))) ELSE (((('.M&')AND(rt0.c2)))AND(vt0.c1)) END) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1))>((rt0.c1))))AND('泓|\rWZ[Qw')))AND(((-1049002968)=(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((((rt0.c1))>((rt0.c1))))AND('泓|\rWZ[Qw')))AND(((-1049002968)=(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((((rt0.c1))>((rt0.c1))))AND('泓|\rWZ[Qw')))AND(((-1049002968)=(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING SUM(AVG(COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (SUM(AVG(COUNT(*))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((SUM(AVG(COUNT(*)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (((vt0.c0)IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (((vt0.c0)IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (((((vt0.c0)IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)<<(vt0.c0))));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)<<(vt0.c0)))) WHERE (((vt0.c1)>(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)<<(vt0.c0)))) WHERE ((NOT (((vt0.c1)>(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)<<(vt0.c0)))) WHERE (((((vt0.c1)>(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)<<(vt0.c0))));
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 WHERE ((~ (((vt0.c1)>(0x243fbf6f))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 NOT INDEXED WHERE ((NOT ((~ (((vt0.c1)>(0x243fbf6f))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((((~ (((vt0.c1)>(0x243fbf6f))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1 HAVING ((COUNT(*) COLLATE NOCASE) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(COUNT(*)))) AND (CAST(SUM(GROUP_CONCAT(vt0.c1)) AS NUMERIC))) UNION ALL SELECT rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*) COLLATE NOCASE) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(COUNT(*)))) AND (CAST(SUM(GROUP_CONCAT(vt0.c1)) AS NUMERIC))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1 HAVING ((((COUNT(*) COLLATE NOCASE) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(COUNT(*)))) AND (CAST(SUM(GROUP_CONCAT(vt0.c1)) AS NUMERIC)))) ISNULL);
SELECT rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c2 FROM vt1, rt0 WHERE (json_patch(((((rt0.c0)AND(vt1.c0)))AND(0.31481385463718514)), COALESCE(rt0.c1, rt0.c0))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 NOT INDEXED WHERE ((NOT (json_patch(((((rt0.c0)AND(vt1.c0)))AND(0.31481385463718514)), COALESCE(rt0.c1, rt0.c0))))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 WHERE (((json_patch(((((rt0.c0)AND(vt1.c0)))AND(0.31481385463718514)), COALESCE(rt0.c1, rt0.c0))) ISNULL));
SELECT rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) ELSE 0Xffffffffc485535b END) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) ELSE 0Xffffffffc485535b END))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) ELSE 0xffffffffc485535b END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0)+(vt0.c1))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)+(vt0.c1))) ISNULL)))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0)+(vt0.c1))) ISNULL)) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING SUM(((((TOTAL(MIN(AVG(vt0.c0))))OR(SUM(AVG(vt0.c0)))))OR(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(((((TOTAL(MIN(AVG(vt0.c0))))OR(SUM(AVG(vt0.c0)))))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(((((TOTAL(MIN(AVG(vt0.c0))))OR(SUM(AVG(vt0.c0)))))OR(vt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE UPPER(DISTINCT rt0.c2)  WHEN rt0.c1 COLLATE NOCASE THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) WHEN 1.724407272E9 THEN (((rt0.c0))>((rt0.c0))) WHEN ((rt0.c0)%(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE UPPER(DISTINCT rt0.c2)  WHEN rt0.c1 COLLATE NOCASE THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) WHEN 1.724407272E9 THEN (((rt0.c0))>((rt0.c0))) WHEN ((rt0.c0)%(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE UPPER(DISTINCT rt0.c2)  WHEN rt0.c1 COLLATE NOCASE THEN ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) WHEN 1.724407272E9 THEN (((rt0.c0))>((rt0.c0))) WHEN ((rt0.c0)%(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((rt0.c0, vt0.c1, rt0.c1)) BETWEEN ((((vt0.c0)/(rt0.c1)), UPPER(vt0.c0), rt0.c1)) AND ((rt0.c1 COLLATE RTRIM, ABS(DISTINCT rt0.c2), CAST(rt0.c1 AS INTEGER))))) GROUP BY rt0.c2, vt0.c0, vt0.c1 UNION SELECT rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c0, vt0.c1, rt0.c1)) BETWEEN ((((vt0.c0)/(rt0.c1)), UPPER(vt0.c0), rt0.c1)) AND ((rt0.c1 COLLATE RTRIM, ABS(DISTINCT rt0.c2), CAST(rt0.c1 AS INTEGER))))))) GROUP BY rt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c0, vt0.c1, rt0.c1)) BETWEEN ((((vt0.c0)/(rt0.c1)), UPPER(vt0.c0), rt0.c1)) AND ((rt0.c1 COLLATE RTRIM, ABS(DISTINCT rt0.c2), CAST(rt0.c1 AS INTEGER))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING MAX(((SUM(rt0.c0)) BETWEEN (vt0.c1) AND (AVG(vt0.c1)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (MAX(((SUM(rt0.c0)) BETWEEN (vt0.c1) AND (AVG(vt0.c1)))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING ((MAX(((SUM(rt0.c0)) BETWEEN (vt0.c1) AND (AVG(vt0.c1))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) IS TRUE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE)))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE);
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE) WHERE ((LOWER(vt1.c0) IN ())) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE) WHERE ((NOT ((LOWER(vt1.c0) IN ())))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE) WHERE ((((LOWER(vt1.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE);
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt0.c1)||(vt1.c0)))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt0.c1)||(vt1.c0)))))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt0.c1)||(vt1.c0)))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON ((json_array_length(rt0.c0)) BETWEEN (((rt0.c0) NOT NULL)) AND (vt0.c1)) INNER JOIN vt0 ON ((((((((((rt0.c1)>(vt0.c0)))OR(((vt0.c1)OR(rt0.c2)))))OR((((vt0.c1))>((vt0.c0))))))OR((vt0.c1 IN ()))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c2 FROM vt1, rt0, vt0;
SELECT ALL vt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, x'', x'')) AND ((vt1.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (x''))) AND ((~ (rt0.c0))))) UNION ALL SELECT ALL vt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT ((((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, x'', x'')) AND ((vt1.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (x''))) AND ((~ (rt0.c0))))))) UNION ALL SELECT vt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((((((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, x'', x'')) AND ((vt1.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (x''))) AND ((~ (rt0.c0))))) ISNULL));
SELECT ALL vt0.c1, rt0.c2 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN (~ (NULL)) THEN (((rt0.c0))<>((rt0.c0))) ELSE ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CASE vt1.c0 COLLATE NOCASE  WHEN (~ (NULL)) THEN (((rt0.c0))<>((rt0.c0))) ELSE ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE vt1.c0 COLLATE NOCASE  WHEN (~ (NULL)) THEN (((rt0.c0))!=((rt0.c0))) ELSE ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN (CASE 7.39509549E8  WHEN rt0.c1 THEN rt0.c2 END) AND (CAST(vt0.c0 AS NUMERIC)))) GROUP BY rt0.c1, vt0.c1, rt0.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (CASE 7.39509549E8  WHEN rt0.c1 THEN rt0.c2 END) AND (CAST(vt0.c0 AS NUMERIC)))))) GROUP BY rt0.c1, vt0.c1, rt0.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (CASE 7.39509549E8  WHEN rt0.c1 THEN rt0.c2 END) AND (CAST(vt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, rt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CASE MIN(AVG(vt0.c0))  WHEN COUNT(AVG(vt0.c0)) THEN '-645446779' WHEN TOTAL(COUNT(*)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE GROUP_CONCAT(vt0.c0) END WHEN UPPER(MIN(MAX(vt0.c1))) THEN vt0.c1 END UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CASE MIN(AVG(vt0.c0))  WHEN COUNT(AVG(vt0.c0)) THEN '-645446779' WHEN TOTAL(COUNT(*)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE GROUP_CONCAT(vt0.c0) END WHEN UPPER(MIN(MAX(vt0.c1))) THEN vt0.c1 END)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CASE MIN(AVG(vt0.c0))  WHEN COUNT(AVG(vt0.c0)) THEN '-645446779' WHEN TOTAL(COUNT(*)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE GROUP_CONCAT(vt0.c0) END WHEN UPPER(MIN(MAX(vt0.c1))) THEN vt0.c1 END) ISNULL);
SELECT * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (x'') UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE (((x'') ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN vt0 ON ((SQLITE_SOURCE_ID()) IS FALSE);
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN vt0 ON ((SQLITE_SOURCE_ID()) IS FALSE) WHERE ((((((((((((((rt0.c0 IN ()))AND(((vt0.c1)<=(rt0.c1)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((rt0.c2) NOTNULL))))OR(((vt1.c0)IS(rt0.c0)))))OR(rt0.c1 COLLATE BINARY)))AND(((vt1.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN vt0 ON ((SQLITE_SOURCE_ID()) IS FALSE) WHERE ((NOT ((((((((((((((rt0.c0 IN ()))AND(((vt0.c1)<=(rt0.c1)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((rt0.c2) NOTNULL))))OR(((vt1.c0)IS(rt0.c0)))))OR(rt0.c1 COLLATE BINARY)))AND(((vt1.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN vt0 ON ((SQLITE_SOURCE_ID()) IS FALSE) WHERE ((((((((((((((((rt0.c0 IN ()))AND(((vt0.c1)<=(rt0.c1)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((rt0.c2) NOTNULL))))OR(((vt1.c0)IS(rt0.c0)))))OR(rt0.c1 COLLATE BINARY)))AND(((vt1.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN vt0 ON ((SQLITE_SOURCE_ID()) IS FALSE);
SELECT rt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM rt0, vt0, vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) AS NUMERIC)) GROUP BY rt0.c2, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) AS NUMERIC)))) GROUP BY rt0.c2, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM rt0, vt0, vt1 WHERE (((CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt0.c0, vt0.c1;
SELECT rt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING GROUP_CONCAT((AVG(vt0.c1) IN ())) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((AVG(vt0.c1) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((AVG(vt0.c1) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING GROUP_CONCAT((AVG(vt0.c1) IN ())) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((AVG(vt0.c1) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((AVG(vt0.c1) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON vt1.c0;
SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE (((((((((((0.1910019499786655)>=(vt0.c1)))OR(0.4333153836857263)))OR(CAST(-336429321 AS BLOB))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (((((((((((0.1910019499786655)>=(vt0.c1)))OR(0.4333153836857263)))OR(CAST(-336429321 AS BLOB))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE (((((((((((((0.1910019499786655)>=(vt0.c1)))OR(0.4333153836857263)))OR(CAST(-336429321 AS BLOB))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0))) ISNULL));
SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON vt1.c0;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((NULL)!=((~ (vt1.c0))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((NULL)!=((~ (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((NULL)<>((~ (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON LOWER(DISTINCT CASE WHEN x'0a3f' THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END) GROUP BY rt0.c1, vt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON LOWER(DISTINCT CASE WHEN x'0a3f' THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END) GROUP BY rt0.c1, vt0.c1, rt0.c2, vt0.c0 HAVING LTRIM(COUNT(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON LOWER(DISTINCT CASE WHEN x'0a3f' THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END) GROUP BY rt0.c1, vt0.c1, rt0.c2, vt0.c0 HAVING (NOT (LTRIM(COUNT(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON LOWER(DISTINCT CASE WHEN x'0a3f' THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END) GROUP BY rt0.c1, vt0.c1, rt0.c2, vt0.c0 HAVING ((LTRIM(COUNT(COUNT(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE NOCASE, COALESCE(vt1.c0, vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE NOCASE, COALESCE(vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE NOCASE, COALESCE(vt1.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (COUNT(TOTAL(vt1.c0)) IN (AVG(TOTAL(SUM(TOTAL(x'')))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT ((COUNT(TOTAL(vt1.c0)) IN (AVG(TOTAL(SUM(TOTAL(x'')))))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (((COUNT(TOTAL(vt1.c0)) IN (AVG(TOTAL(SUM(TOTAL(x''))))))) ISNULL);
SELECT TOTAL((((rt0.c2 IN ()))IS NOT(((rt0.c1)OR(vt1.c0))))) FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (LOWER(DISTINCT ((vt0.c1)GLOB(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (LOWER(DISTINCT ((vt0.c1)GLOB(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE (((LOWER(DISTINCT ((vt0.c1)GLOB(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (TRIM(DISTINCT ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)), 0.12173176333082769)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)), 0.12173176333082769)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((TRIM(DISTINCT ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)), 0.12173176333082769)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING CASE CAST(AVG(AVG(TOTAL(vt1.c0))) AS BLOB)  WHEN TOTAL(COUNT(vt1.c0)) THEN MAX(vt0.c1) WHEN (+ (vt1.c0)) THEN (NOT (AVG(vt0.c1))) WHEN TOTAL(vt0.c1) COLLATE RTRIM THEN MAX(vt0.c0) END UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CASE CAST(AVG(AVG(TOTAL(vt1.c0))) AS BLOB)  WHEN TOTAL(COUNT(vt1.c0)) THEN MAX(vt0.c1) WHEN (+ (vt1.c0)) THEN (NOT (AVG(vt0.c1))) WHEN TOTAL(vt0.c1) COLLATE RTRIM THEN MAX(vt0.c0) END)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CASE CAST(AVG(AVG(TOTAL(vt1.c0))) AS BLOB)  WHEN TOTAL(COUNT(vt1.c0)) THEN MAX(vt0.c1) WHEN (+ (vt1.c0)) THEN (NOT (AVG(vt0.c1))) WHEN TOTAL(vt0.c1) COLLATE RTRIM THEN MAX(vt0.c0) END) ISNULL);
SELECT ALL * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE (((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.06451553504919061) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.06451553504919061) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE WHERE (((((vt0.c0)>(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.06451553504919061) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE WHERE ((NOT (((((vt0.c0)>(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.06451553504919061) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE WHERE (((((((vt0.c0)>(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.06451553504919061) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND((+ (0xffffffffd4653534)))))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND((+ (0xffffffffd4653534)))))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND((+ (0Xffffffffd4653534)))))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1;
SELECT rt0.c0, vt0.c1 FROM rt0 NOT INDEXED CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1 HAVING rt0.c2 UNION ALL SELECT rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1;
SELECT rt0.c0, vt0.c1 FROM rt0 NOT INDEXED CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1 HAVING rt0.c2 UNION ALL SELECT rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()) FULL OUTER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER) GROUP BY rt0.c0, vt0.c1;
SELECT * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE WHEN TYPEOF(rt0.c1) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)*(vt1.c0)) THEN (((vt0.c0))!=((rt0.c1))) WHEN (rt0.c2 IN ()) THEN ((vt0.c0)|(vt0.c0)) END) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((NOT (CASE WHEN TYPEOF(rt0.c1) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)*(vt1.c0)) THEN (((vt0.c0))!=((rt0.c1))) WHEN (rt0.c2 IN ()) THEN ((vt0.c0)|(vt0.c0)) END))) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE (((CASE WHEN TYPEOF(rt0.c1) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)*(vt1.c0)) THEN (((vt0.c0))!=((rt0.c1))) WHEN (rt0.c2 IN ()) THEN ((vt0.c0)|(vt0.c0)) END) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) NOTNULL)) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM rt0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (vt0.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(((vt0.c1) BETWEEN (TOTAL(vt0.c1)) AND (vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((vt0.c1) BETWEEN (TOTAL(vt0.c1)) AND (vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((vt0.c1) BETWEEN (TOTAL(vt0.c1)) AND (vt0.c1)))) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END) NOTNULL)) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT (((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END) NOTNULL)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE (((((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END) NOTNULL)) ISNULL));
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (((rt0.c0))<((rt0.c1))) ELSE (~ (NULL)) END CROSS JOIN vt0 ON (NOT (((vt0.c0)!=(rt0.c1))));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (((rt0.c0))<((rt0.c1))) ELSE (~ (NULL)) END CROSS JOIN vt0 ON (NOT (((vt0.c0)<>(rt0.c1)))) WHERE (CASE WHEN CAST(rt0.c2 AS REAL) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((vt0.c0)<(rt0.c1)) END) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (((rt0.c0))<((rt0.c1))) ELSE (~ (NULL)) END CROSS JOIN vt0 ON (NOT (((vt0.c0)<>(rt0.c1)))) WHERE ((NOT (CASE WHEN CAST(rt0.c2 AS REAL) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((vt0.c0)<(rt0.c1)) END))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (((rt0.c0))<((rt0.c1))) ELSE (~ (NULL)) END CROSS JOIN vt0 ON (NOT (((vt0.c0)!=(rt0.c1)))) WHERE (((CASE WHEN CAST(rt0.c2 AS REAL) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((vt0.c0)<(rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (((rt0.c0))<((rt0.c1))) ELSE (~ (NULL)) END CROSS JOIN vt0 ON (NOT (((vt0.c0)!=(rt0.c1))));
SELECT ALL rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN CAST(x'' AS TEXT) WHEN x'' THEN ((rt0.c2)*(rt0.c0)) WHEN ((rt0.c1)=(vt0.c0)) THEN ((rt0.c0)/(vt0.c0)) END GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN CAST(x'' AS TEXT) WHEN x'' THEN ((rt0.c2)*(rt0.c0)) WHEN ((rt0.c1)==(vt0.c0)) THEN ((rt0.c0)/(vt0.c0)) END WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN CAST(x'' AS TEXT) WHEN x'' THEN ((rt0.c2)*(rt0.c0)) WHEN ((rt0.c1)=(vt0.c0)) THEN ((rt0.c0)/(vt0.c0)) END WHERE ((NOT (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN CAST(x'' AS TEXT) WHEN x'' THEN ((rt0.c2)*(rt0.c0)) WHEN ((rt0.c1)==(vt0.c0)) THEN ((rt0.c0)/(vt0.c0)) END WHERE (((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN CAST(x'' AS TEXT) WHEN x'' THEN ((rt0.c2)*(rt0.c0)) WHEN ((rt0.c1)=(vt0.c0)) THEN ((rt0.c0)/(vt0.c0)) END GROUP BY rt0.c2;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(COUNT(*))) NOT BETWEEN (MAX(MAX(vt0.c0))) AND (((COUNT(vt0.c1)) IS TRUE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((COUNT(COUNT(*))) NOT BETWEEN (MAX(MAX(vt0.c0))) AND (((COUNT(vt0.c1)) IS TRUE))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((COUNT(COUNT(*))) NOT BETWEEN (MAX(MAX(vt0.c0))) AND (((COUNT(vt0.c1)) IS TRUE)))) ISNULL);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (IFNULL(COALESCE(rt0.c2, vt0.c1), (vt0.c1 IN ()))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (IFNULL(COALESCE(rt0.c2, vt0.c1), (vt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((IFNULL(COALESCE(rt0.c2, vt0.c1), (vt0.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 WHERE ((((((rt0.c1) IS TRUE)))>=((IFNULL(DISTINCT vt0.c1, rt0.c2))))) GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt0 NOT INDEXED, rt0, vt1 WHERE ((NOT ((((((rt0.c1) IS TRUE)))>=((IFNULL(DISTINCT vt0.c1, rt0.c2))))))) GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 WHERE ((((((((rt0.c1) IS TRUE)))>=((IFNULL(DISTINCT vt0.c1, rt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING ((TOTAL(rt0.c2)) IS FALSE) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (((TOTAL(rt0.c2)) IS FALSE))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING ((((TOTAL(rt0.c2)) IS FALSE)) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING ((TOTAL(rt0.c2)) IS FALSE) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (((TOTAL(rt0.c2)) IS FALSE))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING ((((TOTAL(rt0.c2)) IS FALSE)) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0;
SELECT * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 WHERE ((((NOT (vt1.c0)))+(vt0.c1))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((NOT ((((NOT (vt1.c0)))+(vt0.c1))))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((NOT (vt1.c0)))+(vt0.c1))) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)<<((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))) LEFT OUTER JOIN rt0 ON ((((((((((((0.13123336573180555)OR(load_extension(vt0.c0))))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c0)+(rt0.c1)))))OR(((rt0.c0)==(vt1.c0)))))AND(((vt0.c0)>(vt0.c0))));
SELECT ALL vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((((vt0.c1))!=((vt0.c1))))OR((+ (vt0.c0)))))AND((rt0.c2 IN ())))) GROUP BY vt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((((vt0.c1))!=((vt0.c1))))OR((+ (vt0.c0)))))AND((rt0.c2 IN ())))))) GROUP BY vt0.c1, rt0.c2 UNION SELECT vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((((((vt0.c1))!=((vt0.c1))))OR((+ (vt0.c0)))))AND((rt0.c2 IN ())))) ISNULL)) GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0))|(TOTAL(MAX(SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(vt1.c0))|(TOTAL(MAX(SUM(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(vt1.c0))|(TOTAL(MAX(SUM(vt1.c0)))))) ISNULL);
SELECT ALL MAX(CASE WHEN ((rt0.c2)>(rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c1 IN ()) WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)) THEN (((vt1.c0))>=((rt0.c2))) END) FROM rt0, vt1;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(NULL AS BLOB) COLLATE NOCASE;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(NULL AS BLOB) COLLATE NOCASE WHERE (x'') UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(NULL AS BLOB) COLLATE NOCASE WHERE ((NOT (x''))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(NULL AS BLOB) COLLATE NOCASE WHERE (((x'') ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(NULL AS BLOB) COLLATE NOCASE;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE ((('2002668608' COLLATE BINARY)OR(CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((('2002668608' COLLATE BINARY)OR(CAST(vt0.c0 AS REAL)))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((('2002668608' COLLATE BINARY)OR(CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT (NULL))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((NOT (NULL))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON CASE '868908983'  WHEN ((rt0.c2) BETWEEN (x'') AND (rt0.c1)) THEN (NOT (vt1.c0)) WHEN x'' THEN (NOT (vt1.c0)) WHEN vt0.c1 THEN ((rt0.c2)<>(vt0.c0)) WHEN ((0.9543123039084204)GLOB(rt0.c2)) THEN NULLIF(vt1.c0, vt0.c1) WHEN (+ ('')) THEN ((rt0.c0)>(vt0.c0)) ELSE ((rt0.c0) IS FALSE) END GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON CASE '868908983'  WHEN ((rt0.c2) BETWEEN (x'') AND (rt0.c1)) THEN (NOT (vt1.c0)) WHEN x'' THEN (NOT (vt1.c0)) WHEN vt0.c1 THEN ((rt0.c2)<>(vt0.c0)) WHEN ((0.9543123039084204)GLOB(rt0.c2)) THEN NULLIF(vt1.c0, vt0.c1) WHEN (+ ('')) THEN ((rt0.c0)>(vt0.c0)) ELSE ((rt0.c0) IS FALSE) END GROUP BY vt1.c0, rt0.c2 HAVING COUNT(((MIN(vt0.c1))<>(vt1.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON CASE '868908983'  WHEN ((rt0.c2) BETWEEN (x'') AND (rt0.c1)) THEN (NOT (vt1.c0)) WHEN x'' THEN (NOT (vt1.c0)) WHEN vt0.c1 THEN ((rt0.c2)!=(vt0.c0)) WHEN ((0.9543123039084204)GLOB(rt0.c2)) THEN NULLIF(vt1.c0, vt0.c1) WHEN (+ ('')) THEN ((rt0.c0)>(vt0.c0)) ELSE ((rt0.c0) IS FALSE) END GROUP BY vt1.c0, rt0.c2 HAVING (NOT (COUNT(((MIN(vt0.c1))!=(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 INNER JOIN vt0 ON CASE '868908983'  WHEN ((rt0.c2) BETWEEN (x'') AND (rt0.c1)) THEN (NOT (vt1.c0)) WHEN x'' THEN (NOT (vt1.c0)) WHEN vt0.c1 THEN ((rt0.c2)<>(vt0.c0)) WHEN ((0.9543123039084204)GLOB(rt0.c2)) THEN NULLIF(vt1.c0, vt0.c1) WHEN (+ ('')) THEN ((rt0.c0)>(vt0.c0)) ELSE ((rt0.c0) IS FALSE) END GROUP BY vt1.c0, rt0.c2 HAVING ((COUNT(((MIN(vt0.c1))!=(vt1.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS REAL) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE ((('739509549')OR(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE ((NOT ((('739509549')OR(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE ((((('739509549')OR(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt1, rt0;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 NOT INDEXED WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING GROUP_CONCAT(rt0.c1) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING GROUP_CONCAT(rt0.c1) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((((vt0.c0 COLLATE BINARY))>((((rt0.c2) ISNULL))))) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 COLLATE BINARY))>((((rt0.c2) ISNULL))))))) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((((((vt0.c0 COLLATE BINARY))>((((rt0.c2) ISNULL))))) ISNULL));
SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((- (vt0.c1))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((- (vt0.c1))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((- (vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((((((vt0.c1)AND(vt0.c1)))OR(('-1376874626' IN ()))))OR(rt0.c1)))AND(CAST(vt1.c0 AS INTEGER)))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((((((vt0.c1)AND(vt0.c1)))OR(('-1376874626' IN ()))))OR(rt0.c1)))AND(CAST(vt1.c0 AS INTEGER)))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((((((((vt0.c1)AND(vt0.c1)))OR(('-1376874626' IN ()))))OR(rt0.c1)))AND(CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((vt0.c1)<>(MAX(vt0.c1))))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (SUM(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((vt0.c1)<>(MAX(vt0.c1))))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (SUM(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((vt0.c1)!=(MAX(vt0.c1))))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (SUM(vt0.c0)))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((vt0.c1)<>(MAX(vt0.c1))))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (SUM(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((vt0.c1)<>(MAX(vt0.c1))))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (SUM(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((vt0.c1)!=(MAX(vt0.c1))))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (SUM(vt0.c0)))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_quote('{C')) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_quote('{C')))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_quote('{C')) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(((vt1.c0) ISNULL)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(((vt1.c0) ISNULL)))))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(((vt1.c0) ISNULL)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c0)) IN ()) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c0)) IN ()) GROUP BY vt0.c1 HAVING TOTAL((((vt0.c1, rt0.c0, COUNT(MAX(MIN(rt0.c1))))) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c1)) AND ((MAX(vt0.c1), SUM(GROUP_CONCAT(COUNT(*))), '1260496842')))) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c0)) IN ()) GROUP BY vt0.c1 HAVING (NOT (TOTAL((((vt0.c1, rt0.c0, COUNT(MAX(MIN(rt0.c1))))) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c1)) AND ((MAX(vt0.c1), SUM(GROUP_CONCAT(COUNT(*))), '1260496842')))))) UNION ALL SELECT vt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c0)) IN ()) GROUP BY vt0.c1 HAVING ((TOTAL((((vt0.c1, rt0.c0, COUNT(MAX(MIN(rt0.c1))))) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c1)) AND ((MAX(vt0.c1), SUM(GROUP_CONCAT(COUNT(*))), '1260496842'))))) ISNULL);
SELECT ALL * FROM vt1, rt0, vt0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE 0x58a29767 END)LIKE((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE 0X58a29767 END)LIKE((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE 0X58a29767 END)LIKE((vt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE rt0.c1 COLLATE BINARY  WHEN (rt0.c1 IN ()) THEN (rt0.c0 IN ()) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE rt0.c1 COLLATE BINARY  WHEN (rt0.c1 IN ()) THEN (rt0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1 COLLATE BINARY  WHEN (rt0.c1 IN ()) THEN (rt0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) ISNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) ISNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) ISNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING -1.736399478E9 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (-1.736399478E9)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((-1.736399478E9) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING -1.736399478E9 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (-1.736399478E9)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((-1.736399478E9) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM vt0, vt1, rt0;
SELECT * FROM vt0, vt1, rt0 WHERE ((((NOT (rt0.c1))) IS FALSE)) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT ((((NOT (rt0.c1))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((NOT (rt0.c1))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((CAST(vt0.c0 AS BLOB) IN ())))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((CAST(vt0.c0 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (CAST((- (vt0.c0)) AS NUMERIC)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CAST((- (vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((CAST((- (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(MIN(SUM(TOTAL(TOTAL(vt1.c0)))))) BETWEEN (TOTAL(vt1.c0)) AND (((TOTAL(vt1.c0)) NOT NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(MIN(SUM(TOTAL(TOTAL(vt1.c0)))))) BETWEEN (TOTAL(vt1.c0)) AND (((TOTAL(vt1.c0)) NOT NULL))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(MIN(SUM(TOTAL(TOTAL(vt1.c0)))))) BETWEEN (TOTAL(vt1.c0)) AND (((TOTAL(vt1.c0)) NOT NULL)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((('342170529' IN ()))AND('1197227690')))OR((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((('342170529' IN ()))AND('1197227690')))OR((NOT (vt0.c0))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((('342170529' IN ()))AND('1197227690')))OR((NOT (vt0.c0))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 NATURAL JOIN vt1;
SELECT vt0.c1, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM vt1, rt0, vt0 WHERE (((vt0.c1)*(((vt1.c0) ISNULL)))) GROUP BY vt0.c1, rt0.c1 UNION SELECT vt0.c1, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (((vt0.c1)*(((vt1.c0) ISNULL)))))) GROUP BY vt0.c1, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c1 FROM vt1, rt0, vt0 WHERE (((((vt0.c1)*(((vt1.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN TRIM(DISTINCT NULL, vt0.c1) THEN (NOT (vt1.c0)) ELSE x'a981478b' END GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN TRIM(DISTINCT NULL, vt0.c1) THEN (NOT (vt1.c0)) ELSE x'a981478b' END GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING MIN(TOTAL(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN TRIM(DISTINCT NULL, vt0.c1) THEN (NOT (vt1.c0)) ELSE x'a981478b' END GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (MIN(TOTAL(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN TRIM(DISTINCT NULL, vt0.c1) THEN (NOT (vt1.c0)) ELSE x'a981478b' END GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((MIN(TOTAL(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((((((vt0.c0 IN (vt0.c1)))OR(vt0.c1 COLLATE BINARY)))AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(CAST(vt0.c1 AS BLOB))))AND('')))AND(((vt0.c0)==(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((((vt0.c0 IN (vt0.c1)))OR(vt0.c1 COLLATE BINARY)))AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(CAST(vt0.c1 AS BLOB))))AND('')))AND(((vt0.c0)=(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((((((((vt0.c0 IN (vt0.c1)))OR(vt0.c1 COLLATE BINARY)))AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(CAST(vt0.c1 AS BLOB))))AND('')))AND(((vt0.c0)=(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((((NOT (rt0.c0)))>>(HEX(vt1.c0)))) UNION SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((((NOT (rt0.c0)))>>(HEX(vt1.c0)))))) UNION SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((((((NOT (rt0.c0)))>>(HEX(vt1.c0)))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0, vt1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), CAST(rt0.c0 AS NUMERIC), ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))) AND ((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1)))AND(x'')), CAST(vt0.c1 AS INTEGER), (0xffffffffffd2fab7 IN (rt0.c0)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), CAST(rt0.c0 AS NUMERIC), ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))) AND ((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1)))AND(x'')), CAST(vt0.c1 AS INTEGER), (0Xffffffffffd2fab7 IN (rt0.c0)))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), CAST(rt0.c0 AS NUMERIC), ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))) AND ((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1)))AND(x'')), CAST(vt0.c1 AS INTEGER), (0Xffffffffffd2fab7 IN (rt0.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c1, rt0.c0;
SELECT vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c1, rt0.c0 HAVING COUNT(SUM(rt0.c1)) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (COUNT(SUM(rt0.c1)))) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c1, rt0.c0 HAVING ((COUNT(SUM(rt0.c1))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR('#9')) IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))));
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR('#9')) IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE (CHANGES()) UNION ALL SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR('#9')) IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((NOT (CHANGES()))) UNION ALL SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR('#9')) IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE (((CHANGES()) ISNULL));
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR('#9')) IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)<<(rt0.c2)) AS TEXT);
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)<<(rt0.c2)) AS TEXT) WHERE (((((~ (rt0.c2))))>(((~ (rt0.c2)))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)<<(rt0.c2)) AS TEXT) WHERE ((NOT (((((~ (rt0.c2))))>(((~ (rt0.c2)))))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)<<(rt0.c2)) AS TEXT) WHERE (((((((~ (rt0.c2))))>(((~ (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)<<(rt0.c2)) AS TEXT);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 WHERE (CASE (rt0.c0 IN ())  WHEN CAST(vt0.c1 AS INTEGER) THEN ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN rt0.c0 WHEN ((vt0.c1) NOT BETWEEN (738288084) AND (vt0.c1)) THEN LIKELIHOOD(rt0.c1, 0.19423819842383405) ELSE CHANGES() END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE (rt0.c0 IN ())  WHEN CAST(vt0.c1 AS INTEGER) THEN ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN rt0.c0 WHEN ((vt0.c1) NOT BETWEEN (738288084) AND (vt0.c1)) THEN LIKELIHOOD(rt0.c1, 0.19423819842383405) ELSE CHANGES() END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((CASE (rt0.c0 IN ())  WHEN CAST(vt0.c1 AS INTEGER) THEN ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN rt0.c0 WHEN ((vt0.c1) NOT BETWEEN (738288084) AND (vt0.c1)) THEN LIKELIHOOD(rt0.c1, 0.19423819842383405) ELSE CHANGES() END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING AVG((((rt0.c0)) BETWEEN ((TOTAL(vt1.c0))) AND ((MAX(MIN(vt1.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (AVG((((rt0.c0)) BETWEEN ((TOTAL(vt1.c0))) AND ((MAX(MIN(vt1.c0)))))))) UNION ALL SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING ((AVG((((rt0.c0)) BETWEEN ((TOTAL(vt1.c0))) AND ((MAX(MIN(vt1.c0))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)<(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE)<(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE)<(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ('1580741864') UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT ('1580741864'))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((('1580741864') ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((0.07109525436886233)/(rt0.c0))) BETWEEN (((-226159514)>=(rt0.c0))) AND ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, NULL, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((0.07109525436886233)/(rt0.c0))) BETWEEN (((-226159514)>=(rt0.c0))) AND ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, NULL, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((0.07109525436886233)/(rt0.c0))) BETWEEN (((-226159514)>=(rt0.c0))) AND ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, NULL, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT((+ (vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT((+ (vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT((+ (vt1.c0)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT((+ (vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT((+ (vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT((+ (vt1.c0)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED GROUP BY vt0.c0, vt1.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_valid((vt0.c0 IN ()))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_valid((vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_valid((vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (x'1137') GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (x'1137'))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 NOT INDEXED, rt0 WHERE (((x'1137') ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1 HAVING '-661169700' UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1 HAVING (NOT ('-661169700')) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1 HAVING (('-661169700') ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1 HAVING '-661169700' UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1 HAVING (NOT ('-661169700')) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1 HAVING (('-661169700') ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)GLOB(vt0.c1))) BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0, vt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) AND ((vt0.c1)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) AND ((vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) AND ((vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((MAX(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((MAX(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((MAX(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((rt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((MAX(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((MAX(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((MAX(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((rt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0) NOTNULL)) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) NOTNULL)) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) NOTNULL)) ISNULL)) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((251059354)+(((((((((NULL)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((251059354)+(((((((((NULL)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((251059354)+(((((((((NULL)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (vt0.c1) GROUP BY rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (vt0.c1))) GROUP BY rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (((vt0.c1) ISNULL)) GROUP BY rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING vt1.c0 COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (vt1.c0 COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((vt1.c0 COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING vt1.c0 COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (vt1.c0 COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((vt1.c0 COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL vt0.c1 FROM vt0, rt0, vt1 NOT INDEXED;
SELECT vt0.c1 FROM vt0, rt0, vt1 WHERE ((((~ (rt0.c1))) NOT BETWEEN ((((vt0.c0, vt1.c0, '1442458173'))=((NULL, rt0.c0, vt0.c1)))) AND (CHANGES()))) UNION ALL SELECT ALL vt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT ((((~ (rt0.c1))) NOT BETWEEN ((((vt0.c0, vt1.c0, '1442458173'))==((NULL, rt0.c0, vt0.c1)))) AND (CHANGES()))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, rt0 NOT INDEXED, vt1 WHERE ((((((~ (rt0.c1))) NOT BETWEEN ((((vt0.c0, vt1.c0, '1442458173'))==((NULL, rt0.c0, vt0.c1)))) AND (CHANGES()))) ISNULL));
SELECT ALL vt0.c1 FROM vt0, rt0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (x'216a') UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (x'216a'))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((x'216a') ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)<((('-1233265588') IS TRUE)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM)<((('-1233265588') IS TRUE)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)<((('-1233265588') IS TRUE)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM vt1, vt0, rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING SUM(SUM(AVG(TOTAL(rt0.c2)))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (SUM(SUM(AVG(TOTAL(rt0.c2)))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(SUM(AVG(TOTAL(rt0.c2)))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((('342170529') NOT BETWEEN (((((-1624133025)OR(rt0.c1)))AND('950108143'))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION ALL SELECT * FROM vt0 NOT INDEXED, rt0, vt1 WHERE ((NOT ((('342170529') NOT BETWEEN (((((-1624133025)OR(rt0.c1)))AND('950108143'))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((('342170529') NOT BETWEEN (((((-1624133025)OR(rt0.c1)))AND('950108143'))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)!=(rt0.c1)) AS INTEGER);
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)<>(rt0.c1)) AS INTEGER) WHERE ((((((rt0.c1 IN (rt0.c2)))AND(vt0.c0 COLLATE RTRIM)))AND(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)!=(rt0.c1)) AS INTEGER) WHERE ((NOT ((((((rt0.c1 IN (rt0.c2)))AND(vt0.c0 COLLATE RTRIM)))AND(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)<>(rt0.c1)) AS INTEGER) WHERE ((((((((rt0.c1 IN (rt0.c2)))AND(vt0.c0 COLLATE RTRIM)))AND(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)!=(rt0.c1)) AS INTEGER);
SELECT ALL rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1, vt0 WHERE (0.8199127090452933) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (0.8199127090452933))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt1, vt0 NOT INDEXED WHERE (((0.8199127090452933) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(MAX(GROUP_CONCAT(rt0.c1))))GLOB(COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MAX(MAX(GROUP_CONCAT(rt0.c1))))GLOB(COUNT(*))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MAX(MAX(GROUP_CONCAT(rt0.c1))))GLOB(COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c2)), ((rt0.c1)AND(rt0.c1)), CAST(vt1.c0 AS BLOB)))>=((CASE WHEN vt0.c0 THEN vt1.c0 END, (((vt0.c1))<=((vt0.c1))), ((rt0.c1)&(rt0.c2)))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c2)), ((rt0.c1)AND(rt0.c1)), CAST(vt1.c0 AS BLOB)))>=((CASE WHEN vt0.c0 THEN vt1.c0 END, (((vt0.c1))<=((vt0.c1))), ((rt0.c1)&(rt0.c2)))))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c2)), ((rt0.c1)AND(rt0.c1)), CAST(vt1.c0 AS BLOB)))>=((CASE WHEN vt0.c0 THEN vt1.c0 END, (((vt0.c1))<=((vt0.c1))), ((rt0.c1)&(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) AND (((NULL)AND(vt0.c0))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((((vt1.c0) NOTNULL)) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) AND (((NULL)AND(vt0.c0))))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 WHERE (((((((vt1.c0) NOTNULL)) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) AND (((NULL)AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT MIN((~ (CAST(rt0.c0 AS INTEGER)))) FROM rt0 ORDER BY (CAST(x'' AS BLOB) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2908588196355376)))/((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2908588196355376)))/((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2908588196355376)))/((((vt0.c1, vt0.c1, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((0.3097616627174774)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-213949006' END)));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((0.3097616627174774)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-213949006' END))) WHERE ((0.7553282309605818 IN (((rt0.c1)<(x''))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((0.3097616627174774)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-213949006' END))) WHERE ((NOT ((0.7553282309605818 IN (((rt0.c1)<(x''))))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((0.3097616627174774)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-213949006' END))) WHERE ((((0.7553282309605818 IN (((rt0.c1)<(x''))))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((0.3097616627174774)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-213949006' END)));
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE (json_type((((rt0.c0, rt0.c1, vt0.c1))<((vt0.c0, vt0.c0, rt0.c0))))) GROUP BY rt0.c0, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (json_type((((rt0.c0, rt0.c1, vt0.c1))<((vt0.c0, vt0.c0, rt0.c0))))))) GROUP BY rt0.c0, vt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE (((json_type((((rt0.c0, rt0.c1, vt0.c1))<((vt0.c0, vt0.c0, rt0.c0))))) ISNULL)) GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS REAL))IS NOT(ABS(DISTINCT rt0.c2))) RIGHT OUTER JOIN vt1 ON (((rt0.c1))=((vt0.c0))) COLLATE NOCASE GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(rt0.c0)))<(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))));
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(rt0.c0)))<(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))) WHERE ((((+ (rt0.c2)))>=(SUBSTR(vt0.c1, vt0.c0)))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(rt0.c0)))<(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))) WHERE ((NOT ((((+ (rt0.c2)))>=(SUBSTR(vt0.c1, vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(rt0.c0)))<(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))) WHERE ((((((+ (rt0.c2)))>=(SUBSTR(vt0.c1, vt0.c0)))) ISNULL));
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(rt0.c0)))<(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c1 COLLATE NOCASE, ((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN (vt0.c1 COLLATE NOCASE, ((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE IN (vt0.c1 COLLATE NOCASE, ((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0, vt1 WHERE ((((((rt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<((CAST(rt0.c0 AS NUMERIC))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((((((rt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<((CAST(rt0.c0 AS NUMERIC))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0, vt1 WHERE ((((((((rt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<((CAST(rt0.c0 AS NUMERIC))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt0.c1 FROM vt1 NOT INDEXED, vt0 RIGHT OUTER JOIN rt0 ON 0.7430985063355593 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON 0.7430985063355593 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt0.c1 HAVING MAX(((((COUNT(MAX(rt0.c2)))OR(-579098312)))AND(SUM(MIN(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON 0.7430985063355593 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt0.c1 HAVING (NOT (MAX(((((COUNT(MAX(rt0.c2)))OR(-579098312)))AND(SUM(MIN(GROUP_CONCAT(vt1.c0)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON 0.7430985063355593 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt0.c1 HAVING ((MAX(((((COUNT(MAX(rt0.c2)))OR(-579098312)))AND(SUM(MIN(GROUP_CONCAT(vt1.c0))))))) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN (('N-ft㟎F[~')>(rt0.c0)) THEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)) END) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE ((vt1.c0) IS TRUE)  WHEN (('N-ft㟎F[~')>(rt0.c0)) THEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((CASE ((vt1.c0) IS TRUE)  WHEN (('N-ft㟎F[~')>(rt0.c0)) THEN ((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)) END) ISNULL));
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c1 FROM vt0, rt0, vt1 WHERE (rt0.c2 COLLATE BINARY) UNION SELECT DISTINCT rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM vt0, rt0, vt1 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt0, rt0, vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))) AND ((rt0.c1)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))) AND ((rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0, vt1 WHERE ((((((vt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))) AND ((rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING GROUP_CONCAT(((rt0.c0)IS NOT(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c0)IS NOT(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING ((GROUP_CONCAT(((rt0.c0)IS NOT(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING GROUP_CONCAT(((rt0.c0)IS NOT(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c0)IS NOT(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING ((GROUP_CONCAT(((rt0.c0)IS NOT(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)-(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND(0.5181257005322982)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((vt0.c0) NOTNULL)) NOT NULL)) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) NOT NULL)))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE (((((((vt0.c0) NOTNULL)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0, vt1, rt0;
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((json_array_length(vt1.c0) IN ())) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((json_array_length(vt1.c0) IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((json_array_length(vt1.c0) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM vt1, vt0, rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)AND(rt0.c0)))AND(NULL)) WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt0.c0)<<(rt0.c1)) WHEN (rt0.c0 IN (rt0.c1, '%쒥姜䏄')) THEN ((rt0.c2)<<(vt1.c0)) ELSE MAX('-839279111', vt1.c0) END) GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT (CASE rt0.c1 COLLATE NOCASE  WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)AND(rt0.c0)))AND(NULL)) WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt0.c0)<<(rt0.c1)) WHEN (rt0.c0 IN (rt0.c1, '%쒥姜䏄')) THEN ((rt0.c2)<<(vt1.c0)) ELSE MAX('-839279111', vt1.c0) END))) GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM vt1, vt0, rt0 WHERE (((CASE rt0.c1 COLLATE NOCASE  WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)AND(rt0.c0)))AND(NULL)) WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt0.c0)<<(rt0.c1)) WHEN (rt0.c0 IN (rt0.c1, '%쒥姜䏄')) THEN ((rt0.c2)<<(vt1.c0)) ELSE MAX('-839279111', vt1.c0) END) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(((((rt0.c0)AND(MAX(rt0.c1))))AND(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(((((rt0.c0)AND(MAX(rt0.c1))))AND(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(((((rt0.c0)AND(MAX(rt0.c1))))AND(rt0.c2)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE 0.4333153836857263  WHEN ((vt1.c0) IS TRUE) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE 0.4333153836857263  WHEN ((vt1.c0) IS TRUE) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE 0.4333153836857263  WHEN ((vt1.c0) IS TRUE) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING TOTAL(((rt0.c1) BETWEEN (vt1.c0) AND (COUNT(rt0.c0)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(((rt0.c1) BETWEEN (vt1.c0) AND (COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING ((TOTAL(((rt0.c1) BETWEEN (vt1.c0) AND (COUNT(rt0.c0))))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT) WHERE ((((CASE vt0.c0  WHEN -1.964283021E9 THEN vt0.c1 ELSE rt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((x'')AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c1))))<(((~ (vt0.c1)), IFNULL(DISTINCT rt0.c2, rt0.c0), ((0.32590647914236226)<=(rt0.c0)))))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT) WHERE ((NOT ((((CASE vt0.c0  WHEN -1.964283021E9 THEN vt0.c1 ELSE rt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((x'')AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c1))))<(((~ (vt0.c1)), IFNULL(DISTINCT rt0.c2, rt0.c0), ((0.32590647914236226)<=(rt0.c0)))))))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT) WHERE ((((((CASE vt0.c0  WHEN -1.964283021E9 THEN vt0.c1 ELSE rt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((x'')AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c1))))<(((~ (vt0.c1)), IFNULL(DISTINCT rt0.c2, rt0.c0), ((0.32590647914236226)<=(rt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT);
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (CAST(((0.6844805437101953) NOTNULL) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((0.6844805437101953) NOTNULL) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((CAST(((0.6844805437101953) NOTNULL) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING ((SUM(AVG(rt0.c2)))LIKE(GROUP_CONCAT(vt0.c1))) COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((SUM(AVG(rt0.c2)))LIKE(GROUP_CONCAT(vt0.c1))) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0 HAVING ((((SUM(AVG(rt0.c2)))LIKE(GROUP_CONCAT(vt0.c1))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE ((((rt0.c2 COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1, vt0.c1))!=(((vt0.c0)AND(vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (((TRIM(DISTINCT vt0.c1, vt0.c1))!=(((vt0.c0)AND(vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c1, vt0.c1))!=(((vt0.c0)AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING MAX(2131656563) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (MAX(2131656563))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((MAX(2131656563)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING MAX(2131656563) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (MAX(2131656563))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((MAX(2131656563)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN x'' THEN (~ (rt0.c0)) END) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN x'' THEN (~ (rt0.c0)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN x'' THEN (~ (rt0.c0)) END) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), 0.33572448651378806)) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT (COALESCE(CAST(rt0.c1 AS BLOB), 0.33572448651378806)))) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE (((COALESCE(CAST(rt0.c1 AS BLOB), 0.33572448651378806)) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((COUNT(*))) AND (((NOT (AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((COUNT(*))) AND (((NOT (AVG(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((COUNT(*))) AND (((NOT (AVG(vt1.c0))))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((COUNT(*))) AND (((NOT (AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((COUNT(*))) AND (((NOT (AVG(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((COUNT(*))) AND (((NOT (AVG(vt1.c0))))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE (CASE WHEN 0xffffffffb92daec4 THEN CASE WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN 0.8970147021609389 WHEN rt0.c0 THEN vt1.c0 END END) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (CASE WHEN 0Xffffffffb92daec4 THEN CASE WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN 0.8970147021609389 WHEN rt0.c0 THEN vt1.c0 END END))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE (((CASE WHEN 0Xffffffffb92daec4 THEN CASE WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN 0.8970147021609389 WHEN rt0.c0 THEN vt1.c0 END END) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((((0.5558318715671883)-(vt1.c0)))IS(CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (((((0.5558318715671883)-(vt1.c0)))IS(CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 NOT INDEXED WHERE (((((((0.5558318715671883)-(vt1.c0)))IS(CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL vt0.c1 FROM vt1 NOT INDEXED, rt0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, rt0, vt0 WHERE (CAST(x'' COLLATE RTRIM AS TEXT)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (CAST(x'' COLLATE RTRIM AS TEXT)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, rt0, vt0 WHERE (((CAST(x'' COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 NOT INDEXED, rt0, vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((NOT (((vt1.c0) BETWEEN (rt0.c2) AND ('1154540626'))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ((NOT (((vt1.c0) BETWEEN (rt0.c2) AND ('1154540626'))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((NOT (((vt1.c0) BETWEEN (rt0.c2) AND ('1154540626'))))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt1.c0, rt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (IFNULL(vt0.c0, rt0.c2)));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt1.c0, rt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (IFNULL(vt0.c0, rt0.c2))) WHERE (SUBSTR(NULL, rt0.c1) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt1.c0, rt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (IFNULL(vt0.c0, rt0.c2))) WHERE ((NOT (SUBSTR(NULL, rt0.c1) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt1.c0, rt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (IFNULL(vt0.c0, rt0.c2))) WHERE (((SUBSTR(NULL, rt0.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt1.c0, rt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (IFNULL(vt0.c0, rt0.c2)));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS FALSE)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS FALSE)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS FALSE)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2;
