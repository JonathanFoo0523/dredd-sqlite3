-- Time: 2024/06/11 08:43:35
-- Database: database31
-- Database version: 3.40.0
-- seed value: 3032861431
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, content=''); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 1ms;
UPDATE OR IGNORE rt1 SET c0=-94197414; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39752'); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('RYWU	''k\n', NULL), (NULL, '-1587893904'), (2127142794, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '28443'); -- 1ms;
UPDATE OR IGNORE rt1 SET (c1)=(x'') WHERE (NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c4 END)); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
UPDATE OR REPLACE rt1 SET (c1)=(0.5018224922330269); -- 0ms;
DROP TABLE rt1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 1ms;
REINDEX NOCASE; -- 0ms;
COMMIT; -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40324'); -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 1ms;
REINDEX NOCASE; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT CASE LOWER(vt0.c0)  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((vt0.c0)%(vt0.c0)) THEN vt0.c0 WHEN TOTAL(vt0.c0) THEN (vt0.c0 IN (vt0.c0)) END FROM vt0 WHERE ((~ (((x'8a59')-('Sw2龊!hb& '))))) GROUP BY LOWER(vt0.c0) COLLATE RTRIM HAVING (vt0.c0 COLLATE NOCASE IN ()); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41811'); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
VACUUM; -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA main.journal_mode = WAL; -- 1ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1673548638);\n; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER CHECK ( highlight(c0, c0, c0, c0) COLLATE NOCASE) UNIQUE ); -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE UNIQUE INDEX i28 ON t0(NULL COLLATE RTRIM); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
PRAGMA default_cache_size = -1587893904; -- 0ms;
ALTER TABLE t0 ADD COLUMN c59 REAL; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, vt0, v0;
SELECT ALL * FROM t0, vt0, v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN ((v0.c0)+(t0.c0)) THEN CASE t0.c0  WHEN NULL THEN t0.c0 END END) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE ((NOT (CASE ((v0.c0) IS FALSE)  WHEN ((v0.c0)+(t0.c0)) THEN CASE t0.c0  WHEN NULL THEN t0.c0 END END))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE (((CASE ((v0.c0) IS FALSE)  WHEN ((v0.c0)+(t0.c0)) THEN CASE t0.c0  WHEN NULL THEN t0.c0 END END) ISNULL));
SELECT * FROM t0, vt0, v0;
SELECT DISTINCT t0.c59 FROM t0;
SELECT DISTINCT t0.c59 FROM t0 WHERE (t0.c59) UNION SELECT DISTINCT t0.c59 FROM t0 WHERE ((NOT (t0.c59))) UNION SELECT DISTINCT t0.c59 FROM t0 WHERE (((t0.c59) ISNULL));
SELECT DISTINCT t0.c59 FROM t0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, t0, v0 WHERE ((((vt0.c0)GLOB(t0.c0)) IN ())) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, t0, v0 WHERE ((NOT ((((vt0.c0)GLOB(t0.c0)) IN ())))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, t0 NOT INDEXED, v0 WHERE ((((((vt0.c0)GLOB(t0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL MAX((((((((((t0.c0)OR(t0.c59)))AND(vt0.c0)))AND(t0.c59)))AND(t0.c59)) IN ())) FROM vt0, v0, t0 ORDER BY (((~ (t0.c0))) BETWEEN (1058085294) AND (((t0.c0)%(t0.c0))));
SELECT * FROM vt0, v0, t0;
SELECT ALL * FROM vt0, v0, t0 WHERE (((((IFNULL(DISTINCT vt0.c0, '937526583'))OR(vt0.c0)))AND(((t0.c59) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE ((NOT (((((IFNULL(DISTINCT vt0.c0, '937526583'))OR(vt0.c0)))AND(((t0.c59) NOTNULL)))))) UNION ALL SELECT * FROM vt0, v0, t0 WHERE (((((((IFNULL(DISTINCT vt0.c0, '937526583'))OR(vt0.c0)))AND(((t0.c59) NOTNULL)))) ISNULL));
SELECT * FROM vt0, v0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59))) ISNULL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59))) ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(CAST(vt0.c0 AS NUMERIC), 0.7674812056835931)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(CAST(vt0.c0 AS NUMERIC), 0.7674812056835931)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(CAST(vt0.c0 AS NUMERIC), 0.7674812056835931)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c59 FROM t0, vt0, v0 GROUP BY t0.c59;
SELECT t0.c59 FROM t0, vt0, v0 GROUP BY t0.c59 HAVING MAX(TOTAL(t0.c0)) UNION ALL SELECT t0.c59 FROM t0, vt0, v0 GROUP BY t0.c59 HAVING (NOT (MAX(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c59 FROM t0, vt0, v0 GROUP BY t0.c59 HAVING ((MAX(TOTAL(t0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN (((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0) ISNULL) IN (((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0) ISNULL) IN (((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ ((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ ((+ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, t0.c59 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c59;
SELECT ALL vt0.c0, t0.c59 FROM vt0, t0, v0 WHERE (JULIANDAY(((t0.c59)<=(NULL)), ((vt0.c0) BETWEEN (t0.c59) AND (vt0.c0)), t0.c59 COLLATE RTRIM)) GROUP BY vt0.c0, t0.c59 UNION SELECT ALL vt0.c0, t0.c59 FROM vt0, t0, v0 WHERE ((NOT (JULIANDAY(((t0.c59)<=(NULL)), ((vt0.c0) BETWEEN (t0.c59) AND (vt0.c0)), t0.c59 COLLATE RTRIM)))) GROUP BY vt0.c0, t0.c59 UNION SELECT ALL vt0.c0, t0.c59 FROM vt0, t0, v0 WHERE (((JULIANDAY(((t0.c59)<=(NULL)), ((vt0.c0) BETWEEN (t0.c59) AND (vt0.c0)), t0.c59 COLLATE RTRIM)) ISNULL)) GROUP BY vt0.c0, t0.c59;
SELECT vt0.c0, t0.c59 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c59;
SELECT v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0;
SELECT v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0 HAVING MIN(IFNULL(DISTINCT NULL, 'RYWU	''K\n')) UNION ALL SELECT v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0 HAVING (NOT (MIN(IFNULL(DISTINCT NULL, 'RYWU	''K\n')))) UNION ALL SELECT ALL v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0 HAVING ((MIN(IFNULL(DISTINCT NULL, 'RYWU	''K\n'))) ISNULL);
SELECT v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0;
SELECT v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0 HAVING MIN(IFNULL(DISTINCT NULL, 'RYWU	''K\n')) UNION ALL SELECT v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0 HAVING (NOT (MIN(IFNULL(DISTINCT NULL, 'RYWU	''K\n')))) UNION ALL SELECT ALL v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0 HAVING ((MIN(IFNULL(DISTINCT NULL, 'RYWU	''K\n'))) ISNULL);
SELECT v0.c0, t0.c59, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c59, vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL)IS(((('-1702828354', vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((NULL)IS(((('-1702828354', vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL)IS(((('-1702828354', vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN ('982333445') AND (t0.c59))) IS TRUE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN ('982333445') AND (t0.c59))) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN ('982333445') AND (t0.c59))) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE GROUP_CONCAT(v0.c0)  WHEN MIN(SUM(COUNT(*))) THEN COUNT(*) ELSE SUM(COUNT(*)) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE GROUP_CONCAT(v0.c0)  WHEN MIN(SUM(COUNT(*))) THEN COUNT(*) ELSE SUM(COUNT(*)) END)) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((CASE GROUP_CONCAT(v0.c0)  WHEN MIN(SUM(COUNT(*))) THEN COUNT(*) ELSE SUM(COUNT(*)) END) ISNULL);
SELECT ALL t0.c59 FROM v0 NATURAL JOIN t0;
SELECT ALL t0.c59 FROM v0 NATURAL JOIN t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN ((t0.c59) NOT BETWEEN (t0.c0) AND (0.5018224922330269)) END) UNION ALL SELECT t0.c59 FROM v0 NATURAL JOIN t0 WHERE ((NOT (CASE WHEN (NOT (t0.c0)) THEN ((t0.c59) NOT BETWEEN (t0.c0) AND (0.5018224922330269)) END))) UNION ALL SELECT ALL t0.c59 FROM v0 NATURAL JOIN t0 WHERE (((CASE WHEN (NOT (t0.c0)) THEN ((t0.c59) NOT BETWEEN (t0.c0) AND (0.5018224922330269)) END) ISNULL));
SELECT ALL t0.c59 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c0 IN ()) CROSS JOIN v0 ON ((((((((((((((((t0.c59)OR(t0.c59)))AND(t0.c0)))AND(t0.c59)))OR(t0.c0)))OR(0.4759285605524459)))AND(t0.c59)))AND((t0.c0 IN ()))))AND((((('-2134420813')AND(vt0.c0)))AND(t0.c0))));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c0 IN ()) CROSS JOIN v0 ON ((((((((((((((((t0.c59)OR(t0.c59)))AND(t0.c0)))AND(t0.c59)))OR(t0.c0)))OR(0.4759285605524459)))AND(t0.c59)))AND((t0.c0 IN ()))))AND((((('-2134420813')AND(vt0.c0)))AND(t0.c0)))) WHERE (((HEX(DISTINCT t0.c59)) ISNULL)) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c0 IN ()) CROSS JOIN v0 ON ((((((((((((((((t0.c59)OR(t0.c59)))AND(t0.c0)))AND(t0.c59)))OR(t0.c0)))OR(0.4759285605524459)))AND(t0.c59)))AND((t0.c0 IN ()))))AND((((('-2134420813')AND(vt0.c0)))AND(t0.c0)))) WHERE ((NOT (((HEX(DISTINCT t0.c59)) ISNULL)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c0 IN ()) CROSS JOIN v0 ON ((((((((((((((((t0.c59)OR(t0.c59)))AND(t0.c0)))AND(t0.c59)))OR(t0.c0)))OR(0.4759285605524459)))AND(t0.c59)))AND((t0.c0 IN ()))))AND((((('-2134420813')AND(vt0.c0)))AND(t0.c0)))) WHERE (((((HEX(DISTINCT t0.c59)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c0 IN ()) CROSS JOIN v0 ON ((((((((((((((((t0.c59)OR(t0.c59)))AND(t0.c0)))AND(t0.c59)))OR(t0.c0)))OR(0.4759285605524459)))AND(t0.c59)))AND((t0.c0 IN ()))))AND((((('-2134420813')AND(vt0.c0)))AND(t0.c0))));
SELECT ALL t0.c59 FROM t0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0 WHERE (t0.c59) GROUP BY t0.c59 UNION SELECT ALL t0.c59 FROM t0 WHERE ((NOT (t0.c59))) GROUP BY t0.c59 UNION SELECT ALL t0.c59 FROM t0 WHERE (((t0.c59) ISNULL)) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0 GROUP BY t0.c59;
SELECT ALL t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0;
SELECT t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0;
SELECT t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, vt0.c0, t0.c0;
SELECT * FROM t0 NATURAL JOIN vt0;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CAST(t0.c59 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((NOT (CAST(t0.c59 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((CAST(t0.c59 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CASE WHEN t0.c59 THEN t0.c59 END IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CASE WHEN t0.c59 THEN t0.c59 END IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CASE WHEN t0.c59 THEN t0.c59 END IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, v0 WHERE ((((CAST(0.8400117477409154 AS BLOB)))==(((((v0.c0))>((t0.c59))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, v0 WHERE ((NOT ((((CAST(0.8400117477409154 AS BLOB)))=(((((v0.c0))>((t0.c59))))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0, v0 WHERE ((((((CAST(0.8400117477409154 AS BLOB)))=(((((v0.c0))>((t0.c59))))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0;
SELECT t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0 HAVING (COUNT(AVG(t0.c59)) IN ()) UNION ALL SELECT ALL t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0 HAVING (NOT ((COUNT(AVG(t0.c59)) IN ()))) UNION ALL SELECT ALL t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0 HAVING (((COUNT(AVG(t0.c59)) IN ())) ISNULL);
SELECT t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0;
SELECT t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0 HAVING (COUNT(AVG(t0.c59)) IN ()) UNION ALL SELECT ALL t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0 HAVING (NOT ((COUNT(AVG(t0.c59)) IN ()))) UNION ALL SELECT ALL t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0 HAVING (((COUNT(AVG(t0.c59)) IN ())) ISNULL);
SELECT t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0, v0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((((+ (v0.c0)))AND(SQLITE_SOURCE_ID())))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((0.13502777698130075, v0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((((((+ (v0.c0)))AND(SQLITE_SOURCE_ID())))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((0.13502777698130075, v0.c0, vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((((((+ (v0.c0)))AND(SQLITE_SOURCE_ID())))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((0.13502777698130075, v0.c0, vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT t0.c0 FROM t0, v0, vt0;
SELECT DISTINCT t0.c0 FROM t0, v0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE)) UNION SELECT DISTINCT t0.c0 FROM t0, v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) IS FALSE)))) UNION SELECT DISTINCT t0.c0 FROM t0, v0, vt0 WHERE (((((CAST(vt0.c0 AS REAL)) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c59)IS NOT(t0.c0)))IS NOT((('ꥰ5W') BETWEEN (t0.c59) AND (0.9717004023985963))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c59)IS NOT(t0.c0)))IS NOT((('ꥰ5W') BETWEEN (t0.c59) AND (0.9717004023985963))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c59)IS NOT(t0.c0)))IS NOT((('ꥰ5W') BETWEEN (t0.c59) AND (0.9717004023985963))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59;
SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING MIN(t0.c0) COLLATE NOCASE UNION ALL SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING (NOT (MIN(t0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING ((MIN(t0.c0) COLLATE NOCASE) ISNULL);
SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59;
SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING MIN(t0.c0) COLLATE NOCASE UNION ALL SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING (NOT (MIN(t0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING ((MIN(t0.c0) COLLATE NOCASE) ISNULL);
SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (('1958821248' COLLATE RTRIM IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT (('1958821248' COLLATE RTRIM IN ())))) UNION ALL SELECT * FROM t0 WHERE (((('1958821248' COLLATE RTRIM IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0, t0.c59, t0.c0 FROM v0 INDEXED BY i28, t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c59, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((MIN(vt0.c0)) NOT NULL) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((MIN(vt0.c0)) NOT NULL) AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((MIN(vt0.c0)) NOT NULL) AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((MIN(vt0.c0)) NOT NULL) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((MIN(vt0.c0)) NOT NULL) AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((MIN(vt0.c0)) NOT NULL) AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((x'') BETWEEN (0.16955094070773047) AND (((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (((x'') BETWEEN (0.16955094070773047) AND (((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((x'') BETWEEN (0.16955094070773047) AND (((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT t0.c0 FROM v0, t0 INNER JOIN vt0 ON (((t0.c0, ((((v0.c0)AND(t0.c0)))OR(t0.c0)), x''))=((CASE WHEN t0.c59 THEN NULL ELSE t0.c59 END, UPPER(DISTINCT 0.7536611859425654), ((t0.c59) NOTNULL)))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 INNER JOIN vt0 ON (((t0.c0, ((((v0.c0)AND(t0.c0)))OR(t0.c0)), x''))=((CASE WHEN t0.c59 THEN NULL ELSE t0.c59 END, UPPER(DISTINCT 0.7536611859425654), ((t0.c59) NOTNULL)))) WHERE (((('-1587893904'))<((v0.c0 COLLATE RTRIM)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 INNER JOIN vt0 ON (((t0.c0, ((((v0.c0)AND(t0.c0)))OR(t0.c0)), x''))=((CASE WHEN t0.c59 THEN NULL ELSE t0.c59 END, UPPER(DISTINCT 0.7536611859425654), ((t0.c59) NOTNULL)))) WHERE ((NOT (((('-1587893904'))<((v0.c0 COLLATE RTRIM)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 INNER JOIN vt0 ON (((t0.c0, ((((v0.c0)AND(t0.c0)))OR(t0.c0)), x''))==((CASE WHEN t0.c59 THEN NULL ELSE t0.c59 END, UPPER(DISTINCT 0.7536611859425654), ((t0.c59) NOTNULL)))) WHERE (((((('-1587893904'))<((v0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 INNER JOIN vt0 ON (((t0.c0, ((((v0.c0)AND(t0.c0)))OR(t0.c0)), x''))=((CASE WHEN t0.c59 THEN NULL ELSE t0.c59 END, UPPER(DISTINCT 0.7536611859425654), ((t0.c59) NOTNULL)))) GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE GLOB('Zzz9', t0.c59)  WHEN ((t0.c59)<=(t0.c59)) THEN ((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE GLOB('Zzz9', t0.c59)  WHEN ((t0.c59)<=(t0.c59)) THEN ((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE GLOB('Zzz9', t0.c59)  WHEN ((t0.c59)<=(t0.c59)) THEN ((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0;
SELECT DISTINCT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0 WHERE (GLOB(vt0.c0 COLLATE NOCASE, (NOT (v0.c0)))) UNION SELECT DISTINCT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0 WHERE ((NOT (GLOB(vt0.c0 COLLATE NOCASE, (NOT (v0.c0)))))) UNION SELECT DISTINCT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0 WHERE (((GLOB(vt0.c0 COLLATE NOCASE, (NOT (v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0;
SELECT t0.c59, t0.c0, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (v0.c0 IN ()) THEN json_insert(vt0.c0, vt0.c0, v0.c0) ELSE ((t0.c0)OR(t0.c0)) END GROUP BY t0.c59, t0.c0, vt0.c0;
SELECT ALL t0.c59, t0.c0, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (v0.c0 IN ()) THEN json_insert(vt0.c0, vt0.c0, v0.c0) ELSE ((t0.c0)OR(t0.c0)) END WHERE ((((vt0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((((t0.c59)<=(vt0.c0)))))) GROUP BY t0.c59, t0.c0, vt0.c0 UNION SELECT t0.c59, t0.c0, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (v0.c0 IN ()) THEN json_insert(vt0.c0, vt0.c0, v0.c0) ELSE ((t0.c0)OR(t0.c0)) END WHERE ((NOT ((((vt0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((((t0.c59)<=(vt0.c0)))))))) GROUP BY t0.c59, t0.c0, vt0.c0 UNION SELECT t0.c59, t0.c0, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (v0.c0 IN ()) THEN json_insert(vt0.c0, vt0.c0, v0.c0) ELSE ((t0.c0)OR(t0.c0)) END WHERE ((((((vt0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((((t0.c59)<=(vt0.c0)))))) ISNULL)) GROUP BY t0.c59, t0.c0, vt0.c0;
SELECT t0.c59, t0.c0, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (v0.c0 IN ()) THEN json_insert(vt0.c0, vt0.c0, v0.c0) ELSE ((t0.c0)OR(t0.c0)) END GROUP BY t0.c59, t0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, v0, t0;
SELECT ALL * FROM vt0, v0, t0 WHERE (t0.c0) UNION ALL SELECT * FROM vt0, v0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS REAL) INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS REAL) INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM)) WHERE (((((CASE t0.c0  WHEN t0.c59 THEN '' ELSE '*4A' END)OR(UPPER(t0.c0))))OR((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS REAL) INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM)) WHERE ((NOT (((((CASE t0.c0  WHEN t0.c59 THEN '' ELSE '*4A' END)OR(UPPER(t0.c0))))OR((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS REAL) INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM)) WHERE (((((((CASE t0.c0  WHEN t0.c59 THEN '' ELSE '*4A' END)OR(UPPER(t0.c0))))OR((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS REAL) INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM));
SELECT t0.c0, v0.c0, t0.c59 FROM t0 INNER JOIN v0 ON (((NULL) ISNULL) IN ()) GROUP BY t0.c0, v0.c0, t0.c59;
SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0 INNER JOIN v0 ON (((NULL) ISNULL) IN ()) WHERE ((((+ (t0.c0)))<(((t0.c59) IS TRUE)))) GROUP BY t0.c0, v0.c0, t0.c59 UNION SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0 INNER JOIN v0 ON (((NULL) ISNULL) IN ()) WHERE ((NOT ((((+ (t0.c0)))<(((t0.c59) IS TRUE)))))) GROUP BY t0.c0, v0.c0, t0.c59 UNION SELECT t0.c0, v0.c0, t0.c59 FROM t0 INNER JOIN v0 ON (((NULL) ISNULL) IN ()) WHERE ((((((+ (t0.c0)))<(((t0.c59) IS TRUE)))) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c59;
SELECT t0.c0, v0.c0, t0.c59 FROM t0 INNER JOIN v0 ON (((NULL) ISNULL) IN ()) GROUP BY t0.c0, v0.c0, t0.c59;
SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0;
SELECT t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0 HAVING (((COUNT(*))) BETWEEN ((((719575280)-(COUNT(v0.c0))))) AND ((COUNT(t0.c0)))) UNION ALL SELECT t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((((719575280)-(COUNT(v0.c0))))) AND ((COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0 HAVING (((((COUNT(*))) BETWEEN ((((719575280)-(COUNT(v0.c0))))) AND ((COUNT(t0.c0))))) ISNULL);
SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0;
SELECT t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0 HAVING (((COUNT(*))) BETWEEN ((((719575280)-(COUNT(v0.c0))))) AND ((COUNT(t0.c0)))) UNION ALL SELECT t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((((719575280)-(COUNT(v0.c0))))) AND ((COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0 HAVING (((((COUNT(*))) BETWEEN ((((719575280)-(COUNT(v0.c0))))) AND ((COUNT(t0.c0))))) ISNULL);
SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))<<(CAST(v0.c0 AS BLOB))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)IS(v0.c0)))AND(((v0.c0) NOT NULL))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)IS(v0.c0)))AND(((v0.c0) NOT NULL))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0)IS(v0.c0)))AND(((v0.c0) NOT NULL))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c0;
SELECT t0.c59 FROM vt0, t0, v0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM vt0, t0, v0 WHERE ((((vt0.c0)<(t0.c0)) IN ())) GROUP BY t0.c59 UNION SELECT ALL t0.c59 FROM vt0, t0, v0 WHERE ((NOT ((((vt0.c0)<(t0.c0)) IN ())))) GROUP BY t0.c59 UNION SELECT t0.c59 FROM vt0, t0, v0 WHERE ((((((vt0.c0)<(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c59;
SELECT t0.c59 FROM vt0, t0, v0 GROUP BY t0.c59;
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59;
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59;
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59;
SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0;
SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0 WHERE (((((t0.c0)GLOB(v0.c0)))<=(CAST(t0.c59 AS TEXT)))) UNION ALL SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0 WHERE ((NOT (((((t0.c0)GLOB(v0.c0)))<=(CAST(t0.c59 AS TEXT)))))) UNION ALL SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0 WHERE (((((((t0.c0)GLOB(v0.c0)))<=(CAST(t0.c59 AS TEXT)))) ISNULL));
SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0;
SELECT DISTINCT t0.c0 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (CAST(t0.c59 AS BLOB) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (CAST(t0.c59 AS BLOB) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((CAST(t0.c59 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0 NATURAL JOIN t0;
SELECT ALL vt0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, t0, vt0 WHERE (CAST(CASE t0.c59  WHEN t0.c59 THEN t0.c0 END AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, t0, vt0 WHERE ((NOT (CAST(CASE t0.c59  WHEN t0.c59 THEN t0.c0 END AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, t0, vt0 WHERE (((CAST(CASE t0.c59  WHEN t0.c59 THEN t0.c0 END AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(AVG(COUNT(*))) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(AVG(COUNT(*))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(AVG(COUNT(*))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(AVG(COUNT(*))) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(AVG(COUNT(*))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(AVG(COUNT(*))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((+ (NULL)))GLOB(((t0.c59) BETWEEN (t0.c59) AND (t0.c59))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((+ (NULL)))GLOB(((t0.c59) BETWEEN (t0.c59) AND (t0.c59))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((+ (NULL)))GLOB(((t0.c59) BETWEEN (t0.c59) AND (t0.c59))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((t0.c59 IN ())) BETWEEN (x'') AND ((('?I')>(t0.c0))))) UNION SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((t0.c59 IN ())) BETWEEN (x'') AND ((('?I')>(t0.c0))))))) UNION SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((t0.c59 IN ())) BETWEEN (x'') AND ((('?I')>(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 WHERE ((((((t0.c59)&(t0.c59))))!=((NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT ((((((t0.c59)&(t0.c59))))<>((NULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((((((((t0.c59)&(t0.c59))))!=((NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 NOT INDEXED, t0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0 HAVING COUNT(((t0.c59)&(COUNT(*)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(((t0.c59)&(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(((t0.c59)&(COUNT(*))))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((~ ((~ (t0.c59))))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((~ ((~ (t0.c59))))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((~ ((~ (t0.c59))))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM v0, vt0, t0 WHERE (((x'')LIKE(((x'')<(v0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM v0, vt0, t0 WHERE ((NOT (((x'')LIKE(((x'')<(v0.c0))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM v0, vt0, t0 WHERE (((((x'')LIKE(((x'')<(v0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((vt0.c0 COLLATE BINARY)OR(((SUM(vt0.c0))OR(COUNT(COUNT(MIN('0.7536611859425654'))))))))AND(SUM(vt0.c0))))AND((+ (vt0.c0)))))AND((vt0.c0 IN (AVG(MIN(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((vt0.c0 COLLATE BINARY)OR(((SUM(vt0.c0))OR(COUNT(COUNT(MIN('0.7536611859425654'))))))))AND(SUM(vt0.c0))))AND((+ (vt0.c0)))))AND((vt0.c0 IN (AVG(MIN(COUNT(*))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((vt0.c0 COLLATE BINARY)OR(((SUM(vt0.c0))OR(COUNT(COUNT(MIN('0.7536611859425654'))))))))AND(SUM(vt0.c0))))AND((+ (vt0.c0)))))AND((vt0.c0 IN (AVG(MIN(COUNT(*)))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ ((((vt0.c0, 0Xffffffffa7b695a3, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ ((((vt0.c0, 0Xffffffffa7b695a3, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ ((((vt0.c0, 0Xffffffffa7b695a3, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, v0.c0, t0.c59 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT t0.c0, v0.c0, t0.c59 FROM v0, t0 WHERE ((((t0.c0)>=(v0.c0)) IN ())) GROUP BY t0.c0, v0.c0, t0.c59 UNION SELECT ALL t0.c0, v0.c0, t0.c59 FROM v0, t0 WHERE ((NOT ((((t0.c0)>=(v0.c0)) IN ())))) GROUP BY t0.c0, v0.c0, t0.c59 UNION SELECT t0.c0, v0.c0, t0.c59 FROM v0, t0 WHERE ((((((t0.c0)>=(v0.c0)) IN ())) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c59;
SELECT t0.c0, v0.c0, t0.c59 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT vt0.c0, t0.c59 FROM t0, vt0 GROUP BY vt0.c0, t0.c59;
SELECT ALL vt0.c0, t0.c59 FROM t0, vt0 GROUP BY vt0.c0, t0.c59 HAVING TOTAL(AVG(t0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c59 FROM t0, vt0 GROUP BY vt0.c0, t0.c59 HAVING (NOT (TOTAL(AVG(t0.c0)))) UNION ALL SELECT vt0.c0, t0.c59 FROM t0, vt0 GROUP BY vt0.c0, t0.c59 HAVING ((TOTAL(AVG(t0.c0))) ISNULL);
SELECT * FROM t0, v0, vt0;
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c0)IS NOT(v0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE ((NOT (((((vt0.c0)IS NOT(v0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE (((((((vt0.c0)IS NOT(v0.c0))) ISNULL)) ISNULL));
SELECT * FROM t0, v0, vt0;
SELECT DISTINCT t0.c0, t0.c59 FROM v0, t0, vt0;
SELECT DISTINCT t0.c0, t0.c59 FROM v0, t0, vt0 WHERE (((((t0.c59) BETWEEN (vt0.c0) AND (t0.c59)))+(t0.c0))) UNION SELECT DISTINCT t0.c0, t0.c59 FROM v0, t0, vt0 WHERE ((NOT (((((t0.c59) BETWEEN (vt0.c0) AND (t0.c59)))+(t0.c0))))) UNION SELECT DISTINCT t0.c0, t0.c59 FROM v0, t0, vt0 WHERE (((((((t0.c59) BETWEEN (vt0.c0) AND (t0.c59)))+(t0.c0))) ISNULL));
SELECT DISTINCT t0.c0, t0.c59 FROM v0, t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c59))) THEN t0.c0 COLLATE NOCASE END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c59))) THEN t0.c0 COLLATE NOCASE END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c59))) THEN t0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, vt0, t0 NOT INDEXED GROUP BY t0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, vt0, t0 NOT INDEXED GROUP BY t0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0;
SELECT v0.c0 FROM v0, t0;
SELECT v0.c0 FROM v0, t0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((t0.c0)GLOB(v0.c0))) AND (UPPER(t0.c0)))) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE ((NOT ((((+ (v0.c0))) NOT BETWEEN (((t0.c0)GLOB(v0.c0))) AND (UPPER(t0.c0)))))) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE ((((((+ (v0.c0))) NOT BETWEEN (((t0.c0)GLOB(v0.c0))) AND (UPPER(t0.c0)))) ISNULL));
SELECT v0.c0 FROM v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((~ ((~ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT ((~ ((~ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((((~ ((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0 RIGHT OUTER JOIN t0 ON (((((t0.c59))<((vt0.c0)))) NOTNULL) CROSS JOIN vt0 ON ((((IFNULL(v0.c0, t0.c59))AND((((vt0.c0))==((vt0.c0))))))OR((t0.c59 IN ()))) GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59;
SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT v0.c0 FROM v0, vt0, t0;
SELECT ALL v0.c0 FROM v0, vt0, t0 WHERE (((t0.c59)AND(((vt0.c0)-(t0.c59))))) UNION ALL SELECT v0.c0 FROM v0, vt0, t0 WHERE ((NOT (((t0.c59)AND(((vt0.c0)-(t0.c59))))))) UNION ALL SELECT v0.c0 FROM v0, vt0, t0 WHERE (((((t0.c59)AND(((vt0.c0)-(t0.c59))))) ISNULL));
SELECT v0.c0 FROM v0, vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (v0.c0))) IS TRUE) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (v0.c0))) IS TRUE) WHERE (((((CAST(vt0.c0 AS INTEGER))OR((vt0.c0 IN ()))))AND(((vt0.c0)<=(v0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (v0.c0))) IS TRUE) WHERE ((NOT (((((CAST(vt0.c0 AS INTEGER))OR((vt0.c0 IN ()))))AND(((vt0.c0)<=(v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (v0.c0))) IS TRUE) WHERE (((((((CAST(vt0.c0 AS INTEGER))OR((vt0.c0 IN ()))))AND(((vt0.c0)<=(v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (v0.c0))) IS TRUE) GROUP BY vt0.c0;
SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0;
SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING ((vt0.c0)>(((NULL)=(MAX(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING (NOT (((vt0.c0)>(((NULL)=(MAX(TOTAL(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING ((((vt0.c0)>(((NULL)=(MAX(TOTAL(vt0.c0))))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN x'' COLLATE NOCASE THEN ((v0.c0)<<(v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN x'' COLLATE NOCASE THEN ((v0.c0)<<(v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN x'' COLLATE NOCASE THEN ((v0.c0)<<(v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c59, v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c59, v0.c0, t0.c0 FROM t0, v0 WHERE ((((((x''))>=((v0.c0)))) NOTNULL)) UNION SELECT DISTINCT t0.c59, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((((x''))>=((v0.c0)))) NOTNULL)))) UNION SELECT DISTINCT t0.c59, v0.c0, t0.c0 FROM t0, v0 WHERE ((((((((x''))>=((v0.c0)))) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c59, v0.c0, t0.c0 FROM t0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (CHAR(vt0.c0)) AND (v0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) BETWEEN (CHAR(vt0.c0)) AND (v0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0 COLLATE NOCASE) BETWEEN (CHAR(vt0.c0)) AND (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((COUNT(v0.c0)) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((COUNT(v0.c0)) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((COUNT(v0.c0)) NOTNULL))) ISNULL);
SELECT TOTAL((((t0.c59)IS(t0.c59)) IN ())) FROM v0, t0, vt0;
SELECT ALL t0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 WHERE (((((((((CASE NULL  WHEN t0.c0 THEN NULL END)OR(((((vt0.c0)OR(t0.c59)))AND(t0.c0)))))AND(t0.c59)))AND('')))OR(t0.c59 COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (((((((((CASE NULL  WHEN t0.c0 THEN NULL END)OR(((((vt0.c0)OR(t0.c59)))AND(t0.c0)))))AND(t0.c59)))AND('')))OR(t0.c59 COLLATE NOCASE))))) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE (((((((((((CASE NULL  WHEN t0.c0 THEN NULL END)OR(((((vt0.c0)OR(t0.c59)))AND(t0.c0)))))AND(t0.c59)))AND('')))OR(t0.c59 COLLATE NOCASE))) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((vt0.c0)AND(v0.c0)))OR(v0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((((vt0.c0)AND(v0.c0)))OR(v0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((vt0.c0)AND(v0.c0)))OR(v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN v0.c0 THEN t0.c59 END) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c59)))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON ((((t0.c0)+(t0.c0))) ISNULL) GROUP BY t0.c0;
SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0;
SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0 HAVING LOWER(GROUP_CONCAT(vt0.c0) COLLATE BINARY) UNION ALL SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0 HAVING (NOT (LOWER(GROUP_CONCAT(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0 HAVING ((LOWER(GROUP_CONCAT(vt0.c0) COLLATE BINARY)) ISNULL);
SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0;
SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0 HAVING LOWER(GROUP_CONCAT(vt0.c0) COLLATE BINARY) UNION ALL SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0 HAVING (NOT (LOWER(GROUP_CONCAT(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0 HAVING ((LOWER(GROUP_CONCAT(vt0.c0) COLLATE BINARY)) ISNULL);
SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((~ (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((~ (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c59, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0) IS FALSE))GLOB(((((t0.c59)AND(vt0.c0)))OR(v0.c0)))) LEFT OUTER JOIN t0 ON (t0.c59 IN ()) COLLATE RTRIM;
SELECT DISTINCT t0.c59, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0) IS FALSE))GLOB(((((t0.c59)AND(vt0.c0)))OR(v0.c0)))) LEFT OUTER JOIN t0 ON (t0.c59 IN ()) COLLATE RTRIM WHERE (NULL) UNION SELECT DISTINCT t0.c59, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0) IS FALSE))GLOB(((((t0.c59)AND(vt0.c0)))OR(v0.c0)))) LEFT OUTER JOIN t0 ON (t0.c59 IN ()) COLLATE RTRIM WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c59, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0) IS FALSE))GLOB(((((t0.c59)AND(vt0.c0)))OR(v0.c0)))) LEFT OUTER JOIN t0 ON (t0.c59 IN ()) COLLATE RTRIM WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c59, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0) IS FALSE))GLOB(((((t0.c59)AND(vt0.c0)))OR(v0.c0)))) LEFT OUTER JOIN t0 ON (t0.c59 IN ()) COLLATE RTRIM;
SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 WHERE (((((v0.c0)OR(LIKELIHOOD(t0.c0, 0.2896808353872242))))OR(CAST(v0.c0 AS TEXT)))) GROUP BY t0.c0, v0.c0, t0.c59 UNION SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 WHERE ((NOT (((((v0.c0)OR(LIKELIHOOD(t0.c0, 0.2896808353872242))))OR(CAST(v0.c0 AS TEXT)))))) GROUP BY t0.c0, v0.c0, t0.c59 UNION SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 WHERE (((((((v0.c0)OR(LIKELIHOOD(t0.c0, 0.2896808353872242))))OR(CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c59;
SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((+ (v0.c0)))AND(((v0.c0) NOT BETWEEN (GROUP_CONCAT(x'')) AND (COUNT(*))))))OR(((((COUNT(v0.c0))OR(TOTAL(v0.c0))))AND(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((+ (v0.c0)))AND(((v0.c0) NOT BETWEEN (GROUP_CONCAT(x'')) AND (COUNT(*))))))OR(((((COUNT(v0.c0))OR(TOTAL(v0.c0))))AND(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((+ (v0.c0)))AND(((v0.c0) NOT BETWEEN (GROUP_CONCAT(x'')) AND (COUNT(*))))))OR(((((COUNT(v0.c0))OR(TOTAL(v0.c0))))AND(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((+ (v0.c0)))AND(((v0.c0) NOT BETWEEN (GROUP_CONCAT(x'')) AND (COUNT(*))))))OR(((((COUNT(v0.c0))OR(TOTAL(v0.c0))))AND(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((+ (v0.c0)))AND(((v0.c0) NOT BETWEEN (GROUP_CONCAT(x'')) AND (COUNT(*))))))OR(((((COUNT(v0.c0))OR(TOTAL(v0.c0))))AND(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((+ (v0.c0)))AND(((v0.c0) NOT BETWEEN (GROUP_CONCAT(x'')) AND (COUNT(*))))))OR(((((COUNT(v0.c0))OR(TOTAL(v0.c0))))AND(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (NULL)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (NULL)) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((~ (NULL)) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE TIME(v0.c0, vt0.c0, v0.c0)  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0)GLOB(v0.c0)) WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN ((v0.c0)<=(v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS TEXT) ELSE (((vt0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0))) END) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CASE TIME(v0.c0, vt0.c0, v0.c0)  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0)GLOB(v0.c0)) WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN ((v0.c0)<=(v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS TEXT) ELSE (((vt0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0))) END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CASE TIME(v0.c0, vt0.c0, v0.c0)  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0)GLOB(v0.c0)) WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN ((v0.c0)<=(v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS TEXT) ELSE (((vt0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0))) END) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 WHERE (((((CAST(v0.c0 AS TEXT))AND(((v0.c0)<(t0.c0)))))OR(('16412918' IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT (((((CAST(v0.c0 AS TEXT))AND(((v0.c0)<(t0.c0)))))OR(('16412918' IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE (((((((CAST(v0.c0 AS TEXT))AND(((v0.c0)<(t0.c0)))))OR(('16412918' IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0 HAVING (COUNT(TOTAL(COUNT(*))) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0 HAVING (NOT ((COUNT(TOTAL(COUNT(*))) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0 HAVING (((COUNT(TOTAL(COUNT(*))) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0 HAVING (COUNT(TOTAL(COUNT(*))) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0 HAVING (NOT ((COUNT(TOTAL(COUNT(*))) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0 HAVING (((COUNT(TOTAL(COUNT(*))) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (((CAST(t0.c59 AS INTEGER), (NOT (v0.c0)), TYPEOF(vt0.c0)))>(((((t0.c59)) BETWEEN ((t0.c59)) AND ((vt0.c0))), t0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY t0.c0;
SELECT t0.c59, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0;
SELECT t0.c59, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (((('GT'))<>((((vt0.c0) BETWEEN (t0.c59) AND (t0.c0)))))) UNION ALL SELECT ALL t0.c59, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE ((NOT (((('GT'))!=((((vt0.c0) BETWEEN (t0.c59) AND (t0.c0)))))))) UNION ALL SELECT ALL t0.c59, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (((((('GT'))!=((((vt0.c0) BETWEEN (t0.c59) AND (t0.c0)))))) ISNULL));
SELECT t0.c59, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (t0.c59) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (t0.c59))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((t0.c59) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, t0, v0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, t0, v0 WHERE (CASE ((t0.c59) NOT BETWEEN (v0.c0) AND (x''))  WHEN ((((t0.c0)AND(t0.c59)))AND(t0.c59)) THEN t0.c59 END) GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 UNION SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, t0, v0 WHERE ((NOT (CASE ((t0.c59) NOT BETWEEN (v0.c0) AND (x''))  WHEN ((((t0.c0)AND(t0.c59)))AND(t0.c59)) THEN t0.c59 END))) GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 UNION SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, t0, v0 WHERE (((CASE ((t0.c59) NOT BETWEEN (v0.c0) AND (x''))  WHEN ((((t0.c0)AND(t0.c59)))AND(t0.c59)) THEN t0.c59 END) ISNULL)) GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, t0, v0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT ALL vt0.c0, t0.c59, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c59, t0.c0;
SELECT ALL vt0.c0, t0.c59, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c59, t0.c0 HAVING ((AVG(SUM(AVG(SUM(t0.c0)))) COLLATE BINARY) NOT BETWEEN ((t0.c59 IN (AVG(vt0.c0)))) AND (CAST(vt0.c0 AS TEXT))) UNION ALL SELECT ALL vt0.c0, t0.c59, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c59, t0.c0 HAVING (NOT (((AVG(SUM(AVG(SUM(t0.c0)))) COLLATE BINARY) NOT BETWEEN ((t0.c59 IN (AVG(vt0.c0)))) AND (CAST(vt0.c0 AS TEXT))))) UNION ALL SELECT ALL vt0.c0, t0.c59, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c59, t0.c0 HAVING ((((AVG(SUM(AVG(SUM(t0.c0)))) COLLATE BINARY) NOT BETWEEN ((t0.c59 IN (AVG(vt0.c0)))) AND (CAST(vt0.c0 AS TEXT)))) ISNULL);
SELECT ALL v0.c0 FROM t0, v0;
SELECT ALL v0.c0 FROM t0, v0 WHERE (CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) UNION ALL SELECT v0.c0 FROM t0, v0 WHERE ((NOT (CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 WHERE (((CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ISNULL));
SELECT ALL v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0 WHERE (ABS(DISTINCT NULL)) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((NOT (ABS(DISTINCT NULL)))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE (((ABS(DISTINCT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT t0.c0, t0.c59 FROM t0, vt0 GROUP BY t0.c0, t0.c59;
SELECT t0.c0, t0.c59 FROM t0, vt0 WHERE ((- ((t0.c59 IN ())))) GROUP BY t0.c0, t0.c59 UNION SELECT ALL t0.c0, t0.c59 FROM t0, vt0 WHERE ((NOT ((- ((t0.c59 IN ())))))) GROUP BY t0.c0, t0.c59 UNION SELECT t0.c0, t0.c59 FROM t0, vt0 WHERE ((((- ((t0.c59 IN ())))) ISNULL)) GROUP BY t0.c0, t0.c59;
SELECT t0.c0, t0.c59 FROM t0, vt0 GROUP BY t0.c0, t0.c59;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((((t0.c59))>((v0.c0))) IN (((0.20502785428215975)||(v0.c0))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((t0.c59))>((v0.c0))) IN (((0.20502785428215975)||(v0.c0))))))) UNION ALL SELECT * FROM t0, v0 WHERE (((((((t0.c59))>((v0.c0))) IN (((0.20502785428215975)||(v0.c0))))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (((t0.c59))!=((t0.c59))) THEN t0.c59 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN (((t0.c59))!=((t0.c59))) THEN t0.c59 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (((t0.c59))!=((t0.c59))) THEN t0.c59 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0 COLLATE BINARY)AND(x'')))OR(NULL)))OR(UNLIKELY(DISTINCT v0.c0))))OR((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c0 COLLATE BINARY)AND(x'')))OR(NULL)))OR(UNLIKELY(DISTINCT v0.c0))))OR((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0 COLLATE BINARY)AND(x'')))OR(NULL)))OR(UNLIKELY(DISTINCT v0.c0))))OR((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59;
SELECT ALL t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59 HAVING SUM(TOTAL(t0.c0)) UNION ALL SELECT ALL t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59 HAVING (NOT (SUM(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59 HAVING ((SUM(TOTAL(t0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0))<>((vt0.c0)))))<=(((+ (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0))!=((vt0.c0)))))<=(((+ (vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0))!=((vt0.c0)))))<=(((+ (vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, t0.c59 FROM t0, vt0 INDEXED BY i28;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT ((~ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT ((~ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c59, v0.c0 FROM t0, v0 GROUP BY t0.c59, v0.c0;
SELECT ALL t0.c59, v0.c0 FROM t0, v0 GROUP BY t0.c59, v0.c0 HAVING AVG(((TOTAL(COUNT(SUM(t0.c59))))||(t0.c59))) UNION ALL SELECT t0.c59, v0.c0 FROM t0, v0 GROUP BY t0.c59, v0.c0 HAVING (NOT (AVG(((TOTAL(COUNT(SUM(t0.c59))))||(t0.c59))))) UNION ALL SELECT ALL t0.c59, v0.c0 FROM t0, v0 GROUP BY t0.c59, v0.c0 HAVING ((AVG(((TOTAL(COUNT(SUM(t0.c59))))||(t0.c59)))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (CAST(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) AS TEXT)) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (CAST(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) AS TEXT)))) UNION ALL SELECT * FROM vt0, v0 WHERE (((CAST(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (IFNULL(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN (v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (IFNULL(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((IFNULL(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN (v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((~ (vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((~ (vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0;
SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING MAX(TOTAL(TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING (NOT (MAX(TOTAL(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING ((MAX(TOTAL(TOTAL(v0.c0)))) ISNULL);
SELECT ALL * FROM t0, vt0, v0;
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((((((((((((vt0.c0)) BETWEEN ((x'30be')) AND ((t0.c59))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR(COALESCE(t0.c0, t0.c0))))OR(CHAR(0.8572444111615615))))OR(((vt0.c0) NOTNULL))))AND(SQLITE_VERSION())))OR(((v0.c0) NOTNULL)))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE ((NOT ((((((((((((((((vt0.c0)) BETWEEN ((x'30be')) AND ((t0.c59))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR(COALESCE(t0.c0, t0.c0))))OR(CHAR(0.8572444111615615))))OR(((vt0.c0) NOTNULL))))AND(SQLITE_VERSION())))OR(((v0.c0) NOTNULL)))))) UNION ALL SELECT * FROM t0, vt0, v0 WHERE ((((((((((((((((((vt0.c0)) BETWEEN ((x'30be')) AND ((t0.c59))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR(COALESCE(t0.c0, t0.c0))))OR(CHAR(0.8572444111615615))))OR(((vt0.c0) NOTNULL))))AND(SQLITE_VERSION())))OR(((v0.c0) NOTNULL)))) ISNULL));
SELECT ALL * FROM t0, vt0, v0;
SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((t0.c59) BETWEEN (t0.c0) AND (v0.c0))) IS FALSE);
SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((t0.c59) BETWEEN (t0.c0) AND (v0.c0))) IS FALSE) WHERE (((((CASE WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c59 WHEN t0.c0 THEN '㕇z/' END)OR(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (t0.c59) AND (t0.c59))))) UNION SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((t0.c59) BETWEEN (t0.c0) AND (v0.c0))) IS FALSE) WHERE ((NOT (((((CASE WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c59 WHEN t0.c0 THEN '㕇z/' END)OR(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (t0.c59) AND (t0.c59))))))) UNION SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((t0.c59) BETWEEN (t0.c0) AND (v0.c0))) IS FALSE) WHERE (((((((CASE WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c59 WHEN t0.c0 THEN '㕇z/' END)OR(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (t0.c59) AND (t0.c59))))) ISNULL));
SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((t0.c59) BETWEEN (t0.c0) AND (v0.c0))) IS FALSE);
SELECT vt0.c0, t0.c59, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c59, t0.c0;
SELECT ALL vt0.c0, t0.c59, t0.c0 FROM t0, vt0 WHERE (((0.352846109106117) BETWEEN ((- (''))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))))) GROUP BY vt0.c0, t0.c59, t0.c0 UNION SELECT ALL vt0.c0, t0.c59, t0.c0 FROM t0, vt0 WHERE ((NOT (((0.352846109106117) BETWEEN ((- (''))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))))))) GROUP BY vt0.c0, t0.c59, t0.c0 UNION SELECT ALL vt0.c0, t0.c59, t0.c0 FROM t0, vt0 WHERE (((((0.352846109106117) BETWEEN ((- (''))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY vt0.c0, t0.c59, t0.c0;
SELECT vt0.c0, t0.c59, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c59, t0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING MAX(MAX(v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(MAX(v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(MAX(v0.c0))) ISNULL);
SELECT MAX(vt0.c0) FROM v0, vt0, t0 ORDER BY ((vt0.c0)|('')) COLLATE BINARY DESC;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (CAST(t0.c59 COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (CAST(t0.c59 COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((CAST(t0.c59 COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0 IN (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN '-1980936218' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-94197414' THEN v0.c0 END, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))!=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN '-1980936218' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-94197414' THEN v0.c0 END, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 IN (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN '-1980936218' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-94197414' THEN v0.c0 END, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING SUM(COUNT(t0.c59)) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING (NOT (SUM(COUNT(t0.c59)))) UNION ALL SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING ((SUM(COUNT(t0.c59))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((((((0.5803253382965158) ISNULL))AND(CAST(t0.c59 AS INTEGER))))OR((+ (t0.c0))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((((0.5803253382965158) ISNULL))AND(CAST(t0.c59 AS INTEGER))))OR((+ (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (((((((((0.5803253382965158) ISNULL))AND(CAST(t0.c59 AS INTEGER))))OR((+ (t0.c0))))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM v0 INNER JOIN t0 ON ((((((((((((t0.c0)OR(t0.c59)))AND(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(((v0.c0) NOT BETWEEN (t0.c59) AND (t0.c59)))))AND(CASE WHEN NULL THEN t0.c0 ELSE t0.c59 END));
SELECT DISTINCT t0.c0 FROM v0 INNER JOIN t0 ON ((((((((((((t0.c0)OR(t0.c59)))AND(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(((v0.c0) NOT BETWEEN (t0.c59) AND (t0.c59)))))AND(CASE WHEN NULL THEN t0.c0 ELSE t0.c59 END)) WHERE (x'acb6' COLLATE NOCASE) UNION SELECT DISTINCT t0.c0 FROM v0 INNER JOIN t0 ON ((((((((((((t0.c0)OR(t0.c59)))AND(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(((v0.c0) NOT BETWEEN (t0.c59) AND (t0.c59)))))AND(CASE WHEN NULL THEN t0.c0 ELSE t0.c59 END)) WHERE ((NOT (x'acb6' COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0 FROM v0 INNER JOIN t0 ON ((((((((((((t0.c0)OR(t0.c59)))AND(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(((v0.c0) NOT BETWEEN (t0.c59) AND (t0.c59)))))AND(CASE WHEN NULL THEN t0.c0 ELSE t0.c59 END)) WHERE (((x'acb6' COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0 FROM v0 INNER JOIN t0 ON ((((((((((((t0.c0)OR(t0.c59)))AND(t0.c0)))OR(v0.c0)))AND(t0.c0)))OR(((v0.c0) NOT BETWEEN (t0.c59) AND (t0.c59)))))AND(CASE WHEN NULL THEN t0.c0 ELSE t0.c59 END));
SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (- (((vt0.c0) NOTNULL))) CROSS JOIN v0 ON ((((v0.c0)<(t0.c59))) BETWEEN (json_array_length(t0.c59)) AND (((NULL)<<(t0.c59)))) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (- (((vt0.c0) NOTNULL))) CROSS JOIN v0 ON ((((v0.c0)<(t0.c59))) BETWEEN (json_array_length(t0.c59)) AND (((NULL)<<(t0.c59)))) WHERE (((((((((((vt0.c0)OR(t0.c59)))OR(v0.c0)))AND(t0.c0)))OR(t0.c0))) IS FALSE)) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (- (((vt0.c0) NOTNULL))) CROSS JOIN v0 ON ((((v0.c0)<(t0.c59))) BETWEEN (json_array_length(t0.c59)) AND (((NULL)<<(t0.c59)))) WHERE ((NOT (((((((((((vt0.c0)OR(t0.c59)))OR(v0.c0)))AND(t0.c0)))OR(t0.c0))) IS FALSE)))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (- (((vt0.c0) NOTNULL))) CROSS JOIN v0 ON ((((v0.c0)<(t0.c59))) BETWEEN (json_array_length(t0.c59)) AND (((NULL)<<(t0.c59)))) WHERE (((((((((((((vt0.c0)OR(t0.c59)))OR(v0.c0)))AND(t0.c0)))OR(t0.c0))) IS FALSE)) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (- (((vt0.c0) NOTNULL))) CROSS JOIN v0 ON ((((v0.c0)<(t0.c59))) BETWEEN (json_array_length(t0.c59)) AND (((NULL)<<(t0.c59)))) GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING t0.c0 UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING t0.c0 UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c59, vt0.c0, t0.c0 FROM t0, vt0;
SELECT t0.c59, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((CASE WHEN t0.c59 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT ALL t0.c59, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((CASE WHEN t0.c59 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))))) UNION ALL SELECT ALL t0.c59, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((CASE WHEN t0.c59 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL));
SELECT ALL t0.c59, vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c59 THEN vt0.c0 ELSE vt0.c0 END))=(((vt0.c0 IN ()))));
SELECT DISTINCT vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c59 THEN vt0.c0 ELSE vt0.c0 END))=(((vt0.c0 IN ())))) WHERE (((t0.c59) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c59 THEN vt0.c0 ELSE vt0.c0 END))==(((vt0.c0 IN ())))) WHERE ((NOT (((t0.c59) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c59 THEN vt0.c0 ELSE vt0.c0 END))==(((vt0.c0 IN ())))) WHERE (((((t0.c59) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c59 THEN vt0.c0 ELSE vt0.c0 END))=(((vt0.c0 IN ()))));
SELECT t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c59 AS REAL) THEN (((v0.c0))!=((t0.c59))) ELSE (((t0.c0, t0.c59, t0.c0)) NOT BETWEEN ((v0.c0, t0.c59, t0.c0)) AND ((t0.c0, t0.c59, t0.c0))) END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c59 AS REAL) THEN (((v0.c0))!=((t0.c59))) ELSE (((t0.c0, t0.c59, t0.c0)) NOT BETWEEN ((v0.c0, t0.c59, t0.c0)) AND ((t0.c0, t0.c59, t0.c0))) END WHERE ('/edjs&J') GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c59 AS REAL) THEN (((v0.c0))!=((t0.c59))) ELSE (((t0.c0, t0.c59, t0.c0)) NOT BETWEEN ((v0.c0, t0.c59, t0.c0)) AND ((t0.c0, t0.c59, t0.c0))) END WHERE ((NOT ('/edjs&J'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c59 AS REAL) THEN (((v0.c0))!=((t0.c59))) ELSE (((t0.c0, t0.c59, t0.c0)) NOT BETWEEN ((v0.c0, t0.c59, t0.c0)) AND ((t0.c0, t0.c59, t0.c0))) END WHERE ((('/edjs&J') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c59 AS REAL) THEN (((v0.c0))!=((t0.c59))) ELSE (((t0.c0, t0.c59, t0.c0)) NOT BETWEEN ((v0.c0, t0.c59, t0.c0)) AND ((t0.c0, t0.c59, t0.c0))) END GROUP BY t0.c0;
SELECT ALL t0.c59 FROM v0, t0 GROUP BY t0.c59;
SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING GROUP_CONCAT('') UNION ALL SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING (NOT (GROUP_CONCAT(''))) UNION ALL SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING ((GROUP_CONCAT('')) ISNULL);
SELECT ALL t0.c59 FROM v0, t0 GROUP BY t0.c59;
SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING GROUP_CONCAT('') UNION ALL SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING (NOT (GROUP_CONCAT(''))) UNION ALL SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING ((GROUP_CONCAT('')) ISNULL);
SELECT ALL t0.c59 FROM v0, t0 GROUP BY t0.c59;
SELECT * FROM t0 FULL OUTER JOIN v0 ON (((((((1.115390652E9)) NOT BETWEEN (('䏜')) AND ((t0.c0))))AND(t0.c0)))OR(CAST('287936099' AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((t0.c0)IS(vt0.c0))) NOT BETWEEN (NULL) AND (((t0.c0)<<(t0.c0))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (((((((1.115390652E9)) NOT BETWEEN (('䏜')) AND ((t0.c0))))AND(t0.c0)))OR(CAST('287936099' AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((t0.c0)IS(vt0.c0))) NOT BETWEEN (NULL) AND (((t0.c0)<<(t0.c0)))) WHERE ((NOT (NULLIF(DISTINCT v0.c0, t0.c59)))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (((((((1.115390652E9)) NOT BETWEEN (('䏜')) AND ((t0.c0))))AND(t0.c0)))OR(CAST('287936099' AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((t0.c0)IS(vt0.c0))) NOT BETWEEN (NULL) AND (((t0.c0)<<(t0.c0)))) WHERE ((NOT ((NOT (NULLIF(DISTINCT v0.c0, t0.c59)))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN v0 ON (((((((1.115390652E9)) NOT BETWEEN (('䏜')) AND ((t0.c0))))AND(t0.c0)))OR(CAST('287936099' AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((t0.c0)IS(vt0.c0))) NOT BETWEEN (NULL) AND (((t0.c0)<<(t0.c0)))) WHERE ((((NOT (NULLIF(DISTINCT v0.c0, t0.c59)))) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (((((((1.115390652E9)) NOT BETWEEN (('䏜')) AND ((t0.c0))))AND(t0.c0)))OR(CAST('287936099' AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((t0.c0)IS(vt0.c0))) NOT BETWEEN (NULL) AND (((t0.c0)<<(t0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0 INNER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))==((t0.c0 IN ('-1220709470')))) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0 INNER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))==((t0.c0 IN ('-1220709470')))) WHERE ((((+ (v0.c0)))IS NOT(((t0.c59)IS NOT(x'a809'))))) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0 UNION SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0 INNER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))==((t0.c0 IN ('-1220709470')))) WHERE ((NOT ((((+ (v0.c0)))IS NOT(((t0.c59)IS NOT(x'a809'))))))) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0 UNION SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0 INNER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))==((t0.c0 IN ('-1220709470')))) WHERE ((((((+ (v0.c0)))IS NOT(((t0.c59)IS NOT(x'a809'))))) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0 INNER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))==((t0.c0 IN ('-1220709470')))) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING COUNT(CHAR(MAX(MAX(t0.c59)))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (COUNT(CHAR(MAX(MAX(t0.c59)))))) UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((COUNT(CHAR(MAX(MAX(t0.c59))))) ISNULL);
SELECT t0.c0 FROM v0 CROSS JOIN t0 ON ((LIKELY(t0.c59))LIKE(CAST(v0.c0 AS BLOB)));
SELECT ALL t0.c0 FROM v0 CROSS JOIN t0 ON ((LIKELY(t0.c59))LIKE(CAST(v0.c0 AS BLOB))) WHERE (((v0.c0)*(((t0.c59) BETWEEN (t0.c0) AND (v0.c0))))) UNION ALL SELECT t0.c0 FROM v0 CROSS JOIN t0 ON ((LIKELY(t0.c59))LIKE(CAST(v0.c0 AS BLOB))) WHERE ((NOT (((v0.c0)*(((t0.c59) BETWEEN (t0.c0) AND (v0.c0))))))) UNION ALL SELECT t0.c0 FROM v0 CROSS JOIN t0 ON ((LIKELY(t0.c59))LIKE(CAST(v0.c0 AS BLOB))) WHERE (((((v0.c0)*(((t0.c59) BETWEEN (t0.c0) AND (v0.c0))))) ISNULL));
SELECT t0.c0 FROM v0 CROSS JOIN t0 ON ((LIKELY(t0.c59))LIKE(CAST(v0.c0 AS BLOB)));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0;
SELECT ALL t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0;
SELECT ALL t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c59, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c59)))AND(v0.c0)))OR(v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0)>=(t0.c0)))) GROUP BY t0.c59, v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS REAL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS NUMERIC) AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS NUMERIC) AS REAL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)=(vt0.c0)))))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)=(vt0.c0)))))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)=(vt0.c0)))))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(COUNT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(v0.c0))) ISNULL);
SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0;
SELECT ALL t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0 WHERE (((((UNLIKELY(DISTINCT v0.c0))AND(CASE WHEN t0.c0 THEN v0.c0 END)))AND(((v0.c0) ISNULL)))) UNION ALL SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0 WHERE ((NOT (((((UNLIKELY(DISTINCT v0.c0))AND(CASE WHEN t0.c0 THEN v0.c0 END)))AND(((v0.c0) ISNULL)))))) UNION ALL SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0 WHERE (((((((UNLIKELY(DISTINCT v0.c0))AND(CASE WHEN t0.c0 THEN v0.c0 END)))AND(((v0.c0) ISNULL)))) ISNULL));
SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0;
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0, v0 WHERE (0.34975803256924987) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((NOT (0.34975803256924987))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE (((0.34975803256924987) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE)<>(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)!=(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)<>(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE (((((((((((((((((v0.c0)OR(v0.c0)))AND(t0.c59)))OR(v0.c0)))AND(t0.c0)))OR(((t0.c59)-(t0.c59)))))AND(CAST(t0.c59 AS INTEGER))))AND(t0.c0 COLLATE BINARY)))OR(((((t0.c0)OR(t0.c0)))OR(t0.c59))))) UNION SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (((((((((((((((((v0.c0)OR(v0.c0)))AND(t0.c59)))OR(v0.c0)))AND(t0.c0)))OR(((t0.c59)-(t0.c59)))))AND(CAST(t0.c59 AS INTEGER))))AND(t0.c0 COLLATE BINARY)))OR(((((t0.c0)OR(t0.c0)))OR(t0.c59))))))) UNION SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE (((((((((((((((((((v0.c0)OR(v0.c0)))AND(t0.c59)))OR(v0.c0)))AND(t0.c0)))OR(((t0.c59)-(t0.c59)))))AND(CAST(t0.c59 AS INTEGER))))AND(t0.c0 COLLATE BINARY)))OR(((((t0.c0)OR(t0.c0)))OR(t0.c59))))) ISNULL));
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING TOTAL(IFNULL(DISTINCT COUNT(*), t0.c59)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c0, t0.c0 HAVING (NOT (TOTAL(IFNULL(DISTINCT COUNT(*), t0.c59)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((TOTAL(IFNULL(DISTINCT COUNT(*), t0.c59))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((('-1702828354')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c0)))))AND(CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((('-1702828354')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c0)))))AND(CASE vt0.c0  WHEN x'' THEN vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((((('-1702828354')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c0)))))AND(CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(t0.c0)))<=(((t0.c59)AND(NULL))));
SELECT DISTINCT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(t0.c0)))<=(((t0.c59)AND(NULL)))) WHERE (((t0.c0)|(NULL))) UNION SELECT DISTINCT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(t0.c0)))<=(((t0.c59)AND(NULL)))) WHERE ((NOT (((t0.c0)|(NULL))))) UNION SELECT DISTINCT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(t0.c0)))<=(((t0.c59)AND(NULL)))) WHERE (((((t0.c0)|(NULL))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(t0.c0)))<=(((t0.c59)AND(NULL))));
SELECT ALL t0.c59 FROM v0, t0, vt0 GROUP BY t0.c59;
SELECT t0.c59 FROM v0, t0, vt0 WHERE (((x'')AND(highlight(vt0.c0, t0.c0, vt0.c0, t0.c0)))) GROUP BY t0.c59 UNION SELECT t0.c59 FROM v0, t0, vt0 WHERE ((NOT (((x'')AND(highlight(vt0.c0, t0.c0, vt0.c0, t0.c0)))))) GROUP BY t0.c59 UNION SELECT ALL t0.c59 FROM v0, t0, vt0 WHERE (((((x'')AND(highlight(vt0.c0, t0.c0, vt0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM v0, t0, vt0 GROUP BY t0.c59;
SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 HAVING ((((t0.c59)AND(NULL))) BETWEEN (AVG(t0.c59)) AND (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 HAVING (NOT (((((t0.c59)AND(NULL))) BETWEEN (AVG(t0.c59)) AND (GROUP_CONCAT(t0.c0))))) UNION ALL SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 HAVING ((((((t0.c59)AND(NULL))) BETWEEN (AVG(t0.c59)) AND (GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 HAVING ((((t0.c59)AND(NULL))) BETWEEN (AVG(t0.c59)) AND (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 HAVING (NOT (((((t0.c59)AND(NULL))) BETWEEN (AVG(t0.c59)) AND (GROUP_CONCAT(t0.c0))))) UNION ALL SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 HAVING ((((((t0.c59)AND(NULL))) BETWEEN (AVG(t0.c59)) AND (GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((((((((vt0.c0)OR(x'')))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((((((((vt0.c0)OR(x'')))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE (((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((((((((vt0.c0)OR(x'')))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((- (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(((v0.c0)+(v0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((- (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(((v0.c0)+(v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((- (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(((v0.c0)+(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT t0.c59, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, v0.c0;
SELECT t0.c59, v0.c0 FROM v0, vt0, t0 WHERE ('-1570605817') GROUP BY t0.c59, v0.c0 UNION SELECT ALL t0.c59, v0.c0 FROM v0, vt0, t0 WHERE ((NOT ('-1570605817'))) GROUP BY t0.c59, v0.c0 UNION SELECT ALL t0.c59, v0.c0 FROM v0, vt0, t0 WHERE ((('-1570605817') ISNULL)) GROUP BY t0.c59, v0.c0;
SELECT t0.c59, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c59, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(SUM(SUM(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM(SUM(AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(SUM(AVG(v0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c59) IS TRUE))>(t0.c59 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((t0.c59) IS TRUE))>(t0.c59 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((t0.c59) IS TRUE))>(t0.c59 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('-1481206365') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('-1481206365'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('-1481206365') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c59, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c59, t0.c0, vt0.c0;
SELECT ALL t0.c59, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c59, t0.c0, vt0.c0 HAVING ((CASE COUNT(t0.c59)  WHEN 0.6388227945218813 THEN COUNT(MAX(t0.c0)) WHEN t0.c0 THEN t0.c59 WHEN 0.3445812454393812 THEN COUNT(COUNT(t0.c59)) END)<<(COUNT(*))) UNION ALL SELECT ALL t0.c59, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c59, t0.c0, vt0.c0 HAVING (NOT (((CASE COUNT(t0.c59)  WHEN 0.6388227945218813 THEN COUNT(MAX(t0.c0)) WHEN t0.c0 THEN t0.c59 WHEN 0.3445812454393812 THEN COUNT(COUNT(t0.c59)) END)<<(COUNT(*))))) UNION ALL SELECT t0.c59, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c59, t0.c0, vt0.c0 HAVING ((((CASE COUNT(t0.c59)  WHEN 0.6388227945218813 THEN COUNT(MAX(t0.c0)) WHEN t0.c0 THEN t0.c59 WHEN 0.3445812454393812 THEN COUNT(COUNT(t0.c59)) END)<<(COUNT(*)))) ISNULL);
SELECT ALL TOTAL(((((((((((vt0.c0) ISNULL))OR(vt0.c0 COLLATE RTRIM)))OR((vt0.c0 IN ()))))OR((- (vt0.c0)))))AND(vt0.c0))) FROM vt0 ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL t0.c59 FROM t0, v0, vt0;
SELECT ALL t0.c59 FROM t0, v0, vt0 WHERE (vt0.c0) UNION ALL SELECT t0.c59 FROM t0, v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT t0.c59 FROM t0, v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL t0.c59 FROM t0, v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0, v0 WHERE (((((((t0.c59)AND(v0.c0)))OR(t0.c0))) BETWEEN (CASE WHEN x'e17e' THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) GROUP BY t0.c59 UNION SELECT t0.c59 FROM t0, v0 WHERE ((NOT (((((((t0.c59)AND(v0.c0)))OR(t0.c0))) BETWEEN (CASE WHEN x'e17e' THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))))) GROUP BY t0.c59 UNION SELECT ALL t0.c59 FROM t0, v0 WHERE (((((((((t0.c59)AND(v0.c0)))OR(t0.c0))) BETWEEN (CASE WHEN x'e17e' THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c59;
SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING TOTAL(CAST(COUNT(*) AS TEXT)) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (TOTAL(CAST(COUNT(*) AS TEXT)))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((TOTAL(CAST(COUNT(*) AS TEXT))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (x'') AND ((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) BETWEEN (x'') AND ((v0.c0 IN ())))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE) BETWEEN (x'') AND ((v0.c0 IN ())))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT t0.c59 FROM vt0, t0;
SELECT DISTINCT t0.c59 FROM vt0, t0 WHERE (CAST(CASE t0.c59  WHEN t0.c59 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC)) UNION SELECT DISTINCT t0.c59 FROM vt0, t0 WHERE ((NOT (CAST(CASE t0.c59  WHEN t0.c59 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT t0.c59 FROM vt0, t0 WHERE (((CAST(CASE t0.c59  WHEN t0.c59 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c59 FROM vt0, t0;
SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0;
SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON NULL WHERE ('^az)D.{Q') GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0 UNION SELECT ALL t0.c59, v0.c0, vt0.c0, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON NULL WHERE ((NOT ('^az)D.{Q'))) GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0 UNION SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON NULL WHERE ((('^az)D.{Q') ISNULL)) GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0;
SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0;
SELECT ALL vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0, t0.c0;
SELECT vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, v0.c0, t0.c0 HAVING (NOT ((((vt0.c0)) BETWEEN ((TOTAL(t0.c0))) AND ((t0.c0))))) UNION ALL SELECT vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, v0.c0, t0.c0 HAVING (NOT ((NOT ((((vt0.c0)) BETWEEN ((TOTAL(t0.c0))) AND ((t0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, v0.c0, t0.c0 HAVING (((NOT ((((vt0.c0)) BETWEEN ((TOTAL(t0.c0))) AND ((t0.c0)))))) ISNULL);
SELECT ALL vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0, t0.c0;
SELECT vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, v0.c0, t0.c0 HAVING (NOT ((((vt0.c0)) BETWEEN ((TOTAL(t0.c0))) AND ((t0.c0))))) UNION ALL SELECT vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, v0.c0, t0.c0 HAVING (NOT ((NOT ((((vt0.c0)) BETWEEN ((TOTAL(t0.c0))) AND ((t0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, v0.c0, t0.c0 HAVING (((NOT ((((vt0.c0)) BETWEEN ((TOTAL(t0.c0))) AND ((t0.c0)))))) ISNULL);
SELECT ALL vt0.c0, v0.c0, t0.c0 FROM t0, vt0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0, t0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(NULL)))) AND (((+ (vt0.c0)), ((vt0.c0)>(vt0.c0)), (vt0.c0 IN ()))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(NULL)))) AND (((+ (vt0.c0)), ((vt0.c0)>(vt0.c0)), (vt0.c0 IN ()))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(NULL)))) AND (((+ (vt0.c0)), ((vt0.c0)>(vt0.c0)), (vt0.c0 IN ()))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0, t0.c59 FROM v0 INNER JOIN t0 ON t0.c59 INNER JOIN vt0 ON ((((((t0.c0) IS FALSE))AND(((v0.c0)|(v0.c0)))))AND(((t0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0, t0.c59;
SELECT vt0.c0, v0.c0, t0.c59 FROM v0 INNER JOIN t0 ON t0.c59 INNER JOIN vt0 ON ((((((t0.c0) IS FALSE))AND(((v0.c0)|(v0.c0)))))AND(((t0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0, t0.c59 HAVING COUNT(GROUP_CONCAT(MAX(t0.c59))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c59 FROM v0 INNER JOIN t0 ON t0.c59 INNER JOIN vt0 ON ((((((t0.c0) IS FALSE))AND(((v0.c0)|(v0.c0)))))AND(((t0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0, t0.c59 HAVING (NOT (COUNT(GROUP_CONCAT(MAX(t0.c59))))) UNION ALL SELECT vt0.c0, v0.c0, t0.c59 FROM v0 INNER JOIN t0 ON t0.c59 INNER JOIN vt0 ON ((((((t0.c0) IS FALSE))AND(((v0.c0)|(v0.c0)))))AND(((t0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0, t0.c59 HAVING ((COUNT(GROUP_CONCAT(MAX(t0.c59)))) ISNULL);
SELECT t0.c0 FROM t0 NATURAL JOIN vt0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (CASE (~ (t0.c59))  WHEN ((t0.c59) NOT BETWEEN (t0.c0) AND ('1879514556')) THEN ((t0.c0)+(t0.c0)) END) UNION ALL SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (CASE (~ (t0.c59))  WHEN ((t0.c59) NOT BETWEEN (t0.c0) AND ('1879514556')) THEN ((t0.c0)+(t0.c0)) END))) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((CASE (~ (t0.c59))  WHEN ((t0.c59) NOT BETWEEN (t0.c0) AND ('1879514556')) THEN ((t0.c0)+(t0.c0)) END) ISNULL));
SELECT t0.c0 FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((((t0.c0)/(vt0.c0))))<=(((+ (vt0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((((t0.c0)/(vt0.c0))))<=(((+ (vt0.c0)))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((((t0.c0)/(vt0.c0))))<=(((+ (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM v0, t0 CROSS JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c59 THEN v0.c0 WHEN t0.c59 THEN v0.c0 ELSE t0.c0 END AS INTEGER) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, t0 CROSS JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c59 THEN v0.c0 WHEN t0.c59 THEN v0.c0 ELSE t0.c0 END AS INTEGER) WHERE (CASE t0.c0  WHEN t0.c59 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, t0 CROSS JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c59 THEN v0.c0 WHEN t0.c59 THEN v0.c0 ELSE t0.c0 END AS INTEGER) WHERE ((NOT (CASE t0.c0  WHEN t0.c59 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, t0 CROSS JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c59 THEN v0.c0 WHEN t0.c59 THEN v0.c0 ELSE t0.c0 END AS INTEGER) WHERE (((CASE t0.c0  WHEN t0.c59 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, t0 CROSS JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c59 THEN v0.c0 WHEN t0.c59 THEN v0.c0 ELSE t0.c0 END AS INTEGER) GROUP BY vt0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING GROUP_CONCAT(t0.c0) COLLATE BINARY UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0) COLLATE BINARY)) UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((GROUP_CONCAT(t0.c0) COLLATE BINARY) ISNULL);
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING GROUP_CONCAT(t0.c0) COLLATE BINARY UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0) COLLATE BINARY)) UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((GROUP_CONCAT(t0.c0) COLLATE BINARY) ISNULL);
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL * FROM vt0, t0 NOT INDEXED;
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0) ISNULL))>=((NOT (t0.c59))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((t0.c0) ISNULL))>=((NOT (t0.c59))))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((((t0.c0) ISNULL))>=((NOT (t0.c59))))) ISNULL));
SELECT ALL * FROM vt0, t0 NOT INDEXED;
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (((((t0.c59)>>(v0.c0)))LIKE(t0.c59 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((NOT (((((t0.c59)>>(v0.c0)))LIKE(t0.c59 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (((((((t0.c59)>>(v0.c0)))LIKE(t0.c59 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0))) IS FALSE) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0))) IS FALSE) GROUP BY v0.c0, vt0.c0 HAVING SUM(TOTAL(MIN(GROUP_CONCAT(COUNT(vt0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0))) IS FALSE) GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(TOTAL(MIN(GROUP_CONCAT(COUNT(vt0.c0))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0))) IS FALSE) GROUP BY v0.c0, vt0.c0 HAVING ((SUM(TOTAL(MIN(GROUP_CONCAT(COUNT(vt0.c0)))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE ((((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c59 FROM t0;
SELECT DISTINCT t0.c59 FROM t0 WHERE ((~ (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c0))))) UNION SELECT DISTINCT t0.c59 FROM t0 WHERE ((NOT ((~ (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c59 FROM t0 WHERE ((((~ (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c59 FROM t0;
SELECT ALL vt0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, t0 WHERE (('287936099' IN ()) COLLATE NOCASE COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0, t0 WHERE ((NOT (('287936099' IN ()) COLLATE NOCASE COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0, t0 WHERE (((('287936099' IN ()) COLLATE NOCASE COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0;
SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0 HAVING MIN((AVG(v0.c0) IN ())) UNION ALL SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0 HAVING (NOT (MIN((AVG(v0.c0) IN ())))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0 HAVING ((MIN((AVG(v0.c0) IN ()))) ISNULL);
SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0 HAVING MIN((AVG(v0.c0) IN ())) UNION ALL SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0 HAVING (NOT (MIN((AVG(v0.c0) IN ())))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0 HAVING ((MIN((AVG(v0.c0) IN ()))) ISNULL);
SELECT t0.c59, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c59, t0.c0;
SELECT ALL * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE ((- (((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE ((NOT ((- (((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((((- (((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ('-2134420813') UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ('-2134420813'))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((('-2134420813') ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL t0.c59, v0.c0 FROM v0, t0 GROUP BY t0.c59, v0.c0;
SELECT t0.c59, v0.c0 FROM v0, t0 WHERE (((v0.c0 IN (x'44e0')) IN ())) GROUP BY t0.c59, v0.c0 UNION SELECT t0.c59, v0.c0 FROM v0, t0 WHERE ((NOT (((v0.c0 IN (x'44e0')) IN ())))) GROUP BY t0.c59, v0.c0 UNION SELECT t0.c59, v0.c0 FROM v0, t0 WHERE (((((v0.c0 IN (x'44e0')) IN ())) ISNULL)) GROUP BY t0.c59, v0.c0;
SELECT ALL t0.c59, v0.c0 FROM v0, t0 GROUP BY t0.c59, v0.c0;
SELECT ALL t0.c59, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0 HAVING MIN(MAX('')) UNION ALL SELECT ALL t0.c59, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (MIN(MAX('')))) UNION ALL SELECT t0.c59, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, t0.c0 HAVING ((MIN(MAX(''))) ISNULL);
SELECT t0.c59 FROM t0, v0;
SELECT t0.c59 FROM t0, v0 WHERE (t0.c0) UNION ALL SELECT t0.c59 FROM t0, v0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c59 FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT t0.c59 FROM t0, v0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((t0.c59) IS TRUE))+(CASE t0.c59  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c59 END))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c59) IS TRUE))+(CASE t0.c59  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c59 END))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((t0.c59) IS TRUE))+(CASE t0.c59  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c59 END))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c0;
SELECT t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE (((CAST(t0.c0 AS TEXT))*('a '))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE ((NOT (((CAST(t0.c0 AS TEXT))*('a '))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE (((((CAST(t0.c0 AS TEXT))*('a '))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((((vt0.c0)) NOT BETWEEN ((MIN(COUNT('-1141230265')))) AND ((MAX(MIN(GROUP_CONCAT(AVG(TOTAL(MAX(vt0.c0)))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((((vt0.c0)) NOT BETWEEN ((MIN(COUNT('-1141230265')))) AND ((MAX(MIN(GROUP_CONCAT(AVG(TOTAL(MAX(vt0.c0)))))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((((vt0.c0)) NOT BETWEEN ((MIN(COUNT('-1141230265')))) AND ((MAX(MIN(GROUP_CONCAT(AVG(TOTAL(MAX(vt0.c0))))))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TYPEOF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((TYPEOF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT DISTINCT * FROM vt0, t0, v0 WHERE (HEX(NULL)) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT (HEX(NULL)))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE (((HEX(NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0 HAVING (NOT (((t0.c0) NOT BETWEEN (MAX(t0.c59)) AND (v0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((t0.c0) NOT BETWEEN (MAX(t0.c59)) AND (v0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0 HAVING (((NOT (((t0.c0) NOT BETWEEN (MAX(t0.c59)) AND (v0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0 HAVING (NOT (((t0.c0) NOT BETWEEN (MAX(t0.c59)) AND (v0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((t0.c0) NOT BETWEEN (MAX(t0.c59)) AND (v0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0 HAVING (((NOT (((t0.c0) NOT BETWEEN (MAX(t0.c59)) AND (v0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0;
SELECT t0.c0 FROM vt0, v0, t0;
SELECT t0.c0 FROM vt0, v0, t0 WHERE (((((v0.c0)&(v0.c0)))<<((~ (t0.c59))))) UNION ALL SELECT ALL t0.c0 FROM vt0, v0, t0 WHERE ((NOT (((((v0.c0)&(v0.c0)))<<((~ (t0.c59))))))) UNION ALL SELECT t0.c0 FROM vt0, v0, t0 WHERE (((((((v0.c0)&(v0.c0)))<<((~ (t0.c59))))) ISNULL));
SELECT t0.c0 FROM vt0, v0, t0;
SELECT DISTINCT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(NULL AS INTEGER), ((vt0.c0)>=(vt0.c0)), t0.c59 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), ((vt0.c0)==(t0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 END)));
SELECT DISTINCT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(NULL AS INTEGER), ((vt0.c0)>=(vt0.c0)), t0.c59 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), ((vt0.c0)=(t0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 END))) WHERE (((t0.c0) NOT BETWEEN ((v0.c0 IN (t0.c0))) AND (QUOTE(0.8856157257565926)))) UNION SELECT DISTINCT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(NULL AS INTEGER), ((vt0.c0)>=(vt0.c0)), t0.c59 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), ((vt0.c0)==(t0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 END))) WHERE ((NOT (((t0.c0) NOT BETWEEN ((v0.c0 IN (t0.c0))) AND (QUOTE(0.8856157257565926)))))) UNION SELECT DISTINCT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(NULL AS INTEGER), ((vt0.c0)>=(vt0.c0)), t0.c59 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), ((vt0.c0)==(t0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 END))) WHERE (((((t0.c0) NOT BETWEEN ((v0.c0 IN (t0.c0))) AND (QUOTE(0.8856157257565926)))) ISNULL));
SELECT DISTINCT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(NULL AS INTEGER), ((vt0.c0)>=(vt0.c0)), t0.c59 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), ((vt0.c0)==(t0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 END)));
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, v0 WHERE (ABS(CAST(v0.c0 AS INTEGER))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0, v0 WHERE ((NOT (ABS(CAST(v0.c0 AS INTEGER))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, v0 WHERE (((ABS(CAST(v0.c0 AS INTEGER))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(AVG(GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 NOT INDEXED, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(AVG(GROUP_CONCAT(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(AVG(GROUP_CONCAT(TOTAL(vt0.c0))))) ISNULL);
SELECT * FROM v0 INDEXED BY i28, t0;
SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((t0.c0)>(((v0.c0) IS FALSE))) INNER JOIN t0 ON ((((((((((v0.c0) NOTNULL))OR(vt0.c0 COLLATE BINARY)))AND((((t0.c59, vt0.c0, v0.c0)) NOT BETWEEN ((t0.c59, t0.c0, vt0.c0)) AND ((t0.c59, vt0.c0, v0.c0))))))AND(((vt0.c0) NOTNULL))))AND(TRIM(vt0.c0)));
SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0;
SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM t0, v0, vt0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (rtreenode(v0.c0, vt0.c0)))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0 UNION SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM t0, v0, vt0 WHERE ((NOT (((CAST(NULL AS TEXT)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (rtreenode(v0.c0, vt0.c0)))))) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0 UNION SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM t0, v0, vt0 WHERE (((((CAST(NULL AS TEXT)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (rtreenode(v0.c0, vt0.c0)))) ISNULL)) GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0;
SELECT ALL t0.c59, v0.c0, t0.c0, vt0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0;
SELECT v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN TYPEOF(DISTINCT t0.c59) THEN (vt0.c0 IN ()) END GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN TYPEOF(DISTINCT t0.c59) THEN (vt0.c0 IN ()) END GROUP BY v0.c0 HAVING CASE GROUP_CONCAT(AVG(COUNT(MAX(MAX(TOTAL(AVG(v0.c0)))))))  WHEN (- (t0.c59)) THEN COUNT(vt0.c0) COLLATE BINARY ELSE t0.c0 END UNION ALL SELECT v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN TYPEOF(DISTINCT t0.c59) THEN (vt0.c0 IN ()) END GROUP BY v0.c0 HAVING (NOT (CASE GROUP_CONCAT(AVG(COUNT(MAX(MAX(TOTAL(AVG(v0.c0)))))))  WHEN (- (t0.c59)) THEN COUNT(vt0.c0) COLLATE BINARY ELSE t0.c0 END)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN TYPEOF(DISTINCT t0.c59) THEN (vt0.c0 IN ()) END GROUP BY v0.c0 HAVING ((CASE GROUP_CONCAT(AVG(COUNT(MAX(MAX(TOTAL(AVG(v0.c0)))))))  WHEN (- (t0.c59)) THEN COUNT(vt0.c0) COLLATE BINARY ELSE t0.c0 END) ISNULL);
SELECT ALL t0.c59, t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c59, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((t0.c0)/(vt0.c0))))) UNION ALL SELECT t0.c59, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((NOT (((t0.c0)/(vt0.c0))))))) UNION ALL SELECT t0.c59, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((NOT (((t0.c0)/(vt0.c0))))) ISNULL));
SELECT ALL t0.c59, t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=(CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=(CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY v0.c0, vt0.c0, t0.c59;
SELECT ALL v0.c0, vt0.c0, t0.c59 FROM t0, vt0, v0 WHERE (((((t0.c59)&(vt0.c0)))/(vt0.c0))) GROUP BY v0.c0, vt0.c0, t0.c59 UNION SELECT v0.c0, vt0.c0, t0.c59 FROM t0, vt0, v0 WHERE ((NOT (((((t0.c59)&(vt0.c0)))/(vt0.c0))))) GROUP BY v0.c0, vt0.c0, t0.c59 UNION SELECT ALL v0.c0, vt0.c0, t0.c59 FROM t0, vt0, v0 WHERE (((((((t0.c59)&(vt0.c0)))/(vt0.c0))) ISNULL)) GROUP BY v0.c0, vt0.c0, t0.c59;
SELECT v0.c0, vt0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY v0.c0, vt0.c0, t0.c59;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((json_object(t0.c0, vt0.c0))>(x''))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((json_object(t0.c0, vt0.c0))>(x''))))) UNION ALL SELECT * FROM t0, vt0 WHERE (((((json_object(t0.c0, vt0.c0))>(x''))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((('uviO0|' IN ()))||(((v0.c0)>(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((('uviO0|' IN ()))||(((v0.c0)>(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((('uviO0|' IN ()))||(((v0.c0)>(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c59)) NOT BETWEEN ((t0.c0)) AND ((NULL))))) AND ((((0.24127285425302403) NOT BETWEEN (t0.c59) AND (t0.c0)))))) GROUP BY t0.c59, t0.c0 UNION SELECT t0.c59, t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((((t0.c59)) NOT BETWEEN ((t0.c0)) AND ((NULL))))) AND ((((0.24127285425302403) NOT BETWEEN (t0.c59) AND (t0.c0)))))))) GROUP BY t0.c59, t0.c0 UNION SELECT ALL t0.c59, t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN (((((t0.c59)) NOT BETWEEN ((t0.c0)) AND ((NULL))))) AND ((((0.24127285425302403) NOT BETWEEN (t0.c59) AND (t0.c0)))))) ISNULL)) GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(GROUP_CONCAT(COUNT(*)) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(*)) AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(GROUP_CONCAT(COUNT(*)) AS BLOB)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) ISNULL)) NOT NULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c59, t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c59, t0.c0 FROM vt0, t0 WHERE (CAST(((t0.c59)%(-257764528)) AS BLOB)) UNION SELECT DISTINCT t0.c59, t0.c0 FROM vt0, t0 WHERE ((NOT (CAST(((t0.c59)%(-257764528)) AS BLOB)))) UNION SELECT DISTINCT t0.c59, t0.c0 FROM vt0, t0 WHERE (((CAST(((t0.c59)%(-257764528)) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c59, t0.c0 FROM vt0, t0;
SELECT t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c0;
SELECT t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE (x'') GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE ((NOT (x''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE (((x'') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c0;
SELECT vt0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c0)LIKE('1520314340')) COLLATE BINARY GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c0)LIKE('1520314340')) COLLATE BINARY GROUP BY vt0.c0, v0.c0 HAVING (((((TOTAL(MIN(SUM(COUNT(v0.c0)))))) NOT BETWEEN ((v0.c0)) AND ((MIN(vt0.c0)))))%(MIN(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c0)LIKE('1520314340')) COLLATE BINARY GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((((TOTAL(MIN(SUM(COUNT(v0.c0)))))) NOT BETWEEN ((v0.c0)) AND ((MIN(vt0.c0)))))%(MIN(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c0)LIKE('1520314340')) COLLATE BINARY GROUP BY vt0.c0, v0.c0 HAVING (((((((TOTAL(MIN(SUM(COUNT(v0.c0)))))) NOT BETWEEN ((v0.c0)) AND ((MIN(vt0.c0)))))%(MIN(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL TOTAL((((t0.c59 IN (t0.c59))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (CASE WHEN t0.c59 THEN t0.c59 END))) FROM vt0, t0;
SELECT ALL vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CAST((t0.c59 IN ()) AS NUMERIC);
SELECT vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CAST((t0.c59 IN ()) AS NUMERIC) WHERE (v0.c0) UNION ALL SELECT vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CAST((t0.c59 IN ()) AS NUMERIC) WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CAST((t0.c59 IN ()) AS NUMERIC) WHERE (((v0.c0) ISNULL));
SELECT ALL vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON CAST((t0.c59 IN ()) AS NUMERIC);
SELECT DISTINCT v0.c0 FROM vt0 CROSS JOIN v0 ON NULL;
SELECT DISTINCT v0.c0 FROM vt0 CROSS JOIN v0 ON NULL WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) UNION SELECT DISTINCT v0.c0 FROM vt0 CROSS JOIN v0 ON NULL WHERE ((NOT ((CAST(vt0.c0 AS INTEGER) IN ())))) UNION SELECT DISTINCT v0.c0 FROM vt0 CROSS JOIN v0 ON NULL WHERE ((((CAST(vt0.c0 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0 CROSS JOIN v0 ON NULL;
SELECT ALL t0.c59 FROM v0 LEFT OUTER JOIN vt0 ON (((UPPER(vt0.c0)))==((CAST(vt0.c0 AS NUMERIC)))) LEFT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c59) AND (t0.c0)))OR(((((t0.c59)AND(t0.c0)))AND(t0.c59)))))OR((~ (v0.c0)))))OR(((v0.c0)||(t0.c59)))))OR(t0.c0 COLLATE BINARY)) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM v0 LEFT OUTER JOIN vt0 ON (((UPPER(vt0.c0)))==((CAST(vt0.c0 AS NUMERIC)))) LEFT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c59) AND (t0.c0)))OR(((((t0.c59)AND(t0.c0)))AND(t0.c59)))))OR((~ (v0.c0)))))OR(((v0.c0)||(t0.c59)))))OR(t0.c0 COLLATE BINARY)) WHERE (HEX(CAST(vt0.c0 AS INTEGER))) GROUP BY t0.c59 UNION SELECT ALL t0.c59 FROM v0 LEFT OUTER JOIN vt0 ON (((UPPER(vt0.c0)))==((CAST(vt0.c0 AS NUMERIC)))) LEFT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c59) AND (t0.c0)))OR(((((t0.c59)AND(t0.c0)))AND(t0.c59)))))OR((~ (v0.c0)))))OR(((v0.c0)||(t0.c59)))))OR(t0.c0 COLLATE BINARY)) WHERE ((NOT (HEX(CAST(vt0.c0 AS INTEGER))))) GROUP BY t0.c59 UNION SELECT t0.c59 FROM v0 LEFT OUTER JOIN vt0 ON (((UPPER(vt0.c0)))=((CAST(vt0.c0 AS NUMERIC)))) LEFT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c59) AND (t0.c0)))OR(((((t0.c59)AND(t0.c0)))AND(t0.c59)))))OR((~ (v0.c0)))))OR(((v0.c0)||(t0.c59)))))OR(t0.c0 COLLATE BINARY)) WHERE (((HEX(CAST(vt0.c0 AS INTEGER))) ISNULL)) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM v0 LEFT OUTER JOIN vt0 ON (((UPPER(vt0.c0)))==((CAST(vt0.c0 AS NUMERIC)))) LEFT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c59) AND (t0.c0)))OR(((((t0.c59)AND(t0.c0)))AND(t0.c59)))))OR((~ (v0.c0)))))OR(((v0.c0)||(t0.c59)))))OR(t0.c0 COLLATE BINARY)) GROUP BY t0.c59;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MIN(GROUP_CONCAT(TOTAL(NULL))), vt0.c0, AVG(''))) NOT BETWEEN ((CASE WHEN MIN(GROUP_CONCAT(vt0.c0)) THEN GROUP_CONCAT(MAX(COUNT(GROUP_CONCAT(MAX(COUNT(*)))))) ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN AVG(COUNT(*)) END, SUM(GROUP_CONCAT(SUM(vt0.c0))))) AND ((CAST(vt0.c0 AS INTEGER), (~ (MIN(vt0.c0))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((MAX(TOTAL(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((MIN(GROUP_CONCAT(TOTAL(NULL))), vt0.c0, AVG(''))) NOT BETWEEN ((CASE WHEN MIN(GROUP_CONCAT(vt0.c0)) THEN GROUP_CONCAT(MAX(COUNT(GROUP_CONCAT(MAX(COUNT(*)))))) ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN AVG(COUNT(*)) END, SUM(GROUP_CONCAT(SUM(vt0.c0))))) AND ((CAST(vt0.c0 AS INTEGER), (~ (MIN(vt0.c0))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((MAX(TOTAL(vt0.c0)))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((MIN(GROUP_CONCAT(TOTAL(NULL))), vt0.c0, AVG(''))) NOT BETWEEN ((CASE WHEN MIN(GROUP_CONCAT(vt0.c0)) THEN GROUP_CONCAT(MAX(COUNT(GROUP_CONCAT(MAX(COUNT(*)))))) ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN AVG(COUNT(*)) END, SUM(GROUP_CONCAT(SUM(vt0.c0))))) AND ((CAST(vt0.c0 AS INTEGER), (~ (MIN(vt0.c0))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((MAX(TOTAL(vt0.c0))))))))) ISNULL);
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (x'') UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t0, vt0 WHERE (((x'') ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM vt0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN ((t0.c0) NOT NULL) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)/(t0.c59)) THEN ((v0.c0) NOT NULL) WHEN '0.13502777698130075' THEN ((0.6386682333700371) NOT BETWEEN (t0.c0) AND ('-308305641')) END RIGHT OUTER JOIN t0 ON (('-1545362594') BETWEEN (NULL) AND (CAST(t0.c0 AS REAL))) GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59;
SELECT * FROM t0, vt0, v0;
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c59)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((t0.c0, v0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c59 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 END, (((vt0.c0))>((0.4612196254304337))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (~ (vt0.c0)), (vt0.c0 IN ()))));
SELECT DISTINCT * FROM t0 NOT INDEXED INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c59)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((t0.c0, v0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c59 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 END, (((vt0.c0))>((0.4612196254304337))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (~ (vt0.c0)), (vt0.c0 IN ())))) WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c59)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((t0.c0, v0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c59 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 END, (((vt0.c0))>((0.4612196254304337))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (~ (vt0.c0)), (vt0.c0 IN ())))) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c59)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((t0.c0, v0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c59 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 END, (((vt0.c0))>((0.4612196254304337))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (~ (vt0.c0)), (vt0.c0 IN ())))) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c59)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((t0.c0, v0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c59 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c59 END, (((vt0.c0))>((0.4612196254304337))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (~ (vt0.c0)), (vt0.c0 IN ()))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))>((v0.c0))))+((v0.c0 IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))>((v0.c0))))+((v0.c0 IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0))>((v0.c0))))+((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0, COUNT(COUNT(SUM(AVG(TOTAL(GROUP_CONCAT(AVG(MIN(SUM(SUM(v0.c0)))))))))), GROUP_CONCAT(v0.c0), COUNT(*), AVG(v0.c0)))<=((v0.c0, v0.c0, MAX(MAX(v0.c0)), v0.c0, v0.c0))))||(AVG(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0, COUNT(COUNT(SUM(AVG(TOTAL(GROUP_CONCAT(AVG(MIN(SUM(SUM(v0.c0)))))))))), GROUP_CONCAT(v0.c0), COUNT(*), AVG(v0.c0)))<=((v0.c0, v0.c0, MAX(MAX(v0.c0)), v0.c0, v0.c0))))||(AVG(AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0, COUNT(COUNT(SUM(AVG(TOTAL(GROUP_CONCAT(AVG(MIN(SUM(SUM(v0.c0)))))))))), GROUP_CONCAT(v0.c0), COUNT(*), AVG(v0.c0)))<=((v0.c0, v0.c0, MAX(MAX(v0.c0)), v0.c0, v0.c0))))||(AVG(AVG(v0.c0))))) ISNULL);
SELECT t0.c0, t0.c59 FROM t0;
SELECT ALL t0.c0, t0.c59 FROM t0 NOT INDEXED WHERE (((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)))<=(((((t0.c0)AND(t0.c59)))AND(t0.c0))))) UNION ALL SELECT t0.c0, t0.c59 FROM t0 WHERE ((NOT (((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)))<=(((((t0.c0)AND(t0.c59)))AND(t0.c0))))))) UNION ALL SELECT ALL t0.c0, t0.c59 FROM t0 WHERE (((((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)))<=(((((t0.c0)AND(t0.c59)))AND(t0.c0))))) ISNULL));
SELECT t0.c0, t0.c59 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((NULL COLLATE NOCASE)>>(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((NULL COLLATE NOCASE)>>(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((NULL COLLATE NOCASE)>>(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)IS(vt0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN (+ (vt0.c0)) WHEN NULLIF(v0.c0, x'34a4') THEN vt0.c0 COLLATE RTRIM ELSE ((v0.c0)>>(vt0.c0)) END GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)IS(vt0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN (+ (vt0.c0)) WHEN NULLIF(v0.c0, x'34a4') THEN vt0.c0 COLLATE RTRIM ELSE ((v0.c0)>>(vt0.c0)) END WHERE ((((vt0.c0 IN (vt0.c0))) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)IS(vt0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN (+ (vt0.c0)) WHEN NULLIF(v0.c0, x'34a4') THEN vt0.c0 COLLATE RTRIM ELSE ((v0.c0)>>(vt0.c0)) END WHERE ((NOT ((((vt0.c0 IN (vt0.c0))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)IS(vt0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN (+ (vt0.c0)) WHEN NULLIF(v0.c0, x'34a4') THEN vt0.c0 COLLATE RTRIM ELSE ((v0.c0)>>(vt0.c0)) END WHERE ((((((vt0.c0 IN (vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)IS(vt0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN (+ (vt0.c0)) WHEN NULLIF(v0.c0, x'34a4') THEN vt0.c0 COLLATE RTRIM ELSE ((v0.c0)>>(vt0.c0)) END GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((v0.c0) ISNULL)) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0) ISNULL)))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((v0.c0) ISNULL))) ISNULL);
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((v0.c0) ISNULL)) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0) ISNULL)))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((v0.c0) ISNULL))) ISNULL);
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((((((((((((-1.702828354E9)OR(v0.c0)))AND(')qm飻4驝7')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN (NOT (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE x'' END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ((((((((((((-1.702828354E9)OR(v0.c0)))AND(')qm飻4驝7')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN (NOT (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE x'' END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((((((((((((-1.702828354E9)OR(v0.c0)))AND(')qm飻4驝7')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN (NOT (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE x'' END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON t0.c59 FULL OUTER JOIN t0 ON (('') NOT NULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((NOT (vt0.c0)))GLOB((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-349076013')))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((NOT (vt0.c0)))GLOB((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-349076013')))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((NOT (vt0.c0)))GLOB((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-349076013')))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59;
SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING (((MIN(TOTAL(SUM(SUM(v0.c0)))), '-1104954026', TOTAL(v0.c0)))<=((COUNT(*), CASE WHEN ']PG<<' THEN v0.c0 END, ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(MAX(t0.c0)))))) BETWEEN (t0.c59) AND (AVG(t0.c59)))))) UNION ALL SELECT ALL t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING (NOT ((((MIN(TOTAL(SUM(SUM(v0.c0)))), '-1104954026', TOTAL(v0.c0)))<=((COUNT(*), CASE WHEN ']PG<<' THEN v0.c0 END, ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(MAX(t0.c0)))))) BETWEEN (t0.c59) AND (AVG(t0.c59)))))))) UNION ALL SELECT t0.c59 FROM v0, t0 GROUP BY t0.c59 HAVING (((((MIN(TOTAL(SUM(SUM(v0.c0)))), '-1104954026', TOTAL(v0.c0)))<=((COUNT(*), CASE WHEN ']PG<<' THEN v0.c0 END, ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(MAX(t0.c0)))))) BETWEEN (t0.c59) AND (AVG(t0.c59))))))) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (x'1841') UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (x'1841'))) UNION ALL SELECT * FROM t0, v0 WHERE (((x'1841') ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0, vt0, t0 WHERE (GLOB(CASE WHEN v0.c0 THEN vt0.c0 END, ((v0.c0) ISNULL))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, vt0, t0 WHERE ((NOT (GLOB(CASE WHEN v0.c0 THEN vt0.c0 END, ((v0.c0) ISNULL))))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((GLOB(CASE WHEN v0.c0 THEN vt0.c0 END, ((v0.c0) ISNULL))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT t0.c0, v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0;
SELECT t0.c0, v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0 WHERE (json_patch(vt0.c0 COLLATE RTRIM, NULLIF(DISTINCT t0.c0, vt0.c0))) GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0 UNION SELECT ALL t0.c0, v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0 WHERE ((NOT (json_patch(vt0.c0 COLLATE RTRIM, NULLIF(DISTINCT t0.c0, vt0.c0))))) GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0 UNION SELECT t0.c0, v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0 WHERE (((json_patch(vt0.c0 COLLATE RTRIM, NULLIF(DISTINCT t0.c0, vt0.c0))) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0;
SELECT t0.c0, v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING SUM(CAST(COUNT(AVG(COUNT(*))) AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (SUM(CAST(COUNT(AVG(COUNT(*))) AS BLOB)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((SUM(CAST(COUNT(AVG(COUNT(*))) AS BLOB))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((x'b24d67e5'))<=((vt0.c0 COLLATE BINARY)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((x'b24d67e5'))<=((vt0.c0 COLLATE BINARY)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((x'b24d67e5'))<=((vt0.c0 COLLATE BINARY)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON 'x卞';
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON 'x卞' WHERE (((t0.c59)IS(t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON 'x卞' WHERE ((NOT (((t0.c59)IS(t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON 'x卞' WHERE (((((t0.c59)IS(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON 'x卞';
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (-1.980936218E9) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (-1.980936218E9))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE (((-1.980936218E9) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0 HAVING CASE COUNT(t0.c0)  WHEN AVG(GROUP_CONCAT(AVG(t0.c0))) THEN MAX(SUM(v0.c0)) END UNION ALL SELECT v0.c0, t0.c0 FROM t0, vt0, v0 NOT INDEXED GROUP BY v0.c0, t0.c0 HAVING (NOT (CASE COUNT(t0.c0)  WHEN AVG(GROUP_CONCAT(AVG(t0.c0))) THEN MAX(SUM(v0.c0)) END)) UNION ALL SELECT v0.c0, t0.c0 FROM t0, vt0, v0 NOT INDEXED GROUP BY v0.c0, t0.c0 HAVING ((CASE COUNT(t0.c0)  WHEN AVG(GROUP_CONCAT(AVG(t0.c0))) THEN MAX(SUM(v0.c0)) END) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((- (CAST(t0.c59 AS REAL)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- (CAST(t0.c59 AS REAL)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((- (CAST(t0.c59 AS REAL)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((v0.c0, t0.c59, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ((((v0.c0, t0.c59, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, v0.c0)))))))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE IN ((((v0.c0, t0.c59, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT t0.c59, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c59, t0.c0, vt0.c0;
SELECT t0.c59, t0.c0, vt0.c0 FROM t0, vt0 WHERE (t0.c59 COLLATE RTRIM) GROUP BY t0.c59, t0.c0, vt0.c0 UNION SELECT t0.c59, t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (t0.c59 COLLATE RTRIM))) GROUP BY t0.c59, t0.c0, vt0.c0 UNION SELECT ALL t0.c59, t0.c0, vt0.c0 FROM t0, vt0 WHERE (((t0.c59 COLLATE RTRIM) ISNULL)) GROUP BY t0.c59, t0.c0, vt0.c0;
SELECT t0.c59, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c59, t0.c0, vt0.c0;
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING 0xffffffffd809654e UNION ALL SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING (NOT (0Xffffffffd809654e)) UNION ALL SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING ((0Xffffffffd809654e) ISNULL);
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING 0xffffffffd809654e UNION ALL SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING (NOT (0Xffffffffd809654e)) UNION ALL SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING ((0Xffffffffd809654e) ISNULL);
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (NOT ('1636923783'));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (NOT ('1636923783')) WHERE (((CASE WHEN 0.8754596791920026 THEN v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((((v0.c0)AND(t0.c59)))AND(t0.c59))))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (NOT ('1636923783')) WHERE ((NOT (((CASE WHEN 0.8754596791920026 THEN v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((((v0.c0)AND(t0.c59)))AND(t0.c59))))))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (NOT ('1636923783')) WHERE (((((CASE WHEN 0.8754596791920026 THEN v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((((v0.c0)AND(t0.c59)))AND(t0.c59))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (NOT ('1636923783'));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULLIF(UNLIKELY(v0.c0), json_quote(v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULLIF(UNLIKELY(v0.c0), json_quote(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULLIF(UNLIKELY(v0.c0), json_quote(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(SUM(vt0.c0)))+(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(SUM(vt0.c0)))+(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(SUM(vt0.c0)))+(COUNT(vt0.c0)))) ISNULL);
SELECT ALL t0.c0, t0.c59 FROM t0, v0;
SELECT ALL t0.c0, t0.c59 FROM t0, v0 WHERE (HEX(DISTINCT TRIM(DISTINCT v0.c0, t0.c0))) UNION ALL SELECT t0.c0, t0.c59 FROM t0, v0 WHERE ((NOT (HEX(DISTINCT TRIM(DISTINCT v0.c0, t0.c0))))) UNION ALL SELECT t0.c0, t0.c59 FROM t0, v0 WHERE (((HEX(DISTINCT TRIM(DISTINCT v0.c0, t0.c0))) ISNULL));
SELECT ALL t0.c0, t0.c59 FROM t0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS BLOB))))OR(((((0.5454965681055961)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS BLOB))))OR(((((0.5454965681055961)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS BLOB))))OR(((((0.5454965681055961)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 WHERE ('P5') GROUP BY t0.c59, t0.c0 UNION SELECT ALL t0.c59, t0.c0 FROM t0 WHERE ((NOT ('P5'))) GROUP BY t0.c59, t0.c0 UNION SELECT ALL t0.c59, t0.c0 FROM t0 WHERE ((('P5') ISNULL)) GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL vt0.c0, t0.c59, v0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c59, v0.c0;
SELECT ALL vt0.c0, t0.c59, v0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c59, v0.c0 HAVING COUNT(TOTAL(GROUP_CONCAT(TOTAL(MAX('?6>>{g'))))) UNION ALL SELECT vt0.c0, t0.c59, v0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c59, v0.c0 HAVING (NOT (COUNT(TOTAL(GROUP_CONCAT(TOTAL(MAX('?6>>{g'))))))) UNION ALL SELECT vt0.c0, t0.c59, v0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c59, v0.c0 HAVING ((COUNT(TOTAL(GROUP_CONCAT(TOTAL(MAX('?6>>{g')))))) ISNULL);
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN t0 ON (MAX(v0.c0, t0.c59) IN ());
SELECT * FROM v0, vt0 LEFT OUTER JOIN t0 ON (MAX(v0.c0, t0.c59) IN ()) WHERE (CAST(CASE WHEN t0.c0 THEN v0.c0 END AS NUMERIC)) UNION ALL SELECT * FROM v0, vt0 LEFT OUTER JOIN t0 ON (MAX(v0.c0, t0.c59) IN ()) WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN v0.c0 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN t0 ON (MAX(v0.c0, t0.c59) IN ()) WHERE (((CAST(CASE WHEN t0.c0 THEN v0.c0 END AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN t0 ON (MAX(v0.c0, t0.c59) IN ());
SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM t0, vt0, v0;
SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM t0, vt0, v0 WHERE (x'') UNION SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM t0, vt0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM t0, vt0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM t0, vt0, v0;
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0, vt0 WHERE (CASE ((((v0.c0)OR(t0.c0)))AND(v0.c0))  WHEN NULL THEN (((v0.c0, vt0.c0, v0.c0))>=((v0.c0, t0.c59, t0.c59))) ELSE CAST(vt0.c0 AS BLOB) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0, vt0 WHERE ((NOT (CASE ((((v0.c0)OR(t0.c0)))AND(v0.c0))  WHEN NULL THEN (((v0.c0, vt0.c0, v0.c0))>=((v0.c0, t0.c59, t0.c59))) ELSE CAST(vt0.c0 AS BLOB) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0, vt0 WHERE (((CASE ((((v0.c0)OR(t0.c0)))AND(v0.c0))  WHEN NULL THEN (((v0.c0, vt0.c0, v0.c0))>=((v0.c0, t0.c59, t0.c59))) ELSE CAST(vt0.c0 AS BLOB) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0, t0.c59 FROM t0, vt0 CROSS JOIN v0 ON ((UPPER(DISTINCT t0.c0))<(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, v0.c0, t0.c59;
SELECT ALL vt0.c0, v0.c0, t0.c59 FROM t0, vt0 CROSS JOIN v0 ON ((UPPER(DISTINCT t0.c0))<(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, v0.c0, t0.c59 HAVING (SUM(vt0.c0) IN ((MAX(AVG(COUNT(COUNT(MAX(t0.c0))))) IN ()), GROUP_CONCAT(x''), TOTAL(TOTAL(v0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c59 FROM t0, vt0 CROSS JOIN v0 ON ((UPPER(DISTINCT t0.c0))<(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, v0.c0, t0.c59 HAVING (NOT ((SUM(vt0.c0) IN ((MAX(AVG(COUNT(COUNT(MAX(t0.c0))))) IN ()), GROUP_CONCAT(x''), TOTAL(TOTAL(v0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c59 FROM t0, vt0 CROSS JOIN v0 ON ((UPPER(DISTINCT t0.c0))<(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, v0.c0, t0.c59 HAVING (((SUM(vt0.c0) IN ((MAX(AVG(COUNT(COUNT(MAX(t0.c0))))) IN ()), GROUP_CONCAT(x''), TOTAL(TOTAL(v0.c0))))) ISNULL);
SELECT SUM(((HEX(DISTINCT vt0.c0)) IS FALSE)) FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))||(''));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))||('')) WHERE (((t0.c0)<(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))||('')) WHERE ((NOT (((t0.c0)<(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))||('')) WHERE (((((t0.c0)<(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))||(''));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (-1.763180789E9) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (-1.763180789E9))) UNION SELECT DISTINCT * FROM v0 WHERE (((-1.763180789E9) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, t0.c59 FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0) NOTNULL) GROUP BY t0.c0, t0.c59;
SELECT t0.c0, t0.c59 FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0) NOTNULL) GROUP BY t0.c0, t0.c59 HAVING ((AVG(AVG(vt0.c0)))*((t0.c0 IN (MIN(t0.c59), vt0.c0)))) UNION ALL SELECT t0.c0, t0.c59 FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0) NOTNULL) GROUP BY t0.c0, t0.c59 HAVING (NOT (((AVG(AVG(vt0.c0)))*((t0.c0 IN (MIN(t0.c59), vt0.c0)))))) UNION ALL SELECT ALL t0.c0, t0.c59 FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0) NOTNULL) GROUP BY t0.c0, t0.c59 HAVING ((((AVG(AVG(vt0.c0)))*((t0.c0 IN (MIN(t0.c59), vt0.c0))))) ISNULL);
SELECT ALL t0.c59, vt0.c0, t0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON NULL;
SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON NULL WHERE (CASE ((v0.c0) BETWEEN (t0.c0) AND (t0.c59))  WHEN (- (x'')) THEN v0.c0 ELSE t0.c0 END) UNION ALL SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT (CASE ((v0.c0) BETWEEN (t0.c0) AND (t0.c59))  WHEN (- (x'')) THEN v0.c0 ELSE t0.c0 END))) UNION ALL SELECT ALL t0.c59, vt0.c0, t0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON NULL WHERE (((CASE ((v0.c0) BETWEEN (t0.c0) AND (t0.c59))  WHEN (- (x'')) THEN v0.c0 ELSE t0.c0 END) ISNULL));
SELECT ALL t0.c59, vt0.c0, t0.c0, v0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON NULL;
SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON 0.3928410647720284;
SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON 0.3928410647720284 WHERE ((((((t0.c0 IN ()))AND((v0.c0 IN (v0.c0, v0.c0)))))OR((+ (t0.c59))))) UNION SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON 0.3928410647720284 WHERE ((NOT ((((((t0.c0 IN ()))AND((v0.c0 IN (v0.c0, v0.c0)))))OR((+ (t0.c59))))))) UNION SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON 0.3928410647720284 WHERE ((((((((t0.c0 IN ()))AND((v0.c0 IN (v0.c0, v0.c0)))))OR((+ (t0.c59))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c59, t0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON 0.3928410647720284;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (CAST(AVG(GROUP_CONCAT(v0.c0)) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (CAST(AVG(GROUP_CONCAT(v0.c0)) AS TEXT))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (CAST(AVG(GROUP_CONCAT(v0.c0)) AS TEXT)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((0X37e18537 IN ())) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((0X37e18537 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((0X37e18537 IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, vt0 NOT INDEXED, v0;
SELECT DISTINCT * FROM t0, vt0, v0 WHERE (((((vt0.c0)>=(t0.c0))) NOT BETWEEN (t0.c59 COLLATE NOCASE) AND ((~ (v0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((NOT (((((vt0.c0)>=(t0.c0))) NOT BETWEEN (t0.c59 COLLATE NOCASE) AND ((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE (((((((vt0.c0)>=(t0.c0))) NOT BETWEEN (t0.c59 COLLATE NOCASE) AND ((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0 NOT INDEXED, v0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 COLLATE RTRIM IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((v0.c0 COLLATE RTRIM IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, v0, vt0;
SELECT ALL v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, v0, vt0 WHERE (NULLIF(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((vt0.c0)AND(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, v0, vt0 WHERE ((NOT (NULLIF(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((vt0.c0)AND(v0.c0)))))) UNION ALL SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, v0, vt0 WHERE (((NULLIF(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((vt0.c0)AND(v0.c0)))) ISNULL));
SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM t0, v0, vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN v0.c0 THEN t0.c0 END THEN json_remove(v0.c0, vt0.c0) END FULL OUTER JOIN t0 ON CASE (- (t0.c59))  WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (t0.c0) AND ('{,wC')) END;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 WHERE (((((t0.c59 COLLATE RTRIM)OR(((t0.c59)IS NOT(t0.c0)))))OR(('1465450719' IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((NOT (((((t0.c59 COLLATE RTRIM)OR(((t0.c59)IS NOT(t0.c0)))))OR(('1465450719' IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE (((((((t0.c59 COLLATE RTRIM)OR(((t0.c59)IS NOT(t0.c0)))))OR(('1465450719' IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (MIN(COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (MIN(COUNT(vt0.c0))))) ISNULL);
SELECT t0.c0 FROM vt0, t0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE ((((NOT ('-308305641')))GLOB(((NULL)|(t0.c59))))) UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE ((NOT ((((NOT ('-308305641')))GLOB(((NULL)|(t0.c59))))))) UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE ((((((NOT ('-308305641')))GLOB(((NULL)|(t0.c59))))) ISNULL));
SELECT t0.c0 FROM vt0, t0;
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM t0, v0 WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN ((((((((t0.c0)AND(t0.c59)))OR(t0.c59)))OR(t0.c59)))AND(t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(0xffffffff80c752b3)) THEN (v0.c0 IN ()) WHEN t0.c0 COLLATE BINARY THEN 0.8947794094159938 ELSE ((((((((t0.c59)OR(t0.c0)))AND(-1687876322)))AND(v0.c0)))AND(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((NOT (CASE WHEN t0.c0 COLLATE BINARY THEN ((((((((t0.c0)AND(t0.c59)))OR(t0.c59)))OR(t0.c59)))AND(t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(0Xffffffff80c752b3)) THEN (v0.c0 IN ()) WHEN t0.c0 COLLATE BINARY THEN 0.8947794094159938 ELSE ((((((((t0.c59)OR(t0.c0)))AND(-1687876322)))AND(v0.c0)))AND(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE (((CASE WHEN t0.c0 COLLATE BINARY THEN ((((((((t0.c0)AND(t0.c59)))OR(t0.c59)))OR(t0.c59)))AND(t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(0Xffffffff80c752b3)) THEN (v0.c0 IN ()) WHEN t0.c0 COLLATE BINARY THEN 0.8947794094159938 ELSE ((((((((t0.c59)OR(t0.c0)))AND(-1687876322)))AND(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))IS((((vt0.c0))<=((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))IS((((vt0.c0))<=((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))IS((((vt0.c0))<=((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c59 FROM t0 GROUP BY t0.c59;
SELECT t0.c59 FROM t0 GROUP BY t0.c59 HAVING (GROUP_CONCAT(t0.c59) IN ()) UNION ALL SELECT t0.c59 FROM t0 GROUP BY t0.c59 HAVING (NOT ((GROUP_CONCAT(t0.c59) IN ()))) UNION ALL SELECT t0.c59 FROM t0 GROUP BY t0.c59 HAVING (((GROUP_CONCAT(t0.c59) IN ())) ISNULL);
SELECT t0.c59 FROM t0 GROUP BY t0.c59;
SELECT t0.c59 FROM t0 GROUP BY t0.c59 HAVING (GROUP_CONCAT(t0.c59) IN ()) UNION ALL SELECT t0.c59 FROM t0 GROUP BY t0.c59 HAVING (NOT ((GROUP_CONCAT(t0.c59) IN ()))) UNION ALL SELECT t0.c59 FROM t0 GROUP BY t0.c59 HAVING (((GROUP_CONCAT(t0.c59) IN ())) ISNULL);
SELECT t0.c59 FROM t0 GROUP BY t0.c59;
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c0 END IN ((0.8455578378676749 IN (v0.c0, v0.c0))));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c0 END IN ((0.8455578378676749 IN (v0.c0, v0.c0)))) WHERE (((((CASE WHEN t0.c59 THEN vt0.c0 ELSE t0.c59 END)OR(CAST(v0.c0 AS REAL))))OR((~ (t0.c0))))) UNION ALL SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c0 END IN ((0.8455578378676749 IN (v0.c0, v0.c0)))) WHERE ((NOT (((((CASE WHEN t0.c59 THEN vt0.c0 ELSE t0.c59 END)OR(CAST(v0.c0 AS REAL))))OR((~ (t0.c0))))))) UNION ALL SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c0 END IN ((0.8455578378676749 IN (v0.c0, v0.c0)))) WHERE (((((((CASE WHEN t0.c59 THEN vt0.c0 ELSE t0.c59 END)OR(CAST(v0.c0 AS REAL))))OR((~ (t0.c0))))) ISNULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c0 END IN ((0.8455578378676749 IN (v0.c0, v0.c0))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (LIKE((NOT (t0.c0)), ((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (LIKE((NOT (t0.c0)), ((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((LIKE((NOT (t0.c0)), ((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59;
SELECT ALL t0.c0, t0.c59 FROM t0 WHERE ((((0.5764620450357963, t0.c0, t0.c0)) BETWEEN ((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)), (('cJ') NOTNULL), CASE WHEN t0.c59 THEN 'l''拯k' WHEN t0.c59 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CASE t0.c59  WHEN t0.c59 THEN t0.c59 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c59 ELSE t0.c59 END, ((((t0.c59)AND(t0.c59)))AND(t0.c0)), (t0.c59 IN (t0.c59)))))) GROUP BY t0.c0, t0.c59 UNION SELECT t0.c0, t0.c59 FROM t0 WHERE ((NOT ((((0.5764620450357963, t0.c0, t0.c0)) BETWEEN ((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)), (('cJ') NOTNULL), CASE WHEN t0.c59 THEN 'l''拯k' WHEN t0.c59 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CASE t0.c59  WHEN t0.c59 THEN t0.c59 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c59 ELSE t0.c59 END, ((((t0.c59)AND(t0.c59)))AND(t0.c0)), (t0.c59 IN (t0.c59)))))))) GROUP BY t0.c0, t0.c59 UNION SELECT t0.c0, t0.c59 FROM t0 WHERE ((((((0.5764620450357963, t0.c0, t0.c0)) BETWEEN ((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)), (('cJ') NOTNULL), CASE WHEN t0.c59 THEN 'l''拯k' WHEN t0.c59 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CASE t0.c59  WHEN t0.c59 THEN t0.c59 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c59 ELSE t0.c59 END, ((((t0.c59)AND(t0.c59)))AND(t0.c0)), (t0.c59 IN (t0.c59)))))) ISNULL)) GROUP BY t0.c0, t0.c59;
SELECT t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59;
SELECT t0.c59, v0.c0, t0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((((('1673548638')AND(x'50dc')))AND(vt0.c0))))>((((v0.c0)>>(0.4451763497188699))))) CROSS JOIN vt0 ON '108655105' GROUP BY t0.c59, v0.c0, t0.c0, vt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c59 THEN t0.c0 WHEN t0.c59 THEN t0.c59 WHEN t0.c0 THEN t0.c59 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((+ (CASE WHEN t0.c59 THEN t0.c0 WHEN t0.c59 THEN t0.c59 WHEN t0.c0 THEN t0.c59 END))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((+ (CASE WHEN t0.c59 THEN t0.c0 WHEN t0.c59 THEN t0.c59 WHEN t0.c0 THEN t0.c59 END))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (json_valid(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (json_valid(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((json_valid(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT t0.c0, t0.c59, vt0.c0 FROM t0, vt0 NOT INDEXED, v0 GROUP BY t0.c0, t0.c59, vt0.c0;
SELECT ALL t0.c0, t0.c59, vt0.c0 FROM t0, vt0, v0 WHERE (((NULL)<<((~ (vt0.c0))))) GROUP BY t0.c0, t0.c59, vt0.c0 UNION SELECT t0.c0, t0.c59, vt0.c0 FROM t0, vt0, v0 WHERE ((NOT (((NULL)<<((~ (vt0.c0))))))) GROUP BY t0.c0, t0.c59, vt0.c0 UNION SELECT t0.c0, t0.c59, vt0.c0 FROM t0, vt0, v0 WHERE (((((NULL)<<((~ (vt0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c59, vt0.c0;
SELECT t0.c0, t0.c59, vt0.c0 FROM t0, vt0 NOT INDEXED, v0 GROUP BY t0.c0, t0.c59, vt0.c0;
SELECT t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59 HAVING (MAX(t0.c0) IN ()) UNION ALL SELECT ALL t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59 HAVING (NOT ((MAX(t0.c0) IN ()))) UNION ALL SELECT t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59 HAVING (((MAX(t0.c0) IN ())) ISNULL);
SELECT t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59 HAVING (MAX(t0.c0) IN ()) UNION ALL SELECT ALL t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59 HAVING (NOT ((MAX(t0.c0) IN ()))) UNION ALL SELECT t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59 HAVING (((MAX(t0.c0) IN ())) ISNULL);
SELECT t0.c59 FROM vt0 LEFT OUTER JOIN t0 ON RTRIM(t0.c0) GROUP BY t0.c59;
SELECT ALL vt0.c0, t0.c59, t0.c0 FROM vt0, t0;
SELECT vt0.c0, t0.c59, t0.c0 FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c59 THEN t0.c0 ELSE vt0.c0 END)IS NOT(((t0.c59) BETWEEN (vt0.c0) AND ('1767956275'))))) UNION ALL SELECT vt0.c0, t0.c59, t0.c0 FROM vt0, t0 WHERE ((NOT (((CASE vt0.c0  WHEN t0.c59 THEN t0.c0 ELSE vt0.c0 END)IS NOT(((t0.c59) BETWEEN (vt0.c0) AND ('1767956275'))))))) UNION ALL SELECT ALL vt0.c0, t0.c59, t0.c0 FROM vt0, t0 WHERE (((((CASE vt0.c0  WHEN t0.c59 THEN t0.c0 ELSE vt0.c0 END)IS NOT(((t0.c59) BETWEEN (vt0.c0) AND ('1767956275'))))) ISNULL));
SELECT ALL vt0.c0, t0.c59, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, '\r')) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (IFNULL(DISTINCT vt0.c0, '\r')))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, '\r')) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (ABS(DISTINCT vt0.c0) IN (vt0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (ABS(DISTINCT vt0.c0) IN (vt0.c0)) WHERE (TYPEOF(((vt0.c0) NOTNULL))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (ABS(DISTINCT vt0.c0) IN (vt0.c0)) WHERE ((NOT (TYPEOF(((vt0.c0) NOTNULL))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (ABS(DISTINCT vt0.c0) IN (vt0.c0)) WHERE (((TYPEOF(((vt0.c0) NOTNULL))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (ABS(DISTINCT vt0.c0) IN (vt0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((0xffffffffc9584490)||(0X5da232a0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((0xffffffffc9584490)||(0X5da232a0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((0Xffffffffc9584490)||(0X5da232a0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((0xffffffffc9584490)||(0X5da232a0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((0xffffffffc9584490)||(0X5da232a0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((0Xffffffffc9584490)||(0X5da232a0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, t0.c0, t0.c59 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0, t0.c59 FROM vt0, t0 WHERE ((((t0.c59 IN ()))>(((t0.c0)IS NOT(NULL))))) UNION ALL SELECT vt0.c0, t0.c0, t0.c59 FROM vt0, t0 WHERE ((NOT ((((t0.c59 IN ()))>(((t0.c0)IS NOT(NULL))))))) UNION ALL SELECT vt0.c0, t0.c0, t0.c59 FROM vt0, t0 WHERE ((((((t0.c59 IN ()))>(((t0.c0)IS NOT(NULL))))) ISNULL));
SELECT vt0.c0, t0.c0, t0.c59 FROM vt0, t0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((t0.c59)|(vt0.c0)))AND(LIKELY(t0.c0))))OR(CASE t0.c59  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN t0.c59 THEN t0.c0 ELSE t0.c0 END)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0)) INNER JOIN t0 ON (((vt0.c0, vt0.c0, t0.c59)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c59))), '1757669201', ((t0.c0) NOT NULL))) AND ((NULL COLLATE NOCASE, ((((t0.c59)AND(vt0.c0)))OR(v0.c0)), ((vt0.c0) IS FALSE))));
SELECT vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 NATURAL JOIN t0 WHERE ((((vt0.c0)) BETWEEN ((((((t0.c0)AND(t0.c59)))OR(-1.587893904E9)))) AND (((((vt0.c0))!=((v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 NATURAL JOIN t0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((t0.c0)AND(t0.c59)))OR(-1.587893904E9)))) AND (((((vt0.c0))!=((v0.c0))))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 NATURAL JOIN t0 WHERE ((((((vt0.c0)) BETWEEN ((((((t0.c0)AND(t0.c59)))OR(-1.587893904E9)))) AND (((((vt0.c0))<>((v0.c0))))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 INDEXED BY i28 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INDEXED BY i28 GROUP BY t0.c0 HAVING AVG(((MIN(t0.c0)) IS FALSE)) UNION ALL SELECT t0.c0 FROM t0 INDEXED BY i28 GROUP BY t0.c0 HAVING (NOT (AVG(((MIN(t0.c0)) IS FALSE)))) UNION ALL SELECT ALL t0.c0 FROM t0 INDEXED BY i28 GROUP BY t0.c0 HAVING ((AVG(((MIN(t0.c0)) IS FALSE))) ISNULL);
SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0, t0;
SELECT v0.c0, t0.c0, t0.c59 FROM v0, t0 WHERE (((((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59))) NOTNULL)) UNION ALL SELECT v0.c0, t0.c0, t0.c59 FROM v0, t0 WHERE ((NOT (((((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59))) NOTNULL)))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0, t0 WHERE (((((((t0.c59) NOT BETWEEN (t0.c0) AND (t0.c59))) NOTNULL)) ISNULL));
SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0, t0;
SELECT DISTINCT v0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0 WHERE (((v0.c0)AND(v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0 WHERE ((NOT (((v0.c0)AND(v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0 WHERE (((((v0.c0)AND(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN t0.c59 THEN v0.c0 ELSE t0.c0 END, 0.8839640497756472)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT CASE WHEN t0.c59 THEN v0.c0 ELSE t0.c0 END, 0.8839640497756472)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE (((LIKELIHOOD(DISTINCT CASE WHEN t0.c59 THEN v0.c0 ELSE t0.c0 END, 0.8839640497756472)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL t0.c0, v0.c0, vt0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, vt0.c0, t0.c59;
SELECT t0.c0, v0.c0, vt0.c0, t0.c59 FROM t0, vt0 NOT INDEXED, v0 GROUP BY t0.c0, v0.c0, vt0.c0, t0.c59 HAVING ((MAX(COUNT(*)))+(CASE TOTAL(t0.c0)  WHEN t0.c59 THEN t0.c59 END)) UNION ALL SELECT t0.c0, v0.c0, vt0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, vt0.c0, t0.c59 HAVING (NOT (((MAX(COUNT(*)))+(CASE TOTAL(t0.c0)  WHEN t0.c59 THEN t0.c59 END)))) UNION ALL SELECT t0.c0, v0.c0, vt0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, vt0.c0, t0.c59 HAVING ((((MAX(COUNT(*)))+(CASE TOTAL(t0.c0)  WHEN t0.c59 THEN t0.c59 END))) ISNULL);
SELECT * FROM v0 INDEXED BY i28;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((('1713441240') ISNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((NOT ((('1713441240') ISNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT ((('1713441240') ISNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((0.875582645013933, v0.c0, v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, 0.7536611859425654))) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((0.875582645013933, v0.c0, v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, 0.7536611859425654))) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((0.875582645013933, v0.c0, v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, 0.7536611859425654))) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, v0.c0, t0.c59 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT t0.c0, v0.c0, t0.c59 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING ((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(TOTAL(t0.c59))) AND ((((SUM(AVG(v0.c0)), vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c59, COUNT(v0.c0))) AND ((vt0.c0, COUNT(*), 0.47666575737847305))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c59 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (NOT (((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(TOTAL(t0.c59))) AND ((((SUM(AVG(v0.c0)), vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c59, COUNT(v0.c0))) AND ((vt0.c0, COUNT(*), 0.47666575737847305))))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c59 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING ((((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(TOTAL(t0.c59))) AND ((((SUM(AVG(v0.c0)), vt0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c59, COUNT(v0.c0))) AND ((vt0.c0, COUNT(*), 0.47666575737847305)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))==(((v0.c0)|(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0 IN ()))=(((v0.c0)|(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))=(((v0.c0)|(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((+ (((t0.c59)&(t0.c59))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((+ (((t0.c59)&(t0.c59))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((+ (((t0.c59)&(t0.c59))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE (t0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (t0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL v0.c0, t0.c0, t0.c59 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0, t0.c0, t0.c59 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c59 HAVING ((((MIN(MIN(TOTAL(AVG(v0.c0)))))GLOB(v0.c0)))>(GROUP_CONCAT(t0.c59))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c59 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c59 HAVING (NOT (((((MIN(MIN(TOTAL(AVG(v0.c0)))))GLOB(v0.c0)))>(GROUP_CONCAT(t0.c59))))) UNION ALL SELECT v0.c0, t0.c0, t0.c59 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c59 HAVING ((((((MIN(MIN(TOTAL(AVG(v0.c0)))))GLOB(v0.c0)))>(GROUP_CONCAT(t0.c59)))) ISNULL);
SELECT ALL TOTAL(0.5285156272323803) FROM v0 ORDER BY CAST(((((NULL)OR(v0.c0)))AND(v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(((v0.c0) ISNULL)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(((v0.c0) ISNULL)))))) UNION ALL SELECT * FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(((v0.c0) ISNULL)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0, v0.c0, t0.c59, t0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0;
SELECT ALL vt0.c0, v0.c0, t0.c59, t0.c0 FROM vt0, t0, v0 WHERE (CAST((~ ('-1980936218')) AS NUMERIC)) GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0 UNION SELECT ALL vt0.c0, v0.c0, t0.c59, t0.c0 FROM vt0, t0, v0 WHERE ((NOT (CAST((~ ('-1980936218')) AS NUMERIC)))) GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0 UNION SELECT vt0.c0, v0.c0, t0.c59, t0.c0 FROM vt0, t0, v0 WHERE (((CAST((~ ('-1980936218')) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0;
SELECT vt0.c0, v0.c0, t0.c59, t0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0;
SELECT ALL t0.c59, v0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((0.4874072913306162)>(((t0.c59)-(v0.c0)))) INNER JOIN v0 ON (NULL IN ()) GROUP BY t0.c59, v0.c0;
SELECT ALL t0.c59, v0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((0.4874072913306162)>(((t0.c59)-(v0.c0)))) INNER JOIN v0 ON (NULL IN ()) GROUP BY t0.c59, v0.c0 HAVING CASE ((GROUP_CONCAT(COUNT(*)))IS NOT(vt0.c0))  WHEN RTRIM(vt0.c0) THEN SUM(MIN(t0.c59)) ELSE AVG(v0.c0) END UNION ALL SELECT ALL t0.c59, v0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((0.4874072913306162)>(((t0.c59)-(v0.c0)))) INNER JOIN v0 ON (NULL IN ()) GROUP BY t0.c59, v0.c0 HAVING (NOT (CASE ((GROUP_CONCAT(COUNT(*)))IS NOT(vt0.c0))  WHEN RTRIM(vt0.c0) THEN SUM(MIN(t0.c59)) ELSE AVG(v0.c0) END)) UNION ALL SELECT ALL t0.c59, v0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((0.4874072913306162)>(((t0.c59)-(v0.c0)))) INNER JOIN v0 ON (NULL IN ()) GROUP BY t0.c59, v0.c0 HAVING ((CASE ((GROUP_CONCAT(COUNT(*)))IS NOT(vt0.c0))  WHEN RTRIM(vt0.c0) THEN SUM(MIN(t0.c59)) ELSE AVG(v0.c0) END) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((- ((((t0.c59))<((-462233474)))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((- ((((t0.c59))<((-462233474)))))))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE ((((- ((((t0.c59))<((-462233474)))))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE (t0.c0) UNION SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0;
SELECT v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, t0 WHERE (CASE CAST(x'' AS TEXT)  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN t0.c59 END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, t0 WHERE ((NOT (CASE CAST(x'' AS TEXT)  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN t0.c59 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, t0 WHERE (((CASE CAST(x'' AS TEXT)  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN t0.c59 END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))=((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))==((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))=((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))=((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))=((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))==((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))=((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))=((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c59)), x'', t0.c0))=((((((((((vt0.c0)OR(vt0.c0)))OR(0.6301209140846963)))OR(t0.c0)))AND(t0.c0)), DATETIME(t0.c59, t0.c59, t0.c59), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT ALL t0.c0 FROM vt0, t0, v0;
SELECT ALL t0.c0 FROM vt0, t0, v0 WHERE (((((t0.c0)OR(v0.c0)))AND((((t0.c0, v0.c0, v0.c0))>((vt0.c0, t0.c59, v0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, v0 WHERE ((NOT (((((t0.c0)OR(v0.c0)))AND((((t0.c0, v0.c0, v0.c0))>((vt0.c0, t0.c59, v0.c0)))))))) UNION ALL SELECT t0.c0 FROM vt0, t0, v0 WHERE (((((((t0.c0)OR(v0.c0)))AND((((t0.c0, v0.c0, v0.c0))>((vt0.c0, t0.c59, v0.c0)))))) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, t0, vt0 WHERE (CASE WHEN ((vt0.c0)LIKE(t0.c59)) THEN (('')AND(vt0.c0)) ELSE (t0.c59 IN ()) END) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0 UNION SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, t0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)LIKE(t0.c59)) THEN (('')AND(vt0.c0)) ELSE (t0.c59 IN ()) END))) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0 UNION SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, t0, vt0 WHERE (((CASE WHEN ((vt0.c0)LIKE(t0.c59)) THEN (('')AND(vt0.c0)) ELSE (t0.c59 IN ()) END) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING TOTAL((NOT (AVG(MIN(t0.c59))))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (TOTAL((NOT (AVG(MIN(t0.c59))))))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((TOTAL((NOT (AVG(MIN(t0.c59)))))) ISNULL);
SELECT ALL MAX(((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(0.2595890207610504))) NOT BETWEEN (v0.c0) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL), CAST((((v0.c0))>((v0.c0))) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ('-1775324581') UNION ALL SELECT * FROM t0 WHERE ((NOT ('-1775324581'))) UNION ALL SELECT ALL * FROM t0 WHERE ((('-1775324581') ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((('Adays&f'))==((v0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((('Adays&f'))==((v0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((('Adays&f'))=((v0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT ALL t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE (CAST(CASE WHEN t0.c0 THEN v0.c0 END AS INTEGER)) GROUP BY t0.c0, vt0.c0, v0.c0 UNION SELECT t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN v0.c0 END AS INTEGER)))) GROUP BY t0.c0, vt0.c0, v0.c0 UNION SELECT t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE (((CAST(CASE WHEN t0.c0 THEN v0.c0 END AS INTEGER)) ISNULL)) GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT ALL t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND (((('') ISNULL)))) LEFT OUTER JOIN t0 ON ((((CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END)AND((+ (t0.c59)))))OR(vt0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND (((('') ISNULL)))) LEFT OUTER JOIN t0 ON ((((CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END)AND((+ (t0.c59)))))OR(vt0.c0 COLLATE NOCASE)) WHERE (((((((((v0.c0)AND(((v0.c0) NOT NULL))))OR(((v0.c0)-(vt0.c0)))))OR(((v0.c0)/(t0.c0)))))AND((~ (v0.c0))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND (((('') ISNULL)))) LEFT OUTER JOIN t0 ON ((((CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END)AND((+ (t0.c59)))))OR(vt0.c0 COLLATE NOCASE)) WHERE ((NOT (((((((((v0.c0)AND(((v0.c0) NOT NULL))))OR(((v0.c0)-(vt0.c0)))))OR(((v0.c0)/(t0.c0)))))AND((~ (v0.c0))))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND (((('') ISNULL)))) LEFT OUTER JOIN t0 ON ((((CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END)AND((+ (t0.c59)))))OR(vt0.c0 COLLATE NOCASE)) WHERE (((((((((((v0.c0)AND(((v0.c0) NOT NULL))))OR(((v0.c0)-(vt0.c0)))))OR(((v0.c0)/(t0.c0)))))AND((~ (v0.c0))))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND (((('') ISNULL)))) LEFT OUTER JOIN t0 ON ((((CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END)AND((+ (t0.c59)))))OR(vt0.c0 COLLATE NOCASE));
SELECT DISTINCT t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0;
SELECT DISTINCT t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0 WHERE ((((((vt0.c0) NOTNULL)))>=((((((((((vt0.c0)OR(v0.c0)))AND(t0.c59)))AND(vt0.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0 WHERE ((NOT ((((((vt0.c0) NOTNULL)))>=((((((((((vt0.c0)OR(v0.c0)))AND(t0.c59)))AND(vt0.c0)))OR(vt0.c0)))))))) UNION SELECT DISTINCT t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0 WHERE ((((((((vt0.c0) NOTNULL)))>=((((((((((vt0.c0)OR(v0.c0)))AND(t0.c59)))AND(vt0.c0)))OR(vt0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0;
SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 WHERE (((x'')OR(x''))) GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 UNION SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 WHERE ((NOT (((x'')OR(x''))))) GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59 UNION SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 WHERE (((((x'')OR(x''))) ISNULL)) GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0, vt0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0 HAVING AVG(TRIM(DISTINCT t0.c59)) UNION ALL SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0 HAVING (NOT (AVG(TRIM(DISTINCT t0.c59)))) UNION ALL SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0 HAVING ((AVG(TRIM(DISTINCT t0.c59))) ISNULL);
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0 HAVING AVG(TRIM(DISTINCT t0.c59)) UNION ALL SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0 HAVING (NOT (AVG(TRIM(DISTINCT t0.c59)))) UNION ALL SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0 HAVING ((AVG(TRIM(DISTINCT t0.c59))) ISNULL);
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ('2063694985') UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ('2063694985'))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((('2063694985') ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST('' AS REAL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CAST('' AS REAL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CAST('' AS REAL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ('0.04574896756379088') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ('0.04574896756379088'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((('0.04574896756379088') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL t0.c59, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, v0.c0, t0.c0;
SELECT t0.c59, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, v0.c0, t0.c0 HAVING SUM(COUNT(MIN('-9223372036854775808'))) UNION ALL SELECT ALL t0.c59, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, v0.c0, t0.c0 HAVING (NOT (SUM(COUNT(MIN('-9223372036854775808'))))) UNION ALL SELECT t0.c59, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, v0.c0, t0.c0 HAVING ((SUM(COUNT(MIN('-9223372036854775808')))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))>>((((((((('MY')OR(t0.c0)))OR(t0.c0)))OR('|MLꜣP*j')))OR('1279580669'))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0, t0.c0)))>>((((((((('MY')OR(t0.c0)))OR(t0.c0)))OR('|MLꜣP*j')))OR('1279580669'))))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0)))>>((((((((('MY')OR(t0.c0)))OR(t0.c0)))OR('|MLꜣP*j')))OR('1279580669'))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c59 FROM t0 NOT INDEXED;
SELECT DISTINCT t0.c59 FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c59))))AND((((t0.c59))<((t0.c0))))))OR(((t0.c59) IS FALSE)))) UNION SELECT DISTINCT t0.c59 FROM t0 WHERE ((NOT ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c59))))AND((((t0.c59))<((t0.c0))))))OR(((t0.c59) IS FALSE)))))) UNION SELECT DISTINCT t0.c59 FROM t0 WHERE ((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c59))))AND((((t0.c59))<((t0.c0))))))OR(((t0.c59) IS FALSE)))) ISNULL));
SELECT DISTINCT t0.c59 FROM t0 NOT INDEXED;
SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ABS(DISTINCT '''8') ELSE ((t0.c59)/(v0.c0)) END GROUP BY v0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ABS(DISTINCT '''8') ELSE ((t0.c59)/(v0.c0)) END WHERE ((((t0.c0 IN ())) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c59 UNION SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ABS(DISTINCT '''8') ELSE ((t0.c59)/(v0.c0)) END WHERE ((NOT ((((t0.c0 IN ())) ISNULL)))) GROUP BY v0.c0, t0.c0, t0.c59 UNION SELECT v0.c0, t0.c0, t0.c59 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ABS(DISTINCT '''8') ELSE ((t0.c59)/(v0.c0)) END WHERE ((((((t0.c0 IN ())) ISNULL)) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ABS(DISTINCT '''8') ELSE ((t0.c59)/(v0.c0)) END GROUP BY v0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MIN(AVG(SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MIN(AVG(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MIN(AVG(SUM(v0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0 INNER JOIN t0 ON ((CAST(t0.c59 AS TEXT))IS(((t0.c0)AND(t0.c59))));
SELECT DISTINCT * FROM vt0, v0 INNER JOIN t0 ON ((CAST(t0.c59 AS TEXT))IS(((t0.c0)AND(t0.c59)))) WHERE ((((vt0.c0, t0.c0, vt0.c0)) BETWEEN (((t0.c59 IN ()), v0.c0, ((((((((((((v0.c0)AND(t0.c59)))AND(v0.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c59)))) AND ((CAST('' AS REAL), CAST(t0.c59 AS REAL), ((vt0.c0)+(t0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 INNER JOIN t0 ON ((CAST(t0.c59 AS TEXT))IS(((t0.c0)AND(t0.c59)))) WHERE ((NOT ((((vt0.c0, t0.c0, vt0.c0)) BETWEEN (((t0.c59 IN ()), v0.c0, ((((((((((((v0.c0)AND(t0.c59)))AND(v0.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c59)))) AND ((CAST('' AS REAL), CAST(t0.c59 AS REAL), ((vt0.c0)+(t0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0 INNER JOIN t0 ON ((CAST(t0.c59 AS TEXT))IS(((t0.c0)AND(t0.c59)))) WHERE ((((((vt0.c0, t0.c0, vt0.c0)) BETWEEN (((t0.c59 IN ()), v0.c0, ((((((((((((v0.c0)AND(t0.c59)))AND(v0.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c59)))) AND ((CAST('' AS REAL), CAST(t0.c59 AS REAL), ((vt0.c0)+(t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0 INNER JOIN t0 ON ((CAST(t0.c59 AS TEXT))IS(((t0.c0)AND(t0.c59))));
SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0;
SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0 WHERE (((((((((NULL COLLATE RTRIM)AND(t0.c59)))OR(v0.c0 COLLATE NOCASE)))AND(vt0.c0)))OR(vt0.c0 COLLATE NOCASE))) GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0 UNION SELECT ALL t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0 WHERE ((NOT (((((((((NULL COLLATE RTRIM)AND(t0.c59)))OR(v0.c0 COLLATE NOCASE)))AND(vt0.c0)))OR(vt0.c0 COLLATE NOCASE))))) GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0 UNION SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0 WHERE (((((((((((NULL COLLATE RTRIM)AND(t0.c59)))OR(v0.c0 COLLATE NOCASE)))AND(vt0.c0)))OR(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0;
SELECT t0.c59, t0.c0, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c59, t0.c0, v0.c0, vt0.c0;
SELECT t0.c59, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c59, vt0.c0;
SELECT t0.c59, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c59, vt0.c0 HAVING MAX(GROUP_CONCAT(TOTAL(0.8627757589975705))) UNION ALL SELECT t0.c59, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c59, vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(TOTAL(0.8627757589975705))))) UNION ALL SELECT ALL t0.c59, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c59, vt0.c0 HAVING ((MAX(GROUP_CONCAT(TOTAL(0.8627757589975705)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)<=(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)<=(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (LIKELY(DISTINCT v0.c0)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (LIKELY(DISTINCT v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE (((LIKELY(DISTINCT v0.c0)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0 WHERE (((((t0.c0) NOT NULL)) NOT NULL)) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 UNION SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0 WHERE ((NOT (((((t0.c0) NOT NULL)) NOT NULL)))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 UNION SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0 WHERE (((((((t0.c0) NOT NULL)) NOT NULL)) ISNULL)) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING CAST(AVG(SUM(COUNT(*))) AS REAL) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (CAST(AVG(SUM(COUNT(*))) AS REAL))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((CAST(AVG(SUM(COUNT(*))) AS REAL)) ISNULL);
SELECT MAX(v0.c0) FROM t0, v0, vt0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0)|((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)|((v0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)|((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN t0.c59 THEN t0.c0 WHEN vt0.c0 THEN t0.c59 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN t0.c59 THEN t0.c0 WHEN vt0.c0 THEN t0.c59 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) WHERE ((((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)) IN ())) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 UNION SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN t0.c59 THEN t0.c0 WHEN vt0.c0 THEN t0.c59 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) WHERE ((NOT ((((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)) IN ())))) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59 UNION SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN t0.c59 THEN t0.c0 WHEN vt0.c0 THEN t0.c59 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) WHERE ((((((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN t0.c59 THEN t0.c0 WHEN vt0.c0 THEN t0.c59 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) GROUP BY v0.c0, t0.c0, vt0.c0, t0.c59;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING HEX(DISTINCT vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (HEX(DISTINCT vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((HEX(DISTINCT vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING HEX(DISTINCT vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (HEX(DISTINCT vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((HEX(DISTINCT vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0, t0.c59 FROM vt0 FULL OUTER JOIN v0 ON ((json(t0.c0))|(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)) LEFT OUTER JOIN t0 ON (- ((((t0.c59)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT DISTINCT v0.c0 FROM v0, t0;
SELECT DISTINCT v0.c0 FROM v0, t0 WHERE (CAST(NULL AS INTEGER)) UNION SELECT DISTINCT v0.c0 FROM v0, t0 WHERE ((NOT (CAST(NULL AS INTEGER)))) UNION SELECT DISTINCT v0.c0 FROM v0, t0 WHERE (((CAST(NULL AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t0;
SELECT t0.c59, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c59, v0.c0, t0.c0;
SELECT t0.c59, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (DATETIME(t0.c0, t0.c0, v0.c0)))) GROUP BY t0.c59, v0.c0, t0.c0 UNION SELECT t0.c59, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((NOT (DATETIME(t0.c0, t0.c0, v0.c0)))))) GROUP BY t0.c59, v0.c0, t0.c0 UNION SELECT ALL t0.c59, v0.c0, t0.c0 FROM t0, v0 WHERE ((((NOT (DATETIME(t0.c0, t0.c0, v0.c0)))) ISNULL)) GROUP BY t0.c59, v0.c0, t0.c0;
SELECT t0.c59, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c59, v0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((x'd0e4') NOT NULL) UNION ALL SELECT vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (((x'd0e4') NOT NULL))) UNION ALL SELECT vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((((x'd0e4') NOT NULL)) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((x'd0e4') NOT NULL) UNION ALL SELECT vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (((x'd0e4') NOT NULL))) UNION ALL SELECT vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((((x'd0e4') NOT NULL)) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c59, t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c59, t0.c0, vt0.c0 FROM vt0, t0 WHERE (vt0.c0) UNION ALL SELECT ALL t0.c59, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL t0.c59, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT ALL t0.c59, t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((((vt0.c0)==(t0.c59)))OR(((t0.c0) NOTNULL))))AND(t0.c59 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT (((((((vt0.c0)==(t0.c59)))OR(((t0.c0) NOTNULL))))AND(t0.c59 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((((((vt0.c0)=(t0.c59)))OR(((t0.c0) NOTNULL))))AND(t0.c59 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) WHERE (t0.c59) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) WHERE ((NOT (t0.c59))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) WHERE (((t0.c59) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) GROUP BY v0.c0, t0.c0;
SELECT t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59;
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59 HAVING CASE WHEN vt0.c0 COLLATE NOCASE THEN (((NULL))>((NULL))) ELSE (((v0.c0, v0.c0, GROUP_CONCAT(vt0.c0)))!=((t0.c0, GROUP_CONCAT(0.8357806551154473), GROUP_CONCAT(MAX(MIN(SUM(MAX(COUNT(*))))))))) END UNION ALL SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59 HAVING (NOT (CASE WHEN vt0.c0 COLLATE NOCASE THEN (((NULL))>((NULL))) ELSE (((v0.c0, v0.c0, GROUP_CONCAT(vt0.c0)))<>((t0.c0, GROUP_CONCAT(0.8357806551154473), GROUP_CONCAT(MAX(MIN(SUM(MAX(COUNT(*))))))))) END)) UNION ALL SELECT t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59 HAVING ((CASE WHEN vt0.c0 COLLATE NOCASE THEN (((NULL))>((NULL))) ELSE (((v0.c0, v0.c0, GROUP_CONCAT(vt0.c0)))<>((t0.c0, GROUP_CONCAT(0.8357806551154473), GROUP_CONCAT(MAX(MIN(SUM(MAX(COUNT(*))))))))) END) ISNULL);
SELECT ALL MAX(((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((v0.c0))>=((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) FROM vt0, v0;
SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=((CAST(x'' AS NUMERIC), (t0.c59 IN (vt0.c0)), (t0.c59 IN (t0.c59)))));
SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=((CAST(x'' AS NUMERIC), (t0.c59 IN (vt0.c0)), (t0.c59 IN (t0.c59))))) WHERE (vt0.c0) UNION ALL SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=((CAST(x'' AS NUMERIC), (t0.c59 IN (vt0.c0)), (t0.c59 IN (t0.c59))))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=((CAST(x'' AS NUMERIC), (t0.c59 IN (vt0.c0)), (t0.c59 IN (t0.c59))))) WHERE (((vt0.c0) ISNULL));
SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=((CAST(x'' AS NUMERIC), (t0.c59 IN (vt0.c0)), (t0.c59 IN (t0.c59)))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c59)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c59)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c59)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0, vt0.c0 FROM vt0 NOT INDEXED NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS INTEGER)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((CAST(((vt0.c0) NOT NULL) AS INTEGER)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 NOT INDEXED NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0;
SELECT t0.c0, v0.c0, t0.c59 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT t0.c0, v0.c0, t0.c59 FROM t0, v0 NOT INDEXED GROUP BY t0.c0, v0.c0, t0.c59 HAVING CASE WHEN t0.c59 THEN SUM(t0.c0) ELSE t0.c59 END COLLATE BINARY UNION ALL SELECT t0.c0, v0.c0, t0.c59 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (NOT (CASE WHEN t0.c59 THEN SUM(t0.c0) ELSE t0.c59 END COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING ((CASE WHEN t0.c59 THEN SUM(t0.c0) ELSE t0.c59 END COLLATE BINARY) ISNULL);
SELECT t0.c0, v0.c0, t0.c59 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT t0.c0, v0.c0, t0.c59 FROM t0, v0 NOT INDEXED GROUP BY t0.c0, v0.c0, t0.c59 HAVING CASE WHEN t0.c59 THEN SUM(t0.c0) ELSE t0.c59 END COLLATE BINARY UNION ALL SELECT t0.c0, v0.c0, t0.c59 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (NOT (CASE WHEN t0.c59 THEN SUM(t0.c0) ELSE t0.c59 END COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING ((CASE WHEN t0.c59 THEN SUM(t0.c0) ELSE t0.c59 END COLLATE BINARY) ISNULL);
SELECT t0.c0, v0.c0, t0.c59 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ())) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0, t0.c59 FROM t0;
SELECT DISTINCT t0.c0, t0.c59 FROM t0 WHERE (LOWER(DISTINCT t0.c59) COLLATE BINARY) UNION SELECT DISTINCT t0.c0, t0.c59 FROM t0 WHERE ((NOT (LOWER(DISTINCT t0.c59) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, t0.c59 FROM t0 WHERE (((LOWER(DISTINCT t0.c59) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, t0.c59 FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING AVG(MAX(COUNT(MAX(t0.c0)))) UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (AVG(MAX(COUNT(MAX(t0.c0)))))) UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((AVG(MAX(COUNT(MAX(t0.c0))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c59) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c59))) UNION ALL SELECT * FROM t0 WHERE (((t0.c59) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c59, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (((t0.c59) NOT BETWEEN (t0.c0) AND ('.8ZxKE'))));
SELECT DISTINCT t0.c59, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (((t0.c59) NOT BETWEEN (t0.c0) AND ('.8ZxKE')))) WHERE (CASE WHEN ABS(DISTINCT t0.c0) THEN CAST(v0.c0 AS NUMERIC) END) UNION SELECT DISTINCT t0.c59, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (((t0.c59) NOT BETWEEN (t0.c0) AND ('.8ZxKE')))) WHERE ((NOT (CASE WHEN ABS(DISTINCT t0.c0) THEN CAST(v0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT t0.c59, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (((t0.c59) NOT BETWEEN (t0.c0) AND ('.8ZxKE')))) WHERE (((CASE WHEN ABS(DISTINCT t0.c0) THEN CAST(v0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT t0.c59, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (((t0.c59) NOT BETWEEN (t0.c0) AND ('.8ZxKE'))));
SELECT t0.c59, t0.c0 FROM vt0, t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM vt0, t0 WHERE (vt0.c0) GROUP BY t0.c59, t0.c0 UNION SELECT ALL t0.c59, t0.c0 FROM vt0, t0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c59, t0.c0 UNION SELECT ALL t0.c59, t0.c0 FROM vt0, t0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM vt0, t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, vt0.c0, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, vt0.c0, v0.c0, t0.c0;
SELECT ALL t0.c59, vt0.c0, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, vt0.c0, v0.c0, t0.c0 HAVING AVG(CASE vt0.c0  WHEN COUNT(MIN(t0.c0)) THEN NULL WHEN MAX(COUNT(*)) THEN MAX(COUNT(vt0.c0)) WHEN MIN(t0.c59) THEN MAX('') ELSE GROUP_CONCAT(vt0.c0) END) UNION ALL SELECT t0.c59, vt0.c0, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, vt0.c0, v0.c0, t0.c0 HAVING (NOT (AVG(CASE vt0.c0  WHEN COUNT(MIN(t0.c0)) THEN NULL WHEN MAX(COUNT(*)) THEN MAX(COUNT(vt0.c0)) WHEN MIN(t0.c59) THEN MAX('') ELSE GROUP_CONCAT(vt0.c0) END))) UNION ALL SELECT ALL t0.c59, vt0.c0, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, vt0.c0, v0.c0, t0.c0 HAVING ((AVG(CASE vt0.c0  WHEN COUNT(MIN(t0.c0)) THEN NULL WHEN MAX(COUNT(*)) THEN MAX(COUNT(vt0.c0)) WHEN MIN(t0.c59) THEN MAX('') ELSE GROUP_CONCAT(vt0.c0) END)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)||(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)||(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)||(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ()))>=((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))>=((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ()))>=((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0)GLOB(vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (((v0.c0)GLOB(vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((NOT (((v0.c0)GLOB(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL t0.c59, t0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c59 THEN t0.c0 WHEN t0.c59 THEN v0.c0 ELSE vt0.c0 END)|((((v0.c0))<((t0.c59))))) FULL OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((1520314340)) AND ((vt0.c0))) GROUP BY t0.c59, t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN t0 ON CAST(((NULL)|(-3.08305641E8)) AS TEXT);
SELECT ALL t0.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN t0 ON CAST(((NULL)|(-3.08305641E8)) AS TEXT) WHERE (((((t0.c0) NOT BETWEEN (v0.c0) AND (x'')))IS NOT((((t0.c0))==((vt0.c0)))))) UNION ALL SELECT t0.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN t0 ON CAST(((NULL)|(-3.08305641E8)) AS TEXT) WHERE ((NOT (((((t0.c0) NOT BETWEEN (v0.c0) AND (x'')))IS NOT((((t0.c0))==((vt0.c0)))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN t0 ON CAST(((NULL)|(-3.08305641E8)) AS TEXT) WHERE (((((((t0.c0) NOT BETWEEN (v0.c0) AND (x'')))IS NOT((((t0.c0))==((vt0.c0)))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN t0 ON CAST(((NULL)|(-3.08305641E8)) AS TEXT);
SELECT DISTINCT t0.c59, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c59, t0.c0 FROM t0, v0 WHERE (((v0.c0) NOT NULL)) UNION SELECT DISTINCT t0.c59, t0.c0 FROM t0, v0 WHERE ((NOT (((v0.c0) NOT NULL)))) UNION SELECT DISTINCT t0.c59, t0.c0 FROM t0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c59, t0.c0 FROM t0, v0;
SELECT t0.c0, v0.c0, t0.c59 FROM v0 RIGHT OUTER JOIN vt0 ON CASE t0.c59  WHEN t0.c0 COLLATE NOCASE THEN ((((v0.c0)AND(vt0.c0)))OR(t0.c0)) WHEN CASE v0.c0  WHEN t0.c59 THEN t0.c0 ELSE t0.c0 END THEN CASE vt0.c0  WHEN v0.c0 THEN x'' END WHEN (((vt0.c0)) BETWEEN ((t0.c59)) AND ((vt0.c0))) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c59)) END CROSS JOIN t0 ON (~ ((~ (t0.c0)))) GROUP BY t0.c0, v0.c0, t0.c59;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c59, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0;
SELECT t0.c59, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(CASE WHEN t0.c0 THEN vt0.c0 END)))OR(((v0.c0)>(v0.c0))))) UNION ALL SELECT t0.c59, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(CASE WHEN t0.c0 THEN vt0.c0 END)))OR(((v0.c0)>(v0.c0))))))) UNION ALL SELECT ALL t0.c59, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(CASE WHEN t0.c0 THEN vt0.c0 END)))OR(((v0.c0)>(v0.c0))))) ISNULL));
SELECT ALL t0.c59, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0;
SELECT DISTINCT t0.c0, v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c59 AS NUMERIC) THEN ((vt0.c0) NOTNULL) END RIGHT OUTER JOIN vt0 ON t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(ABS(vt0.c0))))AND((~ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((NOT (vt0.c0)))OR(ABS(vt0.c0))))AND((~ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((NOT (vt0.c0)))OR(ABS(vt0.c0))))AND((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)<>(SUM(v0.c0)))) NOT NULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)!=(SUM(v0.c0)))) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)<>(SUM(v0.c0)))) NOT NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)<>(SUM(v0.c0)))) NOT NULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)!=(SUM(v0.c0)))) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)<>(SUM(v0.c0)))) NOT NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, vt0, v0;
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 WHERE (CASE WHEN ((t0.c0)LIKE(v0.c0)) THEN ((t0.c0) ISNULL) ELSE ((v0.c0)%(v0.c0)) END) UNION ALL SELECT t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 WHERE ((NOT (CASE WHEN ((t0.c0)LIKE(v0.c0)) THEN ((t0.c0) ISNULL) ELSE ((v0.c0)%(v0.c0)) END))) UNION ALL SELECT t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 WHERE (((CASE WHEN ((t0.c0)LIKE(v0.c0)) THEN ((t0.c0) ISNULL) ELSE ((v0.c0)%(v0.c0)) END) ISNULL));
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (TYPEOF(DISTINCT t0.c59) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (TYPEOF(DISTINCT t0.c59) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((TYPEOF(DISTINCT t0.c59) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c59 FROM t0, vt0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0, vt0 WHERE ((((t0.c59) IS FALSE) IN ())) GROUP BY t0.c59 UNION SELECT t0.c59 FROM t0, vt0 WHERE ((NOT ((((t0.c59) IS FALSE) IN ())))) GROUP BY t0.c59 UNION SELECT t0.c59 FROM t0, vt0 WHERE ((((((t0.c59) IS FALSE) IN ())) ISNULL)) GROUP BY t0.c59;
SELECT t0.c59 FROM t0, vt0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0 GROUP BY t0.c59 HAVING CASE ((TOTAL(t0.c59)) IS TRUE)  WHEN TOTAL(COUNT(t0.c59)) THEN CAST(MIN(t0.c0) AS INTEGER) END UNION ALL SELECT t0.c59 FROM t0 GROUP BY t0.c59 HAVING (NOT (CASE ((TOTAL(t0.c59)) IS TRUE)  WHEN TOTAL(COUNT(t0.c59)) THEN CAST(MIN(t0.c0) AS INTEGER) END)) UNION ALL SELECT t0.c59 FROM t0 GROUP BY t0.c59 HAVING ((CASE ((TOTAL(t0.c59)) IS TRUE)  WHEN TOTAL(COUNT(t0.c59)) THEN CAST(MIN(t0.c0) AS INTEGER) END) ISNULL);
SELECT ALL MIN(json_object(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0, CAST(vt0.c0 AS INTEGER))) FROM vt0;
SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0, v0;
SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0, v0 WHERE ((- (((t0.c59)GLOB(vt0.c0))))) UNION ALL SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0, v0 WHERE ((NOT ((- (((t0.c59)GLOB(vt0.c0))))))) UNION ALL SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0, v0 WHERE ((((- (((t0.c59)GLOB(vt0.c0))))) ISNULL));
SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM t0, vt0, v0;
SELECT DISTINCT t0.c59, t0.c0 FROM t0, v0 INDEXED BY i28 RIGHT OUTER JOIN vt0 ON rtreenode(t0.c0, v0.c0) COLLATE RTRIM;
SELECT ALL t0.c59, t0.c0, vt0.c0, v0.c0 FROM v0, vt0 INDEXED BY i28, t0 GROUP BY t0.c59, t0.c0, vt0.c0, v0.c0;
SELECT ALL t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59;
SELECT t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59 HAVING AVG((t0.c59 IN ())) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59 HAVING (NOT (AVG((t0.c59 IN ())))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59 HAVING ((AVG((t0.c59 IN ()))) ISNULL);
SELECT ALL t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59;
SELECT t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59 HAVING AVG((t0.c59 IN ())) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59 HAVING (NOT (AVG((t0.c59 IN ())))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59 HAVING ((AVG((t0.c59 IN ()))) ISNULL);
SELECT ALL t0.c0, vt0.c0, t0.c59 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59;
SELECT v0.c0 FROM t0, vt0 NATURAL JOIN v0;
SELECT v0.c0 FROM t0, vt0 NOT INDEXED NATURAL JOIN v0 WHERE (CAST(((v0.c0)=(t0.c0)) AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE ((NOT (CAST(((v0.c0)==(t0.c0)) AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE (((CAST(((v0.c0)==(t0.c0)) AS TEXT)) ISNULL));
SELECT v0.c0 FROM t0, vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, t0.c59, t0.c0 FROM vt0, v0, t0 GROUP BY v0.c0, t0.c59, t0.c0;
SELECT v0.c0, t0.c59, t0.c0 FROM vt0, v0, t0 WHERE (CASE ((x'')%('P'))  WHEN 0.7462225035762068 THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN t0.c59 COLLATE NOCASE THEN (~ (NULL)) ELSE ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) END) GROUP BY v0.c0, t0.c59, t0.c0 UNION SELECT v0.c0, t0.c59, t0.c0 FROM vt0, v0, t0 WHERE ((NOT (CASE ((x'')%('P'))  WHEN 0.7462225035762068 THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN t0.c59 COLLATE NOCASE THEN (~ (NULL)) ELSE ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) END))) GROUP BY v0.c0, t0.c59, t0.c0 UNION SELECT v0.c0, t0.c59, t0.c0 FROM vt0, v0, t0 WHERE (((CASE ((x'')%('P'))  WHEN 0.7462225035762068 THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN t0.c59 COLLATE NOCASE THEN (~ (NULL)) ELSE ((v0.c0) BETWEEN (t0.c59) AND (vt0.c0)) END) ISNULL)) GROUP BY v0.c0, t0.c59, t0.c0;
SELECT v0.c0, t0.c59, t0.c0 FROM vt0, v0, t0 GROUP BY v0.c0, t0.c59, t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING TOTAL(GROUP_CONCAT(MIN(MIN(COUNT(*))))) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MIN(MIN(COUNT(*))))) COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((TOTAL(GROUP_CONCAT(MIN(MIN(COUNT(*))))) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, t0.c59 FROM t0, vt0, v0;
SELECT t0.c0, t0.c59 FROM t0, vt0, v0 WHERE (CAST(((v0.c0) NOT NULL) AS TEXT)) UNION ALL SELECT t0.c0, t0.c59 FROM t0, vt0, v0 WHERE ((NOT (CAST(((v0.c0) NOT NULL) AS TEXT)))) UNION ALL SELECT t0.c0, t0.c59 FROM t0, vt0, v0 WHERE (((CAST(((v0.c0) NOT NULL) AS TEXT)) ISNULL));
SELECT ALL t0.c0, t0.c59 FROM t0, vt0, v0;
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0 WHERE (CAST(((t0.c0) NOT NULL) AS INTEGER)) UNION SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0 NOT INDEXED WHERE ((NOT (CAST(((t0.c0) NOT NULL) AS INTEGER)))) UNION SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CAST(((t0.c0) NOT NULL) AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c59, vt0.c0, t0.c0 FROM vt0, t0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))>=((((((((((v0.c0)AND('M|')))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))>=((((((((((v0.c0)AND('M|')))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))>=((((((((((v0.c0)AND('M|')))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (((((v0.c0))>((v0.c0)))) IS FALSE) UNION ALL SELECT t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (NOT ((((((v0.c0))>((v0.c0)))) IS FALSE))) UNION ALL SELECT t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (((((((v0.c0))>((v0.c0)))) IS FALSE)) ISNULL);
SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (((((v0.c0))>((v0.c0)))) IS FALSE) UNION ALL SELECT t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (NOT ((((((v0.c0))>((v0.c0)))) IS FALSE))) UNION ALL SELECT t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59 HAVING (((((((v0.c0))>((v0.c0)))) IS FALSE)) ISNULL);
SELECT ALL t0.c0, v0.c0, t0.c59 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0, t0.c59;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0)||(((v0.c0)>=(v0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((vt0.c0)||(((v0.c0)>=(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)||(((v0.c0)>=(v0.c0))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c59)<<(t0.c59)))<>(((t0.c0) IS FALSE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c59)<<(t0.c59)))<>(((t0.c0) IS FALSE)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c59)<<(t0.c59)))<>(((t0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c59, v0.c0 FROM t0, v0 GROUP BY t0.c59, v0.c0;
SELECT ALL t0.c59, v0.c0 FROM t0, v0 WHERE (((+ (t0.c59)) IN ())) GROUP BY t0.c59, v0.c0 UNION SELECT t0.c59, v0.c0 FROM t0, v0 WHERE ((NOT (((+ (t0.c59)) IN ())))) GROUP BY t0.c59, v0.c0 UNION SELECT t0.c59, v0.c0 FROM t0, v0 WHERE (((((+ (t0.c59)) IN ())) ISNULL)) GROUP BY t0.c59, v0.c0;
SELECT ALL t0.c59, v0.c0 FROM t0, v0 GROUP BY t0.c59, v0.c0;
SELECT t0.c0, v0.c0, t0.c59, vt0.c0 FROM vt0, t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0;
SELECT t0.c0, v0.c0, t0.c59, vt0.c0 FROM vt0, t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0 HAVING ((AVG(SUM(MAX(vt0.c0))))&(t0.c59)) COLLATE NOCASE UNION ALL SELECT ALL t0.c0, v0.c0, t0.c59, vt0.c0 FROM vt0, t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0 HAVING (NOT (((AVG(SUM(MAX(vt0.c0))))&(t0.c59)) COLLATE NOCASE)) UNION ALL SELECT t0.c0, v0.c0, t0.c59, vt0.c0 FROM vt0, t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0 HAVING ((((AVG(SUM(MAX(vt0.c0))))&(t0.c59)) COLLATE NOCASE) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (t0.c59) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (t0.c59))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((t0.c59) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c59 FROM vt0, t0, v0;
SELECT DISTINCT vt0.c0, t0.c59 FROM vt0, t0, v0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) UNION SELECT DISTINCT vt0.c0, t0.c59 FROM vt0, t0, v0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)))) UNION SELECT DISTINCT vt0.c0, t0.c59 FROM vt0, t0, v0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c59 FROM vt0, t0, v0;
SELECT t0.c0, v0.c0, t0.c59, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((t0.c59)>(t0.c59))) NOT NULL) RIGHT OUTER JOIN t0 ON CASE WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN t0.c59 THEN t0.c0 WHEN v0.c0 THEN t0.c0 END THEN ((t0.c59)GLOB(vt0.c0)) WHEN STRFTIME(v0.c0, vt0.c0, t0.c59) THEN (((t0.c59))>=((t0.c59))) WHEN ('287936099' IN ()) THEN (((vt0.c0))=((t0.c0))) END GROUP BY t0.c0, v0.c0, t0.c59, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(COUNT(*)))<(CAST(v0.c0 AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(COUNT(*)))<(CAST(v0.c0 AS TEXT))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(COUNT(*)))<(CAST(v0.c0 AS TEXT)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c0)IS NOT(0.2544268821681074)))-(((t0.c0)>(t0.c59))));
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c0)IS NOT(0.2544268821681074)))-(((t0.c0)>(t0.c59)))) WHERE ((((((vt0.c0)||(t0.c59))))>((((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(t0.c59)))AND(vt0.c0)))AND(t0.c59)))AND(0.9047112197406085)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c0)IS NOT(0.2544268821681074)))-(((t0.c0)>(t0.c59)))) WHERE ((NOT ((((((vt0.c0)||(t0.c59))))>((((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(t0.c59)))AND(vt0.c0)))AND(t0.c59)))AND(0.9047112197406085)))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c0)IS NOT(0.2544268821681074)))-(((t0.c0)>(t0.c59)))) WHERE ((((((((vt0.c0)||(t0.c59))))>((((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(t0.c59)))AND(vt0.c0)))AND(t0.c59)))AND(0.9047112197406085)))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c0)IS NOT(0.2544268821681074)))-(((t0.c0)>(t0.c59))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0)IS NOT(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE ((v0.c0) ISNULL) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0)IS NOT(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE ((v0.c0) ISNULL) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0)IS NOT(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE ((v0.c0) ISNULL) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c59 FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((t0.c0 IN ()))) AND (((NOT (t0.c59))))) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((t0.c0 IN ()))) AND (((NOT (t0.c59))))) WHERE (((((t0.c0)&(t0.c59)))AND(json_remove(vt0.c0, vt0.c0, t0.c0, t0.c0)))) GROUP BY t0.c59 UNION SELECT t0.c59 FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((t0.c0 IN ()))) AND (((NOT (t0.c59))))) WHERE ((NOT (((((t0.c0)&(t0.c59)))AND(json_remove(vt0.c0, vt0.c0, t0.c0, t0.c0)))))) GROUP BY t0.c59 UNION SELECT t0.c59 FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((t0.c0 IN ()))) AND (((NOT (t0.c59))))) WHERE (((((((t0.c0)&(t0.c59)))AND(json_remove(vt0.c0, vt0.c0, t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((t0.c0 IN ()))) AND (((NOT (t0.c59))))) GROUP BY t0.c59;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c59, t0.c0 FROM vt0, t0 LEFT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY;
SELECT ALL t0.c59, t0.c0 FROM vt0, t0 LEFT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY WHERE (ABS(((v0.c0) NOT NULL))) UNION ALL SELECT t0.c59, t0.c0 FROM vt0, t0 LEFT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY WHERE ((NOT (ABS(((v0.c0) NOT NULL))))) UNION ALL SELECT t0.c59, t0.c0 FROM vt0, t0 LEFT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY WHERE (((ABS(((v0.c0) NOT NULL))) ISNULL));
SELECT ALL t0.c59, t0.c0 FROM vt0, t0 LEFT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (COALESCE(v0.c0, NULL, v0.c0, v0.c0) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (COALESCE(v0.c0, NULL, v0.c0, v0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE (((COALESCE(v0.c0, NULL, v0.c0, v0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((NULL) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((NULL) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((NULL) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0;
SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING SUM(NULL) UNION ALL SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0;
SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING SUM(NULL) UNION ALL SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT v0.c0, vt0.c0, t0.c59, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(LIKELIHOOD(vt0.c0, 0.9864914560921152) AS TEXT) CROSS JOIN v0 ON vt0.c0 GROUP BY v0.c0, vt0.c0, t0.c59, t0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c59, t0.c0 FROM t0;
SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c59) AND (x''))) ISNULL)) UNION SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c59) AND (x''))) ISNULL)))) UNION SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c59) AND (x''))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c59, t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0, vt0 WHERE ((((t0.c0 IN ())) BETWEEN (CASE WHEN v0.c0 THEN t0.c59 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c59 ELSE v0.c0 END) AND ((((0.4159067057673935))>((v0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0, vt0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (CASE WHEN v0.c0 THEN t0.c59 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c59 ELSE v0.c0 END) AND ((((0.4159067057673935))>((v0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0, vt0 WHERE ((((((t0.c0 IN ())) BETWEEN (CASE WHEN v0.c0 THEN t0.c59 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c59 ELSE v0.c0 END) AND ((((0.4159067057673935))>((v0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 GROUP BY v0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 GROUP BY v0.c0, t0.c0, t0.c59 HAVING TOTAL(MAX(t0.c59)) UNION ALL SELECT v0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 GROUP BY v0.c0, t0.c0, t0.c59 HAVING (NOT (TOTAL(MAX(t0.c59)))) UNION ALL SELECT v0.c0, t0.c0, t0.c59 FROM v0, t0, vt0 GROUP BY v0.c0, t0.c0, t0.c59 HAVING ((TOTAL(MAX(t0.c59))) ISNULL);
SELECT ALL MAX(((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS((~ (vt0.c0))))) FROM v0, vt0 ORDER BY ((((DATETIME(vt0.c0, v0.c0, vt0.c0))AND((((vt0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0))<>((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0))))))AND(x'')) DESC  NULLS LAST, ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)AND(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ASC, CAST(TOTAL_CHANGES() AS BLOB)  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN vt0 ON TYPEOF((((t0.c0))>=((t0.c0))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON TYPEOF((((t0.c0))>=((t0.c0)))) WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (+ (vt0.c0)) ELSE ((t0.c0) ISNULL) END) UNION ALL SELECT * FROM t0 CROSS JOIN vt0 ON TYPEOF((((t0.c0))>=((t0.c0)))) WHERE ((NOT (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (+ (vt0.c0)) ELSE ((t0.c0) ISNULL) END))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt0 ON TYPEOF((((t0.c0))>=((t0.c0)))) WHERE (((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (+ (vt0.c0)) ELSE ((t0.c0) ISNULL) END) ISNULL));
SELECT * FROM t0 CROSS JOIN vt0 ON TYPEOF((((t0.c0))>=((t0.c0))));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON UPPER(DISTINCT ((vt0.c0)==('-1709374446')));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON UPPER(DISTINCT ((vt0.c0)==('-1709374446'))) WHERE (((((((vt0.c0) IS FALSE))AND((((t0.c0, t0.c0, v0.c0)) BETWEEN ((NULL, t0.c0, t0.c59)) AND ((t0.c0, t0.c0, v0.c0))))))OR((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON UPPER(DISTINCT ((vt0.c0)==('-1709374446'))) WHERE ((NOT (((((((vt0.c0) IS FALSE))AND((((t0.c0, t0.c0, v0.c0)) BETWEEN ((NULL, t0.c0, t0.c59)) AND ((t0.c0, t0.c0, v0.c0))))))OR((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON UPPER(DISTINCT ((vt0.c0)==('-1709374446'))) WHERE (((((((((vt0.c0) IS FALSE))AND((((t0.c0, t0.c0, v0.c0)) BETWEEN ((NULL, t0.c0, t0.c59)) AND ((t0.c0, t0.c0, v0.c0))))))OR((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON UPPER(DISTINCT ((vt0.c0)==('-1709374446')));
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59;
SELECT t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0 NOT INDEXED, vt0, t0 WHERE (CAST(((((t0.c59)AND(vt0.c0)))OR(v0.c0)) AS BLOB)) GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59 UNION SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 WHERE ((NOT (CAST(((((t0.c59)AND(vt0.c0)))OR(v0.c0)) AS BLOB)))) GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59 UNION SELECT t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 WHERE (((CAST(((((t0.c59)AND(vt0.c0)))OR(v0.c0)) AS BLOB)) ISNULL)) GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59;
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59;
SELECT t0.c59, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c59, vt0.c0, t0.c0;
SELECT t0.c59, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING TOTAL(GROUP_CONCAT(MIN(MAX(TOTAL(AVG(t0.c59)))))) UNION ALL SELECT t0.c59, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MIN(MAX(TOTAL(AVG(t0.c59)))))))) UNION ALL SELECT ALL t0.c59, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c59, vt0.c0, t0.c0 HAVING ((TOTAL(GROUP_CONCAT(MIN(MAX(TOTAL(AVG(t0.c59))))))) ISNULL);
SELECT ALL TOTAL(((((((((v0.c0)OR(x'')))OR(v0.c0)))AND(((t0.c59) ISNULL))))AND(NULL))) FROM t0, v0 ORDER BY NULL  NULLS FIRST;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN x'6af87344' END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN x'6af87344' END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN x'6af87344' END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59;
SELECT ALL vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59 HAVING AVG(0.5009118303948206) UNION ALL SELECT vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59 HAVING (NOT (AVG(0.5009118303948206))) UNION ALL SELECT ALL vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59 HAVING ((AVG(0.5009118303948206)) ISNULL);
SELECT vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59;
SELECT ALL vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59 HAVING AVG(0.5009118303948206) UNION ALL SELECT vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59 HAVING (NOT (AVG(0.5009118303948206))) UNION ALL SELECT ALL vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59 HAVING ((AVG(0.5009118303948206)) ISNULL);
SELECT vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59;
SELECT * FROM v0 CROSS JOIN t0 ON (((CAST(vt0.c0 AS NUMERIC)))<=((((vt0.c0) NOT NULL)))) CROSS JOIN vt0 ON (((((0X417e0d5c) IS FALSE)))<=((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0)))));
SELECT * FROM v0 CROSS JOIN t0 ON (((CAST(vt0.c0 AS NUMERIC)))<=((((vt0.c0) NOT NULL)))) CROSS JOIN vt0 ON (((((0x417e0d5c) IS FALSE)))<=((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0))))) WHERE (((((vt0.c0)LIKE(t0.c59)))IS(t0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON (((CAST(vt0.c0 AS NUMERIC)))<=((((vt0.c0) NOT NULL)))) CROSS JOIN vt0 ON (((((0X417e0d5c) IS FALSE)))<=((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0))))) WHERE ((NOT (((((vt0.c0)LIKE(t0.c59)))IS(t0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON (((CAST(vt0.c0 AS NUMERIC)))<=((((vt0.c0) NOT NULL)))) CROSS JOIN vt0 ON (((((0X417e0d5c) IS FALSE)))<=((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0))))) WHERE (((((((vt0.c0)LIKE(t0.c59)))IS(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM v0 CROSS JOIN t0 ON (((CAST(vt0.c0 AS NUMERIC)))<=((((vt0.c0) NOT NULL)))) CROSS JOIN vt0 ON (((((0X417e0d5c) IS FALSE)))<=((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0)))));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON json_array(CASE WHEN vt0.c0 THEN 0x17635e51 ELSE vt0.c0 END, CAST(v0.c0 AS TEXT), 0.4933547761095213, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON json_array(CASE WHEN vt0.c0 THEN 0x17635e51 ELSE vt0.c0 END, CAST(v0.c0 AS TEXT), 0.4933547761095213, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))>=((v0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON json_array(CASE WHEN vt0.c0 THEN 0x17635e51 ELSE vt0.c0 END, CAST(v0.c0 AS TEXT), 0.4933547761095213, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))>=((v0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON json_array(CASE WHEN vt0.c0 THEN 0x17635e51 ELSE vt0.c0 END, CAST(v0.c0 AS TEXT), 0.4933547761095213, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))>=((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON json_array(CASE WHEN vt0.c0 THEN 0x17635e51 ELSE vt0.c0 END, CAST(v0.c0 AS TEXT), 0.4933547761095213, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((((NOT (vt0.c0)))*(((t0.c0)<(t0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((NOT ((((NOT (vt0.c0)))*(((t0.c0)<(t0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((((((NOT (vt0.c0)))*(((t0.c0)<(t0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0Xffffffff96de26ba UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0xffffffff96de26ba)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0Xffffffff96de26ba) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0Xffffffff96de26ba UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0xffffffff96de26ba)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0Xffffffff96de26ba) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c59, t0.c0 FROM vt0, t0;
SELECT t0.c59, t0.c0 FROM vt0, t0 WHERE (CASE WHEN ((((vt0.c0)AND(t0.c0)))AND('Y6,F{B1')) THEN ((-331019081) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((NULL, t0.c0, t0.c0)) BETWEEN ((t0.c59, t0.c0, t0.c59)) AND ((x'', x'', t0.c0))) THEN ((t0.c0) IS TRUE) WHEN load_extension(t0.c59, t0.c0) THEN ((vt0.c0) NOT BETWEEN (t0.c59) AND (t0.c0)) END) UNION ALL SELECT ALL t0.c59, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN ((((vt0.c0)AND(t0.c0)))AND('Y6,F{B1')) THEN ((-331019081) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((NULL, t0.c0, t0.c0)) BETWEEN ((t0.c59, t0.c0, t0.c59)) AND ((x'', x'', t0.c0))) THEN ((t0.c0) IS TRUE) WHEN load_extension(t0.c59, t0.c0) THEN ((vt0.c0) NOT BETWEEN (t0.c59) AND (t0.c0)) END))) UNION ALL SELECT ALL t0.c59, t0.c0 FROM vt0, t0 WHERE (((CASE WHEN ((((vt0.c0)AND(t0.c0)))AND('Y6,F{B1')) THEN ((-331019081) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((NULL, t0.c0, t0.c0)) BETWEEN ((t0.c59, t0.c0, t0.c59)) AND ((x'', x'', t0.c0))) THEN ((t0.c0) IS TRUE) WHEN load_extension(t0.c59, t0.c0) THEN ((vt0.c0) NOT BETWEEN (t0.c59) AND (t0.c0)) END) ISNULL));
SELECT t0.c59, t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((v0.c0)&(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((v0.c0)&(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND ((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((v0.c0)&(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL t0.c59, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((t0.c59)) NOT BETWEEN ((CASE 0.8620724284898867  WHEN t0.c59 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN t0.c59 THEN 0.352846109106117 END)) AND ((((v0.c0)%(v0.c0))))) FULL OUTER JOIN t0 ON t0.c59 GROUP BY t0.c59, v0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING CASE WHEN (((COUNT(*)))>=((vt0.c0))) THEN ((((t0.c0)AND(COUNT(t0.c59))))AND(t0.c59)) WHEN COUNT(*) THEN (- (t0.c0)) WHEN vt0.c0 COLLATE BINARY THEN MIN(t0.c0) ELSE MAX(t0.c0) END UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN (((COUNT(*)))>=((vt0.c0))) THEN ((((t0.c0)AND(COUNT(t0.c59))))AND(t0.c59)) WHEN COUNT(*) THEN (- (t0.c0)) WHEN vt0.c0 COLLATE BINARY THEN MIN(t0.c0) ELSE MAX(t0.c0) END)) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((CASE WHEN (((COUNT(*)))>=((vt0.c0))) THEN ((((t0.c0)AND(COUNT(t0.c59))))AND(t0.c59)) WHEN COUNT(*) THEN (- (t0.c0)) WHEN vt0.c0 COLLATE BINARY THEN MIN(t0.c0) ELSE MAX(t0.c0) END) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING CASE WHEN (((COUNT(*)))>=((vt0.c0))) THEN ((((t0.c0)AND(COUNT(t0.c59))))AND(t0.c59)) WHEN COUNT(*) THEN (- (t0.c0)) WHEN vt0.c0 COLLATE BINARY THEN MIN(t0.c0) ELSE MAX(t0.c0) END UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN (((COUNT(*)))>=((vt0.c0))) THEN ((((t0.c0)AND(COUNT(t0.c59))))AND(t0.c59)) WHEN COUNT(*) THEN (- (t0.c0)) WHEN vt0.c0 COLLATE BINARY THEN MIN(t0.c0) ELSE MAX(t0.c0) END)) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((CASE WHEN (((COUNT(*)))>=((vt0.c0))) THEN ((((t0.c0)AND(COUNT(t0.c59))))AND(t0.c59)) WHEN COUNT(*) THEN (- (t0.c0)) WHEN vt0.c0 COLLATE BINARY THEN MIN(t0.c0) ELSE MAX(t0.c0) END) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0, t0.c59 FROM vt0, t0;
SELECT t0.c0, vt0.c0, t0.c59 FROM vt0, t0 WHERE (t0.c59) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c59 FROM vt0, t0 WHERE ((NOT (t0.c59))) UNION ALL SELECT t0.c0, vt0.c0, t0.c59 FROM vt0, t0 WHERE (((t0.c59) ISNULL));
SELECT t0.c0, vt0.c0, t0.c59 FROM vt0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CASE (~ (t0.c59))  WHEN v0.c0 THEN (NOT (t0.c59)) ELSE UPPER(v0.c0) END) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CASE (~ (t0.c59))  WHEN v0.c0 THEN (NOT (t0.c59)) ELSE UPPER(v0.c0) END))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CASE (~ (t0.c59))  WHEN v0.c0 THEN (NOT (t0.c59)) ELSE UPPER(v0.c0) END) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (LOWER(DISTINCT ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (LOWER(DISTINCT ((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((LOWER(DISTINCT ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING (~ (COUNT(t0.c59))) UNION ALL SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING (NOT ((~ (COUNT(t0.c59))))) UNION ALL SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING (((~ (COUNT(t0.c59)))) ISNULL);
SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING (~ (COUNT(t0.c59))) UNION ALL SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING (NOT ((~ (COUNT(t0.c59))))) UNION ALL SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0 HAVING (((~ (COUNT(t0.c59)))) ISNULL);
SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c59, t0.c0, v0.c0;
SELECT MAX(CASE t0.c0 COLLATE BINARY  WHEN ((t0.c59)<(vt0.c0)) THEN CASE WHEN t0.c0 THEN t0.c59 WHEN t0.c0 THEN t0.c59 WHEN vt0.c0 THEN vt0.c0 END WHEN (((t0.c0))<>((t0.c59))) THEN ((t0.c0)<<(vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (NULL IN ()) WHEN vt0.c0 THEN t0.c59 WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ('-628824686', 0.8206404874780784, t0.c59)) END) FROM vt0, t0 ORDER BY '2024311564' ASC  NULLS LAST;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (t0.c59) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (t0.c59))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((t0.c59) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE NOCASE) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE NOCASE) WHERE ('-2047300449') GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE NOCASE) WHERE ((NOT ('-2047300449'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE NOCASE) WHERE ((('-2047300449') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE NOCASE) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING TOTAL(((MIN(''))AND(AVG(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((MIN(''))AND(AVG(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((TOTAL(((MIN(''))AND(AVG(GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((- (t0.c59))) IS TRUE)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c59))) IS TRUE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((- (t0.c59))) IS TRUE)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c59, t0.c0, v0.c0, vt0.c0 FROM vt0, t0, v0;
SELECT DISTINCT t0.c59, t0.c0, v0.c0, vt0.c0 FROM vt0, t0, v0 WHERE (((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t0.c59)) AND ((t0.c59, t0.c0, t0.c0))) IN ())) UNION SELECT DISTINCT t0.c59, t0.c0, v0.c0, vt0.c0 FROM vt0, t0, v0 WHERE ((NOT (((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t0.c59)) AND ((t0.c59, t0.c0, t0.c0))) IN ())))) UNION SELECT DISTINCT t0.c59, t0.c0, v0.c0, vt0.c0 FROM vt0, t0, v0 WHERE (((((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t0.c59)) AND ((t0.c59, t0.c0, t0.c0))) IN ())) ISNULL));
SELECT DISTINCT t0.c59, t0.c0, v0.c0, vt0.c0 FROM vt0, t0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((0.33757526941187765)*(UPPER(DISTINCT vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((0.33757526941187765)*(UPPER(DISTINCT vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((0.33757526941187765)*(UPPER(DISTINCT vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0)) NOT BETWEEN ((MAX(v0.c0))) AND ((((COUNT(*))||(MAX(SUM(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0)) NOT BETWEEN ((MAX(v0.c0))) AND ((((COUNT(*))||(MAX(SUM(v0.c0))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) NOT BETWEEN ((MAX(v0.c0))) AND ((((COUNT(*))||(MAX(SUM(v0.c0)))))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<=(json_quote(t0.c59)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<=(json_quote(t0.c59)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<=(json_quote(t0.c59)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0, t0 INDEXED BY i28, vt0;
SELECT DISTINCT * FROM v0, t0 INDEXED BY i28, vt0 WHERE ((((NOT (vt0.c0)))IS(t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, t0 INDEXED BY i28, vt0 WHERE ((NOT ((((NOT (vt0.c0)))IS(t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0, t0 INDEXED BY i28, vt0 WHERE ((((((NOT (vt0.c0)))IS(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0, t0 INDEXED BY i28, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 6.73111868E8 WHEN '' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE '2091062128' END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 6.73111868E8 WHEN '' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE '2091062128' END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 6.73111868E8 WHEN '' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE '2091062128' END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c59 FROM v0 CROSS JOIN t0 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (x'') AND (vt0.c0)) CROSS JOIN vt0 ON ((t0.c0)IS((('504624007')IS(t0.c59)))) GROUP BY t0.c59;
SELECT ALL t0.c59 FROM v0 CROSS JOIN t0 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (x'') AND (vt0.c0)) CROSS JOIN vt0 ON ((t0.c0)IS((('504624007')IS(t0.c59)))) GROUP BY t0.c59 HAVING ((((((v0.c0)AND(vt0.c0)))AND(t0.c0))) NOT BETWEEN (SUM(MIN(SUM(t0.c59)))) AND (CASE GROUP_CONCAT(COUNT(vt0.c0))  WHEN ']	3a' THEN TOTAL(MAX(t0.c59)) END)) UNION ALL SELECT ALL t0.c59 FROM v0 CROSS JOIN t0 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (x'') AND (vt0.c0)) CROSS JOIN vt0 ON ((t0.c0)IS((('504624007')IS(t0.c59)))) GROUP BY t0.c59 HAVING (NOT (((((((v0.c0)AND(vt0.c0)))AND(t0.c0))) NOT BETWEEN (SUM(MIN(SUM(t0.c59)))) AND (CASE GROUP_CONCAT(COUNT(vt0.c0))  WHEN ']	3a' THEN TOTAL(MAX(t0.c59)) END)))) UNION ALL SELECT t0.c59 FROM v0 CROSS JOIN t0 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (x'') AND (vt0.c0)) CROSS JOIN vt0 ON ((t0.c0)IS((('504624007')IS(t0.c59)))) GROUP BY t0.c59 HAVING ((((((((v0.c0)AND(vt0.c0)))AND(t0.c0))) NOT BETWEEN (SUM(MIN(SUM(t0.c59)))) AND (CASE GROUP_CONCAT(COUNT(vt0.c0))  WHEN ']	3a' THEN TOTAL(MAX(t0.c59)) END))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<(((- (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<(((- (v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<(((- (v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT t0.c59 FROM t0, v0, vt0;
SELECT DISTINCT t0.c59 FROM t0, v0, vt0 WHERE ((((t0.c0 IN ())) IS TRUE)) UNION SELECT DISTINCT t0.c59 FROM t0, v0, vt0 WHERE ((NOT ((((t0.c0 IN ())) IS TRUE)))) UNION SELECT DISTINCT t0.c59 FROM t0, v0, vt0 WHERE ((((((t0.c0 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c59 FROM t0, v0, vt0;
SELECT ALL t0.c0, t0.c59, vt0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0;
SELECT ALL t0.c0, t0.c59, vt0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE (LIKELIHOOD(UPPER(t0.c0), 0.3156240338405194)) GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, t0.c59, vt0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE ((NOT (LIKELIHOOD(UPPER(t0.c0), 0.3156240338405194)))) GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, t0.c59, vt0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE (((LIKELIHOOD(UPPER(t0.c0), 0.3156240338405194)) ISNULL)) GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0;
SELECT ALL t0.c0, t0.c59, vt0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0;
SELECT ALL t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59;
SELECT t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59 HAVING ((((((((GROUP_CONCAT(t0.c0))AND(MIN(AVG(t0.c59)) COLLATE RTRIM)))OR((((t0.c59))==((NULL))))))OR((GROUP_CONCAT(t0.c59) IN ()))))OR(AVG(t0.c59))) UNION ALL SELECT t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59 HAVING (NOT (((((((((GROUP_CONCAT(t0.c0))AND(MIN(AVG(t0.c59)) COLLATE RTRIM)))OR((((t0.c59))==((NULL))))))OR((GROUP_CONCAT(t0.c59) IN ()))))OR(AVG(t0.c59))))) UNION ALL SELECT t0.c0, t0.c59 FROM t0 GROUP BY t0.c0, t0.c59 HAVING ((((((((((GROUP_CONCAT(t0.c0))AND(MIN(AVG(t0.c59)) COLLATE RTRIM)))OR((((t0.c59))=((NULL))))))OR((GROUP_CONCAT(t0.c59) IN ()))))OR(AVG(t0.c59)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((~ (CAST(t0.c0 AS REAL)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((~ (CAST(t0.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((~ (CAST(t0.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 WHERE (COALESCE(CAST(vt0.c0 AS REAL), v0.c0 COLLATE NOCASE)) GROUP BY t0.c0, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 WHERE ((NOT (COALESCE(CAST(vt0.c0 AS REAL), v0.c0 COLLATE NOCASE)))) GROUP BY t0.c0, vt0.c0, v0.c0 UNION SELECT t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 WHERE (((COALESCE(CAST(vt0.c0 AS REAL), v0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c59 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c59;
SELECT vt0.c0, t0.c59 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c59 HAVING COUNT(TOTAL(AVG(MIN(t0.c0)))) UNION ALL SELECT ALL vt0.c0, t0.c59 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c59 HAVING (NOT (COUNT(TOTAL(AVG(MIN(t0.c0)))))) UNION ALL SELECT vt0.c0, t0.c59 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c59 HAVING ((COUNT(TOTAL(AVG(MIN(t0.c0))))) ISNULL);
SELECT ALL SUM((((((t0.c59)OR(x'')))OR(v0.c0)) IN ())) FROM v0, vt0, t0;
SELECT ALL * FROM vt0, v0, t0;
SELECT * FROM vt0, v0, t0 WHERE (((((t0.c59) ISNULL)) NOT BETWEEN (0.8150147664141215) AND (((((((((vt0.c0)AND(t0.c59)))AND(t0.c59)))AND(v0.c0)))AND(t0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE ((NOT (((((t0.c59) ISNULL)) NOT BETWEEN (0.8150147664141215) AND (((((((((vt0.c0)AND(t0.c59)))AND(t0.c59)))AND(v0.c0)))AND(t0.c0))))))) UNION ALL SELECT * FROM vt0, v0, t0 WHERE (((((((t0.c59) ISNULL)) NOT BETWEEN (0.8150147664141215) AND (((((((((vt0.c0)AND(t0.c59)))AND(t0.c59)))AND(v0.c0)))AND(t0.c0))))) ISNULL));
SELECT ALL * FROM vt0, v0, t0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))<((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))<((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))<((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT t0.c59, v0.c0 FROM t0, v0 NATURAL JOIN vt0 GROUP BY t0.c59, v0.c0;
SELECT t0.c59, v0.c0 FROM t0, v0 NATURAL JOIN vt0 WHERE (((((((x'') IS TRUE))OR((((0.7061201909231825, v0.c0, NULL, v0.c0, vt0.c0))>((vt0.c0, v0.c0, t0.c0, t0.c59, vt0.c0))))))OR((~ (t0.c0))))) GROUP BY t0.c59, v0.c0 UNION SELECT t0.c59, v0.c0 FROM t0, v0 NATURAL JOIN vt0 WHERE ((NOT (((((((x'') IS TRUE))OR((((0.7061201909231825, v0.c0, NULL, v0.c0, vt0.c0))>((vt0.c0, v0.c0, t0.c0, t0.c59, vt0.c0))))))OR((~ (t0.c0))))))) GROUP BY t0.c59, v0.c0 UNION SELECT ALL t0.c59, v0.c0 FROM t0, v0 NATURAL JOIN vt0 WHERE (((((((((x'') IS TRUE))OR((((0.7061201909231825, v0.c0, NULL, v0.c0, vt0.c0))>((vt0.c0, v0.c0, t0.c0, t0.c59, vt0.c0))))))OR((~ (t0.c0))))) ISNULL)) GROUP BY t0.c59, v0.c0;
SELECT t0.c59, v0.c0 FROM t0, v0 NATURAL JOIN vt0 GROUP BY t0.c59, v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(SUM(t0.c59)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(SUM(t0.c59)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(SUM(t0.c59))) ISNULL);
SELECT ALL MAX(((((((((((((((t0.c59) IS FALSE))AND(SQLITE_VERSION())))OR(((v0.c0)OR(t0.c59)))))AND(((t0.c0)>(0.9697388417795737)))))AND((t0.c59 IN ()))))OR(t0.c59)))OR(CAST(t0.c0 AS TEXT)))) FROM vt0, t0, v0 ORDER BY ((0.38060896505810304) BETWEEN (((t0.c0)%(t0.c59))) AND (CAST(t0.c0 AS REAL))) DESC  NULLS LAST, '-806975809' DESC;
SELECT ALL v0.c0, vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON ((((CAST(v0.c0 AS REAL))OR((v0.c0 IN (0.900758675999711, t0.c59)))))AND(((vt0.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON CAST(t0.c59 AS NUMERIC);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)AND(NULL)))AND(v0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0)AND(NULL)))AND(v0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)AND(NULL)))AND(v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (TRIM(TRIM(DISTINCT v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (TRIM(TRIM(DISTINCT v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((TRIM(TRIM(DISTINCT v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(DISTINCT COUNT(*), (vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(DISTINCT COUNT(*), (vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(DISTINCT COUNT(*), (vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(DISTINCT COUNT(*), (vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(DISTINCT COUNT(*), (vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(DISTINCT COUNT(*), (vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (LTRIM(v0.c0, x'848f') COLLATE NOCASE) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (LTRIM(v0.c0, x'848f') COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((LTRIM(v0.c0, x'848f') COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CAST(((v0.c0) NOT NULL) AS BLOB)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CAST(((v0.c0) NOT NULL) AS BLOB)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CAST(((v0.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59;
SELECT t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59 HAVING ((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (MIN(AVG(t0.c59)))) UNION ALL SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59 HAVING (NOT (((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (MIN(AVG(t0.c59)))))) UNION ALL SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0, t0.c59 HAVING ((((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (MIN(AVG(t0.c59))))) ISNULL);
SELECT t0.c59, vt0.c0 FROM t0, vt0;
SELECT t0.c59, vt0.c0 FROM t0, vt0 WHERE (CASE ((vt0.c0)<=(t0.c0))  WHEN (((vt0.c0))<=((t0.c59))) THEN ((vt0.c0)LIKE(vt0.c0)) END) UNION ALL SELECT t0.c59, vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE ((vt0.c0)<=(t0.c0))  WHEN (((vt0.c0))<=((t0.c59))) THEN ((vt0.c0)LIKE(vt0.c0)) END))) UNION ALL SELECT t0.c59, vt0.c0 FROM t0, vt0 WHERE (((CASE ((vt0.c0)<=(t0.c0))  WHEN (((vt0.c0))<=((t0.c59))) THEN ((vt0.c0)LIKE(vt0.c0)) END) ISNULL));
SELECT t0.c59, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, t0.c59 FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0))!=((t0.c0))) IN ());
SELECT DISTINCT t0.c0, t0.c59 FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0))!=((t0.c0))) IN ()) WHERE ((('&Jr')OR(CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT t0.c0, t0.c59 FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0))<>((t0.c0))) IN ()) WHERE ((NOT ((('&Jr')OR(CAST(t0.c0 AS INTEGER)))))) UNION SELECT DISTINCT t0.c0, t0.c59 FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0))!=((t0.c0))) IN ()) WHERE ((((('&Jr')OR(CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c59 FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0))!=((t0.c0))) IN ());
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)>>(v0.c0)))AND(v0.c0)))OR('y/'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)>>(v0.c0)))AND(v0.c0)))OR('y/'))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)>>(v0.c0)))AND(v0.c0)))OR('y/'))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0 FROM v0, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, vt0, t0 GROUP BY t0.c0 HAVING MIN((+ (GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL t0.c0 FROM v0, vt0, t0 GROUP BY t0.c0 HAVING (NOT (MIN((+ (GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM v0, vt0, t0 GROUP BY t0.c0 HAVING ((MIN((+ (GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN -817871908 THEN x'' END ELSE vt0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE (NOT (vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN -817871908 THEN x'' END ELSE vt0.c0 COLLATE NOCASE END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE (NOT (vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN -817871908 THEN x'' END ELSE vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59;
SELECT vt0.c0, t0.c59 FROM vt0, t0 WHERE (CASE WHEN (((t0.c0))<=((t0.c0))) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE 0.13167884673043828 END) GROUP BY vt0.c0, t0.c59 UNION SELECT vt0.c0, t0.c59 FROM vt0, t0 WHERE ((NOT (CASE WHEN (((t0.c0))<=((t0.c0))) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE 0.13167884673043828 END))) GROUP BY vt0.c0, t0.c59 UNION SELECT vt0.c0, t0.c59 FROM vt0, t0 WHERE (((CASE WHEN (((t0.c0))<=((t0.c0))) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE 0.13167884673043828 END) ISNULL)) GROUP BY vt0.c0, t0.c59;
SELECT vt0.c0, t0.c59 FROM vt0, t0 GROUP BY vt0.c0, t0.c59;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM t0, v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE ((((t0.c0)) BETWEEN ((LTRIM(t0.c0))) AND ((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE ((NOT ((((t0.c0)) BETWEEN ((LTRIM(t0.c0))) AND ((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE ((((((t0.c0)) BETWEEN ((LTRIM(t0.c0))) AND ((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM t0, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0, t0;
SELECT DISTINCT v0.c0 FROM v0, vt0, t0 WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 END) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, t0 WHERE ((NOT (CASE WHEN t0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, t0 WHERE (((CASE WHEN t0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (3.92388177E8) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (3.92388177E8))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((3.92388177E8) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0;
SELECT ALL v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0 HAVING COUNT(TOTAL_CHANGES()) UNION ALL SELECT ALL v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0 HAVING (NOT (COUNT(TOTAL_CHANGES()))) UNION ALL SELECT v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0 HAVING ((COUNT(TOTAL_CHANGES())) ISNULL);
SELECT v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0;
SELECT ALL v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0 HAVING COUNT(TOTAL_CHANGES()) UNION ALL SELECT ALL v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0 HAVING (NOT (COUNT(TOTAL_CHANGES()))) UNION ALL SELECT v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0 HAVING ((COUNT(TOTAL_CHANGES())) ISNULL);
SELECT v0.c0, t0.c59, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c59, t0.c0;
SELECT ALL t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0;
SELECT t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE (((t0.c0)<(v0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE ((NOT (((t0.c0)<(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE (((((t0.c0)<(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c59, vt0.c0, t0.c0 FROM v0, vt0, t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS INTEGER) AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS INTEGER) AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c0, t0.c59, vt0.c0, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c59 GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0;
SELECT t0.c0, t0.c59, vt0.c0, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c59 WHERE ((~ (CASE WHEN vt0.c0 THEN t0.c59 WHEN t0.c59 THEN x'' WHEN '' THEN vt0.c0 END))) GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, t0.c59, vt0.c0, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c59 WHERE ((NOT ((~ (CASE WHEN vt0.c0 THEN t0.c59 WHEN t0.c59 THEN x'' WHEN '' THEN vt0.c0 END))))) GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0 UNION SELECT t0.c0, t0.c59, vt0.c0, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c59 WHERE ((((~ (CASE WHEN vt0.c0 THEN t0.c59 WHEN t0.c59 THEN x'' WHEN '' THEN vt0.c0 END))) ISNULL)) GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0;
SELECT t0.c0, t0.c59, vt0.c0, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c59 GROUP BY t0.c0, t0.c59, vt0.c0, v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt0, v0 INNER JOIN t0 ON (((x'' COLLATE BINARY))<(('1{8[]j')));
SELECT * FROM vt0, v0 INNER JOIN t0 ON (((x'' COLLATE BINARY))<(('1{8[]j'))) WHERE (CAST(QUOTE(v0.c0) AS REAL)) UNION ALL SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON (((x'' COLLATE BINARY))<(('1{8[]j'))) WHERE ((NOT (CAST(QUOTE(v0.c0) AS REAL)))) UNION ALL SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON (((x'' COLLATE BINARY))<(('1{8[]j'))) WHERE (((CAST(QUOTE(v0.c0) AS REAL)) ISNULL));
SELECT * FROM vt0, v0 INNER JOIN t0 ON (((x'' COLLATE BINARY))<(('1{8[]j')));
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT DISTINCT * FROM vt0, t0, v0 WHERE (((((((vt0.c0)AND(t0.c59)))AND(v0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT (((((((vt0.c0)AND(t0.c59)))AND(v0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE (((((((((vt0.c0)AND(t0.c59)))AND(v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (STRFTIME(CAST(t0.c59 AS REAL), ((t0.c0)<>(t0.c0)), t0.c59)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (STRFTIME(CAST(t0.c59 AS REAL), ((t0.c0)<>(t0.c0)), t0.c59)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((STRFTIME(CAST(t0.c59 AS REAL), ((t0.c0)!=(t0.c0)), t0.c59)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(x'') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(x'')) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(x'') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(x'')) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM(((vt0.c0 COLLATE NOCASE)%(x'' COLLATE BINARY))) FROM vt0, v0 ORDER BY ((v0.c0) NOT BETWEEN (((('504624007', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))) AND (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))));
SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM v0, vt0 CROSS JOIN t0 ON (((t0.c0)IS NOT('^픮^oa.6')) IN ((t0.c59 IN ())));
SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM v0, vt0 CROSS JOIN t0 ON (((t0.c0)IS NOT('^픮^oa.6')) IN ((t0.c59 IN ()))) WHERE (vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, t0.c59, t0.c0, v0.c0 FROM v0, vt0 CROSS JOIN t0 ON (((t0.c0)IS NOT('^픮^oa.6')) IN ((t0.c59 IN ()))) WHERE ((NOT (vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM v0, vt0 CROSS JOIN t0 ON (((t0.c0)IS NOT('^픮^oa.6')) IN ((t0.c59 IN ()))) WHERE (((vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT vt0.c0, t0.c59, t0.c0, v0.c0 FROM v0, vt0 CROSS JOIN t0 ON (((t0.c0)IS NOT('^픮^oa.6')) IN ((t0.c59 IN ())));
SELECT DISTINCT v0.c0, t0.c0, t0.c59, vt0.c0 FROM t0, vt0, v0;
SELECT DISTINCT v0.c0, t0.c0, t0.c59, vt0.c0 FROM t0, vt0, v0 WHERE ((((v0.c0) NOT NULL) IN (TRIM(DISTINCT t0.c0, v0.c0), t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c59, vt0.c0 FROM t0, vt0, v0 WHERE ((NOT ((((v0.c0) NOT NULL) IN (TRIM(DISTINCT t0.c0, v0.c0), t0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c59, vt0.c0 FROM t0, vt0, v0 WHERE ((((((v0.c0) NOT NULL) IN (TRIM(DISTINCT t0.c0, v0.c0), t0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, t0.c59, vt0.c0 FROM t0, vt0, v0;
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0 WHERE (((((((t0.c59)AND(t0.c59)))AND(v0.c0))) NOT BETWEEN (t0.c59 COLLATE RTRIM) AND (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c0))))) GROUP BY vt0.c0, t0.c0, v0.c0 UNION SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, t0 NOT INDEXED, v0 WHERE ((NOT (((((((t0.c59)AND(t0.c59)))AND(v0.c0))) NOT BETWEEN (t0.c59 COLLATE RTRIM) AND (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c0))))))) GROUP BY vt0.c0, t0.c0, v0.c0 UNION SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0 WHERE (((((((((t0.c59)AND(t0.c59)))AND(v0.c0))) NOT BETWEEN (t0.c59 COLLATE RTRIM) AND (((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT t0.c0, t0.c59, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, t0.c59, v0.c0;
SELECT t0.c0, t0.c59, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, t0.c59, v0.c0 HAVING MAX(TOTAL(t0.c59)) UNION ALL SELECT ALL t0.c0, t0.c59, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, t0.c59, v0.c0 HAVING (NOT (MAX(TOTAL(t0.c59)))) UNION ALL SELECT ALL t0.c0, t0.c59, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, t0.c59, v0.c0 HAVING ((MAX(TOTAL(t0.c59))) ISNULL);
SELECT t0.c0 FROM t0, vt0, v0;
SELECT ALL t0.c0 FROM t0, vt0, v0 WHERE (x'') UNION ALL SELECT ALL t0.c0 FROM t0, vt0, v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, v0 WHERE (((x'') ISNULL));
SELECT t0.c0 FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((x'')OR(t0.c0)))OR(t0.c59)) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((x'')OR(t0.c0)))OR(t0.c59)) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((x'')OR(t0.c0)))OR(t0.c59)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, v0.c0, t0.c59, t0.c0 FROM t0, v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0;
SELECT ALL vt0.c0, v0.c0, t0.c59, t0.c0 FROM t0, v0 NATURAL JOIN vt0 WHERE (((((x'')AND(((v0.c0)*(t0.c0)))))OR(v0.c0))) GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0 UNION SELECT ALL vt0.c0, v0.c0, t0.c59, t0.c0 FROM t0, v0 NATURAL JOIN vt0 WHERE ((NOT (((((x'')AND(((v0.c0)*(t0.c0)))))OR(v0.c0))))) GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0 UNION SELECT vt0.c0, v0.c0, t0.c59, t0.c0 FROM t0, v0 NATURAL JOIN vt0 WHERE (((((((x'')AND(((v0.c0)*(t0.c0)))))OR(v0.c0))) ISNULL)) GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0;
SELECT vt0.c0, v0.c0, t0.c59, t0.c0 FROM t0, v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0, t0.c59, t0.c0;
SELECT t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0 HAVING MAX(AVG(COUNT(*))) UNION ALL SELECT t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0 HAVING (NOT (MAX(AVG(COUNT(*))))) UNION ALL SELECT ALL t0.c0, vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, v0.c0 HAVING ((MAX(AVG(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((~ (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((~ (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (IFNULL(((v0.c0)>>(vt0.c0)), UNLIKELY(DISTINCT vt0.c0))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT (IFNULL(((v0.c0)>>(vt0.c0)), UNLIKELY(DISTINCT vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((IFNULL(((v0.c0)>>(vt0.c0)), UNLIKELY(DISTINCT vt0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0, vt0 WHERE (((((vt0.c0)AND(((vt0.c0) ISNULL))))AND((t0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0, vt0 WHERE ((NOT (((((vt0.c0)AND(((vt0.c0) ISNULL))))AND((t0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0, vt0 WHERE (((((((vt0.c0)AND(((vt0.c0) ISNULL))))AND((t0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0, vt0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING TYPEOF(((t0.c0) NOTNULL)) UNION ALL SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING (NOT (TYPEOF(((t0.c0) NOTNULL)))) UNION ALL SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING ((TYPEOF(((t0.c0) NOTNULL))) ISNULL);
SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING TYPEOF(((t0.c0) NOTNULL)) UNION ALL SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING (NOT (TYPEOF(((t0.c0) NOTNULL)))) UNION ALL SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0 HAVING ((TYPEOF(((t0.c0) NOTNULL))) ISNULL);
SELECT t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT ALL MAX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)=(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((NOT (((v0.c0)=(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((NOT (((v0.c0)==(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (LIKELY(DISTINCT x'')) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (LIKELY(DISTINCT x'')))) UNION SELECT DISTINCT * FROM t0 WHERE (((LIKELY(DISTINCT x'')) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0 HAVING 0xffffffffc065b313 COLLATE BINARY UNION ALL SELECT t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0 HAVING (NOT (0Xffffffffc065b313 COLLATE BINARY)) UNION ALL SELECT t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0 HAVING ((0xffffffffc065b313 COLLATE BINARY) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0 HAVING 0xffffffffc065b313 COLLATE BINARY UNION ALL SELECT t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0 HAVING (NOT (0Xffffffffc065b313 COLLATE BINARY)) UNION ALL SELECT t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0 HAVING ((0xffffffffc065b313 COLLATE BINARY) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE ((~ ((((t0.c59))=((x'')))))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT ((~ ((((t0.c59))=((x'')))))))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE ((((~ ((((t0.c59))==((x'')))))) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (RTRIM(((vt0.c0) IS TRUE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (RTRIM(((vt0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((RTRIM(((vt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0)) LEFT OUTER JOIN v0 ON t0.c59 GROUP BY t0.c59, vt0.c0, t0.c0, v0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((TOTAL(t0.c59))/((+ (t0.c59)))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((TOTAL(t0.c59))/((+ (t0.c59)))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((TOTAL(t0.c59))/((+ (t0.c59))))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((TOTAL(t0.c59))/((+ (t0.c59)))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((TOTAL(t0.c59))/((+ (t0.c59)))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((TOTAL(t0.c59))/((+ (t0.c59))))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c59, v0.c0, vt0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN vt0 ON CAST(((((v0.c0)OR('7b-J''3')))AND(v0.c0)) AS TEXT);
SELECT ALL t0.c59, v0.c0, vt0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN vt0 ON CAST(((((v0.c0)OR('7b-J''3')))AND(v0.c0)) AS TEXT) WHERE (CAST(((((t0.c0)OR(v0.c0)))AND(vt0.c0)) AS NUMERIC)) UNION ALL SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN vt0 ON CAST(((((v0.c0)OR('7b-J''3')))AND(v0.c0)) AS TEXT) WHERE ((NOT (CAST(((((t0.c0)OR(v0.c0)))AND(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN vt0 ON CAST(((((v0.c0)OR('7b-J''3')))AND(v0.c0)) AS TEXT) WHERE (((CAST(((((t0.c0)OR(v0.c0)))AND(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL t0.c59, v0.c0, vt0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN vt0 ON CAST(((((v0.c0)OR('7b-J''3')))AND(v0.c0)) AS TEXT);
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ ((((NULL))>=((v0.c0)))));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ ((((NULL))>=((v0.c0))))) WHERE (((((CAST(t0.c0 AS REAL))AND(((t0.c59) NOT NULL))))OR(t0.c0))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ ((((NULL))>=((v0.c0))))) WHERE ((NOT (((((CAST(t0.c0 AS REAL))AND(((t0.c59) NOT NULL))))OR(t0.c0))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ ((((NULL))>=((v0.c0))))) WHERE (((((((CAST(t0.c0 AS REAL))AND(((t0.c59) NOT NULL))))OR(t0.c0))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ ((((NULL))>=((v0.c0)))));
SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, vt0, t0 WHERE (CASE ('\{' IN ())  WHEN LIKELIHOOD(t0.c0, 0.9817904474611014) THEN vt0.c0 COLLATE NOCASE ELSE ((((t0.c59)OR(t0.c0)))AND(vt0.c0)) END) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0 UNION SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (CASE ('\{' IN ())  WHEN LIKELIHOOD(t0.c0, 0.9817904474611014) THEN vt0.c0 COLLATE NOCASE ELSE ((((t0.c59)OR(t0.c0)))AND(vt0.c0)) END))) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0 UNION SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, vt0, t0 WHERE (((CASE ('\{' IN ())  WHEN LIKELIHOOD(t0.c0, 0.9817904474611014) THEN vt0.c0 COLLATE NOCASE ELSE ((((t0.c59)OR(t0.c0)))AND(vt0.c0)) END) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT ALL t0.c0, vt0.c0, t0.c59, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c59, v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING CAST(CASE WHEN AVG(vt0.c0) THEN v0.c0 END AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (CAST(CASE WHEN AVG(vt0.c0) THEN v0.c0 END AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((CAST(CASE WHEN AVG(vt0.c0) THEN v0.c0 END AS INTEGER)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING CAST(CASE WHEN AVG(vt0.c0) THEN v0.c0 END AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (CAST(CASE WHEN AVG(vt0.c0) THEN v0.c0 END AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((CAST(CASE WHEN AVG(vt0.c0) THEN v0.c0 END AS INTEGER)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT t0.c59 FROM t0, v0;
SELECT ALL t0.c59 FROM t0, v0 WHERE ((~ (NULL))) UNION ALL SELECT ALL t0.c59 FROM t0, v0 WHERE ((NOT ((~ (NULL))))) UNION ALL SELECT ALL t0.c59 FROM t0, v0 WHERE ((((~ (NULL))) ISNULL));
SELECT t0.c59 FROM t0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (HEX(((vt0.c0)<=('0.13502777698130075')))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (HEX(((vt0.c0)<=('0.13502777698130075')))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((HEX(((vt0.c0)<=('0.13502777698130075')))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, v0.c0, t0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0, v0.c0, t0.c0;
SELECT ALL vt0.c0, v0.c0, t0.c0 FROM vt0, v0 NATURAL JOIN t0 WHERE ((((t0.c59) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ((((('1958821248')OR(v0.c0)))OR(t0.c0))))) GROUP BY vt0.c0, v0.c0, t0.c0 UNION SELECT vt0.c0, v0.c0, t0.c0 FROM vt0, v0 NATURAL JOIN t0 WHERE ((NOT ((((t0.c59) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ((((('1958821248')OR(v0.c0)))OR(t0.c0))))))) GROUP BY vt0.c0, v0.c0, t0.c0 UNION SELECT vt0.c0, v0.c0, t0.c0 FROM vt0, v0 NATURAL JOIN t0 WHERE ((((((t0.c59) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ((((('1958821248')OR(v0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0, t0.c0;
SELECT vt0.c0, v0.c0, t0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0, v0.c0, t0.c0;
SELECT ALL t0.c0, t0.c59, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c59, vt0.c0;
SELECT ALL t0.c0, t0.c59, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c59, vt0.c0 HAVING MIN(MIN(t0.c59)) UNION ALL SELECT ALL t0.c0, t0.c59, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c59, vt0.c0 HAVING (NOT (MIN(MIN(t0.c59)))) UNION ALL SELECT ALL t0.c0, t0.c59, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c59, vt0.c0 HAVING ((MIN(MIN(t0.c59))) ISNULL);
SELECT ALL t0.c59, v0.c0 FROM t0, v0;
SELECT ALL t0.c59, v0.c0 FROM t0, v0 WHERE (t0.c59) UNION ALL SELECT ALL t0.c59, v0.c0 FROM t0, v0 WHERE ((NOT (t0.c59))) UNION ALL SELECT t0.c59, v0.c0 FROM t0, v0 WHERE (((t0.c59) ISNULL));
SELECT ALL t0.c59, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt0.c0, t0.c0, t0.c59 FROM v0 INNER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) BETWEEN (((t0.c59)<<(NULL))) AND ((vt0.c0 IN (t0.c59)))) RIGHT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c59) AND (vt0.c0))) BETWEEN (CASE WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((vt0.c0)+('\o')))) GROUP BY v0.c0, vt0.c0, t0.c0, t0.c59;
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59;
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING GROUP_CONCAT(((vt0.c0)<=(t0.c59))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING (NOT (GROUP_CONCAT(((vt0.c0)<=(t0.c59))))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING ((GROUP_CONCAT(((vt0.c0)<=(t0.c59)))) ISNULL);
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59;
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING GROUP_CONCAT(((vt0.c0)<=(t0.c59))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING (NOT (GROUP_CONCAT(((vt0.c0)<=(t0.c59))))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59 HAVING ((GROUP_CONCAT(((vt0.c0)<=(t0.c59)))) ISNULL);
SELECT vt0.c0, t0.c0, v0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, v0.c0, t0.c59;
SELECT ALL * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE ((((NOT (t0.c0)))||((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE ((NOT ((((NOT (t0.c0)))||((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE ((((((NOT (t0.c0)))||((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((+ (v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((+ (v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((+ (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)-('f[')))) AND (((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0)-('f[')))) AND (((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0)-('f[')))) AND (((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON rtreenode(-9.4197414E7 COLLATE NOCASE, v0.c0) INNER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c59 END) GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0)||(v0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0)||(v0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0)||(v0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND (((v0.c0 IN ()))));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND (((v0.c0 IN ())))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND (((v0.c0 IN ())))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND (((v0.c0 IN ())))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND (((v0.c0 IN ()))));
SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0;
SELECT ALL t0.c59, v0.c0, vt0.c0, t0.c0 FROM t0, v0, vt0 WHERE ((+ (((((0.8851913268086256)OR(vt0.c0)))OR(t0.c59))))) GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0 UNION SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM t0, v0, vt0 WHERE ((NOT ((+ (((((0.8851913268086256)OR(vt0.c0)))OR(t0.c59))))))) GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0 UNION SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM t0, v0, vt0 WHERE ((((+ (((((0.8851913268086256)OR(vt0.c0)))OR(t0.c59))))) ISNULL)) GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0;
SELECT t0.c59, v0.c0, vt0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c59, v0.c0, vt0.c0, t0.c0;
SELECT t0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, t0.c59;
SELECT ALL t0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, t0.c59 HAVING ((((SUM(GROUP_CONCAT(v0.c0)) COLLATE NOCASE)OR(((t0.c59)&(vt0.c0)))))AND(TOTAL(t0.c0))) UNION ALL SELECT t0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, t0.c59 HAVING (NOT (((((SUM(GROUP_CONCAT(v0.c0)) COLLATE NOCASE)OR(((t0.c59)&(vt0.c0)))))AND(TOTAL(t0.c0))))) UNION ALL SELECT t0.c0, t0.c59 FROM t0, v0, vt0 GROUP BY t0.c0, t0.c59 HAVING ((((((SUM(GROUP_CONCAT(v0.c0)) COLLATE NOCASE)OR(((t0.c59)&(vt0.c0)))))AND(TOTAL(t0.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (x'') UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON v0.c0 CROSS JOIN vt0 ON x'c453';
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON v0.c0 CROSS JOIN vt0 ON x'c453' WHERE ((((- (t0.c59)))>(LOWER(t0.c59)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON v0.c0 CROSS JOIN vt0 ON x'c453' WHERE ((NOT ((((- (t0.c59)))>(LOWER(t0.c59)))))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON v0.c0 CROSS JOIN vt0 ON x'c453' WHERE ((((((- (t0.c59)))>(LOWER(t0.c59)))) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON v0.c0 CROSS JOIN vt0 ON x'c453';
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (UNLIKELY(((v0.c0) IS FALSE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (UNLIKELY(((v0.c0) IS FALSE))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((UNLIKELY(((v0.c0) IS FALSE))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59 HAVING ((CASE COUNT(*)  WHEN t0.c59 THEN SUM(t0.c0) END)<=(v0.c0)) UNION ALL SELECT t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59 HAVING (NOT (((CASE COUNT(*)  WHEN t0.c59 THEN SUM(t0.c0) END)<=(v0.c0)))) UNION ALL SELECT ALL t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59 HAVING ((((CASE COUNT(*)  WHEN t0.c59 THEN SUM(t0.c0) END)<=(v0.c0))) ISNULL);
SELECT t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59 HAVING ((CASE COUNT(*)  WHEN t0.c59 THEN SUM(t0.c0) END)<=(v0.c0)) UNION ALL SELECT t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59 HAVING (NOT (((CASE COUNT(*)  WHEN t0.c59 THEN SUM(t0.c0) END)<=(v0.c0)))) UNION ALL SELECT ALL t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59 HAVING ((((CASE COUNT(*)  WHEN t0.c59 THEN SUM(t0.c0) END)<=(v0.c0))) ISNULL);
SELECT t0.c59 FROM t0, v0, vt0 GROUP BY t0.c59;
SELECT v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0;
SELECT ALL v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0 WHERE (((((vt0.c0)AND(t0.c59)))OR(vt0.c0)) COLLATE BINARY) UNION ALL SELECT v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0 WHERE ((NOT (((((vt0.c0)AND(t0.c59)))OR(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0 WHERE (((((((vt0.c0)AND(t0.c59)))OR(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT v0.c0, t0.c59, vt0.c0 FROM v0, vt0, t0;
SELECT DISTINCT t0.c59, t0.c0 FROM t0;
SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE (t0.c59) UNION SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE ((NOT (t0.c59))) UNION SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE (((t0.c59) ISNULL));
SELECT DISTINCT t0.c59, t0.c0 FROM t0;
SELECT ALL t0.c0, t0.c59 FROM vt0 FULL OUTER JOIN v0 ON ((((((x'')OR(v0.c0)))OR('0.22819307328391258'))) NOT BETWEEN (((v0.c0) BETWEEN (t0.c59) AND (vt0.c0))) AND (t0.c0)) INNER JOIN t0 ON ((CAST(v0.c0 AS INTEGER))+(((v0.c0) IS FALSE))) GROUP BY t0.c0, t0.c59;
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0;
SELECT t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING ((GROUP_CONCAT(NULL)) IS FALSE) UNION ALL SELECT t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING (NOT (((GROUP_CONCAT(NULL)) IS FALSE))) UNION ALL SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING ((((GROUP_CONCAT(NULL)) IS FALSE)) ISNULL);
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0;
SELECT t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING ((GROUP_CONCAT(NULL)) IS FALSE) UNION ALL SELECT t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING (NOT (((GROUP_CONCAT(NULL)) IS FALSE))) UNION ALL SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING ((((GROUP_CONCAT(NULL)) IS FALSE)) ISNULL);
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((v0.c0)GLOB(v0.c0)))))OR(-376317639))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((v0.c0)GLOB(v0.c0)))))OR(-376317639))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((v0.c0)GLOB(v0.c0)))))OR(-376317639))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT t0.c59, t0.c0 FROM t0;
SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE (UPPER(((t0.c0)IS NOT(t0.c0)))) UNION SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE ((NOT (UPPER(((t0.c0)IS NOT(t0.c0)))))) UNION SELECT DISTINCT t0.c59, t0.c0 FROM t0 WHERE (((UPPER(((t0.c0)IS NOT(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c59, t0.c0 FROM t0;
SELECT t0.c0, vt0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT t0.c0, vt0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((NOT (((((v0.c0)AND(t0.c0)))AND(v0.c0))))) GROUP BY t0.c0, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, vt0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((NOT ((NOT (((((v0.c0)AND(t0.c0)))AND(v0.c0))))))) GROUP BY t0.c0, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, vt0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((((NOT (((((v0.c0)AND(t0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT t0.c0, vt0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING HEX(AVG(GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (HEX(AVG(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((HEX(AVG(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL * FROM vt0, t0, v0;
SELECT * FROM vt0, t0, v0 WHERE (NULLIF(ABS(vt0.c0), (((vt0.c0, t0.c59, v0.c0))>=((t0.c0, v0.c0, v0.c0))))) UNION ALL SELECT * FROM vt0, t0, v0 WHERE ((NOT (NULLIF(ABS(vt0.c0), (((vt0.c0, t0.c59, v0.c0))>=((t0.c0, v0.c0, v0.c0))))))) UNION ALL SELECT * FROM vt0, t0, v0 WHERE (((NULLIF(ABS(vt0.c0), (((vt0.c0, t0.c59, v0.c0))>=((t0.c0, v0.c0, v0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0, v0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON 0.3369279671085329 LEFT OUTER JOIN vt0 ON (+ (((vt0.c0)AND(v0.c0))));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON 0.3369279671085329 LEFT OUTER JOIN vt0 ON (+ (((vt0.c0)AND(v0.c0)))) WHERE (((((vt0.c0)>=(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON 0.3369279671085329 LEFT OUTER JOIN vt0 ON (+ (((vt0.c0)AND(v0.c0)))) WHERE ((NOT (((((vt0.c0)>=(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON 0.3369279671085329 LEFT OUTER JOIN vt0 ON (+ (((vt0.c0)AND(v0.c0)))) WHERE (((((((vt0.c0)>=(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON 0.3369279671085329 LEFT OUTER JOIN vt0 ON (+ (((vt0.c0)AND(v0.c0))));
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 WHERE (((TRIM(DISTINCT t0.c0, x''))IS((+ (t0.c59))))) GROUP BY t0.c59, t0.c0 UNION SELECT ALL t0.c59, t0.c0 FROM t0 WHERE ((NOT (((TRIM(DISTINCT t0.c0, x''))IS((+ (t0.c59))))))) GROUP BY t0.c59, t0.c0 UNION SELECT t0.c59, t0.c0 FROM t0 WHERE (((((TRIM(DISTINCT t0.c0, x''))IS((+ (t0.c59))))) ISNULL)) GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((MIN(TOTAL(COUNT(*)))) ISNULL)) NOT NULL) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((MIN(TOTAL(COUNT(*)))) ISNULL)) NOT NULL))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((MIN(TOTAL(COUNT(*)))) ISNULL)) NOT NULL)) ISNULL);
SELECT * FROM v0, vt0, t0;
SELECT * FROM v0, vt0, t0 WHERE (CASE WHEN t0.c59 THEN 0X57df7d65 WHEN t0.c0 THEN t0.c0 WHEN t0.c59 THEN t0.c0 ELSE NULL END COLLATE RTRIM) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((NOT (CASE WHEN t0.c59 THEN 0X57df7d65 WHEN t0.c0 THEN t0.c0 WHEN t0.c59 THEN t0.c0 ELSE NULL END COLLATE RTRIM))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE (((CASE WHEN t0.c59 THEN 0X57df7d65 WHEN t0.c0 THEN t0.c0 WHEN t0.c59 THEN t0.c0 ELSE NULL END COLLATE RTRIM) ISNULL));
SELECT * FROM v0, vt0, t0;
SELECT DISTINCT v0.c0 FROM vt0, t0, v0;
SELECT DISTINCT v0.c0 FROM vt0, t0, v0 WHERE (CASE WHEN 0x7c208470 COLLATE RTRIM THEN t0.c0 WHEN t0.c0 THEN (NOT (vt0.c0)) WHEN ((t0.c0) ISNULL) THEN NULL END) UNION SELECT DISTINCT v0.c0 FROM vt0, t0, v0 WHERE ((NOT (CASE WHEN 0x7c208470 COLLATE RTRIM THEN t0.c0 WHEN t0.c0 THEN (NOT (vt0.c0)) WHEN ((t0.c0) ISNULL) THEN NULL END))) UNION SELECT DISTINCT v0.c0 FROM vt0, t0, v0 WHERE (((CASE WHEN 0x7c208470 COLLATE RTRIM THEN t0.c0 WHEN t0.c0 THEN (NOT (vt0.c0)) WHEN ((t0.c0) ISNULL) THEN NULL END) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, t0, v0;
SELECT ALL v0.c0, t0.c59, t0.c0, vt0.c0 FROM v0, t0, vt0 GROUP BY v0.c0, t0.c59, t0.c0, vt0.c0;
SELECT ALL v0.c0, t0.c59, t0.c0, vt0.c0 FROM v0, t0, vt0 WHERE (((((((((((t0.c0) BETWEEN (t0.c59) AND ('}A')))AND(-1.99741717E9)))OR((1241802442 IN (vt0.c0, vt0.c0)))))OR(((t0.c59)&(NULL)))))AND(t0.c0))) GROUP BY v0.c0, t0.c59, t0.c0, vt0.c0 UNION SELECT v0.c0, t0.c59, t0.c0, vt0.c0 FROM v0, t0, vt0 WHERE ((NOT (((((((((((t0.c0) BETWEEN (t0.c59) AND ('}A')))AND(-1.99741717E9)))OR((1241802442 IN (vt0.c0, vt0.c0)))))OR(((t0.c59)&(NULL)))))AND(t0.c0))))) GROUP BY v0.c0, t0.c59, t0.c0, vt0.c0 UNION SELECT ALL v0.c0, t0.c59, t0.c0, vt0.c0 FROM v0, t0, vt0 WHERE (((((((((((((t0.c0) BETWEEN (t0.c59) AND ('}A')))AND(-1.99741717E9)))OR((1241802442 IN (vt0.c0, vt0.c0)))))OR(((t0.c59)&(NULL)))))AND(t0.c0))) ISNULL)) GROUP BY v0.c0, t0.c59, t0.c0, vt0.c0;
SELECT ALL v0.c0, t0.c59, t0.c0, vt0.c0 FROM v0, t0, vt0 GROUP BY v0.c0, t0.c59, t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX(CASE WHEN ((t0.c0) NOT BETWEEN (t0.c59) AND (t0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN CASE t0.c59  WHEN vt0.c0 THEN t0.c59 ELSE vt0.c0 END THEN -295493327 WHEN ((t0.c59)<=(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN (NOT (t0.c59)) THEN 0.02804713176879481 WHEN ((vt0.c0) NOT BETWEEN (t0.c59) AND (t0.c0)) THEN ((t0.c59) NOT BETWEEN ('') AND (t0.c0)) ELSE NULL END) FROM vt0, t0 ORDER BY '0.3369279671085329' COLLATE RTRIM DESC  NULLS FIRST, t0.c0  NULLS LAST, (((vt0.c0 IN ())) NOT NULL) DESC;
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)=(t0.c0)))*(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)==(t0.c0)))*(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0)=(t0.c0)))*(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(0.5615462255012162)))AND(v0.c0))) ISNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(0.5615462255012162)))AND(v0.c0))) ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(0.5615462255012162)))AND(v0.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((((((((AVG(t0.c0))AND(TOTAL(t0.c59))))AND(TRIM(COUNT(*)))))AND(x'')))OR(((TOTAL(t0.c59))-(COUNT(*))))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (((((((((AVG(t0.c0))AND(TOTAL(t0.c59))))AND(TRIM(COUNT(*)))))AND(x'')))OR(((TOTAL(t0.c59))-(COUNT(*))))))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((((((((((AVG(t0.c0))AND(TOTAL(t0.c59))))AND(TRIM(COUNT(*)))))AND(x'')))OR(((TOTAL(t0.c59))-(COUNT(*)))))) ISNULL);
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((((((((AVG(t0.c0))AND(TOTAL(t0.c59))))AND(TRIM(COUNT(*)))))AND(x'')))OR(((TOTAL(t0.c59))-(COUNT(*))))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (((((((((AVG(t0.c0))AND(TOTAL(t0.c59))))AND(TRIM(COUNT(*)))))AND(x'')))OR(((TOTAL(t0.c59))-(COUNT(*))))))) UNION ALL SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((((((((((AVG(t0.c0))AND(TOTAL(t0.c59))))AND(TRIM(COUNT(*)))))AND(x'')))OR(((TOTAL(t0.c59))-(COUNT(*)))))) ISNULL);
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL TOTAL((((v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)<>(vt0.c0)))))) FROM vt0, v0 ORDER BY TRIM(DISTINCT (((v0.c0))>((vt0.c0))), CAST(vt0.c0 AS INTEGER)) DESC  NULLS LAST, ((v0.c0 COLLATE NOCASE) NOTNULL);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((-1.067076845E9)%(v0.c0 COLLATE NOCASE));
SELECT * FROM v0 CROSS JOIN vt0 ON ((-1.067076845E9)%(v0.c0 COLLATE NOCASE)) WHERE ((~ (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((-1.067076845E9)%(v0.c0 COLLATE NOCASE)) WHERE ((NOT ((~ (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON ((-1.067076845E9)%(v0.c0 COLLATE NOCASE)) WHERE ((((~ (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((-1.067076845E9)%(v0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- (((t0.c59)IS(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- (((t0.c59)IS(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- (((t0.c59)IS(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, v0.c0, t0.c0, t0.c59 FROM vt0 FULL OUTER JOIN t0 ON (NOT (((((((((vt0.c0)OR(vt0.c0)))OR(0X58d9f5a6)))OR(v0.c0)))OR(v0.c0)))) LEFT OUTER JOIN v0 ON UNLIKELY(x'ca38') GROUP BY vt0.c0, v0.c0, t0.c0, t0.c59;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) BETWEEN (GROUP_CONCAT(TOTAL(MIN(v0.c0)))) AND (CAST(MAX(MAX(COUNT(MIN(v0.c0)))) AS TEXT))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) BETWEEN (GROUP_CONCAT(TOTAL(MIN(v0.c0)))) AND (CAST(MAX(MAX(COUNT(MIN(v0.c0)))) AS TEXT))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) BETWEEN (GROUP_CONCAT(TOTAL(MIN(v0.c0)))) AND (CAST(MAX(MAX(COUNT(MIN(v0.c0)))) AS TEXT)))) ISNULL);
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0, t0;
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0, t0 WHERE ('') UNION ALL SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0 NOT INDEXED, v0, t0 WHERE ((NOT (''))) UNION ALL SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0, t0 WHERE ((('') ISNULL));
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM vt0, v0, t0;
SELECT DISTINCT * FROM t0 INDEXED BY i28;
SELECT DISTINCT * FROM t0 INDEXED BY i28 WHERE ((((t0.c0)) BETWEEN (((((('')OR(t0.c0)))AND(t0.c59)))) AND ((('' IN ()))))) UNION SELECT DISTINCT * FROM t0 INDEXED BY i28 WHERE ((NOT ((((t0.c0)) BETWEEN (((((('')OR(t0.c0)))AND(t0.c59)))) AND ((('' IN ()))))))) UNION SELECT DISTINCT * FROM t0 INDEXED BY i28 WHERE ((((((t0.c0)) BETWEEN (((((('')OR(t0.c0)))AND(t0.c59)))) AND ((('' IN ()))))) ISNULL));
SELECT DISTINCT * FROM t0 INDEXED BY i28;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE ((~ (((t0.c59) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT ((~ (((t0.c59) IS TRUE)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((((~ (((t0.c59) IS TRUE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((MAX(vt0.c0))-(vt0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt0.c0))-(vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0))-(vt0.c0 COLLATE RTRIM))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((MAX(vt0.c0))-(vt0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt0.c0))-(vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0))-(vt0.c0 COLLATE RTRIM))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(rtreenode(vt0.c0, vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(rtreenode(vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(rtreenode(vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((CASE WHEN 0Xffffffff89ed4fe6 THEN v0.c0 ELSE v0.c0 END IN ((((v0.c0))<=((NULL))), LIKE(v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((CASE WHEN 0xffffffff89ed4fe6 THEN v0.c0 ELSE v0.c0 END IN ((((v0.c0))<=((NULL))), LIKE(v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((CASE WHEN 0xffffffff89ed4fe6 THEN v0.c0 ELSE v0.c0 END IN ((((v0.c0))<=((NULL))), LIKE(v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0) ISNULL) IN (1592710447, ((v0.c0) IS TRUE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) ISNULL) IN (1592710447, ((v0.c0) IS TRUE)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) ISNULL) IN (1592710447, ((v0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, v0.c0, vt0.c0;
SELECT t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c0, v0.c0, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((NOT (t0.c59)))) AND ((CAST(t0.c59 AS TEXT))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((NOT (t0.c59)))) AND ((CAST(t0.c59 AS TEXT)))) WHERE (((((((((((0.3304048520695809)OR(vt0.c0)))OR(t0.c59)))AND(NULL)))AND(t0.c0)))AND(((((((((t0.c59)OR(t0.c0)))OR(t0.c59)))AND(vt0.c0)))OR(t0.c0))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((NOT (t0.c59)))) AND ((CAST(t0.c59 AS TEXT)))) WHERE ((NOT (((((((((((0.3304048520695809)OR(vt0.c0)))OR(t0.c59)))AND(NULL)))AND(t0.c0)))AND(((((((((t0.c59)OR(t0.c0)))OR(t0.c59)))AND(vt0.c0)))OR(t0.c0))))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((NOT (t0.c59)))) AND ((CAST(t0.c59 AS TEXT)))) WHERE (((((((((((((0.3304048520695809)OR(vt0.c0)))OR(t0.c59)))AND(NULL)))AND(t0.c0)))AND(((((((((t0.c59)OR(t0.c0)))OR(t0.c59)))AND(vt0.c0)))OR(t0.c0))))) ISNULL));
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c59)) NOT BETWEEN (((NOT (t0.c59)))) AND ((CAST(t0.c59 AS TEXT))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5212169471134169))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5212169471134169))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5212169471134169))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, t0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM vt0, t0, v0 WHERE (NULL) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM vt0, t0, v0 WHERE ((NOT (NULL))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM vt0, t0, v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c0;
SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, vt0.c0, t0.c0, v0.c0;
SELECT ALL t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, vt0.c0, t0.c0, v0.c0 HAVING COUNT(((COUNT(*))AND(MIN(GROUP_CONCAT(t0.c59))))) UNION ALL SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, vt0.c0, t0.c0, v0.c0 HAVING (NOT (COUNT(((COUNT(*))AND(MIN(GROUP_CONCAT(t0.c59))))))) UNION ALL SELECT t0.c59, vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY t0.c59, vt0.c0, t0.c0, v0.c0 HAVING ((COUNT(((COUNT(*))AND(MIN(GROUP_CONCAT(t0.c59)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN (0.6209384562322662)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0 IN (0.6209384562322662)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0 IN (0.6209384562322662)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))>=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))>=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))>=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c0, t0.c59, v0.c0 FROM t0 INNER JOIN v0 ON CASE CASE t0.c59  WHEN t0.c59 THEN v0.c0 END  WHEN ((((v0.c0)AND(t0.c59)))OR(t0.c0)) THEN ((v0.c0)<<(v0.c0)) ELSE t0.c0 END GROUP BY t0.c0, t0.c59, v0.c0;
SELECT t0.c0, t0.c59, v0.c0 FROM t0 INNER JOIN v0 ON CASE CASE t0.c59  WHEN t0.c59 THEN v0.c0 END  WHEN ((((v0.c0)AND(t0.c59)))OR(t0.c0)) THEN ((v0.c0)<<(v0.c0)) ELSE t0.c0 END WHERE (CAST(t0.c0 AS REAL)) GROUP BY t0.c0, t0.c59, v0.c0 UNION SELECT t0.c0, t0.c59, v0.c0 FROM t0 INNER JOIN v0 ON CASE CASE t0.c59  WHEN t0.c59 THEN v0.c0 END  WHEN ((((v0.c0)AND(t0.c59)))OR(t0.c0)) THEN ((v0.c0)<<(v0.c0)) ELSE t0.c0 END WHERE ((NOT (CAST(t0.c0 AS REAL)))) GROUP BY t0.c0, t0.c59, v0.c0 UNION SELECT t0.c0, t0.c59, v0.c0 FROM t0 INNER JOIN v0 ON CASE CASE t0.c59  WHEN t0.c59 THEN v0.c0 END  WHEN ((((v0.c0)AND(t0.c59)))OR(t0.c0)) THEN ((v0.c0)<<(v0.c0)) ELSE t0.c0 END WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) GROUP BY t0.c0, t0.c59, v0.c0;
SELECT ALL t0.c0, t0.c59, v0.c0 FROM t0 INNER JOIN v0 ON CASE CASE t0.c59  WHEN t0.c59 THEN v0.c0 END  WHEN ((((v0.c0)AND(t0.c59)))OR(t0.c0)) THEN ((v0.c0)<<(v0.c0)) ELSE t0.c0 END GROUP BY t0.c0, t0.c59, v0.c0;
SELECT ALL t0.c59 FROM v0, vt0, t0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM v0, vt0, t0 GROUP BY t0.c59 HAVING MAX((+ (GROUP_CONCAT(AVG(MAX(COUNT(MIN(AVG(MAX(TOTAL(AVG(t0.c0)))))))))))) UNION ALL SELECT ALL t0.c59 FROM v0, vt0, t0 GROUP BY t0.c59 HAVING (NOT (MAX((+ (GROUP_CONCAT(AVG(MAX(COUNT(MIN(AVG(MAX(TOTAL(AVG(t0.c0)))))))))))))) UNION ALL SELECT ALL t0.c59 FROM v0, vt0, t0 GROUP BY t0.c59 HAVING ((MAX((+ (GROUP_CONCAT(AVG(MAX(COUNT(MIN(AVG(MAX(TOTAL(AVG(t0.c0))))))))))))) ISNULL);
SELECT ALL TOTAL((('') BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE BINARY))) FROM v0 ORDER BY v0.c0;
SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM v0, t0, vt0;
SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM v0, t0, vt0 WHERE ((~ (0.5817890646170105))) UNION ALL SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM v0, t0, vt0 WHERE ((NOT ((~ (0.5817890646170105))))) UNION ALL SELECT ALL v0.c0, t0.c0, vt0.c0, t0.c59 FROM v0, t0, vt0 WHERE ((((~ (0.5817890646170105))) ISNULL));
SELECT v0.c0, t0.c0, vt0.c0, t0.c59 FROM v0, t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0 INDEXED BY i28;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND (0X5c7a8963)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c59)) THEN LAST_INSERT_ROWID() WHEN t0.c0 THEN ((t0.c59) ISNULL) ELSE (t0.c0 IN ()) END) GROUP BY t0.c59, t0.c0 UNION SELECT ALL t0.c59, t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND (0X5c7a8963)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c59)) THEN LAST_INSERT_ROWID() WHEN t0.c0 THEN ((t0.c59) ISNULL) ELSE (t0.c0 IN ()) END))) GROUP BY t0.c59, t0.c0 UNION SELECT t0.c59, t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND (0x5c7a8963)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c59)) THEN LAST_INSERT_ROWID() WHEN t0.c0 THEN ((t0.c59) ISNULL) ELSE (t0.c0 IN ()) END) ISNULL)) GROUP BY t0.c59, t0.c0;
SELECT t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0;
SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((((t0.c0) BETWEEN (SUM(COUNT(SUM(MAX('16412918'))))) AND (t0.c59))) NOT BETWEEN (((t0.c59)GLOB(0x41bfdc4a))) AND (((COUNT(MIN(COUNT(*))))AND(t0.c0)))) UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING (NOT (((((t0.c0) BETWEEN (SUM(COUNT(SUM(MAX('16412918'))))) AND (t0.c59))) NOT BETWEEN (((t0.c59)GLOB(0x41bfdc4a))) AND (((COUNT(MIN(COUNT(*))))AND(t0.c0)))))) UNION ALL SELECT ALL t0.c59, t0.c0 FROM t0 GROUP BY t0.c59, t0.c0 HAVING ((((((t0.c0) BETWEEN (SUM(COUNT(SUM(MAX('16412918'))))) AND (t0.c59))) NOT BETWEEN (((t0.c59)GLOB(0x41bfdc4a))) AND (((COUNT(MIN(COUNT(*))))AND(t0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) UNION ALL SELECT * FROM vt0 WHERE (((UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0)) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((IFNULL(vt0.c0, vt0.c0)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0 NATURAL JOIN t0 WHERE ((((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c59)), ((((((((t0.c59)AND(t0.c59)))OR(t0.c59)))OR(t0.c59)))AND(v0.c0)), t0.c0))<=((CASE t0.c59  WHEN t0.c0 THEN v0.c0 ELSE t0.c59 END, ((v0.c0)GLOB(v0.c0)), 0.9419827157631538)))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT ((((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c59)), ((((((((t0.c59)AND(t0.c59)))OR(t0.c59)))OR(t0.c59)))AND(v0.c0)), t0.c0))<=((CASE t0.c59  WHEN t0.c0 THEN v0.c0 ELSE t0.c59 END, ((v0.c0)GLOB(v0.c0)), 0.9419827157631538)))))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM v0 NATURAL JOIN t0 WHERE ((((((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c59)), ((((((((t0.c59)AND(t0.c59)))OR(t0.c59)))OR(t0.c59)))AND(v0.c0)), t0.c0))<=((CASE t0.c59  WHEN t0.c0 THEN v0.c0 ELSE t0.c59 END, ((v0.c0)GLOB(v0.c0)), 0.9419827157631538)))) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0, t0.c0;
SELECT ALL t0.c59 FROM t0, v0 GROUP BY t0.c59;
SELECT ALL t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING GROUP_CONCAT(AVG(MIN(t0.c59))) UNION ALL SELECT t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING (NOT (GROUP_CONCAT(AVG(MIN(t0.c59))))) UNION ALL SELECT ALL t0.c59 FROM t0, v0 GROUP BY t0.c59 HAVING ((GROUP_CONCAT(AVG(MIN(t0.c59)))) ISNULL);
SELECT ALL t0.c59 FROM t0;
SELECT ALL t0.c59 FROM t0 WHERE (json_insert(((1184014114) NOT BETWEEN (t0.c0) AND (t0.c0)), COALESCE(t0.c0, t0.c59), ((((((((((((t0.c59)AND(t0.c59)))AND(t0.c59)))AND(t0.c59)))OR(x'b324')))OR(t0.c0)))AND(t0.c59)))) UNION ALL SELECT t0.c59 FROM t0 WHERE ((NOT (json_insert(((1184014114) NOT BETWEEN (t0.c0) AND (t0.c0)), COALESCE(t0.c0, t0.c59), ((((((((((((t0.c59)AND(t0.c59)))AND(t0.c59)))AND(t0.c59)))OR(x'b324')))OR(t0.c0)))AND(t0.c59)))))) UNION ALL SELECT t0.c59 FROM t0 WHERE (((json_insert(((1184014114) NOT BETWEEN (t0.c0) AND (t0.c0)), COALESCE(t0.c0, t0.c59), ((((((((((((t0.c59)AND(t0.c59)))AND(t0.c59)))AND(t0.c59)))OR(x'b324')))OR(t0.c0)))AND(t0.c59)))) ISNULL));
SELECT ALL t0.c59 FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (0xffffffffabeb8147) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (0xffffffffabeb8147))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((0Xffffffffabeb8147) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((NOT (COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((NOT (COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((NOT (COUNT(*))))) ISNULL);
SELECT ALL t0.c0, t0.c59, v0.c0 FROM t0, v0;
SELECT ALL t0.c0, t0.c59, v0.c0 FROM t0, v0 WHERE ((((NOT (t0.c0)))|((((t0.c0))!=((t0.c0)))))) UNION ALL SELECT t0.c0, t0.c59, v0.c0 FROM t0, v0 WHERE ((NOT ((((NOT (t0.c0)))|((((t0.c0))<>((t0.c0)))))))) UNION ALL SELECT ALL t0.c0, t0.c59, v0.c0 FROM t0, v0 WHERE ((((((NOT (t0.c0)))|((((t0.c0))!=((t0.c0)))))) ISNULL));
SELECT ALL t0.c0, t0.c59, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (SQLITE_SOURCE_ID()) AND (((v0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, vt0 NOT INDEXED WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (SQLITE_SOURCE_ID()) AND (((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (SQLITE_SOURCE_ID()) AND (((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
