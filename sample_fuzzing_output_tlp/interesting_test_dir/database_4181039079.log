-- Time: 2024/06/10 11:39:20
-- Database: database79
-- Database version: 3.40.0
-- seed value: 4181039079
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB ); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('L\n[8ry^&', -275020940); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.8726742935986436 WHERE ((((rt0.c1) ISNULL)) IS TRUE); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c1) VALUES (x'', '	I3T荴듀2'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c2, c3, c0) VALUES (x'4cd1b9bb', x'', -2.7502094E8, NULL); -- 0ms;
PRAGMA temp.application_id = 2661015451632826949; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, , columnsize=1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0X5846aeb, NULL, 'M|', 35888503), (NULL, NULL, 0.8623738388164781, 0xffffffffde514985), ('-910669861', 0.8726742935986436, NULL, 0.8623738388164781); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.8925047581596265); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
DELETE FROM rt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DROP TABLE vt0; -- 0ms;
ANALYZE temp; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 0 noskipscan'); -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1711153238,9');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-124358155,8');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 7ms;
UPDATE OR ROLLBACK rt0 SET (c2, c1)=(NULL, '92564203') WHERE (((rt0.c1 IN (rt0.c1, rt0.c2)))>>(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1693889728);\n; -- 0ms;
REINDEX  rt0; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15964'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x''); -- 1ms;
ANALYZE main; -- 5ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1560751621); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c1) VALUES ('', 0.6237102603325562), (0.3397299380444476, NULL), ('', x'dc56'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 5ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1845841065);\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 487046270);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0, vt0, rt1;
SELECT * FROM rt0, vt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(vt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE ((NOT (((((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0, vt0, rt1;
SELECT DISTINCT rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)GLOB(rt1.c1))) NOT NULL);
SELECT DISTINCT rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)GLOB(rt1.c1))) NOT NULL) WHERE (('-1845841065' IN (rt1.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)GLOB(rt1.c1))) NOT NULL) WHERE ((NOT (('-1845841065' IN (rt1.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)GLOB(rt1.c1))) NOT NULL) WHERE (((('-1845841065' IN (rt1.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)GLOB(rt1.c1))) NOT NULL);
SELECT rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3;
SELECT rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0, vt0 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM) GROUP BY rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3 UNION SELECT rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0, vt0 WHERE ((NOT (CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM))) GROUP BY rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3 UNION SELECT ALL rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0, vt0 WHERE (((CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3;
SELECT rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c0, vt0.c0, rt1.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING TOTAL(((COUNT(*)) BETWEEN (rt0.c1) AND (GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (TOTAL(((COUNT(*)) BETWEEN (rt0.c1) AND (GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((TOTAL(((COUNT(*)) BETWEEN (rt0.c1) AND (GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT rt1.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((rt0.c3) BETWEEN ('-565098107') AND (rt0.c1)))) AND ((((rt0.c2)GLOB(rt0.c2)))));
SELECT ALL rt1.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((rt0.c3) BETWEEN ('-565098107') AND (rt0.c1)))) AND ((((rt0.c2)GLOB(rt0.c2))))) WHERE ((NOT (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))))) UNION ALL SELECT rt1.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((rt0.c3) BETWEEN ('-565098107') AND (rt0.c1)))) AND ((((rt0.c2)GLOB(rt0.c2))))) WHERE ((NOT ((NOT (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))))))) UNION ALL SELECT rt1.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((rt0.c3) BETWEEN ('-565098107') AND (rt0.c1)))) AND ((((rt0.c2)GLOB(rt0.c2))))) WHERE ((((NOT (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT rt1.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((((rt0.c3) BETWEEN ('-565098107') AND (rt0.c1)))) AND ((((rt0.c2)GLOB(rt0.c2)))));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS REAL) THEN rt1.c0 WHEN (~ (rt1.c0)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c2)==(rt1.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS REAL) THEN rt1.c0 WHEN (~ (rt1.c0)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c2)=(rt1.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE (((((rt1.c0) NOT NULL)) IS FALSE)) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS REAL) THEN rt1.c0 WHEN (~ (rt1.c0)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c2)==(rt1.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE ((NOT (((((rt1.c0) NOT NULL)) IS FALSE)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS REAL) THEN rt1.c0 WHEN (~ (rt1.c0)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c2)==(rt1.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE (((((((rt1.c0) NOT NULL)) IS FALSE)) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS REAL) THEN rt1.c0 WHEN (~ (rt1.c0)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c2)==(rt1.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (AVG(rt0.c0) IN ()) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (NOT ((AVG(rt0.c0) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (((AVG(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (AVG(rt0.c0) IN ()) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (NOT ((AVG(rt0.c0) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (((AVG(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT ALL * FROM rt0, vt0, rt1;
SELECT * FROM rt0, vt0, rt1 WHERE ((((((rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, rt1.c0, rt1.c0)) AND ((3.5888503E7, 0.6190754616018983, vt0.c0)))) NOT BETWEEN (((rt0.c1)AND(rt0.c2))) AND (UPPER(DISTINCT rt1.c2)))) UNION ALL SELECT ALL * FROM rt0, vt0, rt1 WHERE ((NOT ((((((rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, rt1.c0, rt1.c0)) AND ((3.5888503E7, 0.6190754616018983, vt0.c0)))) NOT BETWEEN (((rt0.c1)AND(rt0.c2))) AND (UPPER(DISTINCT rt1.c2)))))) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE ((((((((rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, rt1.c0, rt1.c0)) AND ((3.5888503E7, 0.6190754616018983, vt0.c0)))) NOT BETWEEN (((rt0.c1)AND(rt0.c2))) AND (UPPER(DISTINCT rt1.c2)))) ISNULL));
SELECT ALL * FROM rt0, vt0, rt1;
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, rt0.c3, rt0.c2, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, rt0.c3, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE (CAST(COALESCE(rt1.c0, rt0.c3) AS NUMERIC)) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, rt0.c3, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE ((NOT (CAST(COALESCE(rt1.c0, rt0.c3) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, rt0.c3, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE (((CAST(COALESCE(rt1.c0, rt0.c3) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c2, rt0.c3, rt0.c2, rt1.c1 FROM rt0, rt1;
SELECT ALL rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(rt1.c0)))AND(rt0.c2)))OR(rt1.c2)))) AND ((((rt0.c2) IS TRUE))))) GROUP BY rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(rt1.c0)))AND(rt0.c2)))OR(rt1.c2)))) AND ((((rt0.c2) IS TRUE))))))) GROUP BY rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(rt1.c0)))AND(rt0.c2)))OR(rt1.c2)))) AND ((((rt0.c2) IS TRUE))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt0.c2, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c1;
SELECT rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(rt1.c1)) NOTNULL) UNION ALL SELECT ALL rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2 HAVING (NOT (((GROUP_CONCAT(rt1.c1)) NOTNULL))) UNION ALL SELECT rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2 HAVING ((((GROUP_CONCAT(rt1.c1)) NOTNULL)) ISNULL);
SELECT rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(rt1.c1)) NOTNULL) UNION ALL SELECT ALL rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2 HAVING (NOT (((GROUP_CONCAT(rt1.c1)) NOTNULL))) UNION ALL SELECT rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2 HAVING ((((GROUP_CONCAT(rt1.c1)) NOTNULL)) ISNULL);
SELECT rt0.c3, rt1.c2, vt0.c0, rt0.c2 FROM vt0, rt1 INNER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c3, rt1.c2, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN (((0.4293676069075084))!=((rt0.c0))) THEN CAST(rt0.c2 AS BLOB) ELSE DATE(x'f7ab', rt0.c2, rt0.c1, rt0.c0, vt0.c0) END) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE rt0.c0  WHEN (((0.4293676069075084))<>((rt0.c0))) THEN CAST(rt0.c2 AS BLOB) ELSE DATE(x'f7ab', rt0.c2, rt0.c1, rt0.c0, vt0.c0) END))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN (((0.4293676069075084))<>((rt0.c0))) THEN CAST(rt0.c2 AS BLOB) ELSE DATE(x'f7ab', rt0.c2, rt0.c1, rt0.c0, vt0.c0) END) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0x606e9fe9) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0x606e9fe9))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0X606e9fe9) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) COLLATE BINARY GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1;
SELECT rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) COLLATE BINARY WHERE ((NOT ((rt1.c2 IN ())))) GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1 UNION SELECT rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) COLLATE BINARY WHERE ((NOT ((NOT ((rt1.c2 IN ())))))) GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1 UNION SELECT ALL rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) COLLATE BINARY WHERE ((((NOT ((rt1.c2 IN ())))) ISNULL)) GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1;
SELECT ALL rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1 FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) COLLATE BINARY GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0, rt1.c1;
SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0;
SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0;
SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c3, rt1.c0, vt0.c0;
SELECT ALL rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1)-(rt0.c2))) IS TRUE);
SELECT rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1)-(rt0.c2))) IS TRUE) WHERE ((((rt1.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((rt1.c2 COLLATE NOCASE)))) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1)-(rt0.c2))) IS TRUE) WHERE ((NOT ((((rt1.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((rt1.c2 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1)-(rt0.c2))) IS TRUE) WHERE ((((((rt1.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((rt1.c2 COLLATE NOCASE)))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt0.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1)-(rt0.c2))) IS TRUE);
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, rt0 WHERE (((((rt1.c2)LIKE(rt1.c1)))OR(((((rt1.c2)OR(rt1.c1)))OR(rt1.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, rt0 WHERE ((NOT (((((rt1.c2)LIKE(rt1.c1)))OR(((((rt1.c2)OR(rt1.c1)))OR(rt1.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, rt0 WHERE (((((((rt1.c2)LIKE(rt1.c1)))OR(((((rt1.c2)OR(rt1.c1)))OR(rt1.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, rt0;
SELECT ALL rt1.c0, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt1.c0, rt0.c1;
SELECT ALL rt1.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE (((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) IN ())) GROUP BY rt1.c0, rt0.c1 UNION SELECT ALL rt1.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE ((NOT (((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) IN ())))) GROUP BY rt1.c0, rt0.c1 UNION SELECT rt1.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE (((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) IN ())) ISNULL)) GROUP BY rt1.c0, rt0.c1;
SELECT ALL rt1.c0, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt1.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (((((((((((rt0.c2, vt0.c0, COUNT(MAX(rt0.c3)), rt0.c0, rt0.c0))<((COUNT(*), GROUP_CONCAT(SUM(TOTAL(rt0.c3))), rt0.c0, AVG(GROUP_CONCAT(rt0.c1)), MAX(NULL)))))OR(((((rt0.c1)OR(vt0.c0)))OR(SUM(vt0.c0))))))OR(load_extension(COUNT(rt0.c2), rt0.c0))))OR(AVG(rt0.c3))))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT ((((((((((((rt0.c2, vt0.c0, COUNT(MAX(rt0.c3)), rt0.c0, rt0.c0))<((COUNT(*), GROUP_CONCAT(SUM(TOTAL(rt0.c3))), rt0.c0, AVG(GROUP_CONCAT(rt0.c1)), MAX(NULL)))))OR(((((rt0.c1)OR(vt0.c0)))OR(SUM(vt0.c0))))))OR(load_extension(COUNT(rt0.c2), rt0.c0))))OR(AVG(rt0.c3))))OR(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (((((((((((((rt0.c2, vt0.c0, COUNT(MAX(rt0.c3)), rt0.c0, rt0.c0))<((COUNT(*), GROUP_CONCAT(SUM(TOTAL(rt0.c3))), rt0.c0, AVG(GROUP_CONCAT(rt0.c1)), MAX(NULL)))))OR(((((rt0.c1)OR(vt0.c0)))OR(SUM(vt0.c0))))))OR(load_extension(COUNT(rt0.c2), rt0.c0))))OR(AVG(rt0.c3))))OR(COUNT(*)))) ISNULL);
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((((rt0.c2 IN ()))LIKE((('*\r/{h+F')||(rt0.c3))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ((((rt0.c2 IN ()))LIKE((('*\r/{h+F')||(rt0.c3))))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((((rt0.c2 IN ()))LIKE((('*\r/{h+F')||(rt0.c3))))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (CASE load_extension('', 'LC&䦅gb/')  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN (NULL IN ()) END) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (CASE load_extension('', 'LC&䦅gb/')  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN (NULL IN ()) END))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((CASE load_extension('', 'LC&䦅gb/')  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN (NULL IN ()) END) ISNULL));
SELECT rt0.c1, vt0.c0, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, vt0.c0, rt1.c2;
SELECT ALL rt0.c1, vt0.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE ((((((rt1.c1 IN ()))AND(CASE 0.8193995176138634  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c1 END)))OR(((rt1.c2)==(rt0.c3))))) GROUP BY rt0.c1, vt0.c0, rt1.c2 UNION SELECT rt0.c1, vt0.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE ((NOT ((((((rt1.c1 IN ()))AND(CASE 0.8193995176138634  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c1 END)))OR(((rt1.c2)==(rt0.c3))))))) GROUP BY rt0.c1, vt0.c0, rt1.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE ((((((((rt1.c1 IN ()))AND(CASE 0.8193995176138634  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c1 END)))OR(((rt1.c2)=(rt0.c3))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt1.c2;
SELECT rt0.c1, vt0.c0, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING rt1.c1 UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING rt1.c1 UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT * FROM vt0 INNER JOIN rt1 ON CAST(((rt0.c3)OR(rt0.c3)) AS INTEGER) CROSS JOIN rt0 ON TRIM(DISTINCT (rt0.c2 IN (NULL)));
SELECT * FROM vt0 INNER JOIN rt1 ON CAST(((rt0.c3)OR(rt0.c3)) AS INTEGER) CROSS JOIN rt0 ON TRIM(DISTINCT (rt0.c2 IN (NULL))) WHERE (CAST(((rt0.c0)<(rt1.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt0 INNER JOIN rt1 ON CAST(((rt0.c3)OR(rt0.c3)) AS INTEGER) CROSS JOIN rt0 ON TRIM(DISTINCT (rt0.c2 IN (NULL))) WHERE ((NOT (CAST(((rt0.c0)<(rt1.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt0 INNER JOIN rt1 ON CAST(((rt0.c3)OR(rt0.c3)) AS INTEGER) CROSS JOIN rt0 ON TRIM(DISTINCT (rt0.c2 IN (NULL))) WHERE (((CAST(((rt0.c0)<(rt1.c0)) AS INTEGER)) ISNULL));
SELECT * FROM vt0 INNER JOIN rt1 ON CAST(((rt0.c3)OR(rt0.c3)) AS INTEGER) CROSS JOIN rt0 ON TRIM(DISTINCT (rt0.c2 IN (NULL)));
SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM vt0, rt0, rt1;
SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM vt0, rt0, rt1 WHERE ((- (rt0.c1))) UNION SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM vt0, rt0, rt1 WHERE ((NOT ((- (rt0.c1))))) UNION SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM vt0, rt0, rt1 WHERE ((((- (rt0.c1))) ISNULL));
SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM vt0, rt0, rt1;
SELECT ALL rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0, rt0 WHERE (CASE WHEN ((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)) THEN rt0.c2 ELSE rt0.c0 COLLATE NOCASE END) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, vt0, rt0 WHERE ((NOT (CASE WHEN ((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)) THEN rt0.c2 ELSE rt0.c0 COLLATE NOCASE END))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, vt0, rt0 WHERE (((CASE WHEN ((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)) THEN rt0.c2 ELSE rt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c0;
SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2;
SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2 HAVING (((COUNT(*))) BETWEEN ((rt1.c0)) AND ((COUNT(COUNT(rt0.c0))))) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt0.c2, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2 HAVING (NOT ((((COUNT(*))) BETWEEN ((rt1.c0)) AND ((COUNT(COUNT(rt0.c0))))))) UNION ALL SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2 HAVING (((((COUNT(*))) BETWEEN ((rt1.c0)) AND ((COUNT(COUNT(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c1) BETWEEN (-1.711153238E9) AND (rt1.c2)))<=((- (vt0.c0))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (((((rt1.c1) BETWEEN (-1.711153238E9) AND (rt1.c2)))<=((- (vt0.c0))))))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((((rt1.c1) BETWEEN (-1.711153238E9) AND (rt1.c2)))<=((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT rt0.c3, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT rt0.c3, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE ((((LOWER(DISTINCT rt1.c2)))!=(((((rt1.c2))<((''))))))) UNION SELECT DISTINCT rt0.c3, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE ((NOT ((((LOWER(DISTINCT rt1.c2)))<>(((((rt1.c2))<((''))))))))) UNION SELECT DISTINCT rt0.c3, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE ((((((LOWER(DISTINCT rt1.c2)))!=(((((rt1.c2))<((''))))))) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)/((- (619535398))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)/((- (619535398))))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)/((- (619535398))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c3;
SELECT ALL rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING ((COUNT(*))<<(CAST(SUM(rt1.c2) AS TEXT))) UNION ALL SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING (NOT (((COUNT(*))<<(CAST(SUM(rt1.c2) AS TEXT))))) UNION ALL SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING ((((COUNT(*))<<(CAST(SUM(rt1.c2) AS TEXT)))) ISNULL);
SELECT ALL rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING ((COUNT(*))<<(CAST(SUM(rt1.c2) AS TEXT))) UNION ALL SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING (NOT (((COUNT(*))<<(CAST(SUM(rt1.c2) AS TEXT))))) UNION ALL SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING ((((COUNT(*))<<(CAST(SUM(rt1.c2) AS TEXT)))) ISNULL);
SELECT ALL rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT ALL MIN(((rt1.c1) IS FALSE) COLLATE NOCASE) FROM vt0, rt0, rt1;
SELECT rt0.c3, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0 NOT INDEXED, rt1;
SELECT rt0.c3, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0, rt1 WHERE (((rt1.c0)-(rt0.c3)) COLLATE RTRIM) ORDER BY rt0.c0 DESC, CAST(rt0.c2 AS REAL)  NULLS FIRST, (((((rt1.c1, rt0.c1, rt1.c1))<(('M|', rt0.c3, rt1.c1)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) AND (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))), rt1.c0 DESC;
SELECT ALL rt0.c3, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0, rt1 WHERE ((NOT (((rt1.c0)-(rt0.c3)) COLLATE RTRIM))) ORDER BY rt0.c0 DESC, CAST(rt0.c2 AS REAL)  NULLS FIRST, (((((rt1.c1, rt0.c1, rt1.c1))<(('M|', rt0.c3, rt1.c1)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) AND (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))), rt1.c0 DESC;
SELECT rt0.c3, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0, rt1 WHERE (((((rt1.c0)-(rt0.c3)) COLLATE RTRIM) ISNULL)) ORDER BY rt0.c0 DESC, CAST(rt0.c2 AS REAL)  NULLS FIRST, (((((rt1.c1, rt0.c1, rt1.c1))<(('M|', rt0.c3, rt1.c1)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) AND (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))), rt1.c0 DESC;
SELECT rt0.c3, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0 NOT INDEXED, rt1;
SELECT DISTINCT rt0.c3, rt1.c2, rt0.c2, rt1.c0, rt0.c0, vt0.c0 FROM vt0, rt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c3, rt1.c2, rt0.c2, rt1.c0, rt0.c0, vt0.c0 FROM vt0, rt1 NATURAL JOIN rt0 WHERE (((((rt1.c1)-(rt0.c2))) NOTNULL)) UNION SELECT DISTINCT rt0.c3, rt1.c2, rt0.c2, rt1.c0, rt0.c0, vt0.c0 FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((NOT (((((rt1.c1)-(rt0.c2))) NOTNULL)))) UNION SELECT DISTINCT rt0.c3, rt1.c2, rt0.c2, rt1.c0, rt0.c0, vt0.c0 FROM vt0, rt1 NATURAL JOIN rt0 WHERE (((((((rt1.c1)-(rt0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c2, rt0.c2, rt1.c0, rt0.c0, vt0.c0 FROM vt0, rt1 NATURAL JOIN rt0;
SELECT ALL rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt1.c1, rt0.c0, rt1.c2, rt0.c1;
SELECT rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c2)) AS BLOB)) GROUP BY rt1.c1, rt0.c0, rt1.c2, rt0.c1 UNION SELECT rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c2)) AS BLOB)))) GROUP BY rt1.c1, rt0.c0, rt1.c2, rt0.c1 UNION SELECT ALL rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c2)) AS BLOB)) ISNULL)) GROUP BY rt1.c1, rt0.c0, rt1.c2, rt0.c1;
SELECT ALL rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt1.c1, rt0.c0, rt1.c2, rt0.c1;
SELECT ALL rt0.c3, vt0.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c0;
SELECT ALL rt0.c3, vt0.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c0 HAVING GROUP_CONCAT(COUNT(SUM(rt1.c1))) UNION ALL SELECT rt0.c3, vt0.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(SUM(rt1.c1))))) UNION ALL SELECT rt0.c3, vt0.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(SUM(rt1.c1)))) ISNULL);
SELECT vt0.c0 FROM rt1, vt0, rt0;
SELECT ALL vt0.c0 FROM rt1, vt0, rt0 WHERE (rt1.c1) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0, rt0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0, rt0 WHERE (((rt1.c1) ISNULL));
SELECT vt0.c0 FROM rt1, vt0, rt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE ((((+ (rt1.c0))) BETWEEN (rt1.c0 COLLATE BINARY) AND ('-1711153238'))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT ((((+ (rt1.c0))) BETWEEN (rt1.c0 COLLATE BINARY) AND ('-1711153238'))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((((((+ (rt1.c0))) BETWEEN (rt1.c0 COLLATE BINARY) AND ('-1711153238'))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2;
SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2 FROM vt0, rt1, rt0 WHERE (0.6237102603325562) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2 FROM vt0, rt1, rt0 WHERE ((NOT (0.6237102603325562))) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2 FROM vt0, rt1, rt0 WHERE (((0.6237102603325562) ISNULL)) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2;
SELECT rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c1, rt1.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING MAX(((rt0.c0)IS(COUNT(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (MAX(((rt0.c0)IS(COUNT(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING ((MAX(((rt0.c0)IS(COUNT(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT * FROM vt0, rt0, rt1;
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((rt1.c0)<=(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0, rt0, rt1 WHERE ((NOT (((rt1.c0)<=(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, rt0, rt1 WHERE (((((rt1.c0)<=(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS BLOB))/((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))/((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS BLOB))/((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (x'676c'))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (x'676c'))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (x'676c'))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (((vt0.c0, 0.482305715986294, vt0.c0))<=((rt1.c0, x'60bc', rt1.c0))) COLLATE RTRIM UNION ALL SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (NOT ((((vt0.c0, 0.482305715986294, vt0.c0))<=((rt1.c0, x'60bc', rt1.c0))) COLLATE RTRIM)) UNION ALL SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (((((vt0.c0, 0.482305715986294, vt0.c0))<=((rt1.c0, x'60bc', rt1.c0))) COLLATE RTRIM) ISNULL);
SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (((vt0.c0, 0.482305715986294, vt0.c0))<=((rt1.c0, x'60bc', rt1.c0))) COLLATE RTRIM UNION ALL SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (NOT ((((vt0.c0, 0.482305715986294, vt0.c0))<=((rt1.c0, x'60bc', rt1.c0))) COLLATE RTRIM)) UNION ALL SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0 HAVING (((((vt0.c0, 0.482305715986294, vt0.c0))<=((rt1.c0, x'60bc', rt1.c0))) COLLATE RTRIM) ISNULL);
SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))<(rt1.c2 COLLATE NOCASE))) UNION ALL SELECT * FROM rt1 NOT INDEXED WHERE ((NOT (((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))<(rt1.c2 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))<(rt1.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)AND(x'50a1'))))!=((vt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(x'50a1'))))!=((vt0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)AND(x'50a1'))))!=((vt0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c1))) IS TRUE) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c1))) IS TRUE) WHERE (IFNULL(((('92564203')) BETWEEN ((rt1.c1)) AND ((rt1.c1))), (((rt1.c2))>=((rt1.c1))))) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c1))) IS TRUE) WHERE ((NOT (IFNULL(((('92564203')) BETWEEN ((rt1.c1)) AND ((rt1.c1))), (((rt1.c2))>=((rt1.c1))))))) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c1))) IS TRUE) WHERE (((IFNULL(((('92564203')) BETWEEN ((rt1.c1)) AND ((rt1.c1))), (((rt1.c2))>=((rt1.c1))))) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c1))) IS TRUE) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt0.c3, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c2, rt0.c0, rt1.c1, vt0.c0;
SELECT rt0.c3, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c2, rt0.c0, rt1.c1, vt0.c0 HAVING SUM(MIN(AVG(SUM(vt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c2, rt0.c0, rt1.c1, vt0.c0 HAVING (NOT (SUM(MIN(AVG(SUM(vt0.c0)))))) UNION ALL SELECT ALL rt0.c3, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c2, rt0.c0, rt1.c1, vt0.c0 HAVING ((SUM(MIN(AVG(SUM(vt0.c0))))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0, rt1.c0, rt0.c0)) BETWEEN ((((rt1.c1)|(rt1.c0)), ((rt0.c1)|(rt1.c0)), rt0.c3)) AND ((((rt0.c3)%(rt1.c2)), rt0.c3 COLLATE BINARY, rt1.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((((rt0.c0, rt1.c0, rt0.c0)) BETWEEN ((((rt1.c1)|(rt1.c0)), ((rt0.c1)|(rt1.c0)), rt0.c3)) AND ((((rt0.c3)%(rt1.c2)), rt0.c3 COLLATE BINARY, rt1.c1 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c0, rt1.c0, rt0.c0)) BETWEEN ((((rt1.c1)|(rt1.c0)), ((rt0.c1)|(rt1.c0)), rt0.c3)) AND ((((rt0.c3)%(rt1.c2)), rt0.c3 COLLATE BINARY, rt1.c1 COLLATE RTRIM)))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1;
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) UNION SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1 WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS INTEGER)))) UNION SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1 WHERE (((CAST(((vt0.c0) NOT NULL) AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN ((((((((rt1.c0)OR('')))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) END) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CASE WHEN rt1.c0 COLLATE RTRIM THEN ((((((((rt1.c0)OR('')))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) END))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((CASE WHEN rt1.c0 COLLATE RTRIM THEN ((((((((rt1.c0)OR('')))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) END) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)&(((rt0.c3)IS NOT(rt1.c2)))) INNER JOIN rt1 ON (NOT (CAST(rt1.c1 AS REAL))) GROUP BY rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((((((rt0.c1)AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)))OR(((((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((x'')IS NOT(rt0.c0)))))AND(TIME(NULL, vt0.c0, rt0.c1)));
SELECT ALL vt0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((((((rt0.c1)AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)))OR(((((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((x'')IS NOT(rt0.c0)))))AND(TIME(NULL, vt0.c0, rt0.c1))) WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL)) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((((((rt0.c1)AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)))OR(((((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((x'')IS NOT(rt0.c0)))))AND(TIME(NULL, vt0.c0, rt0.c1))) WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) ISNULL)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((((((rt0.c1)AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)))OR(((((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((x'')IS NOT(rt0.c0)))))AND(TIME(NULL, vt0.c0, rt0.c1))) WHERE (((((CAST(rt0.c2 AS TEXT)) ISNULL)) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((((((rt0.c1)AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)))OR(((((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((x'')IS NOT(rt0.c0)))))AND(TIME(NULL, vt0.c0, rt0.c1)));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0, rt1 WHERE ('-1993520285') GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0, rt1 WHERE ((NOT ('-1993520285'))) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0, rt1 WHERE ((('-1993520285') ISNULL)) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c0, rt1.c1, rt0.c2, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt0.c1;
SELECT rt0.c0, rt1.c1, rt0.c2, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(rt1.c1)) UNION ALL SELECT ALL rt0.c0, rt1.c1, rt0.c2, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT rt0.c0, rt1.c1, rt0.c2, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt1.c1))) ISNULL);
SELECT rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (CAST(((rt0.c2)/(rt0.c0)) AS REAL)) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)/(rt0.c0)) AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (((CAST(((rt0.c2)/(rt0.c0)) AS REAL)) ISNULL));
SELECT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt1.c2 FROM rt1 INNER JOIN vt0 ON CAST(CAST(rt1.c1 AS INTEGER) AS INTEGER);
SELECT DISTINCT rt1.c2 FROM rt1 INNER JOIN vt0 ON CAST(CAST(rt1.c1 AS INTEGER) AS INTEGER) WHERE (((((vt0.c0) ISNULL))IS(NULL))) UNION SELECT DISTINCT rt1.c2 FROM rt1 INNER JOIN vt0 ON CAST(CAST(rt1.c1 AS INTEGER) AS INTEGER) WHERE ((NOT (((((vt0.c0) ISNULL))IS(NULL))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 INNER JOIN vt0 ON CAST(CAST(rt1.c1 AS INTEGER) AS INTEGER) WHERE (((((((vt0.c0) ISNULL))IS(NULL))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1 INNER JOIN vt0 ON CAST(CAST(rt1.c1 AS INTEGER) AS INTEGER);
SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((0.6190754616018983) NOT BETWEEN (rt0.c1) AND (rt0.c3)))%(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((0.6190754616018983) NOT BETWEEN (rt0.c1) AND (rt0.c3)))%(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((((0.6190754616018983) NOT BETWEEN (rt0.c1) AND (rt0.c3)))%(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt1.c0;
SELECT ALL * FROM rt0, rt1, vt0;
SELECT * FROM rt0, rt1, vt0 WHERE (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (CASE (rt0.c0 IN ())  WHEN -2.7502094E8 THEN CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c1 END END) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((NOT (CASE (rt0.c0 IN ())  WHEN -2.7502094E8 THEN CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c1 END END))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (((CASE (rt0.c0 IN ())  WHEN -2.7502094E8 THEN CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c1 END END) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c0)) BETWEEN (((- (rt1.c1)))) AND (((((rt1.c2))>=((rt1.c0))))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0)) BETWEEN (((- (rt1.c1)))) AND (((((rt1.c2))>=((rt1.c0))))))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c0)) BETWEEN (((- (rt1.c1)))) AND (((((rt1.c2))>=((rt1.c0))))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(MAX(SUM(AVG('-199676275')))), TOTAL(vt0.c0), COUNT(SUM(vt0.c0)))) BETWEEN ((SUM(vt0.c0), COUNT(*), MIN(vt0.c0))) AND ((GROUP_CONCAT(vt0.c0), GROUP_CONCAT('8E	WmQf2') COLLATE RTRIM, (GROUP_CONCAT(vt0.c0) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((TOTAL(MAX(SUM(AVG('-199676275')))), TOTAL(vt0.c0), COUNT(SUM(vt0.c0)))) BETWEEN ((SUM(vt0.c0), COUNT(*), MIN(vt0.c0))) AND ((GROUP_CONCAT(vt0.c0), GROUP_CONCAT('8E	WmQf2') COLLATE RTRIM, (GROUP_CONCAT(vt0.c0) IN ())))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((TOTAL(MAX(SUM(AVG('-199676275')))), TOTAL(vt0.c0), COUNT(SUM(vt0.c0)))) BETWEEN ((SUM(vt0.c0), COUNT(*), MIN(vt0.c0))) AND ((GROUP_CONCAT(vt0.c0), GROUP_CONCAT('8E	WmQf2') COLLATE RTRIM, (GROUP_CONCAT(vt0.c0) IN ()))))) ISNULL);
SELECT rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1;
SELECT rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1 WHERE (rt1.c0 COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1 WHERE ((NOT (rt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1 WHERE (((rt1.c0 COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (CASE WHEN ((((rt1.c2)OR('1693889728')))AND(rt1.c1)) THEN ((rt0.c1) IS FALSE) WHEN ((rt1.c1) IS FALSE) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c0 IN ()) THEN ((rt0.c2)+(rt0.c3)) ELSE ((rt0.c1) NOT NULL) END) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (CASE WHEN ((((rt1.c2)OR('1693889728')))AND(rt1.c1)) THEN ((rt0.c1) IS FALSE) WHEN ((rt1.c1) IS FALSE) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c0 IN ()) THEN ((rt0.c2)+(rt0.c3)) ELSE ((rt0.c1) NOT NULL) END))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((CASE WHEN ((((rt1.c2)OR('1693889728')))AND(rt1.c1)) THEN ((rt0.c1) IS FALSE) WHEN ((rt1.c1) IS FALSE) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c0 IN ()) THEN ((rt0.c2)+(rt0.c3)) ELSE ((rt0.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (CAST((('-*') BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CAST((('-*') BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((CAST((('-*') BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 HAVING (~ (rt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 HAVING (NOT ((~ (rt0.c0)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 HAVING (((~ (rt0.c0)) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 HAVING (~ (rt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 HAVING (NOT ((~ (rt0.c0)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 HAVING (((~ (rt0.c0)) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt0, rt1;
SELECT ALL rt0.c2, rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE (CASE (- (rt0.c0))  WHEN ((((((((((((0x2239d77)OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) THEN ((rt1.c1)&(rt0.c3)) END) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((NOT (CASE (- (rt0.c0))  WHEN ((((((((((((0x2239d77)OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) THEN ((rt1.c1)&(rt0.c3)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE (((CASE (- (rt0.c0))  WHEN ((((((((((((0x2239d77)OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) THEN ((rt1.c1)&(rt0.c3)) END) ISNULL));
SELECT rt0.c2, rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3, rt0.c3, rt1.c1, rt0.c3, rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c1, (((vt0.c0, rt1.c1, rt1.c1, 0.4293676069075084, vt0.c0)) BETWEEN (('-565098107', rt0.c2, rt1.c2, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c2, rt1.c0, rt1.c0, rt1.c2))), vt0.c0 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) AND ((-124358155, ((((rt0.c3)OR(rt0.c0)))AND(rt1.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((((((vt0.c0)AND(rt0.c2)))AND(0Xffffffffeb838e7c)))OR(rt0.c1)))OR(rt1.c2)), rt0.c0)));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3, rt0.c3, rt1.c1, rt0.c3, rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c1, (((vt0.c0, rt1.c1, rt1.c1, 0.4293676069075084, vt0.c0)) BETWEEN (('-565098107', rt0.c2, rt1.c2, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c2, rt1.c0, rt1.c0, rt1.c2))), vt0.c0 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) AND ((-124358155, ((((rt0.c3)OR(rt0.c0)))AND(rt1.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((((((vt0.c0)AND(rt0.c2)))AND(0xffffffffeb838e7c)))OR(rt0.c1)))OR(rt1.c2)), rt0.c0))) WHERE (((rt1.c2)&(rt1.c1)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3, rt0.c3, rt1.c1, rt0.c3, rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c1, (((vt0.c0, rt1.c1, rt1.c1, 0.4293676069075084, vt0.c0)) BETWEEN (('-565098107', rt0.c2, rt1.c2, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c2, rt1.c0, rt1.c0, rt1.c2))), vt0.c0 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) AND ((-124358155, ((((rt0.c3)OR(rt0.c0)))AND(rt1.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((((((vt0.c0)AND(rt0.c2)))AND(0xffffffffeb838e7c)))OR(rt0.c1)))OR(rt1.c2)), rt0.c0))) WHERE ((NOT (((rt1.c2)&(rt1.c1)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3, rt0.c3, rt1.c1, rt0.c3, rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c1, (((vt0.c0, rt1.c1, rt1.c1, 0.4293676069075084, vt0.c0)) BETWEEN (('-565098107', rt0.c2, rt1.c2, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c2, rt1.c0, rt1.c0, rt1.c2))), vt0.c0 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) AND ((-124358155, ((((rt0.c3)OR(rt0.c0)))AND(rt1.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((((((vt0.c0)AND(rt0.c2)))AND(0xffffffffeb838e7c)))OR(rt0.c1)))OR(rt1.c2)), rt0.c0))) WHERE (((((rt1.c2)&(rt1.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3, rt0.c3, rt1.c1, rt0.c3, rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c1, (((vt0.c0, rt1.c1, rt1.c1, 0.4293676069075084, vt0.c0)) BETWEEN (('-565098107', rt0.c2, rt1.c2, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c2, rt1.c0, rt1.c0, rt1.c2))), vt0.c0 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) AND ((-124358155, ((((rt0.c3)OR(rt0.c0)))AND(rt1.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((((((vt0.c0)AND(rt0.c2)))AND(0Xffffffffeb838e7c)))OR(rt0.c1)))OR(rt1.c2)), rt0.c0)));
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0 HAVING ((TOTAL(SUM(TOTAL(GROUP_CONCAT(SUM(MIN(rt1.c0))))))) ISNULL) UNION ALL SELECT rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0 HAVING (NOT (((TOTAL(SUM(TOTAL(GROUP_CONCAT(SUM(MIN(rt1.c0))))))) ISNULL))) UNION ALL SELECT ALL rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0 HAVING ((((TOTAL(SUM(TOTAL(GROUP_CONCAT(SUM(MIN(rt1.c0))))))) ISNULL)) ISNULL);
SELECT ALL TOTAL(CAST(rt1.c2 AS TEXT) COLLATE RTRIM) FROM rt0, vt0, rt1 ORDER BY CAST(TOTAL_CHANGES() AS NUMERIC), (((rt1.c0)) BETWEEN (((rt0.c0 IN ()))) AND (((rt1.c0 IN ())))) DESC;
SELECT * FROM rt1 NATURAL JOIN vt0;
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c2 COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (rt1.c2 COLLATE NOCASE))) UNION ALL SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c2 COLLATE NOCASE) ISNULL));
SELECT * FROM rt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))) ISNULL);
SELECT DISTINCT * FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))) ISNULL) WHERE (-1123101074) UNION SELECT DISTINCT * FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))) ISNULL) WHERE ((NOT (-1123101074))) UNION SELECT DISTINCT * FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))) ISNULL) WHERE (((-1123101074) ISNULL));
SELECT DISTINCT * FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0, rt1 WHERE ((((((('')%(rt1.c0)))OR((NOT (vt0.c0)))))OR((rt0.c2 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt0, rt1 WHERE ((NOT ((((((('')%(rt1.c0)))OR((NOT (vt0.c0)))))OR((rt0.c2 IN ())))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt0, rt1 WHERE ((((((((('')%(rt1.c0)))OR((NOT (vt0.c0)))))OR((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((rt0.c2) BETWEEN (rt0.c1) AND (SUM(rt0.c3))))+(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (SUM(rt0.c3))))+(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((rt0.c2) BETWEEN (rt0.c1) AND (SUM(rt0.c3))))+(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((rt0.c2) BETWEEN (rt0.c1) AND (SUM(rt0.c3))))+(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (SUM(rt0.c3))))+(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((rt0.c2) BETWEEN (rt0.c1) AND (SUM(rt0.c3))))+(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT SUM((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END IN ())) FROM rt1, rt0 ORDER BY ((((((((((rt1.c1)<>(rt1.c0)))AND(((rt0.c0)||(rt0.c0)))))OR(((rt1.c1)==(rt1.c2)))))OR((~ (0.259267676797612)))))OR(((rt0.c2) NOT NULL)))  NULLS LAST;
SELECT ALL rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1;
SELECT rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE ((- ('{}'))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE ((NOT ((- ('{}'))))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE ((((- ('{}'))) ISNULL));
SELECT ALL rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT rt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT rt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt1, rt0 WHERE ((~ (CASE rt1.c1  WHEN '0.3397299380444476' THEN rt0.c3 END))) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt1, rt0 WHERE ((NOT ((~ (CASE rt1.c1  WHEN '0.3397299380444476' THEN rt0.c3 END))))) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt1, rt0 WHERE ((((~ (CASE rt1.c1  WHEN '0.3397299380444476' THEN rt0.c3 END))) ISNULL)) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT rt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt1.c1, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c1, rt1.c1))==((rt1.c0, vt0.c0, rt1.c1)))) BETWEEN (x'') AND (NULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c1, rt1.c1))==((rt1.c0, vt0.c0, rt1.c1)))) BETWEEN (x'') AND (NULL)) GROUP BY rt1.c1, rt1.c2 HAVING MAX(SUM(rt1.c0)) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c1, rt1.c1))=((rt1.c0, vt0.c0, rt1.c1)))) BETWEEN (x'') AND (NULL)) GROUP BY rt1.c1, rt1.c2 HAVING (NOT (MAX(SUM(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c1, rt1.c1))==((rt1.c0, vt0.c0, rt1.c1)))) BETWEEN (x'') AND (NULL)) GROUP BY rt1.c1, rt1.c2 HAVING ((MAX(SUM(rt1.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt1, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt1, rt0 WHERE (((((((rt1.c2) BETWEEN (rt0.c1) AND (vt0.c0)))OR((((rt1.c0))<=((rt1.c2))))))AND((vt0.c0 IN (rt0.c2, rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt1, rt0 WHERE ((NOT (((((((rt1.c2) BETWEEN (rt0.c1) AND (vt0.c0)))OR((((rt1.c0))<=((rt1.c2))))))AND((vt0.c0 IN (rt0.c2, rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt1, rt0 WHERE (((((((((rt1.c2) BETWEEN (rt0.c1) AND (vt0.c0)))OR((((rt1.c0))<=((rt1.c2))))))AND((vt0.c0 IN (rt0.c2, rt0.c2))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(x'')), IFNULL(rt0.c3, rt0.c2), '-1845841065', rt0.c0 COLLATE NOCASE, (rt0.c1 IN (rt0.c1, rt0.c1))))!=((NULL, rt0.c2 COLLATE BINARY, INSTR(rt0.c2, rt0.c3), CAST(rt0.c3 AS INTEGER), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(x'')), IFNULL(rt0.c3, rt0.c2), '-1845841065', rt0.c0 COLLATE NOCASE, (rt0.c1 IN (rt0.c1, rt0.c1))))!=((NULL, rt0.c2 COLLATE BINARY, INSTR(rt0.c2, rt0.c3), CAST(rt0.c3 AS INTEGER), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(x'')), IFNULL(rt0.c3, rt0.c2), '-1845841065', rt0.c0 COLLATE NOCASE, (rt0.c1 IN (rt0.c1, rt0.c1))))<>((NULL, rt0.c2 COLLATE BINARY, INSTR(rt0.c2, rt0.c3), CAST(rt0.c3 AS INTEGER), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, CAST(rt1.c0 AS BLOB), CAST(rt1.c1 AS TEXT))) AND ((((rt1.c1)=(rt1.c1)), (((rt1.c2, rt1.c0, 0.838935282445372))>((rt1.c1, 'b|荴QDjT]', rt1.c2))), (+ (rt1.c2)))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, CAST(rt1.c0 AS BLOB), CAST(rt1.c1 AS TEXT))) AND ((((rt1.c1)==(rt1.c1)), (((rt1.c2, rt1.c0, 0.838935282445372))>((rt1.c1, 'b|荴QDjT]', rt1.c2))), (+ (rt1.c2)))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, CAST(rt1.c0 AS BLOB), CAST(rt1.c1 AS TEXT))) AND ((((rt1.c1)=(rt1.c1)), (((rt1.c2, rt1.c0, 0.838935282445372))>((rt1.c1, 'b|荴QDjT]', rt1.c2))), (+ (rt1.c2)))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING COUNT((NOT (rt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((NOT (rt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((COUNT((NOT (rt0.c1)))) ISNULL);
SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING COUNT((NOT (rt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((NOT (rt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((COUNT((NOT (rt0.c1)))) ISNULL);
SELECT ALL vt0.c0 FROM rt0, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt0.c0, rt0.c3, rt1.c1 FROM vt0, rt1, rt0;
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt0.c0, rt0.c3, rt1.c1 FROM vt0, rt1, rt0 WHERE (ABS(DISTINCT ((rt0.c0) IS FALSE))) UNION SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt0.c0, rt0.c3, rt1.c1 FROM vt0, rt1, rt0 WHERE ((NOT (ABS(DISTINCT ((rt0.c0) IS FALSE))))) UNION SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt0.c0, rt0.c3, rt1.c1 FROM vt0, rt1, rt0 WHERE (((ABS(DISTINCT ((rt0.c0) IS FALSE))) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt0.c0, rt0.c3, rt1.c1 FROM vt0, rt1, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING (- (GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING (NOT ((- (GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt1.c0))))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING (((- (GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt1.c0)))))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE ((NOT ('N⺍Y绗'))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT ((NOT ('N⺍Y绗'))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((((NOT ('N⺍Y绗'))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c0, rt1.c1, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt1, rt0;
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c0, rt1.c1, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt1, rt0 WHERE ((((('<Fc?{ ꢓz锋')OR((+ (rt0.c2)))))OR(((rt1.c0)<(rt1.c2))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c0, rt1.c1, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt1, rt0 WHERE ((NOT ((((('<Fc?{ ꢓz锋')OR((+ (rt0.c2)))))OR(((rt1.c0)<(rt1.c2))))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c0, rt1.c1, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt1, rt0 WHERE ((((((('<Fc?{ ꢓz锋')OR((+ (rt0.c2)))))OR(((rt1.c0)<(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c1, vt0.c0, rt1.c1, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt1, rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((NULLIF(rt0.c3, rt0.c1))|(((rt0.c3) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((NULLIF(rt0.c3, rt0.c1))|(((rt0.c3) NOT NULL)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((NULLIF(rt0.c3, rt0.c1))|(((rt0.c3) NOT NULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX(rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(rt0.c0)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX(rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(rt0.c0)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL MAX(((((rt1.c2)-(rt1.c2))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND ('-116273893'))) FROM rt1 ORDER BY (((CAST(x'2a27fd28' AS BLOB), CAST('FALSE' AS NUMERIC), (rt1.c1 IN ())))>((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)), (((rt1.c1, rt1.c0, rt1.c1))<((rt1.c1, rt1.c2, rt1.c1))), rt1.c0)))  NULLS LAST;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((+ (SQLITE_COMPILEOPTION_USED(rt0.c0)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((+ (SQLITE_COMPILEOPTION_USED(rt0.c0)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((+ (SQLITE_COMPILEOPTION_USED(rt0.c0)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0))))==((STRFTIME(rt0.c3, '-Infinity', rt1.c1))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0))))=((STRFTIME(rt0.c3, '-Infinity', rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0))))==((STRFTIME(rt0.c3, '-Infinity', rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING ((LOWER(DISTINCT COUNT(AVG(rt1.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (((LOWER(DISTINCT COUNT(AVG(rt1.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING ((((LOWER(DISTINCT COUNT(AVG(rt1.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL rt0.c3 FROM rt1 NATURAL JOIN rt0;
SELECT rt0.c3 FROM rt1 NATURAL JOIN rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c3 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c3 FROM rt1 NATURAL JOIN rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c3 FROM rt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c1)-(rt0.c1))  WHEN 0.5403103877647495 THEN UPPER(rt0.c0) ELSE '1854308055' END) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)-(rt0.c1))  WHEN 0.5403103877647495 THEN UPPER(rt0.c0) ELSE '1854308055' END))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c1)-(rt0.c1))  WHEN 0.5403103877647495 THEN UPPER(rt0.c0) ELSE '1854308055' END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0;
SELECT rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0 FROM rt0, rt1, vt0 WHERE (((CAST(rt1.c0 AS INTEGER))<=(((rt0.c1) IS FALSE)))) GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0 FROM rt0, rt1, vt0 WHERE ((NOT (((CAST(rt1.c0 AS INTEGER))<=(((rt0.c1) IS FALSE)))))) GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0 FROM rt0, rt1, vt0 WHERE (((((CAST(rt1.c0 AS INTEGER))<=(((rt0.c1) IS FALSE)))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0;
SELECT rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(TOTAL(rt0.c3)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(rt0.c3)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(TOTAL(rt0.c3))) ISNULL);
SELECT MIN((rt1.c2 COLLATE BINARY IN ())) FROM rt1;
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((((NULL) IS FALSE)) IS TRUE)) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (((((NULL) IS FALSE)) IS TRUE)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((((NULL) IS FALSE)) IS TRUE)) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((~ (rt1.c1 COLLATE RTRIM))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((~ (rt1.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt1 WHERE ((((~ (rt1.c1 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c0)%(NULL))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c0)%(NULL))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE (((CASE WHEN rt0.c1 THEN x'' END) NOTNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c0)%(NULL))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE ((NOT (((CASE WHEN rt0.c1 THEN x'' END) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c0)%(NULL))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE (((((CASE WHEN rt0.c1 THEN x'' END) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c0)%(NULL))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))));
SELECT ALL rt0.c2, vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c2)OR(rt0.c0))) AND (((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))) GROUP BY rt0.c2, vt0.c0, rt0.c3;
SELECT rt0.c2, vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c2)OR(rt0.c0))) AND (((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))GLOB((- (rt0.c2))))) GROUP BY rt0.c2, vt0.c0, rt0.c3 UNION SELECT rt0.c2, vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c2)OR(rt0.c0))) AND (((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))) WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))GLOB((- (rt0.c2))))))) GROUP BY rt0.c2, vt0.c0, rt0.c3 UNION SELECT rt0.c2, vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c2)OR(rt0.c0))) AND (((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))GLOB((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c2, vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c2)OR(rt0.c0))) AND (((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))) GROUP BY rt0.c2, vt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c3, rt1.c2, rt0.c0, vt0.c0 FROM rt0, rt1 INNER JOIN vt0 ON x'' GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c3, rt1.c2, rt0.c0, vt0.c0 FROM rt0, rt1 INNER JOIN vt0 ON x'' GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c0, vt0.c0 HAVING CASE WHEN rt0.c2 THEN CAST(rt0.c3 AS NUMERIC) WHEN AVG(vt0.c0) THEN ((SUM(GROUP_CONCAT(rt1.c2)))+(vt0.c0)) WHEN (((rt0.c0))>((vt0.c0))) THEN CAST(AVG(vt0.c0) AS BLOB) ELSE CAST(rt0.c0 AS NUMERIC) END UNION ALL SELECT rt0.c1, rt0.c3, rt1.c2, rt0.c0, vt0.c0 FROM rt0, rt1 INNER JOIN vt0 ON x'' GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c0, vt0.c0 HAVING (NOT (CASE WHEN rt0.c2 THEN CAST(rt0.c3 AS NUMERIC) WHEN AVG(vt0.c0) THEN ((SUM(GROUP_CONCAT(rt1.c2)))+(vt0.c0)) WHEN (((rt0.c0))>((vt0.c0))) THEN CAST(AVG(vt0.c0) AS BLOB) ELSE CAST(rt0.c0 AS NUMERIC) END)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt1.c2, rt0.c0, vt0.c0 FROM rt0, rt1 INNER JOIN vt0 ON x'' GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c0, vt0.c0 HAVING ((CASE WHEN rt0.c2 THEN CAST(rt0.c3 AS NUMERIC) WHEN AVG(vt0.c0) THEN ((SUM(GROUP_CONCAT(rt1.c2)))+(vt0.c0)) WHEN (((rt0.c0))>((vt0.c0))) THEN CAST(AVG(vt0.c0) AS BLOB) ELSE CAST(rt0.c0 AS NUMERIC) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c2 FROM rt1, vt0;
SELECT DISTINCT rt1.c2 FROM rt1, vt0 WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c2 FROM rt1, vt0 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c2 FROM rt1, vt0 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, vt0;
SELECT ALL rt1.c1, rt0.c0, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c0, rt0.c3;
SELECT rt1.c1, rt0.c0, rt0.c3 FROM rt1, rt0 WHERE (rt0.c1) GROUP BY rt1.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt1.c1, rt0.c0, rt0.c3 FROM rt1, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt1.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt1.c1, rt0.c0, rt0.c3 FROM rt1, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt1.c1, rt0.c0, rt0.c3;
SELECT ALL rt1.c1, rt0.c0, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING MIN(LTRIM(rt0.c0, rt0.c1)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (MIN(LTRIM(rt0.c0, rt0.c1)))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((MIN(LTRIM(rt0.c0, rt0.c1))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING MIN(LTRIM(rt0.c0, rt0.c1)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (MIN(LTRIM(rt0.c0, rt0.c1)))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((MIN(LTRIM(rt0.c0, rt0.c1))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt1.c1, rt0.c0, rt0.c3, rt1.c2 FROM vt0, rt0, rt1;
SELECT ALL rt1.c1, rt0.c0, rt0.c3, rt1.c2 FROM vt0, rt0, rt1 WHERE (rt1.c1) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt0.c3, rt1.c2 FROM vt0, rt0, rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt0.c3, rt1.c2 FROM vt0, rt0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT rt1.c1, rt0.c0, rt0.c3, rt1.c2 FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (+ ((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c0))))) INNER JOIN rt0 ON ((((rt0.c0)==(NULL))) ISNULL);
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (+ ((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c0))))) INNER JOIN rt0 ON ((((rt0.c0)==(NULL))) ISNULL) WHERE (0.16222885393347775) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (+ ((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c0))))) INNER JOIN rt0 ON ((((rt0.c0)=(NULL))) ISNULL) WHERE ((NOT (0.16222885393347775))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (+ ((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c0))))) INNER JOIN rt0 ON ((((rt0.c0)==(NULL))) ISNULL) WHERE (((0.16222885393347775) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON (+ ((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c0))))) INNER JOIN rt0 ON ((((rt0.c0)==(NULL))) ISNULL);
SELECT rt1.c0 FROM rt0 CROSS JOIN vt0 ON (NULL IN ()) RIGHT OUTER JOIN rt1 ON (((((rt0.c0) NOTNULL)))=((CAST(rt1.c0 AS REAL)))) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt0 CROSS JOIN vt0 ON (NULL IN ()) RIGHT OUTER JOIN rt1 ON (((((rt0.c0) NOTNULL)))==((CAST(rt1.c0 AS REAL)))) WHERE (((((NULL)>>(rt0.c1))) IS FALSE)) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt0 CROSS JOIN vt0 ON (NULL IN ()) RIGHT OUTER JOIN rt1 ON (((((rt0.c0) NOTNULL)))==((CAST(rt1.c0 AS REAL)))) WHERE ((NOT (((((NULL)>>(rt0.c1))) IS FALSE)))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt0 CROSS JOIN vt0 ON (NULL IN ()) RIGHT OUTER JOIN rt1 ON (((((rt0.c0) NOTNULL)))=((CAST(rt1.c0 AS REAL)))) WHERE (((((((NULL)>>(rt0.c1))) IS FALSE)) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt0 CROSS JOIN vt0 ON (NULL IN ()) RIGHT OUTER JOIN rt1 ON (((((rt0.c0) NOTNULL)))=((CAST(rt1.c0 AS REAL)))) GROUP BY rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MIN(vt0.c0)))!=(941245358 COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(MIN(vt0.c0)))!=(941245358 COLLATE BINARY)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(MIN(vt0.c0)))!=(941245358 COLLATE BINARY))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (x'') UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1 NOT INDEXED WHERE (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))||(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((NOT (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))||(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))||(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ('-199676275') GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ('-199676275'))) GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((('-199676275') ISNULL)) GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2 HAVING MIN(CAST(-939606999 AS TEXT)) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2 HAVING (NOT (MIN(CAST(-939606999 AS TEXT)))) UNION ALL SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2 HAVING ((MIN(CAST(-939606999 AS TEXT))) ISNULL);
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2 HAVING MIN(CAST(-939606999 AS TEXT)) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2 HAVING (NOT (MIN(CAST(-939606999 AS TEXT)))) UNION ALL SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2 HAVING ((MIN(CAST(-939606999 AS TEXT))) ISNULL);
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c3 IN (rt0.c1)))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0X2239d77))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c3 IN (rt0.c1)))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0X2239d77))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c3 IN (rt0.c1)))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0x2239d77))))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(0.3262576272274502))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c3)>=(rt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(0.3262576272274502))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c3)>=(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(0.3262576272274502))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c3)>=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE ((- (((rt1.c2)<<(vt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE ((NOT ((- (((rt1.c2)<<(vt0.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE ((((- (((rt1.c2)<<(vt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (((COUNT(*))) NOT BETWEEN (((((MIN(GROUP_CONCAT(COUNT(*)))))!=((SUM(rt0.c2)))))) AND ((SUM(COUNT(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN (((((MIN(GROUP_CONCAT(COUNT(*)))))<>((SUM(rt0.c2)))))) AND ((SUM(COUNT(rt0.c3))))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (((((COUNT(*))) NOT BETWEEN (((((MIN(GROUP_CONCAT(COUNT(*)))))<>((SUM(rt0.c2)))))) AND ((SUM(COUNT(rt0.c3)))))) ISNULL);
SELECT vt0.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt1.c2) ISNULL) THEN ((rt0.c0) NOTNULL) ELSE CAST(rt0.c0 AS NUMERIC) END FULL OUTER JOIN rt1 ON (((((((((((rt0.c1)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt0.c0))))>=((((rt1.c1) IS FALSE))));
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt1, rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt1, rt0, vt0 WHERE (((((((rt0.c0)OR(rt1.c1)))AND(rt0.c1))) IS FALSE)) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt1, rt0, vt0 WHERE ((NOT (((((((rt0.c0)OR(rt1.c1)))AND(rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt1, rt0, vt0 WHERE (((((((((rt0.c0)OR(rt1.c1)))AND(rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt1, rt0, vt0;
SELECT ALL rt1.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON load_extension(((x'')IS(rt0.c0))) GROUP BY rt1.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON load_extension(((x'')IS(rt0.c0))) WHERE (CASE WHEN highlight(rt1.c1, rt0.c3, rt0.c0, 128887798) THEN rt1.c1 END) GROUP BY rt1.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON load_extension(((x'')IS(rt0.c0))) WHERE ((NOT (CASE WHEN highlight(rt1.c1, rt0.c3, rt0.c0, 128887798) THEN rt1.c1 END))) GROUP BY rt1.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON load_extension(((x'')IS(rt0.c0))) WHERE (((CASE WHEN highlight(rt1.c1, rt0.c3, rt0.c0, 128887798) THEN rt1.c1 END) ISNULL)) GROUP BY rt1.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 HAVING ((MIN(rt0.c3))LIKE(TOTAL(rt0.c0))) UNION ALL SELECT rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 HAVING (NOT (((MIN(rt0.c3))LIKE(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 HAVING ((((MIN(rt0.c3))LIKE(TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 HAVING ((MIN(rt0.c3))LIKE(TOTAL(rt0.c0))) UNION ALL SELECT rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 HAVING (NOT (((MIN(rt0.c3))LIKE(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 HAVING ((((MIN(rt0.c3))LIKE(TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt1 CROSS JOIN rt0 ON (json_array_length(x'd5fe', rt0.c2) IN ()) GROUP BY rt1.c0, rt0.c1, vt0.c0, rt0.c3, rt0.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 NOT INDEXED WHERE (((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))/(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))/(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))/(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1, vt0;
SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1, vt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1, vt0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))+(vt0.c0))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))+(vt0.c0))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))+(vt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING CASE rt1.c2  WHEN (((rt1.c0))=((vt0.c0))) THEN (~ (rt1.c0)) WHEN (COUNT(AVG(rt1.c1)) IN (MAX(vt0.c0))) THEN (~ (1855718120)) WHEN vt0.c0 THEN ((GROUP_CONCAT(rt1.c0))GLOB(rt1.c0)) ELSE GROUP_CONCAT(rt1.c0) END UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (CASE rt1.c2  WHEN (((rt1.c0))==((vt0.c0))) THEN (~ (rt1.c0)) WHEN (COUNT(AVG(rt1.c1)) IN (MAX(vt0.c0))) THEN (~ (1855718120)) WHEN vt0.c0 THEN ((GROUP_CONCAT(rt1.c0))GLOB(rt1.c0)) ELSE GROUP_CONCAT(rt1.c0) END)) UNION ALL SELECT rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((CASE rt1.c2  WHEN (((rt1.c0))=((vt0.c0))) THEN (~ (rt1.c0)) WHEN (COUNT(AVG(rt1.c1)) IN (MAX(vt0.c0))) THEN (~ (1855718120)) WHEN vt0.c0 THEN ((GROUP_CONCAT(rt1.c0))GLOB(rt1.c0)) ELSE GROUP_CONCAT(rt1.c0) END) ISNULL);
SELECT ALL * FROM rt0, vt0, rt1;
SELECT * FROM rt0, vt0, rt1 WHERE ((- (rt1.c2))) UNION ALL SELECT ALL * FROM rt0, vt0, rt1 WHERE ((NOT ((- (rt1.c2))))) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE ((((- (rt1.c2))) ISNULL));
SELECT ALL * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT * FROM rt1, vt0, rt0;
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((((rt0.c3) IS TRUE)))>=(((~ (rt0.c2)))))) UNION ALL SELECT ALL * FROM rt1, vt0, rt0 WHERE ((NOT ((((((rt0.c3) IS TRUE)))>=(((~ (rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((((((rt0.c3) IS TRUE)))>=(((~ (rt0.c2)))))) ISNULL));
SELECT * FROM rt1, vt0, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS NUMERIC);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS NUMERIC) WHERE ((CASE rt1.c2  WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END IN ())) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS NUMERIC) WHERE ((NOT ((CASE rt1.c2  WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END IN ())))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS NUMERIC) WHERE ((((CASE rt1.c2  WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS NUMERIC);
SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt0.c2;
SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 WHERE ((((((rt0.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c1)) AND ((NULL, rt0.c3, rt1.c2))))%(((rt1.c1) NOT NULL)))) GROUP BY rt0.c3, rt1.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 WHERE ((NOT ((((((rt0.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c1)) AND ((NULL, rt0.c3, rt1.c2))))%(((rt1.c1) NOT NULL)))))) GROUP BY rt0.c3, rt1.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 WHERE ((((((((rt0.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c1)) AND ((NULL, rt0.c3, rt1.c2))))%(((rt1.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c3, rt1.c0, rt0.c2;
SELECT ALL rt0.c3, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt1.c0, rt1.c2 FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt1.c0, rt1.c2;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt1.c0, rt1.c2 FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt1.c0, rt1.c2 HAVING CASE COUNT(SUM(rt1.c2))  WHEN COUNT(*) THEN (((GROUP_CONCAT(MIN(GROUP_CONCAT(NULL))), vt0.c0, GROUP_CONCAT(SUM(rt0.c2)))) BETWEEN ((rt0.c1, vt0.c0, GROUP_CONCAT(COUNT(*)))) AND ((rt1.c2, rt0.c0, rt0.c1))) ELSE '-1329685788' END UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt1.c0, rt1.c2 FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt1.c0, rt1.c2 HAVING (NOT (CASE COUNT(SUM(rt1.c2))  WHEN COUNT(*) THEN (((GROUP_CONCAT(MIN(GROUP_CONCAT(NULL))), vt0.c0, GROUP_CONCAT(SUM(rt0.c2)))) BETWEEN ((rt0.c1, vt0.c0, GROUP_CONCAT(COUNT(*)))) AND ((rt1.c2, rt0.c0, rt0.c1))) ELSE '-1329685788' END)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt1.c0, rt1.c2 FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt1.c0, rt1.c2 HAVING ((CASE COUNT(SUM(rt1.c2))  WHEN COUNT(*) THEN (((GROUP_CONCAT(MIN(GROUP_CONCAT(NULL))), vt0.c0, GROUP_CONCAT(SUM(rt0.c2)))) BETWEEN ((rt0.c1, vt0.c0, GROUP_CONCAT(COUNT(*)))) AND ((rt1.c2, rt0.c0, rt0.c1))) ELSE '-1329685788' END) ISNULL);
SELECT TOTAL((+ (DATETIME(vt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c1)))) FROM vt0, rt1;
SELECT ALL rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c0)AND(vt0.c0)))OR(rt1.c2)))IS(('fr%ap' IN (rt1.c2, vt0.c0))));
SELECT rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c0)AND(vt0.c0)))OR(rt1.c2)))IS(('fr%ap' IN (rt1.c2, vt0.c0)))) WHERE (NULL) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c0)AND(vt0.c0)))OR(rt1.c2)))IS(('fr%ap' IN (rt1.c2, vt0.c0)))) WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c0)AND(vt0.c0)))OR(rt1.c2)))IS(('fr%ap' IN (rt1.c2, vt0.c0)))) WHERE (((NULL) ISNULL));
SELECT ALL rt1.c1, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c0)AND(vt0.c0)))OR(rt1.c2)))IS(('fr%ap' IN (rt1.c2, vt0.c0))));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (LTRIM(((rt0.c2) ISNULL), NULL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (LTRIM(((rt0.c2) ISNULL), NULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((LTRIM(((rt0.c2) ISNULL), NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((-9.10669861E8)AND(((vt0.c0)==(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((-9.10669861E8)AND(((vt0.c0)=(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((-9.10669861E8)AND(((vt0.c0)==(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING GROUP_CONCAT((+ (rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (GROUP_CONCAT((+ (rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING ((GROUP_CONCAT((+ (rt0.c3)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING GROUP_CONCAT((+ (rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (GROUP_CONCAT((+ (rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING ((GROUP_CONCAT((+ (rt0.c3)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT MAX(((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5152392610556401))) AND ((vt0.c0 IN (vt0.c0))))) FROM vt0;
SELECT rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt1, rt0, vt0;
SELECT rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt1, rt0, vt0 WHERE ((((((('-2010042962')AND(rt1.c0)))OR(rt0.c3)))OR(CAST(rt1.c1 AS BLOB)))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt1, rt0, vt0 WHERE ((NOT ((((((('-2010042962')AND(rt1.c0)))OR(rt0.c3)))OR(CAST(rt1.c1 AS BLOB)))))) UNION ALL SELECT rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt1, rt0, vt0 WHERE ((((((((('-2010042962')AND(rt1.c0)))OR(rt0.c3)))OR(CAST(rt1.c1 AS BLOB)))) ISNULL));
SELECT rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt1, rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((+ ((((rt0.c2))<=((rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((+ ((((rt0.c2))<=((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((+ ((((rt0.c2))<=((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE rt1.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '<Fc?{ ꢓz锋' WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END END) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE rt1.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '<Fc?{ ꢓz锋' WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END END))) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE rt1.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '<Fc?{ ꢓz锋' WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END END) ISNULL)) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT MIN(((rt1.c2) IS TRUE) COLLATE RTRIM) FROM rt1, vt0;
SELECT rt1.c0, rt1.c2, rt0.c1, rt0.c3, rt1.c1, rt0.c0, rt0.c2 FROM rt1 INNER JOIN rt0 ON UNLIKELY(DISTINCT rt1.c1 COLLATE RTRIM);
SELECT ALL rt1.c0, rt1.c2, rt0.c1, rt0.c3, rt1.c1, rt0.c0, rt0.c2 FROM rt1 INNER JOIN rt0 ON UNLIKELY(DISTINCT rt1.c1 COLLATE RTRIM) WHERE (0.7373930633648769) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt0.c1, rt0.c3, rt1.c1, rt0.c0, rt0.c2 FROM rt1 INNER JOIN rt0 ON UNLIKELY(DISTINCT rt1.c1 COLLATE RTRIM) WHERE ((NOT (0.7373930633648769))) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c1, rt0.c3, rt1.c1, rt0.c0, rt0.c2 FROM rt1 INNER JOIN rt0 ON UNLIKELY(DISTINCT rt1.c1 COLLATE RTRIM) WHERE (((0.7373930633648769) ISNULL));
SELECT rt1.c0, rt1.c2, rt0.c1, rt0.c3, rt1.c1, rt0.c0, rt0.c2 FROM rt1 INNER JOIN rt0 ON UNLIKELY(DISTINCT rt1.c1 COLLATE RTRIM);
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN ((rt1.c2)>>(rt1.c0)) THEN CAST(rt1.c1 AS REAL) WHEN ((rt1.c2)|(rt1.c2)) THEN ((rt1.c1)/(rt1.c2)) WHEN ((rt1.c1) ISNULL) THEN 'V' END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c2)>>(rt1.c0)) THEN CAST(rt1.c1 AS REAL) WHEN ((rt1.c2)|(rt1.c2)) THEN ((rt1.c1)/(rt1.c2)) WHEN ((rt1.c1) ISNULL) THEN 'V' END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN ((rt1.c2)>>(rt1.c0)) THEN CAST(rt1.c1 AS REAL) WHEN ((rt1.c2)|(rt1.c2)) THEN ((rt1.c1)/(rt1.c2)) WHEN ((rt1.c1) ISNULL) THEN 'V' END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c1, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1, vt0 WHERE (((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1)) COLLATE NOCASE COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, rt1, vt0 WHERE ((NOT (((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1)) COLLATE NOCASE COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1)) COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt1.c1, rt0.c3, rt0.c2, rt1.c0, rt0.c1, rt0.c0, vt0.c0, rt1.c2 FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ABS(CAST(rt1.c2 AS BLOB)) LEFT OUTER JOIN rt1 ON (('1665411319')-(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c1 END)) GROUP BY rt1.c1, rt0.c3, rt0.c2, rt1.c0, rt0.c1, rt0.c0, vt0.c0, rt1.c2;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))AND((rt0.c0 IN ()))))OR(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))AND((rt0.c0 IN ()))))OR(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))AND((rt0.c0 IN ()))))OR(rt0.c1))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c3)) BETWEEN ((CASE ''  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)) AND ((((rt0.c1) IS TRUE))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((CASE ''  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)) AND ((((rt0.c1) IS TRUE))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c3)) BETWEEN ((CASE ''  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)) AND ((((rt0.c1) IS TRUE))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE ((((((rt1.c2, rt1.c1, 0X7aeabf6))<((rt1.c0, rt1.c2, rt1.c0))))=(NULL))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT ((((((rt1.c2, rt1.c1, 0X7aeabf6))<((rt1.c0, rt1.c2, rt1.c0))))=(NULL))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((((((((rt1.c2, rt1.c1, 0X7aeabf6))<((rt1.c0, rt1.c2, rt1.c0))))==(NULL))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING MAX(CAST(COUNT(rt1.c0) AS REAL)) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING (NOT (MAX(CAST(COUNT(rt1.c0) AS REAL)))) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING ((MAX(CAST(COUNT(rt1.c0) AS REAL))) ISNULL);
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE ((NOT (TRIM(rt1.c0)))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT ((NOT (TRIM(rt1.c0)))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((((NOT (TRIM(rt1.c0)))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS TRUE) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c0) IS TRUE) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2 FROM rt1, vt0 WHERE (((((rt1.c2)AND(rt1.c2)))|(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) GROUP BY vt0.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT (((((rt1.c2)AND(rt1.c2)))|(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))))) GROUP BY vt0.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c2 FROM rt1, vt0 WHERE (((((((rt1.c2)AND(rt1.c2)))|(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) ISNULL)) GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt0.c3, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c3, rt0.c1;
SELECT vt0.c0, rt0.c3, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c3, rt0.c1 HAVING MIN(CASE WHEN rt0.c3 THEN MIN(COUNT(*)) WHEN MAX(rt0.c0) THEN rt0.c2 WHEN GROUP_CONCAT(rt0.c2) THEN SUM(MAX(rt0.c0)) ELSE vt0.c0 END) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c3, rt0.c1 HAVING (NOT (MIN(CASE WHEN rt0.c3 THEN MIN(COUNT(*)) WHEN MAX(rt0.c0) THEN rt0.c2 WHEN GROUP_CONCAT(rt0.c2) THEN SUM(MAX(rt0.c0)) ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c3, rt0.c1 HAVING ((MIN(CASE WHEN rt0.c3 THEN MIN(COUNT(*)) WHEN MAX(rt0.c0) THEN rt0.c2 WHEN GROUP_CONCAT(rt0.c2) THEN SUM(MAX(rt0.c0)) ELSE vt0.c0 END)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt1.c0 FROM rt1, rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt1.c0 FROM rt1, rt0, vt0 WHERE (((- (rt1.c2)) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt1.c0 FROM rt1, rt0, vt0 WHERE ((NOT (((- (rt1.c2)) IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt1.c0 FROM rt1, rt0, vt0 WHERE (((((- (rt1.c2)) IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt1.c0 FROM rt1, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (x'') GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT (x''))) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((x'') ISNULL)) GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0;
SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0;
SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN '1376256160' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN '1376256160' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN '1376256160' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)))) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (CASE rt1.c2 COLLATE RTRIM  WHEN (~ (rt1.c1)) THEN (((rt1.c2, rt1.c2, 0Xffffffffbd0ed66e, rt1.c0, rt1.c2))!=((rt1.c1, rt1.c0, rt1.c0, rt1.c0, rt1.c1))) END) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CASE rt1.c2 COLLATE RTRIM  WHEN (~ (rt1.c1)) THEN (((rt1.c2, rt1.c2, 0Xffffffffbd0ed66e, rt1.c0, rt1.c2))<>((rt1.c1, rt1.c0, rt1.c0, rt1.c0, rt1.c1))) END))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE rt1.c2 COLLATE RTRIM  WHEN (~ (rt1.c1)) THEN (((rt1.c2, rt1.c2, 0xffffffffbd0ed66e, rt1.c0, rt1.c2))<>((rt1.c1, rt1.c0, rt1.c0, rt1.c0, rt1.c1))) END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0;
SELECT ALL rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (((((NULL)AND(rt1.c2)))OR((rt0.c3 IN ())))) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE ((NOT (((((NULL)AND(rt1.c2)))OR((rt0.c3 IN ())))))) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (((((((NULL)AND(rt1.c2)))OR((rt0.c3 IN ())))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0;
SELECT rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(vt0.c0) COLLATE BINARY COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(vt0.c0) COLLATE BINARY COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0) COLLATE BINARY COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(vt0.c0) COLLATE BINARY COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(vt0.c0) COLLATE BINARY COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0) COLLATE BINARY COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0, rt1, vt0;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CASE WHEN rt0.c3 THEN CASE rt1.c2  WHEN NULL THEN rt1.c2 END WHEN ((rt0.c0)<('-276526833')) THEN CASE WHEN rt0.c1 THEN rt1.c1 END WHEN (rt0.c0 IN ()) THEN ((((((((0.4574503917492434)OR(rt0.c0)))OR(rt0.c0)))OR(rt1.c2)))OR(rt1.c0)) ELSE rt1.c0 COLLATE NOCASE END) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN CASE rt1.c2  WHEN NULL THEN rt1.c2 END WHEN ((rt0.c0)<('-276526833')) THEN CASE WHEN rt0.c1 THEN rt1.c1 END WHEN (rt0.c0 IN ()) THEN ((((((((0.4574503917492434)OR(rt0.c0)))OR(rt0.c0)))OR(rt1.c2)))OR(rt1.c0)) ELSE rt1.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt0.c3 THEN CASE rt1.c2  WHEN NULL THEN rt1.c2 END WHEN ((rt0.c0)<('-276526833')) THEN CASE WHEN rt0.c1 THEN rt1.c1 END WHEN (rt0.c0 IN ()) THEN ((((((((0.4574503917492434)OR(rt0.c0)))OR(rt0.c0)))OR(rt1.c2)))OR(rt1.c0)) ELSE rt1.c0 COLLATE NOCASE END) ISNULL));
SELECT * FROM rt0, rt1, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt1.c0, rt1.c1, rt0.c3 FROM rt0, rt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt1.c0, rt1.c1, rt0.c3 FROM rt0, rt1 WHERE ((((0.9954878194004727)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND (((rt1.c2 IN (rt1.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt1.c0, rt1.c1, rt0.c3 FROM rt0, rt1 WHERE ((NOT ((((0.9954878194004727)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND (((rt1.c2 IN (rt1.c1)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt1.c0, rt1.c1, rt0.c3 FROM rt0, rt1 WHERE ((((((0.9954878194004727)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND (((rt1.c2 IN (rt1.c1)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt1.c0, rt1.c1, rt0.c3 FROM rt0, rt1;
SELECT rt1.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt0, vt0, rt1 WHERE ((((+ (rt0.c3)))IS(((rt0.c0)+(rt1.c1))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt0, vt0, rt1 WHERE ((NOT ((((+ (rt0.c3)))IS(((rt0.c0)+(rt1.c1))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt0, vt0, rt1 WHERE ((((((+ (rt0.c3)))IS(((rt0.c0)+(rt1.c1))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING rt1.c2 UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((rt1.c2) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING rt1.c2 UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((rt1.c2) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c0, rt0.c1, rt1.c1, rt0.c3 FROM rt1, rt0, vt0;
SELECT rt1.c0, rt0.c1, rt1.c1, rt0.c3 FROM rt1, rt0, vt0 WHERE ((CAST(rt0.c3 AS BLOB) IN ())) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c1, rt0.c3 FROM rt1, rt0, vt0 WHERE ((NOT ((CAST(rt0.c3 AS BLOB) IN ())))) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c1, rt0.c3 FROM rt1, rt0, vt0 WHERE ((((CAST(rt0.c3 AS BLOB) IN ())) ISNULL));
SELECT rt1.c0, rt0.c1, rt1.c1, rt0.c3 FROM rt1, rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0, rt1, vt0;
SELECT DISTINCT rt0.c2 FROM rt0, rt1, vt0 WHERE (NULLIF(((((x'ce05')AND(rt1.c2)))AND(0.6059055652359812)), (~ (vt0.c0)))) UNION SELECT DISTINCT rt0.c2 FROM rt0, rt1, vt0 WHERE ((NOT (NULLIF(((((x'ce05')AND(rt1.c2)))AND(0.6059055652359812)), (~ (vt0.c0)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, rt1, vt0 WHERE (((NULLIF(((((x'ce05')AND(rt1.c2)))AND(0.6059055652359812)), (~ (vt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, rt1, vt0;
SELECT rt1.c0, rt1.c1, rt0.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt0.c3, rt0.c0;
SELECT rt1.c0, rt1.c1, rt0.c3, rt0.c0 FROM rt0, rt1 WHERE (CAST(((((((((rt1.c0)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)) AS BLOB)) GROUP BY rt1.c0, rt1.c1, rt0.c3, rt0.c0 UNION SELECT rt1.c0, rt1.c1, rt0.c3, rt0.c0 FROM rt0, rt1 WHERE ((NOT (CAST(((((((((rt1.c0)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)) AS BLOB)))) GROUP BY rt1.c0, rt1.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt1.c0, rt1.c1, rt0.c3, rt0.c0 FROM rt0, rt1 WHERE (((CAST(((((((((rt1.c0)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)) AS BLOB)) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt0.c3, rt0.c0;
SELECT rt1.c0, rt1.c1, rt0.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt0.c3, rt0.c0;
SELECT rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c3 HAVING MAX(SUM(COUNT(*))) UNION ALL SELECT ALL rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c3 HAVING (NOT (MAX(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c3 HAVING ((MAX(SUM(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0, vt0, rt1;
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN '-1993520285' WHEN rt0.c3 THEN vt0.c0 END)AND(CASE NULL  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(load_extension(rt1.c2)))) UNION ALL SELECT ALL * FROM rt0, vt0, rt1 WHERE ((NOT (((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN '-1993520285' WHEN rt0.c3 THEN vt0.c0 END)AND(CASE NULL  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(load_extension(rt1.c2)))))) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE (((((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN '-1993520285' WHEN rt0.c3 THEN vt0.c0 END)AND(CASE NULL  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(load_extension(rt1.c2)))) ISNULL));
SELECT ALL * FROM rt0, vt0, rt1;
SELECT DISTINCT rt0.c0 FROM rt1, rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt1, rt0, vt0 WHERE ((DATETIME(rt0.c3, rt0.c2, rt1.c2) IN ())) UNION SELECT DISTINCT rt0.c0 FROM rt1, rt0, vt0 WHERE ((NOT ((DATETIME(rt0.c3, rt0.c2, rt1.c2) IN ())))) UNION SELECT DISTINCT rt0.c0 FROM rt1, rt0, vt0 WHERE ((((DATETIME(rt0.c3, rt0.c2, rt1.c2) IN ())) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt1, rt0, vt0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS REAL))IS(ABS(rt1.c1))) GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS REAL))IS(ABS(rt1.c1))) WHERE (rt1.c0) GROUP BY rt1.c0, rt1.c2, vt0.c0 UNION SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS REAL))IS(ABS(rt1.c1))) WHERE ((NOT (rt1.c0))) GROUP BY rt1.c0, rt1.c2, vt0.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS REAL))IS(ABS(rt1.c1))) WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS REAL))IS(ABS(rt1.c1))) GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt0.c0, vt0.c0, rt1.c1, rt1.c0, rt0.c3, rt0.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt1.c1, rt1.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt1.c1, rt1.c0, rt0.c3, rt0.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt1.c1, rt1.c0, rt0.c3, rt0.c1 HAVING GROUP_CONCAT(COUNT(MIN(vt0.c0)) COLLATE BINARY) UNION ALL SELECT rt0.c0, vt0.c0, rt1.c1, rt1.c0, rt0.c3, rt0.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt1.c1, rt1.c0, rt0.c3, rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(MIN(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT rt0.c0, vt0.c0, rt1.c1, rt1.c0, rt0.c3, rt0.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt1.c1, rt1.c0, rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(MIN(vt0.c0)) COLLATE BINARY)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS NUMERIC)) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CAST(CAST(rt1.c1 AS BLOB) AS NUMERIC)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((CAST(CAST(rt1.c1 AS BLOB) AS NUMERIC)) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt0.c0, rt0.c3 FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c3 FROM vt0, rt0, rt1 WHERE (CASE (~ (rt0.c2))  WHEN '-1845841065' THEN CAST(rt0.c2 AS REAL) END) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM vt0, rt0, rt1 WHERE ((NOT (CASE (~ (rt0.c2))  WHEN '-1845841065' THEN CAST(rt0.c2 AS REAL) END))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM vt0, rt0, rt1 WHERE (((CASE (~ (rt0.c2))  WHEN '-1845841065' THEN CAST(rt0.c2 AS REAL) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM vt0, rt0, rt1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c3 AS BLOB) AS TEXT)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS BLOB) AS TEXT)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS BLOB) AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((rt1.c2 COLLATE RTRIM IN ())) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((rt1.c2 COLLATE RTRIM IN ())))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE RTRIM IN ())) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((rt1.c2) NOT BETWEEN (vt0.c0) AND (x'')) COLLATE BINARY) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((rt1.c2) NOT BETWEEN (vt0.c0) AND (x'')) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (x'')) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE BINARY))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING TOTAL(((((((((COUNT(MAX(SUM(TOTAL(MAX(AVG(TOTAL(MAX(rt1.c2)))))))))AND(COUNT(COUNT('N⺍Y绗')))))OR(COUNT(*))))OR(SUM(TOTAL(SUM(rt1.c2))))))AND(AVG(COUNT(*))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (TOTAL(((((((((COUNT(MAX(SUM(TOTAL(MAX(AVG(TOTAL(MAX(rt1.c2)))))))))AND(COUNT(COUNT('N⺍Y绗')))))OR(COUNT(*))))OR(SUM(TOTAL(SUM(rt1.c2))))))AND(AVG(COUNT(*))))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((TOTAL(((((((((COUNT(MAX(SUM(TOTAL(MAX(AVG(TOTAL(MAX(rt1.c2)))))))))AND(COUNT(COUNT('N⺍Y绗')))))OR(COUNT(*))))OR(SUM(TOTAL(SUM(rt1.c2))))))AND(AVG(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON CASE (((rt1.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c3)) AND ((rt0.c3, rt1.c0, rt0.c2)))  WHEN (rt1.c1 IN ()) THEN LOWER(DISTINCT rt0.c0) WHEN CASE WHEN x'' THEN rt0.c0 END THEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN 0.167817471489343 THEN (rt0.c0 IN ()) END;
SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON CASE (((rt1.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c3)) AND ((rt0.c3, rt1.c0, rt0.c2)))  WHEN (rt1.c1 IN ()) THEN LOWER(DISTINCT rt0.c0) WHEN CASE WHEN x'' THEN rt0.c0 END THEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN 0.167817471489343 THEN (rt0.c0 IN ()) END WHERE (LIKELY(rt1.c2 COLLATE RTRIM)) UNION ALL SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON CASE (((rt1.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c3)) AND ((rt0.c3, rt1.c0, rt0.c2)))  WHEN (rt1.c1 IN ()) THEN LOWER(DISTINCT rt0.c0) WHEN CASE WHEN x'' THEN rt0.c0 END THEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN 0.167817471489343 THEN (rt0.c0 IN ()) END WHERE ((NOT (LIKELY(rt1.c2 COLLATE RTRIM)))) UNION ALL SELECT * FROM vt0, rt1 CROSS JOIN rt0 ON CASE (((rt1.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c3)) AND ((rt0.c3, rt1.c0, rt0.c2)))  WHEN (rt1.c1 IN ()) THEN LOWER(DISTINCT rt0.c0) WHEN CASE WHEN x'' THEN rt0.c0 END THEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN 0.167817471489343 THEN (rt0.c0 IN ()) END WHERE (((LIKELY(rt1.c2 COLLATE RTRIM)) ISNULL));
SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON CASE (((rt1.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c3)) AND ((rt0.c3, rt1.c0, rt0.c2)))  WHEN (rt1.c1 IN ()) THEN LOWER(DISTINCT rt0.c0) WHEN CASE WHEN x'' THEN rt0.c0 END THEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN 0.167817471489343 THEN (rt0.c0 IN ()) END;
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0 FROM vt0, rt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0 FROM vt0, rt0, rt1 WHERE (((((((rt0.c2) BETWEEN ('-445782954') AND (rt0.c2)))OR(((rt0.c2)<(vt0.c0)))))OR((((rt1.c1))<((rt1.c0)))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0 FROM vt0, rt0, rt1 WHERE ((NOT (((((((rt0.c2) BETWEEN ('-445782954') AND (rt0.c2)))OR(((rt0.c2)<(vt0.c0)))))OR((((rt1.c1))<((rt1.c0)))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0 FROM vt0, rt0, rt1 WHERE (((((((((rt0.c2) BETWEEN ('-445782954') AND (rt0.c2)))OR(((rt0.c2)<(vt0.c0)))))OR((((rt1.c1))<((rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0 FROM vt0, rt0, rt1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, rt1 NOT INDEXED WHERE ((((((NOT (rt0.c1)))OR(((x'')LIKE(rt1.c1)))))OR(rt1.c2))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt0, rt1 WHERE ((NOT ((((((NOT (rt0.c1)))OR(((x'')LIKE(rt1.c1)))))OR(rt1.c2))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, rt1 WHERE ((((((((NOT (rt0.c1)))OR(((x'')LIKE(rt1.c1)))))OR(rt1.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1;
SELECT rt1.c0, rt0.c1, rt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c3;
SELECT rt1.c0, rt0.c1, rt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c3 HAVING COUNT(((((MIN(rt1.c2))AND(COUNT(*))))OR(SUM(rt0.c2)))) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c3 HAVING (NOT (COUNT(((((MIN(rt1.c2))AND(COUNT(*))))OR(SUM(rt0.c2)))))) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c1, rt0.c3 HAVING ((COUNT(((((MIN(rt1.c2))AND(COUNT(*))))OR(SUM(rt0.c2))))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)), rt0.c0 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))<=((((0.4251849287735797) BETWEEN ('-1035176000') AND (vt0.c0)), ((rt0.c3) IS FALSE), ((rt0.c3) NOT NULL))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)), rt0.c0 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))<=((((0.4251849287735797) BETWEEN ('-1035176000') AND (vt0.c0)), ((rt0.c3) IS FALSE), ((rt0.c3) NOT NULL)))) WHERE (((rt0.c2)%(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)), rt0.c0 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))<=((((0.4251849287735797) BETWEEN ('-1035176000') AND (vt0.c0)), ((rt0.c3) IS FALSE), ((rt0.c3) NOT NULL)))) WHERE ((NOT (((rt0.c2)%(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)), rt0.c0 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))<=((((0.4251849287735797) BETWEEN ('-1035176000') AND (vt0.c0)), ((rt0.c3) IS FALSE), ((rt0.c3) NOT NULL)))) WHERE (((((rt0.c2)%(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)), rt0.c0 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))<=((((0.4251849287735797) BETWEEN ('-1035176000') AND (vt0.c0)), ((rt0.c3) IS FALSE), ((rt0.c3) NOT NULL))));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((NOT (rt0.c1))) IS FALSE)) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 NOT INDEXED WHERE ((NOT ((((NOT (rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((((NOT (rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((CAST(rt0.c1 AS REAL))*(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN 0.6251950720118051 END)) CROSS JOIN vt0 ON CAST(((rt1.c2)%(rt1.c0)) AS INTEGER) GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c0;
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((CAST(rt0.c1 AS REAL))*(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN 0.6251950720118051 END)) CROSS JOIN vt0 ON CAST(((rt1.c2)%(rt1.c0)) AS INTEGER) WHERE (((x'') BETWEEN ((((vt0.c0))<>((rt0.c1)))) AND (((rt1.c1) NOTNULL)))) GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c0 UNION SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((CAST(rt0.c1 AS REAL))*(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN 0.6251950720118051 END)) CROSS JOIN vt0 ON CAST(((rt1.c2)%(rt1.c0)) AS INTEGER) WHERE ((NOT (((x'') BETWEEN ((((vt0.c0))<>((rt0.c1)))) AND (((rt1.c1) NOTNULL)))))) GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c0 UNION SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((CAST(rt0.c1 AS REAL))*(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN 0.6251950720118051 END)) CROSS JOIN vt0 ON CAST(((rt1.c2)%(rt1.c0)) AS INTEGER) WHERE (((((x'') BETWEEN ((((vt0.c0))<>((rt0.c1)))) AND (((rt1.c1) NOTNULL)))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c0;
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((CAST(rt0.c1 AS REAL))*(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN 0.6251950720118051 END)) CROSS JOIN vt0 ON CAST(((rt1.c2)%(rt1.c0)) AS INTEGER) GROUP BY rt1.c0, rt1.c1, rt0.c1, rt0.c0;
SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2;
SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2 HAVING COUNT(MAX(vt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2 HAVING (NOT (COUNT(MAX(vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2 HAVING ((COUNT(MAX(vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT * FROM rt0, vt0, rt1;
SELECT * FROM rt0, vt0, rt1 WHERE ('92564203') UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE ((NOT ('92564203'))) UNION ALL SELECT ALL * FROM rt0, vt0, rt1 WHERE ((('92564203') ISNULL));
SELECT * FROM rt0, vt0, rt1;
SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1, vt0;
SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1, vt0 WHERE (CASE WHEN (((rt1.c1))<=((vt0.c0))) THEN (+ (rt1.c1)) END) UNION SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1, vt0 WHERE ((NOT (CASE WHEN (((rt1.c1))<=((vt0.c0))) THEN (+ (rt1.c1)) END))) UNION SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1, vt0 WHERE (((CASE WHEN (((rt1.c1))<=((vt0.c0))) THEN (+ (rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1, vt0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE (x'') GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE ((NOT (x''))) GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE (((x'') ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING TOTAL(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(TOTAL(vt0.c0))) ISNULL);
SELECT rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (((-9.17947567E8) IS TRUE)) UNION ALL SELECT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((NOT (((-9.17947567E8) IS TRUE)))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (((((-9.17947567E8) IS TRUE)) ISNULL));
SELECT rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN ((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)) WHEN rt1.c1 COLLATE BINARY THEN '-2038285201' WHEN rt1.c0 COLLATE NOCASE THEN (rt0.c3 IN ()) ELSE CAST(rt0.c1 AS TEXT) END FULL OUTER JOIN vt0 ON (((rt0.c1)>>(rt1.c2)) IN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 END, COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c2)));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN ((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)) WHEN rt1.c1 COLLATE BINARY THEN '-2038285201' WHEN rt1.c0 COLLATE NOCASE THEN (rt0.c3 IN ()) ELSE CAST(rt0.c1 AS TEXT) END FULL OUTER JOIN vt0 ON (((rt0.c1)>>(rt1.c2)) IN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 END, COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c2))) WHERE ((NOT (((rt1.c0)IS NOT(rt1.c2))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN ((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)) WHEN rt1.c1 COLLATE BINARY THEN '-2038285201' WHEN rt1.c0 COLLATE NOCASE THEN (rt0.c3 IN ()) ELSE CAST(rt0.c1 AS TEXT) END FULL OUTER JOIN vt0 ON (((rt0.c1)>>(rt1.c2)) IN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 END, COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c2))) WHERE ((NOT ((NOT (((rt1.c0)IS NOT(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN ((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)) WHEN rt1.c1 COLLATE BINARY THEN '-2038285201' WHEN rt1.c0 COLLATE NOCASE THEN (rt0.c3 IN ()) ELSE CAST(rt0.c1 AS TEXT) END FULL OUTER JOIN vt0 ON (((rt0.c1)>>(rt1.c2)) IN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 END, COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c2))) WHERE ((((NOT (((rt1.c0)IS NOT(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN ((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)) WHEN rt1.c1 COLLATE BINARY THEN '-2038285201' WHEN rt1.c0 COLLATE NOCASE THEN (rt0.c3 IN ()) ELSE CAST(rt0.c1 AS TEXT) END FULL OUTER JOIN vt0 ON (((rt0.c1)>>(rt1.c2)) IN (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 END, COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c2)));
SELECT rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE (((((rt1.c1))=((rt1.c0))) IN (((rt1.c2)>=(rt1.c1))))) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE ((NOT (((((rt1.c1))==((rt1.c0))) IN (((rt1.c2)>=(rt1.c1))))))) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE (((((((rt1.c1))=((rt1.c0))) IN (((rt1.c2)>=(rt1.c1))))) ISNULL)) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3;
SELECT rt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c1, vt0.c0, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c1, vt0.c0, rt1.c0;
SELECT rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c1, vt0.c0, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c1, vt0.c0, rt1.c0 HAVING (((((GROUP_CONCAT(rt0.c1))) NOT BETWEEN ((rt0.c3)) AND ((MIN(COUNT(rt0.c2)))))) NOT BETWEEN (((MAX(COUNT(*)))/(rt0.c0))) AND ((NOT (vt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c1, vt0.c0, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c1, vt0.c0, rt1.c0 HAVING (NOT ((((((GROUP_CONCAT(rt0.c1))) NOT BETWEEN ((rt0.c3)) AND ((MIN(COUNT(rt0.c2)))))) NOT BETWEEN (((MAX(COUNT(*)))/(rt0.c0))) AND ((NOT (vt0.c0)))))) UNION ALL SELECT rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c1, vt0.c0, rt1.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c1, vt0.c0, rt1.c0 HAVING (((((((GROUP_CONCAT(rt0.c1))) NOT BETWEEN ((rt0.c3)) AND ((MIN(COUNT(rt0.c2)))))) NOT BETWEEN (((MAX(COUNT(*)))/(rt0.c0))) AND ((NOT (vt0.c0))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((~ (rt0.c3 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((~ (rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c0)) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt1.c2)) ELSE ((vt0.c0)<=(rt0.c2)) END;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (LOWER(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (LOWER(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((LOWER(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 HAVING ((rt1.c2) ISNULL) COLLATE RTRIM UNION ALL SELECT rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 HAVING (NOT (((rt1.c2) ISNULL) COLLATE RTRIM)) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 HAVING ((((rt1.c2) ISNULL) COLLATE RTRIM) ISNULL);
SELECT rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 HAVING ((rt1.c2) ISNULL) COLLATE RTRIM UNION ALL SELECT rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 HAVING (NOT (((rt1.c2) ISNULL) COLLATE RTRIM)) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 HAVING ((((rt1.c2) ISNULL) COLLATE RTRIM) ISNULL);
SELECT rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c2, rt0.c0, rt0.c1, rt1.c1;
SELECT vt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (('j K' IN (((rt0.c2) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 WHERE ((NOT (('j K' IN (((rt0.c2) ISNULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((('j K' IN (((rt0.c2) ISNULL)))) ISNULL));
SELECT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((x'') BETWEEN (NULL) AND (rt1.c0)), ((rt1.c1) IS TRUE), ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<>(((NOT (rt1.c1)), CAST(rt1.c2 AS BLOB), (((rt1.c2, rt1.c2, rt1.c1))<>((rt1.c1, rt1.c0, '0.3397299380444476'))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((x'') BETWEEN (NULL) AND (rt1.c0)), ((rt1.c1) IS TRUE), ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))!=(((NOT (rt1.c1)), CAST(rt1.c2 AS BLOB), (((rt1.c2, rt1.c2, rt1.c1))!=((rt1.c1, rt1.c0, '0.3397299380444476'))))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((x'') BETWEEN (NULL) AND (rt1.c0)), ((rt1.c1) IS TRUE), ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))!=(((NOT (rt1.c1)), CAST(rt1.c2 AS BLOB), (((rt1.c2, rt1.c2, rt1.c1))!=((rt1.c1, rt1.c0, '0.3397299380444476'))))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END THEN ((x'') IS TRUE) WHEN ((rt1.c1) IS FALSE) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END WHEN (rt1.c0 IN (rt1.c1)) THEN NULL WHEN LTRIM(rt1.c1, rt1.c1) THEN TRIM(rt1.c2) WHEN (rt1.c1 IN ()) THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) ELSE (((rt1.c1))<>((rt1.c2))) END) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (CASE CAST(rt1.c1 AS BLOB)  WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END THEN ((x'') IS TRUE) WHEN ((rt1.c1) IS FALSE) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END WHEN (rt1.c0 IN (rt1.c1)) THEN NULL WHEN LTRIM(rt1.c1, rt1.c1) THEN TRIM(rt1.c2) WHEN (rt1.c1 IN ()) THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) ELSE (((rt1.c1))<>((rt1.c2))) END))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((CASE CAST(rt1.c1 AS BLOB)  WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END THEN ((x'') IS TRUE) WHEN ((rt1.c1) IS FALSE) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END WHEN (rt1.c0 IN (rt1.c1)) THEN NULL WHEN LTRIM(rt1.c1, rt1.c1) THEN TRIM(rt1.c2) WHEN (rt1.c1 IN ()) THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) ELSE (((rt1.c1))!=((rt1.c2))) END) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING SUM(rt0.c0) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (SUM(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((SUM(rt0.c0)) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING SUM(rt0.c0) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (SUM(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((SUM(rt0.c0)) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, rt1.c1, rt0.c3, rt0.c2, rt1.c0, rt1.c2 FROM vt0, rt0, rt1;
SELECT ALL vt0.c0, rt0.c1, rt1.c1, rt0.c3, rt0.c2, rt1.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE (x'') UNION ALL SELECT ALL vt0.c0, rt0.c1, rt1.c1, rt0.c3, rt0.c2, rt1.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c0, rt0.c1, rt1.c1, rt0.c3, rt0.c2, rt1.c0, rt1.c2 FROM vt0, rt0, rt1 WHERE (((x'') ISNULL));
SELECT vt0.c0, rt0.c1, rt1.c1, rt0.c3, rt0.c2, rt1.c0, rt1.c2 FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c3, vt0.c0, rt1.c2, rt0.c0, rt1.c1 FROM rt1, rt0 INNER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ());
SELECT DISTINCT rt0.c3, vt0.c0, rt1.c2, rt0.c0, rt1.c1 FROM rt1, rt0 INNER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE ((((rt1.c0, vt0.c0, rt1.c2)) BETWEEN ((((((((((((((rt0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt0.c2)))OR('	I3T荴듀2')), ((vt0.c0)*(rt0.c2)), (~ (rt0.c2)))) AND ((((rt1.c2)>(rt0.c0)), (((rt1.c0, vt0.c0, rt0.c3)) BETWEEN ((0.838935282445372, rt0.c1, rt1.c0)) AND ((rt0.c2, rt0.c3, rt1.c0))), rt1.c0)))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt1.c2, rt0.c0, rt1.c1 FROM rt1, rt0 INNER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE ((NOT ((((rt1.c0, vt0.c0, rt1.c2)) BETWEEN ((((((((((((((rt0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt0.c2)))OR('	I3T荴듀2')), ((vt0.c0)*(rt0.c2)), (~ (rt0.c2)))) AND ((((rt1.c2)>(rt0.c0)), (((rt1.c0, vt0.c0, rt0.c3)) BETWEEN ((0.838935282445372, rt0.c1, rt1.c0)) AND ((rt0.c2, rt0.c3, rt1.c0))), rt1.c0)))))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt1.c2, rt0.c0, rt1.c1 FROM rt1, rt0 INNER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE ((((((rt1.c0, vt0.c0, rt1.c2)) BETWEEN ((((((((((((((rt0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt0.c2)))OR('	I3T荴듀2')), ((vt0.c0)*(rt0.c2)), (~ (rt0.c2)))) AND ((((rt1.c2)>(rt0.c0)), (((rt1.c0, vt0.c0, rt0.c3)) BETWEEN ((0.838935282445372, rt0.c1, rt1.c0)) AND ((rt0.c2, rt0.c3, rt1.c0))), rt1.c0)))) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c0, rt1.c2, rt0.c0, rt1.c1 FROM rt1, rt0 INNER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ());
SELECT ALL vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3 FROM rt0, vt0, rt1 GROUP BY vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3;
SELECT vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3 FROM rt0, vt0, rt1 WHERE ((vt0.c0 IN (((rt0.c2)OR(0X1636cdf5)), (((((((('')OR(x'')))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) GROUP BY vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3 FROM rt0, vt0, rt1 WHERE ((NOT ((vt0.c0 IN (((rt0.c2)OR(0x1636cdf5)), (((((((('')OR(x'')))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))))) GROUP BY vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3 FROM rt0, vt0, rt1 WHERE ((((vt0.c0 IN (((rt0.c2)OR(0X1636cdf5)), (((((((('')OR(x'')))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3;
SELECT ALL vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3 FROM rt0, vt0, rt1 GROUP BY vt0.c0, rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2, rt1.c2, rt0.c3;
SELECT rt1.c1, rt0.c2, rt1.c0, vt0.c0, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c2, rt1.c0, vt0.c0, rt1.c2;
SELECT rt1.c1, rt0.c2, rt1.c0, vt0.c0, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c2, rt1.c0, vt0.c0, rt1.c2 HAVING CAST(TOTAL(COUNT(COUNT(*))) AS REAL) UNION ALL SELECT rt1.c1, rt0.c2, rt1.c0, vt0.c0, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c2, rt1.c0, vt0.c0, rt1.c2 HAVING (NOT (CAST(TOTAL(COUNT(COUNT(*))) AS REAL))) UNION ALL SELECT ALL rt1.c1, rt0.c2, rt1.c0, vt0.c0, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c2, rt1.c0, vt0.c0, rt1.c2 HAVING ((CAST(TOTAL(COUNT(COUNT(*))) AS REAL)) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) ISNULL)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) ISNULL)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) ISNULL)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((+ (rt1.c0)))OR((('w''٪\nm')<(NULL)))))AND(('-1e500' IN (rt1.c0, rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((+ (rt1.c0)))OR((('w''٪\nm')<(NULL)))))AND(('-1e500' IN (rt1.c0, rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((+ (rt1.c0)))OR((('w''٪\nm')<(NULL)))))AND(('-1e500' IN (rt1.c0, rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (((SQLITE_SOURCE_ID())<<(rt1.c0 COLLATE BINARY))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (((SQLITE_SOURCE_ID())<<(rt1.c0 COLLATE BINARY))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE (((((SQLITE_SOURCE_ID())<<(rt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2;
SELECT rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2 HAVING rt1.c1 UNION ALL SELECT rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2;
SELECT rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2 HAVING rt1.c1 UNION ALL SELECT rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt0.c1, rt1.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c2;
SELECT ALL MAX(CASE ((rt0.c0)<(''))  WHEN (((rt0.c2))<=((rt0.c0))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END END) FROM rt0 ORDER BY x'' DESC;
SELECT ALL rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((((('2091629872')==(rt0.c0))) BETWEEN ((((NULL)) BETWEEN ((0.5340664396848244)) AND ((vt0.c0)))) AND (CASE rt0.c1  WHEN x'' THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((('2091629872')=(rt0.c0))) BETWEEN ((((NULL)) BETWEEN ((0.5340664396848244)) AND ((vt0.c0)))) AND (CASE rt0.c1  WHEN x'' THEN rt0.c0 END))))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 WHERE ((((((('2091629872')==(rt0.c0))) BETWEEN ((((NULL)) BETWEEN ((0.5340664396848244)) AND ((vt0.c0)))) AND (CASE rt0.c1  WHEN x'' THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON CAST((((0xfffffffffce5c977)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS NUMERIC);
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON CAST((((0Xfffffffffce5c977)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS NUMERIC) WHERE ((((((rt0.c2, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c3)) AND ((rt1.c2, rt0.c0, rt0.c1)))) BETWEEN ((rt0.c1 IN ())) AND (0xffffffffb0aba1ba))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON CAST((((0xfffffffffce5c977)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS NUMERIC) WHERE ((NOT ((((((rt0.c2, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c3)) AND ((rt1.c2, rt0.c0, rt0.c1)))) BETWEEN ((rt0.c1 IN ())) AND (0xffffffffb0aba1ba))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON CAST((((0Xfffffffffce5c977)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS NUMERIC) WHERE ((((((((rt0.c2, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c3)) AND ((rt1.c2, rt0.c0, rt0.c1)))) BETWEEN ((rt0.c1 IN ())) AND (0Xffffffffb0aba1ba))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON CAST((((0xfffffffffce5c977)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS NUMERIC);
SELECT rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) GROUP BY rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) WHERE (CAST(((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) AS NUMERIC)) GROUP BY rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) WHERE ((NOT (CAST(((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) AS NUMERIC)))) GROUP BY rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) WHERE (((CAST(((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) GROUP BY rt1.c2, rt1.c1, rt0.c3, rt1.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING MIN(TOTAL(MAX(MIN(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (MIN(TOTAL(MAX(MIN(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((MIN(TOTAL(MAX(MIN(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((((rt1.c0)IS(rt1.c2)))OR(rt1.c2)))AND(STRFTIME(rt1.c2, '126703568', rt1.c0)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((((rt1.c0)IS(rt1.c2)))OR(rt1.c2)))AND(STRFTIME(rt1.c2, '126703568', rt1.c0)))))) UNION ALL SELECT * FROM rt1 WHERE (((((((((rt1.c0)IS(rt1.c2)))OR(rt1.c2)))AND(STRFTIME(rt1.c2, '126703568', rt1.c0)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) END LEFT OUTER JOIN rt1 ON ((CASE 0.9181596045470048  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (ABS(DISTINCT rt0.c0)) AND (x'')) GROUP BY rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0;
SELECT rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) END LEFT OUTER JOIN rt1 ON ((CASE 0.9181596045470048  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (ABS(DISTINCT rt0.c0)) AND (x'')) WHERE (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))&(((((rt0.c1)AND(0.8055735977621199)))OR(rt1.c1))))) GROUP BY rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) END LEFT OUTER JOIN rt1 ON ((CASE 0.9181596045470048  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (ABS(DISTINCT rt0.c0)) AND (x'')) WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))&(((((rt0.c1)AND(0.8055735977621199)))OR(rt1.c1))))))) GROUP BY rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0 UNION SELECT rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) END LEFT OUTER JOIN rt1 ON ((CASE 0.9181596045470048  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (ABS(DISTINCT rt0.c0)) AND (x'')) WHERE (((((((rt0.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))&(((((rt0.c1)AND(0.8055735977621199)))OR(rt1.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0;
SELECT rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) END LEFT OUTER JOIN rt1 ON ((CASE 0.9181596045470048  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (ABS(DISTINCT rt0.c0)) AND (x'')) GROUP BY rt0.c1, rt0.c3, rt1.c2, vt0.c0, rt0.c0, rt1.c1, rt0.c2, rt1.c0;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, vt0.c0, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, vt0.c0, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, vt0.c0, rt0.c3 HAVING MAX(COUNT(TOTAL(vt0.c0))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, vt0.c0, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, vt0.c0, rt0.c3 HAVING (NOT (MAX(COUNT(TOTAL(vt0.c0))))) UNION ALL SELECT rt0.c1, rt1.c2, rt0.c2, rt1.c1, vt0.c0, rt0.c3 FROM rt1, vt0, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, vt0.c0, rt0.c3 HAVING ((MAX(COUNT(TOTAL(vt0.c0)))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (TYPEOF(((0.9707563297016297) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (TYPEOF(((0.9707563297016297) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((TYPEOF(((0.9707563297016297) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((~ (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((NOT ((~ (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((((~ (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1;
SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0;
SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0 FROM vt0, rt0, rt1 WHERE ((((rt1.c2, vt0.c0, rt1.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((986384708 COLLATE RTRIM, rt1.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE, ((vt0.c0) NOTNULL), rt0.c2 COLLATE RTRIM)) AND ((x'', CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END, ((rt0.c2) ISNULL), ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), (vt0.c0 IN ()))))) GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0 UNION SELECT rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0 FROM vt0, rt0, rt1 WHERE ((NOT ((((rt1.c2, vt0.c0, rt1.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((986384708 COLLATE RTRIM, rt1.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE, ((vt0.c0) NOTNULL), rt0.c2 COLLATE RTRIM)) AND ((x'', CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END, ((rt0.c2) ISNULL), ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), (vt0.c0 IN ()))))))) GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0 FROM vt0, rt0, rt1 WHERE ((((((rt1.c2, vt0.c0, rt1.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((986384708 COLLATE RTRIM, rt1.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE, ((vt0.c0) NOTNULL), rt0.c2 COLLATE RTRIM)) AND ((x'', CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END, ((rt0.c2) ISNULL), ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), (vt0.c0 IN ()))))) ISNULL)) GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0;
SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0 FROM vt0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c0;
SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING MIN(CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(CAST(rt0.c1 AS INTEGER))) ISNULL);
SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING MIN(CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(CAST(rt0.c1 AS INTEGER))) ISNULL);
SELECT rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('1665411319') IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('1665411319') IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('1665411319') IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING ((CAST(-1513370953 AS INTEGER)) NOTNULL) UNION ALL SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING (NOT (((CAST(-1513370953 AS INTEGER)) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING ((((CAST(-1513370953 AS INTEGER)) NOTNULL)) ISNULL);
SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING ((CAST(-1513370953 AS INTEGER)) NOTNULL) UNION ALL SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING (NOT (((CAST(-1513370953 AS INTEGER)) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING ((((CAST(-1513370953 AS INTEGER)) NOTNULL)) ISNULL);
SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0;
SELECT * FROM rt0, rt1 NATURAL JOIN vt0 WHERE (LOWER(rt0.c1)) UNION ALL SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0 WHERE ((NOT (LOWER(rt0.c1)))) UNION ALL SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0 WHERE (((LOWER(rt0.c1)) ISNULL));
SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (((vt0.c0)>>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) IS FALSE) IN (((vt0.c0)>>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) IS FALSE) IN (((vt0.c0)>>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (NULL) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0, vt0 GROUP BY rt1.c2, rt1.c1, rt0.c1;
SELECT rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0, vt0 GROUP BY rt1.c2, rt1.c1, rt0.c1 HAVING ((((COUNT(MAX(SUM(MIN(rt1.c2)))))IS NOT(rt1.c0)))!=(TOTAL(rt0.c1))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0, vt0 GROUP BY rt1.c2, rt1.c1, rt0.c1 HAVING (NOT (((((COUNT(MAX(SUM(MIN(rt1.c2)))))IS NOT(rt1.c0)))!=(TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0, vt0 GROUP BY rt1.c2, rt1.c1, rt0.c1 HAVING ((((((COUNT(MAX(SUM(MIN(rt1.c2)))))IS NOT(rt1.c0)))!=(TOTAL(rt0.c1)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((NULL COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((NULL COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((NULL COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (0.7127465330897331) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (0.7127465330897331))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((0.7127465330897331) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE (vt0.c0) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING CAST(MAX(GROUP_CONCAT(vt0.c0)) AS BLOB) UNION ALL SELECT rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING (NOT (CAST(MAX(GROUP_CONCAT(vt0.c0)) AS BLOB))) UNION ALL SELECT ALL rt1.c0 FROM vt0, rt1 GROUP BY rt1.c0 HAVING ((CAST(MAX(GROUP_CONCAT(vt0.c0)) AS BLOB)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0 WHERE ((((rt1.c2)) BETWEEN ((((NULL) BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((((rt1.c2)OR(rt1.c0)))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0 WHERE ((NOT ((((rt1.c2)) BETWEEN ((((NULL) BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((((rt1.c2)OR(rt1.c0)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0 WHERE ((((((rt1.c2)) BETWEEN ((((NULL) BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((((rt1.c2)OR(rt1.c0)))))) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM rt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((rt0.c0)AND(((rt0.c2)<<(rt0.c1)))))OR(((rt0.c0)%(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(((rt0.c2)<<(rt0.c1)))))OR(((rt0.c0)%(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((rt0.c0)AND(((rt0.c2)<<(rt0.c1)))))OR(((rt0.c0)%(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING (((((rt0.c3) BETWEEN (AVG(rt0.c3)) AND (rt0.c3))))>((((SUM(COUNT(rt0.c1))) NOTNULL)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((((rt0.c3) BETWEEN (AVG(rt0.c3)) AND (rt0.c3))))>((((SUM(COUNT(rt0.c1))) NOTNULL)))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING (((((((rt0.c3) BETWEEN (AVG(rt0.c3)) AND (rt0.c3))))>((((SUM(COUNT(rt0.c1))) NOTNULL))))) ISNULL);
SELECT ALL MAX(CAST(rt1.c0 COLLATE NOCASE AS REAL)) FROM rt0, rt1, vt0;
SELECT * FROM rt1, rt0 CROSS JOIN vt0 ON (~ (NULL));
SELECT * FROM rt1, rt0 CROSS JOIN vt0 ON (~ (NULL)) WHERE ((json_type(rt1.c0) IN ())) UNION ALL SELECT ALL * FROM rt1, rt0 CROSS JOIN vt0 ON (~ (NULL)) WHERE ((NOT ((json_type(rt1.c0) IN ())))) UNION ALL SELECT ALL * FROM rt1, rt0 CROSS JOIN vt0 ON (~ (NULL)) WHERE ((((json_type(rt1.c0) IN ())) ISNULL));
SELECT * FROM rt1, rt0 CROSS JOIN vt0 ON (~ (NULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (COALESCE(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), LIKELY(rt0.c3))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (COALESCE(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), LIKELY(rt0.c3))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((COALESCE(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), LIKELY(rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (((((('') IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(NULL)) GROUP BY rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (((((('') IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(NULL)) WHERE (rt1.c2) GROUP BY rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (((((('') IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(NULL)) WHERE ((NOT (rt1.c2))) GROUP BY rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (((((('') IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(NULL)) WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (((((('') IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(NULL)) GROUP BY rt1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c2;
SELECT rt0.c1, rt0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c0, vt0.c0, rt1.c1;
SELECT ALL rt0.c1, rt0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c0, vt0.c0, rt1.c1 HAVING ((SUM(TOTAL(MIN(MAX(COUNT(*))))))<=(AVG(vt0.c0))) COLLATE NOCASE UNION ALL SELECT rt0.c1, rt0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c0, vt0.c0, rt1.c1 HAVING (NOT (((SUM(TOTAL(MIN(MAX(COUNT(*))))))<=(AVG(vt0.c0))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c0, vt0.c0, rt1.c1 HAVING ((((SUM(TOTAL(MIN(MAX(COUNT(*))))))<=(AVG(vt0.c0))) COLLATE NOCASE) ISNULL);
SELECT rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0;
SELECT rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER)) UNION ALL SELECT rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0 WHERE ((NOT (CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER)))) UNION ALL SELECT rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt1 NOT INDEXED, vt0, rt0 WHERE (((CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER)) ISNULL));
SELECT rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt0.c3 FROM rt1, vt0, rt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((rt0.c3 COLLATE RTRIM IN ((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((rt0.c3 COLLATE RTRIM IN ((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((rt0.c3 COLLATE RTRIM IN ((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE (UPPER((rt1.c0 IN ()))) GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE ((NOT (UPPER((rt1.c0 IN ()))))) GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE (((UPPER((rt1.c0 IN ()))) ISNULL)) GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING MIN(rt1.c2 COLLATE RTRIM) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (MIN(rt1.c2 COLLATE RTRIM))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((MIN(rt1.c2 COLLATE RTRIM)) ISNULL);
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING MIN(rt1.c2 COLLATE RTRIM) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (MIN(rt1.c2 COLLATE RTRIM))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((MIN(rt1.c2 COLLATE RTRIM)) ISNULL);
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL MAX(CAST(LIKELIHOOD(rt0.c0, 0.9685795971190599) AS REAL)) FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((NOT (((rt0.c1)|(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((NOT ((NOT (((rt0.c1)|(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((((NOT (((rt0.c1)|(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE ((rt1.c2) ISNULL)  WHEN rt1.c0 COLLATE RTRIM THEN ((x'0819')!=(rt1.c0)) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE ((rt1.c2) ISNULL)  WHEN rt1.c0 COLLATE RTRIM THEN ((x'0819')<>(rt1.c0)) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE ((rt1.c2) ISNULL)  WHEN rt1.c0 COLLATE RTRIM THEN ((x'0819')!=(rt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))|(0.8106236233095983 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))|(0.8106236233095983 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))|(0.8106236233095983 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (~ (((0.25581958380715686)+(rt0.c1)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (~ (((0.25581958380715686)+(rt0.c1)))) GROUP BY rt0.c2 HAVING TOTAL(COUNT(COUNT(rt0.c1))) UNION ALL SELECT rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (~ (((0.25581958380715686)+(rt0.c1)))) GROUP BY rt0.c2 HAVING (NOT (TOTAL(COUNT(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (~ (((0.25581958380715686)+(rt0.c1)))) GROUP BY rt0.c2 HAVING ((TOTAL(COUNT(COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt1.c2, rt0.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((rt0.c3)*((((rt0.c3))>=((rt0.c0)))));
SELECT ALL rt1.c2, rt0.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((rt0.c3)*((((rt0.c3))>=((rt0.c0))))) WHERE ((rt1.c1 IN ()) COLLATE BINARY) UNION ALL SELECT rt1.c2, rt0.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((rt0.c3)*((((rt0.c3))>=((rt0.c0))))) WHERE ((NOT ((rt1.c1 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((rt0.c3)*((((rt0.c3))>=((rt0.c0))))) WHERE ((((rt1.c1 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL rt1.c2, rt0.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((rt0.c3)*((((rt0.c3))>=((rt0.c0)))));
SELECT DISTINCT rt1.c0, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM vt0, rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM vt0, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM vt0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM vt0, rt1;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))*(((((NULL)AND(rt1.c0)))OR(vt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))*(((((NULL)AND(rt1.c0)))OR(vt0.c0)))) WHERE (CAST(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB)) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))*(((((NULL)AND(rt1.c0)))OR(vt0.c0)))) WHERE ((NOT (CAST(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB)))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))*(((((NULL)AND(rt1.c0)))OR(vt0.c0)))) WHERE (((CAST(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))*(((((NULL)AND(rt1.c0)))OR(vt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0;
SELECT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING MAX((+ (rt1.c1))) UNION ALL SELECT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING (NOT (MAX((+ (rt1.c1))))) UNION ALL SELECT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING ((MAX((+ (rt1.c1)))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0;
SELECT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING MAX((+ (rt1.c1))) UNION ALL SELECT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING (NOT (MAX((+ (rt1.c1))))) UNION ALL SELECT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING ((MAX((+ (rt1.c1)))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN rt1 ON 1.37625616E9;
SELECT * FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN rt1 ON 1.37625616E9 WHERE ((+ (CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN rt1 ON 1.37625616E9 WHERE ((NOT ((+ (CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT * FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN rt1 ON 1.37625616E9 WHERE ((((+ (CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN rt1 ON 1.37625616E9;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((CAST(x'7b7c' AS TEXT) IN ())) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((CAST(x'7b7c' AS TEXT) IN ())))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((((CAST(x'7b7c' AS TEXT) IN ())) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ('') GROUP BY rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt1.c0, rt0.c0 HAVING SUM(AVG(rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt1.c0, rt0.c0 HAVING (NOT (SUM(AVG(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt1.c0, rt0.c0 HAVING ((SUM(AVG(rt0.c2))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))*(vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)==(vt0.c0)))*(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)=(vt0.c0)))*(vt0.c0))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (CAST(rt0.c3 AS INTEGER)) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (CAST(rt0.c3 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c2 FROM rt0 CROSS JOIN rt1 ON (((((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, rt1.c0)) AND ((rt0.c1, rt0.c1, rt1.c2)))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 CROSS JOIN rt1 ON (((((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, rt1.c0)) AND ((rt0.c1, rt0.c1, rt1.c2)))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt0.c0 AS INTEGER))) WHERE ((((rt1.c2))<>((rt0.c1 COLLATE RTRIM)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 CROSS JOIN rt1 ON (((((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, rt1.c0)) AND ((rt0.c1, rt0.c1, rt1.c2)))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt0.c0 AS INTEGER))) WHERE ((NOT ((((rt1.c2))<>((rt0.c1 COLLATE RTRIM)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 CROSS JOIN rt1 ON (((((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, rt1.c0)) AND ((rt0.c1, rt0.c1, rt1.c2)))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt0.c0 AS INTEGER))) WHERE ((((((rt1.c2))<>((rt0.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 CROSS JOIN rt1 ON (((((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, rt1.c0)) AND ((rt0.c1, rt0.c1, rt1.c2)))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c2;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING COUNT(((COUNT(*))+(rt0.c1))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (COUNT(((COUNT(*))+(rt0.c1))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING ((COUNT(((COUNT(*))+(rt0.c1)))) ISNULL);
SELECT * FROM rt0, rt1, vt0;
SELECT * FROM rt0, rt1, vt0 WHERE ((((NOT (rt0.c3)))IS NOT(((rt0.c0)=(rt0.c2))))) UNION ALL SELECT * FROM rt0, rt1, vt0 WHERE ((NOT ((((NOT (rt0.c3)))IS NOT(((rt0.c0)=(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, rt1, vt0 WHERE ((((((NOT (rt0.c3)))IS NOT(((rt0.c0)==(rt0.c2))))) ISNULL));
SELECT * FROM rt0, rt1, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt0.c3, vt0.c0 FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt0.c3, vt0.c0 FROM vt0, rt0, rt1 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2))<<(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt0.c3, vt0.c0 FROM vt0, rt0, rt1 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(rt0.c2))<<(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt0.c3, vt0.c0 FROM vt0, rt0, rt1 WHERE (((((SQLITE_COMPILEOPTION_GET(rt0.c2))<<(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt0.c3, vt0.c0 FROM vt0, rt0, rt1;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2;
SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2 HAVING AVG(COUNT(vt0.c0)) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2 HAVING (NOT (AVG(COUNT(vt0.c0)))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c0, rt1.c2 HAVING ((AVG(COUNT(vt0.c0))) ISNULL);
SELECT * FROM rt0, rt1, vt0;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((rt0.c2)IS(vt0.c0)))LIKE(rt0.c1))) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE ((NOT (((((rt0.c2)IS(vt0.c0)))LIKE(rt0.c1))))) UNION ALL SELECT * FROM rt0, rt1, vt0 WHERE (((((((rt0.c2)IS(vt0.c0)))LIKE(rt0.c1))) ISNULL));
SELECT * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt1.c0)>>(rt1.c2))) BETWEEN (CASE WHEN '' THEN rt0.c2 WHEN vt0.c0 THEN 0.04376670039780739 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END) AND (((rt0.c2)<=(rt1.c2)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE);
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt1.c0)>>(rt1.c2))) BETWEEN (CASE WHEN '' THEN rt0.c2 WHEN vt0.c0 THEN 0.04376670039780739 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END) AND (((rt0.c2)<=(rt1.c2)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE) WHERE (((CAST(rt1.c0 AS INTEGER)) BETWEEN ((('')LIKE(rt0.c3))) AND ((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt1.c0)>>(rt1.c2))) BETWEEN (CASE WHEN '' THEN rt0.c2 WHEN vt0.c0 THEN 0.04376670039780739 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END) AND (((rt0.c2)<=(rt1.c2)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE) WHERE ((NOT (((CAST(rt1.c0 AS INTEGER)) BETWEEN ((('')LIKE(rt0.c3))) AND ((+ (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt1.c0)>>(rt1.c2))) BETWEEN (CASE WHEN '' THEN rt0.c2 WHEN vt0.c0 THEN 0.04376670039780739 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END) AND (((rt0.c2)<=(rt1.c2)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE) WHERE (((((CAST(rt1.c0 AS INTEGER)) BETWEEN ((('')LIKE(rt0.c3))) AND ((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt1.c0)>>(rt1.c2))) BETWEEN (CASE WHEN '' THEN rt0.c2 WHEN vt0.c0 THEN 0.04376670039780739 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END) AND (((rt0.c2)<=(rt1.c2)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))|(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c0)) AND (MAX(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))|(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c0)) AND (MAX(rt0.c1))))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))|(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c0)) AND (MAX(rt0.c1)))))) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))|(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c0)) AND (MAX(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))|(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c0)) AND (MAX(rt0.c1))))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))|(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c0)) AND (MAX(rt0.c1)))))) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE ((NOT ((rt1.c0 IN ())))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT ((NOT ((rt1.c0 IN ())))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((((NOT ((rt1.c0 IN ())))) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))+(''));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))+('')) WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))+('')) WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))+('')) WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))+(''));
SELECT ALL rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON TYPEOF((((rt1.c0))<=((rt0.c3)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((rt1.c1))>((rt0.c2))), 0.8637890944915172) GROUP BY rt0.c2, rt1.c0;
SELECT rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON TYPEOF((((rt1.c0))<=((rt0.c3)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((rt1.c1))>((rt0.c2))), 0.8637890944915172) WHERE (CAST(x'af47' AS NUMERIC)) GROUP BY rt0.c2, rt1.c0 UNION SELECT rt0.c2, rt1.c0 FROM rt1 NOT INDEXED CROSS JOIN rt0 ON TYPEOF((((rt1.c0))<=((rt0.c3)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((rt1.c1))>((rt0.c2))), 0.8637890944915172) WHERE ((NOT (CAST(x'af47' AS NUMERIC)))) GROUP BY rt0.c2, rt1.c0 UNION SELECT rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON TYPEOF((((rt1.c0))<=((rt0.c3)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((rt1.c1))>((rt0.c2))), 0.8637890944915172) WHERE (((CAST(x'af47' AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt1.c0;
SELECT ALL rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON TYPEOF((((rt1.c0))<=((rt0.c3)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((rt1.c1))>((rt0.c2))), 0.8637890944915172) GROUP BY rt0.c2, rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TIME(CASE WHEN COUNT(vt0.c0) THEN vt0.c0 WHEN MIN(vt0.c0) THEN MAX(COUNT(MIN(vt0.c0))) WHEN vt0.c0 THEN AVG(COUNT(SUM(vt0.c0))) WHEN SUM(vt0.c0) THEN '}6J?J㠠-' WHEN AVG(MAX(GROUP_CONCAT(vt0.c0))) THEN AVG(MIN(MAX(vt0.c0))) ELSE MIN(MIN(vt0.c0)) END, GROUP_CONCAT(vt0.c0), SUM(MIN(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TIME(CASE WHEN COUNT(vt0.c0) THEN vt0.c0 WHEN MIN(vt0.c0) THEN MAX(COUNT(MIN(vt0.c0))) WHEN vt0.c0 THEN AVG(COUNT(SUM(vt0.c0))) WHEN SUM(vt0.c0) THEN '}6J?J㠠-' WHEN AVG(MAX(GROUP_CONCAT(vt0.c0))) THEN AVG(MIN(MAX(vt0.c0))) ELSE MIN(MIN(vt0.c0)) END, GROUP_CONCAT(vt0.c0), SUM(MIN(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TIME(CASE WHEN COUNT(vt0.c0) THEN vt0.c0 WHEN MIN(vt0.c0) THEN MAX(COUNT(MIN(vt0.c0))) WHEN vt0.c0 THEN AVG(COUNT(SUM(vt0.c0))) WHEN SUM(vt0.c0) THEN '}6J?J㠠-' WHEN AVG(MAX(GROUP_CONCAT(vt0.c0))) THEN AVG(MIN(MAX(vt0.c0))) ELSE MIN(MIN(vt0.c0)) END, GROUP_CONCAT(vt0.c0), SUM(MIN(SUM(vt0.c0))))) ISNULL);
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN CASE '흌|'  WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt0.c1 END THEN ((rt1.c0)=(rt0.c1)) WHEN '126703568' THEN ((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c3)) WHEN highlight(rt0.c1, rt1.c0, rt0.c2, rt0.c2) THEN ((rt0.c2)<<(rt0.c2)) WHEN CAST(rt1.c1 AS TEXT) THEN CAST(rt0.c0 AS TEXT) WHEN ((((rt1.c0)AND(rt0.c3)))AND(rt1.c0)) THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END ELSE CASE rt1.c0  WHEN NULL THEN vt0.c0 END END RIGHT OUTER JOIN rt1 ON (+ ((- (rt0.c1))));
SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON rt1.c2;
SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON rt1.c2 WHERE (CAST(rt1.c2 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON rt1.c2 WHERE ((NOT (CAST(rt1.c2 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON rt1.c2 WHERE (((CAST(rt1.c2 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON rt1.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN (rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1) IS TRUE) IN (rt0.c0 COLLATE NOCASE))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((((((rt0.c1) IS TRUE) IN (rt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c0, rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c1 FROM rt1, vt0 CROSS JOIN rt0 ON ((((x'')AND(rt1.c2 COLLATE RTRIM)))OR((NOT (vt0.c0)))) GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c1;
SELECT rt0.c0, rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c1 FROM rt1, vt0 CROSS JOIN rt0 ON ((((x'')AND(rt1.c2 COLLATE RTRIM)))OR((NOT (vt0.c0)))) GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c1 HAVING MIN(COUNT(MAX(rt0.c3))) UNION ALL SELECT rt0.c0, rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c1 FROM rt1, vt0 CROSS JOIN rt0 ON ((((x'')AND(rt1.c2 COLLATE RTRIM)))OR((NOT (vt0.c0)))) GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c1 HAVING (NOT (MIN(COUNT(MAX(rt0.c3))))) UNION ALL SELECT rt0.c0, rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c1 FROM rt1, vt0 CROSS JOIN rt0 ON ((((x'')AND(rt1.c2 COLLATE RTRIM)))OR((NOT (vt0.c0)))) GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c3, rt1.c0, rt0.c1 HAVING ((MIN(COUNT(MAX(rt0.c3)))) ISNULL);
SELECT rt1.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON x'';
SELECT ALL rt1.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON x'' WHERE (((CASE WHEN '1850486437' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END) IS FALSE)) UNION ALL SELECT ALL rt1.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON x'' WHERE ((NOT (((CASE WHEN '1850486437' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END) IS FALSE)))) UNION ALL SELECT rt1.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON x'' WHERE (((((CASE WHEN '1850486437' THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END) IS FALSE)) ISNULL));
SELECT rt1.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON x'';
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (CASE (rt0.c2 IN (-553158227))  WHEN 'gL!' THEN (rt0.c2 IN ()) ELSE (NOT (rt0.c0)) END) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (CASE (rt0.c2 IN (-553158227))  WHEN 'gL!' THEN (rt0.c2 IN ()) ELSE (NOT (rt0.c0)) END))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((CASE (rt0.c2 IN (-553158227))  WHEN 'gL!' THEN (rt0.c2 IN ()) ELSE (NOT (rt0.c0)) END) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(vt0.c0))) ISNULL);
SELECT * FROM rt0, rt1, vt0;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST(((rt1.c0) NOT NULL) AS TEXT)) UNION ALL SELECT * FROM rt0, rt1, vt0 WHERE ((NOT (CAST(((rt1.c0) NOT NULL) AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE (((CAST(((rt1.c0) NOT NULL) AS TEXT)) ISNULL));
SELECT * FROM rt0, rt1, vt0;
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2 FROM rt0, rt1 WHERE (rt0.c0) UNION SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2 FROM rt0, rt1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2 FROM rt0, rt1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2 FROM rt0, rt1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c3 IN ())) NOT NULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c3 IN ())) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c3 IN ())) NOT NULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt1.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (CAST(rt1.c1 AS NUMERIC) IN ()) GROUP BY rt1.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c2;
SELECT rt1.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (CAST(rt1.c1 AS NUMERIC) IN ()) GROUP BY rt1.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c2 HAVING MIN(((SUM(rt1.c0))<=(57669551))) UNION ALL SELECT rt1.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (CAST(rt1.c1 AS NUMERIC) IN ()) GROUP BY rt1.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c2 HAVING (NOT (MIN(((SUM(rt1.c0))<=(57669551))))) UNION ALL SELECT ALL rt1.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c2 FROM rt1 CROSS JOIN rt0 ON (CAST(rt1.c1 AS NUMERIC) IN ()) GROUP BY rt1.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c2 HAVING ((MIN(((SUM(rt1.c0))<=(57669551)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) ISNULL))IS NOT(((rt0.c3)<(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) ISNULL))IS NOT(((rt0.c3)<(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0) ISNULL))IS NOT(((rt0.c3)<(rt0.c1))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt1.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt0;
SELECT DISTINCT rt1.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt0 WHERE (((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN ((rt1.c2 IN ())) AND (0.4853907617249479))) UNION SELECT DISTINCT rt1.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt0 WHERE ((NOT (((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN ((rt1.c2 IN ())) AND (0.4853907617249479))))) UNION SELECT DISTINCT rt1.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt0 WHERE (((((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN ((rt1.c2 IN ())) AND (0.4853907617249479))) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt0;
SELECT ALL rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(rt0.c3 COLLATE NOCASE) GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c2;
SELECT rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(rt0.c3 COLLATE NOCASE) WHERE (((rt1.c0) IS TRUE) COLLATE RTRIM) GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c2 UNION SELECT rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(rt0.c3 COLLATE NOCASE) WHERE ((NOT (((rt1.c0) IS TRUE) COLLATE RTRIM))) GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c2 UNION SELECT ALL rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(rt0.c3 COLLATE NOCASE) WHERE (((((rt1.c0) IS TRUE) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c2;
SELECT ALL rt0.c2, rt1.c0, rt0.c0, rt1.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(rt0.c3 COLLATE NOCASE) GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c2;
SELECT ALL rt0.c1, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c1, rt0.c0;
SELECT ALL rt0.c1, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c1, rt0.c0 HAVING COUNT(((MIN(TOTAL(AVG(COUNT(*)))))>>(rt1.c1))) UNION ALL SELECT rt0.c1, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c1, rt0.c0 HAVING (NOT (COUNT(((MIN(TOTAL(AVG(COUNT(*)))))>>(rt1.c1))))) UNION ALL SELECT rt0.c1, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c1, rt0.c0 HAVING ((COUNT(((MIN(TOTAL(AVG(COUNT(*)))))>>(rt1.c1)))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (TRIM(DISTINCT rt1.c1, (rt1.c1 IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (TRIM(DISTINCT rt1.c1, (rt1.c1 IN ()))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((TRIM(DISTINCT rt1.c1, (rt1.c1 IN ()))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0, rt1 WHERE ((((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((vt0.c0)))) ISNULL)) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0, rt1 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((vt0.c0)))) ISNULL)))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0, rt1 WHERE ((((((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((vt0.c0)))) ISNULL)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0, rt1;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (IFNULL(((rt0.c2)+(vt0.c0)), 0.4020258441464094)) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (IFNULL(((rt0.c2)+(vt0.c0)), 0.4020258441464094)))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((IFNULL(((rt0.c2)+(vt0.c0)), 0.4020258441464094)) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING COUNT(MAX(rt1.c1)) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (COUNT(MAX(rt1.c1)))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((COUNT(MAX(rt1.c1))) ISNULL);
SELECT rt0.c1, rt1.c0, rt0.c3, rt1.c2, rt0.c2, rt0.c0 FROM rt0, rt1, vt0;
SELECT rt0.c1, rt1.c0, rt0.c3, rt1.c2, rt0.c2, rt0.c0 FROM rt0, rt1, vt0 WHERE ((((rt0.c3 IN ()))+(CAST(rt1.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c3, rt1.c2, rt0.c2, rt0.c0 FROM rt0, rt1, vt0 WHERE ((NOT ((((rt0.c3 IN ()))+(CAST(rt1.c1 AS NUMERIC)))))) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c3, rt1.c2, rt0.c2, rt0.c0 FROM rt0, rt1, vt0 WHERE ((((((rt0.c3 IN ()))+(CAST(rt1.c1 AS NUMERIC)))) ISNULL));
SELECT rt0.c1, rt1.c0, rt0.c3, rt1.c2, rt0.c2, rt0.c0 FROM rt0, rt1, vt0;
SELECT DISTINCT vt0.c0 FROM rt1, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt1, rt0, vt0 WHERE (((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt1.c1)))%(CAST(rt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM rt1, rt0, vt0 WHERE ((NOT (((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt1.c1)))%(CAST(rt0.c0 AS TEXT)))))) UNION SELECT DISTINCT vt0.c0 FROM rt1, rt0, vt0 NOT INDEXED WHERE (((((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt1.c1)))%(CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt1, rt0, vt0;
SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (LIKELY(rt0.c2)) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((NOT (LIKELY(rt0.c2)))) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((LIKELY(rt0.c2)) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING CASE WHEN json_array(rt1.c1, rt1.c1, rt1.c1, MAX(SUM(MAX(rt1.c1)))) THEN (- (COUNT(*))) ELSE (MAX(rt1.c0) IN ()) END UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (CASE WHEN json_array(rt1.c1, rt1.c1, rt1.c1, MAX(SUM(MAX(rt1.c1)))) THEN (- (COUNT(*))) ELSE (MAX(rt1.c0) IN ()) END)) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((CASE WHEN json_array(rt1.c1, rt1.c1, rt1.c1, MAX(SUM(MAX(rt1.c1)))) THEN (- (COUNT(*))) ELSE (MAX(rt1.c0) IN ()) END) ISNULL);
SELECT rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1;
SELECT ALL rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((json_insert(rt0.c0, rt1.c2, rt0.c3))) AND ((((((rt1.c0)AND(rt1.c2)))OR(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE ((NOT ((((rt1.c0)) BETWEEN ((json_insert(rt0.c0, rt1.c2, rt0.c3))) AND ((((((rt1.c0)AND(rt1.c2)))OR(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE ((((((rt1.c0)) BETWEEN ((json_insert(rt0.c0, rt1.c2, rt0.c3))) AND ((((((rt1.c0)AND(rt1.c2)))OR(rt0.c1)))))) ISNULL));
SELECT rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt1.c0, rt0.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt1.c0, rt0.c0 FROM rt0, rt1 WHERE (((rt0.c0)==((((rt0.c3, -1.330929222E9, rt0.c3)) BETWEEN ((rt1.c2, 'j K', rt0.c0)) AND ((rt1.c0, rt0.c0, rt1.c1)))))) UNION SELECT DISTINCT rt0.c2, rt1.c0, rt0.c0 FROM rt0, rt1 WHERE ((NOT (((rt0.c0)=((((rt0.c3, -1.330929222E9, rt0.c3)) BETWEEN ((rt1.c2, 'j K', rt0.c0)) AND ((rt1.c0, rt0.c0, rt1.c1)))))))) UNION SELECT DISTINCT rt0.c2, rt1.c0, rt0.c0 FROM rt0, rt1 WHERE (((((rt0.c0)==((((rt0.c3, -1.330929222E9, rt0.c3)) BETWEEN ((rt1.c2, 'j K', rt0.c0)) AND ((rt1.c0, rt0.c0, rt1.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c0, rt0.c0 FROM rt0, rt1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE (0X4a4d8cdf) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (0x4a4d8cdf))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE (((0X4a4d8cdf) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt1.c2, rt0.c3, rt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0, vt0, rt1;
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0, vt0, rt1 WHERE ((((((rt0.c3)%(rt1.c2))))>((((rt1.c2)+('')))))) UNION ALL SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0, vt0, rt1 WHERE ((NOT ((((((rt0.c3)%(rt1.c2))))>((((rt1.c2)+('')))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0, vt0, rt1 WHERE ((((((((rt0.c3)%(rt1.c2))))>((((rt1.c2)+('')))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt0, vt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((- (CASE WHEN rt0.c2 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((- (CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT rt1.c0, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c3;
SELECT rt1.c0, rt0.c3 FROM rt1, rt0 WHERE ((- (((NULL) ISNULL)))) GROUP BY rt1.c0, rt0.c3 UNION SELECT rt1.c0, rt0.c3 FROM rt1, rt0 WHERE ((NOT ((- (((NULL) ISNULL)))))) GROUP BY rt1.c0, rt0.c3 UNION SELECT ALL rt1.c0, rt0.c3 FROM rt1, rt0 WHERE ((((- (((NULL) ISNULL)))) ISNULL)) GROUP BY rt1.c0, rt0.c3;
SELECT rt1.c0, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c3;
SELECT vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) ISNULL) GROUP BY vt0.c0, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) ISNULL) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(MAX(MIN(rt1.c2)))))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) ISNULL) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(MAX(MIN(rt1.c2)))))))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) ISNULL) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(MAX(MIN(rt1.c2))))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (IFNULL(rt0.c1, rt0.c0)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (IFNULL(rt0.c1, rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (IFNULL(rt0.c1, rt0.c0)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (MIN(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3)>=(rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (MIN(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3)>=(rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((MIN(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3)>=(rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING TOTAL(TOTAL(rt1.c1)) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (TOTAL(TOTAL(rt1.c1)))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((TOTAL(TOTAL(rt1.c1))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (CASE ((((rt1.c0)AND(rt1.c2)))AND(rt1.c2))  WHEN (((rt1.c1))>=((rt1.c0))) THEN CHAR(rt1.c2, rt1.c2, rt1.c2) WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(rt1.c2 AS REAL) WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE 'XlJtrm%0' END THEN ((rt1.c1)%(rt1.c0)) WHEN x'' THEN rt1.c1 WHEN CHANGES() THEN (- (rt1.c1)) ELSE ((rt1.c2)<(rt1.c1)) END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE ((((rt1.c0)AND(rt1.c2)))AND(rt1.c2))  WHEN (((rt1.c1))>=((rt1.c0))) THEN CHAR(rt1.c2, rt1.c2, rt1.c2) WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(rt1.c2 AS REAL) WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE 'XlJtrm%0' END THEN ((rt1.c1)%(rt1.c0)) WHEN x'' THEN rt1.c1 WHEN CHANGES() THEN (- (rt1.c1)) ELSE ((rt1.c2)<(rt1.c1)) END))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CASE ((((rt1.c0)AND(rt1.c2)))AND(rt1.c2))  WHEN (((rt1.c1))>=((rt1.c0))) THEN CHAR(rt1.c2, rt1.c2, rt1.c2) WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(rt1.c2 AS REAL) WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE 'XlJtrm%0' END THEN ((rt1.c1)%(rt1.c0)) WHEN x'' THEN rt1.c1 WHEN CHANGES() THEN (- (rt1.c1)) ELSE ((rt1.c2)<(rt1.c1)) END) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, vt0, rt0;
SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, vt0, rt0 WHERE (((((rt0.c3)LIKE(0.4293676069075084))) NOT NULL)) UNION SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, vt0, rt0 WHERE ((NOT (((((rt0.c3)LIKE(0.4293676069075084))) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, vt0, rt0 WHERE (((((((rt0.c3)LIKE(0.4293676069075084))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, vt0, rt0;
SELECT ALL rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0, vt0 WHERE (((((rt0.c1)+(vt0.c0))) BETWEEN (UPPER(rt0.c3)) AND (CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) GROUP BY rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2 UNION SELECT rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0, vt0 WHERE ((NOT (((((rt0.c1)+(vt0.c0))) BETWEEN (UPPER(rt0.c3)) AND (CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END))))) GROUP BY rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0, vt0 WHERE (((((((rt0.c1)+(vt0.c0))) BETWEEN (UPPER(rt0.c3)) AND (CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0, vt0 GROUP BY rt0.c1, rt1.c2, vt0.c0, rt1.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS REAL) AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS REAL) AS REAL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((((((rt0.c0) IS TRUE))AND(CASE WHEN rt0.c2 THEN rt1.c0 END)))AND(rt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((NOT (((((((rt0.c0) IS TRUE))AND(CASE WHEN rt0.c2 THEN rt1.c0 END)))AND(rt1.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((((((((rt0.c0) IS TRUE))AND(CASE WHEN rt0.c2 THEN rt1.c0 END)))AND(rt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c1 THEN -2132541352 ELSE 0.1459000719753909 END COLLATE RTRIM CROSS JOIN rt1 ON CASE '쵗槥f|'  WHEN (NOT (rt0.c2)) THEN ((rt1.c1)AND(vt0.c0)) END GROUP BY rt0.c2, vt0.c0;
SELECT rt1.c1, vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt1.c1) IS FALSE))AND((- (rt0.c1)))))OR(((vt0.c0)+(rt0.c3)))) INNER JOIN vt0 ON rt1.c1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1;
SELECT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE TRIM(rt0.c0)  WHEN rt1.c2 THEN x'' COLLATE NOCASE ELSE x'ae64' END;
SELECT ALL * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE TRIM(rt0.c0)  WHEN rt1.c2 THEN x'' COLLATE NOCASE ELSE x'ae64' END WHERE ((((rt0.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((x'', rt1.c1 COLLATE BINARY, (+ (rt1.c1)))) AND ((CAST('Ygﶞ)' AS INTEGER), CAST(rt0.c0 AS TEXT), (((vt0.c0, vt0.c0, rt0.c2, rt1.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, vt0.c0, 0.17733475979414948, rt0.c3))))))) UNION ALL SELECT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE TRIM(rt0.c0)  WHEN rt1.c2 THEN x'' COLLATE NOCASE ELSE x'ae64' END WHERE ((NOT ((((rt0.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((x'', rt1.c1 COLLATE BINARY, (+ (rt1.c1)))) AND ((CAST('Ygﶞ)' AS INTEGER), CAST(rt0.c0 AS TEXT), (((vt0.c0, vt0.c0, rt0.c2, rt1.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, vt0.c0, 0.17733475979414948, rt0.c3))))))))) UNION ALL SELECT ALL * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE TRIM(rt0.c0)  WHEN rt1.c2 THEN x'' COLLATE NOCASE ELSE x'ae64' END WHERE ((((((rt0.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((x'', rt1.c1 COLLATE BINARY, (+ (rt1.c1)))) AND ((CAST('Ygﶞ)' AS INTEGER), CAST(rt0.c0 AS TEXT), (((vt0.c0, vt0.c0, rt0.c2, rt1.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, vt0.c0, 0.17733475979414948, rt0.c3))))))) ISNULL));
SELECT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE TRIM(rt0.c0)  WHEN rt1.c2 THEN x'' COLLATE NOCASE ELSE x'ae64' END;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((NULL)<('')) IN (x'', vt0.c0, ((NULL) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((NULL)<('')) IN (x'', vt0.c0, ((NULL) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((NULL)<('')) IN (x'', vt0.c0, ((NULL) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c3, rt1.c1, rt0.c1 FROM rt0, rt1, vt0 GROUP BY vt0.c0, rt0.c3, rt1.c1, rt0.c1;
SELECT ALL vt0.c0, rt0.c3, rt1.c1, rt0.c1 FROM rt0, rt1, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0)))) IS TRUE)) GROUP BY vt0.c0, rt0.c3, rt1.c1, rt0.c1 UNION SELECT vt0.c0, rt0.c3, rt1.c1, rt0.c1 FROM rt0, rt1, vt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0)))) IS TRUE)))) GROUP BY vt0.c0, rt0.c3, rt1.c1, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c3, rt1.c1, rt0.c1 FROM rt0, rt1, vt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0)))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt1.c1, rt0.c1;
SELECT vt0.c0, rt0.c3, rt1.c1, rt0.c1 FROM rt0, rt1, vt0 GROUP BY vt0.c0, rt0.c3, rt1.c1, rt0.c1;
SELECT ALL rt0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt0.c2;
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt0.c2 HAVING COUNT(GROUP_CONCAT(rt0.c3)) UNION ALL SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt0.c2 HAVING (NOT (COUNT(GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt0.c2 HAVING ((COUNT(GROUP_CONCAT(rt0.c3))) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE ((TRIM(vt0.c0, 0.12671603143324572) IN ((((rt1.c1))<((rt1.c0)))))) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT ((TRIM(vt0.c0, 0.12671603143324572) IN ((((rt1.c1))<((rt1.c0)))))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((((TRIM(vt0.c0, 0.12671603143324572) IN ((((rt1.c1))<((rt1.c0)))))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (x'bc2e')) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (x'bc2e')) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(((rt0.c0) BETWEEN (rt0.c1) AND (x'bc2e')) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0;
SELECT rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN rt1 ON (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))) GROUP BY rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3;
SELECT rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN rt1 ON (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))) WHERE (rt0.c3) GROUP BY rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3 UNION SELECT ALL rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN rt1 ON (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))) WHERE ((NOT (rt0.c3))) GROUP BY rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3 UNION SELECT ALL rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN rt1 ON (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))) WHERE (((rt0.c3) ISNULL)) GROUP BY rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3;
SELECT rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN rt1 ON (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))) GROUP BY rt1.c2, vt0.c0, rt0.c2, rt1.c0, rt0.c0, rt0.c3;
SELECT ALL rt1.c2, rt0.c1, rt0.c3, rt1.c1, vt0.c0, rt0.c2, rt1.c0 FROM vt0, rt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c1, rt0.c3, rt1.c1, vt0.c0, rt0.c2, rt1.c0;
SELECT ALL rt1.c2, rt0.c1, rt0.c3, rt1.c1, vt0.c0, rt0.c2, rt1.c0 FROM vt0, rt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c1, rt0.c3, rt1.c1, vt0.c0, rt0.c2, rt1.c0 HAVING COALESCE(((MAX(AVG(MAX(rt0.c3)))) NOT BETWEEN (rt0.c2) AND (rt0.c1)), MIN(GROUP_CONCAT(x'')), MIN(rt0.c0), MAX(rt0.c1)) UNION ALL SELECT rt1.c2, rt0.c1, rt0.c3, rt1.c1, vt0.c0, rt0.c2, rt1.c0 FROM vt0, rt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c1, rt0.c3, rt1.c1, vt0.c0, rt0.c2, rt1.c0 HAVING (NOT (COALESCE(((MAX(AVG(MAX(rt0.c3)))) NOT BETWEEN (rt0.c2) AND (rt0.c1)), MIN(GROUP_CONCAT(x'')), MIN(rt0.c0), MAX(rt0.c1)))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt0.c3, rt1.c1, vt0.c0, rt0.c2, rt1.c0 FROM vt0, rt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c1, rt0.c3, rt1.c1, vt0.c0, rt0.c2, rt1.c0 HAVING ((COALESCE(((MAX(AVG(MAX(rt0.c3)))) NOT BETWEEN (rt0.c2) AND (rt0.c1)), MIN(GROUP_CONCAT(x'')), MIN(rt0.c0), MAX(rt0.c1))) ISNULL);
SELECT * FROM rt1, rt0, vt0;
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c1) UNION ALL SELECT ALL * FROM rt1, rt0, vt0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT * FROM rt1, rt0, vt0 WHERE (((rt1.c1) ISNULL));
SELECT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c1)))) IS FALSE)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c1)))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c1)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 WHERE ((((NOT (rt0.c2))) NOTNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((NOT (rt0.c2))) NOTNULL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((((((NOT (rt0.c2))) NOTNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)=(rt1.c1)))!=(vt0.c0 COLLATE RTRIM));
SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)=(rt1.c1)))!=(vt0.c0 COLLATE RTRIM)) WHERE (((NULL COLLATE BINARY) NOTNULL)) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)=(rt1.c1)))<>(vt0.c0 COLLATE RTRIM)) WHERE ((NOT (((NULL COLLATE BINARY) NOTNULL)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)=(rt1.c1)))!=(vt0.c0 COLLATE RTRIM)) WHERE (((((NULL COLLATE BINARY) NOTNULL)) ISNULL));
SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)=(rt1.c1)))!=(vt0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt0.c2)GLOB(rt0.c0))) NOTNULL);
SELECT DISTINCT * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt0.c2)GLOB(rt0.c0))) NOTNULL) WHERE (UNLIKELY(rt0.c3)) UNION SELECT DISTINCT * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt0.c2)GLOB(rt0.c0))) NOTNULL) WHERE ((NOT (UNLIKELY(rt0.c3)))) UNION SELECT DISTINCT * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt0.c2)GLOB(rt0.c0))) NOTNULL) WHERE (((UNLIKELY(rt0.c3)) ISNULL));
SELECT DISTINCT * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((rt0.c2)GLOB(rt0.c0))) NOTNULL);
SELECT rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt1, vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN 0.7682111125897042 ELSE rt0.c2 END) BETWEEN (((((((((((((rt0.c1)AND(rt1.c2)))AND('796332500')))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt0.c1))) AND (((((((((rt0.c3)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))))) GROUP BY rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt1, vt0, rt0 NOT INDEXED WHERE ((NOT (((CASE WHEN rt0.c0 THEN 0.7682111125897042 ELSE rt0.c2 END) BETWEEN (((((((((((((rt0.c1)AND(rt1.c2)))AND('796332500')))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt0.c1))) AND (((((((((rt0.c3)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))))))) GROUP BY rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt1, vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN 0.7682111125897042 ELSE rt0.c2 END) BETWEEN (((((((((((((rt0.c1)AND(rt1.c2)))AND('796332500')))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt0.c1))) AND (((((((((rt0.c3)AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c0, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING json_array_length(CASE WHEN rt0.c0 THEN rt0.c1 ELSE GROUP_CONCAT(COUNT(rt1.c0)) END, MIN(TOTAL(rt0.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (json_array_length(CASE WHEN rt0.c0 THEN rt0.c1 ELSE GROUP_CONCAT(COUNT(rt1.c0)) END, MIN(TOTAL(rt0.c0))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING ((json_array_length(CASE WHEN rt0.c0 THEN rt0.c1 ELSE GROUP_CONCAT(COUNT(rt1.c0)) END, MIN(TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, rt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, rt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, rt0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((2.021928154E9)<(vt0.c0)))AND(((((((((((((0Xffffffff8acc2b3d)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(vt0.c0)))AND(vt0.c0))));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((2.021928154E9)<(vt0.c0)))AND(((((((((((((0xffffffff8acc2b3d)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE (((((rt1.c0) NOTNULL)) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((2.021928154E9)<(vt0.c0)))AND(((((((((((((0Xffffffff8acc2b3d)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE ((NOT (((((rt1.c0) NOTNULL)) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((2.021928154E9)<(vt0.c0)))AND(((((((((((((0Xffffffff8acc2b3d)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE (((((((rt1.c0) NOTNULL)) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((2.021928154E9)<(vt0.c0)))AND(((((((((((((0Xffffffff8acc2b3d)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL rt1.c1, rt0.c1, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c1, rt1.c2;
SELECT ALL rt1.c1, rt0.c1, rt1.c2 FROM rt1, rt0, vt0 WHERE (vt0.c0) GROUP BY rt1.c1, rt0.c1, rt1.c2 UNION SELECT rt1.c1, rt0.c1, rt1.c2 FROM rt1, rt0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY rt1.c1, rt0.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt0.c1, rt1.c2 FROM rt1, rt0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt1.c1, rt0.c1, rt1.c2;
SELECT ALL rt1.c1, rt0.c1, rt1.c2 FROM rt1, rt0, vt0 GROUP BY rt1.c1, rt0.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt1.c2, rt0.c1;
SELECT rt1.c0, rt1.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt1.c2, rt0.c1 HAVING SUM(SUM(rt0.c0)) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt1.c2, rt0.c1 HAVING (NOT (SUM(SUM(rt0.c0)))) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt1.c2, rt0.c1 HAVING ((SUM(SUM(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN 9.2564203E7 THEN rt0.c1 WHEN rt0.c2 THEN 1183840957 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN 9.2564203E7 THEN rt0.c1 WHEN rt0.c2 THEN 1183840957 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END AS BLOB)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CASE rt0.c2  WHEN 9.2564203E7 THEN rt0.c1 WHEN rt0.c2 THEN 1183840957 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((rt0.c0)GLOB(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((rt0.c0)GLOB(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((rt0.c0)GLOB(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffb452df5c)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffb452df5c)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0)))IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0xffffffffb452df5c)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((AVG(rt0.c2)) BETWEEN (SUM(AVG(GROUP_CONCAT(rt0.c3)))) AND ((rt0.c0 IN (COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (((AVG(rt0.c2)) BETWEEN (SUM(AVG(GROUP_CONCAT(rt0.c3)))) AND ((rt0.c0 IN (COUNT(*))))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((((AVG(rt0.c2)) BETWEEN (SUM(AVG(GROUP_CONCAT(rt0.c3)))) AND ((rt0.c0 IN (COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((((rt0.c1)<<(rt1.c0)) IN (rt1.c1, NULLIF(rt0.c1, rt1.c0)))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((NOT ((((rt0.c1)<<(rt1.c0)) IN (rt1.c1, NULLIF(rt0.c1, rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((((((rt0.c1)<<(rt1.c0)) IN (rt1.c1, NULLIF(rt0.c1, rt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, rt1, rt0 WHERE (rt1.c1) GROUP BY rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2 UNION SELECT ALL rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, rt1, rt0 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2 UNION SELECT ALL rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, rt1, rt0 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt0.c3, vt0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((vt0.c0) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt0.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((vt0.c0) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt0.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (json_valid(((rt1.c2)<<(rt1.c0)))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (json_valid(((rt1.c2)<<(rt1.c0)))))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((json_valid(((rt1.c2)<<(rt1.c0)))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c2)))+(((rt0.c3)<(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c2, rt0.c2)))+(((rt0.c3)<(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c1 IN (rt0.c2, rt0.c2)))+(((rt0.c3)<(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(x'') UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(x''))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(x'') UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(x''))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c2, rt0.c0, 0.5925287569480114)) NOT BETWEEN ((((rt0.c3)||(rt0.c3)), '''#', CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt1.c1 END)) AND (('PO%', CASE rt0.c2  WHEN rt0.c0 THEN rt1.c0 END, CAST('502543030' AS NUMERIC))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((((rt1.c2, rt0.c0, 0.5925287569480114)) NOT BETWEEN ((((rt0.c3)||(rt0.c3)), '''#', CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt1.c1 END)) AND (('PO%', CASE rt0.c2  WHEN rt0.c0 THEN rt1.c0 END, CAST('502543030' AS NUMERIC))))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c2, rt0.c0, 0.5925287569480114)) NOT BETWEEN ((((rt0.c3)||(rt0.c3)), '''#', CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt1.c1 END)) AND (('PO%', CASE rt0.c2  WHEN rt0.c0 THEN rt1.c0 END, CAST('502543030' AS NUMERIC))))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULLIF((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('1855718120')))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULLIF((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('1855718120')))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULLIF((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('1855718120')))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((rt1.c0)LIKE(rt1.c2)) COLLATE BINARY) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c0)LIKE(rt1.c2)) COLLATE BINARY))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c0)LIKE(rt1.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING SUM(COUNT(GROUP_CONCAT(rt1.c0))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (SUM(COUNT(GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((SUM(COUNT(GROUP_CONCAT(rt1.c0)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((NOT ((- (rt1.c1))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((NOT ((- (rt1.c1))))))) UNION ALL SELECT * FROM rt1 WHERE ((((NOT ((- (rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (CHAR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (CHAR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((CHAR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((x'39fc')) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c1 AS NUMERIC))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((x'39fc')) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c1 AS NUMERIC))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((x'39fc')) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c1 AS NUMERIC))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 HAVING rt1.c1 UNION ALL SELECT vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 HAVING (NOT (rt1.c1)) UNION ALL SELECT vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 HAVING ((rt1.c1) ISNULL);
SELECT ALL vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 HAVING rt1.c1 UNION ALL SELECT vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 HAVING (NOT (rt1.c1)) UNION ALL SELECT vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 HAVING ((rt1.c1) ISNULL);
SELECT ALL vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0 FROM rt1, rt0, vt0 GROUP BY vt0.c0, rt1.c2, rt0.c3, rt0.c2, rt0.c1, rt1.c0;
SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))>=((~ (rt1.c2))));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))>=((~ (rt1.c2)))) WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END)LIKE((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1)))))) UNION ALL SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))>=((~ (rt1.c2)))) WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 END)LIKE((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))>=((~ (rt1.c2)))) WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 END)LIKE((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))>=((~ (rt1.c2))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CHAR(vt0.c0) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CHAR(vt0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CHAR(vt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0 CROSS JOIN vt0 ON (+ (CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt1 ON (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt1.c2, '-1430799233', rt1.c0)) AND ((rt1.c2, rt0.c0, rt1.c0))))IS NOT('-945716960')) GROUP BY rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0 CROSS JOIN vt0 ON (+ (CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt1 ON (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt1.c2, '-1430799233', rt1.c0)) AND ((rt1.c2, rt0.c0, rt1.c0))))IS NOT('-945716960')) WHERE ((((NULL)IS NOT(rt1.c2)) IN ())) GROUP BY rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0 CROSS JOIN vt0 ON (+ (CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt1 ON (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt1.c2, '-1430799233', rt1.c0)) AND ((rt1.c2, rt0.c0, rt1.c0))))IS NOT('-945716960')) WHERE ((NOT ((((NULL)IS NOT(rt1.c2)) IN ())))) GROUP BY rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0 CROSS JOIN vt0 ON (+ (CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt1 ON (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt1.c2, '-1430799233', rt1.c0)) AND ((rt1.c2, rt0.c0, rt1.c0))))IS NOT('-945716960')) WHERE ((((((NULL)IS NOT(rt1.c2)) IN ())) ISNULL)) GROUP BY rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0 CROSS JOIN vt0 ON (+ (CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c3 END)) LEFT OUTER JOIN rt1 ON (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt1.c2, '-1430799233', rt1.c0)) AND ((rt1.c2, rt0.c0, rt1.c0))))IS NOT('-945716960')) GROUP BY rt0.c2, rt1.c0, vt0.c0, rt1.c2, rt1.c1, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt0.c3;
SELECT ALL rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt0.c3 HAVING MIN(MIN(rt1.c0)) UNION ALL SELECT rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt0.c3 HAVING (NOT (MIN(MIN(rt1.c0)))) UNION ALL SELECT rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt0.c3 HAVING ((MIN(MIN(rt1.c0))) ISNULL);
SELECT ALL rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1;
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1 WHERE ((((rt0.c0)<(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1 WHERE ((NOT ((((rt0.c0)<(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1 WHERE ((((((rt0.c0)<(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c2 FROM rt0, vt0, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)) AND (((('177771657')&(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)) AND (((('177771657')&(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)) AND (((('177771657')&(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt0.c3, vt0.c0, rt1.c0, rt0.c2, rt0.c1 FROM rt1 FULL OUTER JOIN vt0 ON SUBSTR(NULL, SUBSTR(rt0.c0, rt1.c0)) RIGHT OUTER JOIN rt0 ON CAST(((((NULL)OR(rt0.c0)))AND(rt0.c1)) AS TEXT) GROUP BY rt1.c1, rt0.c3, vt0.c0, rt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE (((QUOTE(rt0.c2))IS(((0.198090302961201) NOT BETWEEN (rt0.c0) AND (NULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((QUOTE(rt0.c2))IS(((0.198090302961201) NOT BETWEEN (rt0.c0) AND (NULL))))))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 WHERE (((((QUOTE(rt0.c2))IS(((0.198090302961201) NOT BETWEEN (rt0.c0) AND (NULL))))) ISNULL));
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt1.c2 FROM rt1, rt0, vt0;
SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt1.c2 FROM rt1, rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(NULL)) UNION SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt1.c2 FROM rt1, rt0, vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(NULL)))) UNION SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt1.c2 FROM rt1, rt0, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt1.c2 FROM rt1, rt0, vt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c3)LIKE(rt0.c2)))<<(((rt0.c1)||(rt0.c3))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c3)LIKE(rt0.c2)))<<(((rt0.c1)||(rt0.c3))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c3)LIKE(rt0.c2)))<<(((rt0.c1)||(rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((NOT (AVG(0.5425441327558914)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((NOT (AVG(0.5425441327558914)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((NOT (AVG(0.5425441327558914))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS BLOB)) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS BLOB)))) UNION ALL SELECT * FROM rt1 WHERE (((CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((rt0.c1)AND('1693889728')))AND(rt0.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((((rt0.c1)AND('1693889728')))AND(rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((((rt0.c1)AND('1693889728')))AND(rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 NOT INDEXED, vt0 WHERE (rt0.c0) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE ((((((((AVG(TOTAL(GROUP_CONCAT(rt0.c2))))AND(SUM(TOTAL(rt0.c2)))))AND(x'')))AND(GROUP_CONCAT(2074617412))))OR(COUNT(*)))  WHEN GROUP_CONCAT(COUNT(rt0.c2)) THEN ((MIN(GROUP_CONCAT(COUNT(COUNT(rt0.c1)))))<=(rt0.c3)) END UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE ((((((((AVG(TOTAL(GROUP_CONCAT(rt0.c2))))AND(SUM(TOTAL(rt0.c2)))))AND(x'')))AND(GROUP_CONCAT(2074617412))))OR(COUNT(*)))  WHEN GROUP_CONCAT(COUNT(rt0.c2)) THEN ((MIN(GROUP_CONCAT(COUNT(COUNT(rt0.c1)))))<=(rt0.c3)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE ((((((((AVG(TOTAL(GROUP_CONCAT(rt0.c2))))AND(SUM(TOTAL(rt0.c2)))))AND(x'')))AND(GROUP_CONCAT(2074617412))))OR(COUNT(*)))  WHEN GROUP_CONCAT(COUNT(rt0.c2)) THEN ((MIN(GROUP_CONCAT(COUNT(COUNT(rt0.c1)))))<=(rt0.c3)) END) ISNULL);
SELECT * FROM vt0, rt0, rt1;
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END IN (((rt0.c0)GLOB(rt1.c2))))) UNION ALL SELECT * FROM vt0, rt0, rt1 WHERE ((NOT ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END IN (((rt0.c0)GLOB(rt1.c2))))))) UNION ALL SELECT ALL * FROM vt0, rt0, rt1 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END IN (((rt0.c0)GLOB(rt1.c2))))) ISNULL));
SELECT * FROM vt0, rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE (((CAST(rt0.c0 AS TEXT))!=(((rt1.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT))<>(((rt1.c1) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE (((((CAST(rt0.c0 AS TEXT))!=(((rt1.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((vt0.c0)/(vt0.c0))) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((vt0.c0)/(vt0.c0))) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (((vt0.c0)/(vt0.c0))) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt1.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt1.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3 HAVING ((((GROUP_CONCAT(TOTAL(AVG(COUNT(*))))) NOTNULL)) ISNULL) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3 HAVING (NOT (((((GROUP_CONCAT(TOTAL(AVG(COUNT(*))))) NOTNULL)) ISNULL))) UNION ALL SELECT rt0.c0, rt1.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3 HAVING ((((((GROUP_CONCAT(TOTAL(AVG(COUNT(*))))) NOTNULL)) ISNULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL))<>((rt0.c3))) IN ((~ (rt0.c1))));
SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL))!=((rt0.c3))) IN ((~ (rt0.c1)))) WHERE (((((rt0.c2 COLLATE BINARY)OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(x'f442'))) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL))<>((rt0.c3))) IN ((~ (rt0.c1)))) WHERE ((NOT (((((rt0.c2 COLLATE BINARY)OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(x'f442'))))) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL))!=((rt0.c3))) IN ((~ (rt0.c1)))) WHERE (((((((rt0.c2 COLLATE BINARY)OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(x'f442'))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL))<>((rt0.c3))) IN ((~ (rt0.c1))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 IN (0.02028364694930218))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c1 IN (0.02028364694930218))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN (0.02028364694930218))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (RTRIM(vt0.c0) IN ()) GROUP BY rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (RTRIM(vt0.c0) IN ()) WHERE ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((LIKELIHOOD(rt1.c2, 0.2644067786226485), CAST(rt1.c1 AS BLOB), (rt0.c1 IN ()))) AND (((~ (vt0.c0)), CAST(rt0.c1 AS TEXT), ((rt0.c2) NOTNULL))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (RTRIM(vt0.c0) IN ()) WHERE ((NOT ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((LIKELIHOOD(rt1.c2, 0.2644067786226485), CAST(rt1.c1 AS BLOB), (rt0.c1 IN ()))) AND (((~ (vt0.c0)), CAST(rt0.c1 AS TEXT), ((rt0.c2) NOTNULL))))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (RTRIM(vt0.c0) IN ()) WHERE ((((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((LIKELIHOOD(rt1.c2, 0.2644067786226485), CAST(rt1.c1 AS BLOB), (rt0.c1 IN ()))) AND (((~ (vt0.c0)), CAST(rt0.c1 AS TEXT), ((rt0.c2) NOTNULL))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (RTRIM(vt0.c0) IN ()) GROUP BY rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c1, rt1.c2 HAVING GROUP_CONCAT(((TOTAL(rt1.c1))*(TOTAL(rt1.c0)))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (GROUP_CONCAT(((TOTAL(rt1.c1))*(TOTAL(rt1.c0)))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c1, rt1.c2 HAVING ((GROUP_CONCAT(((TOTAL(rt1.c1))*(TOTAL(rt1.c0))))) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))))) ISNULL));
SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (CAST(((((rt0.c1)AND(rt0.c1)))OR(NULL)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE ((NOT (CAST(((((rt0.c1)AND(rt0.c1)))OR(NULL)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (((CAST(((((rt0.c1)AND(rt0.c1)))OR(NULL)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM rt0, rt1;
SELECT ALL rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND (((rt0.c3 IN ()))))) GROUP BY rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND (((rt0.c3 IN ()))))))) GROUP BY rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 WHERE ((((((rt0.c3)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND (((rt0.c3 IN ()))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0 HAVING MIN(AVG(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0 HAVING (NOT (MIN(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0 HAVING ((MIN(AVG(rt0.c1))) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c0)>=(rt1.c1)) IN ())) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0)>=(rt1.c1)) IN ())))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c0)>=(rt1.c1)) IN ())) ISNULL));
SELECT ALL rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE (UPPER(CAST(rt1.c1 AS INTEGER))) UNION SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE ((NOT (UPPER(CAST(rt1.c1 AS INTEGER))))) UNION SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE (((UPPER(CAST(rt1.c1 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, vt0;
SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON MAX((+ (rt1.c2)), (rt1.c0 IN (NULL))) GROUP BY rt1.c2, rt0.c1, rt0.c0;
SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON MAX((+ (rt1.c2)), (rt1.c0 IN (NULL))) WHERE (QUOTE(((NULL) NOT NULL))) GROUP BY rt1.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON MAX((+ (rt1.c2)), (rt1.c0 IN (NULL))) WHERE ((NOT (QUOTE(((NULL) NOT NULL))))) GROUP BY rt1.c2, rt0.c1, rt0.c0 UNION SELECT rt1.c2, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON MAX((+ (rt1.c2)), (rt1.c0 IN (NULL))) WHERE (((QUOTE(((NULL) NOT NULL))) ISNULL)) GROUP BY rt1.c2, rt0.c1, rt0.c0;
SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON MAX((+ (rt1.c2)), (rt1.c0 IN (NULL))) GROUP BY rt1.c2, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, rt1, rt0;
SELECT * FROM vt0, rt1, rt0 WHERE ('') UNION ALL SELECT ALL * FROM vt0, rt1, rt0 WHERE ((NOT (''))) UNION ALL SELECT * FROM vt0, rt1, rt0 WHERE ((('') ISNULL));
SELECT ALL * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((NULL, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c1))))AND((((rt0.c3, rt0.c1, rt0.c0))=((rt0.c2, rt0.c0, rt0.c2))))))AND((((rt0.c0))<((rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((NULL, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c1))))AND((((rt0.c3, rt0.c1, rt0.c0))==((rt0.c2, rt0.c0, rt0.c2))))))AND((((rt0.c0))<((rt0.c3)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((NULL, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c1))))AND((((rt0.c3, rt0.c1, rt0.c0))==((rt0.c2, rt0.c0, rt0.c2))))))AND((((rt0.c0))<((rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, vt0.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)&(rt0.c1))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND (('yu,}s*')))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) GROUP BY rt0.c3, vt0.c0, rt0.c0;
SELECT ALL rt0.c3, vt0.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)&(rt0.c1))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND (('yu,}s*')))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE ((((rt0.c1)IS(vt0.c0)) IN ())) GROUP BY rt0.c3, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c3, vt0.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)&(rt0.c1))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND (('yu,}s*')))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE ((NOT ((((rt0.c1)IS(vt0.c0)) IN ())))) GROUP BY rt0.c3, vt0.c0, rt0.c0 UNION SELECT rt0.c3, vt0.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)&(rt0.c1))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND (('yu,}s*')))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE ((((((rt0.c1)IS(vt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c3, vt0.c0, rt0.c0;
SELECT rt0.c3, vt0.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)&(rt0.c1))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND (('yu,}s*')))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) GROUP BY rt0.c3, vt0.c0, rt0.c0;
SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING AVG(AVG(rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING (NOT (AVG(AVG(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING ((AVG(AVG(rt0.c1))) ISNULL);
SELECT ALL rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT ALL rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((((rt1.c0) IS FALSE) IN ())) UNION ALL SELECT rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((NOT ((((rt1.c0) IS FALSE) IN ())))) UNION ALL SELECT ALL rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((((((rt1.c0) IS FALSE) IN ())) ISNULL));
SELECT ALL rt1.c2, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '0.5425441327558914' RIGHT OUTER JOIN rt1 ON (NOT (((vt0.c0)>=(0.13583350178149778))));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '0.5425441327558914' RIGHT OUTER JOIN rt1 ON (NOT (((vt0.c0)>=(0.13583350178149778)))) WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN NULL THEN rt1.c0 END)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '0.5425441327558914' RIGHT OUTER JOIN rt1 ON (NOT (((vt0.c0)>=(0.13583350178149778)))) WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN NULL THEN rt1.c0 END)))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '0.5425441327558914' RIGHT OUTER JOIN rt1 ON (NOT (((vt0.c0)>=(0.13583350178149778)))) WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN NULL THEN rt1.c0 END)))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '0.5425441327558914' RIGHT OUTER JOIN rt1 ON (NOT (((vt0.c0)>=(0.13583350178149778))));
SELECT rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1;
SELECT rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0, vt0 WHERE (CASE WHEN UNLIKELY(DISTINCT rt0.c2) THEN CASE rt0.c0  WHEN rt0.c3 THEN vt0.c0 END END) GROUP BY rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1 UNION SELECT rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0, vt0 WHERE ((NOT (CASE WHEN UNLIKELY(DISTINCT rt0.c2) THEN CASE rt0.c0  WHEN rt0.c3 THEN vt0.c0 END END))) GROUP BY rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1 UNION SELECT rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0, vt0 WHERE (((CASE WHEN UNLIKELY(DISTINCT rt0.c2) THEN CASE rt0.c0  WHEN rt0.c3 THEN vt0.c0 END END) ISNULL)) GROUP BY rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1;
SELECT rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1 FROM rt1, rt0, vt0 GROUP BY rt0.c0, rt1.c2, vt0.c0, rt0.c1, rt0.c2, rt1.c1;
SELECT ALL rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt0.c0;
SELECT rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt0.c0 HAVING ((AVG(COUNT(rt1.c1))) NOT BETWEEN (CASE WHEN MAX(rt1.c0) THEN rt1.c1 ELSE AVG(rt0.c3) END) AND (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt0.c0 HAVING (NOT (((AVG(COUNT(rt1.c1))) NOT BETWEEN (CASE WHEN MAX(rt1.c0) THEN rt1.c1 ELSE AVG(rt0.c3) END) AND (COUNT(*))))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt1.c1, rt0.c1, rt0.c0 HAVING ((((AVG(COUNT(rt1.c1))) NOT BETWEEN (CASE WHEN MAX(rt1.c0) THEN rt1.c1 ELSE AVG(rt0.c3) END) AND (COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((('cEP!~voKT')&(CAST(rt0.c3 AS REAL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((('cEP!~voKT')&(CAST(rt0.c3 AS REAL)))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((('cEP!~voKT')&(CAST(rt0.c3 AS REAL)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (json_type(((rt1.c0)<(rt1.c0)))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (json_type(((rt1.c0)<(rt1.c0)))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((json_type(((rt1.c0)<(rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT rt0.c3, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c3, rt0.c0, rt1.c0;
SELECT rt0.c3, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt1.c0)IS(rt0.c1)))) AND ((CAST(rt0.c0 AS BLOB))))) GROUP BY rt0.c3, rt0.c0, rt1.c0 UNION SELECT rt0.c3, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt1.c0)IS(rt0.c1)))) AND ((CAST(rt0.c0 AS BLOB))))))) GROUP BY rt0.c3, rt0.c0, rt1.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt1.c0)IS(rt0.c1)))) AND ((CAST(rt0.c0 AS BLOB))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt1.c0;
SELECT rt0.c3, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c3, rt0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING GROUP_CONCAT((~ (COUNT(*)))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (GROUP_CONCAT((~ (COUNT(*)))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1 HAVING ((GROUP_CONCAT((~ (COUNT(*))))) ISNULL);
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((CAST(rt1.c1 AS REAL))||((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (((CAST(rt1.c1 AS REAL))||((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((CAST(rt1.c1 AS REAL))||((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((NOT ((NOT (((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((((NOT (((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT rt1.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c3;
SELECT ALL rt1.c0, rt0.c3 FROM rt0, rt1 WHERE (CASE rt0.c3  WHEN rt1.c0 THEN rt1.c1 END COLLATE RTRIM) GROUP BY rt1.c0, rt0.c3 UNION SELECT rt1.c0, rt0.c3 FROM rt0, rt1 WHERE ((NOT (CASE rt0.c3  WHEN rt1.c0 THEN rt1.c1 END COLLATE RTRIM))) GROUP BY rt1.c0, rt0.c3 UNION SELECT ALL rt1.c0, rt0.c3 FROM rt0, rt1 WHERE (((CASE rt0.c3  WHEN rt1.c0 THEN rt1.c1 END COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, rt0.c3;
SELECT rt1.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c3;
SELECT ALL rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1 FROM vt0, rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c1;
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)<=(rt1.c1)))))AND(((rt1.c2)OR(rt1.c1))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)<=(rt1.c1)))))AND(((rt1.c2)OR(rt1.c1))))))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)<=(rt1.c1)))))AND(((rt1.c2)OR(rt1.c1))))) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt1, rt0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((+ (((NULL)LIKE(rt1.c0))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((+ (((NULL)LIKE(rt1.c0))))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((+ (((NULL)LIKE(rt1.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0 HAVING ((((TOTAL(rt1.c0))AND(MAX(rt1.c0))))AND(SUM(vt0.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0 HAVING (NOT (((((TOTAL(rt1.c0))AND(MAX(rt1.c0))))AND(SUM(vt0.c0))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0 HAVING ((((((TOTAL(rt1.c0))AND(MAX(rt1.c0))))AND(SUM(vt0.c0)))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0 HAVING ((((TOTAL(rt1.c0))AND(MAX(rt1.c0))))AND(SUM(vt0.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0 HAVING (NOT (((((TOTAL(rt1.c0))AND(MAX(rt1.c0))))AND(SUM(vt0.c0))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0 HAVING ((((((TOTAL(rt1.c0))AND(MAX(rt1.c0))))AND(SUM(vt0.c0)))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2, vt0.c0 FROM vt0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt0.c0;
SELECT * FROM rt1, rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS INTEGER);
SELECT * FROM rt1, rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS INTEGER) WHERE (CAST(rt1.c1 COLLATE RTRIM AS REAL)) UNION ALL SELECT ALL * FROM rt1, rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS INTEGER) WHERE ((NOT (CAST(rt1.c1 COLLATE RTRIM AS REAL)))) UNION ALL SELECT ALL * FROM rt1, rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS INTEGER) WHERE (((CAST(rt1.c1 COLLATE RTRIM AS REAL)) ISNULL));
SELECT * FROM rt1, rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS INTEGER);
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((~ (NULLIF(DISTINCT rt0.c1, rt0.c1)))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((~ (NULLIF(DISTINCT rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((~ (NULLIF(DISTINCT rt0.c1, rt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) ISNULL))=(((rt0.c2) IS FALSE)))) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))==(((rt0.c2) IS FALSE)))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) ISNULL))==(((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1 HAVING SUM(COUNT(SUM(vt0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (SUM(COUNT(SUM(vt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((SUM(COUNT(SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt0, rt1;
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((- (rt0.c1))) IS TRUE)) UNION ALL SELECT ALL * FROM rt0, vt0, rt1 WHERE ((NOT ((((- (rt0.c1))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((((- (rt0.c1))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0, vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)/(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)/(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)/(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(SUM(TOTAL(GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(TOTAL(GROUP_CONCAT(rt0.c3)))))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(SUM(TOTAL(GROUP_CONCAT(rt0.c3))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.9953081473030179))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.9953081473030179))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.9953081473030179))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (CAST(rt1.c1 AS TEXT) COLLATE RTRIM) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CAST(rt1.c1 AS TEXT) COLLATE RTRIM))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(rt1.c2))<(((TOTAL(AVG(MIN(AVG(0.7360403676241285)))))/(vt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((MIN(rt1.c2))<(((TOTAL(AVG(MIN(AVG(0.7360403676241285)))))/(vt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt0.c0, rt0.c1 HAVING ((((MIN(rt1.c2))<(((TOTAL(AVG(MIN(AVG(0.7360403676241285)))))/(vt0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((((rt0.c2))<=((((rt0.c1) NOT NULL))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2))<=((((rt0.c1) NOT NULL))))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((((((rt0.c2))<=((((rt0.c1) NOT NULL))))) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (0.8785091427306521) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (0.8785091427306521))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((0.8785091427306521) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1;
SELECT rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((rt0.c3 COLLATE RTRIM IN ())) GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((NOT ((rt0.c3 COLLATE RTRIM IN ())))) GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((((rt0.c3 COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1;
SELECT rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt0.c0, rt1.c0, rt1.c2, rt0.c1, rt1.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(GROUP_CONCAT(SUM(rt0.c2)))) BETWEEN (COUNT(*) COLLATE RTRIM) AND (GROUP_CONCAT(TOTAL(rt0.c3)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((AVG(GROUP_CONCAT(SUM(rt0.c2)))) BETWEEN (COUNT(*) COLLATE RTRIM) AND (GROUP_CONCAT(TOTAL(rt0.c3)) COLLATE NOCASE)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((((AVG(GROUP_CONCAT(SUM(rt0.c2)))) BETWEEN (COUNT(*) COLLATE RTRIM) AND (GROUP_CONCAT(TOTAL(rt0.c3)) COLLATE NOCASE))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 CROSS JOIN rt1 ON CASE (NOT (rt0.c2))  WHEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) IS FALSE) THEN ((rt1.c1)<=('gK^R|b')) WHEN rt1.c2 THEN UNICODE(rt0.c2) WHEN ((rt0.c2)<(rt0.c1)) THEN ((((rt0.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 END;
SELECT rt0.c2, rt0.c3 FROM rt0 CROSS JOIN rt1 ON CASE (NOT (rt0.c2))  WHEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) IS FALSE) THEN ((rt1.c1)<=('gK^R|b')) WHEN rt1.c2 THEN UNICODE(rt0.c2) WHEN ((rt0.c2)<(rt0.c1)) THEN ((((rt0.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 END WHERE (TYPEOF(DISTINCT ((rt0.c1) NOT NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 CROSS JOIN rt1 ON CASE (NOT (rt0.c2))  WHEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) IS FALSE) THEN ((rt1.c1)<=('gK^R|b')) WHEN rt1.c2 THEN UNICODE(rt0.c2) WHEN ((rt0.c2)<(rt0.c1)) THEN ((((rt0.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 END WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c1) NOT NULL))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 CROSS JOIN rt1 ON CASE (NOT (rt0.c2))  WHEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) IS FALSE) THEN ((rt1.c1)<=('gK^R|b')) WHEN rt1.c2 THEN UNICODE(rt0.c2) WHEN ((rt0.c2)<(rt0.c1)) THEN ((((rt0.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 END WHERE (((TYPEOF(DISTINCT ((rt0.c1) NOT NULL))) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM rt0 CROSS JOIN rt1 ON CASE (NOT (rt0.c2))  WHEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) IS FALSE) THEN ((rt1.c1)<=('gK^R|b')) WHEN rt1.c2 THEN UNICODE(rt0.c2) WHEN ((rt0.c2)<(rt0.c1)) THEN ((((rt0.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 END;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>>(CASE WHEN 0.7575984219131008 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>>(CASE WHEN 0.7575984219131008 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>>(CASE WHEN 0.7575984219131008 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT rt0.c1 COLLATE RTRIM)))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1 COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2 HAVING SUM(STRFTIME(rt1.c1, AVG(TOTAL(GROUP_CONCAT(COUNT(rt1.c2)))), rt1.c2, GROUP_CONCAT(COUNT(vt0.c0)), TOTAL(rt1.c2))) UNION ALL SELECT vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2 HAVING (NOT (SUM(STRFTIME(rt1.c1, AVG(TOTAL(GROUP_CONCAT(COUNT(rt1.c2)))), rt1.c2, GROUP_CONCAT(COUNT(vt0.c0)), TOTAL(rt1.c2))))) UNION ALL SELECT ALL vt0.c0, rt1.c2 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2 HAVING ((SUM(STRFTIME(rt1.c1, AVG(TOTAL(GROUP_CONCAT(COUNT(rt1.c2)))), rt1.c2, GROUP_CONCAT(COUNT(vt0.c0)), TOTAL(rt1.c2)))) ISNULL);
SELECT ALL rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((((((x'')AND(((rt1.c1) ISNULL))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(((rt1.c2) IS FALSE)));
SELECT ALL rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((((((x'')AND(((rt1.c1) ISNULL))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(((rt1.c2) IS FALSE))) WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))>(((rt1.c2) ISNULL)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((((((x'')AND(((rt1.c1) ISNULL))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(((rt1.c2) IS FALSE))) WHERE ((NOT ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))>(((rt1.c2) ISNULL)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((((((x'')AND(((rt1.c1) ISNULL))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(((rt1.c2) IS FALSE))) WHERE ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))>(((rt1.c2) ISNULL)))) ISNULL));
SELECT ALL rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((((((x'')AND(((rt1.c1) ISNULL))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(((rt1.c2) IS FALSE)));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1 WHERE (((vt0.c0)<=(rt1.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (((vt0.c0)<=(rt1.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1 WHERE (((((vt0.c0)<=(rt1.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt1;
SELECT vt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1;
SELECT ALL vt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))) GROUP BY vt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))))) GROUP BY vt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c1;
SELECT vt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2;
SELECT rt0.c0, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2 HAVING GROUP_CONCAT((+ (SUM(COUNT(rt1.c0))))) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT((+ (SUM(COUNT(rt1.c0))))))) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2 FROM vt0, rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2 HAVING ((GROUP_CONCAT((+ (SUM(COUNT(rt1.c0)))))) ISNULL);
SELECT MIN(vt0.c0 COLLATE RTRIM) FROM vt0;
SELECT * FROM rt1, vt0, rt0 NOT INDEXED;
SELECT * FROM rt1, vt0, rt0 WHERE (COALESCE((((vt0.c0, '9P7u)⦋]', vt0.c0))>((x'', rt0.c0, rt0.c2))), ((((rt0.c3)AND(vt0.c0)))AND('')))) UNION ALL SELECT ALL * FROM rt1, vt0, rt0 WHERE ((NOT (COALESCE((((vt0.c0, '9P7u)⦋]', vt0.c0))>((x'', rt0.c0, rt0.c2))), ((((rt0.c3)AND(vt0.c0)))AND('')))))) UNION ALL SELECT * FROM rt1, vt0, rt0 WHERE (((COALESCE((((vt0.c0, '9P7u)⦋]', vt0.c0))>((x'', rt0.c0, rt0.c2))), ((((rt0.c3)AND(vt0.c0)))AND('')))) ISNULL));
SELECT * FROM rt1, vt0, rt0 NOT INDEXED;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0, rt1;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0, rt1 WHERE (CAST(((rt0.c1)IS(rt0.c0)) AS BLOB)) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0, rt1 WHERE ((NOT (CAST(((rt0.c1)IS(rt0.c0)) AS BLOB)))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0, rt1 WHERE (((CAST(((rt0.c1)IS(rt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0, rt1;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)<((NOT (rt0.c2))))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)<((NOT (rt0.c2))))))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)<((NOT (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((MIN(GROUP_CONCAT(vt0.c0))))!=((COUNT(rt0.c3)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((((MIN(GROUP_CONCAT(vt0.c0))))<>((COUNT(rt0.c3)))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((((MIN(GROUP_CONCAT(vt0.c0))))<>((COUNT(rt0.c3))))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, rt1.c0, vt0.c0, rt1.c1, rt0.c1 FROM vt0, rt1, rt0;
SELECT rt0.c0, rt0.c3, rt0.c2, rt1.c0, vt0.c0, rt1.c1, rt0.c1 FROM vt0, rt1, rt0 WHERE (((((rt1.c2) NOTNULL)) IS FALSE)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt1.c0, vt0.c0, rt1.c1, rt0.c1 FROM vt0, rt1, rt0 WHERE ((NOT (((((rt1.c2) NOTNULL)) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt1.c0, vt0.c0, rt1.c1, rt0.c1 FROM vt0, rt1, rt0 WHERE (((((((rt1.c2) NOTNULL)) IS FALSE)) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c2, rt1.c0, vt0.c0, rt1.c1, rt0.c1 FROM vt0, rt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, vt0, rt0 WHERE (((CAST(rt0.c2 AS INTEGER))GLOB((~ (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, vt0, rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))GLOB((~ (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, vt0, rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))GLOB((~ (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt1, vt0, rt0;
SELECT ALL vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt0.c2;
SELECT ALL vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c2, NULL, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS TEXT), rt0.c3 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)), CASE WHEN '-116273893' THEN 0.5909207525933317 ELSE vt0.c0 END, rt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0, rt0.c3, rt0.c2 UNION SELECT vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2, NULL, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS TEXT), rt0.c3 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)), CASE WHEN '-116273893' THEN 0.5909207525933317 ELSE vt0.c0 END, rt0.c0 COLLATE NOCASE)))))) GROUP BY vt0.c0, rt0.c3, rt0.c2 UNION SELECT vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c2, NULL, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS TEXT), rt0.c3 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)), CASE WHEN '-116273893' THEN 0.5909207525933317 ELSE vt0.c0 END, rt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c2;
SELECT ALL vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c2 HAVING COUNT(((AVG(COUNT(*)))AND(rt1.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(((AVG(COUNT(*)))AND(rt1.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c2 HAVING ((COUNT(((AVG(COUNT(*)))AND(rt1.c2)))) ISNULL);
SELECT rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS INTEGER) IN ((~ (vt0.c0))));
SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS INTEGER) IN ((~ (vt0.c0)))) WHERE ((((rt0.c0 IN (rt0.c1)))AND(UPPER(rt0.c2)))) UNION ALL SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS INTEGER) IN ((~ (vt0.c0)))) WHERE ((NOT ((((rt0.c0 IN (rt0.c1)))AND(UPPER(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS INTEGER) IN ((~ (vt0.c0)))) WHERE ((((((rt0.c0 IN (rt0.c1)))AND(UPPER(rt0.c2)))) ISNULL));
SELECT rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS INTEGER) IN ((~ (vt0.c0))));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE ((rt0.c3)*(vt0.c0))  WHEN (('%E9?')<>(rt0.c2)) THEN ((rt0.c2)||(rt0.c2)) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c3)*(vt0.c0))  WHEN (('%E9?')<>(rt0.c2)) THEN ((rt0.c2)||(rt0.c2)) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE ((rt0.c3)*(vt0.c0))  WHEN (('%E9?')!=(rt0.c2)) THEN ((rt0.c2)||(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN '984879045' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c2)) BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN '984879045' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN '984879045' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING AVG(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((AVG(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (rt0.c3) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c3) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE (((0.717164075234581) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((0.717164075234581) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE (((((0.717164075234581) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('''>|A') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('''>|A'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('''>|A') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING SUM(rt1.c1) COLLATE BINARY UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (SUM(rt1.c1) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((SUM(rt1.c1) COLLATE BINARY) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING SUM(rt1.c1) COLLATE BINARY UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (SUM(rt1.c1) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((SUM(rt1.c1) COLLATE BINARY) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL TOTAL((+ ((~ (vt0.c0))))) FROM vt0, rt0;
SELECT ALL rt0.c3, rt1.c1, rt0.c2, rt1.c0, rt0.c1, rt1.c2 FROM rt1 INNER JOIN rt0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(1500981065)))AND(rt0.c0)))AND(rt0.c1)))>=(((rt1.c2) NOT NULL)));
SELECT rt0.c3, rt1.c1, rt0.c2, rt1.c0, rt0.c1, rt1.c2 FROM rt1 INNER JOIN rt0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(1500981065)))AND(rt0.c0)))AND(rt0.c1)))>=(((rt1.c2) NOT NULL))) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((CAST(rt0.c3 AS TEXT))))) ORDER BY (((rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c3)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c3))!=((rt0.c2, rt0.c1, rt1.c2))), CAST(rt1.c2 AS REAL), CAST(rt1.c1 AS REAL), ((rt1.c1)AND(rt1.c0)), (rt1.c0 IN (rt0.c3, rt1.c0)))) AND ((-1301598893, (- (NULL)), 0.20191009119172432, ((rt1.c2) IS FALSE), NULLIF(rt0.c0, rt0.c0)))) ASC  NULLS FIRST, CAST((NOT (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT ALL rt0.c3, rt1.c1, rt0.c2, rt1.c0, rt0.c1, rt1.c2 FROM rt1 INNER JOIN rt0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(1500981065)))AND(rt0.c0)))AND(rt0.c1)))>=(((rt1.c2) NOT NULL))) WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((CAST(rt0.c3 AS TEXT))))))) ORDER BY (((rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c3)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c3))!=((rt0.c2, rt0.c1, rt1.c2))), CAST(rt1.c2 AS REAL), CAST(rt1.c1 AS REAL), ((rt1.c1)AND(rt1.c0)), (rt1.c0 IN (rt0.c3, rt1.c0)))) AND ((-1301598893, (- (NULL)), 0.20191009119172432, ((rt1.c2) IS FALSE), NULLIF(rt0.c0, rt0.c0)))) ASC  NULLS FIRST, CAST((NOT (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT rt0.c3, rt1.c1, rt0.c2, rt1.c0, rt0.c1, rt1.c2 FROM rt1 INNER JOIN rt0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(1500981065)))AND(rt0.c0)))AND(rt0.c1)))>=(((rt1.c2) NOT NULL))) WHERE ((((((rt0.c1)) NOT BETWEEN ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((CAST(rt0.c3 AS TEXT))))) ISNULL)) ORDER BY (((rt1.c0, rt0.c1, rt1.c1, rt0.c2, rt0.c3)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c3))<>((rt0.c2, rt0.c1, rt1.c2))), CAST(rt1.c2 AS REAL), CAST(rt1.c1 AS REAL), ((rt1.c1)AND(rt1.c0)), (rt1.c0 IN (rt0.c3, rt1.c0)))) AND ((-1301598893, (- (NULL)), 0.20191009119172432, ((rt1.c2) IS FALSE), NULLIF(rt0.c0, rt0.c0)))) ASC  NULLS FIRST, CAST((NOT (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT ALL rt0.c3, rt1.c1, rt0.c2, rt1.c0, rt0.c1, rt1.c2 FROM rt1 INNER JOIN rt0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(1500981065)))AND(rt0.c0)))AND(rt0.c1)))>=(((rt1.c2) NOT NULL)));
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0;
SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 WHERE (('-1116126265' IN ())) GROUP BY rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 WHERE ((NOT (('-1116126265' IN ())))) GROUP BY rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 WHERE (((('-1116126265' IN ())) ISNULL)) GROUP BY rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0;
SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING TOTAL(COUNT(TOTAL(rt1.c2))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (TOTAL(COUNT(TOTAL(rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((TOTAL(COUNT(TOTAL(rt1.c2)))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CAST(rt1.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1 WHERE (('0.8106236233095983' COLLATE RTRIM IN ())) UNION SELECT DISTINCT rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1 WHERE ((NOT (('0.8106236233095983' COLLATE RTRIM IN ())))) UNION SELECT DISTINCT rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1 WHERE (((('0.8106236233095983' COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c0, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE), (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), vt0.c0)) AND (((((vt0.c0))<=((vt0.c0))), CASE WHEN vt0.c0 THEN 'sdd}' END, CAST(vt0.c0 AS INTEGER))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE), (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), vt0.c0)) AND (((((vt0.c0))<=((vt0.c0))), CASE WHEN vt0.c0 THEN 'sdd}' END, CAST(vt0.c0 AS INTEGER))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE), (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), vt0.c0)) AND (((((vt0.c0))<=((vt0.c0))), CASE WHEN vt0.c0 THEN 'sdd}' END, CAST(vt0.c0 AS INTEGER))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt1.c0, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.621491651180065) GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0;
SELECT rt0.c2, rt1.c0, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.621491651180065) GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0 HAVING TOTAL(AVG(1854308055)) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.621491651180065) GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0 HAVING (NOT (TOTAL(AVG(1854308055)))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(rt0.c0 COLLATE BINARY, 0.621491651180065) GROUP BY rt0.c2, rt1.c0, rt0.c3, rt0.c0 HAVING ((TOTAL(AVG(1854308055))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)), CAST(rt1.c0 AS REAL), (+ (rt1.c1))))<=(((rt1.c1 IN ()), rt1.c0, (+ (rt1.c0)))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)), CAST(rt1.c0 AS REAL), (+ (rt1.c1))))<=(((rt1.c1 IN ()), rt1.c0, (+ (rt1.c0)))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)), CAST(rt1.c0 AS REAL), (+ (rt1.c1))))<=(((rt1.c1 IN ()), rt1.c0, (+ (rt1.c0)))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (LTRIM(((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((NOT (LTRIM(((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE (((LTRIM(((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1802566038' ELSE vt0.c0 END) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1802566038' ELSE vt0.c0 END) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1802566038' ELSE vt0.c0 END) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'62e9fb34' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'62e9fb34')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'62e9fb34') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'62e9fb34' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'62e9fb34')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'62e9fb34') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (CAST(rt1.c0 AS BLOB) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (CAST(rt1.c0 AS BLOB) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((rt0.c3, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt0.c2, rt1.c1)) AND ((rt1.c1, rt0.c2, rt0.c0))))+(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((((((rt0.c3, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt0.c2, rt1.c1)) AND ((rt1.c1, rt0.c2, rt0.c0))))+(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((((rt0.c3, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt0.c2, rt1.c1)) AND ((rt1.c1, rt0.c2, rt0.c0))))+(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((rt1.c1)/('')))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 WHERE ((NOT ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((rt1.c1)/('')))))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((rt1.c1)/('')))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt1.c2, rt1.c1;
SELECT rt0.c1, rt1.c0, rt0.c2, rt1.c2 FROM vt0, rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c2, rt1.c2;
SELECT ALL rt0.c1, rt1.c0, rt0.c2, rt1.c2 FROM vt0, rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c2, rt1.c2 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c2, rt1.c2 FROM vt0, rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c2, rt1.c2 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c2, rt1.c2 FROM vt0, rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c2, rt1.c2 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT MAX((+ (((((((((rt0.c1)AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c1)))OR(rt1.c0))))) FROM rt1, rt0 ORDER BY CAST(ABS(DISTINCT NULL) AS NUMERIC), (((rt1.c1 IN ())) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM COLLATE BINARY) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM COLLATE BINARY))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE ((NOT (CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, rt1, vt0 WHERE (((CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, vt0;
SELECT ALL rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((((((((vt0.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.5398222342055182, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c0))))AND(CASE WHEN rt1.c2 THEN rt1.c1 ELSE x'' END)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT ((((((((vt0.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.5398222342055182, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c0))))AND(CASE WHEN rt1.c2 THEN rt1.c1 ELSE x'' END)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))))) GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((((((((((vt0.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.5398222342055182, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c0))))AND(CASE WHEN rt1.c2 THEN rt1.c1 ELSE x'' END)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT rt0.c0 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0 HAVING TOTAL(MIN(COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(MIN(COUNT(*))))) UNION ALL SELECT rt0.c0 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0 HAVING ((TOTAL(MIN(COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) ISNULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) ISNULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE (json_insert(((rt1.c1)||(rt1.c1)), (((rt0.c2, rt0.c3, rt1.c1)) NOT BETWEEN ((rt1.c0, rt0.c3, rt0.c2)) AND ((rt1.c2, rt1.c2, rt0.c2))), (((rt0.c1, rt1.c0, rt1.c2))!=((rt1.c1, rt0.c2, rt1.c1))))) UNION SELECT DISTINCT rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE ((NOT (json_insert(((rt1.c1)||(rt1.c1)), (((rt0.c2, rt0.c3, rt1.c1)) NOT BETWEEN ((rt1.c0, rt0.c3, rt0.c2)) AND ((rt1.c2, rt1.c2, rt0.c2))), (((rt0.c1, rt1.c0, rt1.c2))<>((rt1.c1, rt0.c2, rt1.c1))))))) UNION SELECT DISTINCT rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE (((json_insert(((rt1.c1)||(rt1.c1)), (((rt0.c2, rt0.c3, rt1.c1)) NOT BETWEEN ((rt1.c0, rt0.c3, rt0.c2)) AND ((rt1.c2, rt1.c2, rt0.c2))), (((rt0.c1, rt1.c0, rt1.c2))<>((rt1.c1, rt0.c2, rt1.c1))))) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0;
SELECT ALL rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE (HEX(DISTINCT CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 END)) GROUP BY rt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT (HEX(DISTINCT CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 END)))) GROUP BY rt0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE (((HEX(DISTINCT CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 END)) ISNULL)) GROUP BY rt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST((NOT (vt0.c0)) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c3 FROM rt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c3 FROM rt0, rt1 WHERE (((((0.010159479643724989) BETWEEN (0Xffffffff946b3743) AND (rt1.c0))) ISNULL)) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c3 FROM rt0, rt1 WHERE ((NOT (((((0.010159479643724989) BETWEEN (0xffffffff946b3743) AND (rt1.c0))) ISNULL)))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c3 FROM rt0, rt1 WHERE (((((((0.010159479643724989) BETWEEN (0Xffffffff946b3743) AND (rt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c3 FROM rt0, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM vt0, rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c2 HAVING MAX(rt0.c1) UNION ALL SELECT rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((MAX(rt0.c1)) ISNULL);
SELECT ALL rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM vt0, rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c2 HAVING MAX(rt0.c1) UNION ALL SELECT rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((MAX(rt0.c1)) ISNULL);
SELECT ALL rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt1, rt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt1, rt0 WHERE (0.0) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt1, rt0 WHERE ((NOT (0.0))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt1, rt0 WHERE (((0.0) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt1, rt0;
SELECT rt1.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c1;
SELECT ALL rt1.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 WHERE (((((rt0.c3, rt1.c1, vt0.c0, rt1.c2, rt0.c1)) BETWEEN ((0.11124560061395561, x'', rt1.c0, rt1.c0, vt0.c0)) AND ((NULL, rt0.c3, rt1.c0, rt0.c0, rt1.c0))) IN ())) GROUP BY rt1.c0, rt1.c2, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 NOT INDEXED WHERE ((NOT (((((rt0.c3, rt1.c1, vt0.c0, rt1.c2, rt0.c1)) BETWEEN ((0.11124560061395561, x'', rt1.c0, rt1.c0, vt0.c0)) AND ((NULL, rt0.c3, rt1.c0, rt0.c0, rt1.c0))) IN ())))) GROUP BY rt1.c0, rt1.c2, rt0.c1 UNION SELECT rt1.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 WHERE (((((((rt0.c3, rt1.c1, vt0.c0, rt1.c2, rt0.c1)) BETWEEN ((0.11124560061395561, x'', rt1.c0, rt1.c0, vt0.c0)) AND ((NULL, rt0.c3, rt1.c0, rt0.c0, rt1.c0))) IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt0.c1;
SELECT rt1.c0, rt1.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c1;
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (LOWER(COUNT(*)) IN (CASE WHEN AVG(rt0.c0) THEN rt0.c2 END, MAX(rt0.c0))) UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (NOT ((LOWER(COUNT(*)) IN (CASE WHEN AVG(rt0.c0) THEN rt0.c2 END, MAX(rt0.c0))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (((LOWER(COUNT(*)) IN (CASE WHEN AVG(rt0.c0) THEN rt0.c2 END, MAX(rt0.c0)))) ISNULL);
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (LOWER(COUNT(*)) IN (CASE WHEN AVG(rt0.c0) THEN rt0.c2 END, MAX(rt0.c0))) UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (NOT ((LOWER(COUNT(*)) IN (CASE WHEN AVG(rt0.c0) THEN rt0.c2 END, MAX(rt0.c0))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (((LOWER(COUNT(*)) IN (CASE WHEN AVG(rt0.c0) THEN rt0.c2 END, MAX(rt0.c0)))) ISNULL);
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 WHEN LIKELIHOOD('1257976747', 0.8411667930087664) THEN vt0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 WHEN LIKELIHOOD('1257976747', 0.8411667930087664) THEN vt0.c0 COLLATE NOCASE END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 WHEN LIKELIHOOD('1257976747', 0.8411667930087664) THEN vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS NUMERIC))GLOB((((vt0.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, vt0.c0, rt1.c1)) AND ((vt0.c0, rt1.c0, rt1.c1)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))GLOB((((vt0.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, vt0.c0, rt1.c1)) AND ((vt0.c0, rt1.c0, rt1.c1)))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE (((((CAST(vt0.c0 AS NUMERIC))GLOB((((vt0.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, vt0.c0, rt1.c1)) AND ((vt0.c0, rt1.c0, rt1.c1)))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1;
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0, rt1 WHERE (rt1.c0) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0, rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0, rt1 NOT INDEXED WHERE (((rt1.c0) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, rt1 GROUP BY rt0.c2;
SELECT vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM vt0, rt1 INNER JOIN rt0 ON NULL GROUP BY vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1;
SELECT ALL vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM vt0, rt1 INNER JOIN rt0 ON NULL GROUP BY vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 HAVING CASE MAX(COUNT(COUNT(*)))  WHEN ((COUNT(MIN(TOTAL(rt1.c1))))>>(COUNT(*))) THEN MAX(rt1.c1) WHEN AVG(rt0.c3) THEN MAX(rt1.c0) WHEN GROUP_CONCAT(MAX(rt1.c1)) THEN GROUP_CONCAT(rt0.c2) WHEN NULLIF(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c3))), rt1.c0) THEN MIN(rt0.c0) WHEN NULL THEN CASE WHEN rt1.c0 THEN MAX(MIN(MIN(MAX(vt0.c0)))) END ELSE GROUP_CONCAT(rt1.c1) END UNION ALL SELECT ALL vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM vt0, rt1 INNER JOIN rt0 ON NULL GROUP BY vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 HAVING (NOT (CASE MAX(COUNT(COUNT(*)))  WHEN ((COUNT(MIN(TOTAL(rt1.c1))))>>(COUNT(*))) THEN MAX(rt1.c1) WHEN AVG(rt0.c3) THEN MAX(rt1.c0) WHEN GROUP_CONCAT(MAX(rt1.c1)) THEN GROUP_CONCAT(rt0.c2) WHEN NULLIF(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c3))), rt1.c0) THEN MIN(rt0.c0) WHEN NULL THEN CASE WHEN rt1.c0 THEN MAX(MIN(MIN(MAX(vt0.c0)))) END ELSE GROUP_CONCAT(rt1.c1) END)) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM vt0, rt1 INNER JOIN rt0 ON NULL GROUP BY vt0.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 HAVING ((CASE MAX(COUNT(COUNT(*)))  WHEN ((COUNT(MIN(TOTAL(rt1.c1))))>>(COUNT(*))) THEN MAX(rt1.c1) WHEN AVG(rt0.c3) THEN MAX(rt1.c0) WHEN GROUP_CONCAT(MAX(rt1.c1)) THEN GROUP_CONCAT(rt0.c2) WHEN NULLIF(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c3))), rt1.c0) THEN MIN(rt0.c0) WHEN NULL THEN CASE WHEN rt1.c0 THEN MAX(MIN(MIN(MAX(vt0.c0)))) END ELSE GROUP_CONCAT(rt1.c1) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c3 IN ()) THEN NULL ELSE CAST(rt0.c1 AS REAL) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c3 IN ()) THEN NULL ELSE CAST(rt0.c1 AS REAL) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN (rt0.c3 IN ()) THEN NULL ELSE CAST(rt0.c1 AS REAL) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE (((json_array(rt1.c1, rt0.c3)) BETWEEN ((((rt1.c2))<>((rt1.c2)))) AND (rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE ((NOT (((json_array(rt1.c1, rt0.c3)) BETWEEN ((((rt1.c2))!=((rt1.c2)))) AND (rt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, rt1, rt0 WHERE (((((json_array(rt1.c1, rt0.c3)) BETWEEN ((((rt1.c2))!=((rt1.c2)))) AND (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, rt0;
SELECT rt1.c2, vt0.c0 FROM rt1 NOT INDEXED, vt0 GROUP BY rt1.c2, vt0.c0;
SELECT ALL rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((~ (rt1.c1 COLLATE BINARY))) GROUP BY rt1.c2, vt0.c0 UNION SELECT rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((NOT ((~ (rt1.c1 COLLATE BINARY))))) GROUP BY rt1.c2, vt0.c0 UNION SELECT rt1.c2, vt0.c0 FROM rt1, vt0 WHERE ((((~ (rt1.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c2, vt0.c0;
SELECT rt1.c2, vt0.c0 FROM rt1 NOT INDEXED, vt0 GROUP BY rt1.c2, vt0.c0;
SELECT rt1.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt1.c0 FROM rt0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt1.c0;
SELECT rt1.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt1.c0 FROM rt0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt1.c0 HAVING MIN(((TOTAL(rt1.c0))%(COUNT(*)))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt1.c0 FROM rt0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt1.c0 HAVING (NOT (MIN(((TOTAL(rt1.c0))%(COUNT(*)))))) UNION ALL SELECT rt1.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt1.c0 FROM rt0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt1.c0 HAVING ((MIN(((TOTAL(rt1.c0))%(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.14082508094662172)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c0, 0.14082508094662172)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.14082508094662172)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c2;
SELECT rt1.c0, rt0.c2 FROM rt1, rt0 WHERE (CASE WHEN rt1.c1 THEN rt0.c1 END COLLATE NOCASE) GROUP BY rt1.c0, rt0.c2 UNION SELECT ALL rt1.c0, rt0.c2 FROM rt1, rt0 WHERE ((NOT (CASE WHEN rt1.c1 THEN rt0.c1 END COLLATE NOCASE))) GROUP BY rt1.c0, rt0.c2 UNION SELECT rt1.c0, rt0.c2 FROM rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 END COLLATE NOCASE) ISNULL)) GROUP BY rt1.c0, rt0.c2;
SELECT rt1.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c2;
SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c1 FROM rt1 INNER JOIN rt0 ON JULIANDAY((rt1.c1 IN ()), (- (rt0.c2)), (+ (rt0.c2)), x'', (((('荴~+G{f)')OR(rt0.c3)))AND(rt1.c2))) RIGHT OUTER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS NUMERIC) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c1;
SELECT rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c1 FROM rt1 INNER JOIN rt0 ON JULIANDAY((rt1.c1 IN ()), (- (rt0.c2)), (+ (rt0.c2)), x'', (((('荴~+G{f)')OR(rt0.c3)))AND(rt1.c2))) RIGHT OUTER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS NUMERIC) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c1 HAVING COUNT(AVG(COUNT(*)) COLLATE RTRIM) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c1 FROM rt1 INNER JOIN rt0 ON JULIANDAY((rt1.c1 IN ()), (- (rt0.c2)), (+ (rt0.c2)), x'', (((('荴~+G{f)')OR(rt0.c3)))AND(rt1.c2))) RIGHT OUTER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS NUMERIC) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c1 HAVING (NOT (COUNT(AVG(COUNT(*)) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c1 FROM rt1 INNER JOIN rt0 ON JULIANDAY((rt1.c1 IN ()), (- (rt0.c2)), (+ (rt0.c2)), x'', (((('荴~+G{f)')OR(rt0.c3)))AND(rt1.c2))) RIGHT OUTER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS NUMERIC) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c1 HAVING ((COUNT(AVG(COUNT(*)) COLLATE RTRIM)) ISNULL);
SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c2)) AS TEXT) CROSS JOIN rt0 ON (json_object(rt1.c1, rt1.c0) IN (((rt0.c2) ISNULL)));
SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c2)) AS TEXT) CROSS JOIN rt0 ON (json_object(rt1.c1, rt1.c0) IN (((rt0.c2) ISNULL))) WHERE ((((((((((((0.4996534026889222, rt1.c2, rt1.c2))>=((rt0.c1, rt0.c0, rt0.c1))))AND(((rt0.c2)OR(rt0.c2)))))AND(((rt0.c0)&(vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 END)))OR(rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c2)) AS TEXT) CROSS JOIN rt0 ON (json_object(rt1.c1, rt1.c0) IN (((rt0.c2) ISNULL))) WHERE ((NOT ((((((((((((0.4996534026889222, rt1.c2, rt1.c2))>=((rt0.c1, rt0.c0, rt0.c1))))AND(((rt0.c2)OR(rt0.c2)))))AND(((rt0.c0)&(vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 END)))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c2)) AS TEXT) CROSS JOIN rt0 ON (json_object(rt1.c1, rt1.c0) IN (((rt0.c2) ISNULL))) WHERE ((((((((((((((0.4996534026889222, rt1.c2, rt1.c2))>=((rt0.c1, rt0.c0, rt0.c1))))AND(((rt0.c2)OR(rt0.c2)))))AND(((rt0.c0)&(vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 END)))OR(rt0.c2))) ISNULL));
SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c0, rt1.c1, vt0.c0 FROM rt1 CROSS JOIN vt0 ON CAST(((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c2)) AS TEXT) CROSS JOIN rt0 ON (json_object(rt1.c1, rt1.c0) IN (((rt0.c2) ISNULL)));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0 IN ())))<=(((NOT (rt1.c1))))) LEFT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT);
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0 IN ())))<=(((NOT (rt1.c1))))) LEFT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT) WHERE (((((rt1.c2)LIKE(rt0.c0)))!=((((0.9953081473030179, x'', rt1.c0, rt0.c3, rt0.c2))>=((vt0.c0, -2136942919, rt0.c0, vt0.c0, '-436044305')))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0 IN ())))<=(((NOT (rt1.c1))))) LEFT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT) WHERE ((NOT (((((rt1.c2)LIKE(rt0.c0)))<>((((0.9953081473030179, x'', rt1.c0, rt0.c3, rt0.c2))>=((vt0.c0, -2136942919, rt0.c0, vt0.c0, '-436044305')))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0 IN ())))<=(((NOT (rt1.c1))))) LEFT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT) WHERE (((((((rt1.c2)LIKE(rt0.c0)))!=((((0.9953081473030179, x'', rt1.c0, rt0.c3, rt0.c2))>=((vt0.c0, -2136942919, rt0.c0, vt0.c0, '-436044305')))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0 IN ())))<=(((NOT (rt1.c1))))) LEFT OUTER JOIN rt1 ON CAST(rt0.c2 AS TEXT);
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0, rt1, vt0 WHERE (((((((rt0.c0)AND(rt1.c2)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3))) AND (rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0, rt1, vt0 WHERE ((NOT (((((((rt0.c0)AND(rt1.c2)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3))) AND (rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0, rt1, vt0 WHERE (((((((((rt0.c0)AND(rt1.c2)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3))) AND (rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0, rt1, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING TOTAL(MAX(rt1.c0)) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (TOTAL(MAX(rt1.c0)))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((TOTAL(MAX(rt1.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)<(vt0.c0)) WHEN CAST(x'' AS NUMERIC) THEN (((vt0.c0))=((vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((x'') IS FALSE) WHEN ((vt0.c0)+(x'6845')) THEN 0.668658147399277 ELSE ((vt0.c0) IS FALSE) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)<(vt0.c0)) WHEN CAST(x'' AS NUMERIC) THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((x'') IS FALSE) WHEN ((vt0.c0)+(x'6845')) THEN 0.668658147399277 ELSE ((vt0.c0) IS FALSE) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)<(vt0.c0)) WHEN CAST(x'' AS NUMERIC) THEN (((vt0.c0))=((vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((x'') IS FALSE) WHEN ((vt0.c0)+(x'6845')) THEN 0.668658147399277 ELSE ((vt0.c0) IS FALSE) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c3)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (rt0.c3)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c3)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((x'7519') NOT BETWEEN (((NULL) ISNULL)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((x'7519') NOT BETWEEN (((NULL) ISNULL)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'7519') NOT BETWEEN (((NULL) ISNULL)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING SUM(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (SUM(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((SUM(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE NOCASE) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CAST(('-1513370953' IN ()) AS BLOB);
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CAST(('-1513370953' IN ()) AS BLOB) WHERE (rt0.c2) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CAST(('-1513370953' IN ()) AS BLOB) WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CAST(('-1513370953' IN ()) AS BLOB) WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON CAST(('-1513370953' IN ()) AS BLOB);
SELECT ALL rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1 FROM rt1, rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1 FROM rt1, rt0, vt0 WHERE ((((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ())) GROUP BY rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1 FROM rt1, rt0, vt0 WHERE ((NOT ((((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ())))) GROUP BY rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1 FROM rt1, rt0, vt0 WHERE ((((((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c0)) IN ())) ISNULL)) GROUP BY rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1 FROM rt1, rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0;
SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0 WHERE (CAST((((rt1.c1))>=((rt1.c0))) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0 WHERE ((NOT (CAST((((rt1.c1))>=((rt1.c0))) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0 WHERE (((CAST((((rt1.c1))>=((rt1.c0))) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0, rt1 NATURAL JOIN vt0;
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c3 FROM vt0, rt1, rt0;
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 WHERE (((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 WHERE ((NOT (((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c3 FROM vt0, rt1, rt0 WHERE (((((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c3 FROM vt0, rt1, rt0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN x'' WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (((rt1.c0)-(rt1.c0))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c1 THEN x'' WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (((rt1.c0)-(rt1.c0))))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN x'' WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (((rt1.c0)-(rt1.c0))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING MAX(((COUNT(SUM(0.8431501146100822)))|(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(((COUNT(SUM(0.8431501146100822)))|(SUM(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(((COUNT(SUM(0.8431501146100822)))|(SUM(rt0.c2))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) BETWEEN (((rt1.c0)>>(rt1.c1))) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (((CAST(rt1.c2 AS NUMERIC)) BETWEEN (((rt1.c0)>>(rt1.c1))) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((((CAST(rt1.c2 AS NUMERIC)) BETWEEN (((rt1.c0)>>(rt1.c1))) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELIHOOD((- (vt0.c0)), 0.5996076764480487);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON LIKELIHOOD((- (vt0.c0)), 0.5996076764480487) WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0)) IN ())) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELIHOOD((- (vt0.c0)), 0.5996076764480487) WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0)) IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELIHOOD((- (vt0.c0)), 0.5996076764480487) WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0)) IN ())) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELIHOOD((- (vt0.c0)), 0.5996076764480487);
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((('') NOTNULL))<<(((rt0.c1) NOTNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((('') NOTNULL))<<(((rt0.c1) NOTNULL)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((('') NOTNULL))<<(((rt0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2;
SELECT rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2 FROM rt1, rt0 NATURAL JOIN vt0 WHERE ((json_quote(rt0.c3) IN ())) GROUP BY rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2 UNION SELECT rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2 FROM rt1, rt0 NATURAL JOIN vt0 WHERE ((NOT ((json_quote(rt0.c3) IN ())))) GROUP BY rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2 FROM rt1, rt0 NATURAL JOIN vt0 WHERE ((((json_quote(rt0.c3) IN ())) ISNULL)) GROUP BY rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2;
SELECT rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2 FROM rt1, rt0 NATURAL JOIN vt0 GROUP BY rt1.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING json_valid(CASE rt1.c2  WHEN rt1.c0 THEN '0.6237102603325562' END) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (json_valid(CASE rt1.c2  WHEN rt1.c0 THEN '0.6237102603325562' END))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((json_valid(CASE rt1.c2  WHEN rt1.c0 THEN '0.6237102603325562' END)) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING json_valid(CASE rt1.c2  WHEN rt1.c0 THEN '0.6237102603325562' END) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (json_valid(CASE rt1.c2  WHEN rt1.c0 THEN '0.6237102603325562' END))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((json_valid(CASE rt1.c2  WHEN rt1.c0 THEN '0.6237102603325562' END)) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)OR(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))) RIGHT OUTER JOIN rt0 ON (CASE WHEN rt1.c1 THEN rt1.c1 END IN ());
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)<<('-688973985'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0)<<('-688973985'))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0)<<('-688973985'))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (rt0.c2) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c3;
SELECT ALL rt1.c2, rt0.c2, rt1.c1, rt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt1.c1, rt0.c0;
SELECT rt1.c2, rt0.c2, rt1.c1, rt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt1.c1, rt0.c0 HAVING COUNT(SUM(rt0.c1) COLLATE BINARY) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c1, rt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt1.c1, rt0.c0 HAVING (NOT (COUNT(SUM(rt0.c1) COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt1.c1, rt0.c0 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt1.c1, rt0.c0 HAVING ((COUNT(SUM(rt0.c1) COLLATE BINARY)) ISNULL);
SELECT rt1.c1, rt0.c3, rt0.c1 FROM rt1, rt0;
SELECT rt1.c1, rt0.c3, rt0.c1 FROM rt1, rt0 WHERE (CASE '-69220484'  WHEN rt1.c1 THEN rt0.c3 END COLLATE RTRIM) UNION ALL SELECT rt1.c1, rt0.c3, rt0.c1 FROM rt1, rt0 WHERE ((NOT (CASE '-69220484'  WHEN rt1.c1 THEN rt0.c3 END COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt0.c3, rt0.c1 FROM rt1, rt0 WHERE (((CASE '-69220484'  WHEN rt1.c1 THEN rt0.c3 END COLLATE RTRIM) ISNULL));
SELECT rt1.c1, rt0.c3, rt0.c1 FROM rt1, rt0;
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) NOT BETWEEN (((rt0.c1)*(rt1.c0))) AND (rt1.c2));
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) NOT BETWEEN (((rt0.c1)*(rt1.c0))) AND (rt1.c2)) WHERE (((rt1.c0)-(((rt1.c1)<(rt1.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) NOT BETWEEN (((rt0.c1)*(rt1.c0))) AND (rt1.c2)) WHERE ((NOT (((rt1.c0)-(((rt1.c1)<(rt1.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) NOT BETWEEN (((rt0.c1)*(rt1.c0))) AND (rt1.c2)) WHERE (((((rt1.c0)-(((rt1.c1)<(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) NOT BETWEEN (((rt0.c1)*(rt1.c0))) AND (rt1.c2));
SELECT ALL rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0, rt1 WHERE (rt1.c0) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0, rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0, rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((AVG(rt0.c1)) BETWEEN (((COUNT(*)) NOTNULL)) AND (COUNT(GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (((AVG(rt0.c1)) BETWEEN (((COUNT(*)) NOTNULL)) AND (COUNT(GROUP_CONCAT(rt0.c3)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((((AVG(rt0.c1)) BETWEEN (((COUNT(*)) NOTNULL)) AND (COUNT(GROUP_CONCAT(rt0.c3))))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))*((((vt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c3, rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))*((((vt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c3, rt0.c2))))) WHERE (ROUND(json_array_length(rt0.c1), ((vt0.c0)IS NOT(rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))*((((vt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c3, rt0.c2))))) WHERE ((NOT (ROUND(json_array_length(rt0.c1), ((vt0.c0)IS NOT(rt0.c2)))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))*((((vt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c3, rt0.c2))))) WHERE (((ROUND(json_array_length(rt0.c1), ((vt0.c0)IS NOT(rt0.c2)))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))*((((vt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c3, rt0.c2)))));
SELECT DISTINCT rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) AND (CAST(rt1.c0 AS INTEGER)));
SELECT DISTINCT rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) AND (CAST(rt1.c0 AS INTEGER))) WHERE (((- (rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) AND (CAST(rt1.c0 AS INTEGER))) WHERE ((NOT (((- (rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) AND (CAST(rt1.c0 AS INTEGER))) WHERE (((((- (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) AND (CAST(rt1.c0 AS INTEGER)));
SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE (0.3601136329151471) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE ((NOT (0.3601136329151471))) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE (((0.3601136329151471) ISNULL)) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING CAST(SUM(rt0.c0) AS BLOB) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (CAST(SUM(rt0.c0) AS BLOB))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING ((CAST(SUM(rt0.c0) AS BLOB)) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING CAST(SUM(rt0.c0) AS BLOB) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (CAST(SUM(rt0.c0) AS BLOB))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING ((CAST(SUM(rt0.c0) AS BLOB)) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT * FROM rt0, vt0, rt1;
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((CAST(rt1.c1 AS TEXT)) IS TRUE)) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE ((NOT (((CAST(rt1.c1 AS TEXT)) IS TRUE)))) UNION ALL SELECT * FROM rt0, vt0, rt1 WHERE (((((CAST(rt1.c1 AS TEXT)) IS TRUE)) ISNULL));
SELECT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(x'5aff' AS BLOB)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((vt0.c0)==(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 NOT INDEXED WHERE ((NOT (((CAST(x'5aff' AS BLOB)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((vt0.c0)=(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((CAST(x'5aff' AS BLOB)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((vt0.c0)=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0) IS TRUE))-(rt0.c2))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) IS TRUE))-(rt0.c2))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c0) IS TRUE))-(rt0.c2))) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE COUNT(538615363)  WHEN MAX(vt0.c0) THEN COUNT(COUNT(vt0.c0)) WHEN ((COUNT(*))>(vt0.c0)) THEN ABS(vt0.c0) WHEN TOTAL(vt0.c0) THEN (((GROUP_CONCAT(TOTAL(vt0.c0)))) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((MIN(COUNT(MIN(vt0.c0))))GLOB(vt0.c0)) THEN ((((((((GROUP_CONCAT('b\脠8'))AND(SUM(COUNT(0Xffffffffda64a98c)))))OR(TOTAL(COUNT(*)))))OR(COUNT(*))))OR(TOTAL(MAX(MAX(vt0.c0))))) WHEN ((MIN(MIN(MIN(TOTAL(vt0.c0)))))<<(vt0.c0)) THEN SUM(vt0.c0) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE COUNT(538615363)  WHEN MAX(vt0.c0) THEN COUNT(COUNT(vt0.c0)) WHEN ((COUNT(*))>(vt0.c0)) THEN ABS(vt0.c0) WHEN TOTAL(vt0.c0) THEN (((GROUP_CONCAT(TOTAL(vt0.c0)))) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((MIN(COUNT(MIN(vt0.c0))))GLOB(vt0.c0)) THEN ((((((((GROUP_CONCAT('b\脠8'))AND(SUM(COUNT(0xffffffffda64a98c)))))OR(TOTAL(COUNT(*)))))OR(COUNT(*))))OR(TOTAL(MAX(MAX(vt0.c0))))) WHEN ((MIN(MIN(MIN(TOTAL(vt0.c0)))))<<(vt0.c0)) THEN SUM(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE COUNT(538615363)  WHEN MAX(vt0.c0) THEN COUNT(COUNT(vt0.c0)) WHEN ((COUNT(*))>(vt0.c0)) THEN ABS(vt0.c0) WHEN TOTAL(vt0.c0) THEN (((GROUP_CONCAT(TOTAL(vt0.c0)))) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((MIN(COUNT(MIN(vt0.c0))))GLOB(vt0.c0)) THEN ((((((((GROUP_CONCAT('b\脠8'))AND(SUM(COUNT(0Xffffffffda64a98c)))))OR(TOTAL(COUNT(*)))))OR(COUNT(*))))OR(TOTAL(MAX(MAX(vt0.c0))))) WHEN ((MIN(MIN(MIN(TOTAL(vt0.c0)))))<<(vt0.c0)) THEN SUM(vt0.c0) END) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END  WHEN (- (rt0.c3)) THEN ((rt0.c0)GLOB(rt0.c0)) END;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END  WHEN (- (rt0.c3)) THEN ((rt0.c0)GLOB(rt0.c0)) END WHERE ((NOT (((rt0.c2)AND(rt0.c3))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END  WHEN (- (rt0.c3)) THEN ((rt0.c0)GLOB(rt0.c0)) END WHERE ((NOT ((NOT (((rt0.c2)AND(rt0.c3))))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END  WHEN (- (rt0.c3)) THEN ((rt0.c0)GLOB(rt0.c0)) END WHERE ((((NOT (((rt0.c2)AND(rt0.c3))))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END  WHEN (- (rt0.c3)) THEN ((rt0.c0)GLOB(rt0.c0)) END;
SELECT DISTINCT rt0.c3, vt0.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((-1.24358155E8)<(rt1.c0)))<=(rt1.c2));
SELECT DISTINCT rt0.c3, vt0.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((-1.24358155E8)<(rt1.c0)))<=(rt1.c2)) WHERE (x'') UNION SELECT DISTINCT rt0.c3, vt0.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((-1.24358155E8)<(rt1.c0)))<=(rt1.c2)) WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((-1.24358155E8)<(rt1.c0)))<=(rt1.c2)) WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c3, vt0.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt1.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((-1.24358155E8)<(rt1.c0)))<=(rt1.c2));
SELECT ALL rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((((rt1.c1)) BETWEEN ((0X1847fd52)) AND ((rt1.c2))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, vt0 WHERE ((NOT ((((rt1.c2)) BETWEEN ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((((rt1.c1)) BETWEEN ((0x1847fd52)) AND ((rt1.c2))))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, vt0 WHERE ((((((rt1.c2)) BETWEEN ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((((rt1.c1)) BETWEEN ((0x1847fd52)) AND ((rt1.c2))))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING MAX(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING ((MAX(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL TOTAL(CAST((((('50814261')OR(rt0.c0)))OR(rt1.c1)) AS INTEGER)) FROM rt0, rt1, vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)%(0.7682111125897042))) IS TRUE);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)%(0.7682111125897042))) IS TRUE) WHERE (((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (NULL) AND (x'59ae'))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)%(0.7682111125897042))) IS TRUE) WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (NULL) AND (x'59ae'))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)%(0.7682111125897042))) IS TRUE) WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (NULL) AND (x'59ae'))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)%(0.7682111125897042))) IS TRUE);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('>o}| ('))=((((rt0.c0) NOT NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('>o}| ('))=((((rt0.c0) NOT NULL))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('>o}| ('))=((((rt0.c0) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE (rt1.c1) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MIN(rt1.c2)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt1.c2)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MIN(rt1.c2)) COLLATE BINARY) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)<(rt0.c2))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0)<(rt0.c2))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)<(rt0.c2))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, vt0.c0, rt0.c3 FROM rt1, rt0 INNER JOIN vt0 ON ((('1246596319')<(rt1.c2)) IN ());
SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, vt0.c0, rt0.c3 FROM rt1, rt0 INNER JOIN vt0 ON ((('1246596319')<(rt1.c2)) IN ()) WHERE (UNLIKELY((vt0.c0 IN ()))) UNION SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, vt0.c0, rt0.c3 FROM rt1, rt0 INNER JOIN vt0 ON ((('1246596319')<(rt1.c2)) IN ()) WHERE ((NOT (UNLIKELY((vt0.c0 IN ()))))) UNION SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, vt0.c0, rt0.c3 FROM rt1, rt0 INNER JOIN vt0 ON ((('1246596319')<(rt1.c2)) IN ()) WHERE (((UNLIKELY((vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c0, rt0.c0, rt1.c1, vt0.c0, rt0.c3 FROM rt1, rt0 INNER JOIN vt0 ON ((('1246596319')<(rt1.c2)) IN ());
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 WHERE (((((rt1.c1) ISNULL)) NOT BETWEEN (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 END) AND ((rt0.c2 IN ())))) GROUP BY rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 WHERE ((NOT (((((rt1.c1) ISNULL)) NOT BETWEEN (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 END) AND ((rt0.c2 IN ())))))) GROUP BY rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 WHERE (((((((rt1.c1) ISNULL)) NOT BETWEEN (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 END) AND ((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, rt1, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING COUNT(COUNT('鬄9Er')) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (COUNT(COUNT('鬄9Er')))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING ((COUNT(COUNT('鬄9Er'))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt0.c3, rt1.c2, vt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1;
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt0.c3, rt1.c2, vt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 WHERE (CAST(((rt1.c1) NOT BETWEEN (0.49939528349165363) AND (rt0.c0)) AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt0.c3, rt1.c2, vt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 WHERE ((NOT (CAST(((rt1.c1) NOT BETWEEN (0.49939528349165363) AND (rt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt0.c3, rt1.c2, vt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1 WHERE (((CAST(((rt1.c1) NOT BETWEEN (0.49939528349165363) AND (rt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt0.c3, rt1.c2, vt0.c0, rt0.c1, rt1.c1 FROM vt0, rt0, rt1;
SELECT rt0.c2 FROM vt0, rt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt1, rt0 WHERE (((((rt1.c1)OR('X79]')))OR((~ (rt1.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt1, rt0 WHERE ((NOT (((((rt1.c1)OR('X79]')))OR((~ (rt1.c0))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt1, rt0 NOT INDEXED WHERE (((((((rt1.c1)OR('X79]')))OR((~ (rt1.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2;
SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2 HAVING UNLIKELY(DISTINCT ((rt0.c0)<(SUM(rt1.c1)))) UNION ALL SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2 HAVING (NOT (UNLIKELY(DISTINCT ((rt0.c0)<(SUM(rt1.c1)))))) UNION ALL SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2 HAVING ((UNLIKELY(DISTINCT ((rt0.c0)<(SUM(rt1.c1))))) ISNULL);
SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2;
SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2 HAVING UNLIKELY(DISTINCT ((rt0.c0)<(SUM(rt1.c1)))) UNION ALL SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2 HAVING (NOT (UNLIKELY(DISTINCT ((rt0.c0)<(SUM(rt1.c1)))))) UNION ALL SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2 HAVING ((UNLIKELY(DISTINCT ((rt0.c0)<(SUM(rt1.c1))))) ISNULL);
SELECT rt0.c1, rt1.c2 FROM rt1 CROSS JOIN vt0 ON UPPER(((rt1.c2) NOT NULL)) FULL OUTER JOIN rt0 ON COALESCE(vt0.c0, rt0.c1) COLLATE BINARY GROUP BY rt0.c1, rt1.c2;
SELECT rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((~ (vt0.c0)))OR((+ (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((((((~ (vt0.c0)))OR((+ (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((((~ (vt0.c0)))OR((+ (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((((rt0.c2)AND(rt0.c0))) BETWEEN ((((rt0.c0, rt0.c1, rt0.c3))>((0.4935984668075527, rt0.c1, vt0.c0)))) AND ((~ (rt0.c1))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c0))) BETWEEN ((((rt0.c0, rt0.c1, rt0.c3))>((0.4935984668075527, rt0.c1, vt0.c0)))) AND ((~ (rt0.c1))))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((((((rt0.c2)AND(rt0.c0))) BETWEEN ((((rt0.c0, rt0.c1, rt0.c3))>((0.4935984668075527, rt0.c1, vt0.c0)))) AND ((~ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 NOT INDEXED GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1;
SELECT ALL rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 HAVING ((MAX(rt1.c2))>=(TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 HAVING (NOT (((MAX(rt1.c2))>=(TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 HAVING ((((MAX(rt1.c2))>=(TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 NOT INDEXED GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1;
SELECT ALL rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 HAVING ((MAX(rt1.c2))>=(TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 HAVING (NOT (((MAX(rt1.c2))>=(TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 HAVING ((((MAX(rt1.c2))>=(TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1 FROM rt0, rt1 NOT INDEXED GROUP BY rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt0.c3, rt1.c1;
SELECT rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE (((CASE NULL  WHEN rt0.c0 THEN '0.6059055652359812' END)|(((((((((rt0.c1)OR(rt0.c2)))OR(rt1.c2)))AND(NULL)))OR(rt1.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE ((NOT (((CASE NULL  WHEN rt0.c0 THEN '0.6059055652359812' END)|(((((((((rt0.c1)OR(rt0.c2)))OR(rt1.c2)))AND(NULL)))OR(rt1.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE (((((CASE NULL  WHEN rt0.c0 THEN '0.6059055652359812' END)|(((((((((rt0.c1)OR(rt0.c2)))OR(rt1.c2)))AND(NULL)))OR(rt1.c0))))) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((- (NULL)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((- (NULL)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((- (NULL)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt1.c1, vt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt1.c1, vt0.c0;
SELECT rt0.c2, rt1.c1, vt0.c0 FROM rt0, vt0, rt1 WHERE (((((((((((rt0.c1)AND(rt1.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0)/(rt0.c3))) AND (rt1.c0 COLLATE NOCASE))) GROUP BY rt0.c2, rt1.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt1.c1, vt0.c0 FROM rt0, vt0, rt1 WHERE ((NOT (((((((((((rt0.c1)AND(rt1.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0)/(rt0.c3))) AND (rt1.c0 COLLATE NOCASE))))) GROUP BY rt0.c2, rt1.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt1.c1, vt0.c0 FROM rt0, vt0, rt1 WHERE (((((((((((((rt0.c1)AND(rt1.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0)/(rt0.c3))) AND (rt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt1.c1, vt0.c0;
SELECT rt0.c2, rt1.c1, vt0.c0 FROM rt0, vt0, rt1 GROUP BY rt0.c2, rt1.c1, vt0.c0;
SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt1.c1, rt1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt1.c1, rt1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt0.c0 FROM rt1, rt0;
SELECT ALL rt1.c1, rt1.c2, rt0.c0 FROM rt1, rt0 WHERE ((((rt1.c1)+(rt0.c2)) IN (LIKELY('XSBKIj[B'), (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c0 FROM rt1, rt0 WHERE ((NOT ((((rt1.c1)+(rt0.c2)) IN (LIKELY('XSBKIj[B'), (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c0 FROM rt1, rt0 WHERE ((((((rt1.c1)+(rt0.c2)) IN (LIKELY('XSBKIj[B'), (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) ISNULL));
SELECT ALL rt1.c1, rt1.c2, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, rt1;
SELECT DISTINCT vt0.c0, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, rt1 WHERE (json_object(((rt1.c1)<(NULL)), ((x'') IS TRUE), 0Xffffffffa9e1a37a, TYPEOF(rt0.c1))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, rt1 WHERE ((NOT (json_object(((rt1.c1)<(NULL)), ((x'') IS TRUE), 0Xffffffffa9e1a37a, TYPEOF(rt0.c1))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, rt1 WHERE (((json_object(((rt1.c1)<(NULL)), ((x'') IS TRUE), 0Xffffffffa9e1a37a, TYPEOF(rt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, rt1;
SELECT rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2;
SELECT rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((rt0.c0)+(NULL))) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))))) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2 UNION SELECT rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1, vt0 WHERE ((NOT (((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((rt0.c0)+(NULL))) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))))))) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2 UNION SELECT ALL rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1, vt0 WHERE (((((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((rt0.c0)+(NULL))) AND (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2;
SELECT rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1, vt0 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt0.c1, rt1.c1, rt0.c2;
SELECT vt0.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1 HAVING MAX((COUNT(MAX(rt1.c2)) IN (vt0.c0, -2.106177309E9))) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX((COUNT(MAX(rt1.c2)) IN (vt0.c0, -2.106177309E9))))) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, rt1 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX((COUNT(MAX(rt1.c2)) IN (vt0.c0, -2.106177309E9)))) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ('0.41970531882682294') UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ('0.41970531882682294'))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((('0.41970531882682294') ISNULL));
SELECT rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (json_insert(rt1.c2, rt1.c1, rt1.c2) COLLATE BINARY) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (json_insert(rt1.c2, rt1.c1, rt1.c2) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((json_insert(rt1.c2, rt1.c1, rt1.c2) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2 FROM rt1, rt0 WHERE (CAST(rt0.c3 AS REAL)) GROUP BY rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2 FROM rt1, rt0 WHERE ((NOT (CAST(rt0.c3 AS REAL)))) GROUP BY rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2 FROM rt1, rt0 WHERE (((CAST(rt0.c3 AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1, rt0.c3, rt0.c2;
SELECT rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((((rt0.c1)+(rt0.c1)))AND(rt1.c1)))AND(GLOB(rt1.c1, rt1.c2))) INNER JOIN rt0 ON -1649895527 GROUP BY rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((((rt0.c1)+(rt0.c1)))AND(rt1.c1)))AND(GLOB(rt1.c1, rt1.c2))) INNER JOIN rt0 ON -1649895527 GROUP BY rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0 HAVING ((CASE WHEN rt0.c2 THEN TOTAL(GROUP_CONCAT(SUM('0.6363423167967481'))) WHEN MIN(NULL) THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END) NOTNULL) UNION ALL SELECT ALL rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((((rt0.c1)+(rt0.c1)))AND(rt1.c1)))AND(GLOB(rt1.c1, rt1.c2))) INNER JOIN rt0 ON -1649895527 GROUP BY rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0 HAVING (NOT (((CASE WHEN rt0.c2 THEN TOTAL(GROUP_CONCAT(SUM('0.6363423167967481'))) WHEN MIN(NULL) THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END) NOTNULL))) UNION ALL SELECT rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt0 ON ((((((rt0.c1)+(rt0.c1)))AND(rt1.c1)))AND(GLOB(rt1.c1, rt1.c2))) INNER JOIN rt0 ON -1649895527 GROUP BY rt1.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0 HAVING ((((CASE WHEN rt0.c2 THEN TOTAL(GROUP_CONCAT(SUM('0.6363423167967481'))) WHEN MIN(NULL) THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END) NOTNULL)) ISNULL);
SELECT ALL vt0.c0, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt0, rt1;
SELECT ALL vt0.c0, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt0, rt1 WHERE (((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt0, rt1 WHERE ((NOT (((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt0, rt1 WHERE (((((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0, rt0.c3, rt1.c1, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((- (rt0.c1))) NOT NULL);
SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((- (rt0.c1))) NOT NULL) WHERE (LENGTH(CASE rt1.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) UNION SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((- (rt0.c1))) NOT NULL) WHERE ((NOT (LENGTH(CASE rt1.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0, rt1 NOT INDEXED FULL OUTER JOIN vt0 ON (((- (rt0.c1))) NOT NULL) WHERE (((LENGTH(CASE rt1.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((- (rt0.c1))) NOT NULL);
SELECT rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((0.7190831844240214)) BETWEEN ((rt0.c3)) AND ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1;
SELECT rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((0.7190831844240214)) BETWEEN ((rt0.c3)) AND ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) WHERE (((((rt1.c1)*(rt0.c1))) IS TRUE)) GROUP BY rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((0.7190831844240214)) BETWEEN ((rt0.c3)) AND ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) WHERE ((NOT (((((rt1.c1)*(rt0.c1))) IS TRUE)))) GROUP BY rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((0.7190831844240214)) BETWEEN ((rt0.c3)) AND ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) WHERE (((((((rt1.c1)*(rt0.c1))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1;
SELECT rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1 FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((0.7190831844240214)) BETWEEN ((rt0.c3)) AND ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c0, vt0.c0, rt1.c0, rt1.c1, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE (~ (SUM(MAX(rt0.c0))))  WHEN COUNT(rt0.c2) THEN CASE WHEN rt0.c1 THEN AVG(rt0.c1) WHEN NULL THEN TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))) WHEN COUNT(GROUP_CONCAT(MIN(rt0.c1))) THEN rt0.c3 END ELSE AVG(rt0.c0) END UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE (~ (SUM(MAX(rt0.c0))))  WHEN COUNT(rt0.c2) THEN CASE WHEN rt0.c1 THEN AVG(rt0.c1) WHEN NULL THEN TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))) WHEN COUNT(GROUP_CONCAT(MIN(rt0.c1))) THEN rt0.c3 END ELSE AVG(rt0.c0) END)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE (~ (SUM(MAX(rt0.c0))))  WHEN COUNT(rt0.c2) THEN CASE WHEN rt0.c1 THEN AVG(rt0.c1) WHEN NULL THEN TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))) WHEN COUNT(GROUP_CONCAT(MIN(rt0.c1))) THEN rt0.c3 END ELSE AVG(rt0.c0) END) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'm\' END)>(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'm\' END)>(CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'm\' END)>(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (NULL) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1;
SELECT rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((((~ (rt0.c2))) IS FALSE)) GROUP BY rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((NOT ((((~ (rt0.c2))) IS FALSE)))) GROUP BY rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((((((~ (rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1;
SELECT rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(GROUP_CONCAT(vt0.c0))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(GROUP_CONCAT(vt0.c0))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(GROUP_CONCAT(vt0.c0))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0 COLLATE NOCASE))) ISNULL);
SELECT ALL rt1.c1 FROM rt0, rt1;
SELECT rt1.c1 FROM rt0, rt1 WHERE (((rt1.c1)IS(rt0.c3)) COLLATE BINARY) UNION ALL SELECT rt1.c1 FROM rt0, rt1 WHERE ((NOT (((rt1.c1)IS(rt0.c3)) COLLATE BINARY))) UNION ALL SELECT ALL rt1.c1 FROM rt0, rt1 WHERE (((((rt1.c1)IS(rt0.c3)) COLLATE BINARY) ISNULL));
SELECT ALL rt1.c1 FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c1, rt0.c0, vt0.c0, rt1.c0, rt0.c3 FROM rt1, vt0, rt0;
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c1, rt0.c0, vt0.c0, rt1.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE ((((((rt0.c1) BETWEEN (NULL) AND (0.681038278957751)), COALESCE(-1.631183337E9, rt1.c2, rt1.c0, rt1.c0, rt1.c2, rt1.c2), rt0.c2 COLLATE RTRIM))<=((JULIANDAY(rt0.c1, rt1.c1, rt0.c3), ((rt1.c0)>=(rt0.c0)), ((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt0.c1, rt0.c0, vt0.c0, rt1.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE ((NOT ((((((rt0.c1) BETWEEN (NULL) AND (0.681038278957751)), COALESCE(-1.631183337E9, rt1.c2, rt1.c0, rt1.c0, rt1.c2, rt1.c2), rt0.c2 COLLATE RTRIM))<=((JULIANDAY(rt0.c1, rt1.c1, rt0.c3), ((rt1.c0)>=(rt0.c0)), ((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt0.c1, rt0.c0, vt0.c0, rt1.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE ((((((((rt0.c1) BETWEEN (NULL) AND (0.681038278957751)), COALESCE(-1.631183337E9, rt1.c2, rt1.c0, rt1.c0, rt1.c2, rt1.c2), rt0.c2 COLLATE RTRIM))<=((JULIANDAY(rt0.c1, rt1.c1, rt0.c3), ((rt1.c0)>=(rt0.c0)), ((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c1, rt0.c0, vt0.c0, rt1.c0, rt0.c3 FROM rt1, vt0, rt0;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ())) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT ((CAST(rt0.c2 AS INTEGER) IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((((CAST(rt0.c2 AS INTEGER) IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (GROUP_CONCAT(MIN(rt0.c0)) IN ()) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((GROUP_CONCAT(MIN(rt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((GROUP_CONCAT(MIN(rt0.c0)) IN ())) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (GROUP_CONCAT(MIN(rt0.c0)) IN ()) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((GROUP_CONCAT(MIN(rt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((GROUP_CONCAT(MIN(rt0.c0)) IN ())) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c2, rt1.c1, rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0, rt1;
SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0, rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0, rt1 WHERE ((NOT ((rt1.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0, rt1 WHERE ((((rt1.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT rt0.c2, rt1.c1, rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0, rt1 WHERE ((('-445782954') BETWEEN (rt1.c0) AND (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((NOT ((('-445782954') BETWEEN (rt1.c0) AND (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt0, rt1 WHERE ((((('-445782954') BETWEEN (rt1.c0) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, rt1;
SELECT ALL rt0.c3, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt1.c0;
SELECT ALL rt0.c3, rt1.c0 FROM rt1, vt0, rt0 WHERE ((+ ((rt1.c0 IN ())))) GROUP BY rt0.c3, rt1.c0 UNION SELECT rt0.c3, rt1.c0 FROM rt1, vt0, rt0 WHERE ((NOT ((+ ((rt1.c0 IN ())))))) GROUP BY rt0.c3, rt1.c0 UNION SELECT rt0.c3, rt1.c0 FROM rt1, vt0, rt0 WHERE ((((+ ((rt1.c0 IN ())))) ISNULL)) GROUP BY rt0.c3, rt1.c0;
SELECT ALL rt0.c3, rt1.c0 FROM rt1, vt0, rt0 GROUP BY rt0.c3, rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(GROUP_CONCAT(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(GROUP_CONCAT(AVG(vt0.c0)))) ISNULL);
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))==((((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))==((((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))==((((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
