-- Time: 2024/06/09 16:36:26
-- Database: database52
-- Database version: 3.40.0
-- seed value: 1705011052
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 3ms;
ANALYZE; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL (((x'' IN ()))GLOB(((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))) FROM rt0 WHERE (((('5Eb^.25', ('' IN ()), ((NULL) ISNULL)))>((0.6868375973328196 COLLATE NOCASE, ((((0.4577729804659362)OR(x'2e11')))AND(0.4577729804659362)), (+ (x'0cab')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '1936517803 1794467514 sz=-1101294363'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c0) VALUES (0x6af71ff4, 0.49564542630734676); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (x'', -1e500), ('1794580468', x''), (x'de4f', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (0x6af566ba, NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x'b7b6'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c4) VALUES (x'', '5EB^.25', '1819128696'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c4, c0, c3) VALUES (389300442, x'dc89', '', ''), ('QX㈖hUxk', NULL, x'', NULL), (x'', '', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES ('u1T10', '1794467514'); -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
END; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.mmap_size = 5699489339649342523; -- 0ms;
ANALYZE v0; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c4, c1) VALUES (x'c19d', x'', 'm'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (((((0.2715525157344152) IS FALSE)) NOT NULL), x'', '-9223372036854775808', NULL, 0.9404925829020703), (1.819128696E9, 0.454015683125627, 'z\', x'', 'F\nhZ제Q(T'), (0.4577729804659362, '', x'', '1794467514', ((((((((((((0.5717462396634673)OR(NULL)))OR('410478230')))OR(((NULL)LIKE('')))))AND(UNICODE(NULL))))AND((NOT ('-1102883456')))))OR(UPPER('eC')))); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER NOT NULL UNIQUE ); -- 1ms;
INSERT OR FAIL INTO rt0(c2, c4, c1) VALUES (0.6847837975507249, '1e500', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i72 ON t0(x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 8ms;
DROP TABLE t0; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c1, c0, c3) VALUES (0.6687802033923018, 0.454015683125627, 'QX㈖hUxk', ''), (0.7181229492684816, '', x'', 1.794467514E9), ('1987423401', '', '1794467514', '4\n>X'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c1) VALUES (NULL, 0.2882573233418967, x'4c93'), ('1406623648', -6.88207844E8, '407109957'), (0.8517859094246003, NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 2088985847, x'', '', x''), ('-1101294363', x'', NULL, NULL, 0.060835821607508445), (3.89300442E8, NULL, NULL, '0.4577729804659362', 0.48646693905529315); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'2fb3')OR((+ (-480051346)))))OR(CAST(x'' AS TEXT))))AND(x'' COLLATE BINARY)))OR((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c4) VALUES (0X736ceaab, 0x532430e1); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2) VALUES (0.45167140891430146, 'PD?'), (-2083565105, x''), (0.5448232001466512, 1.987423401E9); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('+?', -559689356); -- 0ms;
ANALYZE; -- 1ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c4, c3) VALUES ('0.060835821607508445', 0.21455923882061856, 'uG! ⮖}OB델', ''); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (CAST(rt0.c2 AS TEXT)))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ('') UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN x'' THEN '' WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(CASE 0.44147971942996067  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((CASE WHEN x'' THEN '' WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(CASE 0.44147971942996067  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((CASE WHEN x'' THEN '' WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(CASE 0.44147971942996067  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (((v0.c0)<<(v0.c0))) AND (x'bf6e'))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CAST(x'' AS BLOB)) NOT BETWEEN (((v0.c0)<<(v0.c0))) AND (x'bf6e'))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((CAST(x'' AS BLOB)) NOT BETWEEN (((v0.c0)<<(v0.c0))) AND (x'bf6e'))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0 NOT INDEXED, rt0 WHERE ((((rt0.c0 IN ()))|((- (rt0.c4))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c0 IN ()))|((- (rt0.c4))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((((((rt0.c0 IN ()))|((- (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 NOT INDEXED;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>(((v0.c0)GLOB(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>(((v0.c0)GLOB(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>(((v0.c0)GLOB(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(*))&((x'a228' IN (rt0.c1)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((COUNT(*))&((x'a228' IN (rt0.c1)))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((COUNT(*))&((x'a228' IN (rt0.c1))))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(*))&((x'a228' IN (rt0.c1)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((COUNT(*))&((x'a228' IN (rt0.c1)))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((COUNT(*))&((x'a228' IN (rt0.c1))))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((NULL)<=(rt0.c2))))<=((rt0.c2 COLLATE NOCASE)))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 NOT INDEXED WHERE ((NOT ((((((NULL)<=(rt0.c2))))<=((rt0.c2 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((((NULL)<=(rt0.c2))))<=((rt0.c2 COLLATE NOCASE)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE 0.818176510405467 END)OR(((rt0.c3)>(rt0.c2)))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE 0.818176510405467 END)OR(((rt0.c3)>(rt0.c2)))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)) WHERE (v0.c0) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE 0.818176510405467 END)OR(((rt0.c3)>(rt0.c2)))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE 0.818176510405467 END)OR(((rt0.c3)>(rt0.c2)))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE 0.818176510405467 END)OR(((rt0.c3)>(rt0.c2)))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END));
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0 WHERE ('389300442') GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((NOT ('389300442'))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((('389300442') ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((('Ņ㛋')AND(NULL)))AND(v0.c0 COLLATE NOCASE)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((('Ņ㛋')AND(NULL)))AND(v0.c0 COLLATE NOCASE)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0 HAVING SUM(GROUP_CONCAT(TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((('Ņ㛋')AND(NULL)))AND(v0.c0 COLLATE NOCASE)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((('Ņ㛋')AND(NULL)))AND(v0.c0 COLLATE NOCASE)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0 HAVING ((SUM(GROUP_CONCAT(TOTAL(COUNT(*))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((+ (v0.c0)))<=((((v0.c0)) NOT BETWEEN (('OT,')) AND ((v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((+ (v0.c0)))<=((((v0.c0)) NOT BETWEEN (('OT,')) AND ((v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((((+ (v0.c0)))<=((((v0.c0)) NOT BETWEEN (('OT,')) AND ((v0.c0)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((((v0.c0))<>((rt0.c3))) IN ())) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((v0.c0))<>((rt0.c3))) IN ())))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((((((v0.c0))!=((rt0.c3))) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0)))) AND ((((v0.c0)+('-265591799')))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0)))) AND ((((v0.c0)+('-265591799')))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0)))) AND ((((v0.c0)+('-265591799')))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (GROUP_CONCAT(COUNT(SUM(v0.c0))) IN (SUM(v0.c0), (MAX(COUNT(*)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((GROUP_CONCAT(COUNT(SUM(v0.c0))) IN (SUM(v0.c0), (MAX(COUNT(*)) IN ()))))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (((GROUP_CONCAT(COUNT(SUM(v0.c0))) IN (SUM(v0.c0), (MAX(COUNT(*)) IN ())))) ISNULL);
SELECT ALL MAX((((((v0.c0 IN ()))OR(v0.c0)))OR((v0.c0 IN ())))) FROM v0 ORDER BY CAST(((NULL)LIKE(v0.c0)) AS INTEGER);
SELECT rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c4)))) ISNULL)) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c4)))) ISNULL)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c4)))) ISNULL)) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((rt0.c4 COLLATE NOCASE IN (((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((rt0.c4 COLLATE NOCASE IN (((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((rt0.c4 COLLATE NOCASE IN (((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END IN ())) GROUP BY rt0.c3, v0.c0, rt0.c2 UNION SELECT ALL rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END IN ())))) GROUP BY rt0.c3, v0.c0, rt0.c2 UNION SELECT ALL rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END IN ())) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING GROUP_CONCAT((((TOTAL(TOTAL(rt0.c4)))) BETWEEN ((COUNT(rt0.c4))) AND ((rt0.c1)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (GROUP_CONCAT((((TOTAL(TOTAL(rt0.c4)))) BETWEEN ((COUNT(rt0.c4))) AND ((rt0.c1)))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING ((GROUP_CONCAT((((TOTAL(TOTAL(rt0.c4)))) BETWEEN ((COUNT(rt0.c4))) AND ((rt0.c1))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((rt0.c3) IS FALSE)) BETWEEN ((- (rt0.c0))) AND (((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3) IS FALSE)) BETWEEN ((- (rt0.c0))) AND (((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((((rt0.c3) IS FALSE)) BETWEEN ((- (rt0.c0))) AND (((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c0))OR(NULL)))IS NOT(COUNT(rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((GROUP_CONCAT(rt0.c0))OR(NULL)))IS NOT(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((((((GROUP_CONCAT(rt0.c0))OR(NULL)))IS NOT(COUNT(rt0.c1)))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c0))OR(NULL)))IS NOT(COUNT(rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((GROUP_CONCAT(rt0.c0))OR(NULL)))IS NOT(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((((((GROUP_CONCAT(rt0.c0))OR(NULL)))IS NOT(COUNT(rt0.c1)))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0 NOT INDEXED;
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c4 IN ()))IS((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c4 IN ()))IS((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c4 IN ()))IS((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(AVG(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(AVG(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(AVG(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL MIN(((((rt0.c1) NOT NULL)) NOTNULL)) FROM v0, rt0 ORDER BY ((((rt0.c2)>>(rt0.c2))) BETWEEN (CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN 'u턝t' THEN rt0.c3 ELSE v0.c0 END) AND ((rt0.c4 IN ())))  NULLS LAST;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CHAR((NOT (v0.c0)), (('-858286542') NOT NULL), (v0.c0 IN ()))) UNION ALL SELECT * FROM v0 WHERE ((NOT (CHAR((NOT (v0.c0)), (('-858286542') NOT NULL), (v0.c0 IN ()))))) UNION ALL SELECT * FROM v0 WHERE (((CHAR((NOT (v0.c0)), (('-858286542') NOT NULL), (v0.c0 IN ()))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS REAL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c3 COLLATE BINARY AS REAL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c3 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c3 HAVING AVG(MIN(rt0.c4) COLLATE BINARY) UNION ALL SELECT ALL v0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c3 HAVING (NOT (AVG(MIN(rt0.c4) COLLATE BINARY))) UNION ALL SELECT v0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c3 HAVING ((AVG(MIN(rt0.c4) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN NULL END)||(((rt0.c0) NOTNULL)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN NULL END)||(((rt0.c0) NOTNULL))) WHERE (((((rt0.c3)IS(rt0.c1))) IS TRUE)) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN NULL END)||(((rt0.c0) NOTNULL))) WHERE ((NOT (((((rt0.c3)IS(rt0.c1))) IS TRUE)))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN NULL END)||(((rt0.c0) NOTNULL))) WHERE (((((((rt0.c3)IS(rt0.c1))) IS TRUE)) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN NULL END)||(((rt0.c0) NOTNULL)));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (INSTR(LOWER(v0.c0), NULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (INSTR(LOWER(v0.c0), NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((INSTR(LOWER(v0.c0), NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON (- (TOTAL_CHANGES())) GROUP BY rt0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON (- (TOTAL_CHANGES())) GROUP BY rt0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2 HAVING TOTAL(COUNT(rt0.c4)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON (- (TOTAL_CHANGES())) GROUP BY rt0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2 HAVING (NOT (TOTAL(COUNT(rt0.c4)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON (- (TOTAL_CHANGES())) GROUP BY rt0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2 HAVING ((TOTAL(COUNT(rt0.c4))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((HEX(v0.c0)) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((HEX(v0.c0)) NOTNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((HEX(v0.c0)) NOTNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LIKELIHOOD(((('1780569838', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))), 0.08824833357543016)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LIKELIHOOD(((('1780569838', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))), 0.08824833357543016)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LIKELIHOOD(((('1780569838', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))), 0.08824833357543016)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((rt0.c2) NOT NULL) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((rt0.c2) NOT NULL) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((((rt0.c2) NOT NULL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (v0.c0) AND ((v0.c0 IN ()))) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (v0.c0) AND ((v0.c0 IN ()))) GROUP BY rt0.c0, rt0.c4 HAVING MIN(SUM(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (v0.c0) AND ((v0.c0 IN ()))) GROUP BY rt0.c0, rt0.c4 HAVING (NOT (MIN(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (v0.c0) AND ((v0.c0 IN ()))) GROUP BY rt0.c0, rt0.c4 HAVING ((MIN(SUM(rt0.c2))) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((('' COLLATE BINARY)&(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT ((('' COLLATE BINARY)&(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((((('' COLLATE BINARY)&(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CASE WHEN (- (rt0.c1)) THEN rt0.c2 WHEN (~ (rt0.c1)) THEN ((rt0.c0)==(rt0.c1)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c0 AS BLOB) END) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CASE WHEN (- (rt0.c1)) THEN rt0.c2 WHEN (~ (rt0.c1)) THEN ((rt0.c0)=(rt0.c1)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c0 AS BLOB) END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CASE WHEN (- (rt0.c1)) THEN rt0.c2 WHEN (~ (rt0.c1)) THEN ((rt0.c0)==(rt0.c1)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((rt0.c0 IN ())))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (((((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL TOTAL(((((((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))AND((rt0.c2 IN ()))))OR(rt0.c4 COLLATE BINARY)))OR((rt0.c4 IN ()))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END))) FROM rt0 ORDER BY COALESCE(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c1)<(rt0.c1)));
SELECT rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c4, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c4 IN ()))OR((- (rt0.c3)))))OR((+ (rt0.c1)))))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))AND(rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((((((((((rt0.c4 IN ()))OR((- (rt0.c3)))))OR((+ (rt0.c1)))))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))AND(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 WHERE ((((((((((((rt0.c4 IN ()))OR((- (rt0.c3)))))OR((+ (rt0.c1)))))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))AND(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS REAL))IS NOT(((NULL)GLOB('No1'))));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS REAL))IS NOT(((NULL)GLOB('No1')))) WHERE (rt0.c3) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS REAL))IS NOT(((NULL)GLOB('No1')))) WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS REAL))IS NOT(((NULL)GLOB('No1')))) WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS REAL))IS NOT(((NULL)GLOB('No1'))));
SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE ('0.9404925829020703') GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE ((NOT ('0.9404925829020703'))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE ((('0.9404925829020703') ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING TOTAL(((GROUP_CONCAT('-2083565105')) NOTNULL)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (TOTAL(((GROUP_CONCAT('-2083565105')) NOTNULL)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING ((TOTAL(((GROUP_CONCAT('-2083565105')) NOTNULL))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)<((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)<((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)<((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((v0.c0)/(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((v0.c0)/(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((v0.c0)/(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN ((~ (rt0.c4))) AND (CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) BETWEEN ((~ (rt0.c4))) AND (CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) BETWEEN ((~ (rt0.c4))) AND (CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING AVG(((((((((((((MIN(rt0.c4))AND(GROUP_CONCAT(MAX(TOTAL(AVG(rt0.c0)))))))OR(rt0.c3)))OR(MIN(AVG(GROUP_CONCAT(rt0.c2))))))AND(AVG(rt0.c4))))AND(AVG(rt0.c4))))AND(GROUP_CONCAT(MIN('1996037013'))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (AVG(((((((((((((MIN(rt0.c4))AND(GROUP_CONCAT(MAX(TOTAL(AVG(rt0.c0)))))))OR(rt0.c3)))OR(MIN(AVG(GROUP_CONCAT(rt0.c2))))))AND(AVG(rt0.c4))))AND(AVG(rt0.c4))))AND(GROUP_CONCAT(MIN('1996037013'))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING ((AVG(((((((((((((MIN(rt0.c4))AND(GROUP_CONCAT(MAX(TOTAL(AVG(rt0.c0)))))))OR(rt0.c3)))OR(MIN(AVG(GROUP_CONCAT(rt0.c2))))))AND(AVG(rt0.c4))))AND(AVG(rt0.c4))))AND(GROUP_CONCAT(MIN('1996037013')))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS TEXT) AS INTEGER)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 WHERE (0.7181229492684816) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT (0.7181229492684816))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 WHERE (((0.7181229492684816) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((HEX(rt0.c4)) NOT BETWEEN (TYPEOF(rt0.c4)) AND ((((rt0.c0, rt0.c4, rt0.c1))<((rt0.c1, rt0.c2, rt0.c2)))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((HEX(rt0.c4)) NOT BETWEEN (TYPEOF(rt0.c4)) AND ((((rt0.c0, rt0.c4, rt0.c1))<((rt0.c1, rt0.c2, rt0.c2)))))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((((HEX(rt0.c4)) NOT BETWEEN (TYPEOF(rt0.c4)) AND ((((rt0.c0, rt0.c4, rt0.c1))<((rt0.c1, rt0.c2, rt0.c2)))))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c2, rt0.c1)))<(load_extension(rt0.c4, rt0.c0))) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END  WHEN ((rt0.c4)<(rt0.c2)) THEN CASE WHEN x'' THEN rt0.c3 END END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END  WHEN ((rt0.c4)<(rt0.c2)) THEN CASE WHEN x'' THEN rt0.c3 END END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END  WHEN ((rt0.c4)<(rt0.c2)) THEN CASE WHEN x'' THEN rt0.c3 END END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0)>>(v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)>>(v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)>>(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (rt0.c1) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(COUNT(SUM(SUM(COUNT(COUNT(*))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(COUNT(SUM(SUM(COUNT(COUNT(*))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(COUNT(SUM(SUM(COUNT(COUNT(*)))))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c0) IS TRUE)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c0) IS TRUE)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c0) IS TRUE)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3;
SELECT rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (rt0.c0) GROUP BY rt0.c1, v0.c0, rt0.c3 UNION SELECT rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, v0.c0, rt0.c3 UNION SELECT rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING CAST(SUM(rt0.c1) AS INTEGER) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (CAST(SUM(rt0.c1) AS INTEGER))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((CAST(SUM(rt0.c1) AS INTEGER)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING CAST(SUM(rt0.c1) AS INTEGER) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (CAST(SUM(rt0.c1) AS INTEGER))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((CAST(SUM(rt0.c1) AS INTEGER)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE NOCASE)AND(HEX(0x3987f79e))))OR(v0.c0)))AND(rt0.c3)))AND(0.47428560931093633));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE NOCASE)AND(HEX(0X3987f79e))))OR(v0.c0)))AND(rt0.c3)))AND(0.47428560931093633)) WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) UNION ALL SELECT * FROM v0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE NOCASE)AND(HEX(0x3987f79e))))OR(v0.c0)))AND(rt0.c3)))AND(0.47428560931093633)) WHERE ((NOT (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE NOCASE)AND(HEX(0X3987f79e))))OR(v0.c0)))AND(rt0.c3)))AND(0.47428560931093633)) WHERE (((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((((v0.c0 COLLATE NOCASE)AND(HEX(0x3987f79e))))OR(v0.c0)))AND(rt0.c3)))AND(0.47428560931093633));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((((rt0.c3)<(rt0.c2)))));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((((rt0.c3)<(rt0.c2))))) WHERE (((((rt0.c1)||(rt0.c0)))%(((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((((rt0.c3)<(rt0.c2))))) WHERE ((NOT (((((rt0.c1)||(rt0.c0)))%(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((((rt0.c3)<(rt0.c2))))) WHERE (((((((rt0.c1)||(rt0.c0)))%(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((((rt0.c3)<(rt0.c2)))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING AVG(CAST(AVG(SUM(rt0.c3)) AS INTEGER)) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (AVG(CAST(AVG(SUM(rt0.c3)) AS INTEGER)))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((AVG(CAST(AVG(SUM(rt0.c3)) AS INTEGER))) ISNULL);
SELECT ALL MAX(((((v0.c0)+(v0.c0)))GLOB(((((v0.c0)AND('')))OR(v0.c0))))) FROM v0 ORDER BY '1794467514' DESC, (((v0.c0)IS NOT(v0.c0)) IN ()), CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0)LIKE(v0.c0)) THEN v0.c0 END DESC  NULLS LAST;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (HEX((+ (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (HEX((+ (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((HEX((+ (v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) IS TRUE) END;
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) IS TRUE) END WHERE ((((rt0.c4)) NOT BETWEEN (((+ (rt0.c2)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.7894861539198154))))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) IS TRUE) END WHERE ((NOT ((((rt0.c4)) NOT BETWEEN (((+ (rt0.c2)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.7894861539198154))))))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) IS TRUE) END WHERE ((((((rt0.c4)) NOT BETWEEN (((+ (rt0.c2)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.7894861539198154))))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) IS TRUE) END;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((x'')/(rt0.c0)) COLLATE BINARY COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((x'')/(rt0.c0)) COLLATE BINARY COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((x'')/(rt0.c0)) COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1, rt0.c4 HAVING AVG(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1, rt0.c4 HAVING (NOT (AVG(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, v0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1, rt0.c4 HAVING ((AVG(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((v0.c0)&(0.41401636071696657)) THEN ((rt0.c0)+(rt0.c2)) ELSE rt0.c0 COLLATE BINARY END GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((v0.c0)&(0.41401636071696657)) THEN ((rt0.c0)+(rt0.c2)) ELSE rt0.c0 COLLATE BINARY END WHERE (rt0.c3) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((v0.c0)&(0.41401636071696657)) THEN ((rt0.c0)+(rt0.c2)) ELSE rt0.c0 COLLATE BINARY END WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((v0.c0)&(0.41401636071696657)) THEN ((rt0.c0)+(rt0.c2)) ELSE rt0.c0 COLLATE BINARY END WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((v0.c0)&(0.41401636071696657)) THEN ((rt0.c0)+(rt0.c2)) ELSE rt0.c0 COLLATE BINARY END GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING COUNT(COUNT(AVG(GROUP_CONCAT(SUM(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (COUNT(COUNT(AVG(GROUP_CONCAT(SUM(rt0.c3))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING ((COUNT(COUNT(AVG(GROUP_CONCAT(SUM(rt0.c3)))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c0)AND((rt0.c0 IN ()))))AND(v0.c0)))OR(((rt0.c0) NOT NULL))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((((((rt0.c0)AND((rt0.c0 IN ()))))AND(v0.c0)))OR(((rt0.c0) NOT NULL))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c0)AND((rt0.c0 IN ()))))AND(v0.c0)))OR(((rt0.c0) NOT NULL))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((NULL)<<(((rt0.c3)GLOB(rt0.c0))));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((NULL)<<(((rt0.c3)GLOB(rt0.c0)))) WHERE (((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))OR((((rt0.c3))<=((rt0.c3))))))OR(CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((NULL)<<(((rt0.c3)GLOB(rt0.c0)))) WHERE ((NOT (((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))OR((((rt0.c3))<=((rt0.c3))))))OR(CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((NULL)<<(((rt0.c3)GLOB(rt0.c0)))) WHERE (((((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))OR((((rt0.c3))<=((rt0.c3))))))OR(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((NULL)<<(((rt0.c3)GLOB(rt0.c0))));
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((v0.c0))))) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((v0.c0))))) WHERE (((v0.c0) BETWEEN (v0.c0) AND (rt0.c3)) COLLATE NOCASE) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((v0.c0))))) WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (rt0.c3)) COLLATE NOCASE))) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((v0.c0))))) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c3)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((v0.c0))))) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (('	[K!(' IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (('	[K!(' IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((('	[K!(' IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2)AND(rt0.c3)), (((rt0.c3, NULL, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, 'NO1')) AND ((rt0.c3, rt0.c3, rt0.c1))))) GROUP BY rt0.c4, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c2)AND(rt0.c3)), (((rt0.c3, NULL, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, 'NO1')) AND ((rt0.c3, rt0.c3, rt0.c1))))))) GROUP BY rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c2)AND(rt0.c3)), (((rt0.c3, NULL, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, 'NO1')) AND ((rt0.c3, rt0.c3, rt0.c1))))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING CAST(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)) AS BLOB) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)) AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING ((CAST(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)) AS BLOB)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (0.6808479747232395) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0.6808479747232395))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0.6808479747232395) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (TRIM(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (TRIM(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((TRIM(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c3)>(rt0.c1))))) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c3)>(rt0.c1))))))) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((((rt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c3)>(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(MIN(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MIN(TOTAL(v0.c0)))) ISNULL);
SELECT ALL MAX(CASE ((v0.c0) NOT NULL)  WHEN (- (v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 THEN TRIM(DISTINCT v0.c0) WHEN ((-1102883456) BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0))>=((v0.c0))) ELSE NULL END) FROM v0 ORDER BY x''  NULLS LAST;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c2)) IN ());
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c2)) IN ()) WHERE (1334475412) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c2)) IN ()) WHERE ((NOT (1334475412))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c2)) IN ()) WHERE (((1334475412) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c2)) IN ());
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c4)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 END)) AND ((TOTAL_CHANGES())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 END)) AND ((TOTAL_CHANGES())))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c4)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 END)) AND ((TOTAL_CHANGES())))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c3;
SELECT v0.c0, rt0.c3 FROM v0, rt0 WHERE (CAST(((rt0.c4) IS FALSE) AS REAL)) GROUP BY v0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c4) IS FALSE) AS REAL)))) GROUP BY v0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c3 FROM v0, rt0 WHERE (((CAST(((rt0.c4) IS FALSE) AS REAL)) ISNULL)) GROUP BY v0.c0, rt0.c3;
SELECT v0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(SUM(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(SUM(v0.c0)))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(rt0.c0 AS REAL)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND (((- (1.67917455E9)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND (((- (1.67917455E9)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND (((- (1.67917455E9)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))!=(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER))<>(((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))<>(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (((MAX(rt0.c3)))>=((COUNT(*)))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT ((((MAX(rt0.c3)))>=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (((((MAX(rt0.c3)))>=((COUNT(*))))) ISNULL);
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (((MAX(rt0.c3)))>=((COUNT(*)))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT ((((MAX(rt0.c3)))>=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (((((MAX(rt0.c3)))>=((COUNT(*))))) ISNULL);
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (TYPEOF(((rt0.c4)!=(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (TYPEOF(((rt0.c4)!=(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((TYPEOF(((rt0.c4)<>(rt0.c0)))) ISNULL));
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (UNICODE(load_extension(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (UNICODE(load_extension(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((UNICODE(load_extension(v0.c0))) ISNULL));
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(((rt0.c3) ISNULL) AS NUMERIC)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c3) ISNULL) AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c3) ISNULL) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c0)OR(0.5172079396391139)))AND(v0.c0)))OR(x'')))AND(v0.c0))) BETWEEN ((rt0.c1 IN ())) AND (CAST('-903623109' AS TEXT)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((((((((rt0.c0)OR(0.5172079396391139)))AND(v0.c0)))OR(x'')))AND(v0.c0))) BETWEEN ((rt0.c1 IN ())) AND (CAST('-903623109' AS TEXT)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((((((((rt0.c0)OR(0.5172079396391139)))AND(v0.c0)))OR(x'')))AND(v0.c0))) BETWEEN ((rt0.c1 IN ())) AND (CAST('-903623109' AS TEXT)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c4)))-(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c4 IN (rt0.c4)))-(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c4)))-(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (LOWER(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (LOWER(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)))))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((LOWER(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING GROUP_CONCAT(CAST(rt0.c2 AS REAL)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT(CAST(rt0.c2 AS REAL))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING GROUP_CONCAT(CAST(rt0.c2 AS REAL)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT(CAST(rt0.c2 AS REAL))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c4 FROM rt0;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END) NOT BETWEEN ((NOT (rt0.c2))) AND (CAST(rt0.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END) NOT BETWEEN ((NOT (rt0.c2))) AND (CAST(rt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END) NOT BETWEEN ((NOT (rt0.c2))) AND (CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((- (((((rt0.c2)OR(rt0.c3)))OR(NULL))))) GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((NOT ((- (((((rt0.c2)OR(rt0.c3)))OR(NULL))))))) GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((((- (((((rt0.c2)OR(rt0.c3)))OR(NULL))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((NULL IN ())) NOT NULL)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((NULL IN ())) NOT NULL)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((((NULL IN ())) NOT NULL)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0 NOT INDEXED, rt0 WHERE (((v0.c0)-(((((rt0.c2)OR(rt0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((v0.c0)-(((((rt0.c2)OR(rt0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((v0.c0)-(((((rt0.c2)OR(rt0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0)=(-1.101294363E9)))AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)=(-1.101294363E9)))AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0)=(-1.101294363E9)))AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING MIN(MAX(rt0.c3, v0.c0)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (MIN(MAX(rt0.c3, v0.c0)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING ((MIN(MAX(rt0.c3, v0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING MIN(MAX(rt0.c3, v0.c0)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (MIN(MAX(rt0.c3, v0.c0)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING ((MIN(MAX(rt0.c3, v0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT SUM(v0.c0) FROM v0;
SELECT rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c1 FROM rt0, v0 WHERE (json_array(rt0.c4 COLLATE BINARY, TRIM(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((NOT (json_array(rt0.c4 COLLATE BINARY, TRIM(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0, v0 WHERE (((json_array(rt0.c4 COLLATE BINARY, TRIM(rt0.c1))) ISNULL));
SELECT rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM v0, rt0 WHERE (0Xffffffffe1515169) GROUP BY rt0.c4, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (0xffffffffe1515169))) GROUP BY rt0.c4, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((0Xffffffffe1515169) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING MIN(SUM(NULL)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (MIN(SUM(NULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING ((MIN(SUM(NULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c4, rt0.c1, rt0.c4))!=((rt0.c1, rt0.c3, rt0.c0))))<=(CAST(rt0.c3 AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((rt0.c4, rt0.c1, rt0.c4))!=((rt0.c1, rt0.c3, rt0.c0))))<=(CAST(rt0.c3 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((((((((rt0.c4, rt0.c1, rt0.c4))<>((rt0.c1, rt0.c3, rt0.c0))))<=(CAST(rt0.c3 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (UNLIKELY(DISTINCT UNLIKELY(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (UNLIKELY(DISTINCT UNLIKELY(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((UNLIKELY(DISTINCT UNLIKELY(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((rt0.c4) BETWEEN (rt0.c2) AND (((rt0.c2)LIKE(0.29712339053945147))))) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c4) BETWEEN (rt0.c2) AND (((rt0.c2)LIKE(0.29712339053945147))))))) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c2) AND (((rt0.c2)LIKE(0.29712339053945147))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c4) IS FALSE) THEN (NOT (rt0.c2)) END GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((- (((rt0.c3)/(v0.c0))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((- (((rt0.c3)/(v0.c0))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((- (((rt0.c3)/(v0.c0))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (HEX(LIKELY(rt0.c4))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (HEX(LIKELY(rt0.c4))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (((HEX(LIKELY(rt0.c4))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 WHERE (IFNULL(DISTINCT rt0.c0 COLLATE RTRIM, ((rt0.c4) NOT BETWEEN (rt0.c0) AND (0.3578995154622523)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((NOT (IFNULL(DISTINCT rt0.c0 COLLATE RTRIM, ((rt0.c4) NOT BETWEEN (rt0.c0) AND (0.3578995154622523)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, rt0 WHERE (((IFNULL(DISTINCT rt0.c0 COLLATE RTRIM, ((rt0.c4) NOT BETWEEN (rt0.c0) AND (0.3578995154622523)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4;
SELECT rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4 HAVING AVG(rt0.c1) COLLATE BINARY UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4 HAVING (NOT (AVG(rt0.c1) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c3, v0.c0, rt0.c4 HAVING ((AVG(rt0.c1) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4;
SELECT rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4 HAVING AVG(rt0.c1) COLLATE BINARY UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4 HAVING (NOT (AVG(rt0.c1) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c3, v0.c0, rt0.c4 HAVING ((AVG(rt0.c1) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4;
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (json_insert(((((rt0.c0)AND(rt0.c0)))AND(x'')), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c0 COLLATE RTRIM)) UNION ALL SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (json_insert(((((rt0.c0)AND(rt0.c0)))AND(x'')), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((json_insert(((((rt0.c0)AND(rt0.c0)))AND(x'')), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((x'edeb0e03') NOT BETWEEN (rt0.c2) AND (v0.c0)))<(rt0.c2))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((x'edeb0e03') NOT BETWEEN (rt0.c2) AND (v0.c0)))<(rt0.c2))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((x'edeb0e03') NOT BETWEEN (rt0.c2) AND (v0.c0)))<(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(NULL)))AND(CAST(v0.c0 AS BLOB))))OR(CAST(v0.c0 AS TEXT))))AND(CAST(v0.c0 AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(NULL)))AND(CAST(v0.c0 AS BLOB))))OR(CAST(v0.c0 AS TEXT))))AND(CAST(v0.c0 AS BLOB)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(NULL)))AND(CAST(v0.c0 AS BLOB))))OR(CAST(v0.c0 AS TEXT))))AND(CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING (((((rt0.c3)GLOB(rt0.c0))))==((AVG(SUM(MIN(rt0.c0)))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT ((((((rt0.c3)GLOB(rt0.c0))))==((AVG(SUM(MIN(rt0.c0)))))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING (((((((rt0.c3)GLOB(rt0.c0))))=((AVG(SUM(MIN(rt0.c0))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)LIKE(((rt0.c4)/(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c3 COLLATE BINARY)LIKE(((rt0.c4)/(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c3 COLLATE BINARY)LIKE(((rt0.c4)/(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0))>((v0.c0))) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0))>((v0.c0))) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0))>((v0.c0))) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((((rt0.c4)*(rt0.c3)))AND(((((rt0.c1)OR(rt0.c4)))OR(v0.c0)))))OR(rt0.c1))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((((rt0.c4)*(rt0.c3)))AND(((((rt0.c1)OR(rt0.c4)))OR(v0.c0)))))OR(rt0.c1))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((((((rt0.c4)*(rt0.c3)))AND(((((rt0.c1)OR(rt0.c4)))OR(v0.c0)))))OR(rt0.c1))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(COUNT(rt0.c3))))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(COUNT(rt0.c3))))))) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(COUNT(rt0.c3)))))) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (((((rt0.c1)|(v0.c0))) BETWEEN (CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c3 END) AND (1542000151))) UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((rt0.c1)|(v0.c0))) BETWEEN (CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c3 END) AND (1542000151))))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (((((((rt0.c1)|(v0.c0))) BETWEEN (CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c3 END) AND (1542000151))) ISNULL));
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (((rt0.c4)&(rt0.c1))) AND ((('K')GLOB(v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (((rt0.c4)&(rt0.c1))) AND ((('K')GLOB(v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c4 COLLATE NOCASE) NOT BETWEEN (((rt0.c4)&(rt0.c1))) AND ((('K')GLOB(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, (((0.2882573233418967)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) IS FALSE))) AND (((~ (v0.c0)), ((v0.c0) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, (((0.2882573233418967)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) IS FALSE))) AND (((~ (v0.c0)), ((v0.c0) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, (((0.2882573233418967)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) IS FALSE))) AND (((~ (v0.c0)), ((v0.c0) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0 HAVING MIN(SUM(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0 HAVING (NOT (MIN(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0 HAVING ((MIN(SUM(rt0.c2))) ISNULL);
SELECT MIN((((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) FROM rt0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE QUOTE(rt0.c2)  WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) END) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE QUOTE(rt0.c2)  WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) END))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE QUOTE(rt0.c2)  WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) END) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)), ((rt0.c2)*(rt0.c4)), (('586323000')AND(rt0.c1))))<=(((((rt0.c0))>((rt0.c0))), 0.7147006752184532, ((rt0.c2)/(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)), ((rt0.c2)*(rt0.c4)), (('586323000')AND(rt0.c1))))<=(((((rt0.c0))>((rt0.c0))), 0.7147006752184532, ((rt0.c2)/(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)), ((rt0.c2)*(rt0.c4)), (('586323000')AND(rt0.c1))))<=(((((rt0.c0))>((rt0.c0))), 0.7147006752184532, ((rt0.c2)/(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (0.6203552277147972))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT (0.6203552277147972))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (0.6203552277147972))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING MAX(SUM(rt0.c4)) COLLATE BINARY UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (MAX(SUM(rt0.c4)) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING ((MAX(SUM(rt0.c4)) COLLATE BINARY) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)|(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)|(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)|(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE (INSTR(((rt0.c0)/(x'')), -2.65591799E8)) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (INSTR(((rt0.c0)/(x'')), -2.65591799E8)))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((INSTR(((rt0.c0)/(x'')), -2.65591799E8)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c3)))AND(rt0.c4))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (((((rt0.c1)AND(rt0.c3)))AND(rt0.c4))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (((((rt0.c1)AND(rt0.c3)))AND(rt0.c4))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS REAL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS BLOB) AS REAL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(CAST(v0.c0 AS BLOB) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c0)>(rt0.c4)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c0)>(rt0.c4)))))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c0)>(rt0.c4)))))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE COUNT(AVG(x''))  WHEN ((((COUNT(COUNT(AVG(MAX(SUM(v0.c0))))))OR(v0.c0)))OR(MAX(v0.c0))) THEN NULL WHEN ((GROUP_CONCAT(COUNT(*))) NOT NULL) THEN TOTAL(v0.c0) WHEN SUM(MAX(TOTAL(v0.c0))) THEN COUNT(*) ELSE MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(TOTAL(TOTAL(SUM(v0.c0))))))) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE COUNT(AVG(x''))  WHEN ((((COUNT(COUNT(AVG(MAX(SUM(v0.c0))))))OR(v0.c0)))OR(MAX(v0.c0))) THEN NULL WHEN ((GROUP_CONCAT(COUNT(*))) NOT NULL) THEN TOTAL(v0.c0) WHEN SUM(MAX(TOTAL(v0.c0))) THEN COUNT(*) ELSE MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(TOTAL(TOTAL(SUM(v0.c0))))))) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE COUNT(AVG(x''))  WHEN ((((COUNT(COUNT(AVG(MAX(SUM(v0.c0))))))OR(v0.c0)))OR(MAX(v0.c0))) THEN NULL WHEN ((GROUP_CONCAT(COUNT(*))) NOT NULL) THEN TOTAL(v0.c0) WHEN SUM(MAX(TOTAL(v0.c0))) THEN COUNT(*) ELSE MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(TOTAL(TOTAL(SUM(v0.c0))))))) END) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE NOCASE) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE NOCASE) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((- (((rt0.c3) IS FALSE)))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT ((- (((rt0.c3) IS FALSE)))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((((- (((rt0.c3) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((v0.c0 IN (rt0.c2, rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT ((v0.c0 IN (rt0.c2, rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 UNION SELECT rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((((v0.c0 IN (rt0.c2, rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((- (v0.c0)) COLLATE NOCASE) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((NOT ((- (v0.c0)) COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((- (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((LOWER(x'2635'))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, -2.083565105E9, NULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((LOWER(x'2635'))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, -2.083565105E9, NULL)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((LOWER(x'2635'))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, -2.083565105E9, NULL)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING MIN(COUNT(rt0.c4)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (NOT (MIN(COUNT(rt0.c4)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING ((MIN(COUNT(rt0.c4))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)AND(((rt0.c1)-(rt0.c4)))))OR(((rt0.c2) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)AND(((rt0.c1)-(rt0.c4)))))OR(((rt0.c2) NOTNULL)))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)AND(((rt0.c1)-(rt0.c4)))))OR(((rt0.c2) NOTNULL)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE (((NULL)+(CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT (((NULL)+(CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE (((((NULL)+(CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(GROUP_CONCAT(TOTAL(NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(GROUP_CONCAT(TOTAL(NULL))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(GROUP_CONCAT(TOTAL(NULL)))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CAST(ABS(DISTINCT rt0.c1) AS REAL)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CAST(ABS(DISTINCT rt0.c1) AS REAL)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CAST(ABS(DISTINCT rt0.c1) AS REAL)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOTNULL))>=((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL))>=((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOTNULL))>=((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<(0.29712339053945147 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<(0.29712339053945147 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<(0.29712339053945147 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING COUNT(IFNULL(COUNT(*), rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (COUNT(IFNULL(COUNT(*), rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING ((COUNT(IFNULL(COUNT(*), rt0.c2))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((- ((~ (rt0.c3))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((- ((~ (rt0.c3))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((- ((~ (rt0.c3))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (COALESCE(DISTINCT v0.c0, rt0.c0)) AND (json_array_length(rt0.c2)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (COALESCE(DISTINCT v0.c0, rt0.c0)) AND (json_array_length(rt0.c2))) WHERE (((((rt0.c2)IS(rt0.c2))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (COALESCE(DISTINCT v0.c0, rt0.c0)) AND (json_array_length(rt0.c2))) WHERE ((NOT (((((rt0.c2)IS(rt0.c2))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (COALESCE(DISTINCT v0.c0, rt0.c0)) AND (json_array_length(rt0.c2))) WHERE (((((((rt0.c2)IS(rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (COALESCE(DISTINCT v0.c0, rt0.c0)) AND (json_array_length(rt0.c2)));
SELECT v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c1;
SELECT ALL v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((rt0.c4)) BETWEEN (((rt0.c3 IN ()))) AND ((((v0.c0) IS FALSE))))) GROUP BY v0.c0, rt0.c4, rt0.c1 UNION SELECT v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((rt0.c4)) BETWEEN (((rt0.c3 IN ()))) AND ((((v0.c0) IS FALSE))))))) GROUP BY v0.c0, rt0.c4, rt0.c1 UNION SELECT ALL v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((((rt0.c4)) BETWEEN (((rt0.c3 IN ()))) AND ((((v0.c0) IS FALSE))))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c1;
SELECT v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c3 HAVING (((SUM(COUNT(TOTAL(rt0.c3))))) BETWEEN ((MAX(rt0.c2))) AND ((GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT ((((SUM(COUNT(TOTAL(rt0.c3))))) BETWEEN ((MAX(rt0.c2))) AND ((GROUP_CONCAT(rt0.c3)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c3 HAVING (((((SUM(COUNT(TOTAL(rt0.c3))))) BETWEEN ((MAX(rt0.c2))) AND ((GROUP_CONCAT(rt0.c3))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST((((0.795052390246013)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((((0.795052390246013)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST((((0.795052390246013)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((LIKELY(DISTINCT v0.c0))IS((v0.c0 IN (v0.c0, v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((LIKELY(DISTINCT v0.c0))IS((v0.c0 IN (v0.c0, v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((LIKELY(DISTINCT v0.c0))IS((v0.c0 IN (v0.c0, v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ()))&(rt0.c4 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))&(rt0.c4 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN ()))&(rt0.c4 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((2077650286)GLOB((((rt0.c0))<=((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (LOWER((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (LOWER((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((LOWER((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 WHERE ((- (rt0.c2))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((NOT ((- (rt0.c2))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((((- (rt0.c2))) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING x'' COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING (NOT (x'' COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING ((x'' COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING x'' COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING (NOT (x'' COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING ((x'' COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c3, rt0.c4 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c4 FROM v0, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))IS(((((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt0.c0))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))IS(((((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt0.c0))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM v0, rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))IS(((((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt0.c0))))) ISNULL));
SELECT ALL rt0.c3, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((x''))<((rt0.c4))))AND(((rt0.c4) ISNULL))))AND(('1394880737' IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((((((x''))<((rt0.c4))))AND(((rt0.c4) ISNULL))))AND(('1394880737' IN ())))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((((x''))<((rt0.c4))))AND(((rt0.c4) ISNULL))))AND(('1394880737' IN ())))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (rt0.c4))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c4))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING (((AVG(MIN(rt0.c1)), COUNT(rt0.c4), MAX(COUNT(*)))) NOT BETWEEN ((TOTAL(MAX('-858286542')), (~ (rt0.c1)), ((((MIN(rt0.c3))AND(MAX(rt0.c2))))AND(SUM(rt0.c0))))) AND ((CAST(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c3))) AS NUMERIC), MAX(TOTAL(rt0.c3)), SUM(MIN(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT ((((AVG(MIN(rt0.c1)), COUNT(rt0.c4), MAX(COUNT(*)))) NOT BETWEEN ((TOTAL(MAX('-858286542')), (~ (rt0.c1)), ((((MIN(rt0.c3))AND(MAX(rt0.c2))))AND(SUM(rt0.c0))))) AND ((CAST(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c3))) AS NUMERIC), MAX(TOTAL(rt0.c3)), SUM(MIN(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING (((((AVG(MIN(rt0.c1)), COUNT(rt0.c4), MAX(COUNT(*)))) NOT BETWEEN ((TOTAL(MAX('-858286542')), (~ (rt0.c1)), ((((MIN(rt0.c3))AND(MAX(rt0.c2))))AND(SUM(rt0.c0))))) AND ((CAST(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c3))) AS NUMERIC), MAX(TOTAL(rt0.c3)), SUM(MIN(rt0.c1)))))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((0.33086943050907913)OR((((rt0.c4, rt0.c4, rt0.c3))=(('ls4z', rt0.c1, rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((0.33086943050907913)OR((((rt0.c4, rt0.c4, rt0.c3))==(('ls4z', rt0.c1, rt0.c2)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((0.33086943050907913)OR((((rt0.c4, rt0.c4, rt0.c3))=(('ls4z', rt0.c1, rt0.c2)))))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((((('No1') BETWEEN (rt0.c4) AND (rt0.c0))) NOT BETWEEN (MAX(rt0.c1, rt0.c2)) AND (((3.88904624E8)+(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT ((((('No1') BETWEEN (rt0.c4) AND (rt0.c0))) NOT BETWEEN (MAX(rt0.c1, rt0.c2)) AND (((3.88904624E8)+(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((((((('No1') BETWEEN (rt0.c4) AND (rt0.c0))) NOT BETWEEN (MAX(rt0.c1, rt0.c2)) AND (((3.88904624E8)+(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))OR((((rt0.c4))<>((rt0.c4)))))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))OR((((rt0.c4))<>((rt0.c4)))))))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))OR((((rt0.c4))!=((rt0.c4)))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((SUM(v0.c0)) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((SUM(v0.c0)) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((SUM(v0.c0)) NOT NULL))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON CASE rt0.c0  WHEN (rt0.c4 IN ()) THEN CAST(rt0.c1 AS BLOB) END;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON CASE rt0.c0  WHEN (rt0.c4 IN ()) THEN CAST(rt0.c1 AS BLOB) END WHERE (CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))  WHEN ((rt0.c3)>('783674517')) THEN ((rt0.c0) NOTNULL) END) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON CASE rt0.c0  WHEN (rt0.c4 IN ()) THEN CAST(rt0.c1 AS BLOB) END WHERE ((NOT (CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))  WHEN ((rt0.c3)>('783674517')) THEN ((rt0.c0) NOTNULL) END))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON CASE rt0.c0  WHEN (rt0.c4 IN ()) THEN CAST(rt0.c1 AS BLOB) END WHERE (((CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))  WHEN ((rt0.c3)>('783674517')) THEN ((rt0.c0) NOTNULL) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON CASE rt0.c0  WHEN (rt0.c4 IN ()) THEN CAST(rt0.c1 AS BLOB) END;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((NOT (NULL))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ())) NOT BETWEEN ((NOT (NULL))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ())) NOT BETWEEN ((NOT (NULL))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING MAX((~ (rt0.c3))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (MAX((~ (rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING ((MAX((~ (rt0.c3)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING MAX((~ (rt0.c3))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (MAX((~ (rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING ((MAX((~ (rt0.c3)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CAST((- (v0.c0)) AS INTEGER)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CAST((- (v0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CAST((- (v0.c0)) AS INTEGER)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 END))==((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((CASE WHEN v0.c0 THEN v0.c0 END))=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((CASE WHEN v0.c0 THEN v0.c0 END))=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING TOTAL(((rt0.c3)*(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (TOTAL(((rt0.c3)*(MAX(rt0.c0)))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING ((TOTAL(((rt0.c3)*(MAX(rt0.c0))))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((+ (rt0.c3)) IN (((rt0.c2)>=(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((+ (rt0.c3)) IN (((rt0.c2)>=(rt0.c1))))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((+ (rt0.c3)) IN (((rt0.c2)>=(rt0.c1))))) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0;
SELECT rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((rt0.c2 COLLATE BINARY)<=((NOT (rt0.c4))))) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)<=((NOT (rt0.c4))))))) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c2 COLLATE BINARY)<=((NOT (rt0.c4))))) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0 HAVING (((AVG(0.55959189166322))) NOT BETWEEN ((MIN(rt0.c4))) AND ((TOTAL(COUNT(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0 HAVING (NOT ((((AVG(0.55959189166322))) NOT BETWEEN ((MIN(rt0.c4))) AND ((TOTAL(COUNT(rt0.c3))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0 HAVING (((((AVG(0.55959189166322))) NOT BETWEEN ((MIN(rt0.c4))) AND ((TOTAL(COUNT(rt0.c3)))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT (NULL))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (NULL))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c0, rt0.c2, rt0.c3))<((v0.c0, rt0.c0, rt0.c1)))) NOT BETWEEN ((rt0.c4 IN (rt0.c2))) AND ((rt0.c3 IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c0, rt0.c2, rt0.c3))<((v0.c0, rt0.c0, rt0.c1)))) NOT BETWEEN ((rt0.c4 IN (rt0.c2))) AND ((rt0.c3 IN ())))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((rt0.c0, rt0.c2, rt0.c3))<((v0.c0, rt0.c0, rt0.c1)))) NOT BETWEEN ((rt0.c4 IN (rt0.c2))) AND ((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, v0 WHERE (CAST(((((((((rt0.c3)AND(1.780569838E9)))AND('-1243443937')))OR('S')))OR(rt0.c2)) AS BLOB)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(((((((((rt0.c3)AND(1.780569838E9)))AND('-1243443937')))OR('S')))OR(rt0.c2)) AS BLOB)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((CAST(((((((((rt0.c3)AND(1.780569838E9)))AND('-1243443937')))OR('S')))OR(rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG((((rt0.c3))>((rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG((((rt0.c3))>((rt0.c3)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG((((rt0.c3))>((rt0.c3))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG((((rt0.c3))>((rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG((((rt0.c3))>((rt0.c3)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG((((rt0.c3))>((rt0.c3))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((NULLIF(v0.c0, v0.c0) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NULLIF(v0.c0, v0.c0) IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((NULLIF(v0.c0, v0.c0) IN ())) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 NOT INDEXED WHERE (((((rt0.c1)>>(rt0.c2)))>>(((rt0.c4) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c1)>>(rt0.c2)))>>(((rt0.c4) IS FALSE)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c1)>>(rt0.c2)))>>(((rt0.c4) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0)-(0x478a397e)))) AND ((((v0.c0)AND(rt0.c3)))))) GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt0.c0)-(0X478a397e)))) AND ((((v0.c0)AND(rt0.c3)))))))) GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt0.c0)-(0X478a397e)))) AND ((((v0.c0)AND(rt0.c3)))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (LOWER(DISTINCT ((v0.c0)!=(rt0.c3)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (LOWER(DISTINCT ((v0.c0)<>(rt0.c3)))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((LOWER(DISTINCT ((v0.c0)<>(rt0.c3)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 NOT INDEXED WHERE (((((((('335025717', rt0.c4, rt0.c3))>((NULL, x'', rt0.c2))))AND((((x'8d26'))!=((rt0.c4))))))AND(HEX(rt0.c4)))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((((('335025717', rt0.c4, rt0.c3))>((NULL, x'', rt0.c2))))AND((((x'8d26'))<>((rt0.c4))))))AND(HEX(rt0.c4)))))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((((((((('335025717', rt0.c4, rt0.c3))>((NULL, x'', rt0.c2))))AND((((x'8d26'))<>((rt0.c4))))))AND(HEX(rt0.c4)))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE (ABS(rt0.c0)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT (ABS(rt0.c0)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE (((ABS(rt0.c0)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX((+ (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX((+ (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX((+ (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX((+ (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX((+ (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX((+ (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (ABS(DISTINCT v0.c0) COLLATE BINARY) UNION ALL SELECT * FROM v0 WHERE ((NOT (ABS(DISTINCT v0.c0) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((ABS(DISTINCT v0.c0) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0)<=(NULL))) AND (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (((v0.c0)<=(NULL))) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (((v0.c0)<=(NULL))) AND (v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (((MIN(rt0.c3, rt0.c1)))>=(((rt0.c4 IN (rt0.c2))))) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED LEFT OUTER JOIN v0 ON (((MIN(rt0.c3, rt0.c1)))>=(((rt0.c4 IN (rt0.c2))))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((SUM(rt0.c1))>=(MAX(SUM(rt0.c2)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (((MIN(rt0.c3, rt0.c1)))>=(((rt0.c4 IN (rt0.c2))))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (((SUM(rt0.c1))>=(MAX(SUM(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (((MIN(rt0.c3, rt0.c1)))>=(((rt0.c4 IN (rt0.c2))))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((((SUM(rt0.c1))>=(MAX(SUM(rt0.c2))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((v0.c0)>=(v0.c0)))AND((- (v0.c0)))))AND(')uCy,rn'))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c0)>=(v0.c0)))AND((- (v0.c0)))))AND(')uCy,rn'))))) UNION ALL SELECT * FROM v0 WHERE (((((((((v0.c0)>=(v0.c0)))AND((- (v0.c0)))))AND(')uCy,rn'))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (NULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING CASE CAST(rt0.c1 AS TEXT)  WHEN ((rt0.c4) NOT BETWEEN (TOTAL(rt0.c4)) AND (rt0.c0)) THEN CAST(MIN(MAX(rt0.c2)) AS TEXT) WHEN CASE WHEN MIN(rt0.c4) THEN -1.101294363E9 WHEN COUNT(GROUP_CONCAT(GROUP_CONCAT(v0.c0))) THEN rt0.c1 WHEN TOTAL(rt0.c2) THEN v0.c0 WHEN rt0.c4 THEN v0.c0 WHEN COUNT(*) THEN v0.c0 ELSE COUNT(*) END THEN ((MAX(MAX(v0.c0))) BETWEEN (rt0.c3) AND (MAX(GROUP_CONCAT(SUM(TOTAL(rt0.c0)))))) WHEN CASE COUNT(COUNT(v0.c0))  WHEN SUM(rt0.c3) THEN GROUP_CONCAT(rt0.c0) WHEN MAX(SUM(COUNT(*))) THEN MIN(AVG(AVG(TOTAL(COUNT(*))))) WHEN TOTAL(rt0.c3) THEN rt0.c1 WHEN TOTAL(v0.c0) THEN COUNT(*) WHEN MAX(COUNT(v0.c0)) THEN MAX(MIN(COUNT(rt0.c3))) ELSE COUNT(*) END THEN (+ (COUNT(COUNT(MAX(rt0.c0))))) ELSE (- (AVG(GROUP_CONCAT(TOTAL(TOTAL(rt0.c2)))))) END UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (CASE CAST(rt0.c1 AS TEXT)  WHEN ((rt0.c4) NOT BETWEEN (TOTAL(rt0.c4)) AND (rt0.c0)) THEN CAST(MIN(MAX(rt0.c2)) AS TEXT) WHEN CASE WHEN MIN(rt0.c4) THEN -1.101294363E9 WHEN COUNT(GROUP_CONCAT(GROUP_CONCAT(v0.c0))) THEN rt0.c1 WHEN TOTAL(rt0.c2) THEN v0.c0 WHEN rt0.c4 THEN v0.c0 WHEN COUNT(*) THEN v0.c0 ELSE COUNT(*) END THEN ((MAX(MAX(v0.c0))) BETWEEN (rt0.c3) AND (MAX(GROUP_CONCAT(SUM(TOTAL(rt0.c0)))))) WHEN CASE COUNT(COUNT(v0.c0))  WHEN SUM(rt0.c3) THEN GROUP_CONCAT(rt0.c0) WHEN MAX(SUM(COUNT(*))) THEN MIN(AVG(AVG(TOTAL(COUNT(*))))) WHEN TOTAL(rt0.c3) THEN rt0.c1 WHEN TOTAL(v0.c0) THEN COUNT(*) WHEN MAX(COUNT(v0.c0)) THEN MAX(MIN(COUNT(rt0.c3))) ELSE COUNT(*) END THEN (+ (COUNT(COUNT(MAX(rt0.c0))))) ELSE (- (AVG(GROUP_CONCAT(TOTAL(TOTAL(rt0.c2)))))) END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING ((CASE CAST(rt0.c1 AS TEXT)  WHEN ((rt0.c4) NOT BETWEEN (TOTAL(rt0.c4)) AND (rt0.c0)) THEN CAST(MIN(MAX(rt0.c2)) AS TEXT) WHEN CASE WHEN MIN(rt0.c4) THEN -1.101294363E9 WHEN COUNT(GROUP_CONCAT(GROUP_CONCAT(v0.c0))) THEN rt0.c1 WHEN TOTAL(rt0.c2) THEN v0.c0 WHEN rt0.c4 THEN v0.c0 WHEN COUNT(*) THEN v0.c0 ELSE COUNT(*) END THEN ((MAX(MAX(v0.c0))) BETWEEN (rt0.c3) AND (MAX(GROUP_CONCAT(SUM(TOTAL(rt0.c0)))))) WHEN CASE COUNT(COUNT(v0.c0))  WHEN SUM(rt0.c3) THEN GROUP_CONCAT(rt0.c0) WHEN MAX(SUM(COUNT(*))) THEN MIN(AVG(AVG(TOTAL(COUNT(*))))) WHEN TOTAL(rt0.c3) THEN rt0.c1 WHEN TOTAL(v0.c0) THEN COUNT(*) WHEN MAX(COUNT(v0.c0)) THEN MAX(MIN(COUNT(rt0.c3))) ELSE COUNT(*) END THEN (+ (COUNT(COUNT(MAX(rt0.c0))))) ELSE (- (AVG(GROUP_CONCAT(TOTAL(TOTAL(rt0.c2)))))) END) ISNULL);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON rt0.c1;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((v0.c0) NOT NULL))OR(((x'')<<(rt0.c3))))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((NOT (((((v0.c0) NOT NULL))OR(((x'')<<(rt0.c3))))))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((((v0.c0) NOT NULL))OR(((x'')<<(rt0.c3))))) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON rt0.c1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c3 COLLATE RTRIM IN (x'0a50ac87c8e4'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c3 COLLATE RTRIM IN (x'0a50ac87c8e4'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3 COLLATE RTRIM IN (x'0a50ac87c8e4'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((NOT ((rt0.c0 IN ())))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((((NOT ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((GROUP_CONCAT(MIN(rt0.c2))) IS TRUE) UNION ALL SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (NOT (((GROUP_CONCAT(MIN(rt0.c2))) IS TRUE))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((((GROUP_CONCAT(MIN(rt0.c2))) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (+ (((rt0.c2)GLOB(rt0.c4))));
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (+ (((rt0.c2)GLOB(rt0.c4)))) WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (+ (((rt0.c2)GLOB(rt0.c4)))) WHERE ((NOT ((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (+ (((rt0.c2)GLOB(rt0.c4)))) WHERE ((((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ISNULL));
SELECT rt0.c0, rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (+ (((rt0.c2)GLOB(rt0.c4))));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)AND(LIKE(rt0.c0, v0.c0, 'A'))))OR((rt0.c0 IN (NULL))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c0 COLLATE NOCASE)AND(LIKE(rt0.c0, v0.c0, 'A'))))OR((rt0.c0 IN (NULL))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c0 COLLATE NOCASE)AND(LIKE(rt0.c0, v0.c0, 'A'))))OR((rt0.c0 IN (NULL))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(CAST(COUNT(*) AS NUMERIC)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(CAST(COUNT(*) AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(CAST(COUNT(*) AS NUMERIC))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c3 AS INTEGER);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c3 AS INTEGER) WHERE ((- (json_object(rt0.c1, x'', rt0.c4, v0.c0)))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c3 AS INTEGER) WHERE ((NOT ((- (json_object(rt0.c1, x'', rt0.c4, v0.c0)))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c3 AS INTEGER) WHERE ((((- (json_object(rt0.c1, x'', rt0.c4, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((CAST(rt0.c4 AS INTEGER) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((CAST(rt0.c4 AS INTEGER) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((CAST(rt0.c4 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL))+(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL))+(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) NOT NULL))+(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING MIN(AVG(rt0.c3)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (MIN(AVG(rt0.c3)))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((MIN(AVG(rt0.c3))) ISNULL);
SELECT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0;
SELECT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((rt0.c4) BETWEEN (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4))) AND (rt0.c1 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c4) BETWEEN (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4))) AND (rt0.c1 COLLATE BINARY))))) UNION ALL SELECT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((rt0.c4) BETWEEN (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4))) AND (rt0.c1 COLLATE BINARY))) ISNULL));
SELECT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOTNULL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c1))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((+ (rt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (CASE (((rt0.c1))>=((rt0.c4)))  WHEN ((rt0.c3)-(x'c11b')) THEN (rt0.c1 IN (rt0.c2, rt0.c3)) END) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (CASE (((rt0.c1))>=((rt0.c4)))  WHEN ((rt0.c3)-(x'c11b')) THEN (rt0.c1 IN (rt0.c2, rt0.c3)) END))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((CASE (((rt0.c1))>=((rt0.c4)))  WHEN ((rt0.c3)-(x'c11b')) THEN (rt0.c1 IN (rt0.c2, rt0.c3)) END) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN (v0.c0 IN ('v#')) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) END GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN (v0.c0 IN ('v#')) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) END GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN (v0.c0 IN ('v#')) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) END GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING (NOT ((NOT (COUNT(GROUP_CONCAT(rt0.c4)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN (v0.c0 IN ('v#')) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) END GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING (((NOT (COUNT(GROUP_CONCAT(rt0.c4))))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END) BETWEEN ((((rt0.c1)) NOT BETWEEN ((x'')) AND (('965212062')))) AND ((((rt0.c2))!=((x'7dda')))))) ORDER BY (~ (((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c4 END) BETWEEN ((((rt0.c1)) NOT BETWEEN ((x'')) AND (('965212062')))) AND ((((rt0.c2))!=((x'7dda')))))))) ORDER BY (~ (((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c4 END) BETWEEN ((((rt0.c1)) NOT BETWEEN ((x'')) AND (('965212062')))) AND ((((rt0.c2))!=((x'7dda')))))) ISNULL)) ORDER BY (~ (((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, v0.c0, x''))>((0.35237745189133296, v0.c0, v0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, x''))>((0.35237745189133296, v0.c0, v0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c0, x''))>((0.35237745189133296, v0.c0, v0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (CAST(((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)) AS NUMERIC)) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (CAST(((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)) AS NUMERIC)))) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((CAST(((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN((GROUP_CONCAT(rt0.c1) IN (rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN((GROUP_CONCAT(rt0.c1) IN (rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN((GROUP_CONCAT(rt0.c1) IN (rt0.c3)))) ISNULL);
SELECT rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON rt0.c3;
SELECT rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON rt0.c3 WHERE (((((((NULL)AND(v0.c0)))AND(rt0.c2)))-((rt0.c0 IN ())))) UNION ALL SELECT rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON rt0.c3 WHERE ((NOT (((((((NULL)AND(v0.c0)))AND(rt0.c2)))-((rt0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON rt0.c3 WHERE (((((((((NULL)AND(v0.c0)))AND(rt0.c2)))-((rt0.c0 IN ())))) ISNULL));
SELECT rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON rt0.c3;
SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 NOT INDEXED WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((rt0.c3)) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))))) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((rt0.c3)) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))))))) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((rt0.c3)) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING AVG(((COUNT(*))LIKE(MIN(TOTAL(AVG(rt0.c0)))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (AVG(((COUNT(*))LIKE(MIN(TOTAL(AVG(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((AVG(((COUNT(*))LIKE(MIN(TOTAL(AVG(rt0.c0))))))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((v0.c0) IS TRUE))<(('59835816' IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((v0.c0) IS TRUE))<(('59835816' IN ())))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((v0.c0) IS TRUE))<(('59835816' IN ())))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)|(v0.c0)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.16314647003427696)));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)|(v0.c0)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.16314647003427696))) WHERE (((((rt0.c3)<=(rt0.c3)))GLOB(CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)|(v0.c0)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.16314647003427696))) WHERE ((NOT (((((rt0.c3)<=(rt0.c3)))GLOB(CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)|(v0.c0)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.16314647003427696))) WHERE (((((((rt0.c3)<=(rt0.c3)))GLOB(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)|(v0.c0)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.16314647003427696)));
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (CASE ((rt0.c3)<<(rt0.c0))  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE ((rt0.c2)AND(rt0.c1)) END) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (CASE ((rt0.c3)<<(rt0.c0))  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE ((rt0.c2)AND(rt0.c1)) END))) GROUP BY rt0.c3, rt0.c4 UNION SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE ((rt0.c3)<<(rt0.c0))  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE ((rt0.c2)AND(rt0.c1)) END) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING MAX(MAX(rt0.c2)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (MAX(MAX(rt0.c2)))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((MAX(MAX(rt0.c2))) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((x'')AND(rt0.c1)))OR(rt0.c2))) BETWEEN (((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c4))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((x'5fbf4a2d')))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((x'')AND(rt0.c1)))OR(rt0.c2))) BETWEEN (((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c4))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((x'5fbf4a2d')))))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((x'')AND(rt0.c1)))OR(rt0.c2))) BETWEEN (((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c4))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((x'5fbf4a2d')))))) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((rt0.c3)IS NOT(rt0.c4)) IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((rt0.c3)IS NOT(rt0.c4)) IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((rt0.c3)IS NOT(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0) NOTNULL) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) NOTNULL) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) NOTNULL) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN (((MIN(v0.c0), v0.c0, v0.c0)) BETWEEN ((v0.c0, MIN(v0.c0), v0.c0)) AND ((COUNT(v0.c0), AVG(MAX(-574300824)), COUNT(v0.c0)))) THEN v0.c0 ELSE ((v0.c0)/(v0.c0)) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN (((MIN(v0.c0), v0.c0, v0.c0)) BETWEEN ((v0.c0, MIN(v0.c0), v0.c0)) AND ((COUNT(v0.c0), AVG(MAX(-574300824)), COUNT(v0.c0)))) THEN v0.c0 ELSE ((v0.c0)/(v0.c0)) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN (((MIN(v0.c0), v0.c0, v0.c0)) BETWEEN ((v0.c0, MIN(v0.c0), v0.c0)) AND ((COUNT(v0.c0), AVG(MAX(-574300824)), COUNT(v0.c0)))) THEN v0.c0 ELSE ((v0.c0)/(v0.c0)) END) ISNULL);
SELECT ALL v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3, rt0.c3, v0.c0))<((v0.c0, v0.c0, rt0.c2))) COLLATE BINARY;
SELECT ALL v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3, rt0.c3, v0.c0))<((v0.c0, v0.c0, rt0.c2))) COLLATE BINARY WHERE (((rt0.c3 COLLATE NOCASE) NOT BETWEEN ((rt0.c1 IN (rt0.c4))) AND (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3, rt0.c3, v0.c0))<((v0.c0, v0.c0, rt0.c2))) COLLATE BINARY WHERE ((NOT (((rt0.c3 COLLATE NOCASE) NOT BETWEEN ((rt0.c1 IN (rt0.c4))) AND (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3, rt0.c3, v0.c0))<((v0.c0, v0.c0, rt0.c2))) COLLATE BINARY WHERE (((((rt0.c3 COLLATE NOCASE) NOT BETWEEN ((rt0.c1 IN (rt0.c4))) AND (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) ISNULL));
SELECT ALL v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3, rt0.c3, v0.c0))<((v0.c0, v0.c0, rt0.c2))) COLLATE BINARY;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((- (((rt0.c2)IS NOT(v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((- (((rt0.c2)IS NOT(v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((- (((rt0.c2)IS NOT(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((+ (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((+ (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((((+ (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((- (NULL))) BETWEEN (TRIM(DISTINCT rt0.c2)) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.46007864377768526)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((- (NULL))) BETWEEN (TRIM(DISTINCT rt0.c2)) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.46007864377768526)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((- (NULL))) BETWEEN (TRIM(DISTINCT rt0.c2)) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.46007864377768526)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE (((('')) BETWEEN ((rt0.c1)) AND (((((('')OR(rt0.c4)))AND('Q9AyH')))))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((('')) BETWEEN ((rt0.c1)) AND (((((('')OR(rt0.c4)))AND('Q9AyH')))))))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE (((((('')) BETWEEN ((rt0.c1)) AND (((((('')OR(rt0.c4)))AND('Q9AyH')))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((rt0.c1, rt0.c1, (rt0.c3 IN ())))>((rt0.c3, ((rt0.c4) IS FALSE), UNLIKELY(rt0.c3))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, (rt0.c3 IN ())))>((rt0.c3, ((rt0.c4) IS FALSE), UNLIKELY(rt0.c3))))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c1, (rt0.c3 IN ())))>((rt0.c3, ((rt0.c4) IS FALSE), UNLIKELY(rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(ROUND(GROUP_CONCAT(v0.c0), v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(ROUND(GROUP_CONCAT(v0.c0), v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(ROUND(GROUP_CONCAT(v0.c0), v0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE (((((((rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c4, rt0.c2, NULL, NULL, rt0.c4, 0.9707609991608894, rt0.c1)))))=((((0.6395844145414096) BETWEEN (rt0.c1) AND (rt0.c1)))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((NOT (((((((rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c4, rt0.c2, NULL, NULL, rt0.c4, 0.9707609991608894, rt0.c1)))))==((((0.6395844145414096) BETWEEN (rt0.c1) AND (rt0.c1)))))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE (((((((((rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c4, rt0.c2, NULL, NULL, rt0.c4, 0.9707609991608894, rt0.c1)))))==((((0.6395844145414096) BETWEEN (rt0.c1) AND (rt0.c1)))))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (SUM(rt0.c4) IN ()) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT ((SUM(rt0.c4) IN ()))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (((SUM(rt0.c4) IN ())) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (SUM(rt0.c4) IN ()) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT ((SUM(rt0.c4) IN ()))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (((SUM(rt0.c4) IN ())) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL TOTAL((((~ (rt0.c3))) BETWEEN (rt0.c0) AND ((((rt0.c4, rt0.c4, rt0.c4))!=((rt0.c1, rt0.c4, rt0.c1)))))) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN 0.6868375973328196 END) NOT BETWEEN (HEX(DISTINCT rt0.c1)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN 0.6868375973328196 END) NOT BETWEEN (HEX(DISTINCT rt0.c1)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN 0.6868375973328196 END) NOT BETWEEN (HEX(DISTINCT rt0.c1)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((TRIM(NULL))>>('-\nw4rd_'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((TRIM(NULL))>>('-\nw4rd_'))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((TRIM(NULL))>>('-\nw4rd_'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))<<(((v0.c0)GLOB(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))<<(((v0.c0)GLOB(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))<<(((v0.c0)GLOB(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(rt0.c1)) BETWEEN (SUM(rt0.c4)) AND (v0.c0)) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((COUNT(rt0.c1)) BETWEEN (SUM(rt0.c4)) AND (v0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((((COUNT(rt0.c1)) BETWEEN (SUM(rt0.c4)) AND (v0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(rt0.c1)) BETWEEN (SUM(rt0.c4)) AND (v0.c0)) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((COUNT(rt0.c1)) BETWEEN (SUM(rt0.c4)) AND (v0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((((COUNT(rt0.c1)) BETWEEN (SUM(rt0.c4)) AND (v0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c3, rt0.c1, NULL))==((rt0.c3, rt0.c3, rt0.c2)))) IS FALSE)) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c3, rt0.c1, NULL))=((rt0.c3, rt0.c3, rt0.c2)))) IS FALSE)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c3, rt0.c1, NULL))==((rt0.c3, rt0.c3, rt0.c2)))) IS FALSE)) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((- (rt0.c3))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c3))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (rt0.c3))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END IN ()) GROUP BY rt0.c3;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((~ (rt0.c3))) NOT NULL);
SELECT ALL rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((~ (rt0.c3))) NOT NULL) WHERE ((((rt0.c0) ISNULL) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((~ (rt0.c3))) NOT NULL) WHERE ((NOT ((((rt0.c0) ISNULL) IN ())))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((~ (rt0.c3))) NOT NULL) WHERE ((((((rt0.c0) ISNULL) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((~ (rt0.c3))) NOT NULL);
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c2) IS FALSE))GLOB(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c2) IS FALSE))GLOB(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c2) IS FALSE))GLOB(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (rt0.c3) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((MAX(v0.c0))-(((SUM(MAX(SUM(v0.c0)))) NOT BETWEEN (MAX(rt0.c0)) AND (MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (((MAX(v0.c0))-(((SUM(MAX(SUM(v0.c0)))) NOT BETWEEN (MAX(rt0.c0)) AND (MIN(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((((MAX(v0.c0))-(((SUM(MAX(SUM(v0.c0)))) NOT BETWEEN (MAX(rt0.c0)) AND (MIN(rt0.c1)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c0)))>(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((- (rt0.c0)))>(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c0)))>(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((((v0.c0)OR(rt0.c1)))AND(rt0.c4)) IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((v0.c0)OR(rt0.c1)))AND(rt0.c4)) IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((v0.c0)OR(rt0.c1)))AND(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (json_object((((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c3 END)) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (json_object((((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c3 END)))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((json_object((((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c3 END)) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((((v0.c0)OR(v0.c0)))OR(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((((v0.c0)OR(v0.c0)))OR(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT MIN((((IFNULL(rt0.c2, rt0.c3)))>=((((rt0.c2)<>(rt0.c1)))))) FROM rt0 NOT INDEXED ORDER BY ((rt0.c2 COLLATE BINARY)/(((rt0.c4)OR('-290181580')))) ASC  NULLS LAST, x'cd23358e';
SELECT * FROM v0 INNER JOIN rt0 ON (((((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c4)))AND(0.42308991748767844)))OR(x'')))OR(NULL)))AND(rt0.c0)))OR(rt0.c4))))!=((((rt0.c4)==(1.396326668E9)))));
SELECT * FROM v0 INNER JOIN rt0 ON (((((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c4)))AND(0.42308991748767844)))OR(x'')))OR(NULL)))AND(rt0.c0)))OR(rt0.c4))))!=((((rt0.c4)=(1.396326668E9))))) WHERE (((json_type(v0.c0)) BETWEEN (((rt0.c4)||(rt0.c1))) AND (((x'')<<(rt0.c4))))) UNION ALL SELECT * FROM v0 INNER JOIN rt0 ON (((((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c4)))AND(0.42308991748767844)))OR(x'')))OR(NULL)))AND(rt0.c0)))OR(rt0.c4))))<>((((rt0.c4)=(1.396326668E9))))) WHERE ((NOT (((json_type(v0.c0)) BETWEEN (((rt0.c4)||(rt0.c1))) AND (((x'')<<(rt0.c4))))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON (((((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c4)))AND(0.42308991748767844)))OR(x'')))OR(NULL)))AND(rt0.c0)))OR(rt0.c4))))<>((((rt0.c4)=(1.396326668E9))))) WHERE (((((json_type(v0.c0)) BETWEEN (((rt0.c4)||(rt0.c1))) AND (((x'')<<(rt0.c4))))) ISNULL));
SELECT * FROM v0 INNER JOIN rt0 ON (((((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c4)))AND(0.42308991748767844)))OR(x'')))OR(NULL)))AND(rt0.c0)))OR(rt0.c4))))!=((((rt0.c4)==(1.396326668E9)))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((('-290181580'))>=((v0.c0))))LIKE((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((('-290181580'))>=((v0.c0))))LIKE((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((('-290181580'))>=((v0.c0))))LIKE((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT (GLOB(v0.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT (GLOB(v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (GLOB(v0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING '-1265888111' UNION ALL SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING (NOT ('-1265888111')) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING (('-1265888111') ISNULL);
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING '-1265888111' UNION ALL SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING (NOT ('-1265888111')) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING (('-1265888111') ISNULL);
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT MAX((+ ((NOT (rt0.c2))))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('-1047342819') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('-1047342819'))) UNION ALL SELECT * FROM rt0 WHERE ((('-1047342819') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (CASE WHEN ((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)) THEN NULLIF(DISTINCT rt0.c1, rt0.c3) ELSE (((rt0.c4, rt0.c0, rt0.c3))==((rt0.c2, rt0.c1, rt0.c3))) END) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (CASE WHEN ((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)) THEN NULLIF(DISTINCT rt0.c1, rt0.c3) ELSE (((rt0.c4, rt0.c0, rt0.c3))=((rt0.c2, rt0.c1, rt0.c3))) END))) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((CASE WHEN ((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)) THEN NULLIF(DISTINCT rt0.c1, rt0.c3) ELSE (((rt0.c4, rt0.c0, rt0.c3))==((rt0.c2, rt0.c1, rt0.c3))) END) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING ((((TOTAL(rt0.c1))OR((rt0.c3 IN ()))))AND(MAX(MIN(MIN(rt0.c0))) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((TOTAL(rt0.c1))OR((rt0.c3 IN ()))))AND(MAX(MIN(MIN(rt0.c0))) COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((TOTAL(rt0.c1))OR((rt0.c3 IN ()))))AND(MAX(MIN(MIN(rt0.c0))) COLLATE NOCASE))) ISNULL);
SELECT MAX(((rt0.c3)>>(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))) FROM rt0, v0 ORDER BY v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c3, v0.c0 FROM v0, rt0 WHERE (((v0.c0) IS TRUE)) UNION ALL SELECT rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT (((v0.c0) IS TRUE)))) UNION ALL SELECT ALL rt0.c3, v0.c0 FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) ISNULL));
SELECT ALL rt0.c3, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS REAL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 COLLATE BINARY AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((JULIANDAY(0.06731875013886457, rt0.c4, rt0.c3)) NOT NULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (((JULIANDAY(0.06731875013886457, rt0.c4, rt0.c3)) NOT NULL)))) GROUP BY rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((((JULIANDAY(0.06731875013886457, rt0.c4, rt0.c3)) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING MAX(((rt0.c0)>>(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (MAX(((rt0.c0)>>(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((MAX(((rt0.c0)>>(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING MAX(((rt0.c0)>>(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (MAX(((rt0.c0)>>(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((MAX(((rt0.c0)>>(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (LIKELY(((v0.c0) BETWEEN (v0.c0) AND (0.08771241421571041)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (LIKELY(((v0.c0) BETWEEN (v0.c0) AND (0.08771241421571041)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((LIKELY(((v0.c0) BETWEEN (v0.c0) AND (0.08771241421571041)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((((rt0.c4)||(rt0.c3)))) AND ((((x'')&(rt0.c0)))));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((((rt0.c4)||(rt0.c3)))) AND ((((x'')&(rt0.c0))))) WHERE ((((rt0.c0))>=(((- (v0.c0)))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((((rt0.c4)||(rt0.c3)))) AND ((((x'')&(rt0.c0))))) WHERE ((NOT ((((rt0.c0))>=(((- (v0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((((rt0.c4)||(rt0.c3)))) AND ((((x'')&(rt0.c0))))) WHERE ((((((rt0.c0))>=(((- (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((((rt0.c4)||(rt0.c3)))) AND ((((x'')&(rt0.c0)))));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 WHERE ('388904624') GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT ('388904624'))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((('388904624') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(v0.c0))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((((('xqQ痟')AND(((rt0.c3) IS FALSE))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END)))OR(-2077868975)))AND(((rt0.c4) ISNULL)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((((((('xqQ痟')AND(((rt0.c3) IS FALSE))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END)))OR(-2077868975)))AND(((rt0.c4) ISNULL)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((((((('xqQ痟')AND(((rt0.c3) IS FALSE))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END)))OR(-2077868975)))AND(((rt0.c4) ISNULL)))) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CHANGES()) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CHANGES()))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CHANGES()) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE (IFNULL((((rt0.c2, rt0.c2, v0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c0))), (- (rt0.c4)))) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (IFNULL((((rt0.c2, rt0.c2, v0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c0))), (- (rt0.c4)))))) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE (((IFNULL((((rt0.c2, rt0.c2, v0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c0))), (- (rt0.c4)))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(SUM(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(SUM(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(SUM(v0.c0))) ISNULL);
SELECT rt0.c1 FROM rt0, v0;
SELECT rt0.c1 FROM rt0, v0 WHERE ((+ (v0.c0)) COLLATE NOCASE) UNION ALL SELECT rt0.c1 FROM rt0 NOT INDEXED, v0 WHERE ((NOT ((+ (v0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((((+ (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM v0 INNER JOIN rt0 ON UNLIKELY(rt0.c0) COLLATE RTRIM;
SELECT DISTINCT rt0.c3, rt0.c0 FROM v0 INNER JOIN rt0 ON UNLIKELY(rt0.c0) COLLATE RTRIM WHERE ((((((rt0.c0))<>((v0.c0)))) IS TRUE)) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM v0 INNER JOIN rt0 ON UNLIKELY(rt0.c0) COLLATE RTRIM WHERE ((NOT ((((((rt0.c0))!=((v0.c0)))) IS TRUE)))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM v0 NOT INDEXED INNER JOIN rt0 ON UNLIKELY(rt0.c0) COLLATE RTRIM WHERE ((((((((rt0.c0))<>((v0.c0)))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM v0 INNER JOIN rt0 ON UNLIKELY(rt0.c0) COLLATE RTRIM;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) GROUP BY rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)))) GROUP BY rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (((CASE rt0.c1  WHEN GROUP_CONCAT(NULL) THEN rt0.c2 ELSE rt0.c3 END, COUNT(*), MAX(AVG(SUM(AVG(rt0.c2))))))>=((MAX(SUM(rt0.c3)), rt0.c2 COLLATE NOCASE, MAX(TOTAL(MAX(rt0.c4)))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((CASE rt0.c1  WHEN GROUP_CONCAT(NULL) THEN rt0.c2 ELSE rt0.c3 END, COUNT(*), MAX(AVG(SUM(AVG(rt0.c2))))))>=((MAX(SUM(rt0.c3)), rt0.c2 COLLATE NOCASE, MAX(TOTAL(MAX(rt0.c4)))))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (((((CASE rt0.c1  WHEN GROUP_CONCAT(NULL) THEN rt0.c2 ELSE rt0.c3 END, COUNT(*), MAX(AVG(SUM(AVG(rt0.c2))))))>=((MAX(SUM(rt0.c3)), rt0.c2 COLLATE NOCASE, MAX(TOTAL(MAX(rt0.c4))))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((STRFTIME(rt0.c2, 1.394880737E9, rt0.c4, x'2f7e', v0.c0)) IS FALSE)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((STRFTIME(rt0.c2, 1.394880737E9, rt0.c4, x'2f7e', v0.c0)) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((STRFTIME(rt0.c2, 1.394880737E9, rt0.c4, x'2f7e', v0.c0)) IS FALSE)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (0.034796154620962416))) NOT BETWEEN ((0.7686851925101803 IN ())) AND (0.8390529548528223))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (0.034796154620962416))) NOT BETWEEN ((0.7686851925101803 IN ())) AND (0.8390529548528223))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (0.034796154620962416))) NOT BETWEEN ((0.7686851925101803 IN ())) AND (0.8390529548528223))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))OR(rt0.c0))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED, v0 WHERE ((NOT ((NOT (((((v0.c0)OR(v0.c0)))OR(rt0.c0))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((((NOT (((((v0.c0)OR(v0.c0)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING CASE COUNT(*)  WHEN ((-4.88637405E8) IS FALSE) THEN ((((((((rt0.c0)AND(rt0.c3)))OR(SUM(rt0.c4))))OR(COUNT(COUNT(*)))))AND('SwQ7')) ELSE (- (MAX(MAX(MIN(COUNT(AVG(GROUP_CONCAT(SUM(COUNT(COUNT(*))))))))))) END UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (CASE COUNT(*)  WHEN ((-4.88637405E8) IS FALSE) THEN ((((((((rt0.c0)AND(rt0.c3)))OR(SUM(rt0.c4))))OR(COUNT(COUNT(*)))))AND('SwQ7')) ELSE (- (MAX(MAX(MIN(COUNT(AVG(GROUP_CONCAT(SUM(COUNT(COUNT(*))))))))))) END)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING ((CASE COUNT(*)  WHEN ((-4.88637405E8) IS FALSE) THEN ((((((((rt0.c0)AND(rt0.c3)))OR(SUM(rt0.c4))))OR(COUNT(COUNT(*)))))AND('SwQ7')) ELSE (- (MAX(MAX(MIN(COUNT(AVG(GROUP_CONCAT(SUM(COUNT(COUNT(*))))))))))) END) ISNULL);
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((UPPER(rt0.c3))) AND ((((x'')||(v0.c0)))))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((UPPER(rt0.c3))) AND ((((x'')||(v0.c0)))))))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((UPPER(rt0.c3))) AND ((((x'')||(v0.c0)))))) ISNULL));
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN (('-858286542') NOT BETWEEN (0X43823c06) AND (v0.c0)) WHEN UPPER(DISTINCT v0.c0) THEN CASE v0.c0  WHEN '-73268552' THEN v0.c0 END WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)IS NOT(v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS TEXT) THEN (('-858286542') NOT BETWEEN (0X43823c06) AND (v0.c0)) WHEN UPPER(DISTINCT v0.c0) THEN CASE v0.c0  WHEN '-73268552' THEN v0.c0 END WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)IS NOT(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN CAST(v0.c0 AS TEXT) THEN (('-858286542') NOT BETWEEN (0X43823c06) AND (v0.c0)) WHEN UPPER(DISTINCT v0.c0) THEN CASE v0.c0  WHEN '-73268552' THEN v0.c0 END WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)IS NOT(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (((- (rt0.c1))) BETWEEN (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))AND(v0.c0)))OR(GROUP_CONCAT(rt0.c3)))) AND ((((MAX(rt0.c1), AVG(COUNT(rt0.c3)), rt0.c0)) NOT BETWEEN ((COUNT(*), rt0.c0, COUNT(*))) AND ((rt0.c3, rt0.c2, GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT ((((- (rt0.c1))) BETWEEN (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))AND(v0.c0)))OR(GROUP_CONCAT(rt0.c3)))) AND ((((MAX(rt0.c1), AVG(COUNT(rt0.c3)), rt0.c0)) NOT BETWEEN ((COUNT(*), rt0.c0, COUNT(*))) AND ((rt0.c3, rt0.c2, GROUP_CONCAT(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (((((- (rt0.c1))) BETWEEN (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))AND(v0.c0)))OR(GROUP_CONCAT(rt0.c3)))) AND ((((MAX(rt0.c1), AVG(COUNT(rt0.c3)), rt0.c0)) NOT BETWEEN ((COUNT(*), rt0.c0, COUNT(*))) AND ((rt0.c3, rt0.c2, GROUP_CONCAT(rt0.c2))))))) ISNULL);
SELECT MAX((((+ (rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))) FROM rt0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0)+(v0.c0)))%(((v0.c0)||(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)+(v0.c0)))%(((v0.c0)||(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0)+(v0.c0)))%(((v0.c0)||(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0;
SELECT v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((- ((rt0.c2 IN (v0.c0, rt0.c2))))) GROUP BY v0.c0, rt0.c2, rt0.c3 UNION SELECT ALL v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT ((- ((rt0.c2 IN (v0.c0, rt0.c2))))))) GROUP BY v0.c0, rt0.c2, rt0.c3 UNION SELECT ALL v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((((- ((rt0.c2 IN (v0.c0, rt0.c2))))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c3;
SELECT v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING (((SUM(TOTAL(MAX(v0.c0))))) NOT BETWEEN ((CASE WHEN v0.c0 THEN TOTAL(v0.c0) ELSE COUNT(*) END)) AND ((COUNT(rt0.c1) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT ((((SUM(TOTAL(MAX(v0.c0))))) NOT BETWEEN ((CASE WHEN v0.c0 THEN TOTAL(v0.c0) ELSE COUNT(*) END)) AND ((COUNT(rt0.c1) COLLATE BINARY))))) UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING (((((SUM(TOTAL(MAX(v0.c0))))) NOT BETWEEN ((CASE WHEN v0.c0 THEN TOTAL(v0.c0) ELSE COUNT(*) END)) AND ((COUNT(rt0.c1) COLLATE BINARY)))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0) IS TRUE))AND(((rt0.c3)||(rt0.c4))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((v0.c0) IS TRUE))AND(((rt0.c3)||(rt0.c4))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0) IS TRUE))AND(((rt0.c3)||(rt0.c4))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((~ (rt0.c0)))OR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)))OR(rt0.c3))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((((~ (rt0.c0)))OR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)))OR(rt0.c3))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((((~ (rt0.c0)))OR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)))OR(rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END THEN x'dd07' END) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END THEN x'dd07' END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0, rt0 WHERE (((CASE WHEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END THEN x'dd07' END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((json_valid(v0.c0))<<(AVG(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((json_valid(v0.c0))<<(AVG(MIN(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((json_valid(v0.c0))<<(AVG(MIN(v0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- ((rt0.c2 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- ((rt0.c2 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- ((rt0.c2 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)<=(v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0)<=(v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0)<=(v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((((NOT (v0.c0)))==(((rt0.c2)>(rt0.c1))))) GROUP BY rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((NOT (v0.c0)))==(((rt0.c2)>(rt0.c1))))))) GROUP BY rt0.c2, v0.c0, rt0.c4 UNION SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((((((NOT (v0.c0)))=(((rt0.c2)>(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((NULL)IS NOT(v0.c0)))||(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3)))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((NULL)IS NOT(v0.c0)))||(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3)))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING CAST(((GROUP_CONCAT(TOTAL(MAX(rt0.c1)))) NOT NULL) AS REAL) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((NULL)IS NOT(v0.c0)))||(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3)))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (CAST(((GROUP_CONCAT(TOTAL(MAX(rt0.c1)))) NOT NULL) AS REAL))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((NULL)IS NOT(v0.c0)))||(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3)))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((CAST(((GROUP_CONCAT(TOTAL(MAX(rt0.c1)))) NOT NULL) AS REAL)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER)) NOTNULL)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))) BETWEEN (998381342) AND (CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))) BETWEEN (998381342) AND (CAST(rt0.c1 AS TEXT)))))) GROUP BY rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c3))) BETWEEN (998381342) AND (CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT TOTAL((~ (((v0.c0)<(v0.c0))))) FROM v0;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN x'5e12' END) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN (+ (rt0.c3)) THEN x'5e12' END))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (((CASE WHEN (+ (rt0.c3)) THEN x'5e12' END) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((((((('') NOT BETWEEN (x'5f8f') AND (rt0.c1)))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c1)/(rt0.c3))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((((((('') NOT BETWEEN (x'5f8f') AND (rt0.c1)))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c1)/(rt0.c3))))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((((((((('') NOT BETWEEN (x'5f8f') AND (rt0.c1)))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c1)/(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0, v0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0 HAVING AVG(((v0.c0)/(MIN(rt0.c4)))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (AVG(((v0.c0)/(MIN(rt0.c4)))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0 HAVING ((AVG(((v0.c0)/(MIN(rt0.c4))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)<>(v0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)!=(v0.c0)) COLLATE BINARY) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((((x'' IN (v0.c0, rt0.c2))) IS TRUE)) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT ((((x'' IN (v0.c0, rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((((((x'' IN (v0.c0, rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((((~ (rt0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((~ (rt0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((((((~ (rt0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c4, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, v0.c0 HAVING ((GROUP_CONCAT(MAX(rt0.c2)))>>(((rt0.c4) NOTNULL))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (((GROUP_CONCAT(MAX(rt0.c2)))>>(((rt0.c4) NOTNULL))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, v0.c0 HAVING ((((GROUP_CONCAT(MAX(rt0.c2)))>>(((rt0.c4) NOTNULL)))) ISNULL);
SELECT ALL MAX((((rt0.c2)) BETWEEN ((CAST(x'b68d' AS REAL))) AND ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN 0.6803640225824846 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 END)))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (0x4e76a306) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0x4e76a306))) UNION ALL SELECT * FROM rt0 WHERE (((0X4e76a306) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS REAL) WHEN ABS(v0.c0) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN (+ (v0.c0)) THEN ((v0.c0)>(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS REAL) WHEN ABS(v0.c0) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN (+ (v0.c0)) THEN ((v0.c0)>(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS REAL) WHEN ABS(v0.c0) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN (+ (v0.c0)) THEN ((v0.c0)>(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END)OR(((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c4)))))AND(rt0.c0))) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END)OR(((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c4)))))AND(rt0.c0))))) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END)OR(((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c4)))))AND(rt0.c0))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING TOTAL(((GROUP_CONCAT(AVG(rt0.c3))) BETWEEN (MIN(v0.c0)) AND (MAX(v0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL(((GROUP_CONCAT(AVG(rt0.c3))) BETWEEN (MIN(v0.c0)) AND (MAX(v0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL(((GROUP_CONCAT(AVG(rt0.c3))) BETWEEN (MIN(v0.c0)) AND (MAX(v0.c0))))) ISNULL);
SELECT v0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c1 FROM rt0, v0 WHERE (((CAST(rt0.c2 AS REAL))>(((((((((NULL)OR(v0.c0)))OR('1451355023')))OR(NULL)))OR(rt0.c4))))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c2 AS REAL))>(((((((((NULL)OR(v0.c0)))OR('1451355023')))OR(NULL)))OR(rt0.c4))))))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0, v0 WHERE (((((CAST(rt0.c2 AS REAL))>(((((((((NULL)OR(v0.c0)))OR('1451355023')))OR(NULL)))OR(rt0.c4))))) ISNULL));
SELECT v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((v0.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CHAR(v0.c0))IS((NOT (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CHAR(v0.c0))IS((NOT (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CHAR(v0.c0))IS((NOT (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(GROUP_CONCAT(v0.c0) COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(v0.c0) COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(GROUP_CONCAT(v0.c0) COLLATE BINARY)) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)) END) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)) END))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)) END) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((('') IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((('') IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((('') IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((rt0.c2 IN ()))>>(x'da3c'))) GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((rt0.c2 IN ()))>>(x'da3c'))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((rt0.c2 IN ()))>>(x'da3c'))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB)) NOT BETWEEN (MAX(MAX(MIN(GROUP_CONCAT(rt0.c3))))) AND (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (NOT (((CAST(COUNT(*) AS BLOB)) NOT BETWEEN (MAX(MAX(MIN(GROUP_CONCAT(rt0.c3))))) AND (GROUP_CONCAT(TOTAL(v0.c0)))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((((CAST(COUNT(*) AS BLOB)) NOT BETWEEN (MAX(MAX(MIN(GROUP_CONCAT(rt0.c3))))) AND (GROUP_CONCAT(TOTAL(v0.c0))))) ISNULL);
SELECT ALL rt0.c4 FROM rt0;
SELECT ALL rt0.c4 FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((NULL)))))>=((rt0.c1)))) UNION ALL SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT (((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((NULL)))))>=((rt0.c1)))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 WHERE (((((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((NULL)))))>=((rt0.c1)))) ISNULL));
SELECT ALL rt0.c4 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (0.794925251857645) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (0.794925251857645))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((0.794925251857645) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((((v0.c0)AND(v0.c0)))OR(1.406623648E9))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((((v0.c0)AND(v0.c0)))OR(1.406623648E9))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((((v0.c0)AND(v0.c0)))OR(1.406623648E9)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((((v0.c0)AND(v0.c0)))OR(1.406623648E9))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((((v0.c0)AND(v0.c0)))OR(1.406623648E9))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((((v0.c0)AND(v0.c0)))OR(1.406623648E9)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (1679174550) AND ((- (rt0.c2))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (1679174550) AND ((- (rt0.c2))))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (1679174550) AND ((- (rt0.c2))))) ISNULL));
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((LTRIM('Hc', rt0.c0))<((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((LTRIM('Hc', rt0.c0))<((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((LTRIM('Hc', rt0.c0))<((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 IN ()) IN (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN (NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 IN ()) IN (NULL))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c4, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN ((+ (rt0.c2))) AND ((~ (rt0.c3)))) GROUP BY rt0.c2, rt0.c4, v0.c0;
SELECT rt0.c2, rt0.c4, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN ((+ (rt0.c2))) AND ((~ (rt0.c3)))) GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c4)) UNION ALL SELECT rt0.c2, rt0.c4, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN ((+ (rt0.c2))) AND ((~ (rt0.c3)))) GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN ((+ (rt0.c2))) AND ((~ (rt0.c3)))) GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c4))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c1))) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((NOT (rt0.c1))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c1))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.9595278678311715) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.9595278678311715))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.9595278678311715) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (CASE ((0.21455923882061856)%(rt0.c4))  WHEN ((v0.c0)|(rt0.c4)) THEN (rt0.c4 IN ()) ELSE rt0.c1 END) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT (CASE ((0.21455923882061856)%(rt0.c4))  WHEN ((v0.c0)|(rt0.c4)) THEN (rt0.c4 IN ()) ELSE rt0.c1 END))) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (((CASE ((0.21455923882061856)%(rt0.c4))  WHEN ((v0.c0)|(rt0.c4)) THEN (rt0.c4 IN ()) ELSE rt0.c1 END) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING 0.28762113215898477 UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (0.28762113215898477)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING ((0.28762113215898477) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING 0.28762113215898477 UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (0.28762113215898477)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING ((0.28762113215898477) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((((((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(rt0.c3)))AND(CAST(rt0.c3 AS INTEGER))))AND(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c4)>(v0.c0))))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE ((NOT ((((((((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(rt0.c3)))AND(CAST(rt0.c3 AS INTEGER))))AND(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c4)>(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((((((((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(rt0.c3)))AND(CAST(rt0.c3 AS INTEGER))))AND(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c4)>(v0.c0))))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c4) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c4) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c4) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)AND(((v0.c0)>=(v0.c0)))))OR(17633318))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(((v0.c0)>=(v0.c0)))))OR(17633318))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(((v0.c0)>=(v0.c0)))))OR(17633318))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING CAST(GROUP_CONCAT(rt0.c4) AS TEXT) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c4) AS TEXT))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING ((CAST(GROUP_CONCAT(rt0.c4) AS TEXT)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING CAST(GROUP_CONCAT(rt0.c4) AS TEXT) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c4) AS TEXT))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING ((CAST(GROUP_CONCAT(rt0.c4) AS TEXT)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (((rt0.c0)>>(rt0.c3)) COLLATE BINARY) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)>>(rt0.c3)) COLLATE BINARY))) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL);
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (((((rt0.c0)>>(rt0.c3)) COLLATE BINARY) ISNULL)) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL);
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)<('2007354321')) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)<('2007354321')) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)<('2007354321')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((((rt0.c3)>=(rt0.c1)) IN ())) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c3)>=(rt0.c1)) IN ())))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((rt0.c3)>=(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 HAVING CAST(((GROUP_CONCAT(TOTAL(rt0.c0)))LIKE(COUNT(*))) AS REAL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 HAVING (NOT (CAST(((GROUP_CONCAT(TOTAL(rt0.c0)))LIKE(COUNT(*))) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 HAVING ((CAST(((GROUP_CONCAT(TOTAL(rt0.c0)))LIKE(COUNT(*))) AS REAL)) ISNULL);
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((CAST(rt0.c4 AS REAL) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT ((CAST(rt0.c4 AS REAL) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((((CAST(rt0.c4 AS REAL) IN ())) ISNULL));
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((+ (x'3a696461'))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((+ (x'3a696461'))))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ (x'3a696461'))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.7679356114903927 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.7679356114903927)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.7679356114903927) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.7679356114903927 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.7679356114903927)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.7679356114903927) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((CHAR(rt0.c1))<>(TRIM(NULL)))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT (((CHAR(rt0.c1))<>(TRIM(NULL)))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((((CHAR(rt0.c1))!=(TRIM(NULL)))) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c0 COLLATE BINARY)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c0 COLLATE BINARY)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, rt0 WHERE (((((((rt0.c0 COLLATE BINARY)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (CHANGES()) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (CHANGES()))) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((CHANGES()) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING ((AVG(v0.c0))&(COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (((AVG(v0.c0))&(COUNT(*))))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING ((((AVG(v0.c0))&(COUNT(*)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING ((AVG(v0.c0))&(COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (((AVG(v0.c0))&(COUNT(*))))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING ((((AVG(v0.c0))&(COUNT(*)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON v0.c0;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB)) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB)))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (((CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON v0.c0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (('-255869730' IN ())) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (('-255869730' IN ())))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((('-255869730' IN ())) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS TEXT) WHERE ((((((+ (rt0.c3)))AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR((((rt0.c1, rt0.c3, rt0.c4))<=((rt0.c0, rt0.c0, rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS TEXT) WHERE ((NOT ((((((+ (rt0.c3)))AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR((((rt0.c1, rt0.c3, rt0.c4))<=((rt0.c0, rt0.c0, rt0.c2)))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS TEXT) WHERE ((((((((+ (rt0.c3)))AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR((((rt0.c1, rt0.c3, rt0.c4))<=((rt0.c0, rt0.c0, rt0.c2)))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS TEXT) GROUP BY rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)|(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)|(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)|(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (UPPER(CAST(v0.c0 AS REAL))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (UPPER(CAST(v0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM v0 WHERE (((UPPER(CAST(v0.c0 AS REAL))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c3) IS TRUE) COLLATE NOCASE) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c3) IS TRUE) COLLATE NOCASE))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c3) IS TRUE) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING SUM(GROUP_CONCAT(GROUP_CONCAT(AVG(AVG(rt0.c4))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (SUM(GROUP_CONCAT(GROUP_CONCAT(AVG(AVG(rt0.c4))))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING ((SUM(GROUP_CONCAT(GROUP_CONCAT(AVG(AVG(rt0.c4)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (HEX(DISTINCT ((0.5845000954498433) NOT NULL))) UNION ALL SELECT * FROM v0 WHERE ((NOT (HEX(DISTINCT ((0.5845000954498433) NOT NULL))))) UNION ALL SELECT ALL * FROM v0 WHERE (((HEX(DISTINCT ((0.5845000954498433) NOT NULL))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6022603006942044 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6022603006942044 WHERE ((- ((v0.c0 IN (v0.c0))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6022603006942044 WHERE ((NOT ((- ((v0.c0 IN (v0.c0))))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6022603006942044 WHERE ((((- ((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6022603006942044 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING COUNT(((v0.c0) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING (NOT (COUNT(((v0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING ((COUNT(((v0.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING COUNT(((v0.c0) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING (NOT (COUNT(((v0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING ((COUNT(((v0.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((rt0.c4 IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((rt0.c4 IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((((rt0.c4 IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) THEN HEX(rt0.c1) WHEN ((((rt0.c2)OR(v0.c0)))OR(rt0.c1)) THEN rt0.c4 COLLATE BINARY WHEN x'' COLLATE BINARY THEN (NULL IN ()) END;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) THEN HEX(rt0.c1) WHEN ((((rt0.c2)OR(v0.c0)))OR(rt0.c1)) THEN rt0.c4 COLLATE BINARY WHEN x'' COLLATE BINARY THEN (NULL IN ()) END WHERE (((((+ (rt0.c4))))>((162439450)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) THEN HEX(rt0.c1) WHEN ((((rt0.c2)OR(v0.c0)))OR(rt0.c1)) THEN rt0.c4 COLLATE BINARY WHEN x'' COLLATE BINARY THEN (NULL IN ()) END WHERE ((NOT (((((+ (rt0.c4))))>((162439450)))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) THEN HEX(rt0.c1) WHEN ((((rt0.c2)OR(v0.c0)))OR(rt0.c1)) THEN rt0.c4 COLLATE BINARY WHEN x'' COLLATE BINARY THEN (NULL IN ()) END WHERE (((((((+ (rt0.c4))))>((162439450)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) THEN HEX(rt0.c1) WHEN ((((rt0.c2)OR(v0.c0)))OR(rt0.c1)) THEN rt0.c4 COLLATE BINARY WHEN x'' COLLATE BINARY THEN (NULL IN ()) END;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(GROUP_CONCAT(COUNT(MAX(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(GROUP_CONCAT(COUNT(MAX(v0.c0))))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c1 IN ())) BETWEEN ((((rt0.c0))<((rt0.c2)))) AND ((NOT (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN ((((rt0.c0))<((rt0.c2)))) AND ((NOT (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c1 IN ())) BETWEEN ((((rt0.c0))<((rt0.c2)))) AND ((NOT (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((((((rt0.c2)OR('umztbpY')))AND(rt0.c3)))%((NOT (rt0.c3))))) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((((rt0.c2)OR('umztbpY')))AND(rt0.c3)))%((NOT (rt0.c3))))))) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((((((((rt0.c2)OR('umztbpY')))AND(rt0.c3)))%((NOT (rt0.c3))))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING CASE WHEN GROUP_CONCAT(COUNT(COUNT(*))) THEN (((SUM(AVG(rt0.c3))))>((AVG(rt0.c0)))) END UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (CASE WHEN GROUP_CONCAT(COUNT(COUNT(*))) THEN (((SUM(AVG(rt0.c3))))>((AVG(rt0.c0)))) END)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING ((CASE WHEN GROUP_CONCAT(COUNT(COUNT(*))) THEN (((SUM(AVG(rt0.c3))))>((AVG(rt0.c0)))) END) ISNULL);
SELECT ALL MIN(v0.c0) FROM rt0, v0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((1e500)IS NOT(((rt0.c1)*(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((1e500)IS NOT(((rt0.c1)*(rt0.c1))))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((1e500)IS NOT(((rt0.c1)*(rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) IS TRUE) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) IS TRUE) WHERE (((CAST(x'' AS NUMERIC)) NOT BETWEEN (-1.218403098E9) AND ((+ (rt0.c1))))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) IS TRUE) WHERE ((NOT (((CAST(x'' AS NUMERIC)) NOT BETWEEN (-1.218403098E9) AND ((+ (rt0.c1))))))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) IS TRUE) WHERE (((((CAST(x'' AS NUMERIC)) NOT BETWEEN (-1.218403098E9) AND ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) IS TRUE) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE WHEN MIN(rt0.c1) THEN ((rt0.c2)&('-611168769')) END UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN MIN(rt0.c1) THEN ((rt0.c2)&('-611168769')) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN MIN(rt0.c1) THEN ((rt0.c2)&('-611168769')) END) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE WHEN MIN(rt0.c1) THEN ((rt0.c2)&('-611168769')) END UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN MIN(rt0.c1) THEN ((rt0.c2)&('-611168769')) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN MIN(rt0.c1) THEN ((rt0.c2)&('-611168769')) END) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (CASE (rt0.c4 IN (rt0.c2, rt0.c0))  WHEN ((rt0.c3)%(rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (('[H痟5TJ')||(rt0.c1)) END) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CASE (rt0.c4 IN (rt0.c2, rt0.c0))  WHEN ((rt0.c3)%(rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (('[H痟5TJ')||(rt0.c1)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (((CASE (rt0.c4 IN (rt0.c2, rt0.c0))  WHEN ((rt0.c3)%(rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (('[H痟5TJ')||(rt0.c1)) END) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON MIN(CAST(0x6fab73c2 AS TEXT), (rt0.c4 IN ()), CASE v0.c0  WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c4 END, ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON MIN(CAST(0X6fab73c2 AS TEXT), (rt0.c4 IN ()), CASE v0.c0  WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c4 END, ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3))) WHERE (UNICODE(v0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON MIN(CAST(0x6fab73c2 AS TEXT), (rt0.c4 IN ()), CASE v0.c0  WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c4 END, ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3))) WHERE ((NOT (UNICODE(v0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON MIN(CAST(0X6fab73c2 AS TEXT), (rt0.c4 IN ()), CASE v0.c0  WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c4 END, ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3))) WHERE (((UNICODE(v0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON MIN(CAST(0x6fab73c2 AS TEXT), (rt0.c4 IN ()), CASE v0.c0  WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c4 END, ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)));
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND (('1495125513')))) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND (('1495125513')))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND (('1495125513')))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4 HAVING COUNT(0x1b400f39) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4 HAVING (NOT (COUNT(0X1b400f39))) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4 HAVING ((COUNT(0X1b400f39)) ISNULL);
SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4 HAVING COUNT(0x1b400f39) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4 HAVING (NOT (COUNT(0X1b400f39))) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4 HAVING ((COUNT(0X1b400f39)) ISNULL);
SELECT rt0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4 IN (rt0.c2, rt0.c3))))=((CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c0, rt0.c4;
SELECT MAX((NOT (CAST(v0.c0 AS INTEGER)))) FROM v0 ORDER BY ((((v0.c0 IN ()), ((v0.c0)+(v0.c0)), v0.c0))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)), x''))), v0.c0 DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((rt0.c3) ISNULL)) NOTNULL)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((rt0.c3) ISNULL)) NOTNULL)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((rt0.c3) ISNULL)) NOTNULL)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((NOT (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((NOT (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c4)) NOT BETWEEN ((v0.c0, ((rt0.c3)<(rt0.c3)), (rt0.c1 IN ()))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL, ((rt0.c2) IS TRUE))))) GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2 UNION SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c4)) NOT BETWEEN ((v0.c0, ((rt0.c3)<(rt0.c3)), (rt0.c1 IN ()))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL, ((rt0.c2) IS TRUE))))))) GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2 UNION SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c4)) NOT BETWEEN ((v0.c0, ((rt0.c3)<(rt0.c3)), (rt0.c1 IN ()))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL, ((rt0.c2) IS TRUE))))) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (+ (TOTAL(rt0.c1))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT ((+ (TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((+ (TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (+ (TOTAL(rt0.c1))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT ((+ (TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((+ (TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL MIN(((ROUND(rt0.c4, rt0.c4))|(((rt0.c0) NOT NULL)))) FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))IS NOT(rt0.c3)) DESC  NULLS LAST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c4, 0.48135335000551516, rt0.c4)) BETWEEN ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c3 WHEN '' THEN rt0.c1 END, CAST(rt0.c2 AS INTEGER), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE NULL END, (rt0.c4 IN (rt0.c4, rt0.c1)), ((rt0.c4) BETWEEN (rt0.c1) AND (x'')))))  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY (((rt0.c4, 0.48135335000551516, rt0.c4)) BETWEEN ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c3 WHEN '' THEN rt0.c1 END, CAST(rt0.c2 AS INTEGER), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE NULL END, (rt0.c4 IN (rt0.c4, rt0.c1)), ((rt0.c4) BETWEEN (rt0.c1) AND (x'')))))  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY (((rt0.c4, 0.48135335000551516, rt0.c4)) BETWEEN ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c3 WHEN '' THEN rt0.c1 END, CAST(rt0.c2 AS INTEGER), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE NULL END, (rt0.c4 IN (rt0.c4, rt0.c1)), ((rt0.c4) BETWEEN (rt0.c1) AND (x'')))))  NULLS LAST;
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))>((((rt0.c1))>((rt0.c4)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE ((NOT (((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))>((((rt0.c1))>((rt0.c4)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE (((((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))>((((rt0.c1))>((rt0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((((rt0.c4)AND(rt0.c1)))OR(v0.c0)))<<(CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((((rt0.c4)AND(rt0.c1)))OR(v0.c0)))<<(CAST(rt0.c1 AS INTEGER)))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((((((rt0.c4)AND(rt0.c1)))OR(v0.c0)))<<(CAST(rt0.c1 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT((v0.c0 IN ()))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT((v0.c0 IN ()))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((~ (TYPEOF(DISTINCT NULL)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((~ (TYPEOF(DISTINCT NULL)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((((~ (TYPEOF(DISTINCT NULL)))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((+ (rt0.c0))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT ((+ (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4 HAVING TOTAL(CASE rt0.c0  WHEN rt0.c0 THEN MIN(MIN(SUM(TOTAL(rt0.c1)))) WHEN rt0.c3 THEN AVG(MAX(GROUP_CONCAT(rt0.c4))) WHEN rt0.c3 THEN AVG(rt0.c0) END) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4 HAVING (NOT (TOTAL(CASE rt0.c0  WHEN rt0.c0 THEN MIN(MIN(SUM(TOTAL(rt0.c1)))) WHEN rt0.c3 THEN AVG(MAX(GROUP_CONCAT(rt0.c4))) WHEN rt0.c3 THEN AVG(rt0.c0) END))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4 HAVING ((TOTAL(CASE rt0.c0  WHEN rt0.c0 THEN MIN(MIN(SUM(TOTAL(rt0.c1)))) WHEN rt0.c3 THEN AVG(MAX(GROUP_CONCAT(rt0.c4))) WHEN rt0.c3 THEN AVG(rt0.c0) END)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON JULIANDAY(((rt0.c2) NOTNULL), (((rt0.c0))<=((rt0.c2))), CAST('232079873' AS INTEGER));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON JULIANDAY(((rt0.c2) NOTNULL), (((rt0.c0))<=((rt0.c2))), CAST('232079873' AS INTEGER)) WHERE (TYPEOF(DISTINCT NULL)) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON JULIANDAY(((rt0.c2) NOTNULL), (((rt0.c0))<=((rt0.c2))), CAST('232079873' AS INTEGER)) WHERE ((NOT (TYPEOF(DISTINCT NULL)))) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON JULIANDAY(((rt0.c2) NOTNULL), (((rt0.c0))<=((rt0.c2))), CAST('232079873' AS INTEGER)) WHERE (((TYPEOF(DISTINCT NULL)) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON JULIANDAY(((rt0.c2) NOTNULL), (((rt0.c0))<=((rt0.c2))), CAST('232079873' AS INTEGER));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (1.656219148E9) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (1.656219148E9))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((1.656219148E9) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c4 HAVING (COUNT(COUNT(rt0.c3)) IN (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c4 HAVING (NOT ((COUNT(COUNT(rt0.c3)) IN (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c4 HAVING (((COUNT(COUNT(rt0.c3)) IN (COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)>=(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)>=(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)>=(rt0.c2))) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE v0.c0  WHEN 0.5753144856618521 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE v0.c0  WHEN 0.5753144856618521 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN 0.5753144856618521 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING MAX(x'') UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (MAX(x''))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((MAX(x'')) ISNULL);
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING MAX(x'') UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (MAX(x''))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((MAX(x'')) ISNULL);
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c3)>>(rt0.c2)), ((((v0.c0)AND(rt0.c2)))OR(rt0.c4)), (((1.451355023E9))>=((rt0.c4))))) AND (('', UNLIKELY(rt0.c3), ((rt0.c1) ISNULL))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c3)>>(rt0.c2)), ((((v0.c0)AND(rt0.c2)))OR(rt0.c4)), (((1.451355023E9))>=((rt0.c4))))) AND (('', UNLIKELY(rt0.c3), ((rt0.c1) ISNULL))))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c3)>>(rt0.c2)), ((((v0.c0)AND(rt0.c2)))OR(rt0.c4)), (((1.451355023E9))>=((rt0.c4))))) AND (('', UNLIKELY(rt0.c3), ((rt0.c1) ISNULL))))) ISNULL));
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((json_quote(rt0.c0))!=(((x'')|(rt0.c4))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((json_quote(rt0.c0))!=(((x'')|(rt0.c4))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((json_quote(rt0.c0))!=(((x'')|(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((ABS(rt0.c3))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((ABS(rt0.c3))))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((ABS(rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING ((0.45167140891430146)<=((- (rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((0.45167140891430146)<=((- (rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING ((((0.45167140891430146)<=((- (rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING ((0.45167140891430146)<=((- (rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((0.45167140891430146)<=((- (rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING ((((0.45167140891430146)<=((- (rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (TRIM(v0.c0)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (TRIM(v0.c0)))) UNION ALL SELECT * FROM v0 WHERE (((TRIM(v0.c0)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN NULL WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)=(rt0.c2)) ELSE '-1257644221' END) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CASE WHEN (((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN NULL WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)=(rt0.c2)) ELSE '-1257644221' END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CASE WHEN (((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN NULL WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)=(rt0.c2)) ELSE '-1257644221' END) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0, v0 WHERE ((((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3)))) ISNULL)) GROUP BY rt0.c3, rt0.c4 UNION SELECT rt0.c3, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3)))) ISNULL)))) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 WHERE ((((((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3)))) ISNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(MIN(TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(MIN(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(TOTAL(COUNT(*))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((NULL)<<(v0.c0)))IS NOT(((((0x4bf4829f)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((NULL)<<(v0.c0)))IS NOT(((((0X4bf4829f)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((NULL)<<(v0.c0)))IS NOT(((((0x4bf4829f)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 NOT INDEXED;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((rt0.c0, rt0.c4, rt0.c0)) BETWEEN ((0xffffffffeeb42e34, rt0.c3, rt0.c2)) AND (('>~tg', rt0.c4, rt0.c4))) IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0, rt0.c4, rt0.c0)) BETWEEN ((0Xffffffffeeb42e34, rt0.c3, rt0.c2)) AND (('>~tg', rt0.c4, rt0.c4))) IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c0, rt0.c4, rt0.c0)) BETWEEN ((0Xffffffffeeb42e34, rt0.c3, rt0.c2)) AND (('>~tg', rt0.c4, rt0.c4))) IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 NOT INDEXED;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((- (rt0.c3)) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (rt0.c3)) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c3)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) BETWEEN (GROUP_CONCAT(x'')) AND (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (GROUP_CONCAT(x'')) AND (AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) BETWEEN (GROUP_CONCAT(x'')) AND (AVG(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) BETWEEN (GROUP_CONCAT(x'')) AND (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (GROUP_CONCAT(x'')) AND (AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) BETWEEN (GROUP_CONCAT(x'')) AND (AVG(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((0.14673871402308403)) BETWEEN ((NULL)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((0.14673871402308403)) BETWEEN ((NULL)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((((0.14673871402308403)) BETWEEN ((NULL)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((~ (rt0.c4)), ((rt0.c3) BETWEEN (0x66e5a51a) AND (rt0.c4)), ((rt0.c4)*(v0.c0))))>((rt0.c4, ((rt0.c2)LIKE(rt0.c1)), ((rt0.c1)*(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((~ (rt0.c4)), ((rt0.c3) BETWEEN (0x66e5a51a) AND (rt0.c4)), ((rt0.c4)*(v0.c0))))>((rt0.c4, ((rt0.c2)LIKE(rt0.c1)), ((rt0.c1)*(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((~ (rt0.c4)), ((rt0.c3) BETWEEN (0X66e5a51a) AND (rt0.c4)), ((rt0.c4)*(v0.c0))))>((rt0.c4, ((rt0.c2)LIKE(rt0.c1)), ((rt0.c1)*(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (0Xffffffffe2ef711b) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (0xffffffffe2ef711b))) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((0xffffffffe2ef711b) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(v0.c0) COLLATE BINARY UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(v0.c0) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0) COLLATE BINARY) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(v0.c0) COLLATE BINARY UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(v0.c0) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0) COLLATE BINARY) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT SUM((((CASE '1406623648'  WHEN rt0.c3 THEN '%r8' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END, ''))!=((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)), (- (rt0.c0)), ((rt0.c0)>=(rt0.c1)))))) FROM rt0 ORDER BY (- ((rt0.c4 IN (rt0.c2)))), (((((rt0.c1) IS FALSE)))!=((CASE WHEN rt0.c4 THEN rt0.c2 END))) DESC;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((JULIANDAY(rt0.c1, rt0.c3, '1631111534'))GLOB('0.419808415634512' COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((JULIANDAY(rt0.c1, rt0.c3, '1631111534'))GLOB('0.419808415634512' COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((JULIANDAY(rt0.c1, rt0.c3, '1631111534'))GLOB('0.419808415634512' COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (2071588743)) THEN v0.c0 END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE v0.c0  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (2071588743)) THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (2071588743)) THEN v0.c0 END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING '' UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (('') ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING '' UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (('') ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((((((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c1))))>((rt0.c4)))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c1))))>((rt0.c4)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((((((((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c1))))>((rt0.c4)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END) IS FALSE)) GROUP BY rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END) IS FALSE)))) GROUP BY rt0.c4, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END) IS FALSE)) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING '-1444713921' COLLATE NOCASE UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT ('-1444713921' COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (('-1444713921' COLLATE NOCASE) ISNULL);
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING '-1444713921' COLLATE NOCASE UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT ('-1444713921' COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (('-1444713921' COLLATE NOCASE) ISNULL);
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL MAX(CAST(v0.c0 COLLATE NOCASE AS TEXT)) FROM v0 ORDER BY CASE WHEN x'30a7' THEN v0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0)%('Vc')) COLLATE BINARY) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0)%('Vc')) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0)%('Vc')) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c0)*(x'e145'))) NOT BETWEEN (((((((((rt0.c2)OR(rt0.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt0.c3))) AND (((rt0.c0)<(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c0)*(x'e145'))) NOT BETWEEN (((((((((rt0.c2)OR(rt0.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt0.c3))) AND (((rt0.c0)<(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c0)*(x'e145'))) NOT BETWEEN (((((((((rt0.c2)OR(rt0.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt0.c3))) AND (((rt0.c0)<(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE (((NULL)>=(0.5006237940167033))) GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT (((NULL)>=(0.5006237940167033))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE (((((NULL)>=(0.5006237940167033))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(TOTAL(rt0.c4)) COLLATE RTRIM UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(TOTAL(rt0.c4)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(TOTAL(rt0.c4)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (rt0.c4) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((rt0.c4) ISNULL));
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END) BETWEEN (((v0.c0)*(rt0.c2))) AND (((rt0.c4) ISNULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END) BETWEEN (((v0.c0)*(rt0.c2))) AND (((rt0.c4) ISNULL)))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END) BETWEEN (((v0.c0)*(rt0.c2))) AND (((rt0.c4) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c4, x'', rt0.c0)) BETWEEN ((TRIM(rt0.c4, rt0.c4), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (NOT (0.37276279972853865)))) AND ((((x'')OR(rt0.c0)), (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)))))) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c4, x'', rt0.c0)) BETWEEN ((TRIM(rt0.c4, rt0.c4), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (NOT (0.37276279972853865)))) AND ((((x'')OR(rt0.c0)), (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)))))))) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c4, x'', rt0.c0)) BETWEEN ((TRIM(rt0.c4, rt0.c4), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (NOT (0.37276279972853865)))) AND ((((x'')OR(rt0.c0)), (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)))))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON NULL GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON NULL GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 HAVING AVG(MAX(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON NULL GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 HAVING (NOT (AVG(MAX(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON NULL GROUP BY rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 HAVING ((AVG(MAX(rt0.c1))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0)>>(v0.c0)))|(NULL))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)>>(v0.c0)))|(NULL))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0)>>(v0.c0)))|(NULL))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ('544327410') UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ('544327410'))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((('544327410') ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (((INSTR(rt0.c4, rt0.c0))LIKE((~ (rt0.c3))))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((INSTR(rt0.c4, rt0.c0))LIKE((~ (rt0.c3))))))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (((((INSTR(rt0.c4, rt0.c0))LIKE((~ (rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (- (COUNT(MIN(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (NOT ((- (COUNT(MIN(COUNT(rt0.c1))))))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (((- (COUNT(MIN(COUNT(rt0.c1)))))) ISNULL);
SELECT ALL MIN((((((((((rt0.c2)OR(x'')))AND(v0.c0)))OR(v0.c0)))OR(rt0.c3)) IN ())) FROM v0, rt0 ORDER BY (LIKELIHOOD(DISTINCT rt0.c4, 0.3160789607422968) IN ()), ((COALESCE(rt0.c2, 'f减_5+''-2O', rt0.c0, rt0.c1, rt0.c1, rt0.c0))<=(TRIM(rt0.c1))) DESC;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))>=('0.6203552277147972'))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL))>=('0.6203552277147972'))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0) NOT NULL))>=('0.6203552277147972'))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c1) IS TRUE))IS(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c1) IS TRUE))IS(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c1) IS TRUE))IS(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN (v0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((((((((CASE WHEN MAX(rt0.c1) THEN rt0.c3 ELSE TOTAL('') END)OR(TOTAL(x''))))OR(GROUP_CONCAT(COUNT(*)))))AND(((((rt0.c4)OR(MIN(MIN(rt0.c4)))))AND(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((679189881)) AND ((rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (((((((((CASE WHEN MAX(rt0.c1) THEN rt0.c3 ELSE TOTAL('') END)OR(TOTAL(x''))))OR(GROUP_CONCAT(COUNT(*)))))AND(((((rt0.c4)OR(MIN(MIN(rt0.c4)))))AND(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((679189881)) AND ((rt0.c3))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((((((((((CASE WHEN MAX(rt0.c1) THEN rt0.c3 ELSE TOTAL('') END)OR(TOTAL(x''))))OR(GROUP_CONCAT(COUNT(*)))))AND(((((rt0.c4)OR(MIN(MIN(rt0.c4)))))AND(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((679189881)) AND ((rt0.c3)))))) ISNULL);
SELECT MIN((((CASE rt0.c4  WHEN v0.c0 THEN v0.c0 END, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '0.1332710422594081' END, ((x'') IS TRUE), ((rt0.c0)GLOB(rt0.c4)), (rt0.c0 IN (rt0.c3, rt0.c1))))==((((rt0.c4) ISNULL), ((((rt0.c4)AND(v0.c0)))AND(rt0.c1)), ((v0.c0)GLOB(rt0.c3)), rt0.c3 COLLATE NOCASE, ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))))) FROM v0, rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN rt0.c3 END AS INTEGER) DESC  NULLS FIRST, (CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END IN ())  NULLS FIRST;
SELECT ALL rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((('캬6') NOT BETWEEN (MAX(rt0.c4, x'')) AND (ABS(rt0.c4)))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT ((('캬6') NOT BETWEEN (MAX(rt0.c4, x'')) AND (ABS(rt0.c4)))))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((((('캬6') NOT BETWEEN (MAX(rt0.c4, x'')) AND (ABS(rt0.c4)))) ISNULL));
SELECT ALL rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT((NOT (COUNT('0.5758644508402706')))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT((NOT (COUNT('0.5758644508402706')))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT((NOT (COUNT('0.5758644508402706'))))) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON CASE ((0.08771241421571041)*(rt0.c1))  WHEN (+ (v0.c0)) THEN 0.2584375460711259 END;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON CASE ((0.08771241421571041)*(rt0.c1))  WHEN (+ (v0.c0)) THEN 0.2584375460711259 END WHERE ((((x'')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON CASE ((0.08771241421571041)*(rt0.c1))  WHEN (+ (v0.c0)) THEN 0.2584375460711259 END WHERE ((NOT ((((x'')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON CASE ((0.08771241421571041)*(rt0.c1))  WHEN (+ (v0.c0)) THEN 0.2584375460711259 END WHERE ((((((x'')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) ISNULL));
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON CASE ((0.08771241421571041)*(rt0.c1))  WHEN (+ (v0.c0)) THEN 0.2584375460711259 END;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0 COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0 NOT INDEXED WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)))) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 HAVING ((TOTAL(MIN(AVG(rt0.c0)))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c1, 0.9505634553270639)) AND (COUNT(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 HAVING (NOT (((TOTAL(MIN(AVG(rt0.c0)))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c1, 0.9505634553270639)) AND (COUNT(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 HAVING ((((TOTAL(MIN(AVG(rt0.c0)))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c1, 0.9505634553270639)) AND (COUNT(rt0.c1)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((-290181580)AND(v0.c0)))AND(v0.c0)) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((-290181580)AND(v0.c0)))AND(v0.c0)) IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((-290181580)AND(v0.c0)))AND(v0.c0)) IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c4 FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (((rt0.c3)IS(rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (((rt0.c3)IS(rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (((rt0.c3)IS(rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))OR((rt0.c2 IN (rt0.c3, rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(v0.c0 AS REAL))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))OR((rt0.c2 IN (rt0.c3, rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(v0.c0 AS REAL))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))OR((rt0.c2 IN (rt0.c3, rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(v0.c0 AS REAL))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((+ (CAST(rt0.c3 AS NUMERIC)))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT ((+ (CAST(rt0.c3 AS NUMERIC)))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((((+ (CAST(rt0.c3 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0;
SELECT rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING ((v0.c0 COLLATE BINARY) IS FALSE) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING (NOT (((v0.c0 COLLATE BINARY) IS FALSE))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING ((((v0.c0 COLLATE BINARY) IS FALSE)) ISNULL);
SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0;
SELECT rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING ((v0.c0 COLLATE BINARY) IS FALSE) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING (NOT (((v0.c0 COLLATE BINARY) IS FALSE))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING ((((v0.c0 COLLATE BINARY) IS FALSE)) ISNULL);
SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((rt0.c3) IS TRUE)) IS TRUE)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((rt0.c3) IS TRUE)) IS TRUE)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((rt0.c3) IS TRUE)) IS TRUE)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((rt0.c3)&(rt0.c3))) NOTNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c3)&(rt0.c3))) NOTNULL)))) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((rt0.c3)&(rt0.c3))) NOTNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING MAX(GROUP_CONCAT(COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(COUNT(*)))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING ((MAX(GROUP_CONCAT(COUNT(COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)-(v0.c0))) IS TRUE)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)-(v0.c0))) IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)-(v0.c0))) IS TRUE)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CASE WHEN (~ (v0.c0)) THEN rt0.c1 WHEN NULL THEN ((rt0.c3) NOTNULL) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c0) NOT NULL) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0) NOTNULL) WHEN CAST(rt0.c4 AS NUMERIC) THEN CASE WHEN rt0.c4 THEN v0.c0 END ELSE LIKELY(rt0.c2) END) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CASE WHEN (~ (v0.c0)) THEN rt0.c1 WHEN NULL THEN ((rt0.c3) NOTNULL) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c0) NOT NULL) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0) NOTNULL) WHEN CAST(rt0.c4 AS NUMERIC) THEN CASE WHEN rt0.c4 THEN v0.c0 END ELSE LIKELY(rt0.c2) END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CASE WHEN (~ (v0.c0)) THEN rt0.c1 WHEN NULL THEN ((rt0.c3) NOTNULL) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c0) NOT NULL) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0) NOTNULL) WHEN CAST(rt0.c4 AS NUMERIC) THEN CASE WHEN rt0.c4 THEN v0.c0 END ELSE LIKELY(rt0.c2) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((LAST_INSERT_ROWID()) ISNULL) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((LAST_INSERT_ROWID()) ISNULL) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c1 HAVING TOTAL(TOTAL(v0.c0)) UNION ALL SELECT rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((LAST_INSERT_ROWID()) ISNULL) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c1 HAVING (NOT (TOTAL(TOTAL(v0.c0)))) UNION ALL SELECT rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((LAST_INSERT_ROWID()) ISNULL) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c1 HAVING ((TOTAL(TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)|(v0.c0)) IN ())) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((rt0.c0)|(v0.c0)) IN ())))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)|(v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('0.19849750003628464') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('0.19849750003628464'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('0.19849750003628464') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING CAST(COUNT(COUNT(*)) AS NUMERIC) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (CAST(COUNT(COUNT(*)) AS NUMERIC))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((CAST(COUNT(COUNT(*)) AS NUMERIC)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(((((v0.c0)OR(x'')))OR(v0.c0)) AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((((v0.c0)OR(x'')))OR(v0.c0)) AS TEXT)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(((((v0.c0)OR(x'')))OR(v0.c0)) AS TEXT)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 WHERE (((((0.454015683125627 COLLATE BINARY)OR((((rt0.c0, rt0.c2, rt0.c2))>=(('~d', rt0.c0, rt0.c0))))))AND('1321311616'))) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((0.454015683125627 COLLATE BINARY)OR((((rt0.c0, rt0.c2, rt0.c2))>=(('~d', rt0.c0, rt0.c0))))))AND('1321311616'))))) GROUP BY rt0.c4, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c3 FROM rt0 WHERE (((((((0.454015683125627 COLLATE BINARY)OR((((rt0.c0, rt0.c2, rt0.c2))>=(('~d', rt0.c0, rt0.c0))))))AND('1321311616'))) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(x'de52')))AND(((v0.c0) NOT NULL)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0 COLLATE RTRIM)OR(x'de52')))AND(((v0.c0) NOT NULL)))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0 COLLATE RTRIM)OR(x'de52')))AND(((v0.c0) NOT NULL)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((x'') IS FALSE)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((x'') IS FALSE)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((x'') IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c0 THEN '0.22047292395331208' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 END))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT ((- (CASE rt0.c1  WHEN rt0.c0 THEN '0.22047292395331208' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 END))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((((- (CASE rt0.c1  WHEN rt0.c0 THEN '0.22047292395331208' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 END))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0)))%(')\rD'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)IS NOT(v0.c0)))%(')\rD'))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))%(')\rD'))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((-965882585)LIKE(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((-965882585)LIKE(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((-965882585)LIKE(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (CASE WHEN (rt0.c2 IN (rt0.c4, '')) THEN rt0.c4 WHEN 0.3832220057562309 COLLATE BINARY THEN x'' WHEN CAST(rt0.c0 AS TEXT) THEN SQLITE_COMPILEOPTION_GET(rt0.c1) END) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (CASE WHEN (rt0.c2 IN (rt0.c4, '')) THEN rt0.c4 WHEN 0.3832220057562309 COLLATE BINARY THEN x'' WHEN CAST(rt0.c0 AS TEXT) THEN SQLITE_COMPILEOPTION_GET(rt0.c1) END))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((CASE WHEN (rt0.c2 IN (rt0.c4, '')) THEN rt0.c4 WHEN 0.3832220057562309 COLLATE BINARY THEN x'' WHEN CAST(rt0.c0 AS TEXT) THEN SQLITE_COMPILEOPTION_GET(rt0.c1) END) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY GROUP BY rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c1, rt0.c3, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY GROUP BY rt0.c1, rt0.c3, v0.c0 HAVING AVG(TOTAL(v0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c3, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY GROUP BY rt0.c1, rt0.c3, v0.c0 HAVING (NOT (AVG(TOTAL(v0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY GROUP BY rt0.c1, rt0.c3, v0.c0 HAVING ((AVG(TOTAL(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN (NOT (v0.c0)) THEN ((NULL) NOT NULL) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (NOT (v0.c0)) THEN ((NULL) NOT NULL) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE WHEN (NOT (v0.c0)) THEN ((NULL) NOT NULL) END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)||(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)||(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)||(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((- (CAST(v0.c0 AS BLOB)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((NOT ((- (CAST(v0.c0 AS BLOB)))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((((- (CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c4 FROM rt0, v0 WHERE (rt0.c4 COLLATE RTRIM) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT (rt0.c4 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0, v0 WHERE (((rt0.c4 COLLATE RTRIM) ISNULL));
SELECT rt0.c1, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c2)!=(rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c2)<>(rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c2)!=(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))=(CASE WHEN rt0.c0 THEN x'1382' END))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))=(CASE WHEN rt0.c0 THEN x'1382' END))))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))==(CASE WHEN rt0.c0 THEN x'1382' END))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT SUM(((((rt0.c2)<<(rt0.c0))) ISNULL)) FROM rt0 ORDER BY ((((rt0.c3)*(rt0.c0)))<>(((((rt0.c4)OR(rt0.c2)))AND(rt0.c3))))  NULLS LAST, (((~ (rt0.c0)))<(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)) ASC  NULLS FIRST;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (CAST(CAST(rt0.c4 AS TEXT) AS REAL)) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (CAST(CAST(rt0.c4 AS TEXT) AS REAL)))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((CAST(CAST(rt0.c4 AS TEXT) AS REAL)) ISNULL));
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT rt0.c0, v0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (LIKELIHOOD(rt0.c3, 0.7785441332126525))) GROUP BY rt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c0, v0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (LIKELIHOOD(rt0.c3, 0.7785441332126525))) WHERE (((CAST(rt0.c0 AS NUMERIC))|(((((((((rt0.c0)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))OR(v0.c0))))) GROUP BY rt0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (LIKELIHOOD(rt0.c3, 0.7785441332126525))) WHERE ((NOT (((CAST(rt0.c0 AS NUMERIC))|(((((((((rt0.c0)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))OR(v0.c0))))))) GROUP BY rt0.c0, v0.c0, rt0.c3 UNION SELECT rt0.c0, v0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (LIKELIHOOD(rt0.c3, 0.7785441332126525))) WHERE (((((CAST(rt0.c0 AS NUMERIC))|(((((((((rt0.c0)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))OR(v0.c0))))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3;
SELECT rt0.c0, v0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (LIKELIHOOD(rt0.c3, 0.7785441332126525))) GROUP BY rt0.c0, v0.c0, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING CASE ((((AVG(v0.c0))OR(v0.c0)))OR(COUNT(MIN(GROUP_CONCAT(rt0.c0)))))  WHEN MIN(COUNT(*)) THEN ((COUNT(*))*(AVG(v0.c0))) END UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE ((((AVG(v0.c0))OR(v0.c0)))OR(COUNT(MIN(GROUP_CONCAT(rt0.c0)))))  WHEN MIN(COUNT(*)) THEN ((COUNT(*))*(AVG(v0.c0))) END)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING ((CASE ((((AVG(v0.c0))OR(v0.c0)))OR(COUNT(MIN(GROUP_CONCAT(rt0.c0)))))  WHEN MIN(COUNT(*)) THEN ((COUNT(*))*(AVG(v0.c0))) END) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END AS BLOB);
SELECT * FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END AS BLOB) WHERE (CASE CAST(rt0.c3 AS TEXT)  WHEN rt0.c0 THEN rt0.c3 WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c2))<=((rt0.c1))) WHEN LIKELIHOOD(x'c971', 0.36661938308616815) THEN (((x'', NULL, NULL))==((rt0.c0, rt0.c3, rt0.c1))) ELSE (((rt0.c3))>=((rt0.c2))) END) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END AS BLOB) WHERE ((NOT (CASE CAST(rt0.c3 AS TEXT)  WHEN rt0.c0 THEN rt0.c3 WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c2))<=((rt0.c1))) WHEN LIKELIHOOD(x'c971', 0.36661938308616815) THEN (((x'', NULL, NULL))=((rt0.c0, rt0.c3, rt0.c1))) ELSE (((rt0.c3))>=((rt0.c2))) END))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END AS BLOB) WHERE (((CASE CAST(rt0.c3 AS TEXT)  WHEN rt0.c0 THEN rt0.c3 WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c2))<=((rt0.c1))) WHEN LIKELIHOOD(x'c971', 0.36661938308616815) THEN (((x'', NULL, NULL))=((rt0.c0, rt0.c3, rt0.c1))) ELSE (((rt0.c3))>=((rt0.c2))) END) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END AS BLOB);
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CAST(((rt0.c3)IS NOT(0.5220157603821352)) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c3)IS NOT(0.5220157603821352)) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(((rt0.c3)IS NOT(0.5220157603821352)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((((- (rt0.c3)))OR(LIKELIHOOD(rt0.c4, 0.024455362742805464))))OR(rt0.c4 COLLATE NOCASE))) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((((((- (rt0.c3)))OR(LIKELIHOOD(rt0.c4, 0.024455362742805464))))OR(rt0.c4 COLLATE NOCASE))))) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((((((- (rt0.c3)))OR(LIKELIHOOD(rt0.c4, 0.024455362742805464))))OR(rt0.c4 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING AVG(COUNT(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (AVG(COUNT(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((AVG(COUNT(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)!=(rt0.c1)) AS NUMERIC);
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)<>(rt0.c1)) AS NUMERIC) WHERE ((NULLIF(x'', v0.c0) IN ())) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)!=(rt0.c1)) AS NUMERIC) WHERE ((NOT ((NULLIF(x'', v0.c0) IN ())))) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)<>(rt0.c1)) AS NUMERIC) WHERE ((((NULLIF(x'', v0.c0) IN ())) ISNULL));
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)!=(rt0.c1)) AS NUMERIC);
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c2) IS TRUE)))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((NOT ((NOT (((rt0.c2) IS TRUE)))))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((((NOT (((rt0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT rt0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c0)) GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c0)) WHERE ((((((rt0.c2, v0.c0, rt0.c3))<=((v0.c0, rt0.c2, rt0.c4)))) ISNULL)) GROUP BY rt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c0)) WHERE ((NOT ((((((rt0.c2, v0.c0, rt0.c3))<=((v0.c0, rt0.c2, rt0.c4)))) ISNULL)))) GROUP BY rt0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c0)) WHERE ((((((((rt0.c2, v0.c0, rt0.c3))<=((v0.c0, rt0.c2, rt0.c4)))) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c0)) GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))<>((rt0.c0))) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))!=((rt0.c0))) GROUP BY rt0.c3 HAVING NULL UNION ALL SELECT rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))<>((rt0.c0))) GROUP BY rt0.c3 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))<>((rt0.c0))) GROUP BY rt0.c3 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))<>((rt0.c0))) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))!=((rt0.c0))) GROUP BY rt0.c3 HAVING NULL UNION ALL SELECT rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))<>((rt0.c0))) GROUP BY rt0.c3 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))<>((rt0.c0))) GROUP BY rt0.c3 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3)|(rt0.c0))))<>((rt0.c0))) GROUP BY rt0.c3;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((~ (v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0)) COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((~ (v0.c0)) COLLATE BINARY) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON NULL;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON NULL WHERE ((CAST(rt0.c4 AS BLOB) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON NULL WHERE ((NOT ((CAST(rt0.c4 AS BLOB) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON NULL WHERE ((((CAST(rt0.c4 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON NULL;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, v0 WHERE (LTRIM(rt0.c3)) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, v0 WHERE ((NOT (LTRIM(rt0.c3)))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, v0 WHERE (((LTRIM(rt0.c3)) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((v0.c0)OR(v0.c0 COLLATE NOCASE)))OR(1.495125513E9))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((v0.c0)OR(v0.c0 COLLATE NOCASE)))OR(1.495125513E9))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((((v0.c0)OR(v0.c0 COLLATE NOCASE)))OR(1.495125513E9))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)>>(v0.c0)))>(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>>(v0.c0)))>(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)>>(v0.c0)))>(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)|(((v0.c0) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)|(((v0.c0) NOT NULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)|(((v0.c0) NOT NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((((((v0.c0)OR(MIN(TOTAL(COUNT(*))))))AND(rt0.c2)))LIKE((NOT (rt0.c4)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (((((((v0.c0)OR(MIN(TOTAL(COUNT(*))))))AND(rt0.c2)))LIKE((NOT (rt0.c4)))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((((((((v0.c0)OR(MIN(TOTAL(COUNT(*))))))AND(rt0.c2)))LIKE((NOT (rt0.c4))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)AND(x'')))OR(v0.c0)) COLLATE RTRIM) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(x'')))OR(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(x'')))OR(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))>(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))>(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))>(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN NULL WHEN (+ (rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) WHEN CASE rt0.c0  WHEN NULL THEN '0.35237745189133296' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c3)LIKE(rt0.c4)) END) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN NULL WHEN (+ (rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) WHEN CASE rt0.c0  WHEN NULL THEN '0.35237745189133296' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c3)LIKE(rt0.c4)) END))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN NULL WHEN (+ (rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) WHEN CASE rt0.c0  WHEN NULL THEN '0.35237745189133296' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c3)LIKE(rt0.c4)) END) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN (rt0.c2)) AS TEXT) GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN (rt0.c2)) AS TEXT) GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((AVG(COUNT(*)))-(((GROUP_CONCAT(MAX(v0.c0))) BETWEEN (COUNT(*)) AND (rt0.c4)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN (rt0.c2)) AS TEXT) GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (((AVG(COUNT(*)))-(((GROUP_CONCAT(MAX(v0.c0))) BETWEEN (COUNT(*)) AND (rt0.c4)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN (rt0.c2)) AS TEXT) GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((((AVG(COUNT(*)))-(((GROUP_CONCAT(MAX(v0.c0))) BETWEEN (COUNT(*)) AND (rt0.c4))))) ISNULL);
SELECT rt0.c3 FROM rt0, v0;
SELECT rt0.c3 FROM rt0, v0 WHERE ((+ (rt0.c4)) COLLATE RTRIM) UNION ALL SELECT rt0.c3 FROM rt0, v0 WHERE ((NOT ((+ (rt0.c4)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((((+ (rt0.c4)) COLLATE RTRIM) ISNULL));
SELECT rt0.c3 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((rt0.c3)) NOT BETWEEN ((-514764439)) AND ((x'ad1a')))) GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((-514764439)) AND ((x'ad1a')))))) GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((((rt0.c3)) NOT BETWEEN ((-514764439)) AND ((x'ad1a')))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE RTRIM)OR(rt0.c0)) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE RTRIM)OR(rt0.c0)) GROUP BY rt0.c4, rt0.c3 HAVING (- (((((MAX(MIN(rt0.c4)))OR(MIN(v0.c0))))AND(COUNT(rt0.c4))))) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE RTRIM)OR(rt0.c0)) GROUP BY rt0.c4, rt0.c3 HAVING (NOT ((- (((((MAX(MIN(rt0.c4)))OR(MIN(v0.c0))))AND(COUNT(rt0.c4))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE RTRIM)OR(rt0.c0)) GROUP BY rt0.c4, rt0.c3 HAVING (((- (((((MAX(MIN(rt0.c4)))OR(MIN(v0.c0))))AND(COUNT(rt0.c4)))))) ISNULL);
SELECT v0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM rt0, v0 WHERE (rt0.c0) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((~ (rt0.c4)))OR(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((~ (rt0.c4)))OR(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((~ (rt0.c4)))OR(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((v0.c0 IN (x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN (x''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN (x''))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING CAST(MIN(rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c2) AS NUMERIC))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING ((CAST(MIN(rt0.c2) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING CAST(MIN(rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c2) AS NUMERIC))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING ((CAST(MIN(rt0.c2) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)AND((- (v0.c0)))))AND((NOT (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((CASE WHEN v0.c0 THEN v0.c0 END)AND((- (v0.c0)))))AND((NOT (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((CASE WHEN v0.c0 THEN v0.c0 END)AND((- (v0.c0)))))AND((NOT (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((rt0.c0)<<(rt0.c4))) IS TRUE)) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)<<(rt0.c4))) IS TRUE)))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((((rt0.c0)<<(rt0.c4))) IS TRUE)) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0 COLLATE NOCASE, ((((((((v0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c4)), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))=((((v0.c0)+(rt0.c3)), (+ (rt0.c0)), ((v0.c0) IS FALSE)))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0 COLLATE NOCASE, ((((((((v0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c4)), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))==((((v0.c0)+(rt0.c3)), (+ (rt0.c0)), ((v0.c0) IS FALSE)))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c1 HAVING SUM(((COUNT(rt0.c4))<(rt0.c4))) UNION ALL SELECT rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0 COLLATE NOCASE, ((((((((v0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c4)), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))=((((v0.c0)+(rt0.c3)), (+ (rt0.c0)), ((v0.c0) IS FALSE)))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c1 HAVING (NOT (SUM(((COUNT(rt0.c4))<(rt0.c4))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0 COLLATE NOCASE, ((((((((v0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c4)), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))==((((v0.c0)+(rt0.c3)), (+ (rt0.c0)), ((v0.c0) IS FALSE)))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c1 HAVING ((SUM(((COUNT(rt0.c4))<(rt0.c4)))) ISNULL);
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1 COLLATE NOCASE, ((((((((((((rt0.c3)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)), rt0.c2))<=((((((rt0.c1)AND(NULL)))OR(rt0.c1)), rt0.c2, ((((0.39592496385931153)AND(v0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1 COLLATE NOCASE, ((((((((((((rt0.c3)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)), rt0.c2))<=((((((rt0.c1)AND(NULL)))OR(rt0.c1)), rt0.c2, ((((0.39592496385931153)AND(v0.c0)))OR(rt0.c0))))) WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c1 COLLATE NOCASE, ((((((((((((rt0.c3)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)), rt0.c2))<=((((((rt0.c1)AND(NULL)))OR(rt0.c1)), rt0.c2, ((((0.39592496385931153)AND(v0.c0)))OR(rt0.c0))))) WHERE ((NOT (((((rt0.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1 COLLATE NOCASE, ((((((((((((rt0.c3)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)), rt0.c2))<=((((((rt0.c1)AND(NULL)))OR(rt0.c1)), rt0.c2, ((((0.39592496385931153)AND(v0.c0)))OR(rt0.c0))))) WHERE (((((((rt0.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c1 COLLATE NOCASE, ((((((((((((rt0.c3)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)), rt0.c2))<=((((((rt0.c1)AND(NULL)))OR(rt0.c1)), rt0.c2, ((((0.39592496385931153)AND(v0.c0)))OR(rt0.c0)))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('AFPAP珂c') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('AFPAP珂c'))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((('AFPAP珂c') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 WHERE (-1093718318) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (-1093718318))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((-1093718318) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING TOTAL(AVG(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (TOTAL(AVG(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING ((TOTAL(AVG(rt0.c1))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((((rt0.c0)OR(x'')))AND(v0.c0)) IN ((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((rt0.c0)OR(x'')))AND(v0.c0)) IN ((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((rt0.c0)OR(x'')))AND(v0.c0)) IN ((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN x'' ELSE rt0.c1 END COLLATE RTRIM) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN x'' ELSE rt0.c1 END COLLATE RTRIM))) GROUP BY rt0.c3, rt0.c4 UNION SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN x'' ELSE rt0.c1 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(MAX(MIN(COUNT(v0.c0))) AS INTEGER) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(MAX(MIN(COUNT(v0.c0))) AS INTEGER))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MAX(MIN(COUNT(v0.c0))) AS INTEGER)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (NULL) AND (rt0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (NULL) AND (rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE ((((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (NULL) AND (rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE WHEN 0X357580b3 THEN rt0.c0 END) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (CASE WHEN 1.495125513E9 THEN rt0.c4 END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CASE WHEN 0X357580b3 THEN rt0.c0 END) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (CASE WHEN 1.495125513E9 THEN rt0.c4 END))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE WHEN 0X357580b3 THEN rt0.c0 END) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (CASE WHEN 1.495125513E9 THEN rt0.c4 END))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((UPPER(DISTINCT v0.c0))<(rt0.c0))) GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((UPPER(DISTINCT v0.c0))<(rt0.c0))))) GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((UPPER(DISTINCT v0.c0))<(rt0.c0))) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN ('bd*nnpTc') AND ((v0.c0 IN (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) BETWEEN ('bd*nnpTc') AND ((v0.c0 IN (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS REAL)) BETWEEN ('bd*nnpTc') AND ((v0.c0 IN (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((v0.c0 IN (NULL, rt0.c0)) IN ());
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((v0.c0 IN (NULL, rt0.c0)) IN ()) WHERE (CAST(0.9845116850068174 AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((v0.c0 IN (NULL, rt0.c0)) IN ()) WHERE ((NOT (CAST(0.9845116850068174 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((v0.c0 IN (NULL, rt0.c0)) IN ()) WHERE (((CAST(0.9845116850068174 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((v0.c0 IN (NULL, rt0.c0)) IN ());
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON (((((((v0.c0))<>((rt0.c3))))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1) ISNULL))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON (((((((v0.c0))!=((rt0.c3))))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1) ISNULL))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((AVG(MAX(COUNT(*)))) NOT NULL) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON (((((((v0.c0))<>((rt0.c3))))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1) ISNULL))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (((AVG(MAX(COUNT(*)))) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON (((((((v0.c0))<>((rt0.c3))))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1) ISNULL))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((((AVG(MAX(COUNT(*)))) NOT NULL)) ISNULL);
SELECT ALL SUM((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)), ((v0.c0)||(v0.c0)), LIKELIHOOD(v0.c0, 0.9605416054313337))) AND ((((NULL) BETWEEN (v0.c0) AND (v0.c0)), NULLIF(v0.c0, v0.c0), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) FROM v0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((0.8876168107109206 IN ()))AND(CAST(rt0.c1 AS TEXT))))AND(((NULL) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((0.8876168107109206 IN ()))AND(CAST(rt0.c1 AS TEXT))))AND(((NULL) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((0.8876168107109206 IN ()))AND(CAST(rt0.c1 AS TEXT))))AND(((NULL) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'c2c8')))) IS TRUE);
SELECT DISTINCT rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'c2c8')))) IS TRUE) WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-217303418')) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'c2c8')))) IS TRUE) WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-217303418')) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'c2c8')))) IS TRUE) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-217303418')) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'c2c8')))) IS TRUE);
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (CASE (NOT (v0.c0))  WHEN rt0.c1 THEN STRFTIME(v0.c0, v0.c0, rt0.c1) WHEN ((rt0.c3)|(rt0.c2)) THEN (NOT (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c3 COLLATE RTRIM END) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE (NOT (v0.c0))  WHEN rt0.c1 THEN STRFTIME(v0.c0, v0.c0, rt0.c1) WHEN ((rt0.c3)|(rt0.c2)) THEN (NOT (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c3 COLLATE RTRIM END))) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((CASE (NOT (v0.c0))  WHEN rt0.c1 THEN STRFTIME(v0.c0, v0.c0, rt0.c1) WHEN ((rt0.c3)|(rt0.c2)) THEN (NOT (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c3 COLLATE RTRIM END) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((TOTAL('-1218403098'))|(AVG(SUM(x'')))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((TOTAL('-1218403098'))|(AVG(SUM(x'')))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((TOTAL('-1218403098'))|(AVG(SUM(x''))))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c1, rt0.c4, rt0.c2))<((rt0.c0, 0xffffffffd49d78be, rt0.c2)))) IS TRUE)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c4, rt0.c2))<((rt0.c0, 0xffffffffd49d78be, rt0.c2)))) IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((rt0.c1, rt0.c4, rt0.c2))<((rt0.c0, 0xffffffffd49d78be, rt0.c2)))) IS TRUE)) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0 WHERE (((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))<>(((rt0.c1) IS TRUE)))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0, rt0 WHERE ((NOT (((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))<>(((rt0.c1) IS TRUE)))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0, rt0 WHERE (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))<>(((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(COUNT(v0.c0)) IN (MAX(MAX(v0.c0)), COUNT(MAX(MAX(TOTAL(MIN(COUNT(COUNT(MIN(COUNT(*))))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(COUNT(v0.c0)) IN (MAX(MAX(v0.c0)), COUNT(MAX(MAX(TOTAL(MIN(COUNT(COUNT(MIN(COUNT(*))))))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(COUNT(v0.c0)) IN (MAX(MAX(v0.c0)), COUNT(MAX(MAX(TOTAL(MIN(COUNT(COUNT(MIN(COUNT(*)))))))))))) ISNULL);
SELECT MAX(((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))>=(UNLIKELY(rt0.c4)))) FROM rt0, v0 ORDER BY CAST(((rt0.c4) BETWEEN (x'2c36') AND (rt0.c1)) AS TEXT);
SELECT rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE (((((NULL)AND(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2)AND(rt0.c1))))) UNION ALL SELECT rt0.c3 FROM v0, rt0 WHERE ((NOT (((((NULL)AND(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2)AND(rt0.c1))))))) UNION ALL SELECT rt0.c3 FROM v0, rt0 WHERE (((((((NULL)AND(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2)AND(rt0.c1))))) ISNULL));
SELECT rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (CASE WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE (+ (rt0.c3)) END) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE (+ (rt0.c3)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (((CASE WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE (+ (rt0.c3)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((CHANGES()) NOTNULL) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((CHANGES()) NOTNULL))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((CHANGES()) NOTNULL)) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((CHANGES()) NOTNULL) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((CHANGES()) NOTNULL))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((CHANGES()) NOTNULL)) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((rt0.c2)LIKE(v0.c0)))) AND ((rt0.c0)));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((rt0.c2)LIKE(v0.c0)))) AND ((rt0.c0))) WHERE (rt0.c0) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((rt0.c2)LIKE(v0.c0)))) AND ((rt0.c0))) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((rt0.c2)LIKE(v0.c0)))) AND ((rt0.c0))) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((rt0.c2)LIKE(v0.c0)))) AND ((rt0.c0)));
