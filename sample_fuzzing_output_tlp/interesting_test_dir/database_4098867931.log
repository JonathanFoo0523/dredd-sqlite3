-- Time: 2024/06/09 03:44:18
-- Database: database31
-- Database version: 3.40.0
-- seed value: 4098867931
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, compress=likely, uncompress=likely); -- 1ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0) VALUES (x'', 0.5658398027550294), (NULL, 1183834338), (0.8807818465341913, ''), (0.716411412898914, NULL), (NULL, '-1687878674'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x''); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.8807818465341913, '-2091944462', 0.9634958567565277); -- 1ms;
UPDATE vt0 SET (c1)=(400748908); -- 1ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1650334982); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 776738106); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '56400'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 480588557); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (0.716411412898914, x'2991'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=('GxE鮩J5'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59127'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1876675238);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (0.716411412898914, '0.8807818465341913', 'W1uq#\W,n'), (x'97b7', 'W1uq#\W,n', NULL), (-1.876675238E9, '-1666827152', x'00e6'), (0.7371862191452696, NULL, x'a6cf'), (x'', '1494097306', NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), (NULL), (0x7875477d); -- 0ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
UPDATE vt0 SET (c0, c2, c0)=(0.40842700148500577, 0.8618666595640877, NULL) WHERE (~ (-1666827152)); -- 1ms;
UPDATE OR FAIL rt0 SET (c2)=(x'') WHERE (CAST(rt0.c2 AS REAL) IN ()); -- 0ms;
DELETE FROM vt0; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET c1=x''; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1155209607);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT vt1 SET c0=-1216316924, c0=0.6060378467509132; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES ('2020951933', 0.8618666595640877); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (NULL), (NULL), ('-1658601570'), (''), ('Q奏'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c2, c0, c1) VALUES (x'bb09', 'z%4', x'c490'), ('874894350', NULL, '-1216316924'), ('tt', 0.7826145052376674, 2.020951933E9); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='1247472335' WHERE (((NOT (rt0.c1))) IS TRUE); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0X1c99fe01), ('0.5658398027550294'), ('꜈M'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0xffffffffff6e84b1, '', 'TRUE'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1721725690);\n; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1, c2) VALUES (x'', NULL, '277429009'), (0xffffffffb58b7c2d, 4.79854081E8, -1713215935), (x'', NULL, x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE vt0 SET c2='363646759'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('L+}*AH'), (((((((NULL)AND(0x26969734)))AND('h腣mJ?￿l-'))) NOT BETWEEN ((((NULL))>(('-1620686301')))) AND (CAST(NULL AS REAL)))), (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('874894350', -1761717357, '479854081'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.2862219965150402; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('0.716411412898914'); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-484271077,4');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
PRAGMA main.ignore_check_constraints = false; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0, c1) VALUES ('-484271077', 0.10459346684678295, NULL); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('l+}*ah'); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0, c2, c1) VALUES (0.6094741103827629, x'd096', x''); -- 0ms;
PRAGMA main.cell_size_check = false; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=268839658,13');\n; -- 1ms;
PRAGMA main.short_column_names = true; -- 0ms;
VACUUM; -- 3ms;
INSERT OR IGNORE INTO vt0 VALUES ('485334937', '', NULL); -- 1ms;
CREATE UNIQUE INDEX i44 ON t0(c0) WHERE ((((x'')AND(c0)))OR(c0)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('q竘J6', x''), (647403316, -372339400), (x'', NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 612870423); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4769'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt1 SET c0=x''; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('-1413441157'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.18487846025231602); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0x42b3fa00), (NULL), (0.1922509266887371); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'ee26'); -- 1ms;
CREATE INDEX IF NOT EXISTS i16 ON t0(c0 COLLATE NOCASE) WHERE ((c0 COLLATE BINARY)GLOB(((c0)=(c0)))); -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 1ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0=0.6329537164653821 WHERE ((((x'')AND(((vt1.c0)/(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))); -- 0ms;
UPDATE vt0 SET (c1)=(x''); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1084845815,6');\n; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-967824724'), (x'55ea'), (0.36598547802232473); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1842953954); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c73; -- 1ms;
UPDATE rt0 SET (c0)=(0.946768290097357) WHERE ((CASE WHEN rt0.c0 THEN -1.216316924E9 END) NOTNULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(x''); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
PRAGMA temp.secure_delete = true; -- 0ms;
PRAGMA journal_size_limit = 5820305310323232576; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES ('', x''), (0.10459346684678295, 'Ny#kVq>~^'), (0.14341447475688718, 8.7489435E8); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt1 SET c0=x'52a2', c0=0.9402761669803323, c0=x'' WHERE (((vt1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE))); -- 1ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=(x'') WHERE (((rt0.c2 COLLATE RTRIM))>((((rt0.c0) ISNULL)))); -- 1ms;
UPDATE vt0 SET c0='-1761717357'; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.716411412898914); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21555'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '17257'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '33274'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA main.default_cache_size = 1478105331; -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2, c2)=(0.4442950685695112, 0xffffffff834f75f2) WHERE ((((vt0.c1)*(vt0.c0))) NOT BETWEEN (json_patch(vt0.c2, vt0.c2)) AND ('&''䤃')); -- 1ms;
UPDATE OR IGNORE t0 SET c0=0.5989017594533674; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('gJ변n('), ('-1413441157'), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c2=x'', c0=''; -- 0ms;
UPDATE vt0 SET (c1)=(2102615717) WHERE ((((((2.77429009E8)OR(vt0.c2)))AND(vt0.c1))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.3948136715474926, c0='eBlP(' WHERE ((CAST(t0.c0 AS BLOB))|((t0.c0 IN ()))); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES ('&''䤃', 0.867346280996665); -- 0ms;
INSERT OR FAIL INTO vt0(c0, c2) VALUES ('-95985221', ''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c4; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, vt1, rt0, t0;
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (((((2.68839658E8, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, NULL)) AND ((vt1.c0, vt0.c0, rt0.c0))) IN ((((vt0.c1, t0.c4, rt0.c2))!=((NULL, t0.c4, rt0.c1)))))) UNION ALL SELECT * FROM vt0, vt1, rt0, t0 WHERE ((NOT (((((2.68839658E8, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, NULL)) AND ((vt1.c0, vt0.c0, rt0.c0))) IN ((((vt0.c1, t0.c4, rt0.c2))<>((NULL, t0.c4, rt0.c1)))))))) UNION ALL SELECT * FROM vt0, vt1, rt0, t0 WHERE (((((((2.68839658E8, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, NULL)) AND ((vt1.c0, vt0.c0, rt0.c0))) IN ((((vt0.c1, t0.c4, rt0.c2))!=((NULL, t0.c4, rt0.c1)))))) ISNULL));
SELECT * FROM vt0, vt1, rt0, t0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((CASE vt0.c0  WHEN NULL THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((CASE vt0.c0  WHEN NULL THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((CASE vt0.c0  WHEN NULL THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT vt0.c1 FROM rt0 INDEXED BY i44, vt0, vt1 GROUP BY vt0.c1;
SELECT t0.c4, vt0.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON UNLIKELY(DISTINCT (rt0.c2 IN ())) LEFT OUTER JOIN vt1 ON ((((CAST(t0.c4 AS NUMERIC))OR(NULL)))OR(vt0.c2)) RIGHT OUTER JOIN t0 ON (- ((t0.c4 IN ()))) GROUP BY t0.c4, vt0.c1, rt0.c2, vt0.c0;
SELECT ALL MIN(((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c1)))+((- ('-1625150878'))))) FROM rt0, vt0 ORDER BY x'' ASC;
SELECT * FROM rt0, vt0, t0, vt1;
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) IN ())) UNION ALL SELECT * FROM rt0, vt0, t0, vt1 WHERE ((NOT ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) IN ())))) UNION ALL SELECT * FROM rt0, vt0, t0, vt1 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) IN ())) ISNULL));
SELECT * FROM rt0, vt0, t0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((UNLIKELY(vt0.c1)) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((UNLIKELY(vt0.c1)) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((UNLIKELY(vt0.c1)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c4, vt1.c0, rt0.c0, rt0.c2 FROM t0, vt1, rt0 GROUP BY t0.c4, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL t0.c4, vt1.c0, rt0.c0, rt0.c2 FROM t0, vt1, rt0 WHERE (TRIM(((rt0.c0)>(t0.c4)))) GROUP BY t0.c4, vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL t0.c4, vt1.c0, rt0.c0, rt0.c2 FROM t0, vt1, rt0 WHERE ((NOT (TRIM(((rt0.c0)>(t0.c4)))))) GROUP BY t0.c4, vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL t0.c4, vt1.c0, rt0.c0, rt0.c2 FROM t0, vt1, rt0 WHERE (((TRIM(((rt0.c0)>(t0.c4)))) ISNULL)) GROUP BY t0.c4, vt1.c0, rt0.c0, rt0.c2;
SELECT t0.c4, vt1.c0, rt0.c0, rt0.c2 FROM t0, vt1, rt0 GROUP BY t0.c4, vt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0;
SELECT rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0 HAVING x'' UNION ALL SELECT rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0 HAVING ((x'') ISNULL);
SELECT rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0;
SELECT rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0 HAVING x'' UNION ALL SELECT rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0 HAVING ((x'') ISNULL);
SELECT rt0.c1, vt0.c2, vt1.c0 FROM rt0, vt1, t0, vt0 GROUP BY rt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1 CROSS JOIN t0 ON rt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1 CROSS JOIN t0 ON rt0.c1 WHERE ((rt0.c0 COLLATE BINARY IN ())) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1 CROSS JOIN t0 ON rt0.c1 WHERE ((NOT ((rt0.c0 COLLATE BINARY IN ())))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1 CROSS JOIN t0 ON rt0.c1 WHERE ((((rt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1 CROSS JOIN t0 ON rt0.c1;
SELECT DISTINCT * FROM vt0, t0, rt0, vt1;
SELECT DISTINCT * FROM vt0, t0, rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, t0, rt0, vt1 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, t0, rt0, vt1 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0, vt1;
SELECT ALL t0.c4, vt0.c0, vt1.c0, vt0.c2 FROM vt0, t0 NOT INDEXED, rt0, vt1 GROUP BY t0.c4, vt0.c0, vt1.c0, vt0.c2;
SELECT t0.c4, vt0.c0, vt1.c0, vt0.c2 FROM vt0, t0, rt0, vt1 WHERE ((('899757160')||(((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(t0.c4)))OR(vt0.c1))))) GROUP BY t0.c4, vt0.c0, vt1.c0, vt0.c2 UNION SELECT ALL t0.c4, vt0.c0, vt1.c0, vt0.c2 FROM vt0, t0, rt0, vt1 WHERE ((NOT ((('899757160')||(((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(t0.c4)))OR(vt0.c1))))))) GROUP BY t0.c4, vt0.c0, vt1.c0, vt0.c2 UNION SELECT t0.c4, vt0.c0, vt1.c0, vt0.c2 FROM vt0, t0, rt0, vt1 WHERE ((((('899757160')||(((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(t0.c4)))OR(vt0.c1))))) ISNULL)) GROUP BY t0.c4, vt0.c0, vt1.c0, vt0.c2;
SELECT ALL t0.c4, vt0.c0, vt1.c0, vt0.c2 FROM vt0, t0 NOT INDEXED, rt0, vt1 GROUP BY t0.c4, vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 HAVING rt0.c2 UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 HAVING (NOT (rt0.c2)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 HAVING ((rt0.c2) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 HAVING rt0.c2 UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 HAVING (NOT (rt0.c2)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 HAVING ((rt0.c2) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)<=(rt0.c1)))AND(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON (NOT (vt1.c0)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, t0.c4;
SELECT * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE (HEX(vt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT (HEX(vt0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE (((HEX(vt0.c0) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2 FROM vt0, vt1, rt0, t0 GROUP BY vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2 FROM vt0, vt1, rt0, t0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c4)))==((((rt0.c0, rt0.c1, rt0.c0))>=((vt0.c0, rt0.c1, vt0.c1)))))) GROUP BY vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2 UNION SELECT vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2 FROM vt0, vt1, rt0, t0 NOT INDEXED WHERE ((NOT (((((vt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c4)))=((((rt0.c0, rt0.c1, rt0.c0))>=((vt0.c0, rt0.c1, vt0.c1)))))))) GROUP BY vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2 UNION SELECT vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2 FROM vt0, vt1, rt0, t0 WHERE (((((((vt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c4)))=((((rt0.c0, rt0.c1, rt0.c0))>=((vt0.c0, rt0.c1, vt0.c1)))))) ISNULL)) GROUP BY vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2 FROM vt0, vt1, rt0, t0 GROUP BY vt1.c0, rt0.c1, vt0.c2, t0.c4, rt0.c2;
SELECT rt0.c1, t0.c4, vt0.c1, vt0.c0, vt0.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c0 INNER JOIN vt0 ON CAST('JoXE' AS NUMERIC) GROUP BY rt0.c1, t0.c4, vt0.c1, vt0.c0, vt0.c2, rt0.c2;
SELECT rt0.c1, t0.c4, vt0.c1, vt0.c0, vt0.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c0 INNER JOIN vt0 ON CAST('JoXE' AS NUMERIC) GROUP BY rt0.c1, t0.c4, vt0.c1, vt0.c0, vt0.c2, rt0.c2 HAVING COUNT(CAST(TOTAL(GROUP_CONCAT(rt0.c0)) AS BLOB)) UNION ALL SELECT rt0.c1, t0.c4, vt0.c1, vt0.c0, vt0.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c0 INNER JOIN vt0 ON CAST('JoXE' AS NUMERIC) GROUP BY rt0.c1, t0.c4, vt0.c1, vt0.c0, vt0.c2, rt0.c2 HAVING (NOT (COUNT(CAST(TOTAL(GROUP_CONCAT(rt0.c0)) AS BLOB)))) UNION ALL SELECT ALL rt0.c1, t0.c4, vt0.c1, vt0.c0, vt0.c2, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c0 INNER JOIN vt0 ON CAST('JoXE' AS NUMERIC) GROUP BY rt0.c1, t0.c4, vt0.c1, vt0.c0, vt0.c2, rt0.c2 HAVING ((COUNT(CAST(TOTAL(GROUP_CONCAT(rt0.c0)) AS BLOB))) ISNULL);
SELECT ALL * FROM rt0, vt1, t0, vt0;
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (((((((NULL)>>(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))OR((rt0.c1 IN ())))) UNION ALL SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE ((NOT (((((((NULL)>>(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))OR((rt0.c1 IN ())))))) UNION ALL SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (((((((((NULL)>>(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))OR((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM rt0, vt1, t0, vt0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN (t0.c4 IN ()) END) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (CASE WHEN (- (vt1.c0)) THEN (t0.c4 IN ()) END))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((CASE WHEN (- (vt1.c0)) THEN (t0.c4 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM vt1, vt0, t0 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((t0.c4 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN t0.c4 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 UNION SELECT vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((t0.c4 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN t0.c4 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 UNION SELECT vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM vt1, vt0, t0 WHERE (((((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((t0.c4 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN t0.c4 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0;
SELECT t0.c4, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c2, rt0.c2, NULL))=((rt0.c0, vt1.c0, rt0.c2)))))<>(('557795587'))) CROSS JOIN t0 ON (rt0.c2 IN ()) GROUP BY t0.c4, rt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT t0.c4, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c2, rt0.c2, NULL))==((rt0.c0, vt1.c0, rt0.c2)))))!=(('557795587'))) CROSS JOIN t0 ON (rt0.c2 IN ()) GROUP BY t0.c4, rt0.c0, rt0.c1, vt1.c0, rt0.c2 HAVING SUM(COUNT(MAX(TOTAL(rt0.c2)))) UNION ALL SELECT ALL t0.c4, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c2, rt0.c2, NULL))==((rt0.c0, vt1.c0, rt0.c2)))))<>(('557795587'))) CROSS JOIN t0 ON (rt0.c2 IN ()) GROUP BY t0.c4, rt0.c0, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (SUM(COUNT(MAX(TOTAL(rt0.c2)))))) UNION ALL SELECT ALL t0.c4, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c2, rt0.c2, NULL))=((rt0.c0, vt1.c0, rt0.c2)))))!=(('557795587'))) CROSS JOIN t0 ON (rt0.c2 IN ()) GROUP BY t0.c4, rt0.c0, rt0.c1, vt1.c0, rt0.c2 HAVING ((SUM(COUNT(MAX(TOTAL(rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT)) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, vt1, t0;
SELECT DISTINCT * FROM rt0, vt0, vt1, t0 WHERE (((x'f09af6fc557f')IS(((NULL)LIKE(t0.c4))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1, t0 WHERE ((NOT (((x'f09af6fc557f')IS(((NULL)LIKE(t0.c4))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1, t0 WHERE (((((x'f09af6fc557f')IS(((NULL)LIKE(t0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1, t0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (CASE ((vt0.c1)&(vt0.c0))  WHEN CAST(vt0.c2 AS INTEGER) THEN ((vt0.c2)<(vt0.c2)) WHEN ((vt0.c2)|(vt0.c1)) THEN x'580f' WHEN vt0.c0 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c1)&(vt0.c0))  WHEN CAST(vt0.c2 AS INTEGER) THEN ((vt0.c2)<(vt0.c2)) WHEN ((vt0.c2)|(vt0.c1)) THEN x'580f' WHEN vt0.c0 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c1)&(vt0.c0))  WHEN CAST(vt0.c2 AS INTEGER) THEN ((vt0.c2)<(vt0.c2)) WHEN ((vt0.c2)|(vt0.c1)) THEN x'580f' WHEN vt0.c0 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0))<=((t0.c4 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0))<=((t0.c4 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CASE WHEN t0.c4 THEN rt0.c1 END)!=(SUM(MIN(MAX(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0))<=((t0.c4 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((CASE WHEN t0.c4 THEN rt0.c1 END)!=(SUM(MIN(MAX(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0))<=((t0.c4 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((CASE WHEN t0.c4 THEN rt0.c1 END)<>(SUM(MIN(MAX(rt0.c0)))))) ISNULL);
SELECT ALL vt0.c2, t0.c4 FROM t0, vt0;
SELECT vt0.c2, t0.c4 FROM t0, vt0 WHERE (x'') UNION ALL SELECT vt0.c2, t0.c4 FROM t0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c2, t0.c4 FROM t0, vt0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c2, t0.c4 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((t0.c4 IN ()) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((t0.c4 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE ((((t0.c4 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (SQLITE_VERSION()) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, t0.c4, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c4, vt0.c2;
SELECT ALL vt0.c1, t0.c4, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c4, vt0.c2 HAVING ((GROUP_CONCAT(MIN(COUNT(vt0.c0))))<=(SUM(t0.c4))) UNION ALL SELECT ALL vt0.c1, t0.c4, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c4, vt0.c2 HAVING (NOT (((GROUP_CONCAT(MIN(COUNT(vt0.c0))))<=(SUM(t0.c4))))) UNION ALL SELECT ALL vt0.c1, t0.c4, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c4, vt0.c2 HAVING ((((GROUP_CONCAT(MIN(COUNT(vt0.c0))))<=(SUM(t0.c4)))) ISNULL);
SELECT ALL * FROM vt0, vt1, t0, rt0;
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (TYPEOF(((vt0.c0)|(vt0.c1)))) UNION ALL SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((NOT (TYPEOF(((vt0.c0)|(vt0.c1)))))) UNION ALL SELECT * FROM vt0, vt1, t0, rt0 WHERE (((TYPEOF(((vt0.c0)|(vt0.c1)))) ISNULL));
SELECT ALL * FROM vt0, vt1, t0, rt0;
SELECT DISTINCT rt0.c2, vt0.c1, vt0.c2, vt0.c0, t0.c4, rt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c2)) NOT BETWEEN ((((vt1.c0)||(vt0.c1)))) AND ((vt1.c0 COLLATE NOCASE))) INNER JOIN rt0 ON CAST(((t0.c4)GLOB(t0.c4)) AS REAL) FULL OUTER JOIN t0 ON CAST((vt1.c0 IN ()) AS NUMERIC);
SELECT vt0.c1, vt0.c2, vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (((((vt0.c0)+(vt0.c1)))=(load_extension(vt0.c1, vt0.c1)))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((vt0.c0)+(vt0.c1)))=(load_extension(vt0.c1, vt0.c1)))))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (((((((vt0.c0)+(vt0.c1)))=(load_extension(vt0.c1, vt0.c1)))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4;
SELECT rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 HAVING ((MIN(rt0.c1)) NOT NULL) UNION ALL SELECT rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 HAVING (NOT (((MIN(rt0.c1)) NOT NULL))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 HAVING ((((MIN(rt0.c1)) NOT NULL)) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4;
SELECT rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 HAVING ((MIN(rt0.c1)) NOT NULL) UNION ALL SELECT rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 HAVING (NOT (((MIN(rt0.c1)) NOT NULL))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 HAVING ((((MIN(rt0.c1)) NOT NULL)) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, vt0.c2, vt0.c0, vt0.c1, t0.c4;
SELECT rt0.c2, vt0.c2, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON (+ (((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c2)))) LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON CAST(rt0.c0 AS INTEGER) COLLATE NOCASE;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NULL COLLATE NOCASE IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NULL COLLATE NOCASE IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NULL COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 WHERE (((vt0.c0)IS(((rt0.c1)GLOB(rt0.c2))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE ((NOT (((vt0.c0)IS(((rt0.c1)GLOB(rt0.c2))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE (((((vt0.c0)IS(((rt0.c1)GLOB(rt0.c2))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c1 THEN rt0.c0 ELSE COUNT(*) END) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c1 THEN rt0.c0 ELSE COUNT(*) END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c1 THEN rt0.c0 ELSE COUNT(*) END)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c1 THEN rt0.c0 ELSE COUNT(*) END) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c1 THEN rt0.c0 ELSE COUNT(*) END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c1 THEN rt0.c0 ELSE COUNT(*) END)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((~ (vt1.c0)) IN ((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((~ (vt1.c0)) IN ((NOT (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE (((((~ (vt1.c0)) IN ((NOT (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT rt0.c2, t0.c4, rt0.c1, rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, rt0, vt0, t0;
SELECT DISTINCT rt0.c2, t0.c4, rt0.c1, rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, rt0, vt0, t0 WHERE ((((CAST(rt0.c2 AS TEXT)))=((vt0.c2)))) UNION SELECT DISTINCT rt0.c2, t0.c4, rt0.c1, rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, rt0, vt0, t0 WHERE ((NOT ((((CAST(rt0.c2 AS TEXT)))==((vt0.c2)))))) UNION SELECT DISTINCT rt0.c2, t0.c4, rt0.c1, rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, rt0, vt0, t0 WHERE ((((((CAST(rt0.c2 AS TEXT)))==((vt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c4, rt0.c1, rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, rt0, vt0, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c4, vt0.c2, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM t0, rt0 CROSS JOIN vt1 ON ((vt0.c1 IN (NULL)) IN ()) FULL OUTER JOIN vt0 ON vt0.c1 GROUP BY t0.c4, vt0.c2, vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT t0.c4, vt0.c2, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM t0, rt0 CROSS JOIN vt1 ON ((vt0.c1 IN (NULL)) IN ()) FULL OUTER JOIN vt0 ON vt0.c1 GROUP BY t0.c4, vt0.c2, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING COUNT(GROUP_CONCAT(vt0.c2)) UNION ALL SELECT t0.c4, vt0.c2, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM t0, rt0 CROSS JOIN vt1 ON ((vt0.c1 IN (NULL)) IN ()) FULL OUTER JOIN vt0 ON vt0.c1 GROUP BY t0.c4, vt0.c2, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c2)))) UNION ALL SELECT t0.c4, vt0.c2, vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM t0, rt0 CROSS JOIN vt1 ON ((vt0.c1 IN (NULL)) IN ()) FULL OUTER JOIN vt0 ON vt0.c1 GROUP BY t0.c4, vt0.c2, vt1.c0, vt0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(GROUP_CONCAT(vt0.c2))) ISNULL);
SELECT ALL t0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c1)!=(rt0.c1)) IN ());
SELECT t0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c1)!=(rt0.c1)) IN ()) WHERE (((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) UNION ALL SELECT ALL t0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c1)!=(rt0.c1)) IN ()) WHERE ((NOT (((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)))) UNION ALL SELECT ALL t0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c1)!=(rt0.c1)) IN ()) WHERE (((((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) ISNULL));
SELECT ALL t0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c1)!=(rt0.c1)) IN ());
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((+ ((((rt0.c0)) BETWEEN ((NULL)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((+ ((((rt0.c0)) BETWEEN ((NULL)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((+ ((((rt0.c0)) BETWEEN ((NULL)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT t0.c4 FROM t0 WHERE (((((((t0.c4) NOTNULL))OR(t0.c4 COLLATE RTRIM)))OR(((t0.c4) IS TRUE)))) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE ((NOT (((((((t0.c4) NOTNULL))OR(t0.c4 COLLATE RTRIM)))OR(((t0.c4) IS TRUE)))))) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE (((((((((t0.c4) NOTNULL))OR(t0.c4 COLLATE RTRIM)))OR(((t0.c4) IS TRUE)))) ISNULL)) GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4, vt0.c1, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((vt1.c0) IS TRUE))OR(((t0.c4) BETWEEN ('-1607686392') AND (vt0.c1)))))OR(((vt0.c2)>=('771390632')))) GROUP BY t0.c4, vt0.c1, vt0.c2;
SELECT ALL t0.c4, vt0.c1, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((vt1.c0) IS TRUE))OR(((t0.c4) BETWEEN ('-1607686392') AND (vt0.c1)))))OR(((vt0.c2)>=('771390632')))) GROUP BY t0.c4, vt0.c1, vt0.c2 HAVING ((SUM(SUM(t0.c4)))<<(((vt0.c2) IS TRUE))) UNION ALL SELECT ALL t0.c4, vt0.c1, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((vt1.c0) IS TRUE))OR(((t0.c4) BETWEEN ('-1607686392') AND (vt0.c1)))))OR(((vt0.c2)>=('771390632')))) GROUP BY t0.c4, vt0.c1, vt0.c2 HAVING (NOT (((SUM(SUM(t0.c4)))<<(((vt0.c2) IS TRUE))))) UNION ALL SELECT ALL t0.c4, vt0.c1, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((vt1.c0) IS TRUE))OR(((t0.c4) BETWEEN ('-1607686392') AND (vt0.c1)))))OR(((vt0.c2)>=('771390632')))) GROUP BY t0.c4, vt0.c1, vt0.c2 HAVING ((((SUM(SUM(t0.c4)))<<(((vt0.c2) IS TRUE)))) ISNULL);
SELECT ALL MIN(((((rt0.c0)&(vt1.c0)))+(t0.c4))) FROM t0, vt1, rt0, vt0;
SELECT ALL * FROM t0 CROSS JOIN vt1 ON CAST(((t0.c4)&(t0.c4)) AS TEXT);
SELECT * FROM t0 CROSS JOIN vt1 ON CAST(((t0.c4)&(t0.c4)) AS TEXT) WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) UNION ALL SELECT * FROM t0 CROSS JOIN vt1 ON CAST(((t0.c4)&(t0.c4)) AS TEXT) WHERE ((NOT (((CAST(vt1.c0 AS BLOB)) ISNULL)))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt1 ON CAST(((t0.c4)&(t0.c4)) AS TEXT) WHERE (((((CAST(vt1.c0 AS BLOB)) ISNULL)) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON CAST(((t0.c4)&(t0.c4)) AS TEXT);
SELECT DISTINCT rt0.c1 FROM vt1, rt0, t0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0, t0 WHERE ((+ (rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0, t0 WHERE ((NOT ((+ (rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0, t0 WHERE ((((+ (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0, t0;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 WHERE (0.942633993727329) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((NOT (0.942633993727329))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE (((0.942633993727329) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT vt0.c0, vt0.c1, vt0.c2, t0.c4 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c4;
SELECT vt0.c0, vt0.c1, vt0.c2, t0.c4 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c4 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, t0.c4 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c4 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, t0.c4 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c4 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT MIN((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY) FROM rt0, vt1, vt0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0, 0.28596787315378647, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS TEXT), TRIM(DISTINCT vt1.c0, vt1.c0))) AND ((COALESCE(DISTINCT vt1.c0, vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0, 0.28596787315378647, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS TEXT), TRIM(DISTINCT vt1.c0, vt1.c0))) AND ((COALESCE(DISTINCT vt1.c0, vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, 0.28596787315378647, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS TEXT), TRIM(DISTINCT vt1.c0, vt1.c0))) AND ((COALESCE(DISTINCT vt1.c0, vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((vt0.c1)*(vt0.c1))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((NOT (((vt0.c1)*(vt0.c1))))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((NOT (((vt0.c1)*(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.c0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((vt1.c0)/(vt0.c1)) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE ((NOT (((vt1.c0)/(vt0.c1)) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((((vt1.c0)/(vt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.c0 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 HAVING '1' UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 HAVING (NOT ('1')) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 HAVING (('1') ISNULL);
SELECT ALL rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 HAVING '1' UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 HAVING (NOT ('1')) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 HAVING (('1') ISNULL);
SELECT ALL rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, t0.c4, rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2, vt0.c2, rt0.c1 FROM vt1, vt0, rt0;
SELECT rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2, vt0.c2, rt0.c1 FROM vt1, vt0, rt0 WHERE (CASE WHEN (NOT (vt0.c2)) THEN ((vt0.c0)||(vt1.c0)) END) UNION ALL SELECT rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2, vt0.c2, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (CASE WHEN (NOT (vt0.c2)) THEN ((vt0.c0)||(vt1.c0)) END))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2, vt0.c2, rt0.c1 FROM vt1, vt0, rt0 WHERE (((CASE WHEN (NOT (vt0.c2)) THEN ((vt0.c0)||(vt1.c0)) END) ISNULL));
SELECT rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c2, vt0.c2, rt0.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT t0.c4, rt0.c2, vt0.c0, rt0.c0, vt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM vt1, t0, rt0, vt0;
SELECT DISTINCT t0.c4, rt0.c2, vt0.c0, rt0.c0, vt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM vt1, t0, rt0, vt0 WHERE (rt0.c2) UNION SELECT DISTINCT t0.c4, rt0.c2, vt0.c0, rt0.c0, vt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM vt1, t0, rt0, vt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT t0.c4, rt0.c2, vt0.c0, rt0.c0, vt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM vt1, t0, rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT t0.c4, rt0.c2, vt0.c0, rt0.c0, vt0.c2, vt0.c1, rt0.c1, vt1.c0 FROM vt1, t0, rt0, vt0;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((+ (''))) GROUP BY vt0.c0, vt0.c2, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((+ (''))))) GROUP BY vt0.c0, vt0.c2, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((((+ (''))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1;
SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1 HAVING t0.c4 UNION ALL SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1 HAVING (NOT (t0.c4)) UNION ALL SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1 HAVING ((t0.c4) ISNULL);
SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1;
SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1 HAVING t0.c4 UNION ALL SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1 HAVING (NOT (t0.c4)) UNION ALL SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1 HAVING ((t0.c4) ISNULL);
SELECT ALL t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c1;
SELECT * FROM t0, rt0, vt0, vt1;
SELECT ALL * FROM t0, rt0 NOT INDEXED, vt0, vt1 WHERE (((+ (rt0.c2)) IN ())) UNION ALL SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE ((NOT (((+ (rt0.c2)) IN ())))) UNION ALL SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((+ (rt0.c2)) IN ())) ISNULL));
SELECT * FROM t0, rt0, vt0, vt1;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ())) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL vt0.c2, t0.c4, rt0.c2 FROM t0, vt1, rt0, vt0 GROUP BY vt0.c2, t0.c4, rt0.c2;
SELECT ALL vt0.c2, t0.c4, rt0.c2 FROM t0, vt1, rt0, vt0 WHERE ((((vt1.c0) IS TRUE) IN ((((t0.c4)) BETWEEN ((rt0.c0)) AND ((x''))), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)), rt0.c2))) GROUP BY vt0.c2, t0.c4, rt0.c2 UNION SELECT ALL vt0.c2, t0.c4, rt0.c2 FROM t0, vt1, rt0, vt0 WHERE ((NOT ((((vt1.c0) IS TRUE) IN ((((t0.c4)) BETWEEN ((rt0.c0)) AND ((x''))), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)), rt0.c2))))) GROUP BY vt0.c2, t0.c4, rt0.c2 UNION SELECT vt0.c2, t0.c4, rt0.c2 FROM t0, vt1, rt0, vt0 WHERE ((((((vt1.c0) IS TRUE) IN ((((t0.c4)) BETWEEN ((rt0.c0)) AND ((x''))), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)), rt0.c2))) ISNULL)) GROUP BY vt0.c2, t0.c4, rt0.c2;
SELECT ALL vt0.c2, t0.c4, rt0.c2 FROM t0, vt1, rt0, vt0 GROUP BY vt0.c2, t0.c4, rt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN MIN(AVG(TOTAL(TOTAL(COUNT(*))))) ELSE MIN(MIN(SUM(0.6094741103827629))) END UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN MIN(AVG(TOTAL(TOTAL(COUNT(*))))) ELSE MIN(MIN(SUM(0.6094741103827629))) END)) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN MIN(AVG(TOTAL(TOTAL(COUNT(*))))) ELSE MIN(MIN(SUM(0.6094741103827629))) END) ISNULL);
SELECT MAX(CAST((~ (rt0.c1)) AS TEXT)) FROM vt0, rt0, vt1, t0;
SELECT rt0.c1, t0.c4, rt0.c0, vt1.c0 FROM vt1 INDEXED BY i44, rt0, t0;
SELECT DISTINCT * FROM vt0, vt1, rt0, t0;
SELECT DISTINCT * FROM vt0, vt1, rt0, t0 WHERE (((((((rt0.c0)%(vt0.c1)))AND(LOWER(vt1.c0))))AND(((((rt0.c2)AND(rt0.c1)))AND(0.5658398027550294))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0, t0 WHERE ((NOT (((((((rt0.c0)%(vt0.c1)))AND(LOWER(vt1.c0))))AND(((((rt0.c2)AND(rt0.c1)))AND(0.5658398027550294))))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0, t0 WHERE (((((((((rt0.c0)%(vt0.c1)))AND(LOWER(vt1.c0))))AND(((((rt0.c2)AND(rt0.c1)))AND(0.5658398027550294))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0, t0;
SELECT t0.c4, rt0.c0 FROM vt1, rt0, t0 GROUP BY t0.c4, rt0.c0;
SELECT ALL t0.c4, rt0.c0 FROM vt1, rt0, t0 WHERE (t0.c4) GROUP BY t0.c4, rt0.c0 UNION SELECT ALL t0.c4, rt0.c0 FROM vt1, rt0, t0 WHERE ((NOT (t0.c4))) GROUP BY t0.c4, rt0.c0 UNION SELECT t0.c4, rt0.c0 FROM vt1, rt0, t0 WHERE (((t0.c4) ISNULL)) GROUP BY t0.c4, rt0.c0;
SELECT t0.c4, rt0.c0 FROM vt1, rt0, t0 GROUP BY t0.c4, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt1, t0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1, t0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(((TOTAL(rt0.c1))||(MAX(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1, t0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(((TOTAL(rt0.c1))||(MAX(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1, t0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(((TOTAL(rt0.c1))||(MAX(rt0.c0))))) ISNULL);
SELECT rt0.c2, t0.c4, vt0.c0, rt0.c0 FROM t0, rt0, vt1, vt0;
SELECT rt0.c2, t0.c4, vt0.c0, rt0.c0 FROM t0, rt0, vt1, vt0 WHERE (((t0.c4 COLLATE BINARY) NOTNULL)) UNION ALL SELECT rt0.c2, t0.c4, vt0.c0, rt0.c0 FROM t0, rt0, vt1, vt0 WHERE ((NOT (((t0.c4 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT rt0.c2, t0.c4, vt0.c0, rt0.c0 FROM t0, rt0, vt1, vt0 WHERE (((((t0.c4 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT rt0.c2, t0.c4, vt0.c0, rt0.c0 FROM t0, rt0, vt1, vt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE WHEN TRIM(rt0.c0, -1.761717357E9) THEN x'319a' ELSE ((rt0.c0)/(rt0.c0)) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE WHEN TRIM(rt0.c0, -1.761717357E9) THEN x'319a' ELSE ((rt0.c0)/(rt0.c0)) END))) UNION SELECT DISTINCT * FROM t0, rt0 NOT INDEXED WHERE (((CASE WHEN TRIM(rt0.c0, -1.761717357E9) THEN x'319a' ELSE ((rt0.c0)/(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt0, t0 GROUP BY rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0;
SELECT ALL rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt0, t0 WHERE (vt0.c2) GROUP BY rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0 UNION SELECT rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt0, t0 WHERE ((NOT (vt0.c2))) GROUP BY rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0 UNION SELECT rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt0, t0 WHERE (((vt0.c2) ISNULL)) GROUP BY rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0;
SELECT rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt0, t0 GROUP BY rt0.c1, t0.c4, vt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING AVG(SUM(vt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (AVG(SUM(vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((AVG(SUM(vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (0Xffffffffc8c778a3) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0Xffffffffc8c778a3))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0xffffffffc8c778a3) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((t0.c4)*(TYPEOF(DISTINCT rt0.c2)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((t0.c4)*(TYPEOF(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((t0.c4)*(TYPEOF(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL vt0.c2, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c2, rt0.c1, vt1.c0;
SELECT ALL vt0.c2, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((rt0.c1)!=(vt0.c2))))) GROUP BY vt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL vt0.c2, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((NOT (((rt0.c1)<>(vt0.c2))))))) GROUP BY vt0.c2, rt0.c1, vt1.c0 UNION SELECT vt0.c2, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((((NOT (((rt0.c1)!=(vt0.c2))))) ISNULL)) GROUP BY vt0.c2, rt0.c1, vt1.c0;
SELECT ALL vt0.c2, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c2, rt0.c1, vt1.c0;
SELECT vt0.c2, rt0.c0, vt0.c0, t0.c4, vt1.c0, rt0.c1 FROM t0 INDEXED BY i44, rt0, vt0 NOT INDEXED, vt1 GROUP BY vt0.c2, rt0.c0, vt0.c0, t0.c4, vt1.c0, rt0.c1;
SELECT t0.c4 FROM t0;
SELECT t0.c4 FROM t0 WHERE ((((t0.c4 IN (t0.c4)))IS NOT(t0.c4))) UNION ALL SELECT ALL t0.c4 FROM t0 WHERE ((NOT ((((t0.c4 IN (t0.c4)))IS NOT(t0.c4))))) UNION ALL SELECT ALL t0.c4 FROM t0 WHERE ((((((t0.c4 IN (t0.c4)))IS NOT(t0.c4))) ISNULL));
SELECT t0.c4 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c4, t0.c4, t0.c4)) BETWEEN ((t0.c4, t0.c4, t0.c4)) AND ((t0.c4, t0.c4, t0.c4))) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c4, t0.c4, t0.c4)) BETWEEN ((t0.c4, t0.c4, t0.c4)) AND ((t0.c4, t0.c4, t0.c4))) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c4, t0.c4, t0.c4)) BETWEEN ((t0.c4, t0.c4, t0.c4)) AND ((t0.c4, t0.c4, t0.c4))) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(t0.c4)))<>(((t0.c4) BETWEEN (t0.c4) AND (t0.c4))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(t0.c4)))<>(((t0.c4) BETWEEN (t0.c4) AND (t0.c4))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(t0.c4)))!=(((t0.c4) BETWEEN (t0.c4) AND (t0.c4))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0;
SELECT ALL t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0 HAVING ((TOTAL(vt0.c1)) NOT BETWEEN (MAX(vt0.c0)) AND (NULL)) UNION ALL SELECT ALL t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0 HAVING (NOT (((TOTAL(vt0.c1)) NOT BETWEEN (MAX(vt0.c0)) AND (NULL)))) UNION ALL SELECT ALL t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0 HAVING ((((TOTAL(vt0.c1)) NOT BETWEEN (MAX(vt0.c0)) AND (NULL))) ISNULL);
SELECT t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0;
SELECT ALL t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0 HAVING ((TOTAL(vt0.c1)) NOT BETWEEN (MAX(vt0.c0)) AND (NULL)) UNION ALL SELECT ALL t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0 HAVING (NOT (((TOTAL(vt0.c1)) NOT BETWEEN (MAX(vt0.c0)) AND (NULL)))) UNION ALL SELECT ALL t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0 HAVING ((((TOTAL(vt0.c1)) NOT BETWEEN (MAX(vt0.c0)) AND (NULL))) ISNULL);
SELECT t0.c4, vt0.c0 FROM vt0, t0 GROUP BY t0.c4, vt0.c0;
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (((CAST(t0.c4 AS TEXT)))>((CAST(vt1.c0 AS TEXT))));
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (((CAST(t0.c4 AS TEXT)))>((CAST(vt1.c0 AS TEXT)))) WHERE (x'') UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (((CAST(t0.c4 AS TEXT)))>((CAST(vt1.c0 AS TEXT)))) WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (((CAST(t0.c4 AS TEXT)))>((CAST(vt1.c0 AS TEXT)))) WHERE (((x'') ISNULL));
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (((CAST(t0.c4 AS TEXT)))>((CAST(vt1.c0 AS TEXT))));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c0, t0.c4, vt0.c1 FROM vt0, rt0, t0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c0, t0.c4, vt0.c1 FROM vt0, rt0, t0, vt1 WHERE (((((rt0.c1)<=(rt0.c1))) NOT BETWEEN ((((rt0.c2))<((rt0.c1)))) AND (((vt1.c0) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c0, t0.c4, vt0.c1 FROM vt0, rt0, t0, vt1 WHERE ((NOT (((((rt0.c1)<=(rt0.c1))) NOT BETWEEN ((((rt0.c2))<((rt0.c1)))) AND (((vt1.c0) IS FALSE)))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c0, t0.c4, vt0.c1 FROM vt0, rt0, t0, vt1 WHERE (((((((rt0.c1)<=(rt0.c1))) NOT BETWEEN ((((rt0.c2))<((rt0.c1)))) AND (((vt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c0, t0.c4, vt0.c1 FROM vt0, rt0, t0, vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0 FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c0)+(rt0.c1)))IS(((vt0.c2)<(869081080)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0 FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c0)+(rt0.c1)))IS(((vt0.c2)<(869081080)))) WHERE ((((((((((rt0.c1 IN ()))AND(CASE WHEN vt0.c0 THEN '277429009' END)))AND(((((vt0.c1)AND(vt0.c1)))OR(t0.c4)))))AND((rt0.c1 IN ()))))OR((+ (vt0.c2))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0 FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c0)+(rt0.c1)))IS(((vt0.c2)<(869081080)))) WHERE ((NOT ((((((((((rt0.c1 IN ()))AND(CASE WHEN vt0.c0 THEN '277429009' END)))AND(((((vt0.c1)AND(vt0.c1)))OR(t0.c4)))))AND((rt0.c1 IN ()))))OR((+ (vt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0 FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c0)+(rt0.c1)))IS(((vt0.c2)<(869081080)))) WHERE ((((((((((((rt0.c1 IN ()))AND(CASE WHEN vt0.c0 THEN '277429009' END)))AND(((((vt0.c1)AND(vt0.c1)))OR(t0.c4)))))AND((rt0.c1 IN ()))))OR((+ (vt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0 FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c0)+(rt0.c1)))IS(((vt0.c2)<(869081080)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0;
SELECT ALL vt0.c0, vt0.c2, rt0.c1, vt1.c0, vt0.c1, rt0.c0, t0.c4, rt0.c2 FROM t0, vt0 NOT INDEXED, vt1, rt0 GROUP BY vt0.c0, vt0.c2, rt0.c1, vt1.c0, vt0.c1, rt0.c0, t0.c4, rt0.c2;
SELECT ALL vt0.c0, vt0.c2, rt0.c1, vt1.c0, vt0.c1, rt0.c0, t0.c4, rt0.c2 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c0, vt0.c2, rt0.c1, vt1.c0, vt0.c1, rt0.c0, t0.c4, rt0.c2 HAVING AVG(((vt0.c2) NOT BETWEEN (vt1.c0) AND (COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, rt0.c1, vt1.c0, vt0.c1, rt0.c0, t0.c4, rt0.c2 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c0, vt0.c2, rt0.c1, vt1.c0, vt0.c1, rt0.c0, t0.c4, rt0.c2 HAVING (NOT (AVG(((vt0.c2) NOT BETWEEN (vt1.c0) AND (COUNT(*)))))) UNION ALL SELECT vt0.c0, vt0.c2, rt0.c1, vt1.c0, vt0.c1, rt0.c0, t0.c4, rt0.c2 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c0, vt0.c2, rt0.c1, vt1.c0, vt0.c1, rt0.c0, t0.c4, rt0.c2 HAVING ((AVG(((vt0.c2) NOT BETWEEN (vt1.c0) AND (COUNT(*))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))>((~ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((NOT (vt1.c0)))>((~ (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((NOT (vt1.c0)))>((~ (vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(CAST(vt0.c2 AS BLOB) AS REAL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c2 AS BLOB) AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(CAST(vt0.c2 AS BLOB) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 HAVING ((((MAX(rt0.c2)) NOT NULL))%(TOTAL(vt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (((((MAX(rt0.c2)) NOT NULL))%(TOTAL(vt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 HAVING ((((((MAX(rt0.c2)) NOT NULL))%(TOTAL(vt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 HAVING ((((MAX(rt0.c2)) NOT NULL))%(TOTAL(vt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (((((MAX(rt0.c2)) NOT NULL))%(TOTAL(vt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 HAVING ((((((MAX(rt0.c2)) NOT NULL))%(TOTAL(vt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c4 AS TEXT))<=(((0.24402964301458674) NOTNULL)));
SELECT ALL vt0.c1 FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c4 AS TEXT))<=(((0.24402964301458674) NOTNULL))) WHERE ((((t0.c4 IN (vt1.c0))) ISNULL)) UNION ALL SELECT vt0.c1 FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c4 AS TEXT))<=(((0.24402964301458674) NOTNULL))) WHERE ((NOT ((((t0.c4 IN (vt1.c0))) ISNULL)))) UNION ALL SELECT vt0.c1 FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c4 AS TEXT))<=(((0.24402964301458674) NOTNULL))) WHERE ((((((t0.c4 IN (vt1.c0))) ISNULL)) ISNULL));
SELECT ALL vt0.c1 FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c4 AS TEXT))<=(((0.24402964301458674) NOTNULL)));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL t0.c4, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c4, vt0.c2, vt0.c0;
SELECT ALL t0.c4, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (UPPER(CASE t0.c4  WHEN t0.c4 THEN t0.c4 ELSE vt0.c0 END)) GROUP BY t0.c4, vt0.c2, vt0.c0 UNION SELECT ALL t0.c4, vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (UPPER(CASE t0.c4  WHEN t0.c4 THEN t0.c4 ELSE vt0.c0 END)))) GROUP BY t0.c4, vt0.c2, vt0.c0 UNION SELECT t0.c4, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (((UPPER(CASE t0.c4  WHEN t0.c4 THEN t0.c4 ELSE vt0.c0 END)) ISNULL)) GROUP BY t0.c4, vt0.c2, vt0.c0;
SELECT ALL t0.c4, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c4, vt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING 6.28341952E8 UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (6.28341952E8)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((6.28341952E8) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING 6.28341952E8 UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (6.28341952E8)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((6.28341952E8) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS INTEGER) CROSS JOIN t0 ON CAST('osYdj1y ' AS BLOB);
SELECT * FROM vt1, vt0 INNER JOIN rt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS INTEGER) CROSS JOIN t0 ON CAST('osYdj1y ' AS BLOB) WHERE (0.18849091565761833 COLLATE NOCASE) UNION ALL SELECT * FROM vt1, vt0 INNER JOIN rt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS INTEGER) CROSS JOIN t0 ON CAST('osYdj1y ' AS BLOB) WHERE ((NOT (0.18849091565761833 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS INTEGER) CROSS JOIN t0 ON CAST('osYdj1y ' AS BLOB) WHERE (((0.18849091565761833 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS INTEGER) CROSS JOIN t0 ON CAST('osYdj1y ' AS BLOB);
SELECT DISTINCT * FROM rt0, t0 LEFT OUTER JOIN vt1 ON 0.6470788957168054;
SELECT DISTINCT * FROM rt0, t0 LEFT OUTER JOIN vt1 ON 0.6470788957168054 WHERE (json_insert(CAST(rt0.c0 AS REAL), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, ROUND(rt0.c1, rt0.c2), TRIM(vt1.c0, vt1.c0), ((rt0.c0)/(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, t0 LEFT OUTER JOIN vt1 ON 0.6470788957168054 WHERE ((NOT (json_insert(CAST(rt0.c0 AS REAL), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, ROUND(rt0.c1, rt0.c2), TRIM(vt1.c0, vt1.c0), ((rt0.c0)/(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, t0 LEFT OUTER JOIN vt1 ON 0.6470788957168054 WHERE (((json_insert(CAST(rt0.c0 AS REAL), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, ROUND(rt0.c1, rt0.c2), TRIM(vt1.c0, vt1.c0), ((rt0.c0)/(rt0.c2)))) ISNULL));
SELECT t0.c4 FROM t0, vt1, vt0 GROUP BY t0.c4;
SELECT t0.c4 FROM t0, vt1, vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN NULL ELSE LIKELIHOOD(vt1.c0, 0.620230366540611) END) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0, vt1, vt0 WHERE ((NOT (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN NULL ELSE LIKELIHOOD(vt1.c0, 0.620230366540611) END))) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0, vt1, vt0 WHERE (((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN NULL ELSE LIKELIHOOD(vt1.c0, 0.620230366540611) END) ISNULL)) GROUP BY t0.c4;
SELECT t0.c4 FROM t0, vt1, vt0 GROUP BY t0.c4;
SELECT ALL rt0.c1, rt0.c2, vt0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2;
SELECT rt0.c1, rt0.c2, vt0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2 HAVING (NOT (GROUP_CONCAT(x'0289'))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2 HAVING (NOT ((NOT (GROUP_CONCAT(x'0289'))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c2 FROM vt0 NOT INDEXED, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2 HAVING (((NOT (GROUP_CONCAT(x'0289')))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2;
SELECT rt0.c1, rt0.c2, vt0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2 HAVING (NOT (GROUP_CONCAT(x'0289'))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2 HAVING (NOT ((NOT (GROUP_CONCAT(x'0289'))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c2 FROM vt0 NOT INDEXED, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2 HAVING (((NOT (GROUP_CONCAT(x'0289')))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c2;
SELECT TOTAL(((TRIM(DISTINCT vt1.c0))>=(((vt1.c0) IS FALSE)))) FROM t0, vt1;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c2) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (x'05f2') UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (x'05f2'))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((x'05f2') ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0, vt1, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0, vt1, vt0 WHERE (((rt0.c1) BETWEEN (x'') AND (((t0.c4)|(''))))) GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0, vt1, vt0 WHERE ((NOT (((rt0.c1) BETWEEN (x'') AND (((t0.c4)|(''))))))) GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1 UNION SELECT vt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0, vt1, vt0 WHERE (((((rt0.c1) BETWEEN (x'') AND (((t0.c4)|(''))))) ISNULL)) GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT vt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0, vt1, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM t0, vt1, rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, rt0, vt0 GROUP BY vt0.c0 HAVING MAX(MIN(AVG(GROUP_CONCAT(COUNT(AVG(rt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(AVG(GROUP_CONCAT(COUNT(AVG(rt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, rt0, vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(AVG(GROUP_CONCAT(COUNT(AVG(rt0.c0))))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c1))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, vt1, t0, rt0;
SELECT DISTINCT * FROM vt0, vt1, t0, rt0 WHERE (CASE (vt0.c2 IN ())  WHEN CAST(rt0.c0 AS NUMERIC) THEN COALESCE(DISTINCT t0.c4, rt0.c1) END) UNION SELECT DISTINCT * FROM vt0, vt1, t0, rt0 WHERE ((NOT (CASE (vt0.c2 IN ())  WHEN CAST(rt0.c0 AS NUMERIC) THEN COALESCE(DISTINCT t0.c4, rt0.c1) END))) UNION SELECT DISTINCT * FROM vt0, vt1, t0, rt0 WHERE (((CASE (vt0.c2 IN ())  WHEN CAST(rt0.c0 AS NUMERIC) THEN COALESCE(DISTINCT t0.c4, rt0.c1) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0, rt0;
SELECT rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 WHERE ('-926451549') GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 WHERE ((NOT ('-926451549'))) GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 WHERE ((('-926451549') ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT ALL t0.c4, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM rt0, t0, vt0 GROUP BY t0.c4, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0, vt0.c0;
SELECT ALL t0.c4, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM rt0, t0, vt0 GROUP BY t0.c4, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0, vt0.c0 HAVING CASE WHEN GROUP_CONCAT(rt0.c0) THEN GROUP_CONCAT(COUNT(*)) ELSE COUNT(vt0.c1) END UNION ALL SELECT t0.c4, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM rt0, t0, vt0 GROUP BY t0.c4, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0, vt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(rt0.c0) THEN GROUP_CONCAT(COUNT(*)) ELSE COUNT(vt0.c1) END)) UNION ALL SELECT t0.c4, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM rt0, t0, vt0 GROUP BY t0.c4, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0, vt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(rt0.c0) THEN GROUP_CONCAT(COUNT(*)) ELSE COUNT(vt0.c1) END) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((+ (((((((((((((((((t0.c4)AND(rt0.c1)))OR(x'')))OR(0.1951470511923954)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(t0.c4)))OR(t0.c4))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((+ (((((((((((((((((t0.c4)AND(rt0.c1)))OR(x'')))OR(0.1951470511923954)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(t0.c4)))OR(t0.c4))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((+ (((((((((((((((((t0.c4)AND(rt0.c1)))OR(x'')))OR(0.1951470511923954)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(t0.c4)))OR(t0.c4))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT vt0.c0 FROM t0 INNER JOIN rt0 ON (((vt1.c0, rt0.c1, vt0.c2)) NOT BETWEEN ((CASE WHEN 'qa䨣>*I1KF' THEN rt0.c2 END, ((0x35a13468)>(rt0.c0)), ((((((((((((((((rt0.c1)AND(0X33cd1ff8)))OR(vt0.c1)))OR(vt0.c0)))AND(0X69813db3)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c4)))) AND (((vt1.c0 IN (vt0.c0, vt0.c2)), ((t0.c4)GLOB(vt0.c2)), (rt0.c0 IN ())))) INNER JOIN vt0 ON (((vt0.c2)AND(rt0.c2)) IN ((vt1.c0 IN (rt0.c1)))) LEFT OUTER JOIN vt1 ON (((vt0.c1)||(vt1.c0)) IN ()) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 INNER JOIN rt0 ON (((vt1.c0, rt0.c1, vt0.c2)) NOT BETWEEN ((CASE WHEN 'qa䨣>*I1KF' THEN rt0.c2 END, ((0x35a13468)>(rt0.c0)), ((((((((((((((((rt0.c1)AND(0X33cd1ff8)))OR(vt0.c1)))OR(vt0.c0)))AND(0x69813db3)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c4)))) AND (((vt1.c0 IN (vt0.c0, vt0.c2)), ((t0.c4)GLOB(vt0.c2)), (rt0.c0 IN ())))) INNER JOIN vt0 ON (((vt0.c2)AND(rt0.c2)) IN ((vt1.c0 IN (rt0.c1)))) LEFT OUTER JOIN vt1 ON (((vt0.c1)||(vt1.c0)) IN ()) WHERE (CASE NULL  WHEN CASE WHEN vt0.c1 THEN t0.c4 ELSE vt1.c0 END THEN (~ (rt0.c0)) WHEN (rt0.c2 IN (vt0.c2)) THEN ((rt0.c1) IS TRUE) WHEN (((NULL, rt0.c2, vt1.c0))>((vt1.c0, '924494445', vt0.c2))) THEN (((vt1.c0))<(('1494097306'))) ELSE rt0.c2 COLLATE RTRIM END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 INNER JOIN rt0 ON (((vt1.c0, rt0.c1, vt0.c2)) NOT BETWEEN ((CASE WHEN 'qa䨣>*I1KF' THEN rt0.c2 END, ((0X35a13468)>(rt0.c0)), ((((((((((((((((rt0.c1)AND(0x33cd1ff8)))OR(vt0.c1)))OR(vt0.c0)))AND(0x69813db3)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c4)))) AND (((vt1.c0 IN (vt0.c0, vt0.c2)), ((t0.c4)GLOB(vt0.c2)), (rt0.c0 IN ())))) INNER JOIN vt0 ON (((vt0.c2)AND(rt0.c2)) IN ((vt1.c0 IN (rt0.c1)))) LEFT OUTER JOIN vt1 ON (((vt0.c1)||(vt1.c0)) IN ()) WHERE ((NOT (CASE NULL  WHEN CASE WHEN vt0.c1 THEN t0.c4 ELSE vt1.c0 END THEN (~ (rt0.c0)) WHEN (rt0.c2 IN (vt0.c2)) THEN ((rt0.c1) IS TRUE) WHEN (((NULL, rt0.c2, vt1.c0))>((vt1.c0, '924494445', vt0.c2))) THEN (((vt1.c0))<(('1494097306'))) ELSE rt0.c2 COLLATE RTRIM END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 INNER JOIN rt0 ON (((vt1.c0, rt0.c1, vt0.c2)) NOT BETWEEN ((CASE WHEN 'qa䨣>*I1KF' THEN rt0.c2 END, ((0x35a13468)>(rt0.c0)), ((((((((((((((((rt0.c1)AND(0x33cd1ff8)))OR(vt0.c1)))OR(vt0.c0)))AND(0X69813db3)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c4)))) AND (((vt1.c0 IN (vt0.c0, vt0.c2)), ((t0.c4)GLOB(vt0.c2)), (rt0.c0 IN ())))) INNER JOIN vt0 ON (((vt0.c2)AND(rt0.c2)) IN ((vt1.c0 IN (rt0.c1)))) LEFT OUTER JOIN vt1 ON (((vt0.c1)||(vt1.c0)) IN ()) WHERE (((CASE NULL  WHEN CASE WHEN vt0.c1 THEN t0.c4 ELSE vt1.c0 END THEN (~ (rt0.c0)) WHEN (rt0.c2 IN (vt0.c2)) THEN ((rt0.c1) IS TRUE) WHEN (((NULL, rt0.c2, vt1.c0))>((vt1.c0, '924494445', vt0.c2))) THEN (((vt1.c0))<(('1494097306'))) ELSE rt0.c2 COLLATE RTRIM END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 INNER JOIN rt0 ON (((vt1.c0, rt0.c1, vt0.c2)) NOT BETWEEN ((CASE WHEN 'qa䨣>*I1KF' THEN rt0.c2 END, ((0x35a13468)>(rt0.c0)), ((((((((((((((((rt0.c1)AND(0X33cd1ff8)))OR(vt0.c1)))OR(vt0.c0)))AND(0X69813db3)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c4)))) AND (((vt1.c0 IN (vt0.c0, vt0.c2)), ((t0.c4)GLOB(vt0.c2)), (rt0.c0 IN ())))) INNER JOIN vt0 ON (((vt0.c2)AND(rt0.c2)) IN ((vt1.c0 IN (rt0.c1)))) LEFT OUTER JOIN vt1 ON (((vt0.c1)||(vt1.c0)) IN ()) GROUP BY vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (~ (((COUNT(vt0.c2))IS NOT(MIN(vt0.c2))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT ((~ (((COUNT(vt0.c2))IS NOT(MIN(vt0.c2))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (((~ (((COUNT(vt0.c2))IS NOT(MIN(vt0.c2)))))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (~ (((COUNT(vt0.c2))IS NOT(MIN(vt0.c2))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT ((~ (((COUNT(vt0.c2))IS NOT(MIN(vt0.c2))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (((~ (((COUNT(vt0.c2))IS NOT(MIN(vt0.c2)))))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.c1, rt0.c2, vt1.c0, vt0.c2, t0.c4 FROM vt1, t0, rt0, vt0;
SELECT rt0.c1, rt0.c0, vt0.c0, vt0.c1, rt0.c2, vt1.c0, vt0.c2, t0.c4 FROM vt1, t0, rt0, vt0 WHERE (CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 'w-䉎' END COLLATE NOCASE) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, vt0.c1, rt0.c2, vt1.c0, vt0.c2, t0.c4 FROM vt1, t0, rt0, vt0 WHERE ((NOT (CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 'w-䉎' END COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, vt0.c1, rt0.c2, vt1.c0, vt0.c2, t0.c4 FROM vt1, t0, rt0, vt0 WHERE (((CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 'w-䉎' END COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.c1, rt0.c2, vt1.c0, vt0.c2, t0.c4 FROM vt1, t0, rt0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR('-1687878674')))OR(x'e754'))) BETWEEN (0.7985991947210259) AND ((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)OR('-1687878674')))OR(x'e754'))) BETWEEN (0.7985991947210259) AND ((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)OR('-1687878674')))OR(x'e754'))) BETWEEN (0.7985991947210259) AND ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1, t0 GROUP BY vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1, t0 WHERE (((CASE vt0.c2  WHEN t0.c4 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c4 THEN rt0.c2 END) IS FALSE)) GROUP BY vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1, t0 WHERE ((NOT (((CASE vt0.c2  WHEN t0.c4 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c4 THEN rt0.c2 END) IS FALSE)))) GROUP BY vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1 UNION SELECT vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1, t0 WHERE (((((CASE vt0.c2  WHEN t0.c4 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c4 THEN rt0.c2 END) IS FALSE)) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1, t0 GROUP BY vt1.c0, rt0.c0, vt0.c1, t0.c4, vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING ((CASE SUM(TOTAL(COUNT(vt0.c0)))  WHEN GROUP_CONCAT(COUNT(TOTAL(MAX(vt0.c1)))) THEN vt0.c0 WHEN vt0.c0 THEN t0.c4 WHEN vt0.c0 THEN COUNT(MIN(GROUP_CONCAT(MIN(t0.c4)))) ELSE SUM(t0.c4) END)>=((((vt0.c1))>=((TOTAL(t0.c4)))))) UNION ALL SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (NOT (((CASE SUM(TOTAL(COUNT(vt0.c0)))  WHEN GROUP_CONCAT(COUNT(TOTAL(MAX(vt0.c1)))) THEN vt0.c0 WHEN vt0.c0 THEN t0.c4 WHEN vt0.c0 THEN COUNT(MIN(GROUP_CONCAT(MIN(t0.c4)))) ELSE SUM(t0.c4) END)>=((((vt0.c1))>=((TOTAL(t0.c4)))))))) UNION ALL SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING ((((CASE SUM(TOTAL(COUNT(vt0.c0)))  WHEN GROUP_CONCAT(COUNT(TOTAL(MAX(vt0.c1)))) THEN vt0.c0 WHEN vt0.c0 THEN t0.c4 WHEN vt0.c0 THEN COUNT(MIN(GROUP_CONCAT(MIN(t0.c4)))) ELSE SUM(t0.c4) END)>=((((vt0.c1))>=((TOTAL(t0.c4))))))) ISNULL);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN ())) BETWEEN ((((vt0.c1, rt0.c2, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c2 END));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN ())) BETWEEN ((((vt0.c1, rt0.c2, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c2 END)) WHERE (0xfffffffffa4761bb) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN ())) BETWEEN ((((vt0.c1, rt0.c2, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c2 END)) WHERE ((NOT (0xfffffffffa4761bb))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN ())) BETWEEN ((((vt0.c1, rt0.c2, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c2 END)) WHERE (((0Xfffffffffa4761bb) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN ())) BETWEEN ((((vt0.c1, rt0.c2, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c2 END));
SELECT DISTINCT * FROM vt1 NOT INDEXED CROSS JOIN rt0 ON ((((vt1.c0)LIKE(rt0.c2))) IS FALSE) CROSS JOIN t0 ON ((((((vt0.c1)AND(vt0.c0)))OR(rt0.c1)))|(CASE WHEN vt1.c0 THEN rt0.c2 END)) RIGHT OUTER JOIN vt0 ON ABS(UPPER(DISTINCT rt0.c2));
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((- (((0.6494889620565606)/(vt0.c2))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((- (((0.6494889620565606)/(vt0.c2))))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((- (((0.6494889620565606)/(vt0.c2))))) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(MAX(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(MAX(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(MAX(vt1.c0))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON x'83fa' RIGHT OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c1, vt0.c0)))IS((- (rt0.c0))));
SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON x'83fa' RIGHT OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c1, vt0.c0)))IS((- (rt0.c0)))) WHERE (vt0.c2) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON x'83fa' RIGHT OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c1, vt0.c0)))IS((- (rt0.c0)))) WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON x'83fa' RIGHT OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c1, vt0.c0)))IS((- (rt0.c0)))) WHERE (((vt0.c2) ISNULL));
SELECT vt0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON x'83fa' RIGHT OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c1, vt0.c0)))IS((- (rt0.c0))));
SELECT DISTINCT * FROM t0, vt0, rt0, vt1;
SELECT DISTINCT * FROM t0, vt0, rt0, vt1 WHERE (LIKE((vt0.c2 IN (vt0.c2)), ((vt1.c0) NOT BETWEEN (t0.c4) AND (0.6612916627047197)), '&')) UNION SELECT DISTINCT * FROM t0, vt0, rt0, vt1 WHERE ((NOT (LIKE((vt0.c2 IN (vt0.c2)), ((vt1.c0) NOT BETWEEN (t0.c4) AND (0.6612916627047197)), '&')))) UNION SELECT DISTINCT * FROM t0, vt0, rt0, vt1 WHERE (((LIKE((vt0.c2 IN (vt0.c2)), ((vt1.c0) NOT BETWEEN (t0.c4) AND (0.6612916627047197)), '&')) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0, vt1;
SELECT ALL rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0;
SELECT rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE ('899757160') GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0 UNION SELECT rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ('899757160'))) GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0 UNION SELECT rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE ((('899757160') ISNULL)) GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c2, rt0.c0;
SELECT t0.c4, rt0.c2, vt0.c0 FROM rt0, t0, vt1, vt0 GROUP BY t0.c4, rt0.c2, vt0.c0;
SELECT t0.c4, rt0.c2, vt0.c0 FROM rt0, t0, vt1, vt0 GROUP BY t0.c4, rt0.c2, vt0.c0 HAVING TOTAL(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT t0.c4, rt0.c2, vt0.c0 FROM rt0, t0, vt1, vt0 GROUP BY t0.c4, rt0.c2, vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL t0.c4, rt0.c2, vt0.c0 FROM rt0, t0, vt1, vt0 GROUP BY t0.c4, rt0.c2, vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, t0.c4, rt0.c0 FROM t0, rt0;
SELECT rt0.c1, rt0.c2, t0.c4, rt0.c0 FROM t0, rt0 WHERE (x'3a7a') UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c4, rt0.c0 FROM t0, rt0 WHERE ((NOT (x'3a7a'))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c4, rt0.c0 FROM t0, rt0 WHERE (((x'3a7a') ISNULL));
SELECT ALL rt0.c1, rt0.c2, t0.c4, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c4, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM vt0, t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c4, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM vt0, t0, rt0 WHERE ((- ((vt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c4, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM vt0, t0, rt0 NOT INDEXED WHERE ((NOT ((- ((vt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c4, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM vt0, t0, rt0 WHERE ((((- ((vt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, t0.c4, rt0.c2, vt0.c2, vt0.c0, vt0.c1 FROM vt0, t0, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 NOT INDEXED, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, vt1 WHERE ((((NULL)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE rt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT ((((NULL)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE rt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, vt1 WHERE ((((((NULL)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE rt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 NOT INDEXED, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING CAST(GROUP_CONCAT(COUNT(vt0.c2)) AS INTEGER) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(vt0.c2)) AS INTEGER))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((CAST(GROUP_CONCAT(COUNT(vt0.c2)) AS INTEGER)) ISNULL);
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c4 COLLATE RTRIM THEN CASE vt1.c0  WHEN NULL THEN t0.c4 ELSE vt1.c0 END END;
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c4 COLLATE RTRIM THEN CASE vt1.c0  WHEN NULL THEN t0.c4 ELSE vt1.c0 END END WHERE ((((CAST(rt0.c2 AS TEXT)))<>((CASE ''  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c4 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c4 THEN rt0.c1 WHEN t0.c4 THEN rt0.c0 ELSE vt1.c0 END)))) UNION ALL SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c4 COLLATE RTRIM THEN CASE vt1.c0  WHEN NULL THEN t0.c4 ELSE vt1.c0 END END WHERE ((NOT ((((CAST(rt0.c2 AS TEXT)))<>((CASE ''  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c4 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c4 THEN rt0.c1 WHEN t0.c4 THEN rt0.c0 ELSE vt1.c0 END)))))) UNION ALL SELECT * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c4 COLLATE RTRIM THEN CASE vt1.c0  WHEN NULL THEN t0.c4 ELSE vt1.c0 END END WHERE ((((((CAST(rt0.c2 AS TEXT)))!=((CASE ''  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c4 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c4 THEN rt0.c1 WHEN t0.c4 THEN rt0.c0 ELSE vt1.c0 END)))) ISNULL));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c4 COLLATE RTRIM THEN CASE vt1.c0  WHEN NULL THEN t0.c4 ELSE vt1.c0 END END;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt1, t0, vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt1, t0, vt0, rt0 WHERE (((((t0.c4)<=(rt0.c2)))IS NOT(t0.c4 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt1, t0, vt0, rt0 WHERE ((NOT (((((t0.c4)<=(rt0.c2)))IS NOT(t0.c4 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt1, t0, vt0, rt0 WHERE (((((((t0.c4)<=(rt0.c2)))IS NOT(t0.c4 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt1, t0, vt0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c1)) AS BLOB)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST((NOT (rt0.c1)) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((GROUP_CONCAT(vt0.c1))OR(CAST(vt0.c1 AS TEXT))))AND(vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((((GROUP_CONCAT(vt0.c1))OR(CAST(vt0.c1 AS TEXT))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((GROUP_CONCAT(vt0.c1))OR(CAST(vt0.c1 AS TEXT))))AND(vt0.c0))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((GROUP_CONCAT(vt0.c1))OR(CAST(vt0.c1 AS TEXT))))AND(vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((((GROUP_CONCAT(vt0.c1))OR(CAST(vt0.c1 AS TEXT))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((GROUP_CONCAT(vt0.c1))OR(CAST(vt0.c1 AS TEXT))))AND(vt0.c0))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM vt1, vt0, t0, rt0;
SELECT * FROM vt1, vt0, t0, rt0 WHERE (((x'')LIKE(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE ((NOT (((x'')LIKE(vt1.c0)) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT * FROM vt1, vt0, t0, rt0 WHERE (((((x'')LIKE(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, vt0, t0, rt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((IFNULL(DISTINCT rt0.c2, rt0.c1)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((IFNULL(DISTINCT rt0.c2, rt0.c1)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((IFNULL(DISTINCT rt0.c2, rt0.c1)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT t0.c4, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0, vt0, rt0 GROUP BY t0.c4, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL t0.c4, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0, vt0, rt0 WHERE (rt0.c2) GROUP BY t0.c4, rt0.c0, vt1.c0, rt0.c1 UNION SELECT t0.c4, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0, vt0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY t0.c4, rt0.c0, vt1.c0, rt0.c1 UNION SELECT t0.c4, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0, vt0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY t0.c4, rt0.c0, vt1.c0, rt0.c1;
SELECT t0.c4, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0, vt0, rt0 GROUP BY t0.c4, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL vt0.c0, vt1.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c1, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c1, vt0.c2, vt0.c1 HAVING ((AVG(MIN(rt0.c1)))>>(MAX(rt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c1, vt0.c2, vt0.c1 HAVING (NOT (((AVG(MIN(rt0.c1)))>>(MAX(rt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c1, vt0.c2, vt0.c1 HAVING ((((AVG(MIN(rt0.c1)))>>(MAX(rt0.c0)))) ISNULL);
SELECT MIN(t0.c4) FROM vt0, vt1, t0, rt0 ORDER BY '2020951933' DESC, ((((((NULL)AND(0.07556316704393162)))OR(x''))) BETWEEN ('1502097462') AND (((((0.5428621875651013)AND(rt0.c1)))OR(vt0.c2)))), CASE (vt1.c0 IN (rt0.c2))  WHEN rt0.c1 THEN ((((rt0.c1)OR(vt0.c2)))AND(vt0.c1)) END  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(vt0.c2 AS TEXT))LIKE((vt0.c2 IN (vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c2;
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(vt0.c2 AS TEXT))LIKE((vt0.c2 IN (vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c2 WHERE ((((+ ('泬['))) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((CAST(vt0.c2 AS TEXT))LIKE((vt0.c2 IN (vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c2 WHERE ((NOT ((((+ ('泬['))) IS TRUE)))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(vt0.c2 AS TEXT))LIKE((vt0.c2 IN (vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c2 WHERE ((((((+ ('泬['))) IS TRUE)) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(vt0.c2 AS TEXT))LIKE((vt0.c2 IN (vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)/(x'1dd7')))>>(((vt1.c0)GLOB(NULL))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)/(x'1dd7')))>>(((vt1.c0)GLOB(NULL))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)/(x'1dd7')))>>(((vt1.c0)GLOB(NULL))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0, t0 GROUP BY vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1;
SELECT vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0, t0 WHERE (vt0.c2) GROUP BY vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1 UNION SELECT vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0, t0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1 UNION SELECT ALL vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0, t0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1;
SELECT vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0, t0 GROUP BY vt0.c1, vt1.c0, rt0.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c0, vt0.c2, rt0.c1;
SELECT vt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c0, vt0.c2, rt0.c1 HAVING TOTAL(AVG(SUM(vt0.c2))) UNION ALL SELECT vt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c0, vt0.c2, rt0.c1 HAVING (NOT (TOTAL(AVG(SUM(vt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c0, vt0.c2, rt0.c1 HAVING ((TOTAL(AVG(SUM(vt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE) ORDER BY (((((~ (rt0.c0)))AND((rt0.c1 IN ()))))OR((NOT (rt0.c0)))) DESC, ((((((((-499364251)AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))OR((rt0.c2 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) DESC;
SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL) COLLATE NOCASE))) ORDER BY (((((~ (rt0.c0)))AND((rt0.c1 IN ()))))OR((NOT (rt0.c0)))) DESC, ((((((((-499364251)AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))OR((rt0.c2 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL) COLLATE NOCASE) ISNULL)) ORDER BY (((((~ (rt0.c0)))AND((rt0.c1 IN ()))))OR((NOT (rt0.c0)))) DESC, ((((((((-499364251)AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))OR((rt0.c2 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) DESC;
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, t0.c4 FROM rt0, t0, vt1, vt0;
SELECT DISTINCT rt0.c2, t0.c4 FROM rt0, t0, vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)=(t0.c4)))) AND (((NOT (rt0.c1)))))) UNION SELECT DISTINCT rt0.c2, t0.c4 FROM rt0, t0, vt1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(t0.c4)))) AND (((NOT (rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2, t0.c4 FROM rt0, t0, vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(t0.c4)))) AND (((NOT (rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c4 FROM rt0, t0, vt1, vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING GROUP_CONCAT(CASE WHEN AVG(t0.c4) THEN t0.c4 ELSE MAX(GROUP_CONCAT(t0.c4)) END) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT (GROUP_CONCAT(CASE WHEN AVG(t0.c4) THEN t0.c4 ELSE MAX(GROUP_CONCAT(t0.c4)) END))) UNION ALL SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((GROUP_CONCAT(CASE WHEN AVG(t0.c4) THEN t0.c4 ELSE MAX(GROUP_CONCAT(t0.c4)) END)) ISNULL);
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE BINARY;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE BINARY WHERE (CASE (vt0.c1 IN ())  WHEN 0.14573855305846495 THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c0 IN ()) END) UNION ALL SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE BINARY WHERE ((NOT (CASE (vt0.c1 IN ())  WHEN 0.14573855305846495 THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c0 IN ()) END))) UNION ALL SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE BINARY WHERE (((CASE (vt0.c1 IN ())  WHEN 0.14573855305846495 THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE BINARY;
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt0, t0, rt0;
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt0, t0, rt0 WHERE ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))==((((((1.494097306E9)OR(rt0.c0)))AND(vt0.c1)))))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt0, t0, rt0 WHERE ((NOT ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))=((((((1.494097306E9)OR(rt0.c0)))AND(vt0.c1)))))))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt0, t0, rt0 WHERE ((((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))==((((((1.494097306E9)OR(rt0.c0)))AND(vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt0, t0, rt0;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT t0.c4 FROM t0 WHERE (((((t0.c4)OR(t0.c4)))OR(t0.c4)) COLLATE BINARY) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0 WHERE ((NOT (((((t0.c4)OR(t0.c4)))OR(t0.c4)) COLLATE BINARY))) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0 WHERE (((((((t0.c4)OR(t0.c4)))OR(t0.c4)) COLLATE BINARY) ISNULL)) GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL vt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0, vt0.c1, t0.c4;
SELECT ALL vt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0, vt0.c1, t0.c4 HAVING COUNT(TOTAL(rt0.c0)) UNION ALL SELECT vt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0, vt0.c1, t0.c4 HAVING (NOT (COUNT(TOTAL(rt0.c0)))) UNION ALL SELECT ALL vt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0, vt0.c1, t0.c4 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0, vt0.c1, t0.c4 HAVING ((COUNT(TOTAL(rt0.c0))) ISNULL);
SELECT ALL t0.c4, rt0.c1 FROM t0, rt0;
SELECT ALL t0.c4, rt0.c1 FROM t0, rt0 WHERE (((t0.c4) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL t0.c4, rt0.c1 FROM t0, rt0 WHERE ((NOT (((t0.c4) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c4, rt0.c1 FROM t0, rt0 WHERE (((((t0.c4) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL t0.c4, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON (NOT ((((rt0.c0, t0.c4, rt0.c0)) BETWEEN ((t0.c4, rt0.c2, rt0.c2)) AND ((rt0.c0, vt1.c0, x'a9d2fab1'))))) LEFT OUTER JOIN rt0 ON vt1.c0;
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON (NOT ((((rt0.c0, t0.c4, rt0.c0)) BETWEEN ((t0.c4, rt0.c2, rt0.c2)) AND ((rt0.c0, vt1.c0, x'a9d2fab1'))))) LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON (NOT ((((rt0.c0, t0.c4, rt0.c0)) BETWEEN ((t0.c4, rt0.c2, rt0.c2)) AND ((rt0.c0, vt1.c0, x'a9d2fab1'))))) LEFT OUTER JOIN rt0 ON vt1.c0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON (NOT ((((rt0.c0, t0.c4, rt0.c0)) BETWEEN ((t0.c4, rt0.c2, rt0.c2)) AND ((rt0.c0, vt1.c0, x'a9d2fab1'))))) LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON (NOT ((((rt0.c0, t0.c4, rt0.c0)) BETWEEN ((t0.c4, rt0.c2, rt0.c2)) AND ((rt0.c0, vt1.c0, x'a9d2fab1'))))) LEFT OUTER JOIN rt0 ON vt1.c0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, t0.c4 FROM vt0, rt0, vt1, t0 GROUP BY vt0.c1, t0.c4;
SELECT ALL vt0.c1, t0.c4 FROM vt0, rt0, vt1, t0 GROUP BY vt0.c1, t0.c4 HAVING ((((rt0.c1)!=(MAX(MIN('''O'))))) BETWEEN (t0.c4) AND (COUNT(*))) UNION ALL SELECT vt0.c1, t0.c4 FROM vt0, rt0, vt1, t0 GROUP BY vt0.c1, t0.c4 HAVING (NOT (((((rt0.c1)<>(MAX(MIN('''O'))))) BETWEEN (t0.c4) AND (COUNT(*))))) UNION ALL SELECT vt0.c1, t0.c4 FROM vt0, rt0, vt1, t0 GROUP BY vt0.c1, t0.c4 HAVING ((((((rt0.c1)!=(MAX(MIN('''O'))))) BETWEEN (t0.c4) AND (COUNT(*)))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c4)||(t0.c4))) NOTNULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c4)||(t0.c4))) NOTNULL)))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c4)||(t0.c4))) NOTNULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, vt0.c0, t0.c4 FROM vt0, rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, vt0.c0, t0.c4 FROM vt0, rt0, t0 WHERE ((((((rt0.c1))>((vt0.c0)))) NOT NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, vt0.c0, t0.c4 FROM vt0, rt0, t0 WHERE ((NOT ((((((rt0.c1))>((vt0.c0)))) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, vt0.c0, t0.c4 FROM vt0, rt0, t0 WHERE ((((((((rt0.c1))>((vt0.c0)))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, vt0.c0, t0.c4 FROM vt0, rt0, t0;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 WHERE ((- (((((((((t0.c4)AND(t0.c4)))AND(x'')))OR(t0.c4)))AND(t0.c4))))) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE ((NOT ((- (((((((((t0.c4)AND(t0.c4)))AND(x'')))OR(t0.c4)))AND(t0.c4))))))) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0 WHERE ((((- (((((((((t0.c4)AND(t0.c4)))AND(x'')))OR(t0.c4)))AND(t0.c4))))) ISNULL)) GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT vt0.c0, t0.c4 FROM vt1 INDEXED BY i44, rt0 INDEXED BY i44, t0, vt0 GROUP BY vt0.c0, t0.c4;
SELECT SUM(json_array_length(CAST(0.6491435986125118 AS BLOB))) FROM rt0, vt1, vt0, t0 NOT INDEXED ORDER BY (((((((((((((NOT (1.770077619E9)))OR(((vt0.c2)||(rt0.c0)))))AND(((vt0.c2)<<(rt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c0 THEN t0.c4 END)))AND(((rt0.c0) IS TRUE))))AND((((rt0.c1))>=((t0.c4))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(TYPEOF(DISTINCT vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON CASE ((vt1.c0)*(vt1.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END;
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(TYPEOF(DISTINCT vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON CASE ((vt1.c0)*(vt1.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END WHERE ((((rt0.c1 COLLATE RTRIM))<=((CAST(vt0.c1 AS BLOB))))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(TYPEOF(DISTINCT vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON CASE ((vt1.c0)*(vt1.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END WHERE ((NOT ((((rt0.c1 COLLATE RTRIM))<=((CAST(vt0.c1 AS BLOB))))))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(TYPEOF(DISTINCT vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON CASE ((vt1.c0)*(vt1.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END WHERE ((((((rt0.c1 COLLATE RTRIM))<=((CAST(vt0.c1 AS BLOB))))) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(TYPEOF(DISTINCT vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON CASE ((vt1.c0)*(vt1.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END;
SELECT DISTINCT rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(t0.c4)))OR(rt0.c1)) THEN t0.c4 COLLATE BINARY ELSE CAST(rt0.c2 AS REAL) END;
SELECT DISTINCT rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(t0.c4)))OR(rt0.c1)) THEN t0.c4 COLLATE BINARY ELSE CAST(rt0.c2 AS REAL) END WHERE (CAST(((((((((rt0.c1)AND(vt0.c0)))AND(t0.c4)))OR(t0.c4)))OR(x'')) AS INTEGER)) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(t0.c4)))OR(rt0.c1)) THEN t0.c4 COLLATE BINARY ELSE CAST(rt0.c2 AS REAL) END WHERE ((NOT (CAST(((((((((rt0.c1)AND(vt0.c0)))AND(t0.c4)))OR(t0.c4)))OR(x'')) AS INTEGER)))) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(t0.c4)))OR(rt0.c1)) THEN t0.c4 COLLATE BINARY ELSE CAST(rt0.c2 AS REAL) END WHERE (((CAST(((((((((rt0.c1)AND(vt0.c0)))AND(t0.c4)))OR(t0.c4)))OR(x'')) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(t0.c4)))OR(rt0.c1)) THEN t0.c4 COLLATE BINARY ELSE CAST(rt0.c2 AS REAL) END;
SELECT t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM t0, rt0, vt1 GROUP BY t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM t0, rt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (t0.c4) AND (t0.c4)) COLLATE RTRIM) GROUP BY t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM t0, rt0, vt1 WHERE ((NOT (((rt0.c1) NOT BETWEEN (t0.c4) AND (t0.c4)) COLLATE RTRIM))) GROUP BY t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM t0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (t0.c4) AND (t0.c4)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM t0, rt0, vt1 GROUP BY t0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING (((AVG(t0.c4), t0.c4, t0.c4)) NOT BETWEEN ((((((t0.c4)AND(MAX(t0.c4))))OR(t0.c4)), ((((MAX(COUNT(t0.c4)))AND(GROUP_CONCAT(TOTAL(t0.c4)))))AND(MIN(t0.c4))), GROUP_CONCAT(t0.c4))) AND ((COUNT(t0.c4), CASE WHEN MIN(t0.c4) THEN TOTAL(t0.c4) END, SUM(MAX(SUM(t0.c4)))))) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT ((((AVG(t0.c4), t0.c4, t0.c4)) NOT BETWEEN ((((((t0.c4)AND(MAX(t0.c4))))OR(t0.c4)), ((((MAX(COUNT(t0.c4)))AND(GROUP_CONCAT(TOTAL(t0.c4)))))AND(MIN(t0.c4))), GROUP_CONCAT(t0.c4))) AND ((COUNT(t0.c4), CASE WHEN MIN(t0.c4) THEN TOTAL(t0.c4) END, SUM(MAX(SUM(t0.c4)))))))) UNION ALL SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING (((((AVG(t0.c4), t0.c4, t0.c4)) NOT BETWEEN ((((((t0.c4)AND(MAX(t0.c4))))OR(t0.c4)), ((((MAX(COUNT(t0.c4)))AND(GROUP_CONCAT(TOTAL(t0.c4)))))AND(MIN(t0.c4))), GROUP_CONCAT(t0.c4))) AND ((COUNT(t0.c4), CASE WHEN MIN(t0.c4) THEN TOTAL(t0.c4) END, SUM(MAX(SUM(t0.c4))))))) ISNULL);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((0.09579886464855902) IS TRUE))AND(NULL));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((0.09579886464855902) IS TRUE))AND(NULL)) WHERE (((TYPEOF(vt0.c0))|(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((0.09579886464855902) IS TRUE))AND(NULL)) WHERE ((NOT (((TYPEOF(vt0.c0))|(((vt0.c0) IS TRUE)))))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((0.09579886464855902) IS TRUE))AND(NULL)) WHERE (((((TYPEOF(vt0.c0))|(((vt0.c0) IS TRUE)))) ISNULL));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((0.09579886464855902) IS TRUE))AND(NULL));
SELECT DISTINCT * FROM vt1, t0, rt0, vt0;
SELECT DISTINCT * FROM vt1, t0, rt0, vt0 WHERE (LOWER(CAST(rt0.c1 AS BLOB))) UNION SELECT DISTINCT * FROM vt1, t0, rt0, vt0 WHERE ((NOT (LOWER(CAST(rt0.c1 AS BLOB))))) UNION SELECT DISTINCT * FROM vt1, t0, rt0, vt0 WHERE (((LOWER(CAST(rt0.c1 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, rt0, vt0;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM rt0, t0 WHERE ((((rt0.c2 IN ())) IS FALSE)) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM rt0, t0 WHERE ((NOT ((((rt0.c2 IN ())) IS FALSE)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM rt0, t0 WHERE ((((((rt0.c2 IN ())) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(x'7341')) NOT BETWEEN (MIN(SUM(MIN(AVG(vt1.c0)))) COLLATE BINARY) AND ((+ (vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(x'7341')) NOT BETWEEN (MIN(SUM(MIN(AVG(vt1.c0)))) COLLATE BINARY) AND ((+ (vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(x'7341')) NOT BETWEEN (MIN(SUM(MIN(AVG(vt1.c0)))) COLLATE BINARY) AND ((+ (vt1.c0))))) ISNULL);
SELECT SUM(x'') FROM vt0 ORDER BY JULIANDAY((((vt0.c1, vt0.c1, 0X581a18f3))<=((vt0.c2, vt0.c0, NULL))), ((vt0.c2)IS NOT(vt0.c2)), '647403316', ((0xffffffffa643d0fd)LIKE(vt0.c2)), ((vt0.c2)<<(vt0.c0)), ((vt0.c2)=(vt0.c0)), CAST(vt0.c2 AS REAL)) ASC  NULLS FIRST, (NOT (1851112449)) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0, vt1;
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE ((((((rt0.c1)<(vt1.c0))))<=((CAST(vt1.c0 AS TEXT))))) UNION ALL SELECT * FROM t0, rt0, vt0, vt1 WHERE ((NOT ((((((rt0.c1)<(vt1.c0))))<=((CAST(vt1.c0 AS TEXT))))))) UNION ALL SELECT * FROM t0, rt0, vt0, vt1 WHERE ((((((((rt0.c1)<(vt1.c0))))<=((CAST(vt1.c0 AS TEXT))))) ISNULL));
SELECT ALL * FROM t0, rt0, vt0, vt1;
SELECT DISTINCT rt0.c1, t0.c4, vt0.c2, rt0.c0, vt1.c0 FROM vt0, t0, rt0, vt1;
SELECT DISTINCT rt0.c1, t0.c4, vt0.c2, rt0.c0, vt1.c0 FROM vt0, t0, rt0, vt1 WHERE (((((vt0.c0)>(t0.c4))) BETWEEN ((rt0.c1 IN ())) AND (((vt1.c0)+(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, t0.c4, vt0.c2, rt0.c0, vt1.c0 FROM vt0, t0, rt0, vt1 WHERE ((NOT (((((vt0.c0)>(t0.c4))) BETWEEN ((rt0.c1 IN ())) AND (((vt1.c0)+(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, t0.c4, vt0.c2, rt0.c0, vt1.c0 FROM vt0, t0, rt0, vt1 WHERE (((((((vt0.c0)>(t0.c4))) BETWEEN ((rt0.c1 IN ())) AND (((vt1.c0)+(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c4, vt0.c2, rt0.c0, vt1.c0 FROM vt0, t0, rt0, vt1;
SELECT ALL vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0 FROM vt1, rt0, vt0, t0 GROUP BY vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0;
SELECT ALL vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0 FROM vt1, rt0, vt0, t0 WHERE (((((rt0.c2) IS TRUE))LIKE((+ (t0.c4))))) GROUP BY vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0 FROM vt1, rt0, vt0, t0 WHERE ((NOT (((((rt0.c2) IS TRUE))LIKE((+ (t0.c4))))))) GROUP BY vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0 FROM vt1, rt0, vt0, t0 WHERE (((((((rt0.c2) IS TRUE))LIKE((+ (t0.c4))))) ISNULL)) GROUP BY vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0;
SELECT ALL vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0 FROM vt1, rt0, vt0, t0 GROUP BY vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c2, t0.c4, rt0.c1, vt0.c0;
SELECT vt0.c2, rt0.c1 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c2, rt0.c1;
SELECT vt0.c2, rt0.c1 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c2, rt0.c1 HAVING (~ (COUNT(SUM(rt0.c0)))) COLLATE BINARY UNION ALL SELECT ALL vt0.c2, rt0.c1 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c2, rt0.c1 HAVING (NOT ((~ (COUNT(SUM(rt0.c0)))) COLLATE BINARY)) UNION ALL SELECT vt0.c2, rt0.c1 FROM t0, vt0, vt1, rt0 GROUP BY vt0.c2, rt0.c1 HAVING (((~ (COUNT(SUM(rt0.c0)))) COLLATE BINARY) ISNULL);
SELECT ALL MAX(CASE WHEN ((0.14573855305846495)>(t0.c4)) THEN t0.c4 COLLATE NOCASE WHEN ((rt0.c2)*(rt0.c2)) THEN NULL WHEN (- (rt0.c2)) THEN CAST(rt0.c1 AS TEXT) ELSE t0.c4 COLLATE NOCASE END) FROM t0, rt0 ORDER BY rt0.c2  NULLS FIRST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((LENGTH(rt0.c0))*((rt0.c0 IN (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((LENGTH(rt0.c0))*((rt0.c0 IN (rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE (((((LENGTH(rt0.c0))*((rt0.c0 IN (rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2 FROM vt0, t0, vt1, rt0 GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2;
SELECT t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2 FROM vt0, t0, vt1, rt0 WHERE (CASE WHEN ((vt0.c0)IS NOT(vt0.c2)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2 UNION SELECT ALL t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2 FROM vt0, t0, vt1, rt0 WHERE ((NOT (CASE WHEN ((vt0.c0)IS NOT(vt0.c2)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END))) GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2 UNION SELECT ALL t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2 FROM vt0, t0, vt1, rt0 WHERE (((CASE WHEN ((vt0.c0)IS NOT(vt0.c2)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) ISNULL)) GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2;
SELECT t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2 FROM vt0, t0, vt1, rt0 GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2, rt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY vt1.c0, vt0.c2, rt0.c0;
SELECT vt1.c0, vt0.c2, rt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY vt1.c0, vt0.c2, rt0.c0 HAVING (((SUM(rt0.c0))) BETWEEN ((((TOTAL(SUM(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(rt0.c0)))))))))<=(vt0.c0)))) AND ((MAX(rt0.c2)))) UNION ALL SELECT vt1.c0, vt0.c2, rt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY vt1.c0, vt0.c2, rt0.c0 HAVING (NOT ((((SUM(rt0.c0))) BETWEEN ((((TOTAL(SUM(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(rt0.c0)))))))))<=(vt0.c0)))) AND ((MAX(rt0.c2)))))) UNION ALL SELECT vt1.c0, vt0.c2, rt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY vt1.c0, vt0.c2, rt0.c0 HAVING (((((SUM(rt0.c0))) BETWEEN ((((TOTAL(SUM(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(rt0.c0)))))))))<=(vt0.c0)))) AND ((MAX(rt0.c2))))) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (-323677868) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (-323677868))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((-323677868) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST(CAST(vt0.c1 AS BLOB) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((x'8494' IN ()))LIKE(((vt0.c0)/(vt0.c2))))) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((x'8494' IN ()))LIKE(((vt0.c0)/(vt0.c2))))))) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((x'8494' IN ()))LIKE(((vt0.c0)/(vt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT vt1.c0, t0.c4 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0, t0.c4 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c4 HAVING COUNT(SUM(vt1.c0)) UNION ALL SELECT ALL vt1.c0, t0.c4 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c4 HAVING (NOT (COUNT(SUM(vt1.c0)))) UNION ALL SELECT vt1.c0, t0.c4 FROM vt1, vt0 NOT INDEXED, t0 GROUP BY vt1.c0, t0.c4 HAVING ((COUNT(SUM(vt1.c0))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (- (((rt0.c2) IS TRUE)));
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (- (((rt0.c2) IS TRUE))) WHERE (((NULL COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c1)OR(t0.c4)))OR(vt0.c1)))AND(rt0.c1)))OR(rt0.c1))) AND (((vt0.c1)=(vt0.c2))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (- (((rt0.c2) IS TRUE))) WHERE ((NOT (((NULL COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c1)OR(t0.c4)))OR(vt0.c1)))AND(rt0.c1)))OR(rt0.c1))) AND (((vt0.c1)=(vt0.c2))))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (- (((rt0.c2) IS TRUE))) WHERE (((((NULL COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c1)OR(t0.c4)))OR(vt0.c1)))AND(rt0.c1)))OR(rt0.c1))) AND (((vt0.c1)=(vt0.c2))))) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (- (((rt0.c2) IS TRUE)));
SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN vt0 ON '\nW';
SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN vt0 ON '\nW' WHERE (((vt0.c1) BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS BLOB)))) UNION SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN vt0 ON '\nW' WHERE ((NOT (((vt0.c1) BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS BLOB)))))) UNION SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN vt0 ON '\nW' WHERE (((((vt0.c1) BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN vt0 ON '\nW';
SELECT ALL t0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)OR(t0.c4)))AND(vt1.c0)) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY GROUP BY t0.c4, rt0.c2;
SELECT t0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)OR(t0.c4)))AND(vt1.c0)) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY WHERE (ABS(DISTINCT CASE rt0.c0  WHEN t0.c4 THEN rt0.c0 END)) GROUP BY t0.c4, rt0.c2 UNION SELECT t0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)OR(t0.c4)))AND(vt1.c0)) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY WHERE ((NOT (ABS(DISTINCT CASE rt0.c0  WHEN t0.c4 THEN rt0.c0 END)))) GROUP BY t0.c4, rt0.c2 UNION SELECT t0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)OR(t0.c4)))AND(vt1.c0)) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY WHERE (((ABS(DISTINCT CASE rt0.c0  WHEN t0.c4 THEN rt0.c0 END)) ISNULL)) GROUP BY t0.c4, rt0.c2;
SELECT ALL t0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)OR(t0.c4)))AND(vt1.c0)) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY GROUP BY t0.c4, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MIN(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MIN(AVG(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MIN(AVG(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c2)>>(vt1.c0))) IS FALSE)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((vt0.c2)>>(vt1.c0))) IS FALSE)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((vt0.c2)>>(vt1.c0))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))|(((vt1.c0) NOT BETWEEN (0X42b3fa00) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))|(((vt1.c0) NOT BETWEEN (0X42b3fa00) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))|(((vt1.c0) NOT BETWEEN (0x42b3fa00) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c4, vt0.c2 FROM t0 RIGHT OUTER JOIN vt1 ON (~ (((vt1.c0)AND(vt0.c1)))) RIGHT OUTER JOIN vt0 ON CASE ((vt0.c2)||(vt0.c2))  WHEN ((((vt0.c2)AND(NULL)))OR(x'')) THEN ((vt1.c0)!=(vt0.c0)) END GROUP BY t0.c4, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c4, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, t0, vt0;
SELECT t0.c4, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, t0, vt0 WHERE (CAST(vt0.c1 AS REAL)) UNION ALL SELECT t0.c4, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (CAST(vt0.c1 AS REAL)))) UNION ALL SELECT ALL t0.c4, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) ISNULL));
SELECT ALL t0.c4, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)*(0.7831341505944602))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0)*(0.7831341505944602))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)*(0.7831341505944602))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c2 IN (vt1.c0)) IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((rt0.c2 IN (vt1.c0)) IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c2 IN (vt1.c0)) IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING MIN(CASE WHEN vt0.c0 THEN vt0.c1 END) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (MIN(CASE WHEN vt0.c0 THEN vt0.c1 END))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((MIN(CASE WHEN vt0.c0 THEN vt0.c1 END)) ISNULL);
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING MIN(CASE WHEN vt0.c0 THEN vt0.c1 END) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (MIN(CASE WHEN vt0.c0 THEN vt0.c1 END))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((MIN(CASE WHEN vt0.c0 THEN vt0.c1 END)) ISNULL);
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL t0.c4 FROM t0;
SELECT ALL t0.c4 FROM t0 WHERE (0.33942701572733236) UNION ALL SELECT t0.c4 FROM t0 WHERE ((NOT (0.33942701572733236))) UNION ALL SELECT t0.c4 FROM t0 WHERE (((0.33942701572733236) ISNULL));
SELECT ALL t0.c4 FROM t0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN COALESCE(vt0.c2, vt1.c0, -1637803073, vt0.c0) WHEN (((rt0.c2)) BETWEEN ((vt0.c2)) AND ((NULL))) THEN NULL WHEN (('0.28596787315378647')<=(vt0.c0)) THEN ((vt0.c2)<=(rt0.c2)) ELSE (rt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN COALESCE(vt0.c2, vt1.c0, -1637803073, vt0.c0) WHEN (((rt0.c2)) BETWEEN ((vt0.c2)) AND ((NULL))) THEN NULL WHEN (('0.28596787315378647')<=(vt0.c0)) THEN ((vt0.c2)<=(rt0.c2)) ELSE (rt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN COALESCE(vt0.c2, vt1.c0, -1637803073, vt0.c0) WHEN (((rt0.c2)) BETWEEN ((vt0.c2)) AND ((NULL))) THEN NULL WHEN (('0.28596787315378647')<=(vt0.c0)) THEN ((vt0.c2)<=(rt0.c2)) ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((x'')AND(rt0.c1)))AND(vt1.c0))))) GROUP BY vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((x'')AND(rt0.c1)))AND(vt1.c0))))))) GROUP BY vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((x'')AND(rt0.c1)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c2, vt0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, rt0, t0 GROUP BY vt0.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2, vt0.c2, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, rt0, t0 GROUP BY vt0.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2, vt0.c2, vt0.c1, vt1.c0 HAVING ((((TOTAL(vt0.c0))OR(AVG(COUNT(*)))))AND(0.26007115768762024)) UNION ALL SELECT ALL vt0.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, rt0, t0 GROUP BY vt0.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2, vt0.c2, vt0.c1, vt1.c0 HAVING (NOT (((((TOTAL(vt0.c0))OR(AVG(COUNT(*)))))AND(0.26007115768762024)))) UNION ALL SELECT ALL vt0.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, rt0, t0 GROUP BY vt0.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2, vt0.c2, vt0.c1, vt1.c0 HAVING ((((((TOTAL(vt0.c0))OR(AVG(COUNT(*)))))AND(0.26007115768762024))) ISNULL);
SELECT ALL * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((vt0.c2)-(vt1.c0)) COLLATE NOCASE;
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((vt0.c2)-(vt1.c0)) COLLATE NOCASE WHERE (((((vt1.c0)&(t0.c4))) NOT BETWEEN ((- (vt1.c0))) AND ((~ (vt0.c0))))) UNION ALL SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((vt0.c2)-(vt1.c0)) COLLATE NOCASE WHERE ((NOT (((((vt1.c0)&(t0.c4))) NOT BETWEEN ((- (vt1.c0))) AND ((~ (vt0.c0))))))) UNION ALL SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((vt0.c2)-(vt1.c0)) COLLATE NOCASE WHERE (((((((vt1.c0)&(t0.c4))) NOT BETWEEN ((- (vt1.c0))) AND ((~ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((vt0.c2)-(vt1.c0)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, vt1.c0, t0.c4, t0.c4)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c4, t0.c4, t0.c4, t0.c4))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0, t0.c4, t0.c4)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c4, t0.c4, t0.c4, t0.c4))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, t0.c4, t0.c4)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c4, t0.c4, t0.c4, t0.c4))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE (COALESCE((((vt0.c2, vt0.c1, x'ef29')) BETWEEN ((rt0.c0, vt0.c2, 0.4423080019146336)) AND ((rt0.c0, vt0.c0, rt0.c0))), (vt0.c1 IN (rt0.c2)))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT (COALESCE((((vt0.c2, vt0.c1, x'ef29')) BETWEEN ((rt0.c0, vt0.c2, 0.4423080019146336)) AND ((rt0.c0, vt0.c0, rt0.c0))), (vt0.c1 IN (rt0.c2)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE (((COALESCE((((vt0.c2, vt0.c1, x'ef29')) BETWEEN ((rt0.c0, vt0.c2, 0.4423080019146336)) AND ((rt0.c0, vt0.c0, rt0.c0))), (vt0.c1 IN (rt0.c2)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING TOTAL(((SUM(GROUP_CONCAT(SUM(vt0.c2)))) NOT BETWEEN (vt0.c1) AND (x''))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (TOTAL(((SUM(GROUP_CONCAT(SUM(vt0.c2)))) NOT BETWEEN (vt0.c1) AND (x''))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((TOTAL(((SUM(GROUP_CONCAT(SUM(vt0.c2)))) NOT BETWEEN (vt0.c1) AND (x'')))) ISNULL);
SELECT vt1.c0, t0.c4 FROM rt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(x'', 0.5646129529181422) FULL OUTER JOIN vt1 ON 0.8553841503554115;
SELECT ALL vt1.c0, t0.c4 FROM rt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(x'', 0.5646129529181422) FULL OUTER JOIN vt1 ON 0.8553841503554115 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((((vt1.c0)>>(rt0.c1)))))) UNION ALL SELECT vt1.c0, t0.c4 FROM rt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(x'', 0.5646129529181422) FULL OUTER JOIN vt1 ON 0.8553841503554115 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((((vt1.c0)>>(rt0.c1)))))))) UNION ALL SELECT vt1.c0, t0.c4 FROM rt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(x'', 0.5646129529181422) FULL OUTER JOIN vt1 ON 0.8553841503554115 WHERE ((((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((((vt1.c0)>>(rt0.c1)))))) ISNULL));
SELECT vt1.c0, t0.c4 FROM rt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(x'', 0.5646129529181422) FULL OUTER JOIN vt1 ON 0.8553841503554115;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0, vt1 WHERE (((0.46607638704981436) NOTNULL) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0, vt1 WHERE ((NOT (((0.46607638704981436) NOTNULL) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0, vt1 WHERE (((((0.46607638704981436) NOTNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0, vt1;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 WHERE (((t0.c4) NOT NULL)) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE ((NOT (((t0.c4) NOT NULL)))) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 NOT INDEXED WHERE (((((t0.c4) NOT NULL)) ISNULL)) GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c1 HAVING CASE -3.723394E8  WHEN GROUP_CONCAT(t0.c4) THEN COUNT(*) ELSE load_extension(GROUP_CONCAT(t0.c4), vt0.c0) END UNION ALL SELECT vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c1 HAVING (NOT (CASE -3.723394E8  WHEN GROUP_CONCAT(t0.c4) THEN COUNT(*) ELSE load_extension(GROUP_CONCAT(t0.c4), vt0.c0) END)) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c1 HAVING ((CASE -3.723394E8  WHEN GROUP_CONCAT(t0.c4) THEN COUNT(*) ELSE load_extension(GROUP_CONCAT(t0.c4), vt0.c0) END) ISNULL);
SELECT vt0.c2, rt0.c0, vt1.c0, t0.c4 FROM rt0, t0, vt0, vt1;
SELECT vt0.c2, rt0.c0, vt1.c0, t0.c4 FROM rt0, t0, vt0, vt1 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT)) UNION ALL SELECT vt0.c2, rt0.c0, vt1.c0, t0.c4 FROM rt0, t0, vt0, vt1 WHERE ((NOT (CAST(((rt0.c1) IS FALSE) AS TEXT)))) UNION ALL SELECT ALL vt0.c2, rt0.c0, vt1.c0, t0.c4 FROM rt0, t0, vt0, vt1 WHERE (((CAST(((rt0.c1) IS FALSE) AS TEXT)) ISNULL));
SELECT vt0.c2, rt0.c0, vt1.c0, t0.c4 FROM rt0, t0, vt0, vt1;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON (~ (((vt0.c2)|(rt0.c2)))) INNER JOIN vt0 ON LOWER((((0X7d535ea5))>((vt0.c0)))) INNER JOIN vt1 ON (((NOT (rt0.c0))) BETWEEN (vt0.c1) AND (CAST(rt0.c2 AS REAL)));
SELECT t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0;
SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 WHERE (((((((((t0.c4)OR(vt1.c0)))AND(t0.c4)))AND(((t0.c4) NOTNULL))))OR((((t0.c4))>=((vt1.c0)))))) GROUP BY t0.c4, vt1.c0 UNION SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 WHERE ((NOT (((((((((t0.c4)OR(vt1.c0)))AND(t0.c4)))AND(((t0.c4) NOTNULL))))OR((((t0.c4))>=((vt1.c0)))))))) GROUP BY t0.c4, vt1.c0 UNION SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 WHERE (((((((((((t0.c4)OR(vt1.c0)))AND(t0.c4)))AND(((t0.c4) NOTNULL))))OR((((t0.c4))>=((vt1.c0)))))) ISNULL)) GROUP BY t0.c4, vt1.c0;
SELECT t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0;
SELECT t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING json((~ (t0.c4))) UNION ALL SELECT t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (json((~ (t0.c4))))) UNION ALL SELECT ALL t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((json((~ (t0.c4)))) ISNULL);
SELECT t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING json((~ (t0.c4))) UNION ALL SELECT t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (json((~ (t0.c4))))) UNION ALL SELECT ALL t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((json((~ (t0.c4)))) ISNULL);
SELECT t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL * FROM vt0, vt1 NOT INDEXED INNER JOIN rt0 ON LOWER(DISTINCT ((((0.08358424577587831)OR(rt0.c2)))OR(vt0.c2))) INNER JOIN t0 ON ((((t0.c4)IS(vt0.c1))) NOT BETWEEN ((NOT (NULL))) AND (((vt1.c0) NOT BETWEEN (NULL) AND ('0.5428621875651013'))));
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON LOWER(DISTINCT ((((0.08358424577587831)OR(rt0.c2)))OR(vt0.c2))) INNER JOIN t0 ON ((((t0.c4)IS(vt0.c1))) NOT BETWEEN ((NOT (NULL))) AND (((vt1.c0) NOT BETWEEN (NULL) AND ('0.5428621875651013')))) WHERE (CAST(((rt0.c2)IS NOT(rt0.c0)) AS BLOB)) UNION ALL SELECT * FROM vt0, vt1 INNER JOIN rt0 ON LOWER(DISTINCT ((((0.08358424577587831)OR(rt0.c2)))OR(vt0.c2))) INNER JOIN t0 ON ((((t0.c4)IS(vt0.c1))) NOT BETWEEN ((NOT (NULL))) AND (((vt1.c0) NOT BETWEEN (NULL) AND ('0.5428621875651013')))) WHERE ((NOT (CAST(((rt0.c2)IS NOT(rt0.c0)) AS BLOB)))) UNION ALL SELECT * FROM vt0, vt1 INNER JOIN rt0 ON LOWER(DISTINCT ((((0.08358424577587831)OR(rt0.c2)))OR(vt0.c2))) INNER JOIN t0 ON ((((t0.c4)IS(vt0.c1))) NOT BETWEEN ((NOT (NULL))) AND (((vt1.c0) NOT BETWEEN (NULL) AND ('0.5428621875651013')))) WHERE (((CAST(((rt0.c2)IS NOT(rt0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0, vt1 NOT INDEXED INNER JOIN rt0 ON LOWER(DISTINCT ((((0.08358424577587831)OR(rt0.c2)))OR(vt0.c2))) INNER JOIN t0 ON ((((t0.c4)IS(vt0.c1))) NOT BETWEEN ((NOT (NULL))) AND (((vt1.c0) NOT BETWEEN (NULL) AND ('0.5428621875651013'))));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((0xffffffffd2be762e))==((rt0.c1))))LIKE(CASE '400748908'  WHEN rt0.c1 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((0xffffffffd2be762e))=((rt0.c1))))LIKE(CASE '400748908'  WHEN rt0.c1 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((0Xffffffffd2be762e))==((rt0.c1))))LIKE(CASE '400748908'  WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN 0.4683390088529271 THEN ((rt0.c2)*(rt0.c2)) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c2 AS REAL)  WHEN 0.4683390088529271 THEN ((rt0.c2)*(rt0.c2)) END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE CAST(rt0.c2 AS REAL)  WHEN 0.4683390088529271 THEN ((rt0.c2)*(rt0.c2)) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (- (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT ((- (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (((- (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (- (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT ((- (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (((- (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT * FROM rt0, vt1, t0 INNER JOIN vt0 ON MAX(vt1.c0, vt0.c1) COLLATE RTRIM;
SELECT * FROM rt0, vt1, t0 INNER JOIN vt0 ON MAX(vt1.c0, vt0.c1) COLLATE RTRIM WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, vt1, t0 INNER JOIN vt0 ON MAX(vt1.c0, vt0.c1) COLLATE RTRIM WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, vt1, t0 INNER JOIN vt0 ON MAX(vt1.c0, vt0.c1) COLLATE RTRIM WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, vt1, t0 INNER JOIN vt0 ON MAX(vt1.c0, vt0.c1) COLLATE RTRIM;
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT vt0.c2, rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM rt0 FULL OUTER JOIN t0 ON ((((NULL) NOT BETWEEN (rt0.c0) AND (vt0.c1))) NOTNULL) RIGHT OUTER JOIN vt0 ON (((CAST(rt0.c1 AS NUMERIC)))!=((CAST(rt0.c1 AS NUMERIC)))) GROUP BY vt0.c2, rt0.c1, rt0.c2, rt0.c0, t0.c4;
SELECT rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 HAVING COUNT(NULLIF(rt0.c1, vt0.c1)) UNION ALL SELECT ALL rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (COUNT(NULLIF(rt0.c1, vt0.c1)))) UNION ALL SELECT ALL rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 HAVING ((COUNT(NULLIF(rt0.c1, vt0.c1))) ISNULL);
SELECT rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 HAVING COUNT(NULLIF(rt0.c1, vt0.c1)) UNION ALL SELECT ALL rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (COUNT(NULLIF(rt0.c1, vt0.c1)))) UNION ALL SELECT ALL rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 HAVING ((COUNT(NULLIF(rt0.c1, vt0.c1))) ISNULL);
SELECT rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, t0.c4, vt0.c1, vt0.c0, vt0.c2;
SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c1))>((NULL)))) AND (CAST(vt0.c2 AS INTEGER))) INNER JOIN rt0 ON (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)), rtreenode(vt0.c2, vt0.c2), NULLIF(vt0.c2, vt0.c2)))>((rt0.c2 COLLATE NOCASE, ((vt0.c2)AND(vt0.c2)), (~ (vt0.c1))))) FULL OUTER JOIN vt1 ON (NOT (CASE WHEN vt0.c2 THEN '䤃9' END));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((rt0.c1 IN ('6*]T7')) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c1 IN ('6*]T7')) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1 IN ('6*]T7')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0, vt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0, vt0, vt1 GROUP BY rt0.c2 HAVING GROUP_CONCAT(((SUM(COUNT(*)))>>(AVG(COUNT(*))))) UNION ALL SELECT rt0.c2 FROM t0, rt0, vt0, vt1 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(((SUM(COUNT(*)))>>(AVG(COUNT(*))))))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0, vt0, vt1 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(((SUM(COUNT(*)))>>(AVG(COUNT(*)))))) ISNULL);
SELECT MIN((NOT (vt0.c1)) COLLATE RTRIM) FROM t0, vt0, vt1, rt0;
SELECT * FROM rt0, vt0, vt1, t0;
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (CASE json_quote(rt0.c0)  WHEN (NOT (rt0.c1)) THEN ((rt0.c0)<('869081080')) ELSE (((vt0.c0))<((vt1.c0))) END) UNION ALL SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((NOT (CASE json_quote(rt0.c0)  WHEN (NOT (rt0.c1)) THEN ((rt0.c0)<('869081080')) ELSE (((vt0.c0))<((vt1.c0))) END))) UNION ALL SELECT * FROM rt0, vt0, vt1, t0 WHERE (((CASE json_quote(rt0.c0)  WHEN (NOT (rt0.c1)) THEN ((rt0.c0)<('869081080')) ELSE (((vt0.c0))<((vt1.c0))) END) ISNULL));
SELECT * FROM rt0, vt0, vt1, t0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (TYPEOF(((vt0.c1) IS FALSE))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (TYPEOF(((vt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((TYPEOF(((vt0.c1) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT ALL rt0.c1, t0.c4, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c4, rt0.c2;
SELECT ALL rt0.c1, t0.c4, rt0.c2 FROM rt0, t0 WHERE (((LTRIM(rt0.c2, t0.c4)) IS FALSE)) GROUP BY rt0.c1, t0.c4, rt0.c2 UNION SELECT rt0.c1, t0.c4, rt0.c2 FROM rt0, t0 WHERE ((NOT (((LTRIM(rt0.c2, t0.c4)) IS FALSE)))) GROUP BY rt0.c1, t0.c4, rt0.c2 UNION SELECT rt0.c1, t0.c4, rt0.c2 FROM rt0, t0 WHERE (((((LTRIM(rt0.c2, t0.c4)) IS FALSE)) ISNULL)) GROUP BY rt0.c1, t0.c4, rt0.c2;
SELECT ALL rt0.c1, t0.c4, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c4, rt0.c2;
SELECT ALL vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4;
SELECT vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING (- (COUNT(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING (NOT ((- (COUNT(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING (((- (COUNT(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4;
SELECT vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING (- (COUNT(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING (NOT ((- (COUNT(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING (((- (COUNT(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, t0.c4 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, t0.c4;
SELECT vt1.c0, vt0.c0, vt0.c2, vt0.c1, t0.c4 FROM vt1, t0, vt0;
SELECT vt1.c0, vt0.c0, vt0.c2, vt0.c1, t0.c4 FROM vt1, t0, vt0 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2, vt0.c1, t0.c4 FROM vt1, t0, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2, vt0.c1, t0.c4 FROM vt1, t0, vt0 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0, vt0.c0, vt0.c2, vt0.c1, t0.c4 FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (LIKELIHOOD(vt0.c2, 0.09189763867922363)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (LIKELIHOOD(vt0.c2, 0.09189763867922363)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((NOT (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (LIKELIHOOD(vt0.c2, 0.09189763867922363)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM INNER JOIN vt1 ON (((((((((((((vt0.c1 IN (rt0.c2)))OR((+ (vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))OR(vt0.c2 COLLATE BINARY)))OR((('1502097462') NOTNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0)))))AND(CASE vt0.c0  WHEN rt0.c0 THEN '0.7525061686134407' WHEN vt1.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 END)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM INNER JOIN vt1 ON (((((((((((((vt0.c1 IN (rt0.c2)))OR((+ (vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))OR(vt0.c2 COLLATE BINARY)))OR((('1502097462') NOTNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0)))))AND(CASE vt0.c0  WHEN rt0.c0 THEN '0.7525061686134407' WHEN vt1.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 END)) WHERE ((((~ (rt0.c2))) IS TRUE)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM INNER JOIN vt1 ON (((((((((((((vt0.c1 IN (rt0.c2)))OR((+ (vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))OR(vt0.c2 COLLATE BINARY)))OR((('1502097462') NOTNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0)))))AND(CASE vt0.c0  WHEN rt0.c0 THEN '0.7525061686134407' WHEN vt1.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 END)) WHERE ((NOT ((((~ (rt0.c2))) IS TRUE)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM INNER JOIN vt1 ON (((((((((((((vt0.c1 IN (rt0.c2)))OR((+ (vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))OR(vt0.c2 COLLATE BINARY)))OR((('1502097462') NOTNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0)))))AND(CASE vt0.c0  WHEN rt0.c0 THEN '0.7525061686134407' WHEN vt1.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 END)) WHERE ((((((~ (rt0.c2))) IS TRUE)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM INNER JOIN vt1 ON (((((((((((((vt0.c1 IN (rt0.c2)))OR((+ (vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))OR(vt0.c2 COLLATE BINARY)))OR((('1502097462') NOTNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0)))))AND(CASE vt0.c0  WHEN rt0.c0 THEN '0.7525061686134407' WHEN vt1.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 END)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0X3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0X3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING UPPER(vt0.c2) COLLATE RTRIM UNION ALL SELECT vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0x3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (UPPER(vt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0x3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING ((UPPER(vt0.c2) COLLATE RTRIM) ISNULL);
SELECT vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0X3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0X3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING UPPER(vt0.c2) COLLATE RTRIM UNION ALL SELECT vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0x3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (UPPER(vt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0x3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING ((UPPER(vt0.c2) COLLATE RTRIM) ISNULL);
SELECT vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)GLOB(rt0.c0))))<((((vt0.c2)/(vt0.c2))))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))+((- (0X3d7ba8ca)))) GROUP BY vt0.c2, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN CASE WHEN t0.c4 THEN t0.c4 END ELSE ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE WHEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN CASE WHEN t0.c4 THEN t0.c4 END ELSE ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE WHEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN CASE WHEN t0.c4 THEN t0.c4 END ELSE ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c0, t0.c4, rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, t0, vt1, rt0;
SELECT DISTINCT rt0.c0, t0.c4, rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, t0, vt1, rt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c0)<<(vt0.c2)))) AND ((((vt0.c0)/(t0.c4)))))) UNION SELECT DISTINCT rt0.c0, t0.c4, rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, t0, vt1, rt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((rt0.c0)<<(vt0.c2)))) AND ((((vt0.c0)/(t0.c4)))))))) UNION SELECT DISTINCT rt0.c0, t0.c4, rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, t0, vt1, rt0 WHERE ((((((vt0.c1)) BETWEEN ((((rt0.c0)<<(vt0.c2)))) AND ((((vt0.c0)/(t0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c0, t0.c4, rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2 FROM vt0, t0, vt1, rt0;
SELECT vt0.c1, rt0.c1 FROM vt1, t0, rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL vt0.c1, rt0.c1 FROM vt1, t0, rt0 NATURAL JOIN vt0 WHERE (vt1.c0) GROUP BY vt0.c1, rt0.c1 UNION SELECT vt0.c1, rt0.c1 FROM vt1, t0, rt0 NATURAL JOIN vt0 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c1, rt0.c1 UNION SELECT vt0.c1, rt0.c1 FROM vt1, t0, rt0 NATURAL JOIN vt0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM vt1, t0, rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c1;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING MIN(((GROUP_CONCAT(t0.c4))<=(TOTAL(t0.c4)))) UNION ALL SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT (MIN(((GROUP_CONCAT(t0.c4))<=(TOTAL(t0.c4)))))) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((MIN(((GROUP_CONCAT(t0.c4))<=(TOTAL(t0.c4))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((((vt1.c0)!=(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))AND(CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c0)!=(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))AND(CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)<>(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))AND(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT t0.c4 FROM rt0, vt0, vt1, t0;
SELECT DISTINCT t0.c4 FROM rt0, vt0, vt1, t0 WHERE ((((((vt0.c0)AND(rt0.c0)))AND(vt0.c2)) IN ())) UNION SELECT DISTINCT t0.c4 FROM rt0, vt0, vt1, t0 WHERE ((NOT ((((((vt0.c0)AND(rt0.c0)))AND(vt0.c2)) IN ())))) UNION SELECT DISTINCT t0.c4 FROM rt0, vt0, vt1, t0 WHERE ((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c2)) IN ())) ISNULL));
SELECT DISTINCT t0.c4 FROM rt0, vt0, vt1, t0;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0, t0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt1, rt0, t0, vt0 WHERE ((NOT ((vt1.c0 IN (vt0.c2))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0, t0, vt0 WHERE ((NOT ((NOT ((vt1.c0 IN (vt0.c2))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt1, rt0, t0, vt0 WHERE ((((NOT ((vt1.c0 IN (vt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0, t0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(MIN(t0.c4, rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(MIN(t0.c4, rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(MIN(t0.c4, rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(MIN(t0.c4, rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(MIN(t0.c4, rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(MIN(t0.c4, rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c2, t0.c4, vt0.c1, rt0.c1 FROM vt0, rt0, vt1 INNER JOIN t0 ON (((t0.c4 COLLATE RTRIM))==(((vt1.c0 IN (vt1.c0)))));
SELECT vt0.c0, vt0.c2, t0.c4, vt0.c1, rt0.c1 FROM vt0, rt0, vt1 INNER JOIN t0 ON (((t0.c4 COLLATE RTRIM))==(((vt1.c0 IN (vt1.c0))))) WHERE (((((rt0.c2)AND(vt0.c0))) IS TRUE)) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c4, vt0.c1, rt0.c1 FROM vt0, rt0, vt1 INNER JOIN t0 ON (((t0.c4 COLLATE RTRIM))=(((vt1.c0 IN (vt1.c0))))) WHERE ((NOT (((((rt0.c2)AND(vt0.c0))) IS TRUE)))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c4, vt0.c1, rt0.c1 FROM vt0, rt0, vt1 INNER JOIN t0 ON (((t0.c4 COLLATE RTRIM))==(((vt1.c0 IN (vt1.c0))))) WHERE (((((((rt0.c2)AND(vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL vt0.c0, vt0.c2, t0.c4, vt0.c1, rt0.c1 FROM vt0, rt0, vt1 INNER JOIN t0 ON (((t0.c4 COLLATE RTRIM))==(((vt1.c0 IN (vt1.c0)))));
SELECT DISTINCT t0.c4, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c4, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((((((((((t0.c4)AND(t0.c4)))AND(rt0.c1)))AND(t0.c4)))OR(rt0.c2)))-((~ (t0.c4))))) UNION SELECT DISTINCT t0.c4, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (((((((((((t0.c4)AND(t0.c4)))AND(rt0.c1)))AND(t0.c4)))OR(rt0.c2)))-((~ (t0.c4))))))) UNION SELECT DISTINCT t0.c4, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((((((((((((t0.c4)AND(t0.c4)))AND(rt0.c1)))AND(t0.c4)))OR(rt0.c2)))-((~ (t0.c4))))) ISNULL));
SELECT DISTINCT t0.c4, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT ALL rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0;
SELECT rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0 FROM vt0, t0, rt0, vt1 WHERE (((((vt0.c1)*('')))IS(((vt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0 UNION SELECT rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0 FROM vt0, t0, rt0, vt1 WHERE ((NOT (((((vt0.c1)*('')))IS(((vt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))))) GROUP BY rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0 UNION SELECT rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0 FROM vt0, t0, rt0, vt1 WHERE (((((((vt0.c1)*('')))IS(((vt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, t0.c4, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c4, vt0.c0;
SELECT rt0.c1, vt0.c1, t0.c4, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c4, vt0.c0 HAVING ((((AVG(SUM(COUNT(t0.c4))))|(COUNT(*)))) NOT BETWEEN (SUM(MAX(SUM(MIN(t0.c4))))) AND (MAX(t0.c4))) UNION ALL SELECT ALL rt0.c1, vt0.c1, t0.c4, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c4, vt0.c0 HAVING (NOT (((((AVG(SUM(COUNT(t0.c4))))|(COUNT(*)))) NOT BETWEEN (SUM(MAX(SUM(MIN(t0.c4))))) AND (MAX(t0.c4))))) UNION ALL SELECT rt0.c1, vt0.c1, t0.c4, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c4, vt0.c0 HAVING ((((((AVG(SUM(COUNT(t0.c4))))|(COUNT(*)))) NOT BETWEEN (SUM(MAX(SUM(MIN(t0.c4))))) AND (MAX(t0.c4)))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM t0, vt0 WHERE (CASE WHEN '1' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c4)) WHEN ((vt0.c2)-('WGo')) THEN (- (vt0.c1)) WHEN t0.c4 THEN ((((t0.c4)AND(vt0.c0)))OR(vt0.c2)) ELSE DATETIME(t0.c4, t0.c4, vt0.c1) END) UNION ALL SELECT vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE WHEN '1' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c4)) WHEN ((vt0.c2)-('WGo')) THEN (- (vt0.c1)) WHEN t0.c4 THEN ((((t0.c4)AND(vt0.c0)))OR(vt0.c2)) ELSE DATETIME(t0.c4, t0.c4, vt0.c1) END))) UNION ALL SELECT vt0.c0 FROM t0, vt0 WHERE (((CASE WHEN '1' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c4)) WHEN ((vt0.c2)-('WGo')) THEN (- (vt0.c1)) WHEN t0.c4 THEN ((((t0.c4)AND(vt0.c0)))OR(vt0.c2)) ELSE DATETIME(t0.c4, t0.c4, vt0.c1) END) ISNULL));
SELECT ALL vt0.c0 FROM t0, vt0;
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c0)!=(rt0.c0)) THEN ((vt1.c0)&('-135743754')) ELSE ((rt0.c1)LIKE(rt0.c1)) END) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((vt1.c0)!=(rt0.c0)) THEN ((vt1.c0)&('-135743754')) ELSE ((rt0.c1)LIKE(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((CASE WHEN ((vt1.c0)<>(rt0.c0)) THEN ((vt1.c0)&('-135743754')) ELSE ((rt0.c1)LIKE(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 WHERE (((t0.c4 COLLATE BINARY)>=(((t0.c4)IS NOT(x'8466'))))) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0 WHERE ((NOT (((t0.c4 COLLATE BINARY)>=(((t0.c4)IS NOT(x'8466'))))))) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE (((((t0.c4 COLLATE BINARY)>=(((t0.c4)IS NOT(x'8466'))))) ISNULL)) GROUP BY t0.c4;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING COUNT((((x''))!=((t0.c4)))) UNION ALL SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING (NOT (COUNT((((x''))<>((t0.c4)))))) UNION ALL SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING ((COUNT((((x''))!=((t0.c4))))) ISNULL);
SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING COUNT((((x''))!=((t0.c4)))) UNION ALL SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING (NOT (COUNT((((x''))<>((t0.c4)))))) UNION ALL SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING ((COUNT((((x''))!=((t0.c4))))) ISNULL);
SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4;
SELECT * FROM t0, vt1 NATURAL JOIN vt0;
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS FALSE)) UNION ALL SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE ((NOT (((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS FALSE)))) UNION ALL SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS FALSE)) ISNULL));
SELECT * FROM t0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1, vt0.c0, vt0.c2 FROM vt1 FULL OUTER JOIN t0 ON (NOT (NULL)) CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON (((~ (t0.c4)))%(((t0.c4) NOT BETWEEN (rt0.c2) AND (t0.c4))));
SELECT DISTINCT rt0.c1, vt0.c0, vt0.c2 FROM vt1 FULL OUTER JOIN t0 ON (NOT (NULL)) CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON (((~ (t0.c4)))%(((t0.c4) NOT BETWEEN (rt0.c2) AND (t0.c4)))) WHERE ((- (x''))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt0.c2 FROM vt1 FULL OUTER JOIN t0 ON (NOT (NULL)) CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON (((~ (t0.c4)))%(((t0.c4) NOT BETWEEN (rt0.c2) AND (t0.c4)))) WHERE ((NOT ((- (x''))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt0.c2 FROM vt1 FULL OUTER JOIN t0 ON (NOT (NULL)) CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON (((~ (t0.c4)))%(((t0.c4) NOT BETWEEN (rt0.c2) AND (t0.c4)))) WHERE ((((- (x''))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, vt0.c2 FROM vt1 FULL OUTER JOIN t0 ON (NOT (NULL)) CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON (((~ (t0.c4)))%(((t0.c4) NOT BETWEEN (rt0.c2) AND (t0.c4))));
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT t0.c4 FROM t0 WHERE ((((((t0.c4)) BETWEEN ((t0.c4)) AND ((t0.c4))))%(LAST_INSERT_ROWID()))) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0 WHERE ((NOT ((((((t0.c4)) BETWEEN ((t0.c4)) AND ((t0.c4))))%(LAST_INSERT_ROWID()))))) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE ((((((((t0.c4)) BETWEEN ((t0.c4)) AND ((t0.c4))))%(LAST_INSERT_ROWID()))) ISNULL)) GROUP BY t0.c4;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL vt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY vt0.c0 HAVING (- (GROUP_CONCAT(MIN(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((- (GROUP_CONCAT(MIN(vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0, t0, rt0, vt1 GROUP BY vt0.c0 HAVING (((- (GROUP_CONCAT(MIN(vt0.c1))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('2020951933')*(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((('2020951933')*(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((('2020951933')*(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)|(json_object(rt0.c1, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)|(json_object(rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)|(json_object(rt0.c1, rt0.c1)))) ISNULL));
SELECT ALL vt0.c0, t0.c4, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c4, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, t0.c4, vt0.c2, vt0.c1 FROM vt0, t0 WHERE (LENGTH((+ (vt0.c2)))) GROUP BY vt0.c0, t0.c4, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, t0.c4, vt0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT (LENGTH((+ (vt0.c2)))))) GROUP BY vt0.c0, t0.c4, vt0.c2, vt0.c1 UNION SELECT vt0.c0, t0.c4, vt0.c2, vt0.c1 FROM vt0, t0 WHERE (((LENGTH((+ (vt0.c2)))) ISNULL)) GROUP BY vt0.c0, t0.c4, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, t0.c4, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c4, vt0.c2, vt0.c1;
SELECT ALL t0.c4, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((t0.c4) BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY t0.c4, vt1.c0;
SELECT ALL t0.c4, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((t0.c4) BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY t0.c4, vt1.c0 HAVING (SUM(AVG(vt1.c0)) IN (COUNT(*))) UNION ALL SELECT t0.c4, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((t0.c4) BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY t0.c4, vt1.c0 HAVING (NOT ((SUM(AVG(vt1.c0)) IN (COUNT(*))))) UNION ALL SELECT t0.c4, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((t0.c4) BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY t0.c4, vt1.c0 HAVING (((SUM(AVG(vt1.c0)) IN (COUNT(*)))) ISNULL);
SELECT vt0.c1, rt0.c2, vt1.c0, vt0.c2, rt0.c1, t0.c4, vt0.c0 FROM vt0, t0, vt1, rt0;
SELECT ALL vt0.c1, rt0.c2, vt1.c0, vt0.c2, rt0.c1, t0.c4, vt0.c0 FROM vt0, t0, vt1, rt0 WHERE (((vt0.c1)%(t0.c4)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt1.c0, vt0.c2, rt0.c1, t0.c4, vt0.c0 FROM vt0, t0, vt1, rt0 WHERE ((NOT (((vt0.c1)%(t0.c4)) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt1.c0, vt0.c2, rt0.c1, t0.c4, vt0.c0 FROM vt0 NOT INDEXED, t0, vt1, rt0 WHERE (((((vt0.c1)%(t0.c4)) COLLATE BINARY) ISNULL));
SELECT vt0.c1, rt0.c2, vt1.c0, vt0.c2, rt0.c1, t0.c4, vt0.c0 FROM vt0, t0, vt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0, vt0 WHERE (rt0.c2) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0, vt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0, vt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, vt0.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, vt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT t0.c4 FROM t0;
SELECT t0.c4 FROM t0 WHERE ((+ (((t0.c4)AND(t0.c4))))) UNION ALL SELECT t0.c4 FROM t0 WHERE ((NOT ((+ (((t0.c4)AND(t0.c4))))))) UNION ALL SELECT ALL t0.c4 FROM t0 WHERE ((((+ (((t0.c4)AND(t0.c4))))) ISNULL));
SELECT t0.c4 FROM t0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))GLOB(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((((rt0.c1)LIKE(vt1.c0)))>>((~ (rt0.c1))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))GLOB(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((((rt0.c1)LIKE(vt1.c0)))>>((~ (rt0.c1)))) WHERE (CASE NULL  WHEN ((vt0.c0)&(rt0.c1)) THEN (+ (vt0.c2)) WHEN (vt0.c2 IN (vt0.c1)) THEN ((rt0.c1)+(rt0.c1)) WHEN rt0.c2 THEN load_extension(vt1.c0, vt0.c1) ELSE ((rt0.c2)>=(vt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))GLOB(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((((rt0.c1)LIKE(vt1.c0)))>>((~ (rt0.c1)))) WHERE ((NOT (CASE NULL  WHEN ((vt0.c0)&(rt0.c1)) THEN (+ (vt0.c2)) WHEN (vt0.c2 IN (vt0.c1)) THEN ((rt0.c1)+(rt0.c1)) WHEN rt0.c2 THEN load_extension(vt1.c0, vt0.c1) ELSE ((rt0.c2)>=(vt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))GLOB(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((((rt0.c1)LIKE(vt1.c0)))>>((~ (rt0.c1)))) WHERE (((CASE NULL  WHEN ((vt0.c0)&(rt0.c1)) THEN (+ (vt0.c2)) WHEN (vt0.c2 IN (vt0.c1)) THEN ((rt0.c1)+(rt0.c1)) WHEN rt0.c2 THEN load_extension(vt1.c0, vt0.c1) ELSE ((rt0.c2)>=(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))GLOB(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((((rt0.c1)LIKE(vt1.c0)))>>((~ (rt0.c1))));
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c0, x'', x'4ccf'))=((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0, x'', x'4ccf'))==((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c0, x'', x'4ccf'))=((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1, rt0, vt0, t0;
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE ((((((vt0.c0 IN ('2136213129')))OR(TYPEOF(vt1.c0))))AND(((((((((vt0.c2)OR(vt0.c1)))OR(t0.c4)))OR(rt0.c1)))OR(rt0.c1))))) UNION ALL SELECT * FROM vt1, rt0, vt0, t0 WHERE ((NOT ((((((vt0.c0 IN ('2136213129')))OR(TYPEOF(vt1.c0))))AND(((((((((vt0.c2)OR(vt0.c1)))OR(t0.c4)))OR(rt0.c1)))OR(rt0.c1))))))) UNION ALL SELECT * FROM vt1, rt0, vt0, t0 WHERE ((((((((vt0.c0 IN ('2136213129')))OR(TYPEOF(vt1.c0))))AND(((((((((vt0.c2)OR(vt0.c1)))OR(t0.c4)))OR(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT * FROM vt1, rt0, vt0, t0;
SELECT DISTINCT * FROM vt0, rt0, vt1 INDEXED BY i44;
SELECT ALL vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0 IN ()) IN ())) GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING vt0.c2 UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (vt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING ((vt0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING vt0.c2 UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (vt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING ((vt0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0, vt0;
SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE (((((vt0.c0) NOTNULL))LIKE(((((rt0.c2)OR(vt0.c2)))OR(rt0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))LIKE(((((rt0.c2)OR(vt0.c2)))OR(rt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE (((((((vt0.c0) NOTNULL))LIKE(((((rt0.c2)OR(vt0.c2)))OR(rt0.c0))))) ISNULL));
SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))OR(UPPER(vt1.c0))))OR(((((x'')AND(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)>=(vt1.c0)))OR(UPPER(vt1.c0))))OR(((((x'')AND(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)>=(vt1.c0)))OR(UPPER(vt1.c0))))OR(((((x'')AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c4, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY t0.c4, vt0.c1, vt0.c2;
SELECT t0.c4, vt0.c1, vt0.c2 FROM t0, vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN t0.c4 WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM) GROUP BY t0.c4, vt0.c1, vt0.c2 UNION SELECT t0.c4, vt0.c1, vt0.c2 FROM t0, vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN t0.c4 WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM))) GROUP BY t0.c4, vt0.c1, vt0.c2 UNION SELECT t0.c4, vt0.c1, vt0.c2 FROM t0, vt0 NOT INDEXED WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN t0.c4 WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM) ISNULL)) GROUP BY t0.c4, vt0.c1, vt0.c2;
SELECT t0.c4, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY t0.c4, vt0.c1, vt0.c2;
SELECT ALL t0.c4 FROM t0 INNER JOIN vt1 ON CASE vt1.c0 COLLATE NOCASE  WHEN ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)) THEN ((vt1.c0)&(t0.c4)) ELSE CASE WHEN t0.c4 THEN t0.c4 END END GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 INNER JOIN vt1 ON CASE vt1.c0 COLLATE NOCASE  WHEN ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)) THEN ((vt1.c0)&(t0.c4)) ELSE CASE WHEN t0.c4 THEN t0.c4 END END GROUP BY t0.c4 HAVING SUM(AVG(TOTAL(TOTAL(t0.c4)))) UNION ALL SELECT t0.c4 FROM t0 INNER JOIN vt1 ON CASE vt1.c0 COLLATE NOCASE  WHEN ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)) THEN ((vt1.c0)&(t0.c4)) ELSE CASE WHEN t0.c4 THEN t0.c4 END END GROUP BY t0.c4 HAVING (NOT (SUM(AVG(TOTAL(TOTAL(t0.c4)))))) UNION ALL SELECT ALL t0.c4 FROM t0 INNER JOIN vt1 ON CASE vt1.c0 COLLATE NOCASE  WHEN ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)) THEN ((vt1.c0)&(t0.c4)) ELSE CASE WHEN t0.c4 THEN t0.c4 END END GROUP BY t0.c4 HAVING ((SUM(AVG(TOTAL(TOTAL(t0.c4))))) ISNULL);
SELECT vt0.c0, vt0.c2, t0.c4, vt0.c1, vt1.c0 FROM t0, vt0, vt1;
SELECT ALL vt0.c0, vt0.c2, t0.c4, vt0.c1, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT ((~ (t0.c4))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c4, vt0.c1, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT ((NOT ((~ (t0.c4))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c4, vt0.c1, vt1.c0 FROM t0, vt0, vt1 WHERE ((((NOT ((~ (t0.c4))))) ISNULL));
SELECT vt0.c0, vt0.c2, t0.c4, vt0.c1, vt1.c0 FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)<<(vt1.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c1)))) FULL OUTER JOIN t0 ON (~ (((t0.c4) BETWEEN (vt0.c0) AND (rt0.c2))));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)<<(vt1.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c1)))) FULL OUTER JOIN t0 ON (~ (((t0.c4) BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)<<(vt1.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c1)))) FULL OUTER JOIN t0 ON (~ (((t0.c4) BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)<<(vt1.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c1)))) FULL OUTER JOIN t0 ON (~ (((t0.c4) BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)<<(vt1.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c1)))) FULL OUTER JOIN t0 ON (~ (((t0.c4) BETWEEN (vt0.c0) AND (rt0.c2))));
SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ABS(DISTINCT ((rt0.c0)/(rt0.c2))) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ABS(DISTINCT ((rt0.c0)/(rt0.c2))) WHERE (vt0.c2) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ABS(DISTINCT ((rt0.c0)/(rt0.c2))) WHERE ((NOT (vt0.c2))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ABS(DISTINCT ((rt0.c0)/(rt0.c2))) WHERE (((vt0.c2) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ABS(DISTINCT ((rt0.c0)/(rt0.c2))) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)) THEN rt0.c0 WHEN (+ (vt0.c0)) THEN CAST(0.9819873569681108 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN '' END;
SELECT ALL * FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)) THEN rt0.c0 WHEN (+ (vt0.c0)) THEN CAST(0.9819873569681108 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN '' END WHERE ((((vt0.c0 IN (0.47092011273425705))) IS FALSE)) UNION ALL SELECT ALL * FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)) THEN rt0.c0 WHEN (+ (vt0.c0)) THEN CAST(0.9819873569681108 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN '' END WHERE ((NOT ((((vt0.c0 IN (0.47092011273425705))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)) THEN rt0.c0 WHEN (+ (vt0.c0)) THEN CAST(0.9819873569681108 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN '' END WHERE ((((((vt0.c0 IN (0.47092011273425705))) IS FALSE)) ISNULL));
SELECT * FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)) THEN rt0.c0 WHEN (+ (vt0.c0)) THEN CAST(0.9819873569681108 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN '' END;
SELECT DISTINCT vt1.c0, t0.c4, vt0.c2 FROM rt0, vt0 CROSS JOIN t0 ON (((x'')) BETWEEN ((CASE rt0.c1  WHEN 0.7820461647531207 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END)) AND (((rt0.c0 IN (vt0.c0))))) RIGHT OUTER JOIN vt1 ON (((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN rt0.c1 ELSE vt0.c0 END, ((vt0.c1)+(rt0.c2)), ((rt0.c2)-(rt0.c2)))) AND ((NULLIF(DISTINCT rt0.c0, vt0.c1), ((5.57795587E8)>>(vt0.c1)), vt0.c1 COLLATE RTRIM)));
SELECT DISTINCT vt1.c0, t0.c4, vt0.c2 FROM rt0, vt0 CROSS JOIN t0 ON (((x'')) BETWEEN ((CASE rt0.c1  WHEN 0.7820461647531207 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END)) AND (((rt0.c0 IN (vt0.c0))))) RIGHT OUTER JOIN vt1 ON (((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN rt0.c1 ELSE vt0.c0 END, ((vt0.c1)+(rt0.c2)), ((rt0.c2)-(rt0.c2)))) AND ((NULLIF(DISTINCT rt0.c0, vt0.c1), ((5.57795587E8)>>(vt0.c1)), vt0.c1 COLLATE RTRIM))) WHERE (((((((vt0.c2) IS FALSE))OR(DATE(rt0.c1, vt1.c0, rt0.c0))))AND(((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt1.c0, t0.c4, vt0.c2 FROM rt0, vt0 CROSS JOIN t0 ON (((x'')) BETWEEN ((CASE rt0.c1  WHEN 0.7820461647531207 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END)) AND (((rt0.c0 IN (vt0.c0))))) RIGHT OUTER JOIN vt1 ON (((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN rt0.c1 ELSE vt0.c0 END, ((vt0.c1)+(rt0.c2)), ((rt0.c2)-(rt0.c2)))) AND ((NULLIF(DISTINCT rt0.c0, vt0.c1), ((5.57795587E8)>>(vt0.c1)), vt0.c1 COLLATE RTRIM))) WHERE ((NOT (((((((vt0.c2) IS FALSE))OR(DATE(rt0.c1, vt1.c0, rt0.c0))))AND(((rt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt1.c0, t0.c4, vt0.c2 FROM rt0, vt0 CROSS JOIN t0 ON (((x'')) BETWEEN ((CASE rt0.c1  WHEN 0.7820461647531207 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END)) AND (((rt0.c0 IN (vt0.c0))))) RIGHT OUTER JOIN vt1 ON (((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN rt0.c1 ELSE vt0.c0 END, ((vt0.c1)+(rt0.c2)), ((rt0.c2)-(rt0.c2)))) AND ((NULLIF(DISTINCT rt0.c0, vt0.c1), ((5.57795587E8)>>(vt0.c1)), vt0.c1 COLLATE RTRIM))) WHERE (((((((((vt0.c2) IS FALSE))OR(DATE(rt0.c1, vt1.c0, rt0.c0))))AND(((rt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c4, vt0.c2 FROM rt0, vt0 CROSS JOIN t0 ON (((x'')) BETWEEN ((CASE rt0.c1  WHEN 0.7820461647531207 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END)) AND (((rt0.c0 IN (vt0.c0))))) RIGHT OUTER JOIN vt1 ON (((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN rt0.c1 ELSE vt0.c0 END, ((vt0.c1)+(rt0.c2)), ((rt0.c2)-(rt0.c2)))) AND ((NULLIF(DISTINCT rt0.c0, vt0.c1), ((5.57795587E8)>>(vt0.c1)), vt0.c1 COLLATE RTRIM)));
SELECT rt0.c2, t0.c4, vt0.c2, rt0.c0 FROM vt0, t0, vt1, rt0 GROUP BY rt0.c2, t0.c4, vt0.c2, rt0.c0;
SELECT rt0.c2, t0.c4, vt0.c2, rt0.c0 FROM vt0, t0, vt1, rt0 WHERE (((((rt0.c1)==(vt1.c0))) IS FALSE)) GROUP BY rt0.c2, t0.c4, vt0.c2, rt0.c0 UNION SELECT rt0.c2, t0.c4, vt0.c2, rt0.c0 FROM vt0, t0, vt1, rt0 WHERE ((NOT (((((rt0.c1)==(vt1.c0))) IS FALSE)))) GROUP BY rt0.c2, t0.c4, vt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, t0.c4, vt0.c2, rt0.c0 FROM vt0, t0, vt1, rt0 WHERE (((((((rt0.c1)=(vt1.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, t0.c4, vt0.c2, rt0.c0;
SELECT rt0.c2, t0.c4, vt0.c2, rt0.c0 FROM vt0, t0, vt1, rt0 GROUP BY rt0.c2, t0.c4, vt0.c2, rt0.c0;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((SUM(SUM(GROUP_CONCAT(COUNT(MAX(COUNT(t0.c4))))))) NOT BETWEEN (0.931655075683252) AND (AVG(AVG(t0.c4)))) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT (((SUM(SUM(GROUP_CONCAT(COUNT(MAX(COUNT(t0.c4))))))) NOT BETWEEN (0.931655075683252) AND (AVG(AVG(t0.c4)))))) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((((SUM(SUM(GROUP_CONCAT(COUNT(MAX(COUNT(t0.c4))))))) NOT BETWEEN (0.931655075683252) AND (AVG(AVG(t0.c4))))) ISNULL);
SELECT ALL t0.c4, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0;
SELECT t0.c4, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((CAST(t0.c4 AS INTEGER))) AND ((CAST(vt0.c0 AS INTEGER))))) UNION ALL SELECT ALL t0.c4, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((CAST(t0.c4 AS INTEGER))) AND ((CAST(vt0.c0 AS INTEGER))))))) UNION ALL SELECT t0.c4, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((CAST(t0.c4 AS INTEGER))) AND ((CAST(vt0.c0 AS INTEGER))))) ISNULL));
SELECT ALL t0.c4, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0;
SELECT DISTINCT t0.c4, rt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0;
SELECT DISTINCT t0.c4, rt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0 WHERE (IFNULL(((vt1.c0) BETWEEN ('J') AND (rt0.c0)), CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END)) UNION SELECT DISTINCT t0.c4, rt0.c2, rt0.c1, rt0.c0 FROM t0, vt1 NOT INDEXED, rt0 WHERE ((NOT (IFNULL(((vt1.c0) BETWEEN ('J') AND (rt0.c0)), CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END)))) UNION SELECT DISTINCT t0.c4, rt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0 WHERE (((IFNULL(((vt1.c0) BETWEEN ('J') AND (rt0.c0)), CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END)) ISNULL));
SELECT DISTINCT t0.c4, rt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE (((rtreenode(vt0.c1, '2102615717'))!=((((vt0.c1, vt0.c2, vt1.c0)) BETWEEN ((vt1.c0, x'', vt0.c1)) AND ((rt0.c1, '-732575264', vt0.c0)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (((rtreenode(vt0.c1, '2102615717'))!=((((vt0.c1, vt0.c2, vt1.c0)) BETWEEN ((vt1.c0, x'', vt0.c1)) AND ((rt0.c1, '-732575264', vt0.c0)))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE (((((rtreenode(vt0.c1, '2102615717'))<>((((vt0.c1, vt0.c2, vt1.c0)) BETWEEN ((vt1.c0, x'', vt0.c1)) AND ((rt0.c1, '-732575264', vt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (SUM(GROUP_CONCAT(t0.c4))) AND (SUM(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT ((((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (SUM(GROUP_CONCAT(t0.c4))) AND (SUM(vt1.c0) COLLATE NOCASE)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0, t0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (((((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (SUM(GROUP_CONCAT(t0.c4))) AND (SUM(vt1.c0) COLLATE NOCASE))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c1)IS('0.6494889620565606')))AND(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c1)IS('0.6494889620565606')))AND(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt1 WHERE (((((((((rt0.c1)IS('0.6494889620565606')))AND(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c0))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT t0.c4, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, t0;
SELECT DISTINCT t0.c4, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c0) COLLATE RTRIM) UNION SELECT DISTINCT t0.c4, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, t0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(rt0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c4, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0 NOT INDEXED, rt0, t0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c4, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, rt0, t0;
SELECT rt0.c2, rt0.c0, t0.c4 FROM vt0, rt0, vt1 CROSS JOIN t0 ON (((((((((NOT (vt0.c2)))AND(((vt0.c2)>>(rt0.c1)))))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ()))))OR(((vt0.c0)!=(vt0.c2)))) GROUP BY rt0.c2, rt0.c0, t0.c4;
SELECT ALL rt0.c2, rt0.c0, t0.c4 FROM vt0, rt0, vt1 CROSS JOIN t0 ON (((((((((NOT (vt0.c2)))AND(((vt0.c2)>>(rt0.c1)))))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ()))))OR(((vt0.c0)!=(vt0.c2)))) WHERE ((((((vt0.c1) NOT NULL)))==(((((t0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, t0.c4 UNION SELECT rt0.c2, rt0.c0, t0.c4 FROM vt0, rt0, vt1 CROSS JOIN t0 ON (((((((((NOT (vt0.c2)))AND(((vt0.c2)>>(rt0.c1)))))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ()))))OR(((vt0.c0)<>(vt0.c2)))) WHERE ((NOT ((((((vt0.c1) NOT NULL)))==(((((t0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))))) GROUP BY rt0.c2, rt0.c0, t0.c4 UNION SELECT ALL rt0.c2, rt0.c0, t0.c4 FROM vt0, rt0, vt1 CROSS JOIN t0 ON (((((((((NOT (vt0.c2)))AND(((vt0.c2)>>(rt0.c1)))))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ()))))OR(((vt0.c0)!=(vt0.c2)))) WHERE ((((((((vt0.c1) NOT NULL)))=(((((t0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, t0.c4;
SELECT rt0.c2, rt0.c0, t0.c4 FROM vt0, rt0, vt1 CROSS JOIN t0 ON (((((((((NOT (vt0.c2)))AND(((vt0.c2)>>(rt0.c1)))))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ()))))OR(((vt0.c0)!=(vt0.c2)))) GROUP BY rt0.c2, rt0.c0, t0.c4;
SELECT rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2 HAVING MIN(rt0.c1) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2 HAVING MIN(rt0.c1) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c1)OR(NULL)))OR(0.43502833469217084))) IS TRUE) GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((UNLIKELY(vt1.c0))GLOB(((((vt1.c0)AND(NULL)))AND(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((UNLIKELY(vt1.c0))GLOB(((((vt1.c0)AND(NULL)))AND(vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE (((((UNLIKELY(vt1.c0))GLOB(((((vt1.c0)AND(NULL)))AND(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (CASE '557795587'  WHEN ((vt0.c2) ISNULL) THEN (((vt0.c0))=((vt0.c2))) ELSE ((vt1.c0)<<(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE '557795587'  WHEN ((vt0.c2) ISNULL) THEN (((vt0.c0))==((vt0.c2))) ELSE ((vt1.c0)<<(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((CASE '557795587'  WHEN ((vt0.c2) ISNULL) THEN (((vt0.c0))==((vt0.c2))) ELSE ((vt1.c0)<<(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0;
SELECT t0.c4, vt1.c0 FROM vt1, t0 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (CAST(t0.c4 AS BLOB)) AND (((t0.c4)<>(t0.c4))))) GROUP BY t0.c4, vt1.c0 UNION SELECT t0.c4, vt1.c0 FROM vt1, t0 WHERE ((NOT (((((vt1.c0) NOT NULL)) BETWEEN (CAST(t0.c4 AS BLOB)) AND (((t0.c4)<>(t0.c4))))))) GROUP BY t0.c4, vt1.c0 UNION SELECT t0.c4, vt1.c0 FROM vt1, t0 WHERE (((((((vt1.c0) NOT NULL)) BETWEEN (CAST(t0.c4 AS BLOB)) AND (((t0.c4)!=(t0.c4))))) ISNULL)) GROUP BY t0.c4, vt1.c0;
SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING SUM(SUM(TOTAL(MAX(t0.c4))) COLLATE RTRIM) UNION ALL SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT (SUM(SUM(TOTAL(MAX(t0.c4))) COLLATE RTRIM))) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((SUM(SUM(TOTAL(MAX(t0.c4))) COLLATE RTRIM)) ISNULL);
SELECT vt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c1 FROM vt0, rt0 WHERE (MIN(vt0.c1 COLLATE BINARY, (NOT (rt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0, rt0 WHERE ((NOT (MIN(vt0.c1 COLLATE BINARY, (NOT (rt0.c1)))))) UNION ALL SELECT vt0.c1 FROM vt0, rt0 WHERE (((MIN(vt0.c1 COLLATE BINARY, (NOT (rt0.c1)))) ISNULL));
SELECT vt0.c1 FROM vt0, rt0;
SELECT DISTINCT t0.c4 FROM t0;
SELECT DISTINCT t0.c4 FROM t0 WHERE (((((t0.c4) NOT BETWEEN (x'2d89') AND (t0.c4))) IS FALSE)) UNION SELECT DISTINCT t0.c4 FROM t0 WHERE ((NOT (((((t0.c4) NOT BETWEEN (x'2d89') AND (t0.c4))) IS FALSE)))) UNION SELECT DISTINCT t0.c4 FROM t0 WHERE (((((((t0.c4) NOT BETWEEN (x'2d89') AND (t0.c4))) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c4 FROM t0;
SELECT ALL vt1.c0, vt0.c0, vt0.c2, rt0.c0 FROM t0, rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c0;
SELECT vt1.c0, vt0.c0, vt0.c2, rt0.c0 FROM t0, rt0, vt0, vt1 WHERE (((TRIM(DISTINCT vt0.c1))<>(((rt0.c0) ISNULL)))) GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c2, rt0.c0 FROM t0, rt0, vt0, vt1 WHERE ((NOT (((TRIM(DISTINCT vt0.c1))<>(((rt0.c0) ISNULL)))))) GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c0 UNION SELECT vt1.c0, vt0.c0, vt0.c2, rt0.c0 FROM t0, rt0, vt0, vt1 WHERE (((((TRIM(DISTINCT vt0.c1))!=(((rt0.c0) ISNULL)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c2, rt0.c0 FROM t0, rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 NOT INDEXED, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING t0.c4 UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING (NOT (t0.c4)) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING ((t0.c4) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 NOT INDEXED, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING t0.c4 UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING (NOT (t0.c4)) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING ((t0.c4) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0, t0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT * FROM vt1, rt0, vt0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))))<(((NOT (vt0.c1)))))) UNION ALL SELECT * FROM vt1, rt0, vt0 NOT INDEXED WHERE ((NOT ((((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))))<(((NOT (vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))))<(((NOT (vt0.c1)))))) ISNULL));
SELECT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((CHANGES())!=(((rt0.c0)%(rt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (((CHANGES())!=(((rt0.c0)%(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((((CHANGES())!=(((rt0.c0)%(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON CAST(((rt0.c1)>>(t0.c4)) AS NUMERIC) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON CAST(((rt0.c1)>>(t0.c4)) AS NUMERIC) WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON CAST(((rt0.c1)>>(t0.c4)) AS NUMERIC) WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON CAST(((rt0.c1)>>(t0.c4)) AS NUMERIC) WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON CAST(((rt0.c1)>>(t0.c4)) AS NUMERIC) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING ((((COUNT(rt0.c0))AND(rt0.c0 COLLATE RTRIM)))OR(TOTAL(MAX(MIN(COUNT(MAX(vt1.c0))))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (((((COUNT(rt0.c0))AND(rt0.c0 COLLATE RTRIM)))OR(TOTAL(MAX(MIN(COUNT(MAX(vt1.c0))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING ((((((COUNT(rt0.c0))AND(rt0.c0 COLLATE RTRIM)))OR(TOTAL(MAX(MIN(COUNT(MAX(vt1.c0)))))))) ISNULL);
SELECT rt0.c1, vt1.c0, t0.c4 FROM t0 INNER JOIN vt1 ON LOWER(((rt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))) INNER JOIN rt0 ON rt0.c0;
SELECT rt0.c1, vt1.c0, t0.c4 FROM t0 INNER JOIN vt1 ON LOWER(((rt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))) INNER JOIN rt0 ON rt0.c0 WHERE (CAST(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c4)) AS INTEGER)) UNION ALL SELECT rt0.c1, vt1.c0, t0.c4 FROM t0 INNER JOIN vt1 ON LOWER(((rt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))) INNER JOIN rt0 ON rt0.c0 WHERE ((NOT (CAST(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c4)) AS INTEGER)))) UNION ALL SELECT ALL rt0.c1, vt1.c0, t0.c4 FROM t0 INNER JOIN vt1 ON LOWER(((rt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))) INNER JOIN rt0 ON rt0.c0 WHERE (((CAST(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c4)) AS INTEGER)) ISNULL));
SELECT rt0.c1, vt1.c0, t0.c4 FROM t0 INNER JOIN vt1 ON LOWER(((rt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))) INNER JOIN rt0 ON rt0.c0;
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE ((TRIM(DISTINCT rt0.c1) IN ())) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT ((TRIM(DISTINCT rt0.c1) IN ())))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE ((((TRIM(DISTINCT rt0.c1) IN ())) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<>((((rt0.c1) NOT BETWEEN ('472052464') AND (rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((CAST(rt0.c0 AS BLOB)))<>((((rt0.c1) NOT BETWEEN ('472052464') AND (rt0.c0)))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((CAST(rt0.c0 AS BLOB)))!=((((rt0.c1) NOT BETWEEN ('472052464') AND (rt0.c0)))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING MIN(rt0.c1) UNION ALL SELECT vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING MIN(rt0.c1) UNION ALL SELECT vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((((+ (rt0.c2)))AND((-1880062782 IN ()))))OR(vt0.c2)) GROUP BY vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL * FROM vt1, rt0, vt0, t0;
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (((((vt0.c1)||(vt1.c0))) BETWEEN (((vt1.c0)>>(rt0.c0))) AND (rt0.c0))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE ((NOT (((((vt0.c1)||(vt1.c0))) BETWEEN (((vt1.c0)>>(rt0.c0))) AND (rt0.c0))))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (((((((vt0.c1)||(vt1.c0))) BETWEEN (((vt1.c0)>>(rt0.c0))) AND (rt0.c0))) ISNULL));
SELECT ALL * FROM vt1, rt0, vt0, t0;
SELECT DISTINCT * FROM t0 INDEXED BY i44, rt0, vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2, rt0.c2, vt0.c2)) NOT BETWEEN (('1701193797' COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c4)), t0.c4 COLLATE RTRIM)) AND ((CASE vt0.c2  WHEN rt0.c2 THEN 0.34896797962665904 WHEN rt0.c1 THEN NULL WHEN vt0.c2 THEN rt0.c1 END, (- (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c1)))));
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM vt0, t0 LEFT OUTER JOIN vt1 ON UPPER(((vt0.c1)>=(vt0.c1))) LEFT OUTER JOIN rt0 ON '-9534287' GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2;
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM vt0, t0 LEFT OUTER JOIN vt1 ON UPPER(((vt0.c1)>=(vt0.c1))) LEFT OUTER JOIN rt0 ON '-9534287' WHERE (ROUND(COALESCE(DISTINCT rt0.c0, 'ds'), vt1.c0 COLLATE NOCASE)) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM vt0, t0 LEFT OUTER JOIN vt1 ON UPPER(((vt0.c1)>=(vt0.c1))) LEFT OUTER JOIN rt0 ON '-9534287' WHERE ((NOT (ROUND(COALESCE(DISTINCT rt0.c0, 'ds'), vt1.c0 COLLATE NOCASE)))) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM vt0, t0 LEFT OUTER JOIN vt1 ON UPPER(((vt0.c1)>=(vt0.c1))) LEFT OUTER JOIN rt0 ON '-9534287' WHERE (((ROUND(COALESCE(DISTINCT rt0.c0, 'ds'), vt1.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2;
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM vt0, t0 LEFT OUTER JOIN vt1 ON UPPER(((vt0.c1)>=(vt0.c1))) LEFT OUTER JOIN rt0 ON '-9534287' GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0 NOT INDEXED, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0 NOT INDEXED, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c2;
SELECT * FROM t0, rt0, vt0, vt1;
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((((t0.c4)) BETWEEN ((((((t0.c4)AND(vt0.c0)))AND(rt0.c2)))) AND ((CAST('g' AS TEXT))))) UNION ALL SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE ((NOT ((((t0.c4)) BETWEEN ((((((t0.c4)AND(vt0.c0)))AND(rt0.c2)))) AND ((CAST('g' AS TEXT))))))) UNION ALL SELECT * FROM t0, rt0, vt0, vt1 WHERE ((((((t0.c4)) BETWEEN ((((((t0.c4)AND(vt0.c0)))AND(rt0.c2)))) AND ((CAST('g' AS TEXT))))) ISNULL));
SELECT * FROM t0, rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((UNLIKELY(rt0.c1))&((+ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT (((UNLIKELY(rt0.c1))&((+ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((((UNLIKELY(rt0.c1))&((+ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT ALL rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM rt0, vt0, t0, vt1 GROUP BY rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2;
SELECT rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM rt0, vt0, t0, vt1 WHERE ((((x'' IN ()))/(CAST(x'' AS REAL)))) GROUP BY rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM rt0, vt0, t0, vt1 WHERE ((NOT ((((x'' IN ()))/(CAST(x'' AS REAL)))))) GROUP BY rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2 UNION SELECT rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM rt0, vt0, t0, vt1 WHERE ((((((x'' IN ()))/(CAST(x'' AS REAL)))) ISNULL)) GROUP BY rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2;
SELECT ALL rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2 FROM rt0, vt0, t0, vt1 GROUP BY rt0.c0, vt1.c0, t0.c4, rt0.c2, vt0.c0, rt0.c1, vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(((((COUNT(*))AND(vt1.c0)))AND(COUNT(AVG(vt1.c0)))) AS INTEGER) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(((((COUNT(*))AND(vt1.c0)))AND(COUNT(AVG(vt1.c0)))) AS INTEGER))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(((((COUNT(*))AND(vt1.c0)))AND(COUNT(AVG(vt1.c0)))) AS INTEGER)) ISNULL);
SELECT ALL MAX(CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) FROM t0, vt0, rt0 ORDER BY (((((vt0.c1) NOT NULL), ((((t0.c4)OR(rt0.c2)))AND(vt0.c1)), ((x'473c') NOT NULL)))>=((((rt0.c2) NOTNULL), (NOT (vt0.c1)), (x'' IN ())))) DESC  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON (+ (vt0.c0)) RIGHT OUTER JOIN vt0 ON (((((((((vt0.c1 IN ()))OR(CAST(t0.c4 AS NUMERIC))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)))OR(x'fed7')))AND(((t0.c4) NOTNULL)));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0, vt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0, vt1 WHERE ((- ((NOT (rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0, vt1 WHERE ((NOT ((- ((NOT (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0, vt1 WHERE ((((- ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0, vt1;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 WHERE (UPPER(DISTINCT ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE ((NOT (UPPER(DISTINCT ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 WHERE (((UPPER(DISTINCT ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt0.c1 FROM rt0, vt0 INNER JOIN vt1 ON ((((vt0.c1)<<(rt0.c2))) BETWEEN ((+ (t0.c4))) AND (x'8ec0')) FULL OUTER JOIN t0 ON (+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c4)))) GROUP BY vt0.c1;
SELECT ALL t0.c4, rt0.c1, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1, t0;
SELECT t0.c4, rt0.c1, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1, t0 WHERE (((rt0.c1)-(0.33942701572733236)) COLLATE NOCASE) UNION ALL SELECT t0.c4, rt0.c1, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1, t0 WHERE ((NOT (((rt0.c1)-(0.33942701572733236)) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c4, rt0.c1, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1, t0 WHERE (((((rt0.c1)-(0.33942701572733236)) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c4, rt0.c1, vt1.c0, vt0.c1, rt0.c2 FROM vt0, rt0, vt1, t0;
SELECT DISTINCT * FROM vt1, rt0, vt0, t0;
SELECT DISTINCT * FROM vt1, rt0, vt0, t0 WHERE ('꜈M') UNION SELECT DISTINCT * FROM vt1, rt0, vt0, t0 WHERE ((NOT ('꜈M'))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0, t0 WHERE ((('꜈M') ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0, t0;
SELECT ALL t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, vt1, t0, rt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((NULL)AND(rt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (t0.c4)) THEN (((t0.c4))<=((vt1.c0))) WHEN CAST(rt0.c0 AS TEXT) THEN t0.c4 COLLATE RTRIM END) GROUP BY t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, vt1, t0, rt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN ((NULL)AND(rt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (t0.c4)) THEN (((t0.c4))<=((vt1.c0))) WHEN CAST(rt0.c0 AS TEXT) THEN t0.c4 COLLATE RTRIM END))) GROUP BY t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1 UNION SELECT t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, vt1, t0, rt0 WHERE (((CASE (vt0.c0 IN ())  WHEN ((NULL)AND(rt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (t0.c4)) THEN (((t0.c4))<=((vt1.c0))) WHEN CAST(rt0.c0 AS TEXT) THEN t0.c4 COLLATE RTRIM END) ISNULL)) GROUP BY t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, vt1, t0, rt0 GROUP BY t0.c4, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT t0.c4, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c4, vt0.c1, vt0.c2, vt0.c0;
SELECT t0.c4, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c4, vt0.c1, vt0.c2, vt0.c0 HAVING MAX(TOTAL(MIN(vt1.c0))) UNION ALL SELECT t0.c4, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c4, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (MAX(TOTAL(MIN(vt1.c0))))) UNION ALL SELECT ALL t0.c4, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c4, vt0.c1, vt0.c2, vt0.c0 HAVING ((MAX(TOTAL(MIN(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt1 WHERE ((((- (rt0.c2))) NOTNULL)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((- (rt0.c2))) NOTNULL)))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((((((- (rt0.c2))) NOTNULL)) ISNULL));
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0.9819873569681108, vt1.c0, vt1.c0))))AND(((vt1.c0)<(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0.9819873569681108, vt1.c0, vt1.c0))))AND(((vt1.c0)<(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0.9819873569681108, vt1.c0, vt1.c0))))AND(((vt1.c0)<(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c2 LEFT OUTER JOIN vt1 ON ((t0.c4 COLLATE NOCASE)OR(CAST(vt0.c1 AS INTEGER))) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c1)>>(rt0.c1)) THEN CAST('-735660619' AS REAL) ELSE ((NULL)-(rt0.c1)) END GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c2, rt0.c0;
SELECT ALL vt0.c1 FROM t0 LEFT OUTER JOIN vt1 ON rtreenode(((vt1.c0)*(x'd0b5')), CAST(t0.c4 AS TEXT)) FULL OUTER JOIN vt0 ON ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) COLLATE BINARY;
SELECT ALL vt0.c1 FROM t0 LEFT OUTER JOIN vt1 ON rtreenode(((vt1.c0)*(x'd0b5')), CAST(t0.c4 AS TEXT)) FULL OUTER JOIN vt0 ON ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) COLLATE BINARY WHERE (((((((vt0.c2)OR(t0.c4)))OR(vt0.c2))) BETWEEN ((t0.c4 IN ())) AND (CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT ALL vt0.c1 FROM t0 LEFT OUTER JOIN vt1 ON rtreenode(((vt1.c0)*(x'd0b5')), CAST(t0.c4 AS TEXT)) FULL OUTER JOIN vt0 ON ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) COLLATE BINARY WHERE ((NOT (((((((vt0.c2)OR(t0.c4)))OR(vt0.c2))) BETWEEN ((t0.c4 IN ())) AND (CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT ALL vt0.c1 FROM t0 LEFT OUTER JOIN vt1 ON rtreenode(((vt1.c0)*(x'd0b5')), CAST(t0.c4 AS TEXT)) FULL OUTER JOIN vt0 ON ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) COLLATE BINARY WHERE (((((((((vt0.c2)OR(t0.c4)))OR(vt0.c2))) BETWEEN ((t0.c4 IN ())) AND (CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT ALL vt0.c1 FROM t0 LEFT OUTER JOIN vt1 ON rtreenode(((vt1.c0)*(x'd0b5')), CAST(t0.c4 AS TEXT)) FULL OUTER JOIN vt0 ON ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) COLLATE BINARY;
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON (TYPEOF(DISTINCT t0.c4) IN ());
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON (TYPEOF(DISTINCT t0.c4) IN ()) WHERE (((((COALESCE(vt1.c0, vt0.c1, vt0.c0, vt0.c2))OR(((vt0.c0) BETWEEN ('贆') AND (vt0.c0)))))AND(((t0.c4) IS FALSE)))) UNION SELECT DISTINCT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON (TYPEOF(DISTINCT t0.c4) IN ()) WHERE ((NOT (((((COALESCE(vt1.c0, vt0.c1, vt0.c0, vt0.c2))OR(((vt0.c0) BETWEEN ('贆') AND (vt0.c0)))))AND(((t0.c4) IS FALSE)))))) UNION SELECT DISTINCT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON (TYPEOF(DISTINCT t0.c4) IN ()) WHERE (((((((COALESCE(vt1.c0, vt0.c1, vt0.c0, vt0.c2))OR(((vt0.c0) BETWEEN ('贆') AND (vt0.c0)))))AND(((t0.c4) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON (TYPEOF(DISTINCT t0.c4) IN ());
SELECT vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c0, vt1.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ('vk/֩br') GROUP BY vt0.c0, rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT ('vk/֩br'))) GROUP BY vt0.c0, rt0.c0, vt1.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((('vk/֩br') ISNULL)) GROUP BY vt0.c0, rt0.c0, vt1.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(((((GROUP_CONCAT(rt0.c0))AND(MAX(rt0.c2))))OR(TOTAL(vt1.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(((((GROUP_CONCAT(rt0.c0))AND(MAX(rt0.c2))))OR(TOTAL(vt1.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(((((GROUP_CONCAT(rt0.c0))AND(MAX(rt0.c2))))OR(TOTAL(vt1.c0))))) ISNULL);
SELECT ALL SUM((((- (t0.c4)))GLOB(((t0.c4) NOT NULL)))) FROM t0;
SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c0, rt0.c2 FROM vt1, vt0, rt0;
SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE (CAST((((rt0.c1, rt0.c0, vt0.c2)) BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c2))) AS REAL)) UNION ALL SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (CAST((((rt0.c1, rt0.c0, vt0.c2)) BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c2))) AS REAL)))) UNION ALL SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE (((CAST((((rt0.c1, rt0.c0, vt0.c2)) BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c2))) AS REAL)) ISNULL));
SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c0, rt0.c2 FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, rt0, t0, vt0;
SELECT DISTINCT * FROM vt1, rt0, t0, vt0 WHERE (SUBSTR(((485334937)/(rt0.c0)), (((NULL)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0, t0, vt0 WHERE ((NOT (SUBSTR(((485334937)/(rt0.c0)), (((NULL)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0, t0, vt0 WHERE (((SUBSTR(((485334937)/(rt0.c0)), (((NULL)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, t0, vt0;
SELECT ALL rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM rt0, t0, vt0 WHERE (IFNULL(NULL, (~ (rt0.c2)))) GROUP BY rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1 UNION SELECT rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (IFNULL(NULL, (~ (rt0.c2)))))) GROUP BY rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM rt0, t0, vt0 WHERE (((IFNULL(NULL, (~ (rt0.c2)))) ISNULL)) GROUP BY rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c4, rt0.c2, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING MAX((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((vt1.c0)))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (MAX((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((vt1.c0)))))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((MAX((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((vt1.c0))))) ISNULL);
SELECT vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ('-1637803073') UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ('-1637803073'))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((('-1637803073') ISNULL));
SELECT vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((- ((rt0.c0 IN ())))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((- ((rt0.c0 IN ())))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((- ((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, t0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, t0, vt1 WHERE (CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))  WHEN CASE vt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE NULL END THEN json_patch(t0.c4, rt0.c2) WHEN ((vt0.c1) NOTNULL) THEN ((t0.c4)*(rt0.c0)) WHEN (+ (vt0.c1)) THEN ((t0.c4) NOTNULL) ELSE CAST(vt1.c0 AS TEXT) END) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, t0, vt1 WHERE ((NOT (CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))  WHEN CASE vt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE NULL END THEN json_patch(t0.c4, rt0.c2) WHEN ((vt0.c1) NOTNULL) THEN ((t0.c4)*(rt0.c0)) WHEN (+ (vt0.c1)) THEN ((t0.c4) NOTNULL) ELSE CAST(vt1.c0 AS TEXT) END))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, t0, vt1 WHERE (((CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))  WHEN CASE vt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE NULL END THEN json_patch(t0.c4, rt0.c2) WHEN ((vt0.c1) NOTNULL) THEN ((t0.c4)*(rt0.c0)) WHEN (+ (vt0.c1)) THEN ((t0.c4) NOTNULL) ELSE CAST(vt1.c0 AS TEXT) END) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, t0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2;
SELECT vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2;
SELECT vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, t0.c4, rt0.c2 FROM vt1, vt0, t0, rt0 GROUP BY vt0.c1, t0.c4, rt0.c2;
SELECT rt0.c1, vt1.c0, t0.c4 FROM rt0, vt0, vt1, t0;
SELECT ALL rt0.c1, vt1.c0, t0.c4 FROM rt0, vt0, vt1, t0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1, vt1.c0, t0.c4 FROM rt0, vt0, vt1, t0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c1, vt1.c0, t0.c4 FROM rt0, vt0, vt1, t0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, vt1.c0, t0.c4 FROM rt0, vt0, vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(((vt1.c0) IS TRUE))))AND((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(((vt1.c0) IS TRUE))))AND((+ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(((vt1.c0) IS TRUE))))AND((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM t0, vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM t0, vt1, vt0, rt0 WHERE ((- (((rt0.c0)%(vt0.c2))))) GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM t0, vt1, vt0, rt0 WHERE ((NOT ((- (((rt0.c0)%(vt0.c2))))))) GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM t0, vt1, vt0, rt0 WHERE ((((- (((rt0.c0)%(vt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM t0, vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt1.c0;
SELECT vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING GROUP_CONCAT(MAX(vt1.c0)) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(vt1.c0)))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING ((GROUP_CONCAT(MAX(vt1.c0))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((- ((x'' IN (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- ((x'' IN (rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((- ((x'' IN (rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1, t0;
SELECT DISTINCT * FROM rt0, vt1, t0 WHERE ((((+ (rt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (((t0.c4)>>(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt1, t0 WHERE ((NOT ((((+ (rt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (((t0.c4)>>(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt1, t0 WHERE ((((((+ (rt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (((t0.c4)>>(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, t0;
SELECT rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((x'')>(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((x'')>(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)) WHERE (((x'' COLLATE BINARY)+(NULL))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((x'')>(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)) WHERE ((NOT (((x'' COLLATE BINARY)+(NULL))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((x'')>(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)) WHERE (((((x'' COLLATE BINARY)+(NULL))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((x'')>(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0 FROM vt1, rt0, t0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0, t0, vt0 GROUP BY rt0.c0 HAVING MIN(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c0 FROM vt1, rt0, t0, vt0 GROUP BY rt0.c0 HAVING (NOT (MIN(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0, t0, vt0 GROUP BY rt0.c0 HAVING ((MIN(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM vt1, vt0, t0;
SELECT * FROM vt1, vt0, t0 WHERE (((CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 END) NOT BETWEEN (vt0.c2 COLLATE RTRIM) AND ((((vt0.c0)) NOT BETWEEN ((0x460273c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE ((NOT (((CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 END) NOT BETWEEN (vt0.c2 COLLATE RTRIM) AND ((((vt0.c0)) NOT BETWEEN ((0x460273c0)) AND ((vt1.c0)))))))) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE (((((CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 END) NOT BETWEEN (vt0.c2 COLLATE RTRIM) AND ((((vt0.c0)) NOT BETWEEN ((0X460273c0)) AND ((vt1.c0)))))) ISNULL));
SELECT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((- (CAST(vt0.c1 AS REAL)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((- (CAST(vt0.c1 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((- (CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) IS TRUE)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0) IS TRUE)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(MAX(TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(MAX(TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(MAX(TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c1)|(rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)|(rt0.c2)) IN ())))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)|(rt0.c2)) IN ())) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, vt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((((COALESCE(t0.c4, x'', rt0.c2, rt0.c1, rt0.c1, vt0.c0))AND(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c2 END)))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(vt1.c0)))OR(t0.c4)))) CROSS JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN t0.c4 ELSE vt0.c2 END) BETWEEN ((vt0.c2 IN ())) AND (((vt0.c1)+(rt0.c0))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (UNLIKELY((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((UNLIKELY((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(rt0.c2))GLOB(x'c263')) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MIN(rt0.c2))GLOB(x'c263')))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MIN(rt0.c2))GLOB(x'c263'))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(rt0.c2))GLOB(x'c263')) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MIN(rt0.c2))GLOB(x'c263')))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MIN(rt0.c2))GLOB(x'c263'))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, vt0.c2, vt0.c1, t0.c4, rt0.c0, rt0.c2, vt0.c0, vt1.c0 FROM t0, rt0, vt0, vt1;
SELECT ALL rt0.c1, vt0.c2, vt0.c1, t0.c4, rt0.c0, rt0.c2, vt0.c0, vt1.c0 FROM t0, rt0, vt0, vt1 WHERE ((((((((vt0.c0))>((rt0.c2))))OR(((rt0.c1)<<(rt0.c0)))))AND(((vt0.c1)IS NOT(rt0.c1))))) UNION ALL SELECT rt0.c1, vt0.c2, vt0.c1, t0.c4, rt0.c0, rt0.c2, vt0.c0, vt1.c0 FROM t0, rt0, vt0, vt1 WHERE ((NOT ((((((((vt0.c0))>((rt0.c2))))OR(((rt0.c1)<<(rt0.c0)))))AND(((vt0.c1)IS NOT(rt0.c1))))))) UNION ALL SELECT rt0.c1, vt0.c2, vt0.c1, t0.c4, rt0.c0, rt0.c2, vt0.c0, vt1.c0 FROM t0, rt0, vt0, vt1 WHERE ((((((((((vt0.c0))>((rt0.c2))))OR(((rt0.c1)<<(rt0.c0)))))AND(((vt0.c1)IS NOT(rt0.c1))))) ISNULL));
SELECT rt0.c1, vt0.c2, vt0.c1, t0.c4, rt0.c0, rt0.c2, vt0.c0, vt1.c0 FROM t0, rt0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt1, rt0;
SELECT DISTINCT * FROM t0, vt1, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM t0, vt1, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM t0, vt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM t0, vt1, rt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, t0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, t0, vt1 WHERE (((((((((CASE vt0.c0  WHEN rt0.c2 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)OR(MAX(t0.c4, x''))))OR(((vt0.c2)>>(rt0.c1)))))OR((- (0Xffffffffd20e0e7d)))))AND(CASE WHEN vt0.c0 THEN NULL WHEN t0.c4 THEN t0.c4 WHEN vt0.c0 THEN t0.c4 WHEN '628341952' THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, t0, vt1 WHERE ((NOT (((((((((CASE vt0.c0  WHEN rt0.c2 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)OR(MAX(t0.c4, x''))))OR(((vt0.c2)>>(rt0.c1)))))OR((- (0Xffffffffd20e0e7d)))))AND(CASE WHEN vt0.c0 THEN NULL WHEN t0.c4 THEN t0.c4 WHEN vt0.c0 THEN t0.c4 WHEN '628341952' THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, t0, vt1 WHERE (((((((((((CASE vt0.c0  WHEN rt0.c2 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)OR(MAX(t0.c4, x''))))OR(((vt0.c2)>>(rt0.c1)))))OR((- (0Xffffffffd20e0e7d)))))AND(CASE WHEN vt0.c0 THEN NULL WHEN t0.c4 THEN t0.c4 WHEN vt0.c0 THEN t0.c4 WHEN '628341952' THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0, t0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((((((GROUP_CONCAT(rt0.c2))OR(TOTAL(rt0.c1))))AND(vt1.c0)))-(MIN(MAX(rt0.c2)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (((((((GROUP_CONCAT(rt0.c2))OR(TOTAL(rt0.c1))))AND(vt1.c0)))-(MIN(MAX(rt0.c2)))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((((((((GROUP_CONCAT(rt0.c2))OR(TOTAL(rt0.c1))))AND(vt1.c0)))-(MIN(MAX(rt0.c2))))) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN t0 ON TRIM(DISTINCT ((0Xfffffffff3a476fe)AND(t0.c4)));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON TRIM(DISTINCT ((0Xfffffffff3a476fe)AND(t0.c4))) WHERE (CAST(CAST(t0.c4 AS BLOB) AS BLOB)) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN t0 ON TRIM(DISTINCT ((0xfffffffff3a476fe)AND(t0.c4))) WHERE ((NOT (CAST(CAST(t0.c4 AS BLOB) AS BLOB)))) UNION ALL SELECT * FROM vt1 CROSS JOIN t0 ON TRIM(DISTINCT ((0xfffffffff3a476fe)AND(t0.c4))) WHERE (((CAST(CAST(t0.c4 AS BLOB) AS BLOB)) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON TRIM(DISTINCT ((0Xfffffffff3a476fe)AND(t0.c4)));
SELECT DISTINCT t0.c4 FROM t0;
SELECT DISTINCT t0.c4 FROM t0 WHERE (CAST(t0.c4 COLLATE NOCASE AS REAL)) UNION SELECT DISTINCT t0.c4 FROM t0 WHERE ((NOT (CAST(t0.c4 COLLATE NOCASE AS REAL)))) UNION SELECT DISTINCT t0.c4 FROM t0 WHERE (((CAST(t0.c4 COLLATE NOCASE AS REAL)) ISNULL));
SELECT DISTINCT t0.c4 FROM t0;
SELECT ALL rt0.c2, t0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1))<((0.08358424577587831))) COLLATE RTRIM GROUP BY rt0.c2, t0.c4, rt0.c0;
SELECT ALL rt0.c2, t0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1))<((0.08358424577587831))) COLLATE RTRIM WHERE (((((((t0.c4)GLOB(rt0.c2)))AND(((rt0.c1) IS TRUE))))AND(CASE WHEN rt0.c2 THEN t0.c4 END))) GROUP BY rt0.c2, t0.c4, rt0.c0 UNION SELECT rt0.c2, t0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1))<((0.08358424577587831))) COLLATE RTRIM WHERE ((NOT (((((((t0.c4)GLOB(rt0.c2)))AND(((rt0.c1) IS TRUE))))AND(CASE WHEN rt0.c2 THEN t0.c4 END))))) GROUP BY rt0.c2, t0.c4, rt0.c0 UNION SELECT rt0.c2, t0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1))<((0.08358424577587831))) COLLATE RTRIM WHERE (((((((((t0.c4)GLOB(rt0.c2)))AND(((rt0.c1) IS TRUE))))AND(CASE WHEN rt0.c2 THEN t0.c4 END))) ISNULL)) GROUP BY rt0.c2, t0.c4, rt0.c0;
SELECT ALL rt0.c2, t0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1))<((0.08358424577587831))) COLLATE RTRIM GROUP BY rt0.c2, t0.c4, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING json_array_length(CAST(TOTAL(COUNT(*)) AS NUMERIC), DATE(MAX(rt0.c2), vt1.c0, MAX(COUNT(MIN(COUNT(*)))), vt0.c0, MAX(vt0.c1))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT (json_array_length(CAST(TOTAL(COUNT(*)) AS NUMERIC), DATE(MAX(rt0.c2), vt1.c0, MAX(COUNT(MIN(COUNT(*)))), vt0.c0, MAX(vt0.c1))))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM t0, vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING ((json_array_length(CAST(TOTAL(COUNT(*)) AS NUMERIC), DATE(MAX(rt0.c2), vt1.c0, MAX(COUNT(MIN(COUNT(*)))), vt0.c0, MAX(vt0.c1)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((- (CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((- (CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((- (CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0, t0;
SELECT DISTINCT * FROM vt1, rt0, vt0, t0 WHERE (COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0, t0 WHERE ((NOT (COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0, t0 WHERE (((COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0, t0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))>=(((rt0.c2)OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS REAL))>=(((rt0.c2)OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS REAL))>=(((rt0.c2)OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING MIN(CAST(GROUP_CONCAT(vt1.c0) AS TEXT)) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING (NOT (MIN(CAST(GROUP_CONCAT(vt1.c0) AS TEXT)))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING ((MIN(CAST(GROUP_CONCAT(vt1.c0) AS TEXT))) ISNULL);
SELECT t0.c4 FROM t0, vt1;
SELECT t0.c4 FROM t0, vt1 WHERE (((~ (t0.c4)) IN ())) UNION ALL SELECT t0.c4 FROM t0, vt1 WHERE ((NOT (((~ (t0.c4)) IN ())))) UNION ALL SELECT t0.c4 FROM t0, vt1 WHERE (((((~ (t0.c4)) IN ())) ISNULL));
SELECT t0.c4 FROM t0, vt1;
SELECT DISTINCT t0.c4 FROM t0;
SELECT DISTINCT t0.c4 FROM t0 WHERE (CAST(((t0.c4) ISNULL) AS BLOB)) UNION SELECT DISTINCT t0.c4 FROM t0 WHERE ((NOT (CAST(((t0.c4) ISNULL) AS BLOB)))) UNION SELECT DISTINCT t0.c4 FROM t0 WHERE (((CAST(((t0.c4) ISNULL) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c4 FROM t0;
SELECT ALL rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 GROUP BY rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((((rt0.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))) BETWEEN ((('0.08358424577587831')<=(rt0.c1))) AND (CAST(vt1.c0 AS BLOB)))) GROUP BY rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))) BETWEEN ((('0.08358424577587831')<=(rt0.c1))) AND (CAST(vt1.c0 AS BLOB)))))) GROUP BY rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((((((rt0.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))) BETWEEN ((('0.08358424577587831')<=(rt0.c1))) AND (CAST(vt1.c0 AS BLOB)))) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 GROUP BY rt0.c2, vt1.c0, vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c0;
SELECT ALL t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, t0, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, t0, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING AVG(SUM(rt0.c2)) UNION ALL SELECT t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, t0, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (AVG(SUM(rt0.c2)))) UNION ALL SELECT ALL t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, t0, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING ((AVG(SUM(rt0.c2))) ISNULL);
SELECT MIN((+ (((((((((vt0.c2)AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c0)))OR(rt0.c1))))) FROM rt0, vt1, vt0 ORDER BY ((vt0.c2 IN ()) IN (CASE WHEN rt0.c0 THEN vt0.c2 ELSE vt0.c2 END, (vt1.c0 IN ())))  NULLS FIRST, CAST(((rt0.c1)>>(x'')) AS TEXT) DESC  NULLS LAST;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1;
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((0.21552159824592698)<(rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((NOT (rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE ((NOT (((((0.21552159824592698)<(rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((NOT (rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((((0.21552159824592698)<(rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((NOT (rt0.c1))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1;
SELECT DISTINCT t0.c4, vt1.c0 FROM t0 INNER JOIN vt1 ON ((- (t0.c4)) IN ());
SELECT DISTINCT t0.c4, vt1.c0 FROM t0 INNER JOIN vt1 ON ((- (t0.c4)) IN ()) WHERE (t0.c4) UNION SELECT DISTINCT t0.c4, vt1.c0 FROM t0 INNER JOIN vt1 ON ((- (t0.c4)) IN ()) WHERE ((NOT (t0.c4))) UNION SELECT DISTINCT t0.c4, vt1.c0 FROM t0 INNER JOIN vt1 ON ((- (t0.c4)) IN ()) WHERE (((t0.c4) ISNULL));
SELECT DISTINCT t0.c4, vt1.c0 FROM t0 INNER JOIN vt1 ON ((- (t0.c4)) IN ());
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN CAST(0.3412315333647208 AS BLOB) THEN (vt1.c0 IN (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) NOT NULL)  WHEN CAST(0.3412315333647208 AS BLOB) THEN (vt1.c0 IN (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) NOT NULL)  WHEN CAST(0.3412315333647208 AS BLOB) THEN (vt1.c0 IN (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2;
SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING vt1.c0 UNION ALL SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING (NOT (vt1.c0)) UNION ALL SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING ((vt1.c0) ISNULL);
SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2;
SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING vt1.c0 UNION ALL SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING (NOT (vt1.c0)) UNION ALL SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING ((vt1.c0) ISNULL);
SELECT t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM t0, vt0, vt1 GROUP BY t0.c4, vt0.c0, vt0.c1, vt1.c0, vt0.c2;
SELECT ALL rt0.c2, t0.c4, rt0.c0, vt1.c0 FROM vt1, t0, rt0;
SELECT rt0.c2, t0.c4, rt0.c0, vt1.c0 FROM vt1, t0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)<=(vt1.c0))) UNION ALL SELECT ALL rt0.c2, t0.c4, rt0.c0, vt1.c0 FROM vt1, t0, rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)<=(vt1.c0))))) UNION ALL SELECT ALL rt0.c2, t0.c4, rt0.c0, vt1.c0 FROM vt1, t0, rt0 WHERE (((((rt0.c2 COLLATE NOCASE)<=(vt1.c0))) ISNULL));
SELECT ALL rt0.c2, t0.c4, rt0.c0, vt1.c0 FROM vt1, t0, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE ((vt1.c0 COLLATE BINARY IN (MAX(t0.c4, t0.c4)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN (MAX(t0.c4, t0.c4)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE ((((vt1.c0 COLLATE BINARY IN (MAX(t0.c4, t0.c4)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, t0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((vt0.c2 IN (vt0.c1)) COLLATE RTRIM) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c2 IN (vt0.c1)) COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c2 IN (vt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(COUNT(*) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(*) COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(*) COLLATE NOCASE)) ISNULL);
SELECT * FROM vt0, t0 INDEXED BY i44, rt0 LEFT OUTER JOIN vt1 ON (- (rt0.c1 COLLATE NOCASE));
SELECT DISTINCT * FROM vt0, t0 CROSS JOIN rt0 ON ((vt0.c0) NOTNULL);
SELECT DISTINCT * FROM vt0 NOT INDEXED, t0 CROSS JOIN rt0 ON ((vt0.c0) NOTNULL) WHERE (((((((((DATE(rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c1) ISNULL))))OR(t0.c4)))OR(CAST(vt0.c0 AS NUMERIC))))AND(t0.c4 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, t0 CROSS JOIN rt0 ON ((vt0.c0) NOTNULL) WHERE ((NOT (((((((((DATE(rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c1) ISNULL))))OR(t0.c4)))OR(CAST(vt0.c0 AS NUMERIC))))AND(t0.c4 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, t0 CROSS JOIN rt0 ON ((vt0.c0) NOTNULL) WHERE (((((((((((DATE(rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c1) ISNULL))))OR(t0.c4)))OR(CAST(vt0.c0 AS NUMERIC))))AND(t0.c4 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 CROSS JOIN rt0 ON ((vt0.c0) NOTNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2;
SELECT ALL vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 HAVING SUM(UPPER(DISTINCT t0.c4)) UNION ALL SELECT ALL vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 HAVING (NOT (SUM(UPPER(DISTINCT t0.c4)))) UNION ALL SELECT ALL vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 HAVING ((SUM(UPPER(DISTINCT t0.c4))) ISNULL);
SELECT vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2;
SELECT ALL vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 HAVING SUM(UPPER(DISTINCT t0.c4)) UNION ALL SELECT ALL vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 HAVING (NOT (SUM(UPPER(DISTINCT t0.c4)))) UNION ALL SELECT ALL vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 HAVING ((SUM(UPPER(DISTINCT t0.c4))) ISNULL);
SELECT vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, t0.c4, vt0.c2, rt0.c2;
SELECT ALL * FROM t0, vt0, vt1, rt0;
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE (x'') UNION ALL SELECT * FROM t0, vt0, vt1, rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t0, vt0, vt1, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t0, vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((NULL)>=(vt0.c2)) IN ())) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT ((((NULL)>=(vt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((((NULL)>=(vt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT ALL rt0.c2, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, vt0.c2;
SELECT ALL rt0.c2, vt0.c2 FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c1)AND(vt0.c2)))OR(t0.c4)))<>(((vt0.c1)>>(''))))) GROUP BY rt0.c2, vt0.c2 UNION SELECT rt0.c2, vt0.c2 FROM vt0, vt1, t0, rt0 NOT INDEXED WHERE ((NOT (((((((rt0.c1)AND(vt0.c2)))OR(t0.c4)))<>(((vt0.c1)>>(''))))))) GROUP BY rt0.c2, vt0.c2 UNION SELECT rt0.c2, vt0.c2 FROM vt0, vt1, t0, rt0 WHERE (((((((((rt0.c1)AND(vt0.c2)))OR(t0.c4)))<>(((vt0.c1)>>(''))))) ISNULL)) GROUP BY rt0.c2, vt0.c2;
SELECT ALL rt0.c2, vt0.c2 FROM vt0, vt1, t0, rt0 GROUP BY rt0.c2, vt0.c2;
SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0;
SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING AVG(TOTAL(MIN(MIN(MIN(COUNT(vt1.c0)))))) UNION ALL SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING (NOT (AVG(TOTAL(MIN(MIN(MIN(COUNT(vt1.c0)))))))) UNION ALL SELECT t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING ((AVG(TOTAL(MIN(MIN(MIN(COUNT(vt1.c0))))))) ISNULL);
SELECT ALL rt0.c2, vt0.c0 FROM rt0 NOT INDEXED, vt1, vt0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt1, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL rt0.c2, vt0.c0 FROM rt0 NOT INDEXED, vt1, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((vt0.c1 IN ()))AND(CASE t0.c4  WHEN vt0.c0 THEN 'BQ?<y' ELSE vt0.c1 END))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((vt0.c1 IN ()))AND(CASE t0.c4  WHEN vt0.c0 THEN 'BQ?<y' ELSE vt0.c1 END))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((vt0.c1 IN ()))AND(CASE t0.c4  WHEN vt0.c0 THEN 'BQ?<y' ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt1.c0, vt0.c2 FROM vt1 CROSS JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)/(vt0.c1)) GROUP BY vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt1 CROSS JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)/(vt0.c1)) WHERE ((((vt0.c0 IN (NULL))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS BLOB)))) GROUP BY vt1.c0, vt0.c2 UNION SELECT vt1.c0, vt0.c2 FROM vt1 CROSS JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)/(vt0.c1)) WHERE ((NOT ((((vt0.c0 IN (NULL))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS BLOB)))))) GROUP BY vt1.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c2 FROM vt1 CROSS JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)/(vt0.c1)) WHERE ((((((vt0.c0 IN (NULL))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS BLOB)))) ISNULL)) GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt1 CROSS JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)/(vt0.c1)) GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c0, t0.c4 FROM vt1, vt0, rt0, t0 GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c0, t0.c4;
SELECT vt1.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c0, t0.c4 FROM vt1, vt0, rt0, t0 GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c0, t0.c4 HAVING TOTAL((((COUNT(*)))=((AVG(rt0.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c0, t0.c4 FROM vt1, vt0, rt0, t0 GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c0, t0.c4 HAVING (NOT (TOTAL((((COUNT(*)))=((AVG(rt0.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c0, t0.c4 FROM vt1, vt0, rt0, t0 GROUP BY vt1.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c0, t0.c4 HAVING ((TOTAL((((COUNT(*)))==((AVG(rt0.c0)))))) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0, vt1;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0, vt1 WHERE (((-64067320)AND(((vt0.c1)=(vt0.c2))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0, vt1 WHERE ((NOT (((-64067320)AND(((vt0.c1)=(vt0.c2))))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0, vt1 WHERE (((((-64067320)AND(((vt0.c1)=(vt0.c2))))) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0, vt1;
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)GLOB(rt0.c2)), ((rt0.c0)>=(rt0.c2)), ((rt0.c0) IS FALSE)))>=(((NOT (x'')), 0xffffffffa643d0fd, '483087868')))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)GLOB(rt0.c2)), ((rt0.c0)>=(rt0.c2)), ((rt0.c0) IS FALSE)))>=(((NOT (x'')), 0xffffffffa643d0fd, '483087868')))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)GLOB(rt0.c2)), ((rt0.c0)>=(rt0.c2)), ((rt0.c0) IS FALSE)))>=(((NOT (x'')), 0xffffffffa643d0fd, '483087868')))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE))==((NULLIF(vt1.c0, vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 COLLATE NOCASE))==((NULLIF(vt1.c0, vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 COLLATE NOCASE))=((NULLIF(vt1.c0, vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE WHEN SUM(rt0.c0) THEN AVG(GROUP_CONCAT(COUNT(*))) END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN SUM(rt0.c0) THEN AVG(GROUP_CONCAT(COUNT(*))) END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN SUM(rt0.c0) THEN AVG(GROUP_CONCAT(COUNT(*))) END) ISNULL);
SELECT t0.c4 FROM t0;
SELECT t0.c4 FROM t0 WHERE ((((t0.c4, t0.c4, t0.c4))<>((t0.c4, t0.c4, t0.c4))) COLLATE BINARY) UNION ALL SELECT t0.c4 FROM t0 WHERE ((NOT ((((t0.c4, t0.c4, t0.c4))!=((t0.c4, t0.c4, t0.c4))) COLLATE BINARY))) UNION ALL SELECT t0.c4 FROM t0 WHERE ((((((t0.c4, t0.c4, t0.c4))<>((t0.c4, t0.c4, t0.c4))) COLLATE BINARY) ISNULL));
SELECT t0.c4 FROM t0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, vt0.c2 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (+ ((t0.c4 IN ()))) LEFT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN t0.c4 THEN rt0.c0 ELSE vt0.c1 END ELSE t0.c4 COLLATE BINARY END;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, vt0.c2 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (+ ((t0.c4 IN ()))) LEFT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN t0.c4 THEN rt0.c0 ELSE vt0.c1 END ELSE t0.c4 COLLATE BINARY END WHERE (UNLIKELY(((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, vt0.c2 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (+ ((t0.c4 IN ()))) LEFT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN t0.c4 THEN rt0.c0 ELSE vt0.c1 END ELSE t0.c4 COLLATE BINARY END WHERE ((NOT (UNLIKELY(((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, vt0.c2 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (+ ((t0.c4 IN ()))) LEFT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN t0.c4 THEN rt0.c0 ELSE vt0.c1 END ELSE t0.c4 COLLATE BINARY END WHERE (((UNLIKELY(((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, vt0.c2 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (+ ((t0.c4 IN ()))) LEFT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN t0.c4 THEN rt0.c0 ELSE vt0.c1 END ELSE t0.c4 COLLATE BINARY END;
SELECT ALL vt0.c2, t0.c4, rt0.c1 FROM rt0, t0, vt0, vt1 GROUP BY vt0.c2, t0.c4, rt0.c1;
SELECT ALL vt0.c2, t0.c4, rt0.c1 FROM rt0, t0, vt0, vt1 WHERE (0.7146592437039535) GROUP BY vt0.c2, t0.c4, rt0.c1 UNION SELECT vt0.c2, t0.c4, rt0.c1 FROM rt0, t0, vt0, vt1 WHERE ((NOT (0.7146592437039535))) GROUP BY vt0.c2, t0.c4, rt0.c1 UNION SELECT ALL vt0.c2, t0.c4, rt0.c1 FROM rt0, t0, vt0, vt1 WHERE (((0.7146592437039535) ISNULL)) GROUP BY vt0.c2, t0.c4, rt0.c1;
SELECT ALL vt0.c2, t0.c4, rt0.c1 FROM rt0, t0, vt0, vt1 GROUP BY vt0.c2, t0.c4, rt0.c1;
SELECT vt0.c1, vt0.c2 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt0.c2 HAVING CAST(SUM(MIN(t0.c4)) AS INTEGER) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (CAST(SUM(MIN(t0.c4)) AS INTEGER))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt0.c2 HAVING ((CAST(SUM(MIN(t0.c4)) AS INTEGER)) ISNULL);
SELECT ALL * FROM t0, vt0, vt1;
SELECT * FROM t0, vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((t0.c4)OR(vt0.c2)))AND(vt1.c0)) ELSE ((vt0.c0)*(vt0.c1)) END) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((t0.c4)OR(vt0.c2)))AND(vt1.c0)) ELSE ((vt0.c0)*(vt0.c1)) END))) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((t0.c4)OR(vt0.c2)))AND(vt1.c0)) ELSE ((vt0.c0)*(vt0.c1)) END) ISNULL));
SELECT ALL * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT ((- (CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((((- (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (CASE WHEN x'' COLLATE NOCASE THEN (+ (vt0.c2)) WHEN (((t0.c4, vt0.c1, vt0.c0)) BETWEEN ((t0.c4, t0.c4, vt0.c1)) AND ((t0.c4, vt0.c0, vt0.c1))) THEN (~ (t0.c4)) WHEN CASE WHEN vt0.c0 THEN '-1666827152' END THEN ((vt0.c0)<(vt0.c1)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN x'' COLLATE NOCASE THEN (+ (vt0.c2)) WHEN (((t0.c4, vt0.c1, vt0.c0)) BETWEEN ((t0.c4, t0.c4, vt0.c1)) AND ((t0.c4, vt0.c0, vt0.c1))) THEN (~ (t0.c4)) WHEN CASE WHEN vt0.c0 THEN '-1666827152' END THEN ((vt0.c0)<(vt0.c1)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((CASE WHEN x'' COLLATE NOCASE THEN (+ (vt0.c2)) WHEN (((t0.c4, vt0.c1, vt0.c0)) BETWEEN ((t0.c4, t0.c4, vt0.c1)) AND ((t0.c4, vt0.c0, vt0.c1))) THEN (~ (t0.c4)) WHEN CASE WHEN vt0.c0 THEN '-1666827152' END THEN ((vt0.c0)<(vt0.c1)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MIN(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MIN(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MIN(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((~ (NULL))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ (NULL))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((~ (NULL))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((NOT (rt0.c1))) ISNULL)) GROUP BY vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0 UNION SELECT vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0 FROM vt0 NOT INDEXED, rt0 WHERE ((NOT ((((NOT (rt0.c1))) ISNULL)))) GROUP BY vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0 UNION SELECT vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((NOT (rt0.c1))) ISNULL)) ISNULL)) GROUP BY vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0 NOT INDEXED, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 HAVING CASE WHEN '-1413441157' THEN t0.c4 ELSE (GROUP_CONCAT(SUM(COUNT(vt0.c0))) IN ()) END UNION ALL SELECT vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 HAVING (NOT (CASE WHEN '-1413441157' THEN t0.c4 ELSE (GROUP_CONCAT(SUM(COUNT(vt0.c0))) IN ()) END)) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 HAVING ((CASE WHEN '-1413441157' THEN t0.c4 ELSE (GROUP_CONCAT(SUM(COUNT(vt0.c0))) IN ()) END) ISNULL);
SELECT vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0 NOT INDEXED, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 HAVING CASE WHEN '-1413441157' THEN t0.c4 ELSE (GROUP_CONCAT(SUM(COUNT(vt0.c0))) IN ()) END UNION ALL SELECT vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 HAVING (NOT (CASE WHEN '-1413441157' THEN t0.c4 ELSE (GROUP_CONCAT(SUM(COUNT(vt0.c0))) IN ()) END)) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 HAVING ((CASE WHEN '-1413441157' THEN t0.c4 ELSE (GROUP_CONCAT(SUM(COUNT(vt0.c0))) IN ()) END) ISNULL);
SELECT vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM t0, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt0.c2, rt0.c1, vt1.c0, vt0.c1;
SELECT rt0.c1, vt1.c0, t0.c4, rt0.c2 FROM rt0, t0, vt1;
SELECT ALL rt0.c1, vt1.c0, t0.c4, rt0.c2 FROM rt0, t0, vt1 WHERE ((~ (vt1.c0))) UNION ALL SELECT rt0.c1, vt1.c0, t0.c4, rt0.c2 FROM rt0, t0, vt1 WHERE ((NOT ((~ (vt1.c0))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, t0.c4, rt0.c2 FROM rt0, t0, vt1 WHERE ((((~ (vt1.c0))) ISNULL));
SELECT rt0.c1, vt1.c0, t0.c4, rt0.c2 FROM rt0, t0, vt1;
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN t0 ON CAST(CHAR(vt0.c1) AS REAL) FULL OUTER JOIN rt0 ON ((x'')=((~ (vt0.c1)))) INNER JOIN vt0 ON ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((0.14816709388254057))) IN ());
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN t0 ON CAST(CHAR(vt0.c1) AS REAL) FULL OUTER JOIN rt0 ON ((x'')==((~ (vt0.c1)))) INNER JOIN vt0 ON ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((0.14816709388254057))) IN ()) WHERE (LENGTH(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c2)))) UNION SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN t0 ON CAST(CHAR(vt0.c1) AS REAL) FULL OUTER JOIN rt0 ON ((x'')==((~ (vt0.c1)))) INNER JOIN vt0 ON ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((0.14816709388254057))) IN ()) WHERE ((NOT (LENGTH(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c2)))))) UNION SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN t0 ON CAST(CHAR(vt0.c1) AS REAL) FULL OUTER JOIN rt0 ON ((x'')==((~ (vt0.c1)))) INNER JOIN vt0 ON ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((0.14816709388254057))) IN ()) WHERE (((LENGTH(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c2)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN t0 ON CAST(CHAR(vt0.c1) AS REAL) FULL OUTER JOIN rt0 ON ((x'')=((~ (vt0.c1)))) INNER JOIN vt0 ON ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((0.14816709388254057))) IN ());
SELECT ALL rt0.c2, vt1.c0, vt0.c1, t0.c4 FROM vt0, t0 CROSS JOIN vt1 ON (~ ((NOT (vt0.c1)))) INNER JOIN rt0 ON CAST(t0.c4 COLLATE BINARY AS TEXT) GROUP BY rt0.c2, vt1.c0, vt0.c1, t0.c4;
SELECT rt0.c2, vt1.c0, vt0.c1, t0.c4 FROM vt0, t0 CROSS JOIN vt1 ON (~ ((NOT (vt0.c1)))) INNER JOIN rt0 ON CAST(t0.c4 COLLATE BINARY AS TEXT) WHERE (rt0.c0) GROUP BY rt0.c2, vt1.c0, vt0.c1, t0.c4 UNION SELECT rt0.c2, vt1.c0, vt0.c1, t0.c4 FROM vt0, t0 CROSS JOIN vt1 ON (~ ((NOT (vt0.c1)))) INNER JOIN rt0 ON CAST(t0.c4 COLLATE BINARY AS TEXT) WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, vt1.c0, vt0.c1, t0.c4 UNION SELECT ALL rt0.c2, vt1.c0, vt0.c1, t0.c4 FROM vt0, t0 CROSS JOIN vt1 ON (~ ((NOT (vt0.c1)))) INNER JOIN rt0 ON CAST(t0.c4 COLLATE BINARY AS TEXT) WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt0.c1, t0.c4;
SELECT ALL rt0.c2, vt1.c0, vt0.c1, t0.c4 FROM vt0, t0 CROSS JOIN vt1 ON (~ ((NOT (vt0.c1)))) INNER JOIN rt0 ON CAST(t0.c4 COLLATE BINARY AS TEXT) GROUP BY rt0.c2, vt1.c0, vt0.c1, t0.c4;
SELECT ALL rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c1 COLLATE RTRIM FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c1 COLLATE RTRIM FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE) GROUP BY rt0.c0 HAVING GROUP_CONCAT(((TOTAL(t0.c4)) NOT BETWEEN (vt0.c2) AND (MAX(COUNT(SUM(vt0.c0)))))) UNION ALL SELECT rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c1 COLLATE RTRIM FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE) GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(((TOTAL(t0.c4)) NOT BETWEEN (vt0.c2) AND (MAX(COUNT(SUM(vt0.c0)))))))) UNION ALL SELECT rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c1 COLLATE RTRIM FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE) GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(((TOTAL(t0.c4)) NOT BETWEEN (vt0.c2) AND (MAX(COUNT(SUM(vt0.c0))))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND ((((vt0.c1) IS TRUE))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND ((((vt0.c1) IS TRUE))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND ((((vt0.c1) IS TRUE))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON vt0.c2;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON vt0.c2 WHERE (COALESCE(((vt1.c0) NOT NULL), rt0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON vt0.c2 WHERE ((NOT (COALESCE(((vt1.c0) NOT NULL), rt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON vt0.c2 WHERE (((COALESCE(((vt1.c0) NOT NULL), rt0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON vt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c0))) IS TRUE) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c0))) IS TRUE) WHERE (CASE x''  WHEN rt0.c0 THEN x'be0a' END) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c0))) IS TRUE) WHERE ((NOT (CASE x''  WHEN rt0.c0 THEN x'be0a' END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c0))) IS TRUE) WHERE (((CASE x''  WHEN rt0.c0 THEN x'be0a' END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)OR(rt0.c0))) IS TRUE) GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING CAST(SUM(t0.c4) AS TEXT) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT (CAST(SUM(t0.c4) AS TEXT))) UNION ALL SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((CAST(SUM(t0.c4) AS TEXT)) ISNULL);
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING CAST(SUM(t0.c4) AS TEXT) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT (CAST(SUM(t0.c4) AS TEXT))) UNION ALL SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((CAST(SUM(t0.c4) AS TEXT)) ISNULL);
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT TOTAL((((0.24973858786929093 IN ())) IS TRUE)) FROM rt0, vt0, vt1;
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((IFNULL(vt0.c0, vt0.c0) IN ())) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((IFNULL(vt0.c0, vt0.c0) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE ((((IFNULL(vt0.c0, vt0.c0) IN ())) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 NOT INDEXED WHERE (((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt1 NOT INDEXED, vt0 WHERE (((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0 CROSS JOIN vt0 ON (~ ((- ('1376767960')))) GROUP BY vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0 CROSS JOIN vt0 ON (~ ((- ('1376767960')))) WHERE (CAST(x'' AS TEXT)) GROUP BY vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0 CROSS JOIN vt0 ON (~ ((- ('1376767960')))) WHERE ((NOT (CAST(x'' AS TEXT)))) GROUP BY vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0 CROSS JOIN vt0 ON (~ ((- ('1376767960')))) WHERE (((CAST(x'' AS TEXT)) ISNULL)) GROUP BY vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM t0, vt1, rt0 CROSS JOIN vt0 ON (~ ((- ('1376767960')))) GROUP BY vt0.c0, t0.c4, vt1.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4;
SELECT ALL vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4 HAVING MAX(0.4423080019146336) COLLATE NOCASE UNION ALL SELECT vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4 HAVING (NOT (MAX(0.4423080019146336) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4 HAVING ((MAX(0.4423080019146336) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4;
SELECT ALL vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4 HAVING MAX(0.4423080019146336) COLLATE NOCASE UNION ALL SELECT vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4 HAVING (NOT (MAX(0.4423080019146336) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4 HAVING ((MAX(0.4423080019146336) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, t0.c4 FROM vt1 FULL OUTER JOIN t0 ON vt1.c0 GROUP BY vt1.c0, t0.c4;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((~ (((t0.c4) NOT BETWEEN (t0.c4) AND (''))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((~ (((t0.c4) NOT BETWEEN (t0.c4) AND (''))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((~ (((t0.c4) NOT BETWEEN (t0.c4) AND (''))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE (+ (t0.c4))  WHEN t0.c4 THEN NULL END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE (+ (t0.c4))  WHEN t0.c4 THEN NULL END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE (+ (t0.c4))  WHEN t0.c4 THEN NULL END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 WHERE ((((((rt0.c0))<>((vt0.c1)))) IS FALSE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c0))!=((vt0.c1)))) IS FALSE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((((((((rt0.c0))!=((vt0.c1)))) IS FALSE)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT t0.c4 FROM t0 INDEXED BY i44 GROUP BY t0.c4;
SELECT rt0.c2, rt0.c0, vt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0;
SELECT rt0.c2, rt0.c0, vt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0 WHERE (CASE CASE vt0.c0  WHEN t0.c4 THEN 8.7489435E8 WHEN t0.c4 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN CASE 0.9539052121074911  WHEN rt0.c1 THEN rt0.c0 WHEN t0.c4 THEN t0.c4 WHEN vt0.c0 THEN vt0.c2 END WHEN '0.355877381322244' THEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c0 END END) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT (CASE CASE vt0.c0  WHEN t0.c4 THEN 8.7489435E8 WHEN t0.c4 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN CASE 0.9539052121074911  WHEN rt0.c1 THEN rt0.c0 WHEN t0.c4 THEN t0.c4 WHEN vt0.c0 THEN vt0.c2 END WHEN '0.355877381322244' THEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c0 END END))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0 WHERE (((CASE CASE vt0.c0  WHEN t0.c4 THEN 8.7489435E8 WHEN t0.c4 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN CASE 0.9539052121074911  WHEN rt0.c1 THEN rt0.c0 WHEN t0.c4 THEN t0.c4 WHEN vt0.c0 THEN vt0.c2 END WHEN '0.355877381322244' THEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c0 END END) ISNULL));
SELECT rt0.c2, rt0.c0, vt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((0.23342432128831703)AND(vt0.c0)))OR(rt0.c2))) AND (vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((((0.23342432128831703)AND(vt0.c0)))OR(rt0.c2))) AND (vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (((((0.23342432128831703)AND(vt0.c0)))OR(rt0.c2))) AND (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, rt0.c1, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1 FROM rt0, vt1, t0, vt0 GROUP BY vt0.c0, rt0.c1, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c1, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1 FROM rt0, vt1, t0, vt0 GROUP BY vt0.c0, rt0.c1, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1 HAVING AVG(AVG(MAX(MAX(TOTAL(rt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1 FROM rt0, vt1 NOT INDEXED, t0, vt0 GROUP BY vt0.c0, rt0.c1, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1 HAVING (NOT (AVG(AVG(MAX(MAX(TOTAL(rt0.c1))))))) UNION ALL SELECT vt0.c0, rt0.c1, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1 FROM rt0, vt1, t0, vt0 NOT INDEXED GROUP BY vt0.c0, rt0.c1, t0.c4, vt1.c0, rt0.c2, vt0.c2, vt0.c1 HAVING ((AVG(AVG(MAX(MAX(TOTAL(rt0.c1)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c4 IN ())) NOTNULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c4 IN ())) NOTNULL)))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c4 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE (NULL) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c2) ISNULL)) IS TRUE)) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((vt0.c2) ISNULL)) IS TRUE)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((((vt0.c2) ISNULL)) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((((GROUP_CONCAT(vt1.c0))OR(((COUNT(COUNT(AVG(NULL))))||(COUNT(vt0.c1))))))AND(TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (NOT (((((GROUP_CONCAT(vt1.c0))OR(((COUNT(COUNT(AVG(NULL))))||(COUNT(vt0.c1))))))AND(TOTAL(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((((((GROUP_CONCAT(vt1.c0))OR(((COUNT(COUNT(AVG(NULL))))||(COUNT(vt0.c1))))))AND(TOTAL(vt1.c0)))) ISNULL);
SELECT * FROM rt0, vt0, t0, vt1;
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((+ (((vt0.c2)!=(rt0.c1))))) UNION ALL SELECT * FROM rt0, vt0, t0, vt1 WHERE ((NOT ((+ (((vt0.c2)!=(rt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0, t0, vt1 WHERE ((((+ (((vt0.c2)!=(rt0.c1))))) ISNULL));
SELECT * FROM rt0, vt0, t0, vt1;
SELECT DISTINCT t0.c4, rt0.c1 FROM vt0, vt1, rt0, t0;
SELECT DISTINCT t0.c4, rt0.c1 FROM vt0, vt1, rt0, t0 WHERE (CAST(vt0.c2 AS BLOB) COLLATE RTRIM) UNION SELECT DISTINCT t0.c4, rt0.c1 FROM vt0, vt1, rt0, t0 WHERE ((NOT (CAST(vt0.c2 AS BLOB) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c4, rt0.c1 FROM vt0, vt1, rt0, t0 WHERE (((CAST(vt0.c2 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c4, rt0.c1 FROM vt0, vt1, rt0, t0;
SELECT ALL rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4 FROM vt0 INNER JOIN t0 ON (((((((('')OR((((((((('d/')AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c2)))))OR(((rt0.c2) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND(CAST(rt0.c0 AS REAL))) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))==(CAST(rt0.c1 AS REAL))) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4;
SELECT rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4 FROM vt0 INNER JOIN t0 ON (((((((('')OR((((((((('d/')AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c2)))))OR(((rt0.c2) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND(CAST(rt0.c0 AS REAL))) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))=(CAST(rt0.c1 AS REAL))) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) WHERE ((((rt0.c0)IS(rt0.c2)) IN ())) GROUP BY rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4 UNION SELECT ALL rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4 FROM vt0 INNER JOIN t0 ON (((((((('')OR((((((((('d/')AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c2)))))OR(((rt0.c2) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND(CAST(rt0.c0 AS REAL))) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))==(CAST(rt0.c1 AS REAL))) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) WHERE ((NOT ((((rt0.c0)IS(rt0.c2)) IN ())))) GROUP BY rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4 UNION SELECT ALL rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4 FROM vt0 INNER JOIN t0 ON (((((((('')OR((((((((('d/')AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c2)))))OR(((rt0.c2) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND(CAST(rt0.c0 AS REAL))) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))=(CAST(rt0.c1 AS REAL))) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) WHERE ((((((rt0.c0)IS(rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4;
SELECT ALL rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4 FROM vt0 INNER JOIN t0 ON (((((((('')OR((((((((('d/')AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c2)))))OR(((rt0.c2) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND(CAST(rt0.c0 AS REAL))) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))==(CAST(rt0.c1 AS REAL))) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY rt0.c2, vt0.c0, vt1.c0, vt0.c2, rt0.c0, rt0.c1, t0.c4;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE SUM(COUNT(*))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (COUNT(*))) THEN AVG(vt1.c0) ELSE ((GROUP_CONCAT(COUNT(*)))>>(COUNT(vt1.c0))) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE SUM(COUNT(*))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (COUNT(*))) THEN AVG(vt1.c0) ELSE ((GROUP_CONCAT(COUNT(*)))>>(COUNT(vt1.c0))) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE SUM(COUNT(*))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (COUNT(*))) THEN AVG(vt1.c0) ELSE ((GROUP_CONCAT(COUNT(*)))>>(COUNT(vt1.c0))) END) ISNULL);
SELECT * FROM t0, vt0, rt0;
SELECT ALL * FROM t0, vt0, rt0 WHERE ('qur4y2Dᘭ' COLLATE BINARY) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((NOT ('qur4y2Dᘭ' COLLATE BINARY))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((('qur4y2Dᘭ' COLLATE BINARY) ISNULL));
SELECT * FROM t0, vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, t0.c4, vt1.c0, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON JULIANDAY((('1321726864')%(1931789976)), ((rt0.c0)|(rt0.c1)), ((vt0.c2) BETWEEN (t0.c4) AND (rt0.c0)), 0xffffffff8ad27925, ((vt0.c1) ISNULL)) FULL OUTER JOIN vt1 ON (NOT ('?X*☪K+8' COLLATE NOCASE));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, t0.c4, vt1.c0, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON JULIANDAY((('1321726864')%(1931789976)), ((rt0.c0)|(rt0.c1)), ((vt0.c2) BETWEEN (t0.c4) AND (rt0.c0)), 0Xffffffff8ad27925, ((vt0.c1) ISNULL)) FULL OUTER JOIN vt1 ON (NOT ('?X*☪K+8' COLLATE NOCASE)) WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, t0.c4, vt1.c0, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON JULIANDAY((('1321726864')%(1931789976)), ((rt0.c0)|(rt0.c1)), ((vt0.c2) BETWEEN (t0.c4) AND (rt0.c0)), 0xffffffff8ad27925, ((vt0.c1) ISNULL)) FULL OUTER JOIN vt1 ON (NOT ('?X*☪K+8' COLLATE NOCASE)) WHERE ((NOT (((vt1.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, t0.c4, vt1.c0, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON JULIANDAY((('1321726864')%(1931789976)), ((rt0.c0)|(rt0.c1)), ((vt0.c2) BETWEEN (t0.c4) AND (rt0.c0)), 0xffffffff8ad27925, ((vt0.c1) ISNULL)) FULL OUTER JOIN vt1 ON (NOT ('?X*☪K+8' COLLATE NOCASE)) WHERE (((((vt1.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, vt0.c2, vt0.c1, t0.c4, vt1.c0, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON JULIANDAY((('1321726864')%(1931789976)), ((rt0.c0)|(rt0.c1)), ((vt0.c2) BETWEEN (t0.c4) AND (rt0.c0)), 0xffffffff8ad27925, ((vt0.c1) ISNULL)) FULL OUTER JOIN vt1 ON (NOT ('?X*☪K+8' COLLATE NOCASE));
SELECT vt1.c0, t0.c4 FROM t0, vt1 GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0, t0.c4 FROM t0, vt1 NOT INDEXED WHERE (CAST(((vt1.c0)IS NOT(t0.c4)) AS REAL)) GROUP BY vt1.c0, t0.c4 UNION SELECT ALL vt1.c0, t0.c4 FROM t0, vt1 WHERE ((NOT (CAST(((vt1.c0)IS NOT(t0.c4)) AS REAL)))) GROUP BY vt1.c0, t0.c4 UNION SELECT ALL vt1.c0, t0.c4 FROM t0, vt1 WHERE (((CAST(((vt1.c0)IS NOT(t0.c4)) AS REAL)) ISNULL)) GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0, t0.c4 FROM t0, vt1 GROUP BY vt1.c0, t0.c4;
SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING MAX(0xffffffffeee4881c) UNION ALL SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(0xffffffffeee4881c))) UNION ALL SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING ((MAX(0Xffffffffeee4881c)) ISNULL);
SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING MAX(0xffffffffeee4881c) UNION ALL SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(0xffffffffeee4881c))) UNION ALL SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING ((MAX(0Xffffffffeee4881c)) ISNULL);
SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c2 IN ()) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c2 IN ()) IN ())))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c2 IN ()) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((-7.69344893E8)LIKE(rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((-7.69344893E8)LIKE(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((-7.69344893E8)LIKE(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (CASE WHEN (+ (rt0.c1)) THEN UPPER(DISTINCT rt0.c0) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE WHEN (+ (rt0.c1)) THEN UPPER(DISTINCT rt0.c0) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((CASE WHEN (+ (rt0.c1)) THEN UPPER(DISTINCT rt0.c0) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4;
SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING NULL UNION ALL SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4;
SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING NULL UNION ALL SELECT vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0, t0.c4 FROM vt1, t0 GROUP BY vt1.c0, t0.c4;
SELECT * FROM vt0, rt0, vt1, t0;
SELECT * FROM vt0, rt0, vt1, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND (((NOT (rt0.c1)))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((NULL)) AND (((NOT (rt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE ((((((rt0.c2)) NOT BETWEEN ((NULL)) AND (((NOT (rt0.c1)))))) ISNULL));
SELECT * FROM vt0, rt0, vt1, t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (4.72052464E8) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (4.72052464E8))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((4.72052464E8) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL rt0.c1 FROM vt1 NOT INDEXED, vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((((vt0.c2 COLLATE BINARY)OR(TYPEOF(rt0.c2))))OR(vt0.c2 COLLATE BINARY)))OR(((vt0.c1) NOT BETWEEN (-72155744) AND (rt0.c0)))))AND(IFNULL('p', vt0.c0)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((((((((vt0.c2 COLLATE BINARY)OR(TYPEOF(rt0.c2))))OR(vt0.c2 COLLATE BINARY)))OR(((vt0.c1) NOT BETWEEN (-72155744) AND (rt0.c0)))))AND(IFNULL('p', vt0.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((((((vt0.c2 COLLATE BINARY)OR(TYPEOF(rt0.c2))))OR(vt0.c2 COLLATE BINARY)))OR(((vt0.c1) NOT BETWEEN (-72155744) AND (rt0.c0)))))AND(IFNULL('p', vt0.c0)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 NOT INDEXED, vt0, rt0 GROUP BY rt0.c1;
SELECT t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2;
SELECT t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 HAVING LIKELY(DISTINCT GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 HAVING (NOT (LIKELY(DISTINCT GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 HAVING ((LIKELY(DISTINCT GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2;
SELECT t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 HAVING LIKELY(DISTINCT GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 HAVING (NOT (LIKELY(DISTINCT GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 HAVING ((LIKELY(DISTINCT GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2 FROM rt0, t0, vt0 GROUP BY t0.c4, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c2;
SELECT t0.c4 FROM t0;
SELECT ALL t0.c4 FROM t0 WHERE (((((t0.c4) IS TRUE))%(((((((((t0.c4)AND(t0.c4)))AND(t0.c4)))OR(t0.c4)))AND(t0.c4))))) UNION ALL SELECT t0.c4 FROM t0 WHERE ((NOT (((((t0.c4) IS TRUE))%(((((((((t0.c4)AND(t0.c4)))AND(t0.c4)))OR(t0.c4)))AND(t0.c4))))))) UNION ALL SELECT ALL t0.c4 FROM t0 WHERE (((((((t0.c4) IS TRUE))%(((((((((t0.c4)AND(t0.c4)))AND(t0.c4)))OR(t0.c4)))AND(t0.c4))))) ISNULL));
SELECT t0.c4 FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 NOT INDEXED FULL OUTER JOIN t0 ON ((((t0.c4)>=(rt0.c2)))OR(((rt0.c0)*(rt0.c2)))) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c4)>=(rt0.c2)))OR(((rt0.c0)*(rt0.c2)))) WHERE (((CASE WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)*(LIKELY(t0.c4)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c4)>=(rt0.c2)))OR(((rt0.c0)*(rt0.c2)))) WHERE ((NOT (((CASE WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)*(LIKELY(t0.c4)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c4)>=(rt0.c2)))OR(((rt0.c0)*(rt0.c2)))) WHERE (((((CASE WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)*(LIKELY(t0.c4)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 NOT INDEXED FULL OUTER JOIN t0 ON ((((t0.c4)>=(rt0.c2)))OR(((rt0.c0)*(rt0.c2)))) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4;
SELECT ALL vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4;
SELECT ALL vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c4 FROM vt0, t0 GROUP BY vt0.c0, t0.c4;
SELECT ALL * FROM t0, rt0, vt1, vt0;
SELECT * FROM t0, rt0, vt1, vt0 WHERE (((((rt0.c0) IS TRUE))LIKE((+ (rt0.c1))))) UNION ALL SELECT * FROM t0, rt0, vt1, vt0 WHERE ((NOT (((((rt0.c0) IS TRUE))LIKE((+ (rt0.c1))))))) UNION ALL SELECT * FROM t0, rt0, vt1, vt0 WHERE (((((((rt0.c0) IS TRUE))LIKE((+ (rt0.c1))))) ISNULL));
SELECT ALL * FROM t0, rt0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1 CROSS JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((LIKE(rt0.c1, vt1.c0, 'Q'))));
SELECT DISTINCT * FROM t0, vt1 CROSS JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((LIKE(rt0.c1, vt1.c0, 'Q')))) WHERE ((((NOT (t0.c4)))>>(CAST(rt0.c1 AS REAL)))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, vt1 CROSS JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((LIKE(rt0.c1, vt1.c0, 'Q')))) WHERE ((NOT ((((NOT (t0.c4)))>>(CAST(rt0.c1 AS REAL)))))) UNION SELECT DISTINCT * FROM t0, vt1 CROSS JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((LIKE(rt0.c1, vt1.c0, 'Q')))) WHERE ((((((NOT (t0.c4)))>>(CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM t0, vt1 CROSS JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((LIKE(rt0.c1, vt1.c0, 'Q'))));
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c0 FROM rt0, t0, vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(rt0.c1), CAST(SUM(t0.c4) AS REAL), MAX(COUNT(*)), COUNT(*), GROUP_CONCAT(t0.c4)))<=((GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c1))), 0.35832661057456805, ((MAX(AVG(rt0.c0)))>=(rt0.c2)), (((MIN(vt0.c1)))>((COUNT(*)))), COUNT(SUM(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt0.c1), CAST(SUM(t0.c4) AS REAL), MAX(COUNT(*)), COUNT(*), GROUP_CONCAT(t0.c4)))<=((GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c1))), 0.35832661057456805, ((MAX(AVG(rt0.c0)))>=(rt0.c2)), (((MIN(vt0.c1)))>((COUNT(*)))), COUNT(SUM(vt0.c1))))))) UNION ALL SELECT vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0 HAVING (((((GROUP_CONCAT(rt0.c1), CAST(SUM(t0.c4) AS REAL), MAX(COUNT(*)), COUNT(*), GROUP_CONCAT(t0.c4)))<=((GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c1))), 0.35832661057456805, ((MAX(AVG(rt0.c0)))>=(rt0.c2)), (((MIN(vt0.c1)))>((COUNT(*)))), COUNT(SUM(vt0.c1)))))) ISNULL);
SELECT ALL vt0.c2, vt1.c0, rt0.c0, t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, vt1, t0;
SELECT vt0.c2, vt1.c0, rt0.c0, t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, vt1, t0 WHERE (t0.c4) UNION ALL SELECT vt0.c2, vt1.c0, rt0.c0, t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, vt1, t0 WHERE ((NOT (t0.c4))) UNION ALL SELECT vt0.c2, vt1.c0, rt0.c0, t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, vt1, t0 WHERE (((t0.c4) ISNULL));
SELECT ALL vt0.c2, vt1.c0, rt0.c0, t0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, vt1, t0;
SELECT DISTINCT t0.c4 FROM t0;
SELECT DISTINCT t0.c4 FROM t0 WHERE (((((CASE t0.c4  WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN NULL THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c4 ELSE t0.c4 END)AND((((t0.c4)) BETWEEN ((t0.c4)) AND ((t0.c4))))))AND(t0.c4 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c4 FROM t0 WHERE ((NOT (((((CASE t0.c4  WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN NULL THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c4 ELSE t0.c4 END)AND((((t0.c4)) BETWEEN ((t0.c4)) AND ((t0.c4))))))AND(t0.c4 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c4 FROM t0 WHERE (((((((CASE t0.c4  WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN NULL THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c4 ELSE t0.c4 END)AND((((t0.c4)) BETWEEN ((t0.c4)) AND ((t0.c4))))))AND(t0.c4 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c4 FROM t0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c1)<(rt0.c1))) BETWEEN (((rt0.c1)>>(rt0.c2))) AND (rt0.c2 COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)<(rt0.c1))) BETWEEN (((rt0.c1)>>(rt0.c2))) AND (rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c1)<(rt0.c1))) BETWEEN (((rt0.c1)>>(rt0.c2))) AND (rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL t0.c4, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c2, vt0.c1;
SELECT t0.c4, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c2, vt0.c1 HAVING (((((TOTAL(vt0.c1))%(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))))>((((SUM(COUNT(*)))LIKE(vt0.c1))))) UNION ALL SELECT ALL t0.c4, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c2, vt0.c1 HAVING (NOT ((((((TOTAL(vt0.c1))%(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))))>((((SUM(COUNT(*)))LIKE(vt0.c1))))))) UNION ALL SELECT ALL t0.c4, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c4, vt0.c0, vt0.c2, vt0.c1 HAVING (((((((TOTAL(vt0.c1))%(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))))>((((SUM(COUNT(*)))LIKE(vt0.c1)))))) ISNULL);
SELECT * FROM t0, rt0, vt1;
SELECT * FROM t0, rt0, vt1 WHERE ((((t0.c4)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c4)))) AND ((NULL)))) UNION ALL SELECT * FROM t0, rt0, vt1 WHERE ((NOT ((((t0.c4)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c4)))) AND ((NULL)))))) UNION ALL SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((t0.c4)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c4)))) AND ((NULL)))) ISNULL));
SELECT * FROM t0, rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt0, vt1;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1 NOT INDEXED, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0)>=(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))) AND (((rt0.c0)-(vt1.c0))))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0)>=(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))) AND (((rt0.c0)-(vt1.c0))))))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((vt1.c0)>=(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))) AND (((rt0.c0)-(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1 NOT INDEXED, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT t0.c4, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c4, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1 HAVING SUM(CAST(GROUP_CONCAT(t0.c4) AS TEXT)) UNION ALL SELECT t0.c4, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(CAST(GROUP_CONCAT(t0.c4) AS TEXT)))) UNION ALL SELECT t0.c4, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c4, rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(CAST(GROUP_CONCAT(t0.c4) AS TEXT))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER))>>(LTRIM(vt0.c0, vt0.c1)));
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER))>>(LTRIM(vt0.c0, vt0.c1))) WHERE ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER))>>(LTRIM(vt0.c0, vt0.c1))) WHERE ((NOT ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER))>>(LTRIM(vt0.c0, vt0.c1))) WHERE ((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER))>>(LTRIM(vt0.c0, vt0.c1)));
SELECT DISTINCT * FROM vt1 NOT INDEXED, t0, rt0, vt0;
SELECT DISTINCT * FROM vt1, t0, rt0, vt0 WHERE ((- (((vt0.c2)LIKE(rt0.c0))))) UNION SELECT DISTINCT * FROM vt1, t0, rt0, vt0 WHERE ((NOT ((- (((vt0.c2)LIKE(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0, rt0, vt0 WHERE ((((- (((vt0.c2)LIKE(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 NOT INDEXED, t0, rt0, vt0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 319834233 END AS NUMERIC)) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 319834233 END AS NUMERIC)))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 319834233 END AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c1)||(vt0.c0))) AND ((rt0.c0 IN (t0.c4)))) CROSS JOIN vt0 ON ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c1) IS TRUE)) AND ((vt0.c1 IN ()))) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(((rt0.c2)LIKE(rt0.c0)), CASE rt0.c0  WHEN 0xffffffffb0ec944f THEN rt0.c1 END);
SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(((rt0.c2)LIKE(rt0.c0)), CASE rt0.c0  WHEN 0Xffffffffb0ec944f THEN rt0.c1 END) WHERE (rt0.c2) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(((rt0.c2)LIKE(rt0.c0)), CASE rt0.c0  WHEN 0xffffffffb0ec944f THEN rt0.c1 END) WHERE ((NOT (rt0.c2))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(((rt0.c2)LIKE(rt0.c0)), CASE rt0.c0  WHEN 0xffffffffb0ec944f THEN rt0.c1 END) WHERE (((rt0.c2) ISNULL));
SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(((rt0.c2)LIKE(rt0.c0)), CASE rt0.c0  WHEN 0xffffffffb0ec944f THEN rt0.c1 END);
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, t0 WHERE ((((t0.c4)>>(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, t0 WHERE ((NOT ((((t0.c4)>>(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, t0 WHERE ((((((t0.c4)>>(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, t0;
SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((t0.c4, rt0.c0, rt0.c1)) NOT BETWEEN (((('~ +A_Oᶚq')>=('-353865736')), ((t0.c4)>=(rt0.c0)), rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0)<(rt0.c0)), rt0.c0, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((t0.c4, rt0.c0, rt0.c1)) NOT BETWEEN (((('~ +A_Oᶚq')>=('-353865736')), ((t0.c4)>=(rt0.c0)), rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0)<(rt0.c0)), rt0.c0, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((t0.c4, rt0.c0, rt0.c1)) NOT BETWEEN (((('~ +A_Oᶚq')>=('-353865736')), ((t0.c4)>=(rt0.c0)), rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0)<(rt0.c0)), rt0.c0, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0;
SELECT t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING COUNT(((((((((t0.c4)OR(t0.c4)))OR(vt1.c0)))AND(vt1.c0)))OR(COUNT(vt1.c0)))) UNION ALL SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING (NOT (COUNT(((((((((t0.c4)OR(t0.c4)))OR(vt1.c0)))AND(vt1.c0)))OR(COUNT(vt1.c0)))))) UNION ALL SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING ((COUNT(((((((((t0.c4)OR(t0.c4)))OR(vt1.c0)))AND(vt1.c0)))OR(COUNT(vt1.c0))))) ISNULL);
SELECT ALL vt0.c1 FROM vt1, t0 FULL OUTER JOIN vt0 ON (((vt0.c2 IN ()))>(((t0.c4)<=(vt0.c0))));
SELECT ALL vt0.c1 FROM vt1, t0 FULL OUTER JOIN vt0 ON (((vt0.c2 IN ()))>(((t0.c4)<=(vt0.c0)))) WHERE (((CAST(x'' AS TEXT)) ISNULL)) UNION ALL SELECT vt0.c1 FROM vt1, t0 FULL OUTER JOIN vt0 ON (((vt0.c2 IN ()))>(((t0.c4)<=(vt0.c0)))) WHERE ((NOT (((CAST(x'' AS TEXT)) ISNULL)))) UNION ALL SELECT vt0.c1 FROM vt1, t0 FULL OUTER JOIN vt0 ON (((vt0.c2 IN ()))>(((t0.c4)<=(vt0.c0)))) WHERE (((((CAST(x'' AS TEXT)) ISNULL)) ISNULL));
SELECT ALL vt0.c1 FROM vt1, t0 FULL OUTER JOIN vt0 ON (((vt0.c2 IN ()))>(((t0.c4)<=(vt0.c0))));
SELECT DISTINCT * FROM rt0, vt0, t0, vt1;
SELECT DISTINCT * FROM rt0, vt0, t0, vt1 WHERE (0.5429149281050095) UNION SELECT DISTINCT * FROM rt0, vt0, t0, vt1 WHERE ((NOT (0.5429149281050095))) UNION SELECT DISTINCT * FROM rt0, vt0, t0, vt1 WHERE (((0.5429149281050095) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0, vt1;
SELECT vt0.c0, t0.c4 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c2))) IS TRUE) GROUP BY vt0.c0, t0.c4;
SELECT ALL vt0.c0, t0.c4 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c2))) IS TRUE) WHERE (CASE vt0.c2  WHEN LIKELIHOOD(vt0.c0, 0.8254299488290873) THEN vt0.c0 COLLATE RTRIM WHEN QUOTE(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((t0.c4) ISNULL) THEN vt0.c1 COLLATE NOCASE ELSE ((((vt0.c0)AND(x'36f1')))AND(vt1.c0)) END) GROUP BY vt0.c0, t0.c4 UNION SELECT ALL vt0.c0, t0.c4 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c2))) IS TRUE) WHERE ((NOT (CASE vt0.c2  WHEN LIKELIHOOD(vt0.c0, 0.8254299488290873) THEN vt0.c0 COLLATE RTRIM WHEN QUOTE(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((t0.c4) ISNULL) THEN vt0.c1 COLLATE NOCASE ELSE ((((vt0.c0)AND(x'36f1')))AND(vt1.c0)) END))) GROUP BY vt0.c0, t0.c4 UNION SELECT vt0.c0, t0.c4 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c2))) IS TRUE) WHERE (((CASE vt0.c2  WHEN LIKELIHOOD(vt0.c0, 0.8254299488290873) THEN vt0.c0 COLLATE RTRIM WHEN QUOTE(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((t0.c4) ISNULL) THEN vt0.c1 COLLATE NOCASE ELSE ((((vt0.c0)AND(x'36f1')))AND(vt1.c0)) END) ISNULL)) GROUP BY vt0.c0, t0.c4;
SELECT vt0.c0, t0.c4 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c2))) IS TRUE) GROUP BY vt0.c0, t0.c4;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((CASE t0.c4  WHEN vt0.c1 THEN AVG(t0.c4) ELSE SUM(vt0.c1) END) NOTNULL) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT (((CASE t0.c4  WHEN vt0.c1 THEN AVG(t0.c4) ELSE SUM(vt0.c1) END) NOTNULL))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((((CASE t0.c4  WHEN vt0.c1 THEN AVG(t0.c4) ELSE SUM(vt0.c1) END) NOTNULL)) ISNULL);
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((CASE t0.c4  WHEN vt0.c1 THEN AVG(t0.c4) ELSE SUM(vt0.c1) END) NOTNULL) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT (((CASE t0.c4  WHEN vt0.c1 THEN AVG(t0.c4) ELSE SUM(vt0.c1) END) NOTNULL))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((((CASE t0.c4  WHEN vt0.c1 THEN AVG(t0.c4) ELSE SUM(vt0.c1) END) NOTNULL)) ISNULL);
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (x'') UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((+ (rt0.c1)))+(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((((+ (rt0.c1)))+(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((+ (rt0.c1)))+(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, rt0 WHERE (TOTAL_CHANGES()) GROUP BY vt0.c0, vt1.c0, vt0.c2 UNION SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY vt0.c0, vt1.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, rt0 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CASE WHEN MAX(vt0.c2) THEN ((((((((SUM(vt0.c1))OR(AVG(vt0.c0))))AND(TOTAL(COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(TOTAL(SUM(vt0.c0))))))))))OR(COUNT(*))))OR(vt0.c0)) ELSE COUNT(vt0.c0) END UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CASE WHEN MAX(vt0.c2) THEN ((((((((SUM(vt0.c1))OR(AVG(vt0.c0))))AND(TOTAL(COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(TOTAL(SUM(vt0.c0))))))))))OR(COUNT(*))))OR(vt0.c0)) ELSE COUNT(vt0.c0) END)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CASE WHEN MAX(vt0.c2) THEN ((((((((SUM(vt0.c1))OR(AVG(vt0.c0))))AND(TOTAL(COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(TOTAL(SUM(vt0.c0))))))))))OR(COUNT(*))))OR(vt0.c0)) ELSE COUNT(vt0.c0) END) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2)AND(268839658)))AND(rt0.c0)), QUOTE(rt0.c2), rt0.c1, rt0.c2 COLLATE RTRIM, IFNULL(rt0.c1, rt0.c0)))>((((-926451549)-(rt0.c0)), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, 0.6594153862469982)) AND ((rt0.c1, rt0.c2, rt0.c0))), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOTNULL), HEX(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((((rt0.c2)AND(268839658)))AND(rt0.c0)), QUOTE(rt0.c2), rt0.c1, rt0.c2 COLLATE RTRIM, IFNULL(rt0.c1, rt0.c0)))>((((-926451549)-(rt0.c0)), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, 0.6594153862469982)) AND ((rt0.c1, rt0.c2, rt0.c0))), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOTNULL), HEX(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((rt0.c2)AND(268839658)))AND(rt0.c0)), QUOTE(rt0.c2), rt0.c1, rt0.c2 COLLATE RTRIM, IFNULL(rt0.c1, rt0.c0)))>((((-926451549)-(rt0.c0)), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, 0.6594153862469982)) AND ((rt0.c1, rt0.c2, rt0.c0))), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOTNULL), HEX(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, vt0.c1, t0.c4, rt0.c1, vt1.c0, vt0.c2 FROM t0, vt1 INNER JOIN rt0 ON (vt1.c0 IN (NULL, rt0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON vt0.c2 COLLATE RTRIM;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, vt0.c1, t0.c4, rt0.c1, vt1.c0, vt0.c2 FROM t0, vt1 INNER JOIN rt0 ON (vt1.c0 IN (NULL, rt0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON vt0.c2 COLLATE RTRIM WHERE (((LENGTH(rt0.c1))=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, vt0.c1, t0.c4, rt0.c1, vt1.c0, vt0.c2 FROM t0, vt1 INNER JOIN rt0 ON (vt1.c0 IN (NULL, rt0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON vt0.c2 COLLATE RTRIM WHERE ((NOT (((LENGTH(rt0.c1))=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, vt0.c1, t0.c4, rt0.c1, vt1.c0, vt0.c2 FROM t0, vt1 INNER JOIN rt0 ON (vt1.c0 IN (NULL, rt0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON vt0.c2 COLLATE RTRIM WHERE (((((LENGTH(rt0.c1))=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, vt0.c1, t0.c4, rt0.c1, vt1.c0, vt0.c2 FROM t0, vt1 INNER JOIN rt0 ON (vt1.c0 IN (NULL, rt0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON vt0.c2 COLLATE RTRIM;
SELECT t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0 FROM rt0, vt1, t0, vt0 GROUP BY t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0;
SELECT t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0 FROM rt0, vt1, t0, vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))<(vt0.c0))) GROUP BY t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0 UNION SELECT ALL t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0 FROM rt0, vt1, t0, vt0 WHERE ((NOT (((CAST(vt0.c2 AS NUMERIC))<(vt0.c0))))) GROUP BY t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0 UNION SELECT t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0 FROM rt0, vt1, t0, vt0 WHERE (((((CAST(vt0.c2 AS NUMERIC))<(vt0.c0))) ISNULL)) GROUP BY t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0;
SELECT t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0 FROM rt0, vt1, t0, vt0 GROUP BY t0.c4, rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, vt0.c2, rt0.c0;
SELECT ALL t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0;
SELECT t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING SUM(AVG(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING (NOT (SUM(AVG(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT t0.c4, vt1.c0 FROM vt1, t0 GROUP BY t0.c4, vt1.c0 HAVING ((SUM(AVG(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM t0 LEFT OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c0)>>(NULL))) AND (((rt0.c0)GLOB(t0.c4)))) LEFT OUTER JOIN rt0 ON (((0.6721772068553942)) BETWEEN ((rt0.c2)) AND ((x''))) COLLATE RTRIM;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (CASE ((t0.c4) IS TRUE)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN rtreenode(t0.c4, t0.c4) WHEN ((((vt1.c0)AND(t0.c4)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (t0.c4) AND (t0.c4)) WHEN (('899757160')>(vt1.c0)) THEN ((t0.c4)<(t0.c4)) END) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (CASE ((t0.c4) IS TRUE)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN rtreenode(t0.c4, t0.c4) WHEN ((((vt1.c0)AND(t0.c4)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (t0.c4) AND (t0.c4)) WHEN (('899757160')>(vt1.c0)) THEN ((t0.c4)<(t0.c4)) END))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((CASE ((t0.c4) IS TRUE)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN rtreenode(t0.c4, t0.c4) WHEN ((((vt1.c0)AND(t0.c4)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (t0.c4) AND (t0.c4)) WHEN (('899757160')>(vt1.c0)) THEN ((t0.c4)<(t0.c4)) END) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON NULL WHERE ((((((vt0.c2, vt0.c0, t0.c4)) BETWEEN ((vt0.c2, vt0.c2, x'')) AND ((vt0.c0, vt1.c0, vt1.c0))))&(((t0.c4) BETWEEN (vt1.c0) AND (vt0.c2))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT ((((((vt0.c2, vt0.c0, t0.c4)) BETWEEN ((vt0.c2, vt0.c2, x'')) AND ((vt0.c0, vt1.c0, vt1.c0))))&(((t0.c4) BETWEEN (vt1.c0) AND (vt0.c2))))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON NULL WHERE ((((((((vt0.c2, vt0.c0, t0.c4)) BETWEEN ((vt0.c2, vt0.c2, x'')) AND ((vt0.c0, vt1.c0, vt1.c0))))&(((t0.c4) BETWEEN (vt1.c0) AND (vt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt1.c0, vt0.c2, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(((x'') NOTNULL))))OR(((rt0.c1) NOTNULL))) GROUP BY vt1.c0, vt0.c2, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, vt0.c2, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(((x'') NOTNULL))))OR(((rt0.c1) NOTNULL))) GROUP BY vt1.c0, vt0.c2, rt0.c1, rt0.c2 HAVING AVG(MAX(AVG(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c2, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(((x'') NOTNULL))))OR(((rt0.c1) NOTNULL))) GROUP BY vt1.c0, vt0.c2, rt0.c1, rt0.c2 HAVING (NOT (AVG(MAX(AVG(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, vt0.c2, rt0.c1, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(((x'') NOTNULL))))OR(((rt0.c1) NOTNULL))) GROUP BY vt1.c0, vt0.c2, rt0.c1, rt0.c2 HAVING ((AVG(MAX(AVG(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON TOTAL_CHANGES();
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON TOTAL_CHANGES() WHERE (CASE vt0.c2 COLLATE BINARY  WHEN vt0.c1 THEN vt0.c1 ELSE ((((vt0.c0)AND(vt0.c2)))AND(rt0.c2)) END) UNION ALL SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON TOTAL_CHANGES() WHERE ((NOT (CASE vt0.c2 COLLATE BINARY  WHEN vt0.c1 THEN vt0.c1 ELSE ((((vt0.c0)AND(vt0.c2)))AND(rt0.c2)) END))) UNION ALL SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON TOTAL_CHANGES() WHERE (((CASE vt0.c2 COLLATE BINARY  WHEN vt0.c1 THEN vt0.c1 ELSE ((((vt0.c0)AND(vt0.c2)))AND(rt0.c2)) END) ISNULL));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON TOTAL_CHANGES();
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((vt0.c0)/(vt1.c0)))LIKE(LTRIM(t0.c4)))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT (((((vt0.c0)/(vt1.c0)))LIKE(LTRIM(t0.c4)))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((((vt0.c0)/(vt1.c0)))LIKE(LTRIM(t0.c4)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT vt1.c0, rt0.c2 FROM vt0, t0 FULL OUTER JOIN vt1 ON t0.c4 RIGHT OUTER JOIN rt0 ON ((((LIKELIHOOD(DISTINCT 0.40618910063548896, 0.7433603359723197))AND(json_array_length(rt0.c1))))AND((((vt0.c2, vt1.c0, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, rt0.c1))))) GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt0, t0 FULL OUTER JOIN vt1 ON t0.c4 RIGHT OUTER JOIN rt0 ON ((((LIKELIHOOD(DISTINCT 0.40618910063548896, 0.7433603359723197))AND(json_array_length(rt0.c1))))AND((((vt0.c2, vt1.c0, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, rt0.c1))))) WHERE (((((t0.c4)OR(t0.c4)))AND((vt1.c0 IN (rt0.c1, vt0.c0))))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt0, t0 FULL OUTER JOIN vt1 ON t0.c4 RIGHT OUTER JOIN rt0 ON ((((LIKELIHOOD(DISTINCT 0.40618910063548896, 0.7433603359723197))AND(json_array_length(rt0.c1))))AND((((vt0.c2, vt1.c0, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, rt0.c1))))) WHERE ((NOT (((((t0.c4)OR(t0.c4)))AND((vt1.c0 IN (rt0.c1, vt0.c0))))))) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM vt0, t0 FULL OUTER JOIN vt1 ON t0.c4 RIGHT OUTER JOIN rt0 ON ((((LIKELIHOOD(DISTINCT 0.40618910063548896, 0.7433603359723197))AND(json_array_length(rt0.c1))))AND((((vt0.c2, vt1.c0, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, rt0.c1))))) WHERE (((((((t0.c4)OR(t0.c4)))AND((vt1.c0 IN (rt0.c1, vt0.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt0, t0 FULL OUTER JOIN vt1 ON t0.c4 RIGHT OUTER JOIN rt0 ON ((((LIKELIHOOD(DISTINCT 0.40618910063548896, 0.7433603359723197))AND(json_array_length(rt0.c1))))AND((((vt0.c2, vt1.c0, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, rt0.c1))))) GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2;
SELECT vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2 HAVING (((t0.c4)) NOT BETWEEN ((AVG(t0.c4))) AND ((COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2 HAVING (NOT ((((t0.c4)) NOT BETWEEN ((AVG(t0.c4))) AND ((COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2 HAVING (((((t0.c4)) NOT BETWEEN ((AVG(t0.c4))) AND ((COUNT(vt0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2;
SELECT vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2 HAVING (((t0.c4)) NOT BETWEEN ((AVG(t0.c4))) AND ((COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2 HAVING (NOT ((((t0.c4)) NOT BETWEEN ((AVG(t0.c4))) AND ((COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2 HAVING (((((t0.c4)) NOT BETWEEN ((AVG(t0.c4))) AND ((COUNT(vt0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, t0.c4, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c4, vt0.c2;
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt1.c0, 1762101012, vt0.c2))))AND(((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c0)&(vt0.c2))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((((vt1.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt1.c0, 1762101012, vt0.c2))))AND(((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c0)&(vt0.c2))))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((((((((((vt1.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt1.c0, 1762101012, vt0.c2))))AND(((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c0)&(vt0.c2))))) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (0.3206775192270037) UNION SELECT DISTINCT * FROM vt1, t0 NOT INDEXED WHERE ((NOT (0.3206775192270037))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((0.3206775192270037) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0 FROM vt0 CROSS JOIN t0 ON ((5.57795587E8)*(1.851112449E9)) RIGHT OUTER JOIN rt0 ON (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c4)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) ISNULL) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0 FROM vt0 CROSS JOIN t0 ON ((5.57795587E8)*(1.851112449E9)) RIGHT OUTER JOIN rt0 ON (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c4)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) ISNULL) WHERE (((CASE vt1.c0  WHEN rt0.c1 THEN x'ea83' END) BETWEEN (((rt0.c1)%(t0.c4))) AND (UNICODE(t0.c4)))) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0 FROM vt0 CROSS JOIN t0 ON ((5.57795587E8)*(1.851112449E9)) RIGHT OUTER JOIN rt0 ON (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c4)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) ISNULL) WHERE ((NOT (((CASE vt1.c0  WHEN rt0.c1 THEN x'ea83' END) BETWEEN (((rt0.c1)%(t0.c4))) AND (UNICODE(t0.c4)))))) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0 FROM vt0 CROSS JOIN t0 ON ((5.57795587E8)*(1.851112449E9)) RIGHT OUTER JOIN rt0 ON (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c4)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) ISNULL) WHERE (((((CASE vt1.c0  WHEN rt0.c1 THEN x'ea83' END) BETWEEN (((rt0.c1)%(t0.c4))) AND (UNICODE(t0.c4)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0 FROM vt0 CROSS JOIN t0 ON ((5.57795587E8)*(1.851112449E9)) RIGHT OUTER JOIN rt0 ON (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c4)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE)) ISNULL) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (((rt0.c2)) BETWEEN ((AVG(MAX(COUNT(rt0.c1))))) AND ((SUM(NULL)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((((rt0.c2)) BETWEEN ((AVG(MAX(COUNT(rt0.c1))))) AND ((SUM(NULL)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (((((rt0.c2)) BETWEEN ((AVG(MAX(COUNT(rt0.c1))))) AND ((SUM(NULL))))) ISNULL);
SELECT t0.c4, rt0.c0, rt0.c1 FROM t0, rt0 NATURAL JOIN vt1;
SELECT ALL t0.c4, rt0.c0, rt0.c1 FROM t0, rt0 NATURAL JOIN vt1 WHERE (CAST(UNICODE(rt0.c0) AS REAL)) UNION ALL SELECT t0.c4, rt0.c0, rt0.c1 FROM t0, rt0 NATURAL JOIN vt1 WHERE ((NOT (CAST(UNICODE(rt0.c0) AS REAL)))) UNION ALL SELECT t0.c4, rt0.c0, rt0.c1 FROM t0, rt0 NATURAL JOIN vt1 WHERE (((CAST(UNICODE(rt0.c0) AS REAL)) ISNULL));
SELECT t0.c4, rt0.c0, rt0.c1 FROM t0, rt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, t0, vt0 WHERE ((~ (((vt0.c2)IS('-1876675238'))))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, t0, vt0 WHERE ((NOT ((~ (((vt0.c2)IS('-1876675238'))))))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, t0, vt0 WHERE ((((~ (((vt0.c2)IS('-1876675238'))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, t0, vt0;
SELECT t0.c4, rt0.c2 FROM t0 INNER JOIN vt1 ON (((((((vt0.c0)AND(rt0.c1)))OR(vt0.c1))))<>((CAST(rt0.c1 AS BLOB)))) FULL OUTER JOIN vt0 ON (NOT (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CAST(t0.c4 AS INTEGER) GROUP BY t0.c4, rt0.c2;
SELECT rt0.c1, t0.c4, vt1.c0 FROM t0, vt1, rt0 GROUP BY rt0.c1, t0.c4, vt1.c0;
SELECT rt0.c1, t0.c4, vt1.c0 FROM t0, vt1, rt0 GROUP BY rt0.c1, t0.c4, vt1.c0 HAVING CASE ((TOTAL(t0.c4)) IS FALSE)  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((((AVG(COUNT(*)))OR(TOTAL(vt1.c0))))AND(rt0.c1)) ELSE MAX(TOTAL(COUNT(*))) END UNION ALL SELECT ALL rt0.c1, t0.c4, vt1.c0 FROM t0, vt1, rt0 GROUP BY rt0.c1, t0.c4, vt1.c0 HAVING (NOT (CASE ((TOTAL(t0.c4)) IS FALSE)  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((((AVG(COUNT(*)))OR(TOTAL(vt1.c0))))AND(rt0.c1)) ELSE MAX(TOTAL(COUNT(*))) END)) UNION ALL SELECT ALL rt0.c1, t0.c4, vt1.c0 FROM t0, vt1, rt0 GROUP BY rt0.c1, t0.c4, vt1.c0 HAVING ((CASE ((TOTAL(t0.c4)) IS FALSE)  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((((AVG(COUNT(*)))OR(TOTAL(vt1.c0))))AND(rt0.c1)) ELSE MAX(TOTAL(COUNT(*))) END) ISNULL);
SELECT ALL rt0.c1, vt0.c1, vt0.c2, t0.c4 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON JULIANDAY((((vt0.c0))!=((vt0.c2))), ((((((((t0.c4)AND(t0.c4)))OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c2)), ((vt0.c1)!=(vt0.c0))) RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS BLOB)) IS FALSE);
SELECT DISTINCT * FROM vt1, t0, vt0, rt0;
SELECT DISTINCT * FROM vt1, t0, vt0, rt0 WHERE (CASE WHEN rtreenode(t0.c4, t0.c4) THEN '*n' ELSE (((rt0.c2)) BETWEEN ((0.5373616899079754)) AND ((rt0.c2))) END) UNION SELECT DISTINCT * FROM vt1, t0, vt0, rt0 WHERE ((NOT (CASE WHEN rtreenode(t0.c4, t0.c4) THEN '*n' ELSE (((rt0.c2)) BETWEEN ((0.5373616899079754)) AND ((rt0.c2))) END))) UNION SELECT DISTINCT * FROM vt1, t0, vt0, rt0 WHERE (((CASE WHEN rtreenode(t0.c4, t0.c4) THEN '*n' ELSE (((rt0.c2)) BETWEEN ((0.5373616899079754)) AND ((rt0.c2))) END) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0, rt0;
SELECT ALL vt0.c1, rt0.c0 FROM t0, vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c4, vt0.c0, vt0.c2)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt1.c0, vt0.c0))))) GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c0 FROM t0, vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c4, vt0.c0, vt0.c2)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt1.c0, vt0.c0))))) WHERE ((((rt0.c1, rt0.c2, vt0.c1)) BETWEEN ((vt0.c1, rt0.c1, vt0.c0)) AND ((x'', rt0.c1, vt0.c0))) COLLATE NOCASE) GROUP BY vt0.c1, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c0 FROM t0, vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c4, vt0.c0, vt0.c2)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt1.c0, vt0.c0))))) WHERE ((NOT ((((rt0.c1, rt0.c2, vt0.c1)) BETWEEN ((vt0.c1, rt0.c1, vt0.c0)) AND ((x'', rt0.c1, vt0.c0))) COLLATE NOCASE))) GROUP BY vt0.c1, rt0.c0 UNION SELECT vt0.c1, rt0.c0 FROM t0, vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c4, vt0.c0, vt0.c2)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt1.c0, vt0.c0))))) WHERE ((((((rt0.c1, rt0.c2, vt0.c1)) BETWEEN ((vt0.c1, rt0.c1, vt0.c0)) AND ((x'', rt0.c1, vt0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c0 FROM t0, vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c4, vt0.c0, vt0.c2)) BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt1.c0, vt0.c0))))) GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2 HAVING TOTAL(MIN(vt0.c1)) UNION ALL SELECT vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2 HAVING (NOT (TOTAL(MIN(vt0.c1)))) UNION ALL SELECT ALL vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2 HAVING ((TOTAL(MIN(vt0.c1))) ISNULL);
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c2))>((((vt0.c2)||(vt0.c2)))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c2))>((((vt0.c2)||(vt0.c2)))))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c2))>((((vt0.c2)||(vt0.c2)))))) ISNULL));
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c1)))-((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (rt0.c1)))-((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c1)))-((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c4, vt0.c0, vt0.c1, vt0.c2, vt1.c0, rt0.c2, rt0.c1 FROM vt0, vt1, t0, rt0 INDEXED BY i44 GROUP BY t0.c4, vt0.c0, vt0.c1, vt0.c2, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING GROUP_CONCAT(CASE WHEN t0.c4 THEN COUNT(*) END) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c4 THEN COUNT(*) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(CASE WHEN t0.c4 THEN COUNT(*) END)) ISNULL);
SELECT * FROM t0, rt0, vt1, vt0;
SELECT * FROM t0, rt0, vt1, vt0 WHERE (((t0.c4 COLLATE BINARY)|(((NULL)<(t0.c4))))) UNION ALL SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE ((NOT (((t0.c4 COLLATE BINARY)|(((NULL)<(t0.c4))))))) UNION ALL SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (((((t0.c4 COLLATE BINARY)|(((NULL)<(t0.c4))))) ISNULL));
SELECT * FROM t0, rt0, vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c1)!=(0X69d7e075)))))AND(((vt0.c0)||(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR(((vt0.c1)<>(0X69d7e075)))))AND(((vt0.c0)||(vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((((((vt0.c0 IN ()))OR(((vt0.c1)!=(0X69d7e075)))))AND(((vt0.c0)||(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT ALL t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN (ABS(vt1.c0)) AND ((x'' IN ()))) INNER JOIN t0 ON LAST_INSERT_ROWID() GROUP BY t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN (ABS(vt1.c0)) AND ((x'' IN ()))) INNER JOIN t0 ON LAST_INSERT_ROWID() WHERE (((vt0.c1 IN ()) IN ())) GROUP BY t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0 UNION SELECT t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN (ABS(vt1.c0)) AND ((x'' IN ()))) INNER JOIN t0 ON LAST_INSERT_ROWID() WHERE ((NOT (((vt0.c1 IN ()) IN ())))) GROUP BY t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN (ABS(vt1.c0)) AND ((x'' IN ()))) INNER JOIN t0 ON LAST_INSERT_ROWID() WHERE (((((vt0.c1 IN ()) IN ())) ISNULL)) GROUP BY t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN (ABS(vt1.c0)) AND ((x'' IN ()))) INNER JOIN t0 ON LAST_INSERT_ROWID() GROUP BY t0.c4, vt0.c2, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c2 FROM t0, vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM t0, vt0 GROUP BY vt0.c2 HAVING ((GROUP_CONCAT(MIN(x'1416')))|(COUNT(*))) UNION ALL SELECT vt0.c2 FROM t0, vt0 GROUP BY vt0.c2 HAVING (NOT (((GROUP_CONCAT(MIN(x'1416')))|(COUNT(*))))) UNION ALL SELECT ALL vt0.c2 FROM t0, vt0 GROUP BY vt0.c2 HAVING ((((GROUP_CONCAT(MIN(x'1416')))|(COUNT(*)))) ISNULL);
SELECT * FROM t0, rt0, vt0;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((((((((((((vt0.c2)OR(vt0.c0)))AND(t0.c4)))OR(t0.c4)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))>>(CASE vt0.c2  WHEN t0.c4 THEN vt0.c1 ELSE vt0.c1 END))) UNION ALL SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT (((((((((((((((vt0.c2)OR(vt0.c0)))AND(t0.c4)))OR(t0.c4)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))>>(CASE vt0.c2  WHEN t0.c4 THEN vt0.c1 ELSE vt0.c1 END))))) UNION ALL SELECT ALL * FROM t0, rt0, vt0 WHERE (((((((((((((((((vt0.c2)OR(vt0.c0)))AND(t0.c4)))OR(t0.c4)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))>>(CASE vt0.c2  WHEN t0.c4 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL));
SELECT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE (((((((x'')<(rt0.c1)))OR('VK/֩BR')))AND(((rt0.c0)!=(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT (((((((x'')<(rt0.c1)))OR('VK/֩BR')))AND(((rt0.c0)<>(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE (((((((((x'')<(rt0.c1)))OR('VK/֩BR')))AND(((rt0.c0)!=(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT t0.c4 FROM rt0, vt1, t0, vt0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM rt0, vt1, t0, vt0 WHERE (((rt0.c2 COLLATE NOCASE)IS(((((t0.c4)AND(vt1.c0)))AND(rt0.c1))))) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM rt0, vt1, t0, vt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)IS(((((t0.c4)AND(vt1.c0)))AND(rt0.c1))))))) GROUP BY t0.c4 UNION SELECT t0.c4 FROM rt0, vt1, t0, vt0 WHERE (((((rt0.c2 COLLATE NOCASE)IS(((((t0.c4)AND(vt1.c0)))AND(rt0.c1))))) ISNULL)) GROUP BY t0.c4;
SELECT t0.c4 FROM rt0, vt1, t0, vt0 GROUP BY t0.c4;
SELECT vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c1;
SELECT ALL vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c1 HAVING (COUNT(GROUP_CONCAT(COUNT(*))) IN (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c1 HAVING (NOT ((COUNT(GROUP_CONCAT(COUNT(*))) IN (MAX(vt0.c0))))) UNION ALL SELECT vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c1 HAVING (((COUNT(GROUP_CONCAT(COUNT(*))) IN (MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c4 COLLATE BINARY)>(IFNULL(DISTINCT t0.c4, t0.c4)))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c4 COLLATE BINARY)>(IFNULL(DISTINCT t0.c4, t0.c4)))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c4 COLLATE BINARY)>(IFNULL(DISTINCT t0.c4, t0.c4)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2, t0.c4 FROM vt0, t0 GROUP BY vt0.c2, t0.c4;
SELECT vt0.c2, t0.c4 FROM vt0, t0 WHERE (RTRIM(CASE WHEN t0.c4 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c4 THEN vt0.c1 WHEN '-894414849' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) GROUP BY vt0.c2, t0.c4 UNION SELECT ALL vt0.c2, t0.c4 FROM vt0, t0 WHERE ((NOT (RTRIM(CASE WHEN t0.c4 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c4 THEN vt0.c1 WHEN '-894414849' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))) GROUP BY vt0.c2, t0.c4 UNION SELECT vt0.c2, t0.c4 FROM vt0, t0 WHERE (((RTRIM(CASE WHEN t0.c4 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c4 THEN vt0.c1 WHEN '-894414849' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) ISNULL)) GROUP BY vt0.c2, t0.c4;
SELECT ALL vt0.c2, t0.c4 FROM vt0, t0 GROUP BY vt0.c2, t0.c4;
SELECT ALL t0.c4, vt1.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c4, vt1.c0, vt0.c1;
SELECT ALL t0.c4, vt1.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c4, vt1.c0, vt0.c1 HAVING SUM(GROUP_CONCAT(vt0.c2)) UNION ALL SELECT ALL t0.c4, vt1.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c4, vt1.c0, vt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c2)))) UNION ALL SELECT ALL t0.c4, vt1.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c4, vt1.c0, vt0.c1 HAVING ((SUM(GROUP_CONCAT(vt0.c2))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c1)<((0.8804569189463122 IN (vt0.c2))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c1)<((0.8804569189463122 IN (vt0.c2))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c1)<((0.8804569189463122 IN (vt0.c2))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c1 COLLATE RTRIM, CASE WHEN NULL THEN vt0.c1 END, (((rt0.c2)) BETWEEN ((vt0.c1)) AND (('0.3525298536963053'))))) AND ((((((vt0.c2)AND(rt0.c1)))OR(rt0.c2)), ((vt0.c1)>=(t0.c4)), x''))) LEFT OUTER JOIN vt1 ON (-1311271899 COLLATE RTRIM IN (((rt0.c2)>(0Xffffffffba3cdc38)))) RIGHT OUTER JOIN vt0 ON ((((NULL) NOT NULL))>>(CASE WHEN t0.c4 THEN vt0.c1 ELSE rt0.c0 END));
SELECT ALL vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t0 GROUP BY vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t0 WHERE (',{^') GROUP BY vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t0 WHERE ((NOT (',{^'))) GROUP BY vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t0 NOT INDEXED WHERE (((',{^') ISNULL)) GROUP BY vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t0 GROUP BY vt1.c0, rt0.c0, t0.c4, rt0.c1, rt0.c2;
SELECT ALL t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1;
SELECT ALL t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1;
SELECT ALL t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c4, rt0.c2, rt0.c1 FROM t0, vt1, rt0 GROUP BY t0.c4, rt0.c2, rt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((NOT (((((vt0.c2)OR(vt0.c2)))AND(x''))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((NOT (((((vt0.c2)OR(vt0.c2)))AND(x''))))))) UNION ALL SELECT * FROM vt0 WHERE ((((NOT (((((vt0.c2)OR(vt0.c2)))AND(x''))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1, rt0 WHERE (TRIM(CAST(vt0.c0 AS TEXT), CASE WHEN rt0.c1 THEN x'' ELSE vt0.c1 END)) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1, rt0 WHERE ((NOT (TRIM(CAST(vt0.c0 AS TEXT), CASE WHEN rt0.c1 THEN x'' ELSE vt0.c1 END)))) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1, rt0 WHERE (((TRIM(CAST(vt0.c0 AS TEXT), CASE WHEN rt0.c1 THEN x'' ELSE vt0.c1 END)) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1, rt0;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, t0, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, t0, rt0 WHERE (-6.1578824E7) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM vt1, t0, rt0 WHERE ((NOT (-6.1578824E7))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM vt1, t0, rt0 WHERE (((-6.1578824E7) ISNULL)) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, t0, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (QUOTE(((x'b397') NOT BETWEEN (vt0.c1) AND (vt0.c0)))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (QUOTE(((x'b397') NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((QUOTE(((x'b397') NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4 FROM vt0, t0, vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4;
SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4 FROM vt0, t0, vt1, rt0 WHERE (((((((rt0.c2) ISNULL))OR(((((rt0.c0)OR(rt0.c0)))AND(vt0.c1)))))OR((vt0.c2 IN ())))) GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4 FROM vt0, t0, vt1, rt0 WHERE ((NOT (((((((rt0.c2) ISNULL))OR(((((rt0.c0)OR(rt0.c0)))AND(vt0.c1)))))OR((vt0.c2 IN ())))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4 UNION SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4 FROM vt0, t0, vt1, rt0 WHERE (((((((((rt0.c2) ISNULL))OR(((((rt0.c0)OR(rt0.c0)))AND(vt0.c1)))))OR((vt0.c2 IN ())))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4 FROM vt0, t0, vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, t0.c4;
SELECT t0.c4, vt1.c0 FROM t0, vt1 GROUP BY t0.c4, vt1.c0;
SELECT t0.c4, vt1.c0 FROM t0, vt1 GROUP BY t0.c4, vt1.c0 HAVING MAX(MAX(MIN(t0.c4))) UNION ALL SELECT t0.c4, vt1.c0 FROM t0, vt1 GROUP BY t0.c4, vt1.c0 HAVING (NOT (MAX(MAX(MIN(t0.c4))))) UNION ALL SELECT t0.c4, vt1.c0 FROM t0, vt1 GROUP BY t0.c4, vt1.c0 HAVING ((MAX(MAX(MIN(t0.c4)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((((0.9402761669803323) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ('2', (vt1.c0 IN ())))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((((0.9402761669803323) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ('2', (vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((((0.9402761669803323) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ('2', (vt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0 NOT INDEXED, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((+ (CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((+ (CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((+ (CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0 NOT INDEXED, vt1;
SELECT vt1.c0, t0.c4 FROM t0, vt1 GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0, t0.c4 FROM t0, vt1 WHERE (((((CASE WHEN NULL THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c4 END)AND(LTRIM(vt1.c0, vt1.c0))))OR(((vt1.c0) NOT BETWEEN (t0.c4) AND (NULL))))) GROUP BY vt1.c0, t0.c4 UNION SELECT ALL vt1.c0, t0.c4 FROM t0, vt1 WHERE ((NOT (((((CASE WHEN NULL THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c4 END)AND(LTRIM(vt1.c0, vt1.c0))))OR(((vt1.c0) NOT BETWEEN (t0.c4) AND (NULL))))))) GROUP BY vt1.c0, t0.c4 UNION SELECT vt1.c0, t0.c4 FROM t0, vt1 WHERE (((((((CASE WHEN NULL THEN t0.c4 WHEN t0.c4 THEN t0.c4 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c4 END)AND(LTRIM(vt1.c0, vt1.c0))))OR(((vt1.c0) NOT BETWEEN (t0.c4) AND (NULL))))) ISNULL)) GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0, t0.c4 FROM t0, vt1 GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((((((((((COUNT(COUNT(AVG(GROUP_CONCAT(vt1.c0)))))AND(t0.c4)))OR(t0.c4)))AND(t0.c4)))OR(vt1.c0))) NOT BETWEEN ((((COUNT(COUNT(*))))>((MIN(vt1.c0))))) AND ((COUNT(vt1.c0) IN (COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (((((((((((COUNT(COUNT(AVG(GROUP_CONCAT(vt1.c0)))))AND(t0.c4)))OR(t0.c4)))AND(t0.c4)))OR(vt1.c0))) NOT BETWEEN ((((COUNT(COUNT(*))))>((MIN(vt1.c0))))) AND ((COUNT(vt1.c0) IN (COUNT(*))))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((((((((((((COUNT(COUNT(AVG(GROUP_CONCAT(vt1.c0)))))AND(t0.c4)))OR(t0.c4)))AND(t0.c4)))OR(vt1.c0))) NOT BETWEEN ((((COUNT(COUNT(*))))>((MIN(vt1.c0))))) AND ((COUNT(vt1.c0) IN (COUNT(*)))))) ISNULL);
SELECT * FROM vt0, t0, rt0, vt1;
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (CASE WHEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) THEN vt0.c2 COLLATE BINARY WHEN rt0.c2 THEN ((0.9414928778259919) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) END) UNION ALL SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE ((NOT (CASE WHEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) THEN vt0.c2 COLLATE BINARY WHEN rt0.c2 THEN ((0.9414928778259919) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) END))) UNION ALL SELECT * FROM vt0, t0, rt0, vt1 WHERE (((CASE WHEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) THEN vt0.c2 COLLATE BINARY WHEN rt0.c2 THEN ((0.9414928778259919) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) END) ISNULL));
SELECT * FROM vt0, t0, rt0, vt1;
SELECT DISTINCT t0.c4, vt1.c0 FROM vt1, t0;
SELECT DISTINCT t0.c4, vt1.c0 FROM vt1, t0 WHERE (((vt1.c0)<(ABS(vt1.c0)))) UNION SELECT DISTINCT t0.c4, vt1.c0 FROM vt1, t0 NOT INDEXED WHERE ((NOT (((vt1.c0)<(ABS(vt1.c0)))))) UNION SELECT DISTINCT t0.c4, vt1.c0 FROM vt1, t0 WHERE (((((vt1.c0)<(ABS(vt1.c0)))) ISNULL));
SELECT DISTINCT t0.c4, vt1.c0 FROM vt1, t0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (TRIM(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (TRIM(rt0.c2)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((TRIM(rt0.c2)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((COALESCE(rt0.c2, rt0.c1))<=(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (((COALESCE(rt0.c2, rt0.c1))<=(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((((COALESCE(rt0.c2, rt0.c1))<=(rt0.c1))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((COALESCE(rt0.c2, rt0.c1))<=(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (((COALESCE(rt0.c2, rt0.c1))<=(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((((COALESCE(rt0.c2, rt0.c1))<=(rt0.c1))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL MIN(PRINTF(((0.27677191250102506) BETWEEN (t0.c4) AND (t0.c4)))) FROM t0;
SELECT vt0.c0, vt0.c1 FROM t0, vt0;
SELECT vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((((('2136213129' COLLATE NOCASE)OR(vt0.c0)))OR(vt0.c1 COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT ((((('2136213129' COLLATE NOCASE)OR(vt0.c0)))OR(vt0.c1 COLLATE BINARY))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((((((('2136213129' COLLATE NOCASE)OR(vt0.c0)))OR(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM t0, vt0;
SELECT DISTINCT * FROM vt1, vt0, rt0, t0;
SELECT DISTINCT * FROM vt1, vt0, rt0, t0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN (+ (rt0.c1)) WHEN (vt0.c2 IN ()) THEN rt0.c2 WHEN ((rt0.c1) BETWEEN (t0.c4) AND (vt0.c0)) THEN vt0.c0 WHEN ((((rt0.c1)OR(t0.c4)))AND(t0.c4)) THEN ((rt0.c2)==(vt1.c0)) WHEN (- (vt0.c1)) THEN ((rt0.c2)/(vt0.c1)) END) UNION SELECT DISTINCT * FROM vt1, vt0, rt0, t0 WHERE ((NOT (CASE WHEN NULL COLLATE RTRIM THEN (+ (rt0.c1)) WHEN (vt0.c2 IN ()) THEN rt0.c2 WHEN ((rt0.c1) BETWEEN (t0.c4) AND (vt0.c0)) THEN vt0.c0 WHEN ((((rt0.c1)OR(t0.c4)))AND(t0.c4)) THEN ((rt0.c2)==(vt1.c0)) WHEN (- (vt0.c1)) THEN ((rt0.c2)/(vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0, t0 NOT INDEXED WHERE (((CASE WHEN NULL COLLATE RTRIM THEN (+ (rt0.c1)) WHEN (vt0.c2 IN ()) THEN rt0.c2 WHEN ((rt0.c1) BETWEEN (t0.c4) AND (vt0.c0)) THEN vt0.c0 WHEN ((((rt0.c1)OR(t0.c4)))AND(t0.c4)) THEN ((rt0.c2)==(vt1.c0)) WHEN (- (vt0.c1)) THEN ((rt0.c2)/(vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0, t0;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 WHERE (CASE WHEN ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)) THEN t0.c4 COLLATE NOCASE END) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)) THEN t0.c4 COLLATE NOCASE END))) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0 WHERE (((CASE WHEN ((t0.c4) BETWEEN (t0.c4) AND (t0.c4)) THEN t0.c4 COLLATE NOCASE END) ISNULL)) GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT rt0.c1, vt1.c0 FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (t0.c4) AND (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON (((vt0.c2)<<(vt0.c0)) IN (CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 END)) FULL OUTER JOIN vt0 ON (CAST(vt0.c1 AS NUMERIC) IN (((rt0.c1) NOT NULL))) GROUP BY rt0.c1, vt1.c0;
SELECT t0.c4 FROM vt0, vt1, t0;
SELECT t0.c4 FROM vt0, vt1, t0 WHERE ((((CASE WHEN vt0.c0 THEN t0.c4 END))<(((+ ('')))))) UNION ALL SELECT ALL t0.c4 FROM vt0, vt1, t0 WHERE ((NOT ((((CASE WHEN vt0.c0 THEN t0.c4 END))<(((+ ('')))))))) UNION ALL SELECT t0.c4 FROM vt0, vt1, t0 WHERE ((((((CASE WHEN vt0.c0 THEN t0.c4 END))<(((+ ('')))))) ISNULL));
SELECT t0.c4 FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1 CROSS JOIN t0 ON x'';
SELECT DISTINCT vt1.c0 FROM vt1 CROSS JOIN t0 ON x'' WHERE (((CAST(vt1.c0 AS REAL)) IS FALSE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 CROSS JOIN t0 ON x'' WHERE ((NOT (((CAST(vt1.c0 AS REAL)) IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 CROSS JOIN t0 ON x'' WHERE (((((CAST(vt1.c0 AS REAL)) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 CROSS JOIN t0 ON x'';
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN CAST(vt0.c1 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c2)AND(vt0.c0)) THEN NULL COLLATE RTRIM WHEN DATETIME(rt0.c0, rt0.c2, vt0.c1, vt0.c2, vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c2)%(rt0.c2)) END) GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE rt0.c0  WHEN CAST(vt0.c1 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c2)AND(vt0.c0)) THEN NULL COLLATE RTRIM WHEN DATETIME(rt0.c0, rt0.c2, vt0.c1, vt0.c2, vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c2)%(rt0.c2)) END))) GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN CAST(vt0.c1 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c2)AND(vt0.c0)) THEN NULL COLLATE RTRIM WHEN DATETIME(rt0.c0, rt0.c2, vt0.c1, vt0.c2, vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c2)%(rt0.c2)) END) ISNULL)) GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0;
SELECT t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0;
SELECT t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0 HAVING TOTAL((vt1.c0 IN ())) UNION ALL SELECT t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0 HAVING (NOT (TOTAL((vt1.c0 IN ())))) UNION ALL SELECT ALL t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0 HAVING ((TOTAL((vt1.c0 IN ()))) ISNULL);
SELECT t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0;
SELECT t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0 HAVING TOTAL((vt1.c0 IN ())) UNION ALL SELECT t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0 HAVING (NOT (TOTAL((vt1.c0 IN ())))) UNION ALL SELECT ALL t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0 HAVING ((TOTAL((vt1.c0 IN ()))) ISNULL);
SELECT t0.c4, vt1.c0 FROM vt1 CROSS JOIN t0 ON NULLIF(CAST(vt1.c0 AS NUMERIC), CASE t0.c4  WHEN NULL THEN t0.c4 ELSE t0.c4 END) GROUP BY t0.c4, vt1.c0;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)>(vt1.c0)))AND(vt0.c2)))AND((~ (0.19850746859800983)))))AND(CAST(vt0.c1 AS INTEGER))))AND(vt1.c0 COLLATE RTRIM));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)>(vt1.c0)))AND(vt0.c2)))AND((~ (0.19850746859800983)))))AND(CAST(vt0.c1 AS INTEGER))))AND(vt1.c0 COLLATE RTRIM)) WHERE (((((((((NULL)OR(vt0.c0)))OR((0.9033532984079499 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR(CASE WHEN x'b834aa62' THEN vt0.c0 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)>(vt1.c0)))AND(vt0.c2)))AND((~ (0.19850746859800983)))))AND(CAST(vt0.c1 AS INTEGER))))AND(vt1.c0 COLLATE RTRIM)) WHERE ((NOT (((((((((NULL)OR(vt0.c0)))OR((0.9033532984079499 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR(CASE WHEN x'b834aa62' THEN vt0.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)>(vt1.c0)))AND(vt0.c2)))AND((~ (0.19850746859800983)))))AND(CAST(vt0.c1 AS INTEGER))))AND(vt1.c0 COLLATE RTRIM)) WHERE (((((((((((NULL)OR(vt0.c0)))OR((0.9033532984079499 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR(CASE WHEN x'b834aa62' THEN vt0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)>(vt1.c0)))AND(vt0.c2)))AND((~ (0.19850746859800983)))))AND(CAST(vt0.c1 AS INTEGER))))AND(vt1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0, vt1 INDEXED BY i44, t0, vt0;
SELECT ALL t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, t0, vt0 GROUP BY t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT ALL t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, t0, vt0 WHERE (json_array_length((vt0.c0 IN ()))) GROUP BY t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, t0, vt0 WHERE ((NOT (json_array_length((vt0.c0 IN ()))))) GROUP BY t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2 UNION SELECT t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, t0, vt0 WHERE (((json_array_length((vt0.c0 IN ()))) ISNULL)) GROUP BY t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT ALL t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, t0, vt0 GROUP BY t0.c4, vt1.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0 HAVING MAX((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0 HAVING (NOT (MAX((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0 HAVING ((MAX((vt0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0 HAVING MAX((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0 HAVING (NOT (MAX((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0 HAVING ((MAX((vt0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (TRIM(CAST(vt0.c2 AS TEXT))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT (TRIM(CAST(vt0.c2 AS TEXT))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (((TRIM(CAST(vt0.c2 AS TEXT))) ISNULL));
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, rt0.c0, vt0.c2, t0.c4 FROM vt1, vt0, t0, rt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, rt0.c0, vt0.c2, t0.c4 FROM vt1, vt0, t0, rt0 WHERE ((NOT (rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, rt0.c0, vt0.c2, t0.c4 FROM vt1, vt0, t0, rt0 WHERE ((NOT ((NOT (rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, rt0.c0, vt0.c2, t0.c4 FROM vt1, vt0, t0, rt0 WHERE ((((NOT (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, rt0.c0, vt0.c2, t0.c4 FROM vt1, vt0, t0, rt0;
SELECT t0.c4, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c4, vt0.c0;
SELECT t0.c4, vt0.c0 FROM vt1, t0, vt0 WHERE (((((((((vt0.c0)OR((((vt0.c1, vt0.c2, vt1.c0))<=((vt0.c0, vt0.c1, t0.c4))))))AND((((('.HA~0(]9H')OR(vt0.c0)))AND(t0.c4)))))AND(vt0.c1)))OR(((vt1.c0)OR(vt0.c2))))) GROUP BY t0.c4, vt0.c0 UNION SELECT t0.c4, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (((((((((vt0.c0)OR((((vt0.c1, vt0.c2, vt1.c0))<=((vt0.c0, vt0.c1, t0.c4))))))AND((((('.HA~0(]9H')OR(vt0.c0)))AND(t0.c4)))))AND(vt0.c1)))OR(((vt1.c0)OR(vt0.c2))))))) GROUP BY t0.c4, vt0.c0 UNION SELECT t0.c4, vt0.c0 FROM vt1, t0, vt0 WHERE (((((((((((vt0.c0)OR((((vt0.c1, vt0.c2, vt1.c0))<=((vt0.c0, vt0.c1, t0.c4))))))AND((((('.HA~0(]9H')OR(vt0.c0)))AND(t0.c4)))))AND(vt0.c1)))OR(((vt1.c0)OR(vt0.c2))))) ISNULL)) GROUP BY t0.c4, vt0.c0;
SELECT t0.c4, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c4, vt0.c0;
SELECT vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING x'' UNION ALL SELECT vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((x'') ISNULL);
SELECT vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING x'' UNION ALL SELECT vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((x'') ISNULL);
SELECT vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT * FROM vt1, t0;
SELECT * FROM vt1, t0 WHERE ('') UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (''))) UNION ALL SELECT * FROM vt1, t0 WHERE ((('') ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT * FROM t0, rt0, vt1;
SELECT DISTINCT * FROM t0, rt0, vt1 WHERE ((- (TRIM(DISTINCT '-1876675238', rt0.c0)))) UNION SELECT DISTINCT * FROM t0, rt0, vt1 WHERE ((NOT ((- (TRIM(DISTINCT '-1876675238', rt0.c0)))))) UNION SELECT DISTINCT * FROM t0, rt0, vt1 WHERE ((((- (TRIM(DISTINCT '-1876675238', rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt1;
SELECT ALL vt0.c1 FROM t0, rt0, vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, rt0, vt1, vt0 WHERE (((LIKELY(0.525151983814323))<=(CASE WHEN vt0.c1 THEN vt0.c2 END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, rt0, vt1, vt0 WHERE ((NOT (((LIKELY(0.525151983814323))<=(CASE WHEN vt0.c1 THEN vt0.c2 END))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM t0, rt0, vt1, vt0 WHERE (((((LIKELY(0.525151983814323))<=(CASE WHEN vt0.c1 THEN vt0.c2 END))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, rt0, vt1, vt0 GROUP BY vt0.c1;
SELECT rt0.c0, t0.c4, vt0.c2, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, t0, vt0, vt1 GROUP BY rt0.c0, t0.c4, vt0.c2, rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT rt0.c0, t0.c4, vt0.c2, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, t0, vt0, vt1 GROUP BY rt0.c0, t0.c4, vt0.c2, rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING CASE WHEN GROUP_CONCAT(rt0.c1) THEN ((vt0.c1)-(GROUP_CONCAT(vt0.c0))) WHEN ((MIN(COUNT(*)))AND(SUM(t0.c4))) THEN MIN(rt0.c2) WHEN AVG(vt0.c0) THEN ((COUNT(*)) NOT BETWEEN (rt0.c0) AND (t0.c4)) END UNION ALL SELECT rt0.c0, t0.c4, vt0.c2, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, t0, vt0, vt1 GROUP BY rt0.c0, t0.c4, vt0.c2, rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(rt0.c1) THEN ((vt0.c1)-(GROUP_CONCAT(vt0.c0))) WHEN ((MIN(COUNT(*)))AND(SUM(t0.c4))) THEN MIN(rt0.c2) WHEN AVG(vt0.c0) THEN ((COUNT(*)) NOT BETWEEN (rt0.c0) AND (t0.c4)) END)) UNION ALL SELECT ALL rt0.c0, t0.c4, vt0.c2, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, t0, vt0, vt1 GROUP BY rt0.c0, t0.c4, vt0.c2, rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(rt0.c1) THEN ((vt0.c1)-(GROUP_CONCAT(vt0.c0))) WHEN ((MIN(COUNT(*)))AND(SUM(t0.c4))) THEN MIN(rt0.c2) WHEN AVG(vt0.c0) THEN ((COUNT(*)) NOT BETWEEN (rt0.c0) AND (t0.c4)) END) ISNULL);
SELECT * FROM vt1, rt0, t0;
SELECT * FROM vt1, rt0, t0 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1, rt0, t0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1, rt0, t0 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1, rt0, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)<>(((rt0.c0)LIKE(rt0.c0))))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)<>(((rt0.c0)LIKE(rt0.c0))))))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)<>(((rt0.c0)LIKE(rt0.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(GROUP_CONCAT(GROUP_CONCAT(AVG(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(GROUP_CONCAT(AVG(SUM(rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(GROUP_CONCAT(AVG(SUM(rt0.c1)))))) ISNULL);
SELECT * FROM t0, vt0, rt0, vt1;
SELECT * FROM t0, vt0, rt0, vt1 WHERE ((((rt0.c0, t0.c4, vt0.c1)) NOT BETWEEN ((vt0.c2 COLLATE BINARY, (('K5yn')<=(rt0.c1)), ((vt1.c0) BETWEEN (t0.c4) AND ('iA')))) AND ((CAST(t0.c4 AS NUMERIC), CASE vt0.c1  WHEN rt0.c0 THEN t0.c4 ELSE rt0.c0 END, LIKE(vt0.c1, rt0.c1, '7'))))) UNION ALL SELECT * FROM t0, vt0, rt0, vt1 WHERE ((NOT ((((rt0.c0, t0.c4, vt0.c1)) NOT BETWEEN ((vt0.c2 COLLATE BINARY, (('K5yn')<=(rt0.c1)), ((vt1.c0) BETWEEN (t0.c4) AND ('iA')))) AND ((CAST(t0.c4 AS NUMERIC), CASE vt0.c1  WHEN rt0.c0 THEN t0.c4 ELSE rt0.c0 END, LIKE(vt0.c1, rt0.c1, '7'))))))) UNION ALL SELECT ALL * FROM t0, vt0, rt0, vt1 NOT INDEXED WHERE ((((((rt0.c0, t0.c4, vt0.c1)) NOT BETWEEN ((vt0.c2 COLLATE BINARY, (('K5yn')<=(rt0.c1)), ((vt1.c0) BETWEEN (t0.c4) AND ('iA')))) AND ((CAST(t0.c4 AS NUMERIC), CASE vt0.c1  WHEN rt0.c0 THEN t0.c4 ELSE rt0.c0 END, LIKE(vt0.c1, rt0.c1, '7'))))) ISNULL));
SELECT * FROM t0, vt0, rt0, vt1;
SELECT DISTINCT t0.c4, vt0.c1 FROM vt1, t0, vt0;
SELECT DISTINCT t0.c4, vt0.c1 FROM vt1, t0, vt0 WHERE (((((vt0.c2)LIKE(vt1.c0))) BETWEEN (vt0.c0) AND ((- (vt1.c0))))) UNION SELECT DISTINCT t0.c4, vt0.c1 FROM vt1, t0, vt0 WHERE ((NOT (((((vt0.c2)LIKE(vt1.c0))) BETWEEN (vt0.c0) AND ((- (vt1.c0))))))) UNION SELECT DISTINCT t0.c4, vt0.c1 FROM vt1, t0, vt0 WHERE (((((((vt0.c2)LIKE(vt1.c0))) BETWEEN (vt0.c0) AND ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT t0.c4, vt0.c1 FROM vt1, t0, vt0;
SELECT vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2 FROM vt0, vt1, t0 WHERE (vt0.c0) GROUP BY vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2 UNION SELECT vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2 FROM vt0, vt1, t0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2 FROM vt0, vt1, t0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0, vt0.c1, t0.c4, vt0.c2;
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING SUM(SUM(MAX(vt0.c2))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (SUM(SUM(MAX(vt0.c2))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING ((SUM(SUM(MAX(vt0.c2)))) ISNULL);
SELECT * FROM t0, vt0 INDEXED BY i44, rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON vt0.c1;
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON vt0.c1 WHERE ((+ (CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON vt0.c1 WHERE ((NOT ((+ (CAST(rt0.c0 AS BLOB)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON vt0.c1 WHERE ((((+ (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON vt0.c1;
SELECT ALL vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((NULL) BETWEEN (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (CASE vt1.c0  WHEN rt0.c2 THEN vt0.c2 END))) GROUP BY vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2 UNION SELECT vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT (((NULL) BETWEEN (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (CASE vt1.c0  WHEN rt0.c2 THEN vt0.c2 END))))) GROUP BY vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((((NULL) BETWEEN (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (CASE vt1.c0  WHEN rt0.c2 THEN vt0.c2 END))) ISNULL)) GROUP BY vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c1, rt0.c1, vt0.c2, vt1.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4 HAVING ((((((MIN(rt0.c0))AND(rt0.c1)))OR(rt0.c1))) IS TRUE) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4 HAVING (NOT (((((((MIN(rt0.c0))AND(rt0.c1)))OR(rt0.c1))) IS TRUE))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4 HAVING ((((((((MIN(rt0.c0))AND(rt0.c1)))OR(rt0.c1))) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4 HAVING ((((((MIN(rt0.c0))AND(rt0.c1)))OR(rt0.c1))) IS TRUE) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4 HAVING (NOT (((((((MIN(rt0.c0))AND(rt0.c1)))OR(rt0.c1))) IS TRUE))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4 HAVING ((((((((MIN(rt0.c0))AND(rt0.c1)))OR(rt0.c1))) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c4;
SELECT * FROM vt1, t0, rt0;
SELECT ALL * FROM vt1, t0, rt0 WHERE (t0.c4) UNION ALL SELECT * FROM vt1, t0, rt0 WHERE ((NOT (t0.c4))) UNION ALL SELECT ALL * FROM vt1, t0, rt0 WHERE (((t0.c4) ISNULL));
SELECT * FROM vt1, t0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((((((rt0.c0 IN ()))OR(((rt0.c1)<=(rt0.c2)))))OR((rt0.c1 IN (vt0.c1, vt0.c0)))))AND(((vt0.c2)<=(vt0.c1)))))OR((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((((((rt0.c0 IN ()))OR(((rt0.c1)<=(rt0.c2)))))OR((rt0.c1 IN (vt0.c1, vt0.c0)))))AND(((vt0.c2)<=(vt0.c1)))))OR((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((((((((rt0.c0 IN ()))OR(((rt0.c1)<=(rt0.c2)))))OR((rt0.c1 IN (vt0.c1, vt0.c0)))))AND(((vt0.c2)<=(vt0.c1)))))OR((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0 NOT INDEXED, rt0;
SELECT rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT ((rt0.c0)>(vt1.c0))) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT ((rt0.c0)>(vt1.c0))) WHERE ((((((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((468389042, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1))))<>((NOT (rt0.c0))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT ((rt0.c0)>(vt1.c0))) WHERE ((NOT ((((((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((468389042, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1))))<>((NOT (rt0.c0))))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT ((rt0.c0)>(vt1.c0))) WHERE ((((((((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((468389042, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1))))<>((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT ((rt0.c0)>(vt1.c0))) GROUP BY rt0.c1, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL rt0.c0, t0.c4, vt1.c0 FROM rt0, vt1, t0;
SELECT ALL rt0.c0, t0.c4, vt1.c0 FROM rt0, vt1, t0 WHERE (CASE ((vt1.c0)-(vt1.c0))  WHEN (((rt0.c2)) BETWEEN (('')) AND (('-639661329'))) THEN ((-8.94414849E8)&(t0.c4)) WHEN ((t0.c4) IS FALSE) THEN (t0.c4 IN (vt1.c0, rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN vt1.c0 ELSE CAST(t0.c4 AS NUMERIC) END) UNION ALL SELECT rt0.c0, t0.c4, vt1.c0 FROM rt0, vt1, t0 WHERE ((NOT (CASE ((vt1.c0)-(vt1.c0))  WHEN (((rt0.c2)) BETWEEN (('')) AND (('-639661329'))) THEN ((-8.94414849E8)&(t0.c4)) WHEN ((t0.c4) IS FALSE) THEN (t0.c4 IN (vt1.c0, rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN vt1.c0 ELSE CAST(t0.c4 AS NUMERIC) END))) UNION ALL SELECT ALL rt0.c0, t0.c4, vt1.c0 FROM rt0, vt1, t0 WHERE (((CASE ((vt1.c0)-(vt1.c0))  WHEN (((rt0.c2)) BETWEEN (('')) AND (('-639661329'))) THEN ((-8.94414849E8)&(t0.c4)) WHEN ((t0.c4) IS FALSE) THEN (t0.c4 IN (vt1.c0, rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN vt1.c0 ELSE CAST(t0.c4 AS NUMERIC) END) ISNULL));
SELECT ALL rt0.c0, t0.c4, vt1.c0 FROM rt0, vt1, t0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) NOT BETWEEN ('J') AND (json_insert(NULL, '-1687878674', '')))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN ('J') AND (json_insert(NULL, '-1687878674', '')))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN ('J') AND (json_insert(NULL, '-1687878674', '')))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM rt0 NOT INDEXED, t0, vt1, vt0 GROUP BY rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM rt0, t0, vt1, vt0 WHERE (TIME(((rt0.c1)OR(vt0.c1)), CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c4 THEN rt0.c2 END, ((rt0.c2)GLOB(rt0.c1)))) GROUP BY rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2 UNION SELECT rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM rt0, t0, vt1, vt0 WHERE ((NOT (TIME(((rt0.c1)OR(vt0.c1)), CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c4 THEN rt0.c2 END, ((rt0.c2)GLOB(rt0.c1)))))) GROUP BY rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2 UNION SELECT rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM rt0, t0, vt1, vt0 WHERE (((TIME(((rt0.c1)OR(vt0.c1)), CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c4 THEN rt0.c2 END, ((rt0.c2)GLOB(rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT ALL rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM rt0 NOT INDEXED, t0, vt1, vt0 GROUP BY rt0.c1, rt0.c2, t0.c4, rt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING COUNT(LIKE(t0.c4, MIN(COUNT(MIN(MAX(COUNT(*))))), 'h')) UNION ALL SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT (COUNT(LIKE(t0.c4, MIN(COUNT(MIN(MAX(COUNT(*))))), 'h')))) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((COUNT(LIKE(t0.c4, MIN(COUNT(MIN(MAX(COUNT(*))))), 'h'))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c4)IS(t0.c4)) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c4)IS(t0.c4)) IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c4)IS(t0.c4)) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c2, vt0.c1, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON LAST_INSERT_ROWID();
SELECT DISTINCT vt0.c2, vt0.c1, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((+ (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c2, vt0.c1, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((NOT ((+ (((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((((+ (((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON LAST_INSERT_ROWID();
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (0.4423080019146336) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (0.4423080019146336))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((0.4423080019146336) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING AVG(CAST(SUM(0.4770622122411179) AS NUMERIC)) UNION ALL SELECT vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (AVG(CAST(SUM(0.4770622122411179) AS NUMERIC)))) UNION ALL SELECT vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM t0, rt0, vt1, vt0 NOT INDEXED GROUP BY vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING ((AVG(CAST(SUM(0.4770622122411179) AS NUMERIC))) ISNULL);
SELECT t0.c4 FROM t0;
SELECT ALL t0.c4 FROM t0 WHERE (json_quote(t0.c4 COLLATE NOCASE)) UNION ALL SELECT t0.c4 FROM t0 WHERE ((NOT (json_quote(t0.c4 COLLATE NOCASE)))) UNION ALL SELECT ALL t0.c4 FROM t0 WHERE (((json_quote(t0.c4 COLLATE NOCASE)) ISNULL));
SELECT t0.c4 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((0.3779068157911448) IS FALSE) AS BLOB)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((0.3779068157911448) IS FALSE) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((0.3779068157911448) IS FALSE) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0)GLOB((((rt0.c2))>=((rt0.c0)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)GLOB((((rt0.c2))>=((rt0.c0)))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0)GLOB((((rt0.c2))>=((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4 HAVING (~ (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4 HAVING (NOT ((~ (TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4 HAVING (((~ (TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4 HAVING (~ (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4 HAVING (NOT ((~ (TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4 HAVING (((~ (TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c4 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c4;
SELECT ALL MIN((((vt1.c0 IN ()))LIKE(((vt1.c0)&(vt1.c0))))) FROM vt1 ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((NULL IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NULL IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c2, vt0.c2, vt1.c0 FROM vt0, t0, vt1, rt0;
SELECT DISTINCT rt0.c2, vt0.c2, vt1.c0 FROM vt0, t0, vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((x'') BETWEEN (rt0.c0) AND (vt1.c0))) AND ((rt0.c1 IN (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, vt0.c2, vt1.c0 FROM vt0, t0, vt1 NOT INDEXED, rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((x'') BETWEEN (rt0.c0) AND (vt1.c0))) AND ((rt0.c1 IN (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, vt0.c2, vt1.c0 FROM vt0, t0, vt1, rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((x'') BETWEEN (rt0.c0) AND (vt1.c0))) AND ((rt0.c1 IN (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c2, vt1.c0 FROM vt0, t0, vt1, rt0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE ('1307804267') GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT ('1307804267'))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((('1307804267') ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(MIN(AVG(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(MIN(AVG(vt0.c1))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(MIN(AVG(vt0.c1)))) ISNULL);
SELECT ALL t0.c4, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN t0 ON (((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) IS FALSE) FULL OUTER JOIN rt0 ON rt0.c2;
SELECT DISTINCT * FROM rt0, t0, vt1;
SELECT DISTINCT * FROM rt0, t0, vt1 WHERE (((((rt0.c0) IS FALSE))||(NULL))) UNION SELECT DISTINCT * FROM rt0, t0, vt1 WHERE ((NOT (((((rt0.c0) IS FALSE))||(NULL))))) UNION SELECT DISTINCT * FROM rt0, t0, vt1 WHERE (((((((rt0.c0) IS FALSE))||(NULL))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt1;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE (((NULL) BETWEEN (x'') AND ((vt0.c2 IN ())))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT (((NULL) BETWEEN (x'') AND ((vt0.c2 IN ())))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE (((((NULL) BETWEEN (x'') AND ((vt0.c2 IN ())))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL rt0.c2, vt0.c0, t0.c4 FROM rt0, t0, vt0 GROUP BY rt0.c2, vt0.c0, t0.c4;
SELECT rt0.c2, vt0.c0, t0.c4 FROM rt0, t0, vt0 GROUP BY rt0.c2, vt0.c0, t0.c4 HAVING ((((TOTAL(NULL)) NOT NULL)) NOT BETWEEN (SUM(SUM(0.4831169647762069))) AND ((t0.c4 IN (rt0.c0, vt0.c1)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, t0.c4 FROM rt0, t0, vt0 GROUP BY rt0.c2, vt0.c0, t0.c4 HAVING (NOT (((((TOTAL(NULL)) NOT NULL)) NOT BETWEEN (SUM(SUM(0.4831169647762069))) AND ((t0.c4 IN (rt0.c0, vt0.c1)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, t0.c4 FROM rt0, t0, vt0 GROUP BY rt0.c2, vt0.c0, t0.c4 HAVING ((((((TOTAL(NULL)) NOT NULL)) NOT BETWEEN (SUM(SUM(0.4831169647762069))) AND ((t0.c4 IN (rt0.c0, vt0.c1))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (((('qVfT{e泬3')AND(vt1.c0)))OR(vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (((('qVfT{e泬3')AND(vt1.c0)))OR(vt1.c0)) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (((('qVfT{e泬3')AND(vt1.c0)))OR(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CHAR(((0.8146861071704754)GLOB(vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CHAR(((0.8146861071704754)GLOB(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CHAR(((0.8146861071704754)GLOB(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE (x'') GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING TOTAL(MIN(COUNT(SUM(t0.c4)))) UNION ALL SELECT t0.c4 FROM t0 GROUP BY t0.c4 HAVING (NOT (TOTAL(MIN(COUNT(SUM(t0.c4)))))) UNION ALL SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4 HAVING ((TOTAL(MIN(COUNT(SUM(t0.c4))))) ISNULL);
SELECT MAX((+ (((vt0.c2)>(vt0.c0))))) FROM vt0, t0 ORDER BY (((vt0.c2)) BETWEEN ((((x'31a6') NOT BETWEEN (vt0.c2) AND (vt0.c2)))) AND (((- (vt0.c2))))) DESC  NULLS FIRST;
SELECT * FROM t0, vt1, vt0 NOT INDEXED;
SELECT * FROM t0, vt1, vt0 WHERE (((((vt0.c2)<<(vt1.c0)))<=((- (vt0.c0))))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (((((vt0.c2)<<(vt1.c0)))<=((- (vt0.c0))))))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE (((((((vt0.c2)<<(vt1.c0)))<=((- (vt0.c0))))) ISNULL));
SELECT * FROM t0, vt1, vt0 NOT INDEXED;
SELECT DISTINCT rt0.c0, vt0.c2, vt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 CROSS JOIN vt0 ON ((((((2.020951933E9)AND(t0.c4)))AND(vt0.c0))) IS FALSE) CROSS JOIN t0 ON (- (((rt0.c1) IS FALSE)));
SELECT DISTINCT rt0.c0, vt0.c2, vt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 CROSS JOIN vt0 ON ((((((2.020951933E9)AND(t0.c4)))AND(vt0.c0))) IS FALSE) CROSS JOIN t0 ON (- (((rt0.c1) IS FALSE))) WHERE (CASE WHEN (((((((((((('+|')AND(rt0.c1)))AND(t0.c4)))AND(vt0.c0)))OR(rt0.c2)))OR(x'')))OR(vt0.c1)) THEN '>UU' WHEN (NOT (vt1.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN t0.c4 WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c2 ELSE rt0.c1 END WHEN ((vt1.c0)!=(rt0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE CASE vt1.c0  WHEN vt0.c2 THEN vt0.c1 ELSE rt0.c0 END END) UNION SELECT DISTINCT rt0.c0, vt0.c2, vt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 CROSS JOIN vt0 ON ((((((2.020951933E9)AND(t0.c4)))AND(vt0.c0))) IS FALSE) CROSS JOIN t0 ON (- (((rt0.c1) IS FALSE))) WHERE ((NOT (CASE WHEN (((((((((((('+|')AND(rt0.c1)))AND(t0.c4)))AND(vt0.c0)))OR(rt0.c2)))OR(x'')))OR(vt0.c1)) THEN '>UU' WHEN (NOT (vt1.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN t0.c4 WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c2 ELSE rt0.c1 END WHEN ((vt1.c0)!=(rt0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE CASE vt1.c0  WHEN vt0.c2 THEN vt0.c1 ELSE rt0.c0 END END))) UNION SELECT DISTINCT rt0.c0, vt0.c2, vt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 CROSS JOIN vt0 ON ((((((2.020951933E9)AND(t0.c4)))AND(vt0.c0))) IS FALSE) CROSS JOIN t0 ON (- (((rt0.c1) IS FALSE))) WHERE (((CASE WHEN (((((((((((('+|')AND(rt0.c1)))AND(t0.c4)))AND(vt0.c0)))OR(rt0.c2)))OR(x'')))OR(vt0.c1)) THEN '>UU' WHEN (NOT (vt1.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN t0.c4 WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c2 ELSE rt0.c1 END WHEN ((vt1.c0)!=(rt0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE CASE vt1.c0  WHEN vt0.c2 THEN vt0.c1 ELSE rt0.c0 END END) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c2, vt0.c1, vt0.c0, t0.c4, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 CROSS JOIN vt0 ON ((((((2.020951933E9)AND(t0.c4)))AND(vt0.c0))) IS FALSE) CROSS JOIN t0 ON (- (((rt0.c1) IS FALSE)));
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (vt0.c0) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, t0.c4 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c4;
SELECT vt0.c0, vt0.c2, t0.c4 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING COUNT(((GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))%(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c4 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING (NOT (COUNT(((GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))%(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c4 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c4 HAVING ((COUNT(((GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))%(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON (((NULL)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((t0.c4)) AND ((t0.c4))))) AND ((((vt1.c0)IS(vt1.c0))))) LEFT OUTER JOIN vt1 ON CASE ((vt0.c1) NOTNULL)  WHEN rt0.c1 THEN NULL END LEFT OUTER JOIN rt0 ON vt0.c1;
SELECT DISTINCT t0.c4, vt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, t0, vt1;
SELECT DISTINCT t0.c4, vt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, t0, vt1 WHERE (((t0.c4)>=(771390632))) UNION SELECT DISTINCT t0.c4, vt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, t0, vt1 WHERE ((NOT (((t0.c4)>=(771390632))))) UNION SELECT DISTINCT t0.c4, vt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, t0, vt1 WHERE (((((t0.c4)>=(771390632))) ISNULL));
SELECT DISTINCT t0.c4, vt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, t0, vt1;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0, t0 WHERE (((((rt0.c1)OR(((vt1.c0)|('-1e500')))))OR((((rt0.c1))=((rt0.c0)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt1, rt0, t0 WHERE ((NOT (((((rt0.c1)OR(((vt1.c0)|('-1e500')))))OR((((rt0.c1))==((rt0.c0)))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt1, rt0, t0 WHERE (((((((rt0.c1)OR(((vt1.c0)|('-1e500')))))OR((((rt0.c1))==((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(COUNT(AVG(NULL))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(COUNT(AVG(NULL))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(COUNT(AVG(NULL)))) ISNULL);
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0)AND(t0.c4)))AND(t0.c4)))IS NOT((~ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (((((((vt1.c0)AND(t0.c4)))AND(t0.c4)))IS NOT((~ (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE (((((((((vt1.c0)AND(t0.c4)))AND(t0.c4)))IS NOT((~ (vt1.c0))))) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT t0.c4 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CHAR(t0.c4) THEN 0x5daa6345 ELSE CASE WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 ELSE t0.c4 END END;
SELECT DISTINCT t0.c4 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CHAR(t0.c4) THEN 0X5daa6345 ELSE CASE WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 ELSE t0.c4 END END WHERE ('1624975892') UNION SELECT DISTINCT t0.c4 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CHAR(t0.c4) THEN 0X5daa6345 ELSE CASE WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 ELSE t0.c4 END END WHERE ((NOT ('1624975892'))) UNION SELECT DISTINCT t0.c4 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CHAR(t0.c4) THEN 0x5daa6345 ELSE CASE WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 ELSE t0.c4 END END WHERE ((('1624975892') ISNULL));
SELECT DISTINCT t0.c4 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CHAR(t0.c4) THEN 0x5daa6345 ELSE CASE WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 WHEN vt1.c0 THEN t0.c4 ELSE t0.c4 END END;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (IFNULL(((vt0.c1) NOT BETWEEN (vt0.c2) AND ('-668159488')), ((vt0.c0)<<(NULL)))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (IFNULL(((vt0.c1) NOT BETWEEN (vt0.c2) AND ('-668159488')), ((vt0.c0)<<(NULL)))))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((IFNULL(((vt0.c1) NOT BETWEEN (vt0.c2) AND ('-668159488')), ((vt0.c0)<<(NULL)))) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt1.c0, t0.c4 FROM t0, vt1 GROUP BY vt1.c0, t0.c4;
SELECT vt1.c0, t0.c4 FROM t0, vt1 GROUP BY vt1.c0, t0.c4 HAVING CAST(((((MAX(t0.c4))AND(t0.c4)))OR(COUNT(MIN(vt1.c0)))) AS INTEGER) UNION ALL SELECT ALL vt1.c0, t0.c4 FROM t0, vt1 GROUP BY vt1.c0, t0.c4 HAVING (NOT (CAST(((((MAX(t0.c4))AND(t0.c4)))OR(COUNT(MIN(vt1.c0)))) AS INTEGER))) UNION ALL SELECT ALL vt1.c0, t0.c4 FROM t0, vt1 GROUP BY vt1.c0, t0.c4 HAVING ((CAST(((((MAX(t0.c4))AND(t0.c4)))OR(COUNT(MIN(vt1.c0)))) AS INTEGER)) ISNULL);
SELECT rt0.c2, rt0.c1, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1, vt0;
SELECT rt0.c2, rt0.c1, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1, vt0 WHERE (((((vt0.c1) NOTNULL))*((vt1.c0 IN (rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (((((vt0.c1) NOTNULL))*((vt1.c0 IN (rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1, vt0 WHERE (((((((vt0.c1) NOTNULL))*((vt1.c0 IN (rt0.c2))))) ISNULL));
SELECT rt0.c2, rt0.c1, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt0, rt0, t0, vt1;
SELECT DISTINCT * FROM vt0, rt0, t0, vt1 WHERE (((vt0.c0) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, rt0, t0, vt1 WHERE ((NOT (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, rt0, t0, vt1 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0, vt1;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 WHERE ((((~ (t0.c4))) ISNULL)) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0 WHERE ((NOT ((((~ (t0.c4))) ISNULL)))) GROUP BY t0.c4 UNION SELECT ALL t0.c4 FROM t0 WHERE ((((((~ (t0.c4))) ISNULL)) ISNULL)) GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 IN ()) IN (((vt0.c2)<<(vt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 IN ()) IN (((vt0.c2)<<(vt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM((+ (COUNT(AVG(MIN(vt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 IN ()) IN (((vt0.c2)<<(vt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM((+ (COUNT(AVG(MIN(vt0.c0)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 IN ()) IN (((vt0.c2)<<(vt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM((+ (COUNT(AVG(MIN(vt0.c0))))))) ISNULL);
SELECT ALL vt0.c2, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE BINARY;
SELECT ALL vt0.c2, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE BINARY WHERE (CAST(((vt0.c0)<<(vt0.c0)) AS TEXT)) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((((((((vt1.c0)AND(0.22276921238720926)))AND('633050417')))OR(vt1.c0)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT vt0.c2, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE BINARY WHERE ((NOT (CAST(((vt0.c0)<<(vt0.c0)) AS TEXT)))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((((((((vt1.c0)AND(0.22276921238720926)))AND('633050417')))OR(vt1.c0)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT ALL vt0.c2, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE BINARY WHERE (((CAST(((vt0.c0)<<(vt0.c0)) AS TEXT)) ISNULL)) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((((((((vt1.c0)AND(0.22276921238720926)))AND('633050417')))OR(vt1.c0)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT ALL vt0.c2, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE BINARY;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT ALL t0.c4 FROM t0 WHERE (((~ (t0.c4)) IN ())) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE ((NOT (((~ (t0.c4)) IN ())))) GROUP BY t0.c4 UNION SELECT t0.c4 FROM t0 WHERE (((((~ (t0.c4)) IN ())) ISNULL)) GROUP BY t0.c4;
SELECT t0.c4 FROM t0 GROUP BY t0.c4;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((MIN(COUNT(vt1.c0))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((MIN(COUNT(vt1.c0))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((MIN(COUNT(vt1.c0))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((((((vt1.c0)AND('')))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((+ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND('')))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((+ (vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND('')))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((+ (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0, vt0.c2, vt0.c0 FROM rt0, vt0 NOT INDEXED, vt1;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0, vt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE (((((vt0.c2)<(vt0.c1)))==((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'')))))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0, vt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((((vt0.c2)<(vt0.c1)))==((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'')))))))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0, vt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE (((((((vt0.c2)<(vt0.c1)))==((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'')))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt1.c0, vt0.c2, vt0.c0 FROM rt0, vt0 NOT INDEXED, vt1;
SELECT ALL vt0.c0, rt0.c0, vt0.c2, vt0.c1 FROM rt0 INDEXED BY i44, vt1, t0 RIGHT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (CASE WHEN t0.c4 THEN t0.c4 END) AND ((rt0.c0 IN ()))) GROUP BY vt0.c0, rt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, t0.c4, vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c4, vt1.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, t0.c4, vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c4, vt1.c0, vt0.c1 HAVING MAX(AVG(GROUP_CONCAT(MIN(TOTAL(vt0.c2))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c4, vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c4, vt1.c0, vt0.c1 HAVING (NOT (MAX(AVG(GROUP_CONCAT(MIN(TOTAL(vt0.c2))))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c4, vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c4, vt1.c0, vt0.c1 HAVING ((MAX(AVG(GROUP_CONCAT(MIN(TOTAL(vt0.c2)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM t0, vt0, vt1;
SELECT ALL vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM t0, vt0, vt1 WHERE (('632861954' IN (781573470, vt0.c2)) COLLATE BINARY) UNION ALL SELECT vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT (('632861954' IN (781573470, vt0.c2)) COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM t0, vt0, vt1 WHERE (((('632861954' IN (781573470, vt0.c2)) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0, vt0.c1, t0.c4, vt0.c2, vt1.c0 FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c4) IS TRUE), t0.c4, ((t0.c4) ISNULL)))>=(('g', ((t0.c4) NOTNULL), ((t0.c4) BETWEEN (0.8791952681609997) AND (t0.c4)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c4) IS TRUE), t0.c4, ((t0.c4) ISNULL)))>=(('g', ((t0.c4) NOTNULL), ((t0.c4) BETWEEN (0.8791952681609997) AND (t0.c4)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c4) IS TRUE), t0.c4, ((t0.c4) ISNULL)))>=(('g', ((t0.c4) NOTNULL), ((t0.c4) BETWEEN (0.8791952681609997) AND (t0.c4)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c4, vt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON CASE ((rt0.c2) NOT NULL)  WHEN ((rt0.c0) IS TRUE) THEN ((vt0.c2) NOT NULL) WHEN ((x'') NOT BETWEEN (t0.c4) AND (vt0.c1)) THEN rt0.c2 WHEN (t0.c4 IN ()) THEN ((((vt0.c2)OR(rt0.c1)))OR(vt0.c1)) END FULL OUTER JOIN vt0 ON (~ (CASE rt0.c0  WHEN t0.c4 THEN vt0.c2 ELSE vt0.c2 END)) LEFT OUTER JOIN vt1 ON ((rt0.c0) NOT NULL) COLLATE RTRIM GROUP BY t0.c4, vt0.c2, rt0.c1;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*))AND(MIN(vt1.c0))))AND(MAX(AVG(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (((((COUNT(*))AND(MIN(vt1.c0))))AND(MAX(AVG(COUNT(*))))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((((COUNT(*))AND(MIN(vt1.c0))))AND(MAX(AVG(COUNT(*)))))) ISNULL);
SELECT * FROM rt0, vt1, t0, vt0;
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (CASE (vt1.c0 IN ())  WHEN ((vt0.c0)||(vt0.c0)) THEN 988862333 END) UNION ALL SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE ((NOT (CASE (vt1.c0 IN ())  WHEN ((vt0.c0)||(vt0.c0)) THEN 988862333 END))) UNION ALL SELECT * FROM rt0, vt1, t0, vt0 WHERE (((CASE (vt1.c0 IN ())  WHEN ((vt0.c0)||(vt0.c0)) THEN 988862333 END) ISNULL));
SELECT * FROM rt0, vt1, t0, vt0;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((t0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT (((t0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((((t0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT vt0.c2, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0, t0, vt1 WHERE ((((vt0.c2)LIKE(vt1.c0)) IN ())) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 NOT INDEXED, t0, vt1 WHERE ((NOT ((((vt0.c2)LIKE(vt1.c0)) IN ())))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0, t0, vt1 WHERE ((((((vt0.c2)LIKE(vt1.c0)) IN ())) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING TOTAL(COUNT(TOTAL(vt1.c0))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(COUNT(TOTAL(vt1.c0))))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING ((TOTAL(COUNT(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt0, t0, vt0;
SELECT * FROM rt0, t0, vt0 WHERE (rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, t0, vt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, t0, vt0;
SELECT DISTINCT vt1.c0 FROM rt0, vt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN 0.7893245665181048 THEN CASE WHEN rt0.c2 THEN -1855517108 ELSE vt0.c2 END ELSE IFNULL('-2071308135', vt1.c0) END;
SELECT DISTINCT vt1.c0 FROM rt0, vt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN 0.7893245665181048 THEN CASE WHEN rt0.c2 THEN -1855517108 ELSE vt0.c2 END ELSE IFNULL('-2071308135', vt1.c0) END WHERE (-6.1578824E7) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN 0.7893245665181048 THEN CASE WHEN rt0.c2 THEN -1855517108 ELSE vt0.c2 END ELSE IFNULL('-2071308135', vt1.c0) END WHERE ((NOT (-6.1578824E7))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN 0.7893245665181048 THEN CASE WHEN rt0.c2 THEN -1855517108 ELSE vt0.c2 END ELSE IFNULL('-2071308135', vt1.c0) END WHERE (((-6.1578824E7) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0, vt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN 0.7893245665181048 THEN CASE WHEN rt0.c2 THEN -1855517108 ELSE vt0.c2 END ELSE IFNULL('-2071308135', vt1.c0) END;
SELECT ALL rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2 FROM vt0, t0, vt1, rt0 GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2 FROM vt0, t0, vt1, rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2 FROM vt0, t0, vt1, rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE BINARY))) GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2 FROM vt0, t0, vt1, rt0 WHERE ((((rt0.c2 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2 FROM vt0, t0, vt1, rt0 GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1, rt0, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0, t0 GROUP BY vt1.c0 HAVING SUM(1.701193797E9) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0, t0 GROUP BY vt1.c0 HAVING (NOT (SUM(1.701193797E9))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 NOT INDEXED, t0 GROUP BY vt1.c0 HAVING ((SUM(1.701193797E9)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, rt0, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0, t0 GROUP BY vt1.c0 HAVING SUM(1.701193797E9) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0, t0 GROUP BY vt1.c0 HAVING (NOT (SUM(1.701193797E9))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 NOT INDEXED, t0 GROUP BY vt1.c0 HAVING ((SUM(1.701193797E9)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, rt0, t0 GROUP BY vt1.c0;
