-- Time: 2024/06/09 06:45:53
-- Database: database18
-- Database version: 3.40.0
-- seed value: 2567341518
PRAGMA cache_size = 50000; -- 14ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE TABLE t1 (c0 INT ); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR ABORT t1 SET c0=0.8507152431581015; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE OR ABORT t1 SET (c0, c0, c0)=('1zG-', 0.761361576523558, x'cd4c051f'); -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL; -- 0ms;
ANALYZE t1; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c44; -- 1ms;
PRAGMA foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE INSERT ON t1 FOR EACH ROW  BEGIN DELETE FROM rt0;END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM t1 WHERE 0.5057277958661606; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (x''), ('4M'), ('-338547056'), (NULL), (x''); -- 0ms;
REINDEX  t1; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1='-266586073', c2='-47391923'; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
REINDEX  t1; -- 0ms;
REINDEX RTRIM; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c62; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=('P[-]'); -- 0ms;
ANALYZE temp; -- 0ms;
ANALYZE; -- 2ms;
UPDATE OR ABORT t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-47391923'; -- 4ms;
REINDEX; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
VACUUM main; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1265521649 unordered noskipscan'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'08f2' WHERE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c7 INT; -- 1ms;
END TRANSACTION; -- 1ms;
VACUUM; -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE CAST(((rt0.c0) NOTNULL) AS NUMERIC); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE rt0 SET (c2)=(x''); -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('1307576894') WHERE (((rt0.c2))!=((rt0.c0))) COLLATE RTRIM; -- 0ms;
REINDEX RTRIM; -- 1ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE rt0; -- 1ms;
END; -- 0ms;
ANALYZE rt0; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET c2=0xffffffffeca190af, c1=x''; -- 0ms;
PRAGMA main.legacy_file_format; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-438796141 unordered'); -- 0ms;
UPDATE OR FAIL rt0 SET c2=0xffffffffbd29d2fe; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c1)))AND((((rt0.c1, rt0.c1, 0.1568899482007)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, x'f1de')))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)LIKE(rt0.c1)))AND((((rt0.c1, rt0.c1, 0.1568899482007)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, x'f1de')))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c2)LIKE(rt0.c1)))AND((((rt0.c1, rt0.c1, 0.1568899482007)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, x'f1de')))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0) IS FALSE)) AND (SQLITE_COMPILEOPTION_USED(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0) IS FALSE)) AND (SQLITE_COMPILEOPTION_USED(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0) IS FALSE)) AND (SQLITE_COMPILEOPTION_USED(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) IS FALSE)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(TOTAL(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(TOTAL(COUNT(*)))) ISNULL);
SELECT SUM((((rt0.c0 COLLATE BINARY))<(((rt0.c2 IN (0.626009415807986)))))) FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN '-324955985' WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)IS NOT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN '-324955985' WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)IS NOT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN '-324955985' WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)IS NOT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((rt0.c1 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1)>>(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)>>(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)>>(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((CAST(rt0.c1 AS BLOB), CAST(rt0.c2 AS TEXT), CASE '0.1568899482007'  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END))>((((x'9b2c6857')=(rt0.c1)), (rt0.c2 IN (rt0.c2)), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((CAST(rt0.c1 AS BLOB), CAST(rt0.c2 AS TEXT), CASE '0.1568899482007'  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END))>((((x'9b2c6857')==(rt0.c1)), (rt0.c2 IN (rt0.c2)), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((CAST(rt0.c1 AS BLOB), CAST(rt0.c2 AS TEXT), CASE '0.1568899482007'  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END))>((((x'9b2c6857')==(rt0.c1)), (rt0.c2 IN (rt0.c2)), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOTNULL))AND(rt0.c2)))AND((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0) NOTNULL))AND(rt0.c2)))AND((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0) NOTNULL))AND(rt0.c2)))AND((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((+ (COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING 0X4a4918f6 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (0X4a4918f6)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((0x4a4918f6) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING 0X4a4918f6 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (0X4a4918f6)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((0x4a4918f6) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS NUMERIC)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((rt0.c1 IN ()) AS NUMERIC)) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c0)>=(rt0.c1))) ISNULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)>=(rt0.c1))) ISNULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)>=(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN LOWER(DISTINCT rt0.c1) WHEN (((rt0.c2))=((rt0.c1))) THEN ((rt0.c0)OR('1108946082')) ELSE ((((rt0.c1)OR(rt0.c0)))OR(0.9083451857987469)) END) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c2 AS TEXT)  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)>=(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN LOWER(DISTINCT rt0.c1) WHEN (((rt0.c2))==((rt0.c1))) THEN ((rt0.c0)OR('1108946082')) ELSE ((((rt0.c1)OR(rt0.c0)))OR(0.9083451857987469)) END))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE CAST(rt0.c2 AS TEXT)  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)>=(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN LOWER(DISTINCT rt0.c1) WHEN (((rt0.c2))=((rt0.c1))) THEN ((rt0.c0)OR('1108946082')) ELSE ((((rt0.c1)OR(rt0.c0)))OR(0.9083451857987469)) END) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ()))<(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ()))<(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN ()))<(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND (x''))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND (x''))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND (x''))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(UNLIKELY(SUM(GROUP_CONCAT(0.16929978264450585)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(UNLIKELY(SUM(GROUP_CONCAT(0.16929978264450585)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(UNLIKELY(SUM(GROUP_CONCAT(0.16929978264450585))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)>=(rt0.c0)))*((rt0.c2 IN (NULL, rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)>=(rt0.c0)))*((rt0.c2 IN (NULL, rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)>=(rt0.c0)))*((rt0.c2 IN (NULL, rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1)/(CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1)/(CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)/(CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) ISNULL))<(CAST('-1689173409' AS REAL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) ISNULL))<(CAST('-1689173409' AS REAL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) ISNULL))<(CAST('-1689173409' AS REAL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(TOTAL(SUM(rt0.c2)) AS BLOB) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(TOTAL(SUM(rt0.c2)) AS BLOB))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(TOTAL(SUM(rt0.c2)) AS BLOB)) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c1)GLOB(x'')))|(((rt0.c1)|(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)GLOB(x'')))|(((rt0.c1)|(rt0.c1))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c1)GLOB(x'')))|(((rt0.c1)|(rt0.c1))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) ELSE 'yC*d\r>⺐' END) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) ELSE 'yC*d\r>⺐' END))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) ELSE 'yC*d\r>⺐' END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((COUNT(*))OR(CASE WHEN rt0.c2 THEN COUNT(*) WHEN COUNT(*) THEN rt0.c2 WHEN AVG(COUNT(rt0.c2)) THEN TOTAL(rt0.c1) END)))OR(((MAX(GROUP_CONCAT(GROUP_CONCAT('4)틾zSO~)k'))))-(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((COUNT(*))OR(CASE WHEN rt0.c2 THEN COUNT(*) WHEN COUNT(*) THEN rt0.c2 WHEN AVG(COUNT(rt0.c2)) THEN TOTAL(rt0.c1) END)))OR(((MAX(GROUP_CONCAT(GROUP_CONCAT('4)틾zSO~)k'))))-(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((COUNT(*))OR(CASE WHEN rt0.c2 THEN COUNT(*) WHEN COUNT(*) THEN rt0.c2 WHEN AVG(COUNT(rt0.c2)) THEN TOTAL(rt0.c1) END)))OR(((MAX(GROUP_CONCAT(GROUP_CONCAT('4)틾zSO~)k'))))-(rt0.c0))))) ISNULL);
SELECT ALL MAX((((~ (NULL)))AND(rt0.c1))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (('-1363248008' IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT (('-1363248008' IN ())))) UNION ALL SELECT * FROM rt0 WHERE (((('-1363248008' IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((rt0.c0)<(NULL))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((rt0.c0)<(NULL))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((rt0.c0)<(NULL))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT NULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE)) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c1) IS FALSE)) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((MAX(rt0.c0))OR(CAST(rt0.c0 AS REAL))))AND(SUM(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((MAX(rt0.c0))OR(CAST(rt0.c0 AS REAL))))AND(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((MAX(rt0.c0))OR(CAST(rt0.c0 AS REAL))))AND(SUM(rt0.c2)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((MAX(rt0.c0))OR(CAST(rt0.c0 AS REAL))))AND(SUM(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((MAX(rt0.c0))OR(CAST(rt0.c0 AS REAL))))AND(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((MAX(rt0.c0))OR(CAST(rt0.c0 AS REAL))))AND(SUM(rt0.c2)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND (((((rt0.c1, x'', rt0.c2))!=((rt0.c1, rt0.c2, rt0.c1))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND (((((rt0.c1, x'', rt0.c2))!=((rt0.c1, rt0.c2, rt0.c1))))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND (((((rt0.c1, x'', rt0.c2))<>((rt0.c1, rt0.c2, rt0.c1))))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((('813822710'))>=((rt0.c0)))))<=((rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((('813822710'))>=((rt0.c0)))))<=((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((('813822710'))>=((rt0.c0)))))<=((rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) IS FALSE)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) IS FALSE)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (LTRIM('1122897756')) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (LTRIM('1122897756')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((LTRIM('1122897756')) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((0xc58726a)AND(UNLIKELY(rt0.c2))))OR((NOT (rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((0Xc58726a)AND(UNLIKELY(rt0.c2))))OR((NOT (rt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((0Xc58726a)AND(UNLIKELY(rt0.c2))))OR((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(COUNT(rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))&((rt0.c2 IN ())))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))&((rt0.c2 IN ())))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))&((rt0.c2 IN ())))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND ((0.7622689848548907 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND ((0.7622689848548907 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND ((0.7622689848548907 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NULL IN ())) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NULL IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((((COUNT(*))AND(SUM(rt0.c2))))OR(COUNT(*))))OR(MAX(MIN(rt0.c0)))))AND(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((((((((COUNT(*))AND(SUM(rt0.c2))))OR(COUNT(*))))OR(MAX(MIN(rt0.c0)))))AND(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((((((COUNT(*))AND(SUM(rt0.c2))))OR(COUNT(*))))OR(MAX(MIN(rt0.c0)))))AND(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('L7_*') IS FALSE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((('L7_*') IS FALSE)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((('L7_*') IS FALSE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (LAST_INSERT_ROWID()) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(rt0.c1))) NOT BETWEEN (MIN(rt0.c1)) AND (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(rt0.c1))) NOT BETWEEN (MIN(rt0.c1)) AND (GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((GROUP_CONCAT(TOTAL(rt0.c1))) NOT BETWEEN (MIN(rt0.c1)) AND (GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL MIN(((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))>=(CASE 0.5570739506276479  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END))) FROM rt0 ORDER BY ((((rt0.c2)OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS NUMERIC))), ((((((rt0.c2) IS TRUE))AND(((rt0.c0) NOT BETWEEN (0.5825284438019727) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE));
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE x''  WHEN SQLITE_COMPILEOPTION_USED(rt0.c0) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) ELSE (NOT (rt0.c2)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE x''  WHEN SQLITE_COMPILEOPTION_USED(rt0.c0) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) ELSE (NOT (rt0.c2)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE x''  WHEN SQLITE_COMPILEOPTION_USED(rt0.c0) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) ELSE (NOT (rt0.c2)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE (rt0.c1 IN (rt0.c1, rt0.c1))  WHEN (rt0.c0 IN (rt0.c0)) THEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c1, rt0.c1))) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE (rt0.c1 IN (rt0.c1, rt0.c1))  WHEN (rt0.c0 IN (rt0.c0)) THEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c1, rt0.c1))) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE (rt0.c1 IN (rt0.c1, rt0.c1))  WHEN (rt0.c0 IN (rt0.c0)) THEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c1, rt0.c1))) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((HEX(rt0.c2) IN ())) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((HEX(rt0.c2) IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((HEX(rt0.c2) IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(CAST(rt0.c2 AS TEXT)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(CAST(rt0.c2 AS TEXT))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(CAST(rt0.c2 AS TEXT)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(CAST(rt0.c2 AS TEXT))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((0.9083451857987469) NOT BETWEEN (((0.2117105824759712)<('.1^齺JG'))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((0.9083451857987469) NOT BETWEEN (((0.2117105824759712)<('.1^齺JG'))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((0.9083451857987469) NOT BETWEEN (((0.2117105824759712)<('.1^齺JG'))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)OR(0.7622689848548907))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0)OR(0.7622689848548907))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)OR(0.7622689848548907))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (x'' COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x'' COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((x'' COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CAST(rt0.c1 AS INTEGER) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CAST(rt0.c1 AS INTEGER) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((LIKELY(rt0.c0)) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((LIKELY(rt0.c0)) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((LIKELY(rt0.c0)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((NOT (rt0.c2)), (rt0.c2 IN (rt0.c0, rt0.c1)), (NOT (rt0.c2)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2)==(rt0.c2))))>((CAST(rt0.c1 AS BLOB), rt0.c0, CAST(rt0.c0 AS NUMERIC), ((rt0.c0) NOTNULL), rt0.c2)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((NOT (rt0.c2)), (rt0.c2 IN (rt0.c0, rt0.c1)), (NOT (rt0.c2)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2)==(rt0.c2))))>((CAST(rt0.c1 AS BLOB), rt0.c0, CAST(rt0.c0 AS NUMERIC), ((rt0.c0) NOTNULL), rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((NOT (rt0.c2)), (rt0.c2 IN (rt0.c0, rt0.c1)), (NOT (rt0.c2)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2)==(rt0.c2))))>((CAST(rt0.c1 AS BLOB), rt0.c0, CAST(rt0.c0 AS NUMERIC), ((rt0.c0) NOTNULL), rt0.c2)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG(MAX(COUNT(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG(MAX(COUNT(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(MAX(COUNT(rt0.c0)))) ISNULL);
SELECT ALL MAX((((x'')) NOT BETWEEN (((rt0.c1 IN (rt0.c0, rt0.c1)))) AND ((((rt0.c2) ISNULL))))) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c2)))>=(((rt0.c0) BETWEEN (rt0.c0) AND (0.5570739506276479))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((NOT (rt0.c2)))>=(((rt0.c0) BETWEEN (rt0.c0) AND (0.5570739506276479))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((NOT (rt0.c2)))>=(((rt0.c0) BETWEEN (rt0.c0) AND (0.5570739506276479))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN (((rt0.c2)%(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS REAL) IN (((rt0.c2)%(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CAST(rt0.c2 AS REAL) IN (((rt0.c2)%(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((('-438796141'))>((rt0.c1)))) NOT BETWEEN ((NOT (rt0.c0))) AND (rt0.c1))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((('-438796141'))>((rt0.c1)))) NOT BETWEEN ((NOT (rt0.c0))) AND (rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((('-438796141'))>((rt0.c1)))) NOT BETWEEN ((NOT (rt0.c0))) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST((- (SUM(rt0.c2))) AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST((- (SUM(rt0.c2))) AS INTEGER))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST((- (SUM(rt0.c2))) AS INTEGER)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST((- (SUM(rt0.c2))) AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST((- (SUM(rt0.c2))) AS INTEGER))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST((- (SUM(rt0.c2))) AS INTEGER)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) NOTNULL)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((- ((x'' IN (rt0.c1, rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((- ((x'' IN (rt0.c1, rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((- ((x'' IN (rt0.c1, rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((~ ((rt0.c2 IN ())))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((~ ((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(NULL AS REAL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(NULL AS REAL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(NULL AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(NULL AS REAL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(NULL AS REAL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(NULL AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((NULL)-(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((NULL)-(CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT * FROM rt0 WHERE (((((NULL)-(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND((x'' IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND((x'' IN ())))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND((x'' IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ()))>(CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))>(CAST(rt0.c0 AS TEXT)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN ()))>(CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((rt0.c0)) NOT BETWEEN ((TOTAL(rt0.c1))) AND (((('')<=(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c0)) NOT BETWEEN ((TOTAL(rt0.c1))) AND (((('')<=(TOTAL(rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((((rt0.c0)) NOT BETWEEN ((TOTAL(rt0.c1))) AND (((('')<=(TOTAL(rt0.c0))))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((rt0.c0)) NOT BETWEEN ((TOTAL(rt0.c1))) AND (((('')<=(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c0)) NOT BETWEEN ((TOTAL(rt0.c1))) AND (((('')<=(TOTAL(rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((((rt0.c0)) NOT BETWEEN ((TOTAL(rt0.c1))) AND (((('')<=(TOTAL(rt0.c0))))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((- (rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((- (rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((- (rt0.c1))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((JULIANDAY(rt0.c2, rt0.c1, rt0.c2))AND(RTRIM(rt0.c1))))AND(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((JULIANDAY(rt0.c2, rt0.c1, rt0.c2))AND(RTRIM(rt0.c1))))AND(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((JULIANDAY(rt0.c2, rt0.c1, rt0.c2))AND(RTRIM(rt0.c1))))AND(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) NOT NULL) COLLATE BINARY) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOT NULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING TOTAL(TOTAL(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(TOTAL(rt0.c2))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0)OR(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1) IS TRUE))) AND (((NOT (rt0.c0)), (rt0.c1 IN ()), rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0)OR(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1) IS TRUE))) AND (((NOT (rt0.c0)), (rt0.c1 IN ()), rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0)OR(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1) IS TRUE))) AND (((NOT (rt0.c0)), (rt0.c1 IN ()), rt0.c1)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c2)IS(CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)IS(CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c2)IS(CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c1)<(rt0.c0)))AND(rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)<(rt0.c0)))AND(rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)<(rt0.c0)))AND(rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(MAX(AVG(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(MAX(AVG(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(MAX(AVG(COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((- (((rt0.c0)OR(rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c0)OR(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (((rt0.c0)OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(rt0.c0))IS(MIN(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((SUM(rt0.c0))IS(MIN(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((SUM(rt0.c0))IS(MIN(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS TEXT)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((rt0.c0) NOTNULL) AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c0) NOTNULL) AS TEXT)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))OR(rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS NUMERIC))OR(rt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))OR(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE rt0.c1  WHEN '' THEN rt0.c0 ELSE rt0.c0 END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN '' THEN rt0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE rt0.c1  WHEN '' THEN rt0.c0 ELSE rt0.c0 END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG(MAX(SUM(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(MAX(SUM(MIN(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(MAX(SUM(MIN(rt0.c0))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c0)AND((- (rt0.c0)))))OR(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)AND((- (rt0.c0)))))OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c0)AND((- (rt0.c0)))))OR(rt0.c0))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, rt0.c0, rt0.c0))) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, rt0.c0, rt0.c0))) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, rt0.c0, rt0.c0))) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((- ((+ (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- ((+ (rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((- ((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ((NOT (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ((NOT (rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ((NOT (rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(((rt0.c2)!=(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(((rt0.c2)<>(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(((rt0.c2)!=(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(((rt0.c2)!=(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(((rt0.c2)<>(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(((rt0.c2)!=(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS NUMERIC)))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c1)<=(rt0.c1)) THEN CASE WHEN -708828384 THEN rt0.c0 END WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN 0.0925297536695796 THEN rt0.c0 END THEN ((rt0.c1)>>(rt0.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c1)<=(rt0.c1)) THEN CASE WHEN -708828384 THEN rt0.c0 END WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN 0.0925297536695796 THEN rt0.c0 END THEN ((rt0.c1)>>(rt0.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c1)<=(rt0.c1)) THEN CASE WHEN -708828384 THEN rt0.c0 END WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN 0.0925297536695796 THEN rt0.c0 END THEN ((rt0.c1)>>(rt0.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'')) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'')))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'')) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT TOTAL(CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL)) AS REAL)) FROM rt0 ORDER BY (((- (rt0.c0))) NOT NULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0X170a59cc) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0x170a59cc))) UNION ALL SELECT * FROM rt0 WHERE (((0x170a59cc) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(0.9378728861568214 AS TEXT))LIKE((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(0.9378728861568214 AS TEXT))LIKE((+ (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(0.9378728861568214 AS TEXT))LIKE((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)IS(rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)IS(rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL((MIN(rt0.c0) IN ())) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL((MIN(rt0.c0) IN ())))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL((MIN(rt0.c0) IN ()))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL((MIN(rt0.c0) IN ())) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL((MIN(rt0.c0) IN ())))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL((MIN(rt0.c0) IN ()))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN ((0.35770440690966476)<<(rt0.c0)) THEN (+ (rt0.c2)) WHEN (((rt0.c1))!=((rt0.c1))) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE CAST(rt0.c2 AS TEXT)  WHEN ((0.35770440690966476)<<(rt0.c0)) THEN (+ (rt0.c2)) WHEN (((rt0.c1))!=((rt0.c1))) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE CAST(rt0.c2 AS TEXT)  WHEN ((0.35770440690966476)<<(rt0.c0)) THEN (+ (rt0.c2)) WHEN (((rt0.c1))<>((rt0.c1))) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((CASE 0.6587816990452985  WHEN rt0.c1 THEN rt0.c0 END)OR(HEX(DISTINCT rt0.c1))))OR(CASE rt0.c1  WHEN NULL THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((CASE 0.6587816990452985  WHEN rt0.c1 THEN rt0.c0 END)OR(HEX(DISTINCT rt0.c1))))OR(CASE rt0.c1  WHEN NULL THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((CASE 0.6587816990452985  WHEN rt0.c1 THEN rt0.c0 END)OR(HEX(DISTINCT rt0.c1))))OR(CASE rt0.c1  WHEN NULL THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) THEN (- (rt0.c1)) WHEN rt0.c1 THEN ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(NULL)))AND(rt0.c2)) WHEN ((rt0.c2)||(x'')) THEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) THEN (- (rt0.c1)) WHEN rt0.c1 THEN ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(NULL)))AND(rt0.c2)) WHEN ((rt0.c2)||(x'')) THEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) THEN (- (rt0.c1)) WHEN rt0.c1 THEN ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(NULL)))AND(rt0.c2)) WHEN ((rt0.c2)||(x'')) THEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(((((TOTAL(rt0.c0))OR(MAX(rt0.c1))))AND(AVG(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(((((TOTAL(rt0.c0))OR(MAX(rt0.c1))))AND(AVG(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(((((TOTAL(rt0.c0))OR(MAX(rt0.c1))))AND(AVG(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(0.6587816990452985 AS REAL))+(load_extension(rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(0.6587816990452985 AS REAL))+(load_extension(rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(0.6587816990452985 AS REAL))+(load_extension(rt0.c2)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((NOT (rt0.c0))) ISNULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((NOT (rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(((((SUM(rt0.c2))OR(rt0.c0)))OR(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(((((SUM(rt0.c2))OR(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(((((SUM(rt0.c2))OR(rt0.c0)))OR(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)|(((rt0.c0)AND(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)|(((rt0.c0)AND(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)|(((rt0.c0)AND(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ('-248188318') UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ('-248188318'))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((('-248188318') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((UPPER(rt0.c1))) AND ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((UPPER(rt0.c1))) AND ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((UPPER(rt0.c1))) AND ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(((SUM(rt0.c1))-(MAX(COUNT(COUNT(*)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(((SUM(rt0.c1))-(MAX(COUNT(COUNT(*)))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(((SUM(rt0.c1))-(MAX(COUNT(COUNT(*))))))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2)/(rt0.c1)))>=(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)/(rt0.c1)))>=(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)/(rt0.c1)))>=(rt0.c1))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0))) ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE (rt0.c2 IN ())  WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0))) ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE (rt0.c2 IN ())  WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0))) ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c1) IS TRUE) COLLATE RTRIM UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((rt0.c1) IS TRUE) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((rt0.c1) IS TRUE) COLLATE RTRIM) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c1) IS TRUE) COLLATE RTRIM UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((rt0.c1) IS TRUE) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((rt0.c1) IS TRUE) COLLATE RTRIM) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT SUM((NOT (((rt0.c2)==(rt0.c0))))) FROM rt0 ORDER BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (561607470) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (561607470))) UNION ALL SELECT * FROM rt0 WHERE (((561607470) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (NULLIF(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (NULLIF(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((NULLIF(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) THEN rt0.c1 COLLATE RTRIM END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) THEN rt0.c1 COLLATE RTRIM END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) THEN rt0.c1 COLLATE RTRIM END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((((((rt0.c1, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c1)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c1) IS TRUE)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c1)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c1) IS TRUE)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c1)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c1) IS TRUE)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((json_object(rt0.c0, rt0.c1, 'J?p<pY', NULL)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((json_object(rt0.c0, rt0.c1, 'J?p<pY', NULL)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((json_object(rt0.c0, rt0.c1, 'J?p<pY', NULL)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE rt0.c2 COLLATE NOCASE END) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE rt0.c2 COLLATE NOCASE END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE rt0.c2 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(CASE AVG(GROUP_CONCAT(rt0.c2))  WHEN COUNT(*) THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))) THEN rt0.c0 END) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(CASE AVG(GROUP_CONCAT(rt0.c2))  WHEN COUNT(*) THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))) THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(CASE AVG(GROUP_CONCAT(rt0.c2))  WHEN COUNT(*) THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))) THEN rt0.c0 END)) ISNULL);
SELECT TOTAL((rt0.c0 IN (x'', LTRIM(rt0.c1, rt0.c0)))) FROM rt0 ORDER BY TRIM(rt0.c0);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c0)))GLOB(x''))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (rt0.c0)))GLOB(x''))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c0)))GLOB(x''))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (x'ee6d') GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x'ee6d'))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((x'ee6d') ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)AND((- (rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM)AND((- (rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)AND((- (rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (TRIM(rt0.c1 COLLATE NOCASE)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (TRIM(rt0.c1 COLLATE NOCASE)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((TRIM(rt0.c1 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.304245110881747)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.304245110881747)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.304245110881747)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 ELSE (+ (0.6308393679770928)) END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 ELSE (+ (0.6308393679770928)) END)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 ELSE (+ (0.6308393679770928)) END) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 ELSE (+ (0.6308393679770928)) END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 ELSE (+ (0.6308393679770928)) END)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 ELSE (+ (0.6308393679770928)) END) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT MIN((((NOT (rt0.c0)))%(rt0.c1 COLLATE NOCASE))) FROM rt0 ORDER BY TYPEOF((((rt0.c1))>((rt0.c2))));
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0)))LIKE(CASE WHEN '0.5220804492723581' THEN rt0.c0 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((~ (rt0.c0)))LIKE(CASE WHEN '0.5220804492723581' THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE ((((((~ (rt0.c0)))LIKE(CASE WHEN '0.5220804492723581' THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1)))-(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c1)))-(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))-(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN json_array(rt0.c0, x'66effe01', rt0.c2, rt0.c1) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CASE WHEN rt0.c0 THEN rt0.c1 END END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE (- (rt0.c1))  WHEN json_array(rt0.c0, x'66effe01', rt0.c2, rt0.c1) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CASE WHEN rt0.c0 THEN rt0.c1 END END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE (- (rt0.c1))  WHEN json_array(rt0.c0, x'66effe01', rt0.c2, rt0.c1) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CASE WHEN rt0.c0 THEN rt0.c1 END END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(CAST(MAX(rt0.c1) AS TEXT)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(CAST(MAX(rt0.c1) AS TEXT)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(CAST(MAX(rt0.c1) AS TEXT))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN ('yC*d\r>⺐') AND (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOT BETWEEN ('yC*d\r>⺐') AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 IN ())) NOT BETWEEN ('yC*d\r>⺐') AND (rt0.c2))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c1)/(COUNT(*))) COLLATE NOCASE UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((rt0.c1)/(COUNT(*))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((rt0.c1)/(COUNT(*))) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c1)/(COUNT(*))) COLLATE NOCASE UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((rt0.c1)/(COUNT(*))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((rt0.c1)/(COUNT(*))) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2)>(''))) NOT NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)>(''))) NOT NULL)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c2)>(''))) NOT NULL)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((0.4292873589227162)>>(((((-750916122)AND(rt0.c0)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((0.4292873589227162)>>(((((-750916122)AND(rt0.c0)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((0.4292873589227162)>>(((((-750916122)AND(rt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((+ (rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((+ (rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c0)+(rt0.c2))) ISNULL) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c0)+(rt0.c2))) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((rt0.c0)+(rt0.c2))) ISNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c0)+(rt0.c2))) ISNULL) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c0)+(rt0.c2))) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((rt0.c0)+(rt0.c2))) ISNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(x'' AS NUMERIC)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(x'' AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(x'' AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (TRIM(DISTINCT rt0.c0, rt0.c0) COLLATE BINARY) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (TRIM(DISTINCT rt0.c0, rt0.c0) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0, rt0.c0) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(rt0.c0) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(rt0.c0)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(rt0.c0) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(rt0.c0)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c1)<(NULL))  WHEN ((rt0.c1) IS TRUE) THEN CAST(rt0.c2 AS REAL) END) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)<(NULL))  WHEN ((rt0.c1) IS TRUE) THEN CAST(rt0.c2 AS REAL) END))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c1)<(NULL))  WHEN ((rt0.c1) IS TRUE) THEN CAST(rt0.c2 AS REAL) END) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)*(rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)*(rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)*(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))<<(((x'')IS(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT))<<(((x'')IS(rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))<<(((x'')IS(rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(SUM(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(SUM(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))IS(rt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))IS(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2 IN ()))IS(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((- (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((- (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((- (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(MAX(rt0.c1)) IN (SUM(rt0.c1))) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((TOTAL(MAX(rt0.c1)) IN (SUM(rt0.c1))) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((TOTAL(MAX(rt0.c1)) IN (SUM(rt0.c1))) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(MAX(rt0.c1)) IN (SUM(rt0.c1))) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((TOTAL(MAX(rt0.c1)) IN (SUM(rt0.c1))) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((TOTAL(MAX(rt0.c1)) IN (SUM(rt0.c1))) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE (((rt0.c0))=((rt0.c1)))  WHEN (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE (((rt0.c0))==((rt0.c1)))  WHEN (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CASE (((rt0.c0))=((rt0.c1)))  WHEN (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL MAX(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE COLLATE NOCASE) FROM rt0 ORDER BY ((0.13684983033891462) NOT NULL)  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN '2019234866' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c0)*(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN '2019234866' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c0)*(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN '2019234866' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c0)*(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE (CAST(CAST(0Xffffffffdc20f83c AS INTEGER) AS REAL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(0Xffffffffdc20f83c AS INTEGER) AS REAL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(CAST(0Xffffffffdc20f83c AS INTEGER) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((((LOWER(rt0.c2))AND(GROUP_CONCAT(0.1072955399951413))))AND(COUNT(rt0.c1))))OR(COUNT(*))))AND(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((((((LOWER(rt0.c2))AND(GROUP_CONCAT(0.1072955399951413))))AND(COUNT(rt0.c1))))OR(COUNT(*))))AND(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((((((LOWER(rt0.c2))AND(GROUP_CONCAT(0.1072955399951413))))AND(COUNT(rt0.c1))))OR(COUNT(*))))AND(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((((LOWER(rt0.c2))AND(GROUP_CONCAT(0.1072955399951413))))AND(COUNT(rt0.c1))))OR(COUNT(*))))AND(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((((((LOWER(rt0.c2))AND(GROUP_CONCAT(0.1072955399951413))))AND(COUNT(rt0.c1))))OR(COUNT(*))))AND(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((((((LOWER(rt0.c2))AND(GROUP_CONCAT(0.1072955399951413))))AND(COUNT(rt0.c1))))OR(COUNT(*))))AND(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CAST((((rt0.c0, '', rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))) AS REAL)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c0, '', rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))) AS REAL)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c0, '', rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))) AS REAL)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((5.6160747E8)OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR('83')))AND(rt0.c0)))))OR(rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(load_extension(rt0.c2, rt0.c2)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((5.6160747E8)OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR('83')))AND(rt0.c0)))))OR(rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(load_extension(rt0.c2, rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((5.6160747E8)OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR('83')))AND(rt0.c0)))))OR(rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(load_extension(rt0.c2, rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c2))) IS TRUE)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)LIKE(rt0.c2))) IS TRUE)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)LIKE(rt0.c2))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(((rt0.c0) BETWEEN (COUNT(rt0.c2)) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(((rt0.c0) BETWEEN (COUNT(rt0.c2)) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(((rt0.c0) BETWEEN (COUNT(rt0.c2)) AND (rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT NULL))<=(((rt0.c2) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL))<=(((rt0.c2) NOT NULL)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c1) NOT NULL))<=(((rt0.c2) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((rt0.c2)-(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((rt0.c2)-(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((rt0.c2)-(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((NULL)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (((x'')+(rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((NULL)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (((x'')+(rt0.c1))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((NULL)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (((x'')+(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(json_object(COUNT(COUNT(*)), TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(json_object(COUNT(COUNT(*)), TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(json_object(COUNT(COUNT(*)), TOTAL(rt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT * FROM rt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL * FROM rt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((0X6bdbae69))))<(((rt0.c0) IS FALSE)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((0x6bdbae69))))<(((rt0.c0) IS FALSE)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((0X6bdbae69))))<(((rt0.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(SUM(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(SUM(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(SUM(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c2)IS NOT(rt0.c2)) WHEN 0.6969276806275231 THEN 753612801 COLLATE NOCASE WHEN ((((((((rt0.c1)OR(0.9784427488271523)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c1, rt0.c0, rt0.c2))) END) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c2)IS NOT(rt0.c2)) WHEN 0.6969276806275231 THEN 753612801 COLLATE NOCASE WHEN ((((((((rt0.c1)OR(0.9784427488271523)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c1, rt0.c0, rt0.c2))) END))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c2)IS NOT(rt0.c2)) WHEN 0.6969276806275231 THEN 753612801 COLLATE NOCASE WHEN ((((((((rt0.c1)OR(0.9784427488271523)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c1, rt0.c0, rt0.c2))) END) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (ABS(DISTINCT CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (ABS(DISTINCT CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((ABS(DISTINCT CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE TRIM(GROUP_CONCAT(rt0.c2))  WHEN ((rt0.c2) BETWEEN (SUM(AVG(rt0.c0))) AND (SUM(rt0.c1))) THEN rt0.c0 COLLATE BINARY WHEN (NOT (rt0.c1)) THEN COUNT(COUNT(MIN(TOTAL(COUNT(*))))) WHEN TOTAL(MAX(TOTAL(rt0.c0))) THEN MIN(0.039305979420689474) END UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE TRIM(GROUP_CONCAT(rt0.c2))  WHEN ((rt0.c2) BETWEEN (SUM(AVG(rt0.c0))) AND (SUM(rt0.c1))) THEN rt0.c0 COLLATE BINARY WHEN (NOT (rt0.c1)) THEN COUNT(COUNT(MIN(TOTAL(COUNT(*))))) WHEN TOTAL(MAX(TOTAL(rt0.c0))) THEN MIN(0.039305979420689474) END)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE TRIM(GROUP_CONCAT(rt0.c2))  WHEN ((rt0.c2) BETWEEN (SUM(AVG(rt0.c0))) AND (SUM(rt0.c1))) THEN rt0.c0 COLLATE BINARY WHEN (NOT (rt0.c1)) THEN COUNT(COUNT(MIN(TOTAL(COUNT(*))))) WHEN TOTAL(MAX(TOTAL(rt0.c0))) THEN MIN(0.039305979420689474) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE LOWER(DISTINCT rt0.c1) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN x'' THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE LOWER(DISTINCT rt0.c1) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN x'' THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE LOWER(DISTINCT rt0.c1) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ('1924497828') GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ('1924497828'))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((('1924497828') ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MIN(COUNT(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MIN(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MIN(COUNT(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c1) AND (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN ('') AND ((((rt0.c0, rt0.c2, '1307576894')) BETWEEN (('', rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) BETWEEN ('') AND ((((rt0.c0, rt0.c2, '1307576894')) BETWEEN (('', rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1)))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) BETWEEN ('') AND ((((rt0.c0, rt0.c2, '1307576894')) BETWEEN (('', rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((MAX(rt0.c1), TOTAL(rt0.c1), COUNT(AVG(COUNT(MAX(rt0.c2))))))<=((0Xffffffffdc27ff63, MAX(rt0.c0), COUNT(*)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((MAX(rt0.c1), TOTAL(rt0.c1), COUNT(AVG(COUNT(MAX(rt0.c2))))))<=((0xffffffffdc27ff63, MAX(rt0.c0), COUNT(*)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((MAX(rt0.c1), TOTAL(rt0.c1), COUNT(AVG(COUNT(MAX(rt0.c2))))))<=((0Xffffffffdc27ff63, MAX(rt0.c0), COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END  WHEN rt0.c0 THEN ((rt0.c1)IS(x'')) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END  WHEN rt0.c0 THEN ((rt0.c1)IS(x'')) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END  WHEN rt0.c0 THEN ((rt0.c1)IS(x'')) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((TOTAL_CHANGES())|(IFNULL(DISTINCT rt0.c2, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((TOTAL_CHANGES())|(IFNULL(DISTINCT rt0.c2, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((TOTAL_CHANGES())|(IFNULL(DISTINCT rt0.c2, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT((~ (COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT((~ (COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT((~ (COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0)!=(rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0)!=(rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)!=(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)|(rt0.c1)))<=(1.108946082E9))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)|(rt0.c1)))<=(1.108946082E9))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)|(rt0.c1)))<=(1.108946082E9))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT MAX((((((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, 0.10154560600559293, rt0.c0)) AND ((x'7cb8', rt0.c1, rt0.c0))))OR((NOT (rt0.c1)))))OR((rt0.c1 IN ())))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((CASE NULL  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '-338418621' THEN rt0.c1 ELSE rt0.c0 END IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((CASE NULL  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '-338418621' THEN rt0.c1 ELSE rt0.c0 END IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((CASE NULL  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '-338418621' THEN rt0.c1 ELSE rt0.c0 END IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (LIKE(rt0.c2, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), '5')) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LIKE(rt0.c2, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), '5')))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((LIKE(rt0.c2, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), '5')) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), (- (rt0.c1)))) AND ((((rt0.c1)||(rt0.c2)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN 'g7*v' THEN rt0.c0 WHEN rt0.c2 THEN -1022172501 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), (- (rt0.c1)))) AND ((((rt0.c1)||(rt0.c2)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN 'g7*v' THEN rt0.c0 WHEN rt0.c2 THEN -1022172501 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), (- (rt0.c1)))) AND ((((rt0.c1)||(rt0.c2)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN 'g7*v' THEN rt0.c0 WHEN rt0.c2 THEN -1022172501 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((ABS(rt0.c0)))==((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((ABS(rt0.c0)))==((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((ABS(rt0.c0)))=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (UPPER((('-601819076')>(rt0.c2)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (UPPER((('-601819076')>(rt0.c2)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((UPPER((('-601819076')>(rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(AVG(MIN(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(AVG(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(AVG(MIN(rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE (('-1550435787') BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (- (rt0.c1)) THEN UNLIKELY(rt0.c1) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE (('-1550435787') BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (- (rt0.c1)) THEN UNLIKELY(rt0.c1) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE (('-1550435787') BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (- (rt0.c1)) THEN UNLIKELY(rt0.c1) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)AND((rt0.c0 IN ()))))AND(NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)AND((rt0.c0 IN ()))))AND(NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)AND((rt0.c0 IN ()))))AND(NULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING SUM(rt0.c0) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SUM(rt0.c0) COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(rt0.c0) COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING SUM(rt0.c0) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SUM(rt0.c0) COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(rt0.c0) COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c1)OR(0.6947587853086111)))OR(rt0.c2)))OR(rt0.c1)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)))<>((+ (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c1)OR(0.6947587853086111)))OR(rt0.c2)))OR(rt0.c1)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)))<>((+ (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c1)OR(0.6947587853086111)))OR(rt0.c2)))OR(rt0.c1)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)))<>((+ (rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('284847470') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('284847470'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('284847470') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((COALESCE(DISTINCT x'324ce64f', rt0.c1))AND(LIKELIHOOD(rt0.c1, 0.6024085204803769))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((COALESCE(DISTINCT x'324ce64f', rt0.c1))AND(LIKELIHOOD(rt0.c1, 0.6024085204803769))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((COALESCE(DISTINCT x'324ce64f', rt0.c1))AND(LIKELIHOOD(rt0.c1, 0.6024085204803769))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(((GROUP_CONCAT(SUM(TOTAL(SUM(rt0.c1)))))>>(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((GROUP_CONCAT(SUM(TOTAL(SUM(rt0.c1)))))>>(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(((GROUP_CONCAT(SUM(TOTAL(SUM(rt0.c1)))))>>(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))&((rt0.c2 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))&((rt0.c2 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))&((rt0.c2 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((NULL)%(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((NULL)%(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((NULL)%(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((rt0.c1 IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (COUNT(rt0.c1)) AND (SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (COUNT(rt0.c1)) AND (SUM(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (COUNT(rt0.c1)) AND (SUM(rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (COUNT(rt0.c1)) AND (SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (COUNT(rt0.c1)) AND (SUM(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (COUNT(rt0.c1)) AND (SUM(rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS INTEGER)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2) NOT NULL) AS INTEGER)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2) NOT NULL) AS INTEGER)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c1)AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c1)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c1)AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c1)AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)>(rt0.c2))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)>(rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)>(rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((rt0.c2 IN ())) NOT NULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((rt0.c2 IN ())) NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((rt0.c2 IN ())) NOT NULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((rt0.c2 IN ())) NOT NULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((rt0.c2 IN ())) NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((rt0.c2 IN ())) NOT NULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((rt0.c0)&(rt0.c1)))OR((0.12399192048924412 IN ()))))OR(UNLIKELY(rt0.c1))))OR(((rt0.c2)>>(rt0.c2)))))OR((rt0.c0 IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((((rt0.c0)&(rt0.c1)))OR((0.12399192048924412 IN ()))))OR(UNLIKELY(rt0.c1))))OR(((rt0.c2)>>(rt0.c2)))))OR((rt0.c0 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((((rt0.c0)&(rt0.c1)))OR((0.12399192048924412 IN ()))))OR(UNLIKELY(rt0.c1))))OR(((rt0.c2)>>(rt0.c2)))))OR((rt0.c0 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c1)) AS REAL)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)AND(rt0.c1)) AS REAL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c2)AND(rt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ('1108946082') GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ('1108946082'))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((('1108946082') ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c1)%(GROUP_CONCAT(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((rt0.c1)%(GROUP_CONCAT(TOTAL(COUNT(*))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((rt0.c1)%(GROUP_CONCAT(TOTAL(COUNT(*)))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c2)<<(x'')))OR((NOT (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)<<(x'')))OR((NOT (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c2)<<(x'')))OR((NOT (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND ((NULL IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND ((NULL IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND ((NULL IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((~ (CASE WHEN rt0.c1 THEN rt0.c2 END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((~ (CASE WHEN rt0.c1 THEN rt0.c2 END))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((~ (CASE WHEN rt0.c1 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(rt0.c2) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(rt0.c2) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((~ (rt0.c1)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((~ (rt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((~ (rt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c2))) IS FALSE)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c0, 0.03909809343702464))) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c0, 0.03909809343702464))) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c0, 0.03909809343702464))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING IFNULL(TOTAL(rt0.c0), CASE rt0.c2  WHEN NULL THEN GROUP_CONCAT(MIN(rt0.c2)) END) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (IFNULL(TOTAL(rt0.c0), CASE rt0.c2  WHEN NULL THEN GROUP_CONCAT(MIN(rt0.c2)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((IFNULL(TOTAL(rt0.c0), CASE rt0.c2  WHEN NULL THEN GROUP_CONCAT(MIN(rt0.c2)) END)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(CAST(rt0.c2 AS TEXT))))OR((+ (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(CAST(rt0.c2 AS TEXT))))OR((+ (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(CAST(rt0.c2 AS TEXT))))OR((+ (rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE ((+ (rt0.c0))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(rt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(rt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(0.17208095455690975 AS INTEGER)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(0.17208095455690975 AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(0.17208095455690975 AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((+ (rt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((+ (rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((+ (rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 END)AND(CAST(rt0.c1 AS NUMERIC))))OR(CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c2 THEN rt0.c2 END)AND(CAST(rt0.c1 AS NUMERIC))))OR(CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((CASE WHEN rt0.c2 THEN rt0.c2 END)AND(CAST(rt0.c1 AS NUMERIC))))OR(CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((x'3a13')LIKE(TOTAL(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((x'3a13')LIKE(TOTAL(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((x'3a13')LIKE(TOTAL(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT (('̀' IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (('̀' IN ())))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (('̀' IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (TRIM(DISTINCT (- (rt0.c1)), rt0.c0)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (TRIM(DISTINCT (- (rt0.c1)), rt0.c0)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((TRIM(DISTINCT (- (rt0.c1)), rt0.c0)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c2)GLOB(rt0.c1)))))AND(((((rt0.c1)AND('220312431')))OR(rt0.c2)))))AND(((rt0.c1)>=(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c2)GLOB(rt0.c1)))))AND(((((rt0.c1)AND('220312431')))OR(rt0.c2)))))AND(((rt0.c1)>=(rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c2)GLOB(rt0.c1)))))AND(((((rt0.c1)AND('220312431')))OR(rt0.c2)))))AND(((rt0.c1)>=(rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MIN(CASE rt0.c1  WHEN MAX(COUNT(rt0.c0)) THEN COUNT(rt0.c0) WHEN rt0.c2 THEN rt0.c1 WHEN COUNT(COUNT(GROUP_CONCAT(MIN(rt0.c1)))) THEN rt0.c0 ELSE COUNT(*) END) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(CASE rt0.c1  WHEN MAX(COUNT(rt0.c0)) THEN COUNT(rt0.c0) WHEN rt0.c2 THEN rt0.c1 WHEN COUNT(COUNT(GROUP_CONCAT(MIN(rt0.c1)))) THEN rt0.c0 ELSE COUNT(*) END))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(CASE rt0.c1  WHEN MAX(COUNT(rt0.c0)) THEN COUNT(rt0.c0) WHEN rt0.c2 THEN rt0.c1 WHEN COUNT(COUNT(GROUP_CONCAT(MIN(rt0.c1)))) THEN rt0.c0 ELSE COUNT(*) END)) ISNULL);
SELECT MIN((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) IN ())) FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c2)IS(rt0.c2)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)IS(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c2)IS(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (json_type(rt0.c0) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (json_type(rt0.c0) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((json_type(rt0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((~ (LOWER(DISTINCT rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ (LOWER(DISTINCT rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (LOWER(DISTINCT rt0.c1)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ('-800114810') UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('-800114810'))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((('-800114810') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE ((rt0.c2) ISNULL)  WHEN (((SUM(TOTAL(TOTAL(MIN(AVG(COUNT(rt0.c2))))))))=((rt0.c2))) THEN ((((((((((((TOTAL(MIN(MAX(rt0.c0))))OR(rt0.c2)))AND(NULL)))OR(AVG('\rr?|'))))AND(MIN(COUNT(*)))))OR(rt0.c0)))AND(0.3914680204113531)) END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE ((rt0.c2) ISNULL)  WHEN (((SUM(TOTAL(TOTAL(MIN(AVG(COUNT(rt0.c2))))))))=((rt0.c2))) THEN ((((((((((((TOTAL(MIN(MAX(rt0.c0))))OR(rt0.c2)))AND(NULL)))OR(AVG('\rr?|'))))AND(MIN(COUNT(*)))))OR(rt0.c0)))AND(0.3914680204113531)) END)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE ((rt0.c2) ISNULL)  WHEN (((SUM(TOTAL(TOTAL(MIN(AVG(COUNT(rt0.c2))))))))=((rt0.c2))) THEN ((((((((((((TOTAL(MIN(MAX(rt0.c0))))OR(rt0.c2)))AND(NULL)))OR(AVG('\rr?|'))))AND(MIN(COUNT(*)))))OR(rt0.c0)))AND(0.3914680204113531)) END) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN 0.52122558223813 ELSE rt0.c0 END))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (CASE rt0.c2  WHEN rt0.c0 THEN 0.52122558223813 ELSE rt0.c0 END))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (CASE rt0.c2  WHEN rt0.c0 THEN 0.52122558223813 ELSE rt0.c0 END))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST((NOT (rt0.c2)) AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c2)) AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST((NOT (rt0.c2)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END IN ())) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END IN ())))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((SUM(rt0.c2))OR(TOTAL(AVG(']0jY')))))OR(IFNULL(SUM(COUNT(SUM(rt0.c0))), TOTAL(NULL)))))AND(COUNT(rt0.c1))))OR(SUM(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((((((SUM(rt0.c2))OR(TOTAL(AVG(']0jY')))))OR(IFNULL(SUM(COUNT(SUM(rt0.c0))), TOTAL(NULL)))))AND(COUNT(rt0.c1))))OR(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((SUM(rt0.c2))OR(TOTAL(AVG(']0jY')))))OR(IFNULL(SUM(COUNT(SUM(rt0.c0))), TOTAL(NULL)))))AND(COUNT(rt0.c1))))OR(SUM(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((CAST(-615240178 AS NUMERIC), (rt0.c1 IN ()), '0.2826958399583501' COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (+ (rt0.c1)), ((rt0.c0)>(rt0.c2)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((CAST(-615240178 AS NUMERIC), (rt0.c1 IN ()), '0.2826958399583501' COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (+ (rt0.c1)), ((rt0.c0)>(rt0.c2)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((CAST(-615240178 AS NUMERIC), (rt0.c1 IN ()), '0.2826958399583501' COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (+ (rt0.c1)), ((rt0.c0)>(rt0.c2)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)IS(rt0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)GLOB(rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c0 AS REAL) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)IS(rt0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)GLOB(rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c0 AS REAL) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)IS(rt0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1)GLOB(rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c0 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c1, ((rt0.c0) NOTNULL), CAST(rt0.c1 AS BLOB)))<=(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c1) ISNULL), (rt0.c0 IN ()))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1, ((rt0.c0) NOTNULL), CAST(rt0.c1 AS BLOB)))<=(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c1) ISNULL), (rt0.c0 IN ()))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c1, ((rt0.c0) NOTNULL), CAST(rt0.c1 AS BLOB)))<=(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c1) ISNULL), (rt0.c0 IN ()))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(MIN(SUM(TOTAL(0.04647604331354094)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(SUM(TOTAL(0.04647604331354094)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(MIN(SUM(TOTAL(0.04647604331354094))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (('0.8507152431581015' IN ((((rt0.c0, rt0.c2, rt0.c0))<>((rt0.c0, rt0.c2, rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (('0.8507152431581015' IN ((((rt0.c0, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c2, rt0.c1)))))))) UNION ALL SELECT * FROM rt0 WHERE (((('0.8507152431581015' IN ((((rt0.c0, rt0.c2, rt0.c0))<>((rt0.c0, rt0.c2, rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.6029180740351343)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((LIKELIHOOD(DISTINCT rt0.c0, 0.6029180740351343)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c0, 0.6029180740351343)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (NULL) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, rtreenode(NULL, rt0.c1), x''))!=(((+ (rt0.c0)), json_object(NULL, rt0.c2, rt0.c0, rt0.c2), ((rt0.c0) ISNULL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, rtreenode(NULL, rt0.c1), x''))<>(((+ (rt0.c0)), json_object(NULL, rt0.c2, rt0.c0, rt0.c2), ((rt0.c0) ISNULL))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, rtreenode(NULL, rt0.c1), x''))<>(((+ (rt0.c0)), json_object(NULL, rt0.c2, rt0.c0, rt0.c2), ((rt0.c0) ISNULL))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'c346682d') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x'c346682d'))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'c346682d') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2, x'6b1b0a8a')))IS((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c2, x'6b1b0a8a')))IS((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, rt0.c1)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2, x'6b1b0a8a')))IS((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, rt0.c1)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TYPEOF(DISTINCT rt0.c2) COLLATE BINARY UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TYPEOF(DISTINCT rt0.c2) COLLATE BINARY)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TYPEOF(DISTINCT rt0.c2) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TYPEOF(DISTINCT rt0.c2) COLLATE BINARY UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TYPEOF(DISTINCT rt0.c2) COLLATE BINARY)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TYPEOF(DISTINCT rt0.c2) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (SQLITE_VERSION() COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (SQLITE_VERSION() COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE (((SQLITE_VERSION() COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c2)LIKE(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c0 AS NUMERIC), '345525533', ((rt0.c0)AND(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c2)LIKE(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c0 AS NUMERIC), '345525533', ((rt0.c0)AND(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c2)LIKE(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c0 AS NUMERIC), '345525533', ((rt0.c0)AND(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((~ ((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((~ ((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((~ ((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2)))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, GROUP_CONCAT(rt0.c1), rt0.c0)) AND ((AVG(GROUP_CONCAT(rt0.c2)), rt0.c2, MIN(COUNT(*))))))>(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, GROUP_CONCAT(rt0.c1), rt0.c0)) AND ((AVG(GROUP_CONCAT(rt0.c2)), rt0.c2, MIN(COUNT(*))))))>(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, GROUP_CONCAT(rt0.c1), rt0.c0)) AND ((AVG(GROUP_CONCAT(rt0.c2)), rt0.c2, MIN(COUNT(*))))))>(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (ABS(DISTINCT 0Xffffffffdc20f83c) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (ABS(DISTINCT 0xffffffffdc20f83c) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((ABS(DISTINCT 0xffffffffdc20f83c) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (HEX(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (HEX(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((HEX(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((TOTAL(rt0.c2))OR(COUNT(*))))AND(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((TOTAL(rt0.c2))OR(COUNT(*))))AND(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((TOTAL(rt0.c2))OR(COUNT(*))))AND(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((TOTAL(rt0.c2))OR(COUNT(*))))AND(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((TOTAL(rt0.c2))OR(COUNT(*))))AND(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((TOTAL(rt0.c2))OR(COUNT(*))))AND(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN (('0.5570739506276479') NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c0)OR(0.1318139243720946)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) ELSE ((rt0.c2) NOT NULL) END) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (('0.5570739506276479') NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c0)OR(0.1318139243720946)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) ELSE ((rt0.c2) NOT NULL) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN (('0.5570739506276479') NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c0)OR(0.1318139243720946)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) ELSE ((rt0.c2) NOT NULL) END) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LOWER(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LOWER(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c2)GLOB('1723408508')))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c2)GLOB('1723408508')))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c2)GLOB('1723408508')))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(rt0.c1)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(rt0.c1)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ('%i(}̀VBZ(' COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('%i(}̀VBZ(' COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((('%i(}̀VBZ(' COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(rt0.c1 AS BLOB)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS BLOB)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(rt0.c0) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(rt0.c0)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(rt0.c0) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(rt0.c0)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1))) IS TRUE)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1))) IS TRUE)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1))) IS TRUE)) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2) IS TRUE) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2) IS TRUE) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2)))+((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)>=(rt0.c2)))+((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c2)))+((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(rt0.c2) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(rt0.c2) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL COLLATE BINARY)<<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN x'' END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((NULL COLLATE BINARY)<<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN x'' END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((NULL COLLATE BINARY)<<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN x'' END))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE '0.645079771459754'  WHEN (~ (rt0.c0)) THEN '639119402' COLLATE RTRIM WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt0.c1)) WHEN (NOT (rt0.c0)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((x''))) END) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE '0.645079771459754'  WHEN (~ (rt0.c0)) THEN '639119402' COLLATE RTRIM WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt0.c1)) WHEN (NOT (rt0.c0)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((x''))) END))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE '0.645079771459754'  WHEN (~ (rt0.c0)) THEN '639119402' COLLATE RTRIM WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt0.c1)) WHEN (NOT (rt0.c0)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((x''))) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)AND(((rt0.c2) BETWEEN (rt0.c2) AND ('607448652')))))AND(((rt0.c2)%(rt0.c2)))))AND(((NULL)OR(rt0.c0)))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND(((rt0.c2) BETWEEN (rt0.c2) AND ('607448652')))))AND(((rt0.c2)%(rt0.c2)))))AND(((NULL)OR(rt0.c0)))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0)AND(((rt0.c2) BETWEEN (rt0.c2) AND ('607448652')))))AND(((rt0.c2)%(rt0.c2)))))AND(((NULL)OR(rt0.c0)))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(((rt0.c2) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(((rt0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(((rt0.c2) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(((rt0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN (((x'fc0b'))=((rt0.c1))) THEN rt0.c2 END) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (((x'fc0b'))==((rt0.c1))) THEN rt0.c2 END))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN (((x'fc0b'))=((rt0.c1))) THEN rt0.c2 END) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((x''))<(((rt0.c1 IN ()))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((x''))<(((rt0.c1 IN ()))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((x''))<(((rt0.c1 IN ()))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS TEXT)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST((rt0.c1 IN ()) AS TEXT)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CASE rt0.c2  WHEN QUOTE(rt0.c2) THEN MIN(AVG(TOTAL(TOTAL(COUNT('쓻}hP(k'))))) END UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CASE rt0.c2  WHEN QUOTE(rt0.c2) THEN MIN(AVG(TOTAL(TOTAL(COUNT('쓻}hP(k'))))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CASE rt0.c2  WHEN QUOTE(rt0.c2) THEN MIN(AVG(TOTAL(TOTAL(COUNT('쓻}hP(k'))))) END) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (RTRIM(rt0.c0) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (RTRIM(rt0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((RTRIM(rt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c1))  WHEN ((rt0.c0) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c0)>>(rt0.c1)) WHEN ((rt0.c0)||(rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) END) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE (rt0.c0 IN (rt0.c1))  WHEN ((rt0.c0) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c0)>>(rt0.c1)) WHEN ((rt0.c0)||(rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE (rt0.c0 IN (rt0.c1))  WHEN ((rt0.c0) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c0)>>(rt0.c1)) WHEN ((rt0.c0)||(rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN(CASE WHEN rt0.c0 THEN MAX(rt0.c0) WHEN rt0.c1 THEN MIN(MAX(NULL)) WHEN rt0.c2 THEN MAX(MAX(MAX(rt0.c0))) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(CASE WHEN rt0.c0 THEN MAX(rt0.c0) WHEN rt0.c1 THEN MIN(MAX(NULL)) WHEN rt0.c2 THEN MAX(MAX(MAX(rt0.c0))) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(CASE WHEN rt0.c0 THEN MAX(rt0.c0) WHEN rt0.c1 THEN MIN(MAX(NULL)) WHEN rt0.c2 THEN MAX(MAX(MAX(rt0.c0))) END)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((x'')OR((- (rt0.c1)))))OR(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((x'')OR((- (rt0.c1)))))OR(CAST(rt0.c1 AS INTEGER)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((x'')OR((- (rt0.c1)))))OR(CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c0)|(((rt0.c1)LIKE(rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)|(((rt0.c1)LIKE(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c0)|(((rt0.c1)LIKE(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))) AND (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (('863487172', rt0.c1, rt0.c2)) AND ((rt0.c1, -7.50916122E8, rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))) AND (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (('863487172', rt0.c1, rt0.c2)) AND ((rt0.c1, -7.50916122E8, rt0.c1))))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))) AND (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (('863487172', rt0.c1, rt0.c2)) AND ((rt0.c1, -7.50916122E8, rt0.c1))))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((~ ((((rt0.c1))>((rt0.c2)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((~ ((((rt0.c1))>((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((~ ((((rt0.c1))>((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(((rt0.c2)+(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(((rt0.c2)+(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(((rt0.c2)+(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(((rt0.c2)+(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(((rt0.c2)+(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(((rt0.c2)+(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((((((((rt0.c2)OR(rt0.c1)))AND(x'')))OR(rt0.c0)))OR(rt0.c2)) WHEN UNLIKELY(rt0.c2) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1)+(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0, rt0.c2, rt0.c2))>((x'', rt0.c0, rt0.c1))) WHEN ((rt0.c2)|(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN ((((((((rt0.c2)OR(rt0.c1)))AND(x'')))OR(rt0.c0)))OR(rt0.c2)) WHEN UNLIKELY(rt0.c2) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1)+(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0, rt0.c2, rt0.c2))>((x'', rt0.c0, rt0.c1))) WHEN ((rt0.c2)|(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN ((((((((rt0.c2)OR(rt0.c1)))AND(x'')))OR(rt0.c0)))OR(rt0.c2)) WHEN UNLIKELY(rt0.c2) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1)+(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0, rt0.c2, rt0.c2))>((x'', rt0.c0, rt0.c1))) WHEN ((rt0.c2)|(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(LOWER(DISTINCT rt0.c1)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT (((((rt0.c1 COLLATE BINARY)AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(LOWER(DISTINCT rt0.c1)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1 COLLATE BINARY)AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(LOWER(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MIN((- (AVG(MIN(SUM(SUM(AVG(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MIN((- (AVG(MIN(SUM(SUM(AVG(rt0.c0)))))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN((- (AVG(MIN(SUM(SUM(AVG(rt0.c0))))))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c1))) NOTNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)IS NOT(rt0.c1))) NOTNULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c1))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (TIME(CAST(rt0.c2 AS TEXT), (rt0.c0 IN (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (('-1169827285')%(rt0.c2)), ((rt0.c2)%(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (TIME(CAST(rt0.c2 AS TEXT), (rt0.c0 IN (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (('-1169827285')%(rt0.c2)), ((rt0.c2)%(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((TIME(CAST(rt0.c2 AS TEXT), (rt0.c0 IN (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (('-1169827285')%(rt0.c2)), ((rt0.c2)%(rt0.c2)))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0.43252294032808636)OR(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0.43252294032808636)OR(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0.43252294032808636)OR(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(x'' AS REAL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(x'' AS REAL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(x'' AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (SUM(AVG(rt0.c1)) IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((SUM(AVG(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((SUM(AVG(rt0.c1)) IN ())) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (SUM(AVG(rt0.c1)) IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((SUM(AVG(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((SUM(AVG(rt0.c1)) IN ())) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL MAX((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN (x'', ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((+ (rt0.c2))))<((CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((+ (rt0.c2))))<((CAST(rt0.c0 AS NUMERIC))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((+ (rt0.c2))))<((CAST(rt0.c0 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (LOWER(rt0.c1) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (LOWER(rt0.c1) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((LOWER(rt0.c1) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT((rt0.c1 IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT((rt0.c1 IN ()))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT((rt0.c1 IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT((rt0.c1 IN ()))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN HEX(DISTINCT rt0.c0) THEN rt0.c1 END) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN HEX(DISTINCT rt0.c0) THEN rt0.c1 END))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN HEX(DISTINCT rt0.c0) THEN rt0.c1 END) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c0)<('-51450100')) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)<('-51450100')) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c0)<('-51450100')) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOT NULL)) NOT NULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c1) NOT NULL)) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING TOTAL((((MIN(rt0.c1)))>((rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL((((MIN(rt0.c1)))>((rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL((((MIN(rt0.c1)))>((rt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (-1255436621) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (-1255436621))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((-1255436621) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (rt0.c1) AND ((((rt0.c2))=((rt0.c2)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) BETWEEN (rt0.c1) AND ((((rt0.c2))==((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN ())) BETWEEN (rt0.c1) AND ((((rt0.c2))=((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((SUBSTR(x'', rt0.c0), rt0.c1 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c1)), rt0.c1 COLLATE NOCASE, (+ (rt0.c1)), (((rt0.c1))<=((rt0.c1))), ((rt0.c1)AND(rt0.c0))))>=((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, CASE '1246304502'  WHEN rt0.c1 THEN '-47391923' END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (NOT (rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c2)OR(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((SUBSTR(x'', rt0.c0), rt0.c1 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c1)), rt0.c1 COLLATE NOCASE, (+ (rt0.c1)), (((rt0.c1))<=((rt0.c1))), ((rt0.c1)AND(rt0.c0))))>=((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, CASE '1246304502'  WHEN rt0.c1 THEN '-47391923' END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (NOT (rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c2)OR(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((SUBSTR(x'', rt0.c0), rt0.c1 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c1)), rt0.c1 COLLATE NOCASE, (+ (rt0.c1)), (((rt0.c1))<=((rt0.c1))), ((rt0.c1)AND(rt0.c0))))>=((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, CASE '1246304502'  WHEN rt0.c1 THEN '-47391923' END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (NOT (rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c2)OR(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (~ (rt0.c1)) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((~ (rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((~ (rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (~ (rt0.c1)) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((~ (rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((~ (rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((TRIM(rt0.c2, rt0.c2))OR(((rt0.c0)GLOB(rt0.c1)))))OR((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((TRIM(rt0.c2, rt0.c2))OR(((rt0.c0)GLOB(rt0.c1)))))OR((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((TRIM(rt0.c2, rt0.c2))OR(((rt0.c0)GLOB(rt0.c1)))))OR((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))!=(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))!=(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))<>(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (- (AVG(rt0.c1) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((- (AVG(rt0.c1) COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((- (AVG(rt0.c1) COLLATE NOCASE))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (- (AVG(rt0.c1) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((- (AVG(rt0.c1) COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((- (AVG(rt0.c1) COLLATE NOCASE))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (json_valid(rt0.c2)) AND (((rt0.c2)==(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (json_valid(rt0.c2)) AND (((rt0.c2)==(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (json_valid(rt0.c2)) AND (((rt0.c2)==(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM(((0.18617308744258043)<(SUM(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(((0.18617308744258043)<(SUM(AVG(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(((0.18617308744258043)<(SUM(AVG(rt0.c1)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (json_array(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (json_array(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((json_array(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((-708828384 IN ())) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((-708828384 IN ())))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((-708828384 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(rt0.c2))<=(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((SUM(rt0.c2))<=(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((SUM(rt0.c2))<=(TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(rt0.c2))<=(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((SUM(rt0.c2))<=(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((SUM(rt0.c2))<=(TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)GLOB(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)GLOB(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c1 END))>=((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c1 END))>=((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c1 END))>=((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING SQLITE_VERSION() UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING SQLITE_VERSION() UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(json_valid(rt0.c1))))OR((NOT (rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((CAST(rt0.c1 AS NUMERIC))AND(json_valid(rt0.c1))))OR((NOT (rt0.c2))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((CAST(rt0.c1 AS NUMERIC))AND(json_valid(rt0.c1))))OR((NOT (rt0.c2))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((('', CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c2)IS(rt0.c2))))>((PRINTF(rt0.c2), NULL, (NOT (rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((('', CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c2)IS(rt0.c2))))>((PRINTF(rt0.c2), NULL, (NOT (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((('', CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c2)IS(rt0.c2))))>((PRINTF(rt0.c2), NULL, (NOT (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((NOT (rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)))OR((rt0.c2 IN (rt0.c1)))))OR(((rt0.c1) IS TRUE)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((((((NOT (rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)))OR((rt0.c2 IN (rt0.c1)))))OR(((rt0.c1) IS TRUE)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((((NOT (rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)))OR((rt0.c2 IN (rt0.c1)))))OR(((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(((rt0.c2) IS TRUE)) UNION ALL SELECT ALL rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1 HAVING (NOT (AVG(((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(((rt0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(((rt0.c2) IS TRUE)) UNION ALL SELECT ALL rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1 HAVING (NOT (AVG(((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(((rt0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL MAX(((((((rt0.c0)-(0.9667782930325411)))AND(rt0.c1)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((1.787072346E9, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((1.787072346E9, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((1.787072346E9, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)GLOB(rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c2)GLOB(rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST('Sp' AS NUMERIC)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST('Sp' AS NUMERIC)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST('Sp' AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(rt0.c2) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(rt0.c2) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (NULL) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((COUNT(*))<(MAX(MIN(AVG(COUNT(rt0.c0)))))))<=(MAX(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((COUNT(*))<(MAX(MIN(AVG(COUNT(rt0.c0)))))))<=(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((COUNT(*))<(MAX(MIN(AVG(COUNT(rt0.c0)))))))<=(MAX(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (rt0.c1))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c2))<=((rt0.c1))))+(((0.9378728861568214) ISNULL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2))<=((rt0.c1))))+(((0.9378728861568214) ISNULL)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((((rt0.c2))<=((rt0.c1))))+(((0.9378728861568214) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1) IS FALSE))>>(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE))>>(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) IS FALSE))>>(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(rt0.c0) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c0) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(rt0.c0) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c0) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((UNLIKELY(DISTINCT rt0.c0))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)))AND(rt0.c2)))AND((rt0.c2 IN ()))))AND(((rt0.c1)>=(rt0.c0)))))OR(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((UNLIKELY(DISTINCT rt0.c0))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)))AND(rt0.c2)))AND((rt0.c2 IN ()))))AND(((rt0.c1)>=(rt0.c0)))))OR(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((((UNLIKELY(DISTINCT rt0.c0))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)))AND(rt0.c2)))AND((rt0.c2 IN ()))))AND(((rt0.c1)>=(rt0.c0)))))OR(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE LIKELY(DISTINCT rt0.c1)  WHEN COALESCE(rt0.c1, rt0.c0, NULL, rt0.c1, rt0.c1, rt0.c2) THEN ((rt0.c1)|(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE LIKELY(DISTINCT rt0.c1)  WHEN COALESCE(rt0.c1, rt0.c0, NULL, rt0.c1, rt0.c1, rt0.c2) THEN ((rt0.c1)|(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE LIKELY(DISTINCT rt0.c1)  WHEN COALESCE(rt0.c1, rt0.c0, NULL, rt0.c1, rt0.c1, rt0.c2) THEN ((rt0.c1)|(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((HEX('Lo䣷ALNx'))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c1 IN ())))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((HEX('Lo䣷ALNx'))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c1 IN ())))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((HEX('Lo䣷ALNx'))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((('845443775' COLLATE NOCASE))<=((((rt0.c2) BETWEEN (MIN(COUNT(*))) AND (SUM(MIN(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((('845443775' COLLATE NOCASE))<=((((rt0.c2) BETWEEN (MIN(COUNT(*))) AND (SUM(MIN(rt0.c2))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((('845443775' COLLATE NOCASE))<=((((rt0.c2) BETWEEN (MIN(COUNT(*))) AND (SUM(MIN(rt0.c2)))))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c2) IS FALSE) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) END) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c2) IS FALSE) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) END))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c2) IS FALSE) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) END) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) IS FALSE))OR(((rt0.c1) NOT NULL))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN '0.4831276005367201' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN x'76f6' THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2) IS FALSE))OR(((rt0.c1) NOT NULL))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN '0.4831276005367201' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN x'76f6' THEN rt0.c0 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2) IS FALSE))OR(((rt0.c1) NOT NULL))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN '0.4831276005367201' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN x'76f6' THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((TRIM(rt0.c0)) NOT BETWEEN (rt0.c2) AND ((+ (rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((TRIM(rt0.c0)) NOT BETWEEN (rt0.c2) AND ((+ (rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((TRIM(rt0.c0)) NOT BETWEEN (rt0.c2) AND ((+ (rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(rt0.c2))|(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((AVG(rt0.c2))|(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((AVG(rt0.c2))|(COUNT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(rt0.c2))|(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((AVG(rt0.c2))|(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((AVG(rt0.c2))|(COUNT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) AND (CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) AND (CAST(rt0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) AND (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0)))OR(rt0.c2)) COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0)))OR(rt0.c2)) COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0)))OR(rt0.c2)) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CASE (((rt0.c1, 0.8602051025784092, rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1, rt0.c0, NULL)))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN CASE WHEN rt0.c0 THEN '863487172' WHEN '-2094873589' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE (((rt0.c1, 0.8602051025784092, rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1, rt0.c0, NULL)))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN CASE WHEN rt0.c0 THEN '863487172' WHEN '-2094873589' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE (((rt0.c1, 0.8602051025784092, rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1, rt0.c0, NULL)))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN CASE WHEN rt0.c0 THEN '863487172' WHEN '-2094873589' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(COUNT(*)))==(COUNT(GROUP_CONCAT(MAX(SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MIN(COUNT(*)))=(COUNT(GROUP_CONCAT(MAX(SUM(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MIN(COUNT(*)))=(COUNT(GROUP_CONCAT(MAX(SUM(rt0.c0))))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c0))AND(rt0.c2)))OR(NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c0))AND(rt0.c2)))OR(NULL))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c0))AND(rt0.c2)))OR(NULL))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((((rt0.c2))<>((rt0.c1))), 0.6969276806275231, rt0.c2 COLLATE RTRIM, ((rt0.c0)-(rt0.c1)), json_object(rt0.c1, rt0.c1, rt0.c2, rt0.c1))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c1)AND(rt0.c2)), rt0.c1, rt0.c1 COLLATE RTRIM, rt0.c2 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((((rt0.c2))<>((rt0.c1))), 0.6969276806275231, rt0.c2 COLLATE RTRIM, ((rt0.c0)-(rt0.c1)), json_object(rt0.c1, rt0.c1, rt0.c2, rt0.c1))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c1)AND(rt0.c2)), rt0.c1, rt0.c1 COLLATE RTRIM, rt0.c2 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((((rt0.c2))!=((rt0.c1))), 0.6969276806275231, rt0.c2 COLLATE RTRIM, ((rt0.c0)-(rt0.c1)), json_object(rt0.c1, rt0.c1, rt0.c2, rt0.c1))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c1)AND(rt0.c2)), rt0.c1, rt0.c1 COLLATE RTRIM, rt0.c2 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((NOT (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING -405348132 UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (-405348132)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((-405348132) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING -405348132 UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (-405348132)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((-405348132) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT MAX('227309775') FROM rt0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0))))>=((+ (rt0.c0)))) DESC  NULLS LAST, (NOT (rt0.c1));
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE BINARY DESC;
SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c2 COLLATE BINARY)))))) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE BINARY DESC;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) ISNULL)) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE BINARY DESC;
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))AND('0.1973448107750676')))OR((((rt0.c1, rt0.c1, 0.09906170371009837, rt0.c1, rt0.c2))=((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c2))))))OR(json_insert(rt0.c0, rt0.c0, rt0.c2))))AND(rt0.c0)))AND((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((0.13019193146488894, rt0.c1, rt0.c1)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((((rt0.c0)AND(rt0.c1)))AND('0.1973448107750676')))OR((((rt0.c1, rt0.c1, 0.09906170371009837, rt0.c1, rt0.c2))==((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c2))))))OR(json_insert(rt0.c0, rt0.c0, rt0.c2))))AND(rt0.c0)))AND((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((0.13019193146488894, rt0.c1, rt0.c1)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))AND('0.1973448107750676')))OR((((rt0.c1, rt0.c1, 0.09906170371009837, rt0.c1, rt0.c2))==((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c2))))))OR(json_insert(rt0.c0, rt0.c0, rt0.c2))))AND(rt0.c0)))AND((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((0.13019193146488894, rt0.c1, rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(((COUNT(*))>(SUM(rt0.c2))) AS TEXT) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(((COUNT(*))>(SUM(rt0.c2))) AS TEXT))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(((COUNT(*))>(SUM(rt0.c2))) AS TEXT)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(((COUNT(*))>(SUM(rt0.c2))) AS TEXT) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(((COUNT(*))>(SUM(rt0.c2))) AS TEXT))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(((COUNT(*))>(SUM(rt0.c2))) AS TEXT)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))<((((((((('')AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))<((((((((('')AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))<((((((((('')AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c1)/(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c1)IS(rt0.c2)) THEN (rt0.c1 IN ()) ELSE (rt0.c1 IN (6.07448652E8, rt0.c0)) END) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)/(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c1)IS(rt0.c2)) THEN (rt0.c1 IN ()) ELSE (rt0.c1 IN (6.07448652E8, rt0.c0)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)/(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c1)IS(rt0.c2)) THEN (rt0.c1 IN ()) ELSE (rt0.c1 IN (6.07448652E8, rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((+ (((rt0.c0)*(rt0.c2))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((+ (((rt0.c0)*(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ (((rt0.c0)*(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (MIN(rt0.c1) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((MIN(rt0.c1) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((MIN(rt0.c1) IN ())) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (MIN(rt0.c1) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((MIN(rt0.c1) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((MIN(rt0.c1) IN ())) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((((((((((rt0.c1, rt0.c0, 0x7d0fbb39)) BETWEEN ((rt0.c0, x'bf11', rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))OR(((x'')<<(rt0.c0)))))OR(((rt0.c1)*(rt0.c1)))))OR(((rt0.c0)<=(rt0.c1)))))AND(((rt0.c0)*(rt0.c0)))))OR(rt0.c1)))AND(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((((((((((((rt0.c1, rt0.c0, 0x7d0fbb39)) BETWEEN ((rt0.c0, x'bf11', rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))OR(((x'')<<(rt0.c0)))))OR(((rt0.c1)*(rt0.c1)))))OR(((rt0.c0)<=(rt0.c1)))))AND(((rt0.c0)*(rt0.c0)))))OR(rt0.c1)))AND(CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((((((((((((((((rt0.c1, rt0.c0, 0x7d0fbb39)) BETWEEN ((rt0.c0, x'bf11', rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))OR(((x'')<<(rt0.c0)))))OR(((rt0.c1)*(rt0.c1)))))OR(((rt0.c0)<=(rt0.c1)))))AND(((rt0.c0)*(rt0.c0)))))OR(rt0.c1)))AND(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((((((rt0.c1))>=((rt0.c2))))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0) BETWEEN ('%I<m') AND (rt0.c1)))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((((((rt0.c1))>=((rt0.c2))))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0) BETWEEN ('%I<m') AND (rt0.c1)))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((rt0.c1))>=((rt0.c2))))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0) BETWEEN ('%I<m') AND (rt0.c1)))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN 'Dq' THEN CAST(rt0.c0 AS TEXT) ELSE TYPEOF(DISTINCT rt0.c1) END) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN 'Dq' THEN CAST(rt0.c0 AS TEXT) ELSE TYPEOF(DISTINCT rt0.c1) END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN 'Dq' THEN CAST(rt0.c0 AS TEXT) ELSE TYPEOF(DISTINCT rt0.c1) END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(SUM(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)LIKE(x''))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)LIKE(x''))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)LIKE(x''))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c1)*(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c1)*(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c1)*(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST((NOT (rt0.c2)) AS INTEGER)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c2)) AS INTEGER)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST((NOT (rt0.c2)) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(rt0.c2) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(rt0.c2) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CASE ((rt0.c0)/(rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE '啿[T2' END THEN (rt0.c0 IN ('')) ELSE ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)) END) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)/(rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE '啿[T2' END THEN (rt0.c0 IN ('')) ELSE ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)) END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE ((rt0.c0)/(rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE '啿[T2' END THEN (rt0.c0 IN ('')) ELSE ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)) END) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0) ISNULL) IN (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0) ISNULL) IN (CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0) ISNULL) IN (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((~ ('5U⋽')) AS REAL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((~ ('5U⋽')) AS REAL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((~ ('5U⋽')) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN('697526890'))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((NOT (MIN('697526890'))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((NOT (MIN('697526890')))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN('697526890'))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((NOT (MIN('697526890'))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((NOT (MIN('697526890')))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ('\rzB%{b뾽') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('\rzB%{b뾽'))) UNION ALL SELECT * FROM rt0 WHERE ((('\rzB%{b뾽') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))==(((0.2516452002757077) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))=(((0.2516452002757077) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))==(((0.2516452002757077) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0)<=(((rt0.c0) NOTNULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)<=(((rt0.c0) NOTNULL)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)<=(((rt0.c0) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((rt0.c0) NOTNULL))OR(COUNT(rt0.c2))))OR(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((((rt0.c0) NOTNULL))OR(COUNT(rt0.c2))))OR(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2))))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((((rt0.c0) NOTNULL))OR(COUNT(rt0.c2))))OR(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((rt0.c1 COLLATE BINARY IN ())) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (IFNULL(DISTINCT rt0.c0, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (IFNULL(DISTINCT rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (IFNULL(DISTINCT rt0.c0, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (TRIM(CAST(rt0.c0 AS BLOB))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TRIM(CAST(rt0.c0 AS BLOB))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM(CAST(rt0.c0 AS BLOB))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((MAX(rt0.c0))AND(TOTAL(rt0.c1))))OR(rt0.c2)))AND(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c2)))) IS FALSE) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((((((MAX(rt0.c0))AND(TOTAL(rt0.c1))))OR(rt0.c2)))AND(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c2)))) IS FALSE))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((((MAX(rt0.c0))AND(TOTAL(rt0.c1))))OR(rt0.c2)))AND(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c2)))) IS FALSE)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((MAX(rt0.c0))AND(TOTAL(rt0.c1))))OR(rt0.c2)))AND(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c2)))) IS FALSE) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((((((MAX(rt0.c0))AND(TOTAL(rt0.c1))))OR(rt0.c2)))AND(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c2)))) IS FALSE))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((((MAX(rt0.c0))AND(TOTAL(rt0.c1))))OR(rt0.c2)))AND(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c2)))) IS FALSE)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))))) AND ((((rt0.c1)-(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))))) AND ((((rt0.c1)-(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))))) AND ((((rt0.c1)-(rt0.c2)))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((0.11586927416439685) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ((~ (rt0.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((0.11586927416439685) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ((~ (rt0.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((0.11586927416439685) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ((~ (rt0.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CASE rt0.c1  WHEN 1.108946082E9 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END COLLATE BINARY) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN 1.108946082E9 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN 1.108946082E9 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (+ (((rt0.c1)IS NOT(AVG(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((+ (((rt0.c1)IS NOT(AVG(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((+ (((rt0.c1)IS NOT(AVG(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (+ (((rt0.c1)IS NOT(AVG(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((+ (((rt0.c1)IS NOT(AVG(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((+ (((rt0.c1)IS NOT(AVG(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (0x32733f5c) AND (rt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c0) BETWEEN (0x32733f5c) AND (rt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c0) BETWEEN (0x32733f5c) AND (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1)<=(rt0.c1))) AND (CAST(rt0.c2 AS TEXT)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1)<=(rt0.c1))) AND (CAST(rt0.c2 AS TEXT)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1)<=(rt0.c1))) AND (CAST(rt0.c2 AS TEXT)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((((MAX(AVG(MIN(AVG(AVG(rt0.c2))))))AND(COUNT(MAX(TOTAL(AVG(MIN(MIN(COUNT(*))))))))))OR(SUM(rt0.c2))))AND(rt0.c0)))OR('3xltr')) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((((((MAX(AVG(MIN(AVG(AVG(rt0.c2))))))AND(COUNT(MAX(TOTAL(AVG(MIN(MIN(COUNT(*))))))))))OR(SUM(rt0.c2))))AND(rt0.c0)))OR('3xltr')))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((((((MAX(AVG(MIN(AVG(AVG(rt0.c2))))))AND(COUNT(MAX(TOTAL(AVG(MIN(MIN(COUNT(*))))))))))OR(SUM(rt0.c2))))AND(rt0.c0)))OR('3xltr'))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)OR(rt0.c2)) AS TEXT)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)OR(rt0.c2)) AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c0)OR(rt0.c2)) AS TEXT)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2)<(rt0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)<(rt0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2)<(rt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (SUBSTR(rt0.c2 COLLATE BINARY, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (SUBSTR(rt0.c2 COLLATE BINARY, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((SUBSTR(rt0.c2 COLLATE BINARY, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((rt0.c1)) NOT BETWEEN ((((TOTAL(MIN(SUM(COUNT(*))))) BETWEEN (COUNT(rt0.c2)) AND (rt0.c1)))) AND (('FwysLE'))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((((TOTAL(MIN(SUM(COUNT(*))))) BETWEEN (COUNT(rt0.c2)) AND (rt0.c1)))) AND (('FwysLE'))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((rt0.c1)) NOT BETWEEN ((((TOTAL(MIN(SUM(COUNT(*))))) BETWEEN (COUNT(rt0.c2)) AND (rt0.c1)))) AND (('FwysLE')))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((CASE rt0.c1  WHEN '-863348421' THEN rt0.c0 ELSE '?Y' END))<((((rt0.c1)!=('_-tj')))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((CASE rt0.c1  WHEN '-863348421' THEN rt0.c0 ELSE '?Y' END))<((((rt0.c1)<>('_-tj')))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((CASE rt0.c1  WHEN '-863348421' THEN rt0.c0 ELSE '?Y' END))<((((rt0.c1)<>('_-tj')))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (HEX(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (HEX(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((HEX(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)|(CAST(rt0.c1 AS REAL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)|(CAST(rt0.c1 AS REAL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)|(CAST(rt0.c1 AS REAL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((rt0.c2)|(AVG(rt0.c1))))GLOB(((rt0.c2) BETWEEN (MAX(COUNT(NULL))) AND (rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c2)|(AVG(rt0.c1))))GLOB(((rt0.c2) BETWEEN (MAX(COUNT(NULL))) AND (rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((rt0.c2)|(AVG(rt0.c1))))GLOB(((rt0.c2) BETWEEN (MAX(COUNT(NULL))) AND (rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c2 AS REAL)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)*(((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)*(((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)*(((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0)-(rt0.c2)) IN (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)-(rt0.c2)) IN (rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)-(rt0.c2)) IN (rt0.c2))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT((MAX(SUM(AVG(TOTAL(rt0.c0)))) IN ())) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT((MAX(SUM(AVG(TOTAL(rt0.c0)))) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT((MAX(SUM(AVG(TOTAL(rt0.c0)))) IN ()))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT((MAX(SUM(AVG(TOTAL(rt0.c0)))) IN ())) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT((MAX(SUM(AVG(TOTAL(rt0.c0)))) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT((MAX(SUM(AVG(TOTAL(rt0.c0)))) IN ()))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((950422708)|(rt0.c1))) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((950422708)|(rt0.c1))) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE (((((((950422708)|(rt0.c1))) IS TRUE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN x'e940' THEN json_array_length(rt0.c2, rt0.c1) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN x'e940' THEN json_array_length(rt0.c2, rt0.c1) END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN x'e940' THEN json_array_length(rt0.c2, rt0.c1) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((-519365229 IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((-519365229 IN ())))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((-519365229 IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN ()))OR(x'73e1'))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ()))OR(x'73e1'))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(x'73e1'))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(SUM(rt0.c0))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1 FROM rt0 NOT INDEXED WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (rt0.c2))) NOT NULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) NOT NULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((~ (rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((COUNT(*), rt0.c1, COUNT(*))) NOT BETWEEN ((SUM(rt0.c2), (((rt0.c0, rt0.c1, COUNT('')))<((rt0.c0, rt0.c2, rt0.c0))), SUM('1924497828'))) AND ((DATETIME(COUNT(*), GROUP_CONCAT(GROUP_CONCAT(rt0.c2)), TOTAL(NULL), rt0.c1, MAX(MIN(rt0.c1))), MIN(rt0.c2), MAX(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((COUNT(*), rt0.c1, COUNT(*))) NOT BETWEEN ((SUM(rt0.c2), (((rt0.c0, rt0.c1, COUNT('')))<((rt0.c0, rt0.c2, rt0.c0))), SUM('1924497828'))) AND ((DATETIME(COUNT(*), GROUP_CONCAT(GROUP_CONCAT(rt0.c2)), TOTAL(NULL), rt0.c1, MAX(MIN(rt0.c1))), MIN(rt0.c2), MAX(rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((COUNT(*), rt0.c1, COUNT(*))) NOT BETWEEN ((SUM(rt0.c2), (((rt0.c0, rt0.c1, COUNT('')))<((rt0.c0, rt0.c2, rt0.c0))), SUM('1924497828'))) AND ((DATETIME(COUNT(*), GROUP_CONCAT(GROUP_CONCAT(rt0.c2)), TOTAL(NULL), rt0.c1, MAX(MIN(rt0.c1))), MIN(rt0.c2), MAX(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- ((- (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- ((- (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((- ((- (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(0.13019193146488894 AS INTEGER)) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(0.13019193146488894 AS INTEGER)) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(0.13019193146488894 AS INTEGER)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((ABS(rt0.c2)) IS FALSE)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((ABS(rt0.c2)) IS FALSE)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((ABS(rt0.c2)) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG(CAST(GROUP_CONCAT(rt0.c0) AS BLOB)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG(CAST(GROUP_CONCAT(rt0.c0) AS BLOB)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(CAST(GROUP_CONCAT(rt0.c0) AS BLOB))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((2.016958911E9 IN (rt0.c0)) IN (((rt0.c1) BETWEEN (0.4371106747551622) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((2.016958911E9 IN (rt0.c0)) IN (((rt0.c1) BETWEEN (0.4371106747551622) AND (rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((2.016958911E9 IN (rt0.c0)) IN (((rt0.c1) BETWEEN (0.4371106747551622) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (IFNULL(('Ffr[' IN (rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE '-2055525172' END)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (IFNULL(('Ffr[' IN (rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE '-2055525172' END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((IFNULL(('Ffr[' IN (rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE '-2055525172' END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(((rt0.c1) IS FALSE))))AND((rt0.c0 IN ()))))AND(('|聜<F' IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(((rt0.c1) IS FALSE))))AND((rt0.c0 IN ()))))AND(('|聜<F' IN ())))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c1)OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(((rt0.c1) IS FALSE))))AND((rt0.c0 IN ()))))AND(('|聜<F' IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(((MIN(MAX(SUM(GROUP_CONCAT(COUNT(COUNT(*))))))) NOT BETWEEN (AVG(SUM(AVG(rt0.c0)))) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(((MIN(MAX(SUM(GROUP_CONCAT(COUNT(COUNT(*))))))) NOT BETWEEN (AVG(SUM(AVG(rt0.c0)))) AND (rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(((MIN(MAX(SUM(GROUP_CONCAT(COUNT(COUNT(*))))))) NOT BETWEEN (AVG(SUM(AVG(rt0.c0)))) AND (rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND (('935310317')))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND (('935310317')))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND (('935310317')))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)<=((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)<=((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)<=((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((MAX(SUM(COUNT(rt0.c2))))+(rt0.c1)))>>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((MAX(SUM(COUNT(rt0.c2))))+(rt0.c1)))>>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((MAX(SUM(COUNT(rt0.c2))))+(rt0.c1)))>>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c2)>=(rt0.c2)) THEN ((x'c646')<>(rt0.c0)) END) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c2)>=(rt0.c2)) THEN ((x'c646')<>(rt0.c0)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c2)>=(rt0.c2)) THEN ((x'c646')<>(rt0.c0)) END) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN '1733945608' END)<>(CAST(rt0.c2 AS BLOB)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN '1733945608' END)<>(CAST(rt0.c2 AS BLOB)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 NOT INDEXED WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN '1733945608' END)<>(CAST(rt0.c2 AS BLOB)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST(COALESCE(DISTINCT rt0.c2, TOTAL(GROUP_CONCAT(rt0.c0))) AS INTEGER) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(COALESCE(DISTINCT rt0.c2, TOTAL(GROUP_CONCAT(rt0.c0))) AS INTEGER))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(COALESCE(DISTINCT rt0.c2, TOTAL(GROUP_CONCAT(rt0.c0))) AS INTEGER)) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((('{c')) BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c1)OR(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((('{c')) BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c1)OR(rt0.c0)))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((('{c')) BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c1)OR(rt0.c0)))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)<=(rt0.c2)))*(((rt0.c2) IS FALSE)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)<=(rt0.c2)))*(((rt0.c2) IS FALSE)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)<=(rt0.c2)))*(((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((rt0.c2)) BETWEEN ((TOTAL(AVG(rt0.c0)))) AND ((COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((rt0.c2)) BETWEEN ((TOTAL(AVG(rt0.c0)))) AND ((COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((rt0.c2)) BETWEEN ((TOTAL(AVG(rt0.c0)))) AND ((COUNT(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (NULL) ORDER BY TRIM(DISTINCT (rt0.c1 IN ()), CASE WHEN 0.7570504738409428 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE '-1156859354' END);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) ORDER BY TRIM(DISTINCT (rt0.c1 IN ()), CASE WHEN 0.7570504738409428 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE '-1156859354' END);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL)) ORDER BY TRIM(DISTINCT (rt0.c1 IN ()), CASE WHEN 0.7570504738409428 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE '-1156859354' END);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((DATETIME(rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((DATETIME(rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((DATETIME(rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((((COUNT(MIN(rt0.c2)) COLLATE RTRIM)OR(COUNT(*))))OR(SUM(rt0.c1))))AND(((rt0.c0) IS TRUE))))OR(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((((((COUNT(MIN(rt0.c2)) COLLATE RTRIM)OR(COUNT(*))))OR(SUM(rt0.c1))))AND(((rt0.c0) IS TRUE))))OR(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((((((COUNT(MIN(rt0.c2)) COLLATE RTRIM)OR(COUNT(*))))OR(SUM(rt0.c1))))AND(((rt0.c0) IS TRUE))))OR(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(((0.6334197901709148)<(rt0.c0)) AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((0.6334197901709148)<(rt0.c0)) AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(((0.6334197901709148)<(rt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(rt0.c1 COLLATE RTRIM)))OR(json_array_length(rt0.c1)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0 COLLATE RTRIM)OR(rt0.c1 COLLATE RTRIM)))OR(json_array_length(rt0.c1)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0 COLLATE RTRIM)OR(rt0.c1 COLLATE RTRIM)))OR(json_array_length(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(COUNT(rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(COUNT(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) NOT NULL))OR(((rt0.c0)IS NOT(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c0) NOT NULL))OR(((rt0.c0)IS NOT(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c0) NOT NULL))OR(((rt0.c0)IS NOT(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c2)<<(rt0.c0)) IN (((rt0.c2)<>(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)<<(rt0.c0)) IN (((rt0.c2)!=(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c2)<<(rt0.c0)) IN (((rt0.c2)!=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((MIN(rt0.c1))AND(MAX(rt0.c1))))AND(json_patch(GROUP_CONCAT(MIN(MAX(TOTAL(COUNT(*))))), COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((MIN(rt0.c1))AND(MAX(rt0.c1))))AND(json_patch(GROUP_CONCAT(MIN(MAX(TOTAL(COUNT(*))))), COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((MIN(rt0.c1))AND(MAX(rt0.c1))))AND(json_patch(GROUP_CONCAT(MIN(MAX(TOTAL(COUNT(*))))), COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS NUMERIC) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (json_insert(((rt0.c0)<=(rt0.c1)), CASE rt0.c0  WHEN 0.4374919386102154 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, CAST(NULL AS INTEGER), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)), (('-615240178')|(rt0.c0)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (json_insert(((rt0.c0)<=(rt0.c1)), CASE rt0.c0  WHEN 0.4374919386102154 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, CAST(NULL AS INTEGER), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)), (('-615240178')|(rt0.c0)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((json_insert(((rt0.c0)<=(rt0.c1)), CASE rt0.c0  WHEN 0.4374919386102154 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, CAST(NULL AS INTEGER), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)), (('-615240178')|(rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE COUNT(COUNT(TOTAL(MIN(SUM(rt0.c1)))))  WHEN MAX(COUNT(*)) THEN MIN(GROUP_CONCAT(SUM(TOTAL(rt0.c1)))) ELSE rt0.c1 END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE COUNT(COUNT(TOTAL(MIN(SUM(rt0.c1)))))  WHEN MAX(COUNT(*)) THEN MIN(GROUP_CONCAT(SUM(TOTAL(rt0.c1)))) ELSE rt0.c1 END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE COUNT(COUNT(TOTAL(MIN(SUM(rt0.c1)))))  WHEN MAX(COUNT(*)) THEN MIN(GROUP_CONCAT(SUM(TOTAL(rt0.c1)))) ELSE rt0.c1 END) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((- ((- (rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((- ((- (rt0.c0))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((- ((- (rt0.c0))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END IN ())) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END IN ())))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN SUM(COUNT(TOTAL(TOTAL(rt0.c2)))) WHEN COUNT(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN SUM(COUNT(TOTAL(TOTAL(rt0.c2)))) WHEN COUNT(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN SUM(COUNT(TOTAL(TOTAL(rt0.c2)))) WHEN COUNT(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE))+((+ (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) IS TRUE))+((+ (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) IS TRUE))+((+ (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND((NOT (rt0.c1)))))AND((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1) ISNULL))AND((NOT (rt0.c1)))))AND((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1) ISNULL))AND((NOT (rt0.c1)))))AND((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1, 'wj''Sb#eS', rt0.c1))>((rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c1, 'wj''Sb#eS', rt0.c1))>((rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1, 'wj''Sb#eS', rt0.c1))>((rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(AVG(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(AVG(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) IS TRUE))/(x''))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT (((((rt0.c2) IS TRUE))/(x''))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) IS TRUE))/(x''))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)/(rt0.c1)))|(rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)/(rt0.c1)))|(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)/(rt0.c1)))|(rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ('') GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((~ (rt0.c0))) AND ((rt0.c1 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((~ (rt0.c0))) AND ((rt0.c1 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((~ (rt0.c0))) AND ((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN '1723408508' THEN CAST(rt0.c2 AS INTEGER) END) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (CASE WHEN '1723408508' THEN CAST(rt0.c2 AS INTEGER) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN '1723408508' THEN CAST(rt0.c2 AS INTEGER) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0)))|((NOT (rt0.c0))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c0)))|((NOT (rt0.c0))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c0)))|((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING TOTAL(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL(MIN(rt0.c1))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c2)-('-515100818')))OR(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)-('-515100818')))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c2)-('-515100818')))OR(rt0.c1))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((((((((+ (rt0.c2)))AND(((rt0.c2) NOT BETWEEN (0.3340356621906876) AND (rt0.c2)))))OR(TYPEOF(DISTINCT rt0.c1))))AND(ABS(rt0.c0))))AND((~ (rt0.c2)))))AND(((rt0.c0) NOTNULL))))AND(load_extension(rt0.c0, rt0.c1)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((((((((((+ (rt0.c2)))AND(((rt0.c2) NOT BETWEEN (0.3340356621906876) AND (rt0.c2)))))OR(TYPEOF(DISTINCT rt0.c1))))AND(ABS(rt0.c0))))AND((~ (rt0.c2)))))AND(((rt0.c0) NOTNULL))))AND(load_extension(rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((((((((((+ (rt0.c2)))AND(((rt0.c2) NOT BETWEEN (0.3340356621906876) AND (rt0.c2)))))OR(TYPEOF(DISTINCT rt0.c1))))AND(ABS(rt0.c0))))AND((~ (rt0.c2)))))AND(((rt0.c0) NOTNULL))))AND(load_extension(rt0.c0, rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((NULL)=(((rt0.c1) NOT NULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((NULL)=(((rt0.c1) NOT NULL)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((NULL)==(((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT MAX(CASE WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c1 ELSE rt0.c2 COLLATE RTRIM END) FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2)GLOB(0.8693065921467601))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)GLOB(0.8693065921467601))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)GLOB(0.8693065921467601))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((json_remove(rt0.c0, rt0.c1))AND(((((rt0.c2)OR(NULL)))OR('nz鍝x')))))AND((((rt0.c0, '2098182969', rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((json_remove(rt0.c0, rt0.c1))AND(((((rt0.c2)OR(NULL)))OR('nz鍝x')))))AND((((rt0.c0, '2098182969', rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((json_remove(rt0.c0, rt0.c1))AND(((((rt0.c2)OR(NULL)))OR('nz鍝x')))))AND((((rt0.c0, '2098182969', rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c2)))OR(HEX(rt0.c0))))AND(CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)GLOB(rt0.c2)))OR(HEX(rt0.c0))))AND(CAST(rt0.c1 AS INTEGER)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)GLOB(rt0.c2)))OR(HEX(rt0.c0))))AND(CAST(rt0.c1 AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((SUM(rt0.c1))OR(SUM(rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((SUM(rt0.c1))OR(SUM(rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((GROUP_CONCAT(rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((SUM(rt0.c1))OR(SUM(rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((GROUP_CONCAT(rt0.c1))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((SUM(rt0.c1))OR(SUM(rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((SUM(rt0.c1))OR(SUM(rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((GROUP_CONCAT(rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((SUM(rt0.c1))OR(SUM(rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((GROUP_CONCAT(rt0.c1))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((LENGTH(rt0.c2))LIKE(((rt0.c1)<(rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((LENGTH(rt0.c2))LIKE(((rt0.c1)<(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((LENGTH(rt0.c2))LIKE(((rt0.c1)<(rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c0))>((rt0.c0)))) NOT NULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0))>((rt0.c0)))) NOT NULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((((rt0.c0))>((rt0.c0)))) NOT NULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(SUM(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(SUM(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(SUM(rt0.c0))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c0)+(rt0.c2))  WHEN ((rt0.c1)>(rt0.c1)) THEN UPPER(DISTINCT rt0.c1) END) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)+(rt0.c2))  WHEN ((rt0.c1)>(rt0.c1)) THEN UPPER(DISTINCT rt0.c1) END))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c0)+(rt0.c2))  WHEN ((rt0.c1)>(rt0.c1)) THEN UPPER(DISTINCT rt0.c1) END) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (rtreenode(CAST(rt0.c1 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rtreenode(CAST(rt0.c1 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rtreenode(CAST(rt0.c1 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(((COUNT(AVG(AVG(rt0.c2)))) BETWEEN (rt0.c0) AND (NULL)) AS REAL) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(((COUNT(AVG(AVG(rt0.c2)))) BETWEEN (rt0.c0) AND (NULL)) AS REAL))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(((COUNT(AVG(AVG(rt0.c2)))) BETWEEN (rt0.c0) AND (NULL)) AS REAL)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CASE 0xffffffffae7def27  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c1)|(rt0.c2)) ELSE (~ (rt0.c0)) END) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE 0Xffffffffae7def27  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c1)|(rt0.c2)) ELSE (~ (rt0.c0)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE 0Xffffffffae7def27  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c1)|(rt0.c2)) ELSE (~ (rt0.c0)) END) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0) NOT NULL))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c1 IN (rt0.c0)))))OR((~ (rt0.c0)))))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c0) NOT NULL))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c1 IN (rt0.c0)))))OR((~ (rt0.c0)))))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c0) NOT NULL))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c1 IN (rt0.c0)))))OR((~ (rt0.c0)))))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((((NOT (0.7570504738409428)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (SUM(COUNT(*)))))))OR(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((((((NOT (0.7570504738409428)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (SUM(COUNT(*)))))))OR(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((((((NOT (0.7570504738409428)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (SUM(COUNT(*)))))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((x'')%(rt0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (json_quote(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((x'')%(rt0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (json_quote(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((x'')%(rt0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (json_quote(rt0.c1)))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (((rt0.c1) NOTNULL), CAST(rt0.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c2 COLLATE NOCASE IN (((rt0.c1) NOTNULL), CAST(rt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 COLLATE NOCASE IN (((rt0.c1) NOTNULL), CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((UNLIKELY(rt0.c1)) BETWEEN (((((0.8067248657623675)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c0))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((UNLIKELY(rt0.c1)) BETWEEN (((((0.8067248657623675)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((UNLIKELY(rt0.c1)) BETWEEN (((((0.8067248657623675)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c0))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MIN(((rt0.c0)IS(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MIN(((rt0.c0)IS(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MIN(((rt0.c0)IS(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), NULLIF(rt0.c0, rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), NULLIF(rt0.c0, rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), NULLIF(rt0.c0, rt0.c2))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (UPPER(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (UPPER(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (UPPER(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG((((rt0.c0, SUM(rt0.c2), rt0.c1, COUNT(*), rt0.c2))>=((rt0.c0, GROUP_CONCAT(rt0.c1), COUNT(COUNT(NULL)), MAX(SUM(rt0.c0)), COUNT(COUNT(COUNT(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG((((rt0.c0, SUM(rt0.c2), rt0.c1, COUNT(*), rt0.c2))>=((rt0.c0, GROUP_CONCAT(rt0.c1), COUNT(COUNT(NULL)), MAX(SUM(rt0.c0)), COUNT(COUNT(COUNT(rt0.c1))))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG((((rt0.c0, SUM(rt0.c2), rt0.c1, COUNT(*), rt0.c2))>=((rt0.c0, GROUP_CONCAT(rt0.c1), COUNT(COUNT(NULL)), MAX(SUM(rt0.c0)), COUNT(COUNT(COUNT(rt0.c1)))))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c0)) END) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c0)) END))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c0)) END) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0))<((rt0.c2))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0))<((rt0.c2))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0))<((rt0.c2))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (SQLITE_SOURCE_ID()) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), json_remove(rt0.c0, rt0.c0, rt0.c2, x''), ((rt0.c2)IS NOT(rt0.c0))))<>((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)), CAST(rt0.c0 AS BLOB), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), json_remove(rt0.c0, rt0.c0, rt0.c2, x''), ((rt0.c2)IS NOT(rt0.c0))))!=((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)), CAST(rt0.c0 AS BLOB), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), json_remove(rt0.c0, rt0.c0, rt0.c2, x''), ((rt0.c2)IS NOT(rt0.c0))))!=((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)), CAST(rt0.c0 AS BLOB), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ()))<(((rt0.c0)GLOB(rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))<(((rt0.c0)GLOB(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN ()))<(((rt0.c0)GLOB(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)*(0.005090890451729724)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0)*(0.005090890451729724)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c0)*(0.005090890451729724)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((DATE(rt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((DATE(rt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((DATE(rt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT((+ (rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT((+ (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT((+ (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT((+ (rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT((+ (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT((+ (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT)))!=((((rt0.c0) NOTNULL))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((CAST(rt0.c0 AS TEXT)))<>((((rt0.c0) NOTNULL))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((CAST(rt0.c0 AS TEXT)))<>((((rt0.c0) NOTNULL))))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST('-863348421' AS INTEGER) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST('-863348421' AS INTEGER) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST('-863348421' AS INTEGER) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)AND(((rt0.c2)<<(rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)AND(((rt0.c2)<<(rt0.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(((rt0.c2)<<(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(COUNT(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c2) IS TRUE)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 NOT INDEXED WHERE ((((NOT (((rt0.c2) IS TRUE)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c2)<=(rt0.c0))  WHEN ((rt0.c1)+(rt0.c0)) THEN rt0.c0 COLLATE BINARY WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN json_array(rt0.c2, rt0.c2) WHEN ((rt0.c1)>=(rt0.c1)) THEN rt0.c1 END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c2)<=(rt0.c0))  WHEN ((rt0.c1)+(rt0.c0)) THEN rt0.c0 COLLATE BINARY WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN json_array(rt0.c2, rt0.c2) WHEN ((rt0.c1)>=(rt0.c1)) THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c2)<=(rt0.c0))  WHEN ((rt0.c1)+(rt0.c0)) THEN rt0.c0 COLLATE BINARY WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN json_array(rt0.c2, rt0.c2) WHEN ((rt0.c1)>=(rt0.c1)) THEN rt0.c1 END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(MAX(rt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(MAX(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(MAX(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0))<((rt0.c2))))>=(((0.5552511531849785)OR(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c0))<((rt0.c2))))>=(((0.5552511531849785)OR(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0))<((rt0.c2))))>=(((0.5552511531849785)OR(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) AS REAL)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) AS REAL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((NOT (PRINTF(0X3139eb95, rt0.c1, rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((NOT (PRINTF(0X3139eb95, rt0.c1, rt0.c1)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((NOT (PRINTF(0X3139eb95, rt0.c1, rt0.c1)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOTNULL))+(((rt0.c1)>=(rt0.c2))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))+(((rt0.c1)>=(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOTNULL))+(((rt0.c1)>=(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ('||' IN ()) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (('||' IN ()))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((('||' IN ())) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ('||' IN ()) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (('||' IN ()))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((('||' IN ())) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL TOTAL((CAST(rt0.c2 AS NUMERIC) IN ())) FROM rt0;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(CAST(rt0.c0 AS REAL))))AND((((rt0.c1))=((rt0.c2))))))AND(((rt0.c0)=(rt0.c1)))))OR((((((((((((('-1001654282')OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(CAST(rt0.c0 AS REAL))))AND((((rt0.c1))=((rt0.c2))))))AND(((rt0.c0)=(rt0.c1)))))OR((((((((((((('-1001654282')OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(CAST(rt0.c0 AS REAL))))AND((((rt0.c1))=((rt0.c2))))))AND(((rt0.c0)==(rt0.c1)))))OR((((((((((((('-1001654282')OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(SUBSTR(rt0.c0, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(SUBSTR(rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(SUBSTR(rt0.c0, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
