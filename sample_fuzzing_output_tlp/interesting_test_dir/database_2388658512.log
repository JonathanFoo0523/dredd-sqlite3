-- Time: 2024/06/10 04:30:21
-- Database: database12
-- Database version: 3.40.0
-- seed value: 2388658512
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
VACUUM; -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(NULL) WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 704266196); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 1ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1952017271); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 650612787); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1158736093); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63421'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(0Xffffffff8cce6fc3); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.548896404507361, c0=0x254821c1 WHERE vt0.c0; -- 0ms;
UPDATE vt0 SET (c0)=(0.2940373595181788) WHERE TRIM((NOT (vt0.c0))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39052'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DELETE FROM vt0; -- 1ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
REINDEX BINARY; -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0, c0)=(0.9762444218623658, 0.1975218295547474); -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1, detail=column, ); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(6.25484225E8) WHERE ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END) IS TRUE); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=('L⇁fꉴ#'); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
UPDATE vt0 SET (c0)=(6.25484225E8); -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
ANALYZE; -- 0ms;
REINDEX  vt0; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE vt1 SET (c0)=(1.23773556E8); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=(x'4459'); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(0X63a18581) WHERE ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, '-1668003809', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE (((((((((vt1.c0)AND(((vt0.c0)>>(vt1.c1)))))OR(((vt1.c1)>=(vt1.c1)))))OR((((vt0.c0))>((vt0.c0))))))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE ((NOT (((((((((vt1.c0)AND(((vt0.c0)>>(vt1.c1)))))OR(((vt1.c1)>=(vt1.c1)))))OR((((vt0.c0))>((vt0.c0))))))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE (((((((((((vt1.c0)AND(((vt0.c0)>>(vt1.c1)))))OR(((vt1.c1)>=(vt1.c1)))))OR((((vt0.c0))>((vt0.c0))))))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON CAST(((((vt1.c1)AND(rt0.c1)))AND(vt1.c1)) AS REAL) LEFT OUTER JOIN vt0 ON ((0.8087527847941175)OR(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 END));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON CAST(((((vt1.c1)AND(rt0.c1)))AND(vt1.c1)) AS REAL) LEFT OUTER JOIN vt0 ON ((0.8087527847941175)OR(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 END)) WHERE (rt0.c0) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON CAST(((((vt1.c1)AND(rt0.c1)))AND(vt1.c1)) AS REAL) LEFT OUTER JOIN vt0 ON ((0.8087527847941175)OR(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 END)) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON CAST(((((vt1.c1)AND(rt0.c1)))AND(vt1.c1)) AS REAL) LEFT OUTER JOIN vt0 ON ((0.8087527847941175)OR(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 END)) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON CAST(((((vt1.c1)AND(rt0.c1)))AND(vt1.c1)) AS REAL) LEFT OUTER JOIN vt0 ON ((0.8087527847941175)OR(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 END));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((- (rt0.c0)))IS(rt0.c2 COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((- (rt0.c0)))IS(rt0.c2 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((- (rt0.c0)))IS(rt0.c2 COLLATE BINARY))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((- (rt0.c0)))IS(rt0.c2 COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((- (rt0.c0)))IS(rt0.c2 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((- (rt0.c0)))IS(rt0.c2 COLLATE BINARY))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT TOTAL((~ (LIKELY(rt0.c2)))) FROM rt0;
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c0, vt1.c1)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)/(vt1.c0)), vt0.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c1) NOT BETWEEN (vt0.c0) AND ('')))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0, vt0.c0, vt1.c1)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)/(vt1.c0)), vt0.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c1) NOT BETWEEN (vt0.c0) AND ('')))))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0, vt0.c0, vt1.c1)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)/(vt1.c0)), vt0.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c1) NOT BETWEEN (vt0.c0) AND ('')))))) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE (LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.9421322786612281)) GROUP BY vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.9421322786612281)))) GROUP BY vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE (((LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.9421322786612281)) ISNULL)) GROUP BY vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0;
SELECT vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0 HAVING (MIN(rt0.c1) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0 HAVING (NOT ((MIN(rt0.c1) IN ()))) UNION ALL SELECT vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0 HAVING (((MIN(rt0.c1) IN ())) ISNULL);
SELECT vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0;
SELECT vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0 HAVING (MIN(rt0.c1) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0 HAVING (NOT ((MIN(rt0.c1) IN ()))) UNION ALL SELECT vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0 HAVING (((MIN(rt0.c1) IN ())) ISNULL);
SELECT vt0.c0, vt1.c1, rt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((('1582807863' IN ()))LIKE(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) GROUP BY vt0.c0, vt1.c1, rt0.c0;
SELECT vt1.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT ALL vt1.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT vt1.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), load_extension(vt1.c0, vt1.c1), ((vt1.c1) ISNULL))) AND ((((vt1.c0) NOT BETWEEN ('587486640') AND ('')), CAST(vt1.c0 AS TEXT), CASE WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), load_extension(vt1.c0, vt1.c1), ((vt1.c1) ISNULL))) AND ((((vt1.c0) NOT BETWEEN ('587486640') AND ('')), CAST(vt1.c0 AS TEXT), CASE WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), load_extension(vt1.c0, vt1.c1), ((vt1.c1) ISNULL))) AND ((((vt1.c0) NOT BETWEEN ('587486640') AND ('')), CAST(vt1.c0 AS TEXT), CASE WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1, rt0.c2, vt0.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c1)IS(x'')))OR(((rt0.c1)/(vt0.c0)))) RIGHT OUTER JOIN vt0 ON RTRIM('') GROUP BY vt1.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 HAVING GROUP_CONCAT(MAX(vt1.c0)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(MAX(vt1.c0)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 HAVING ((GROUP_CONCAT(MAX(vt1.c0))) ISNULL);
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0;
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE (rt0.c1) UNION ALL SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE (((rt0.c1) ISNULL));
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL)-(((((x'cdb5')AND(vt0.c0)))OR(vt1.c1))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((NULL)-(((((x'cdb5')AND(vt0.c0)))OR(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((NULL)-(((((x'cdb5')AND(vt0.c0)))OR(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON json_remove(NULL, ((((0x230455b0)AND(rt0.c1)))OR(rt0.c1))) LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS BLOB) AS REAL) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON json_remove(NULL, ((((0X230455b0)AND(rt0.c1)))OR(rt0.c1))) LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS BLOB) AS REAL) WHERE (vt0.c0) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON json_remove(NULL, ((((0X230455b0)AND(rt0.c1)))OR(rt0.c1))) LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS BLOB) AS REAL) WHERE ((NOT (vt0.c0))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON json_remove(NULL, ((((0x230455b0)AND(rt0.c1)))OR(rt0.c1))) LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS BLOB) AS REAL) WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON json_remove(NULL, ((((0x230455b0)AND(rt0.c1)))OR(rt0.c1))) LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS BLOB) AS REAL) GROUP BY rt0.c1, vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING TOTAL(vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING ((TOTAL(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING TOTAL(vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING ((TOTAL(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((~ (CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((~ (CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((((~ (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1, vt0.c0 HAVING SUM(TOTAL(MIN(MAX(COUNT(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (SUM(TOTAL(MIN(MAX(COUNT(TOTAL(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1, vt0.c0 HAVING ((SUM(TOTAL(MIN(MAX(COUNT(TOTAL(rt0.c2))))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE (CAST(rt0.c1 AS INTEGER)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, vt0, vt1 WHERE (((CAST(rt0.c1 AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING CASE COUNT(*)  WHEN TOTAL(COUNT(*)) THEN json_insert(COUNT(*), vt1.c1, COUNT(vt1.c1), COUNT(TOTAL(COUNT(MAX(TOTAL(vt1.c1))))), SUM(MIN(GROUP_CONCAT(vt1.c1)))) WHEN (vt1.c1 IN ()) THEN ((MIN(vt1.c1))>(vt1.c1)) WHEN (((AVG(COUNT(vt1.c1))))>=((TOTAL(AVG(vt1.c0))))) THEN MAX(COUNT(vt1.c0)) ELSE ((vt1.c0) IS FALSE) END UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (CASE COUNT(*)  WHEN TOTAL(COUNT(*)) THEN json_insert(COUNT(*), vt1.c1, COUNT(vt1.c1), COUNT(TOTAL(COUNT(MAX(TOTAL(vt1.c1))))), SUM(MIN(GROUP_CONCAT(vt1.c1)))) WHEN (vt1.c1 IN ()) THEN ((MIN(vt1.c1))>(vt1.c1)) WHEN (((AVG(COUNT(vt1.c1))))>=((TOTAL(AVG(vt1.c0))))) THEN MAX(COUNT(vt1.c0)) ELSE ((vt1.c0) IS FALSE) END)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((CASE COUNT(*)  WHEN TOTAL(COUNT(*)) THEN json_insert(COUNT(*), vt1.c1, COUNT(vt1.c1), COUNT(TOTAL(COUNT(MAX(TOTAL(vt1.c1))))), SUM(MIN(GROUP_CONCAT(vt1.c1)))) WHEN (vt1.c1 IN ()) THEN ((MIN(vt1.c1))>(vt1.c1)) WHEN (((AVG(COUNT(vt1.c1))))>=((TOTAL(AVG(vt1.c0))))) THEN MAX(COUNT(vt1.c0)) ELSE ((vt1.c0) IS FALSE) END) ISNULL);
SELECT * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((- ((rt0.c0 IN ())))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT ((- ((rt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((((- ((rt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((NOT (vt1.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST((NOT (vt1.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST((NOT (vt1.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST((~ ('')) AS INTEGER)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST((~ ('')) AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST((~ ('')) AS INTEGER)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MAX(GROUP_CONCAT(MAX(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(GROUP_CONCAT(MAX(SUM(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MAX(GROUP_CONCAT(MAX(SUM(vt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END THEN TYPEOF(rt0.c2) WHEN CASE WHEN rt0.c2 THEN '1671529857' END THEN ((rt0.c0)*(rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END THEN TYPEOF(rt0.c2) WHEN CASE WHEN rt0.c2 THEN '1671529857' END THEN ((rt0.c0)*(rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END THEN TYPEOF(rt0.c2) WHEN CASE WHEN rt0.c2 THEN '1671529857' END THEN ((rt0.c0)*(rt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)<=(vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)<=(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((AVG(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((AVG(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((AVG(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((AVG(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE (((((vt0.c0) IS TRUE))<<('587486640'))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))<<('587486640'))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((((vt0.c0) IS TRUE))<<('587486640'))) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, rt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END)-((NOT (vt1.c1))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, rt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END)-((NOT (vt1.c1))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, rt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END)-((NOT (vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, rt0, vt1;
SELECT rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE (CASE WHEN (vt1.c0 IN (rt0.c2, vt1.c1, rt0.c2)) THEN (vt1.c1 IN ()) ELSE (((vt1.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) END) GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN (rt0.c2, vt1.c1, rt0.c2)) THEN (vt1.c1 IN ()) ELSE (((vt1.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) END))) GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE (((CASE WHEN (vt1.c0 IN (rt0.c2, vt1.c1, rt0.c2)) THEN (vt1.c1 IN ()) ELSE (((vt1.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) END) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING ((rt0.c1) NOT NULL) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (((rt0.c1) NOT NULL) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING ((((rt0.c1) NOT NULL) COLLATE BINARY) ISNULL);
SELECT vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING ((rt0.c1) NOT NULL) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (((rt0.c1) NOT NULL) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING ((((rt0.c1) NOT NULL) COLLATE BINARY) ISNULL);
SELECT vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL MIN(CASE (rt0.c2 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN vt0.c0 ELSE (+ (rt0.c2)) END) FROM vt0, rt0;
SELECT rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END AS NUMERIC)) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0 NOT INDEXED, vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END AS NUMERIC)) ISNULL));
SELECT rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(((vt1.c1) IS TRUE))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (((((CAST(rt0.c1 AS NUMERIC))AND(((vt1.c1) IS TRUE))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((((((CAST(rt0.c1 AS NUMERIC))AND(((vt1.c1) IS TRUE))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)&(rt0.c2))) BETWEEN ('ꛅXY*') AND (rt0.c1))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)&(rt0.c2))) BETWEEN ('ꛅXY*') AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)&(rt0.c2))) BETWEEN ('ꛅXY*') AND (rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, vt1.c1, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM CROSS JOIN rt0 ON (vt1.c1 IN ()) GROUP BY rt0.c1, vt1.c1, rt0.c2, vt0.c0;
SELECT ALL TOTAL(((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE NULL END) NOT BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(NULL)))AND(rt0.c1)))OR(rt0.c0))) AND (LIKELIHOOD(vt1.c1, 0.09654576807858684)))) FROM vt1, rt0, vt0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE MAX(rt0.c1, vt1.c1)  WHEN (NOT (rt0.c0)) THEN HEX(rt0.c1) END FULL OUTER JOIN vt1 ON (~ (((vt0.c0)<<(rt0.c1))));
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt1, vt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((~ (((vt1.c1) BETWEEN (NULL) AND (rt0.c1))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT ((~ (((vt1.c1) BETWEEN (NULL) AND (rt0.c1))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((((~ (((vt1.c1) BETWEEN (NULL) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt1, vt0;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0 WHERE (STRFTIME(((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)), vt1.c0 COLLATE NOCASE, (+ (rt0.c0)))) GROUP BY rt0.c2, vt1.c1 UNION SELECT rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((NOT (STRFTIME(((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)), vt1.c0 COLLATE NOCASE, (+ (rt0.c0)))))) GROUP BY rt0.c2, vt1.c1 UNION SELECT rt0.c2, vt1.c1 FROM vt1, rt0 WHERE (((STRFTIME(((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)), vt1.c0 COLLATE NOCASE, (+ (rt0.c0)))) ISNULL)) GROUP BY rt0.c2, vt1.c1;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT((GROUP_CONCAT(GROUP_CONCAT(vt1.c1)) IN ())) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT((GROUP_CONCAT(GROUP_CONCAT(vt1.c1)) IN ())))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT((GROUP_CONCAT(GROUP_CONCAT(vt1.c1)) IN ()))) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT((GROUP_CONCAT(GROUP_CONCAT(vt1.c1)) IN ())) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT((GROUP_CONCAT(GROUP_CONCAT(vt1.c1)) IN ())))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT((GROUP_CONCAT(GROUP_CONCAT(vt1.c1)) IN ()))) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))IS(((rt0.c2) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))IS(((rt0.c2) NOT NULL)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))IS(((rt0.c2) NOT NULL)))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c2)GLOB((~ (rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2)GLOB((~ (rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c2)GLOB((~ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE BINARY)) WHERE (rt0.c1) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE BINARY)) WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE BINARY)) WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((rt0.c1)>(rt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (((rt0.c1)>(rt0.c0)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((((rt0.c1)>(rt0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((rt0.c1)>(rt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (((rt0.c1)>(rt0.c0)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((((rt0.c1)>(rt0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c1) NOT NULL)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((~ (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c1) NOT NULL)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((~ (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c1) NOT NULL)))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE ((- (rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE ((NOT ((- (rt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE ((((- (rt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0;
SELECT vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((x'e7b89778')OR((+ (vt1.c0)))))AND(vt1.c0)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((x'e7b89778')OR((+ (vt1.c0)))))AND(vt1.c0)) WHERE ((((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR((('-1405049147') NOT NULL))))OR((((vt0.c0, vt0.c0, vt1.c1))>=((vt1.c1, vt1.c0, vt1.c0))))))AND(((vt1.c1)|(vt0.c0)))))OR(QUOTE(vt1.c1)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((x'e7b89778')OR((+ (vt1.c0)))))AND(vt1.c0)) WHERE ((NOT ((((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR((('-1405049147') NOT NULL))))OR((((vt0.c0, vt0.c0, vt1.c1))>=((vt1.c1, vt1.c0, vt1.c0))))))AND(((vt1.c1)|(vt0.c0)))))OR(QUOTE(vt1.c1)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((x'e7b89778')OR((+ (vt1.c0)))))AND(vt1.c0)) WHERE ((((((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR((('-1405049147') NOT NULL))))OR((((vt0.c0, vt0.c0, vt1.c1))>=((vt1.c1, vt1.c0, vt1.c0))))))AND(((vt1.c1)|(vt0.c0)))))OR(QUOTE(vt1.c1)))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((((x'e7b89778')OR((+ (vt1.c0)))))AND(vt1.c0)) GROUP BY vt1.c1;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING x'' UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING x'' UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))&(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))&(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))&(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (rt0.c1)) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (rt0.c1)) WHERE (0X3965dea8) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c1 UNION SELECT rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (rt0.c1)) WHERE ((NOT (0x3965dea8))) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (rt0.c1)) WHERE (((0x3965dea8) ISNULL)) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON (+ (rt0.c1)) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c0)))+(((rt0.c2)<=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE)) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) IS FALSE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c0) IS TRUE)) IS FALSE)) ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC))+(CAST(rt0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON 6.8802375E7;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC))+(CAST(rt0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON 6.8802375E7 WHERE ((vt1.c1 IN (vt1.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC))+(CAST(rt0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON 6.8802375E7 WHERE ((NOT ((vt1.c1 IN (vt1.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC))+(CAST(rt0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON 6.8802375E7 WHERE ((((vt1.c1 IN (vt1.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC))+(CAST(rt0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON 6.8802375E7;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CASE (+ (rt0.c2))  WHEN 5.8748664E8 THEN (rt0.c2 IN ()) ELSE CASE 1337101969  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE (+ (rt0.c2))  WHEN 5.8748664E8 THEN (rt0.c2 IN ()) ELSE CASE 1337101969  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE (+ (rt0.c2))  WHEN 5.8748664E8 THEN (rt0.c2 IN ()) ELSE CASE 1337101969  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0))) NOT BETWEEN ((((vt1.c0)<<(SUM(SUM(MIN(MIN(MIN(MAX(COUNT(*))))))))))) AND ((AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((GROUP_CONCAT(vt1.c0))) NOT BETWEEN ((((vt1.c0)<<(SUM(SUM(MIN(MIN(MIN(MAX(COUNT(*))))))))))) AND ((AVG(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((GROUP_CONCAT(vt1.c0))) NOT BETWEEN ((((vt1.c0)<<(SUM(SUM(MIN(MIN(MIN(MAX(COUNT(*))))))))))) AND ((AVG(vt1.c0))))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((('')) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1))))) FULL OUTER JOIN vt0 ON (((((0.344543062683206, rt0.c2, vt1.c1)) NOT BETWEEN ((vt1.c1, rt0.c0, rt0.c1)) AND ((vt1.c0, vt1.c0, rt0.c1))))LIKE(((vt1.c1)!=(vt1.c1))));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (LTRIM((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (LTRIM((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((LTRIM((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((TRIM(vt0.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((TRIM(vt0.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((TRIM(vt0.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) BETWEEN ((TOTAL(GROUP_CONCAT(SUM(MIN(MIN(MAX(COUNT(COUNT(*)))))))) COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN MAX(MAX(vt0.c0)) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) BETWEEN ((TOTAL(GROUP_CONCAT(SUM(MIN(MIN(MAX(COUNT(COUNT(*)))))))) COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN MAX(MAX(vt0.c0)) END))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) BETWEEN ((TOTAL(GROUP_CONCAT(SUM(MIN(MIN(MAX(COUNT(COUNT(*)))))))) COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN MAX(MAX(vt0.c0)) END)))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CAST((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, vt0.c0))) AS NUMERIC)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CAST((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, vt0.c0))) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CAST((((rt0.c2, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, vt0.c0))) AS NUMERIC)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt0 ON '1591596087';
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt0 ON '1591596087' WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt0 ON '1591596087' WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt0 ON '1591596087' WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt0 ON '1591596087';
SELECT rt0.c2, vt1.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, vt0.c0;
SELECT rt0.c2, vt1.c1, vt0.c0 FROM vt1, vt0, rt0 WHERE (((((vt1.c0)IS NOT(rt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt1.c1 AS TEXT)))) GROUP BY rt0.c2, vt1.c1, vt0.c0 UNION SELECT ALL rt0.c2, vt1.c1, vt0.c0 FROM vt1, vt0, rt0 NOT INDEXED WHERE ((NOT (((((vt1.c0)IS NOT(rt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt1.c1 AS TEXT)))))) GROUP BY rt0.c2, vt1.c1, vt0.c0 UNION SELECT rt0.c2, vt1.c1, vt0.c0 FROM vt1, vt0, rt0 WHERE (((((((vt1.c0)IS NOT(rt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt1.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c2, vt1.c1, vt0.c0;
SELECT rt0.c2, vt1.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(SUM(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(SUM(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(SUM(AVG(vt1.c0)))) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c1)AND('')))AND('dcR걮*큥')))-(vt0.c0));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c1)AND('')))AND('dcR걮*큥')))-(vt0.c0)) WHERE ((((((~ (vt1.c0)))OR(vt1.c0)))OR(LOWER(vt1.c1)))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c1)AND('')))AND('dcR걮*큥')))-(vt0.c0)) WHERE ((NOT ((((((~ (vt1.c0)))OR(vt1.c0)))OR(LOWER(vt1.c1)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c1)AND('')))AND('dcR걮*큥')))-(vt0.c0)) WHERE ((((((((~ (vt1.c0)))OR(vt1.c0)))OR(LOWER(vt1.c1)))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c1)AND('')))AND('dcR걮*큥')))-(vt0.c0));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (json_patch(((rt0.c1)<=(rt0.c1)), rt0.c1)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (json_patch(((rt0.c1)<=(rt0.c1)), rt0.c1)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((json_patch(((rt0.c1)<=(rt0.c1)), rt0.c1)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (CASE ((vt1.c1) NOT NULL)  WHEN (- (vt1.c1)) THEN (rt0.c0 IN ()) ELSE ((((rt0.c0)AND(rt0.c0)))AND(x'')) END) GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 UNION SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (CASE ((vt1.c1) NOT NULL)  WHEN (- (vt1.c1)) THEN (rt0.c0 IN ()) ELSE ((((rt0.c0)AND(rt0.c0)))AND(x'')) END))) GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 UNION SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (((CASE ((vt1.c1) NOT NULL)  WHEN (- (vt1.c1)) THEN (rt0.c0 IN ()) ELSE ((((rt0.c0)AND(rt0.c0)))AND(x'')) END) ISNULL)) GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN ((rt0.c1) ISNULL) THEN TOTAL(NULL) ELSE x'' END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN ((rt0.c1) ISNULL) THEN TOTAL(NULL) ELSE x'' END)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN ((rt0.c1) ISNULL) THEN TOTAL(NULL) ELSE x'' END) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN ((rt0.c1) ISNULL) THEN TOTAL(NULL) ELSE x'' END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN ((rt0.c1) ISNULL) THEN TOTAL(NULL) ELSE x'' END)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN ((rt0.c1) ISNULL) THEN TOTAL(NULL) ELSE x'' END) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (0.2294110784554514) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (0.2294110784554514))) UNION SELECT DISTINCT * FROM vt1 WHERE (((0.2294110784554514) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)>(rt0.c1)))AND(((rt0.c0)<>(x'')))))OR(CASE WHEN rt0.c1 THEN rt0.c2 END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1)>(rt0.c1)))AND(((rt0.c0)<>(x'')))))OR(CASE WHEN rt0.c1 THEN rt0.c2 END))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)>(rt0.c1)))AND(((rt0.c0)!=(x'')))))OR(CASE WHEN rt0.c1 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE vt1.c0  WHEN vt1.c1 THEN GROUP_CONCAT(COUNT(COUNT(*))) END) NOTNULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((CASE vt1.c0  WHEN vt1.c1 THEN GROUP_CONCAT(COUNT(COUNT(*))) END) NOTNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE vt1.c0  WHEN vt1.c1 THEN GROUP_CONCAT(COUNT(COUNT(*))) END) NOTNULL)) ISNULL);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(x'8527' AS TEXT) AS TEXT);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(x'8527' AS TEXT) AS TEXT) WHERE ((((('')<=(vt1.c1)))*(vt1.c1))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(x'8527' AS TEXT) AS TEXT) WHERE ((NOT ((((('')<=(vt1.c1)))*(vt1.c1))))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(x'8527' AS TEXT) AS TEXT) WHERE ((((((('')<=(vt1.c1)))*(vt1.c1))) ISNULL));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(x'8527' AS TEXT) AS TEXT);
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (x'') AND ('-1975517334')) COLLATE RTRIM GROUP BY vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (x'') AND ('-1975517334')) COLLATE RTRIM WHERE (0xffffffff9c94481f) GROUP BY vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (x'') AND ('-1975517334')) COLLATE RTRIM WHERE ((NOT (0xffffffff9c94481f))) GROUP BY vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (x'') AND ('-1975517334')) COLLATE RTRIM WHERE (((0xffffffff9c94481f) ISNULL)) GROUP BY vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (x'') AND ('-1975517334')) COLLATE RTRIM GROUP BY vt1.c0, rt0.c1, vt0.c0, vt1.c1, rt0.c0;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((AVG(SUM(TOTAL(MAX(x''))))) NOT BETWEEN (TOTAL(COUNT(MIN(MIN(MAX(COUNT(*))))))) AND (rt0.c0 COLLATE NOCASE)) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (((AVG(SUM(TOTAL(MAX(x''))))) NOT BETWEEN (TOTAL(COUNT(MIN(MIN(MAX(COUNT(*))))))) AND (rt0.c0 COLLATE NOCASE)))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((((AVG(SUM(TOTAL(MAX(x''))))) NOT BETWEEN (TOTAL(COUNT(MIN(MIN(MAX(COUNT(*))))))) AND (rt0.c0 COLLATE NOCASE))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((json_object(885481159, NULL))|(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT (((json_object(885481159, NULL))|(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 WHERE (((((json_object(885481159, NULL))|(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)GLOB(vt1.c1)))>(((vt1.c1) IS TRUE))) CROSS JOIN rt0 ON ((TRIM(vt1.c1, vt0.c0)) IS FALSE);
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)GLOB(vt1.c1)))>(((vt1.c1) IS TRUE))) CROSS JOIN rt0 ON ((TRIM(vt1.c1, vt0.c0)) IS FALSE) WHERE ((((- (vt1.c0)))IS NOT((((vt0.c0))<=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)GLOB(vt1.c1)))>(((vt1.c1) IS TRUE))) CROSS JOIN rt0 ON ((TRIM(vt1.c1, vt0.c0)) IS FALSE) WHERE ((NOT ((((- (vt1.c0)))IS NOT((((vt0.c0))<=((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)GLOB(vt1.c1)))>(((vt1.c1) IS TRUE))) CROSS JOIN rt0 ON ((TRIM(vt1.c1, vt0.c0)) IS FALSE) WHERE ((((((- (vt1.c0)))IS NOT((((vt0.c0))<=((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0)GLOB(vt1.c1)))>(((vt1.c1) IS TRUE))) CROSS JOIN rt0 ON ((TRIM(vt1.c1, vt0.c0)) IS FALSE);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((+ (((rt0.c2)%(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (((rt0.c2)%(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (((rt0.c2)%(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING CASE WHEN MAX(vt0.c0) THEN CAST(COUNT(vt1.c0) AS TEXT) ELSE MIN(COUNT(*)) END UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (CASE WHEN MAX(vt0.c0) THEN CAST(COUNT(vt1.c0) AS TEXT) ELSE MIN(COUNT(*)) END)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING ((CASE WHEN MAX(vt0.c0) THEN CAST(COUNT(vt1.c0) AS TEXT) ELSE MIN(COUNT(*)) END) ISNULL);
SELECT ALL SUM(CASE WHEN ((NULL) NOT BETWEEN (-1.405049147E9) AND (rt0.c1)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))) WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (rt0.c1 IN (rt0.c2, rt0.c2)) END) FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((NOT ('&XzTL%')))||(CASE WHEN rt0.c1 THEN rt0.c1 END))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((NOT ('&XzTL%')))||(CASE WHEN rt0.c1 THEN rt0.c1 END))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((((NOT ('&XzTL%')))||(CASE WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE '1469129416' END) IS TRUE)) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE '1469129416' END) IS TRUE)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE '1469129416' END) IS TRUE)) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((('eY漬+UbXe(')OR(vt1.c0)))AND(UPPER(DISTINCT vt1.c0))))OR(((rt0.c1) IS FALSE))) CROSS JOIN rt0 ON ((((((((((rt0.c1)<>('oezSb+')))OR((vt0.c0 IN ()))))AND(((x'') BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((rt0.c2)+(rt0.c2)))))AND(rt0.c0 COLLATE BINARY)) GROUP BY vt1.c1, rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1)-(rt0.c1)) IN ());
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1)-(rt0.c1)) IN ()) WHERE ((- (CAST(rt0.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1)-(rt0.c1)) IN ()) WHERE ((NOT ((- (CAST(rt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1)-(rt0.c1)) IN ()) WHERE ((((- (CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1)-(rt0.c1)) IN ());
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, rt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt1.c1 ELSE rt0.c1 END) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT (((CASE vt0.c0  WHEN NULL THEN vt1.c1 ELSE rt0.c1 END) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, rt0 WHERE (((((CASE vt0.c0  WHEN NULL THEN vt1.c1 ELSE rt0.c1 END) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c1 HAVING ((AVG(MIN(COUNT(*)))) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c1 HAVING (NOT (((AVG(MIN(COUNT(*)))) IS TRUE))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c1 HAVING ((((AVG(MIN(COUNT(*)))) IS TRUE)) ISNULL);
SELECT * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 WHERE (INSTR(((rt0.c0)AND('-1552768986')), ((vt0.c0) ISNULL))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (INSTR(((rt0.c0)AND('-1552768986')), ((vt0.c0) ISNULL))))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE (((INSTR(((rt0.c0)AND('-1552768986')), ((vt0.c0) ISNULL))) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c1 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((NOT (CASE WHEN vt1.c1 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((NOT (CASE WHEN vt1.c1 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((json_extract(vt1.c0, x'7ffa') IN ())) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((json_extract(vt1.c0, x'7ffa') IN ())))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((((json_extract(vt1.c0, x'7ffa') IN ())) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt0, vt1, rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((((vt1.c0) IS FALSE) IN (ABS(vt1.c1)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((vt1.c0) IS FALSE) IN (ABS(vt1.c1)))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((((((vt1.c0) IS FALSE) IN (ABS(vt1.c1)))) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((((- (vt1.c1)))=(json(vt1.c0)))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT ((((- (vt1.c1)))=(json(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((((((- (vt1.c1)))==(json(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1 FROM vt1, rt0, vt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1 FROM vt1, rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1 FROM vt1, rt0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c1;
SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0;
SELECT vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (-1922896196) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (-1922896196))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((-1922896196) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 WHERE ((((vt1.c1, rt0.c1, 0.1577626669283163)) NOT BETWEEN ((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)), ((x'bdad') BETWEEN (rt0.c2) AND (vt1.c0)), rt0.c1)) AND (('-1200214070', (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), HEX(rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((vt1.c1, rt0.c1, 0.1577626669283163)) NOT BETWEEN ((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)), ((x'bdad') BETWEEN (rt0.c2) AND (vt1.c0)), rt0.c1)) AND (('-1200214070', (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), HEX(rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE ((((((vt1.c1, rt0.c1, 0.1577626669283163)) NOT BETWEEN ((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)), ((x'bdad') BETWEEN (rt0.c2) AND (vt1.c0)), rt0.c1)) AND (('-1200214070', (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), HEX(rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1;
SELECT ALL SUM((((- (vt1.c1))) NOT NULL)) FROM vt1, rt0, vt0;
SELECT * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c1) NOTNULL), rt0.c1 COLLATE BINARY))<((((vt0.c0)OR(vt1.c1)), CAST(rt0.c2 AS TEXT), (vt1.c1 IN ()))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c1) NOTNULL), rt0.c1 COLLATE BINARY))<((((vt0.c0)OR(vt1.c1)), CAST(rt0.c2 AS TEXT), (vt1.c1 IN ()))))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c1) NOTNULL), rt0.c1 COLLATE BINARY))<((((vt0.c0)OR(vt1.c1)), CAST(rt0.c2 AS TEXT), (vt1.c1 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c2)!=(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (CASE WHEN ((rt0.c2)<>(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c2)<>(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((''))<=((MIN(AVG(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((''))<=((MIN(AVG(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((''))<=((MIN(AVG(rt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LIKE(((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS TRUE), '6')) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKE(((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS TRUE), '6')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKE(((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS TRUE), '6')) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (((vt1.c0)||(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (((vt1.c0)||(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (((((vt1.c0)||(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1, vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (0.5304650010564801) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (0.5304650010564801))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((0.5304650010564801) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(COUNT(x'')) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(x'')))) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(COUNT(x''))) ISNULL);
SELECT TOTAL(CAST((vt0.c0 IN (vt1.c1)) AS TEXT)) FROM vt1, rt0, vt0;
SELECT ALL vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1;
SELECT ALL vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c1) BETWEEN (vt0.c0) AND (((vt0.c0)=(vt0.c0))))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c1) BETWEEN (vt0.c0) AND (((vt0.c0)=(vt0.c0))))))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c1) BETWEEN (vt0.c0) AND (((vt0.c0)=(vt0.c0))))) ISNULL));
SELECT ALL vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0 WHERE (vt1.c1) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0, rt0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE), (- (0.8926522529628814)), vt1.c0 COLLATE BINARY)) AND (((NOT (vt1.c1)), ((vt1.c1) IS TRUE), (~ (vt0.c0)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE), (- (0.8926522529628814)), vt1.c0 COLLATE BINARY)) AND (((NOT (vt1.c1)), ((vt1.c1) IS TRUE), (~ (vt0.c0)))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE), (- (0.8926522529628814)), vt1.c0 COLLATE BINARY)) AND (((NOT (vt1.c1)), ((vt1.c1) IS TRUE), (~ (vt0.c0)))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(((((rt0.c1)OR(SUM(rt0.c1))))AND(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(((((rt0.c1)OR(SUM(rt0.c1))))AND(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(((((rt0.c1)OR(SUM(rt0.c1))))AND(rt0.c2)))) ISNULL);
SELECT MIN(((1.671529857E9)&(((((vt0.c0)OR(vt1.c0)))OR(0.43556901536429915))))) FROM rt0, vt1, vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))>>(TRIM(DISTINCT rt0.c0)))  NULLS LAST;
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c1)) BETWEEN ((0.9415103066801146)) AND ((vt1.c1))))) AND ((((-1267312100) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((((vt1.c1)) BETWEEN ((0.9415103066801146)) AND ((vt1.c1))))) AND ((((-1267312100) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (((((vt1.c1)) BETWEEN ((0.9415103066801146)) AND ((vt1.c1))))) AND ((((-1267312100) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((((((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))AND(0X6baecebd)))OR(((rt0.c0)IS(rt0.c1)))))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((((((((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))AND(0x6baecebd)))OR(((rt0.c0)IS(rt0.c1)))))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((((((((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))AND(0X6baecebd)))OR(((rt0.c0)IS(rt0.c1)))))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))  WHEN vt1.c0 THEN CASE NULL  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))  WHEN vt1.c0 THEN CASE NULL  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))  WHEN vt1.c0 THEN CASE NULL  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN MAX(vt0.c0) THEN COUNT(COUNT(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN MAX(vt0.c0) ELSE vt0.c0 END)IS NOT(MIN(GROUP_CONCAT(MIN(AVG(MAX(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CASE WHEN MAX(vt0.c0) THEN COUNT(COUNT(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN MAX(vt0.c0) ELSE vt0.c0 END)IS NOT(MIN(GROUP_CONCAT(MIN(AVG(MAX(vt0.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CASE WHEN MAX(vt0.c0) THEN COUNT(COUNT(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN MAX(vt0.c0) ELSE vt0.c0 END)IS NOT(MIN(GROUP_CONCAT(MIN(AVG(MAX(vt0.c0)))))))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 WHERE (((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (rt0.c0) AND ((vt1.c1 IN ())))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (rt0.c0) AND ((vt1.c1 IN ())))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 WHERE (((((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (rt0.c0) AND ((vt1.c1 IN ())))) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((vt0.c0)OR(rt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((vt0.c0)OR(rt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((vt0.c0)OR(rt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((~ (((rt0.c1)>>(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c1)>>(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c1)>>(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT ((- (rt0.c1))));
SELECT vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT ((- (rt0.c1)))) WHERE ((((((((((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c2))))OR((+ (vt0.c0)))))AND(LIKELIHOOD(vt1.c1, 0.3041619988033494))))OR(((rt0.c2)&(rt0.c0)))))AND(((((rt0.c1)AND(NULL)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT ((- (rt0.c1)))) WHERE ((NOT ((((((((((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c2))))OR((+ (vt0.c0)))))AND(LIKELIHOOD(vt1.c1, 0.3041619988033494))))OR(((rt0.c2)&(rt0.c0)))))AND(((((rt0.c1)AND(NULL)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT ((- (rt0.c1)))) WHERE ((((((((((((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c2))))OR((+ (vt0.c0)))))AND(LIKELIHOOD(vt1.c1, 0.3041619988033494))))OR(((rt0.c2)&(rt0.c0)))))AND(((((rt0.c1)AND(NULL)))AND(vt0.c0))))) ISNULL));
SELECT vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT ((- (rt0.c1))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1;
SELECT ALL rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1 HAVING (+ (CAST(COUNT(COUNT(*)) AS TEXT))) UNION ALL SELECT ALL rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1 HAVING (NOT ((+ (CAST(COUNT(COUNT(*)) AS TEXT))))) UNION ALL SELECT ALL rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1 HAVING (((+ (CAST(COUNT(COUNT(*)) AS TEXT)))) ISNULL);
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON (0.7830516885134741 IN ());
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON (0.7830516885134741 IN ()) WHERE (((((((((CAST(x'' AS REAL))OR((+ (vt1.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((vt1.c1) IS FALSE))))AND(((rt0.c0) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt1 INNER JOIN vt0 ON (0.7830516885134741 IN ()) WHERE ((NOT (((((((((CAST(x'' AS REAL))OR((+ (vt1.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((vt1.c1) IS FALSE))))AND(((rt0.c0) NOTNULL)))))) UNION ALL SELECT * FROM rt0, vt1 INNER JOIN vt0 ON (0.7830516885134741 IN ()) WHERE (((((((((((CAST(x'' AS REAL))OR((+ (vt1.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((vt1.c1) IS FALSE))))AND(((rt0.c0) NOTNULL)))) ISNULL));
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON (0.7830516885134741 IN ());
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)AND((0xffffffff8381ea00 IN (x'15045f1f')))))OR(((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1)))))AND(CASE vt1.c1  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c1 END)))OR(x'')) LEFT OUTER JOIN vt1 ON (RTRIM(vt1.c1) IN (((rt0.c2) NOTNULL)));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0 HAVING (GROUP_CONCAT(NULL) IN ()) UNION ALL SELECT ALL vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0 HAVING (NOT ((GROUP_CONCAT(NULL) IN ()))) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0 HAVING (((GROUP_CONCAT(NULL) IN ())) ISNULL);
SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0 HAVING (GROUP_CONCAT(NULL) IN ()) UNION ALL SELECT ALL vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0 HAVING (NOT ((GROUP_CONCAT(NULL) IN ()))) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0 HAVING (((GROUP_CONCAT(NULL) IN ())) ISNULL);
SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c2, vt0.c0;
SELECT TOTAL((('864324284' COLLATE BINARY)||(((0.6591665258307724)/(rt0.c1))))) FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((HEX(DISTINCT vt0.c0)) IS FALSE);
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((HEX(DISTINCT vt0.c0)) IS FALSE) WHERE (((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))) AND ((vt1.c1 IN (vt1.c0, vt1.c1))))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((HEX(DISTINCT vt0.c0)) IS FALSE) WHERE ((NOT (((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))) AND ((vt1.c1 IN (vt1.c0, vt1.c1))))))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((HEX(DISTINCT vt0.c0)) IS FALSE) WHERE (((((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))) AND ((vt1.c1 IN (vt1.c0, vt1.c1))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((HEX(DISTINCT vt0.c0)) IS FALSE);
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE ((- (((vt1.c1) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE ((NOT ((- (((vt1.c1) ISNULL)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE ((((- (((vt1.c1) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM rt0, vt0, vt1;
SELECT vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0, vt1 WHERE (((CASE WHEN rt0.c1 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)IS NOT(vt1.c1 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((CASE WHEN rt0.c1 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)IS NOT(vt1.c1 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0, vt1 WHERE (((((CASE WHEN rt0.c1 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END)IS NOT(vt1.c1 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c2)AND(vt0.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c2)AND(vt0.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CAST(((rt0.c2)AND(vt0.c0)) AS INTEGER)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE vt1.c1  WHEN ((vt1.c0) ISNULL) THEN vt1.c1 COLLATE NOCASE WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) WHEN ((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)) THEN (~ (vt1.c0)) WHEN vt1.c1 THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) WHEN ((vt1.c1)%(vt1.c1)) THEN CAST(vt1.c1 AS BLOB) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE vt1.c1  WHEN ((vt1.c0) ISNULL) THEN vt1.c1 COLLATE NOCASE WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) WHEN ((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)) THEN (~ (vt1.c0)) WHEN vt1.c1 THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) WHEN ((vt1.c1)%(vt1.c1)) THEN CAST(vt1.c1 AS BLOB) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c1  WHEN ((vt1.c0) ISNULL) THEN vt1.c1 COLLATE NOCASE WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) WHEN ((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)) THEN (~ (vt1.c0)) WHEN vt1.c1 THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) WHEN ((vt1.c1)%(vt1.c1)) THEN CAST(vt1.c1 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((ABS(rt0.c0)) ISNULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((ABS(rt0.c0)) ISNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((ABS(rt0.c0)) ISNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2 HAVING (+ (rt0.c1 COLLATE BINARY)) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2 HAVING (NOT ((+ (rt0.c1 COLLATE BINARY)))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2 HAVING (((+ (rt0.c1 COLLATE BINARY))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2 HAVING (+ (rt0.c1 COLLATE BINARY)) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2 HAVING (NOT ((+ (rt0.c1 COLLATE BINARY)))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2 HAVING (((+ (rt0.c1 COLLATE BINARY))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM vt1, rt0 CROSS JOIN vt0 ON ((+ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN '1799520941' WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) GROUP BY vt0.c0, rt0.c2;
SELECT * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) AS BLOB)) UNION ALL SELECT * FROM rt0, vt1 NOT INDEXED, vt0 WHERE ((NOT (CAST(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE (((CAST(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) AS BLOB)) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (0.16596845177052522) AND (((((((((rt0.c1)AND(rt0.c0)))AND(0.08489858059570843)))AND(rt0.c0)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (0.16596845177052522) AND (((((((((rt0.c1)AND(rt0.c0)))AND(0.08489858059570843)))AND(rt0.c0)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (0.16596845177052522) AND (((((((((rt0.c1)AND(rt0.c0)))AND(0.08489858059570843)))AND(rt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (LIKELY(((rt0.c0) NOT NULL))) GROUP BY rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (LIKELY(((rt0.c0) NOT NULL))))) GROUP BY rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((LIKELY(((rt0.c0) NOT NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(vt0.c0))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (NULL) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (json_array_length((((x'0030')) NOT BETWEEN ((0.24738104612768996)) AND ((rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (json_array_length((((x'0030')) NOT BETWEEN ((0.24738104612768996)) AND ((rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((json_array_length((((x'0030')) NOT BETWEEN ((0.24738104612768996)) AND ((rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((NULL)AND(rt0.c2)))AND(LIKELY(DISTINCT vt1.c0))))AND((vt0.c0 IN (rt0.c1, vt0.c0)))))AND(((vt1.c0) NOT NULL))) LEFT OUTER JOIN vt1 ON ((rt0.c1)GLOB(vt0.c0)) COLLATE BINARY GROUP BY vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING SUM(COUNT(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (SUM(COUNT(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((SUM(COUNT(MIN(vt0.c0)))) ISNULL);
SELECT * FROM vt1, rt0, vt0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((((((vt1.c0)AND(0x5eddd437)))OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT (((((((((vt1.c0)AND(0x5eddd437)))OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((((((((vt1.c0)AND(0X5eddd437)))OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE (((((vt1.c0 IN (rt0.c1))))>=((UPPER(vt0.c0))))) UNION SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (((((vt1.c0 IN (rt0.c1))))>=((UPPER(vt0.c0))))))) UNION SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE (((((((vt1.c0 IN (rt0.c1))))>=((UPPER(vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, rt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG(vt1.c1))AND(SUM(x''))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((AVG(vt1.c1))AND(SUM(x''))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((AVG(vt1.c1))AND(SUM(x'')))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG(vt1.c1))AND(SUM(x''))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((AVG(vt1.c1))AND(SUM(x''))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((AVG(vt1.c1))AND(SUM(x'')))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT TOTAL(((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(TRIM(rt0.c2)))) FROM vt1, rt0 ORDER BY ((NULL) IS FALSE) DESC, ((x'050c') NOT BETWEEN (((vt1.c1)OR(vt1.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, (rt0.c0 IN (vt1.c1)) COLLATE NOCASE ASC  NULLS LAST, (~ (rt0.c0));
SELECT * FROM vt1, rt0, vt0;
SELECT * FROM vt1, rt0, vt0 WHERE ((((CAST(vt1.c1 AS INTEGER)))<((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT ((((CAST(vt1.c1 AS INTEGER)))<((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((((CAST(vt1.c1 AS INTEGER)))<((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))) ISNULL));
SELECT * FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)%(((vt1.c1)<>(vt0.c0))));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)%(((vt1.c1)!=(vt0.c0)))) WHERE (0.5350246615508214) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)%(((vt1.c1)<>(vt0.c0)))) WHERE ((NOT (0.5350246615508214))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)%(((vt1.c1)<>(vt0.c0)))) WHERE (((0.5350246615508214) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)%(((vt1.c1)<>(vt0.c0))));
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c1;
SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING GROUP_CONCAT(((((SUM(SUM(MAX(vt1.c0))))AND(x'90f05795')))AND('-1975517334'))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(((((SUM(SUM(MAX(vt1.c0))))AND(x'90f05795')))AND('-1975517334'))))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING ((GROUP_CONCAT(((((SUM(SUM(MAX(vt1.c0))))AND(x'90f05795')))AND('-1975517334')))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS BLOB)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CAST((NOT (vt1.c0)) AS BLOB)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST((NOT (vt1.c0)) AS BLOB)) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((rt0.c1) NOT BETWEEN ((+ (vt0.c0))) AND (((rt0.c1)>>(vt1.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 NOT INDEXED WHERE ((NOT (((rt0.c1) NOT BETWEEN ((+ (vt0.c0))) AND (((rt0.c1)>>(vt1.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((((rt0.c1) NOT BETWEEN ((+ (vt0.c0))) AND (((rt0.c1)>>(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)))/((('') NOT BETWEEN (rt0.c2) AND (NULL))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)))/((('') NOT BETWEEN (rt0.c2) AND (NULL))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)))/((('') NOT BETWEEN (rt0.c2) AND (NULL))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (+ (AVG(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (AVG(AVG(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (((+ (AVG(AVG(vt0.c0))))) ISNULL);
SELECT MIN(((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(((vt1.c0) NOT NULL)))) FROM vt0, vt1;
SELECT rt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE (CAST(vt1.c1 COLLATE RTRIM AS REAL)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT (CAST(vt1.c1 COLLATE RTRIM AS REAL)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE (((CAST(vt1.c1 COLLATE RTRIM AS REAL)) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((+ (vt1.c1))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((+ (vt1.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((+ (vt1.c1))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(MAX(vt0.c0)))<=(MIN(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(MAX(vt0.c0)))<=(MIN(MIN(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(MAX(vt0.c0)))<=(MIN(MIN(vt0.c0))))) ISNULL);
SELECT * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (TRIM(DISTINCT ((rt0.c2) IS FALSE), TOTAL_CHANGES())) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c2) IS FALSE), TOTAL_CHANGES())))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE (((TRIM(DISTINCT ((rt0.c2) IS FALSE), TOTAL_CHANGES())) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LOWER(((vt1.c1)-(vt1.c1)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (LOWER(((vt1.c1)-(vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((LOWER(((vt1.c1)-(vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c0)))LIKE(json_insert(rt0.c1, rt0.c0, rt0.c2)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((NOT (rt0.c0)))LIKE(json_insert(rt0.c1, rt0.c0, rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((NOT (rt0.c0)))LIKE(json_insert(rt0.c1, rt0.c0, rt0.c2)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(CAST(AVG(rt0.c2) AS BLOB)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(CAST(AVG(rt0.c2) AS BLOB)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(CAST(AVG(rt0.c2) AS BLOB))) ISNULL);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CAST(rt0.c0 AS TEXT) AS INTEGER) RIGHT OUTER JOIN rt0 ON LIKELY(((vt0.c0) BETWEEN (rt0.c1) AND (x'9bf4d221')));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)%(rt0.c0)))-(0Xffffffffc7d3b0a5))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)%(rt0.c0)))-(0Xffffffffc7d3b0a5))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)%(rt0.c0)))-(0xffffffffc7d3b0a5))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)<>(vt0.c0)))AND(vt1.c1)))OR(((vt1.c1)-(vt1.c0))))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0)<>(vt0.c0)))AND(vt1.c1)))OR(((vt1.c1)-(vt1.c0))))))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((((vt0.c0)<>(vt0.c0)))AND(vt1.c1)))OR(((vt1.c1)-(vt1.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)&(vt1.c0))) INNER JOIN rt0 ON NULL GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)&(vt1.c0))) INNER JOIN rt0 ON NULL GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING TOTAL(((AVG(rt0.c0))<(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)&(vt1.c0))) INNER JOIN rt0 ON NULL GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING (NOT (TOTAL(((AVG(rt0.c0))<(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)&(vt1.c0))) INNER JOIN rt0 ON NULL GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING ((TOTAL(((AVG(rt0.c0))<(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0))))))) ISNULL);
SELECT * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((NOT ((vt0.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((vt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<=(((rt0.c2 IN (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((CAST(rt0.c0 AS BLOB)))<=(((rt0.c2 IN (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((CAST(rt0.c0 AS BLOB)))<=(((rt0.c2 IN (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c1 AS INTEGER))) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c1 AS INTEGER))) WHERE (((CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c2 END) NOTNULL)) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c1 AS INTEGER))) WHERE ((NOT (((CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c2 END) NOTNULL)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c1 AS INTEGER))) WHERE (((((CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c2 END) NOTNULL)) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c1 AS INTEGER))) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0) COLLATE NOCASE UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0) COLLATE NOCASE UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE ((((+ (rt0.c2)))IS NOT(((rt0.c0) NOTNULL)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt0, vt1 WHERE ((NOT ((((+ (rt0.c2)))IS NOT(((rt0.c0) NOTNULL)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE ((((((+ (rt0.c2)))IS NOT(((rt0.c0) NOTNULL)))) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((LIKELY(vt0.c0))AND(((vt0.c0)>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((LIKELY(vt0.c0))AND(((vt0.c0)>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((LIKELY(vt0.c0))AND(((vt0.c0)>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END)OR((((vt0.c0, '*O~T7r', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END)OR((((vt0.c0, '*O~T7r', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END)OR((((vt0.c0, '*O~T7r', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0 HAVING SUM(NULL) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0 HAVING SUM(NULL) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT ALL * FROM vt1 NOT INDEXED INNER JOIN vt0 ON ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))AND(((vt0.c0)==(vt1.c1)))))OR('R*' COLLATE BINARY));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))AND(((vt0.c0)==(vt1.c1)))))OR('R*' COLLATE BINARY)) WHERE (CAST(UNLIKELY(vt0.c0) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))AND(((vt0.c0)=(vt1.c1)))))OR('R*' COLLATE BINARY)) WHERE ((NOT (CAST(UNLIKELY(vt0.c0) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))AND(((vt0.c0)=(vt1.c1)))))OR('R*' COLLATE BINARY)) WHERE (((CAST(UNLIKELY(vt0.c0) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1 NOT INDEXED INNER JOIN vt0 ON ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))AND(((vt0.c0)==(vt1.c1)))))OR('R*' COLLATE BINARY));
SELECT DISTINCT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END));
SELECT DISTINCT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((HEX(DISTINCT vt0.c0)) BETWEEN (((rt0.c1) NOTNULL)) AND ((((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.32447157087105083)) AND ((vt1.c0, vt0.c0, rt0.c2)))))) UNION SELECT DISTINCT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE ((NOT (((HEX(DISTINCT vt0.c0)) BETWEEN (((rt0.c1) NOTNULL)) AND ((((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.32447157087105083)) AND ((vt1.c0, vt0.c0, rt0.c2)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((((HEX(DISTINCT vt0.c0)) BETWEEN (((rt0.c1) NOTNULL)) AND ((((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.32447157087105083)) AND ((vt1.c0, vt0.c0, rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END));
SELECT vt1.c1, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c0, rt0.c1;
SELECT ALL vt1.c1, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((vt1.c1)<((~ (vt1.c1))))) GROUP BY vt1.c1, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c1, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((vt1.c1)<((~ (vt1.c1))))))) GROUP BY vt1.c1, rt0.c0, rt0.c1 UNION SELECT vt1.c1, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((((vt1.c1)<((~ (vt1.c1))))) ISNULL)) GROUP BY vt1.c1, rt0.c0, rt0.c1;
SELECT vt1.c1, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 NOT INDEXED GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 HAVING TOTAL(rt0.c0) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 NOT INDEXED GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 HAVING TOTAL(rt0.c0) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0, rt0.c1;
SELECT * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (json_array_length((((rt0.c1, rt0.c1, vt1.c1))!=((vt0.c0, 0x3396d8a0, vt1.c1))))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT (json_array_length((((rt0.c1, rt0.c1, vt1.c1))<>((vt0.c0, 0x3396d8a0, vt1.c1))))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE (((json_array_length((((rt0.c1, rt0.c1, vt1.c1))<>((vt0.c0, 0X3396d8a0, vt1.c1))))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((((NOT (rt0.c1)))|(((rt0.c2) NOT BETWEEN (NULL) AND (vt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((((NOT (rt0.c1)))|(((rt0.c2) NOT BETWEEN (NULL) AND (vt0.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((((((NOT (rt0.c1)))|(((rt0.c2) NOT BETWEEN (NULL) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT ALL vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1;
SELECT ALL vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, vt1, vt0 WHERE (vt1.c1) GROUP BY vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1 UNION SELECT ALL vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, vt1, vt0 WHERE ((NOT (vt1.c1))) GROUP BY vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1 UNION SELECT vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, vt1, vt0 WHERE (((vt1.c1) ISNULL)) GROUP BY vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1;
SELECT ALL vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c2, vt1.c0, rt0.c0, vt1.c1;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((MIN(vt0.c0)) NOT BETWEEN (((COUNT(vt0.c0))LIKE(vt1.c0))) AND (vt1.c0)) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (((MIN(vt0.c0)) NOT BETWEEN (((COUNT(vt0.c0))LIKE(vt1.c0))) AND (vt1.c0)))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((((MIN(vt0.c0)) NOT BETWEEN (((COUNT(vt0.c0))LIKE(vt1.c0))) AND (vt1.c0))) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((MIN(vt0.c0)) NOT BETWEEN (((COUNT(vt0.c0))LIKE(vt1.c0))) AND (vt1.c0)) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (((MIN(vt0.c0)) NOT BETWEEN (((COUNT(vt0.c0))LIKE(vt1.c0))) AND (vt1.c0)))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((((MIN(vt0.c0)) NOT BETWEEN (((COUNT(vt0.c0))LIKE(vt1.c0))) AND (vt1.c0))) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))<(CAST('198869383' AS BLOB)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c2)))<(CAST('198869383' AS BLOB)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c2)))<(CAST('198869383' AS BLOB)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (UNLIKELY(DISTINCT CAST(vt1.c1 AS INTEGER))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (UNLIKELY(DISTINCT CAST(vt1.c1 AS INTEGER))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((UNLIKELY(DISTINCT CAST(vt1.c1 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(NULL))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)>(NULL))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)>(NULL))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING ((TOTAL(rt0.c0)) BETWEEN (SUM(vt0.c0)) AND (GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (((TOTAL(rt0.c0)) BETWEEN (SUM(vt0.c0)) AND (GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING ((((TOTAL(rt0.c0)) BETWEEN (SUM(vt0.c0)) AND (GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING ((TOTAL(rt0.c0)) BETWEEN (SUM(vt0.c0)) AND (GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (((TOTAL(rt0.c0)) BETWEEN (SUM(vt0.c0)) AND (GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING ((((TOTAL(rt0.c0)) BETWEEN (SUM(vt0.c0)) AND (GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE ((~ (vt1.c0))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT ((~ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((~ (vt1.c0))) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt0.c0 AS BLOB)));
SELECT DISTINCT vt1.c1 FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt0.c0 AS BLOB))) WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c1 FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt0.c0 AS BLOB))) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c1 FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt0.c0 AS BLOB))) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt0.c0 AS BLOB)));
SELECT ALL vt1.c0 FROM rt0 CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((json_array(rt0.c2, rt0.c1))) AND ((((vt1.c1)>(0.7844449587395093))))) LEFT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0 CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((json_array(rt0.c2, rt0.c1))) AND ((((vt1.c1)>(0.7844449587395093))))) LEFT OUTER JOIN vt1 ON NULL WHERE ((+ (((rt0.c2)-(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0 CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((json_array(rt0.c2, rt0.c1))) AND ((((vt1.c1)>(0.7844449587395093))))) LEFT OUTER JOIN vt1 ON NULL WHERE ((NOT ((+ (((rt0.c2)-(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0 CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((json_array(rt0.c2, rt0.c1))) AND ((((vt1.c1)>(0.7844449587395093))))) LEFT OUTER JOIN vt1 ON NULL WHERE ((((+ (((rt0.c2)-(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0 CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((json_array(rt0.c2, rt0.c1))) AND ((((vt1.c1)>(0.7844449587395093))))) LEFT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)<(COUNT(*))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)<(COUNT(*))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)<(COUNT(*))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)<(COUNT(*))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)<(COUNT(*))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)<(COUNT(*))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE (((CASE vt1.c1  WHEN rt0.c1 THEN '' WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE 0x32f19fe END) NOT BETWEEN ('1474273149') AND (((rt0.c0)%(NULL))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((CASE vt1.c1  WHEN rt0.c1 THEN '' WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE 0X32f19fe END) NOT BETWEEN ('1474273149') AND (((rt0.c0)%(NULL))))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE (((((CASE vt1.c1  WHEN rt0.c1 THEN '' WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE 0x32f19fe END) NOT BETWEEN ('1474273149') AND (((rt0.c0)%(NULL))))) ISNULL));
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c2)+(vt1.c1)), 'j#+qj~') GROUP BY vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c2)+(vt1.c1)), 'j#+qj~') WHERE (vt1.c0) GROUP BY vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 UNION SELECT vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c2)+(vt1.c1)), 'j#+qj~') WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c2)+(vt1.c1)), 'j#+qj~') WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON TRIM(((rt0.c2)+(vt1.c1)), 'j#+qj~') GROUP BY vt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CASE SUM(SUM(COUNT(rt0.c1)))  WHEN GROUP_CONCAT(TOTAL(AVG(rt0.c2))) THEN SUM(COUNT(*)) END)AND(TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((CASE SUM(SUM(COUNT(rt0.c1)))  WHEN GROUP_CONCAT(TOTAL(AVG(rt0.c2))) THEN SUM(COUNT(*)) END)AND(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((CASE SUM(SUM(COUNT(rt0.c1)))  WHEN GROUP_CONCAT(TOTAL(AVG(rt0.c2))) THEN SUM(COUNT(*)) END)AND(TOTAL(rt0.c2)))) ISNULL);
SELECT TOTAL(CAST((((vt1.c1))<=((vt1.c0))) AS NUMERIC)) FROM vt1 ORDER BY ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (x'0d26') AND ((+ (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ('aH') UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ('aH'))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((('aH') ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((vt0.c0))<((((vt1.c1) NOT NULL))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT ((((vt0.c0))<((((vt1.c1) NOT NULL))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((((vt0.c0))<((((vt1.c1) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN ((vt0.c0, '-1640714689', NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN HEX(vt0.c0) ELSE (((vt0.c0))<>((vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN ((vt0.c0, '-1640714689', NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN HEX(vt0.c0) ELSE (((vt0.c0))!=((vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN ((vt0.c0, '-1640714689', NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN HEX(vt0.c0) ELSE (((vt0.c0))<>((vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (((MAX(vt0.c0))) BETWEEN (((~ (rt0.c0)))) AND ((((COUNT(*))IS NOT(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT ((((MAX(vt0.c0))) BETWEEN (((~ (rt0.c0)))) AND ((((COUNT(*))IS NOT(TOTAL(vt0.c0)))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (((((MAX(vt0.c0))) BETWEEN (((~ (rt0.c0)))) AND ((((COUNT(*))IS NOT(TOTAL(vt0.c0))))))) ISNULL);
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (((MAX(vt0.c0))) BETWEEN (((~ (rt0.c0)))) AND ((((COUNT(*))IS NOT(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT ((((MAX(vt0.c0))) BETWEEN (((~ (rt0.c0)))) AND ((((COUNT(*))IS NOT(TOTAL(vt0.c0)))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (((((MAX(vt0.c0))) BETWEEN (((~ (rt0.c0)))) AND ((((COUNT(*))IS NOT(TOTAL(vt0.c0))))))) ISNULL);
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((NOT (vt0.c0)))=(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))==(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((NOT (vt0.c0)))==(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE (CAST((((rt0.c0))>=((x'a6b70876'))) AS REAL)) GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (CAST((((rt0.c0))>=((x'a6b70876'))) AS REAL)))) GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE (((CAST((((rt0.c0))>=((x'a6b70876'))) AS REAL)) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING GROUP_CONCAT(vt1.c0) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(vt1.c0)) ISNULL);
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING GROUP_CONCAT(vt1.c0) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(vt1.c0)) ISNULL);
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)) THEN rt0.c0 COLLATE NOCASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 END THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END WHEN CAST(rt0.c2 AS NUMERIC) THEN '0.8087527847941175' COLLATE NOCASE END) UNION ALL SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)) THEN rt0.c0 COLLATE NOCASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 END THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END WHEN CAST(rt0.c2 AS NUMERIC) THEN '0.8087527847941175' COLLATE NOCASE END))) UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((CASE WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)) THEN rt0.c0 COLLATE NOCASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 END THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END WHEN CAST(rt0.c2 AS NUMERIC) THEN '0.8087527847941175' COLLATE NOCASE END) ISNULL));
SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON (~ (NULL));
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON (~ (NULL)) WHERE ((((((x'9a96')AND(vt1.c0)))OR(vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON (~ (NULL)) WHERE ((NOT ((((((x'9a96')AND(vt1.c0)))OR(vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON (~ (NULL)) WHERE ((((((((x'9a96')AND(vt1.c0)))OR(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON (~ (NULL));
SELECT vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1 WHERE (((TRIM(vt1.c0))|(x''))) GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT (((TRIM(vt1.c0))|(x''))))) GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1 WHERE (((((TRIM(vt1.c0))|(x''))) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c0;
SELECT ALL vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c0 HAVING (((vt1.c1)) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((COUNT(*)))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c0 HAVING (NOT ((((vt1.c1)) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((COUNT(*)))))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c0 HAVING (((((vt1.c1)) NOT BETWEEN ((GROUP_CONCAT(COUNT(*)))) AND ((COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN x'' THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN x'' THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN x'' THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ('>#') UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ('>#'))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((('>#') ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))) AND (vt0.c0 COLLATE BINARY))) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))) AND (vt0.c0 COLLATE BINARY))))) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))) AND (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((rt0.c2 IN ()))AND(MAX(rt0.c2))))OR(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((((rt0.c2 IN ()))AND(MAX(rt0.c2))))OR(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((((rt0.c2 IN ()))AND(MAX(rt0.c2))))OR(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((rt0.c2 IN ()))AND(MAX(rt0.c2))))OR(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((((rt0.c2 IN ()))AND(MAX(rt0.c2))))OR(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((((rt0.c2 IN ()))AND(MAX(rt0.c2))))OR(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST((((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, 'qg+i	iiz', vt1.c0))) AS INTEGER)) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (CAST((((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, 'qg+i	iiz', vt1.c0))) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, vt1, rt0 WHERE (((CAST((((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((rt0.c0, 'qg+i	iiz', vt1.c0))) AS INTEGER)) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))=(((rt0.c0)%(rt0.c2))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((vt1.c0 IN ()))==(((rt0.c0)%(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))=(((rt0.c0)%(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (MIN(vt0.c0, vt0.c0, rt0.c0, rt0.c2))) CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE))LIKE(((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (MIN(vt0.c0, vt0.c0, rt0.c0, rt0.c2))) CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE))LIKE(((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))) WHERE (((NULL) NOT BETWEEN (rt0.c1) AND (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt1.c1 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (MIN(vt0.c0, vt0.c0, rt0.c0, rt0.c2))) CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE))LIKE(((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))) WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c1) AND (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt1.c1 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (MIN(vt0.c0, vt0.c0, rt0.c0, rt0.c2))) CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE))LIKE(((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))) WHERE (((((NULL) NOT BETWEEN (rt0.c1) AND (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt1.c1 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (MIN(vt0.c0, vt0.c0, rt0.c0, rt0.c2))) CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE))LIKE(((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((vt0.c0 IN ()))AND(rt0.c0 COLLATE BINARY)))OR(rt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0 IN ()))AND(rt0.c0 COLLATE BINARY)))OR(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((((vt0.c0 IN ()))AND(rt0.c0 COLLATE BINARY)))OR(rt0.c1))) ISNULL));
SELECT vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c1 FROM vt1, vt0 WHERE ((((((('aG?+\)2Uw')AND(vt1.c1)))AND(vt1.c1)))>(((vt1.c1) IS TRUE)))) UNION SELECT DISTINCT vt1.c1 FROM vt1, vt0 WHERE ((NOT ((((((('aG?+\)2Uw')AND(vt1.c1)))AND(vt1.c1)))>(((vt1.c1) IS TRUE)))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 NOT INDEXED, vt0 WHERE ((((((((('aG?+\)2Uw')AND(vt1.c1)))AND(vt1.c1)))>(((vt1.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1, vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt0.c1, vt0.c0 HAVING MIN(((SUM(MAX(vt1.c1)))!=(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt0.c1, vt0.c0 HAVING (NOT (MIN(((SUM(MAX(vt1.c1)))!=(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt0.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt0.c1, vt0.c0 HAVING ((MIN(((SUM(MAX(vt1.c1)))!=(rt0.c0)))) ISNULL);
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0;
SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 WHERE (((((rt0.c2)+(vt1.c1))) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c1) IS TRUE)))) UNION ALL SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 WHERE ((NOT (((((rt0.c2)+(vt1.c1))) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c1) IS TRUE)))))) UNION ALL SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 NOT INDEXED WHERE (((((((rt0.c2)+(vt1.c1))) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c1) IS TRUE)))) ISNULL));
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE ((((vt1.c1)||(vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT ((((vt1.c1)||(vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE ((((((vt1.c1)||(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 WHERE ((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((x'')))) ISNULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((x'')))) ISNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((x'')))) ISNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0, vt0;
SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ('{''') UNION ALL SELECT rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT ('{'''))) UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((('{''') ISNULL));
SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0) ISNULL))AND(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>((rt0.c2))))))AND(CHAR(rt0.c1))))AND(((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0))));
SELECT DISTINCT rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0) ISNULL))AND(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>((rt0.c2))))))AND(CHAR(rt0.c1))))AND(((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))) WHERE (SQLITE_SOURCE_ID()) UNION SELECT DISTINCT rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0) ISNULL))AND(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>((rt0.c2))))))AND(CHAR(rt0.c1))))AND(((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))) WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0) ISNULL))AND(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>((rt0.c2))))))AND(CHAR(rt0.c1))))AND(((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))) WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((vt1.c0) ISNULL))AND(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>((rt0.c2))))))AND(CHAR(rt0.c1))))AND(((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0))));
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))/(((vt1.c1)IS(vt1.c0))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0)<<(vt1.c0)))/(((vt1.c1)IS(vt1.c0))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((((((vt1.c0)<<(vt1.c0)))/(((vt1.c1)IS(vt1.c0))))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt1.c0)))||(CAST(vt1.c0 AS NUMERIC))) FULL OUTER JOIN vt1 ON CAST(vt1.c1 COLLATE NOCASE AS NUMERIC) GROUP BY rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt0.c0;
SELECT ALL vt1.c1, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT vt1.c1 COLLATE RTRIM);
SELECT vt1.c1, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT vt1.c1 COLLATE RTRIM) WHERE (vt1.c1) UNION ALL SELECT vt1.c1, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT vt1.c1 COLLATE RTRIM) WHERE ((NOT (vt1.c1))) UNION ALL SELECT ALL vt1.c1, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT vt1.c1 COLLATE RTRIM) WHERE (((vt1.c1) ISNULL));
SELECT ALL vt1.c1, rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT vt1.c1 COLLATE RTRIM);
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((((((('P6LFN', vt1.c0, rt0.c2)) BETWEEN ((NULL, vt1.c0, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.c0))))OR(('0.8146590487594871' IN (vt1.c1)))))OR(((vt1.c1)/(rt0.c2)))))AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((((((((((('P6LFN', vt1.c0, rt0.c2)) BETWEEN ((NULL, vt1.c0, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.c0))))OR(('0.8146590487594871' IN (vt1.c1)))))OR(((vt1.c1)/(rt0.c2)))))AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((((((((('P6LFN', vt1.c0, rt0.c2)) BETWEEN ((NULL, vt1.c0, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.c0))))OR(('0.8146590487594871' IN (vt1.c1)))))OR(((vt1.c1)/(rt0.c2)))))AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN vt0 ON CASE (- (rt0.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN ((rt0.c0)=(vt1.c1)) END CROSS JOIN rt0 ON vt1.c0 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt1.c1) IS TRUE) ELSE (rt0.c0 IN ()) END GROUP BY rt0.c1, vt1.c0, vt1.c1;
SELECT ALL rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt1.c1) IS TRUE) ELSE (rt0.c0 IN ()) END GROUP BY rt0.c1, vt1.c0, vt1.c1 HAVING MIN(SUM(vt1.c1)) UNION ALL SELECT rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt1.c1) IS TRUE) ELSE (rt0.c0 IN ()) END GROUP BY rt0.c1, vt1.c0, vt1.c1 HAVING (NOT (MIN(SUM(vt1.c1)))) UNION ALL SELECT rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt1.c1) IS TRUE) ELSE (rt0.c0 IN ()) END GROUP BY rt0.c1, vt1.c0, vt1.c1 HAVING ((MIN(SUM(vt1.c1))) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (('705337470')>=(NULL)) THEN (vt1.c0 IN ()) END;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (('705337470')>=(NULL)) THEN (vt1.c0 IN ()) END WHERE ((((NOT (vt1.c0)))&((vt1.c0 IN (vt1.c1))))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (('705337470')>=(NULL)) THEN (vt1.c0 IN ()) END WHERE ((NOT ((((NOT (vt1.c0)))&((vt1.c0 IN (vt1.c1))))))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (('705337470')>=(NULL)) THEN (vt1.c0 IN ()) END WHERE ((((((NOT (vt1.c0)))&((vt1.c0 IN (vt1.c1))))) ISNULL));
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (('705337470')>=(NULL)) THEN (vt1.c0 IN ()) END;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c2)OR(rt0.c0)))AND(NULL)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c0)))AND(NULL)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(NULL)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE, (rt0.c2 IN ()), ((rt0.c0) ISNULL)))>((((rt0.c0)<=(rt0.c2)), vt0.c0, rt0.c1 COLLATE BINARY)))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 COLLATE NOCASE, (rt0.c2 IN ()), ((rt0.c0) ISNULL)))>((((rt0.c0)<=(rt0.c2)), vt0.c0, rt0.c1 COLLATE BINARY)))))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c2 COLLATE NOCASE, (rt0.c2 IN ()), ((rt0.c0) ISNULL)))>((((rt0.c0)<=(rt0.c2)), vt0.c0, rt0.c1 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(CASE WHEN AVG(rt0.c1) THEN rt0.c2 ELSE SUM(rt0.c2) END) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(CASE WHEN AVG(rt0.c1) THEN rt0.c2 ELSE SUM(rt0.c2) END))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(CASE WHEN AVG(rt0.c1) THEN rt0.c2 ELSE SUM(rt0.c2) END)) ISNULL);
SELECT ALL rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (x'') UNION ALL SELECT rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((((vt0.c0))==((CAST('K' AS TEXT))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT ((((vt0.c0))=((CAST('K' AS TEXT))))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((((((vt0.c0))==((CAST('K' AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT ALL vt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt1, vt0, rt0 WHERE ((((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ())) GROUP BY vt1.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT ((((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ())))) GROUP BY vt1.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt1, vt0, rt0 WHERE ((((((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY vt1.c0 HAVING GROUP_CONCAT(MIN(AVG(vt1.c1))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(AVG(vt1.c1))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MIN(AVG(vt1.c1)))) ISNULL);
SELECT ALL MAX(HEX(DISTINCT '-1554653710')) FROM vt1;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((0X8f8eb6d)GLOB((vt1.c0 IN ())));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((0x8f8eb6d)GLOB((vt1.c0 IN ()))) WHERE ((CAST(vt1.c0 AS TEXT) IN ())) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((0X8f8eb6d)GLOB((vt1.c0 IN ()))) WHERE ((NOT ((CAST(vt1.c0 AS TEXT) IN ())))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((0X8f8eb6d)GLOB((vt1.c0 IN ()))) WHERE ((((CAST(vt1.c0 AS TEXT) IN ())) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((0X8f8eb6d)GLOB((vt1.c0 IN ())));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c1)GLOB(rt0.c2))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)GLOB(rt0.c2))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c1)GLOB(rt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((rt0.c2, vt0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((vt0.c0) IS FALSE), ((rt0.c0)-(vt0.c0)), (rt0.c2 IN ()), NULLIF(DISTINCT rt0.c0, rt0.c0))) AND ((CASE WHEN NULL THEN vt0.c0 END, COALESCE(DISTINCT rt0.c0, vt0.c0, vt0.c0, rt0.c2), ((vt0.c0)<=(rt0.c1)), 0.8723576508611597, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN 'zi' ELSE rt0.c1 END)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2, vt0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((vt0.c0) IS FALSE), ((rt0.c0)-(vt0.c0)), (rt0.c2 IN ()), NULLIF(DISTINCT rt0.c0, rt0.c0))) AND ((CASE WHEN NULL THEN vt0.c0 END, COALESCE(DISTINCT rt0.c0, vt0.c0, vt0.c0, rt0.c2), ((vt0.c0)<=(rt0.c1)), 0.8723576508611597, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN 'zi' ELSE rt0.c1 END)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c2, vt0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((vt0.c0) IS FALSE), ((rt0.c0)-(vt0.c0)), (rt0.c2 IN ()), NULLIF(DISTINCT rt0.c0, rt0.c0))) AND ((CASE WHEN NULL THEN vt0.c0 END, COALESCE(DISTINCT rt0.c0, vt0.c0, vt0.c0, rt0.c2), ((vt0.c0)<=(rt0.c1)), 0.8723576508611597, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN 'zi' ELSE rt0.c1 END)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1 HAVING CAST(MAX(vt1.c1) AS INTEGER) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (CAST(MAX(vt1.c1) AS INTEGER))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1 HAVING ((CAST(MAX(vt1.c1) AS INTEGER)) ISNULL);
SELECT ALL vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1 HAVING CAST(MAX(vt1.c1) AS INTEGER) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (CAST(MAX(vt1.c1) AS INTEGER))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1 HAVING ((CAST(MAX(vt1.c1) AS INTEGER)) ISNULL);
SELECT ALL vt0.c0, vt1.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0 FROM rt0 CROSS JOIN vt1 ON CAST(json_array_length(vt1.c0, '*xM5') AS REAL) LEFT OUTER JOIN vt0 ON (((NULL))>=((((vt0.c0)*(rt0.c0)))));
SELECT vt0.c0 FROM rt0 CROSS JOIN vt1 ON CAST(json_array_length(vt1.c0, '*xM5') AS REAL) LEFT OUTER JOIN vt0 ON (((NULL))>=((((vt0.c0)*(rt0.c0))))) WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 END IN (CASE WHEN rt0.c2 THEN rt0.c1 END, vt1.c1))) UNION ALL SELECT ALL vt0.c0 FROM rt0 CROSS JOIN vt1 ON CAST(json_array_length(vt1.c0, '*xM5') AS REAL) LEFT OUTER JOIN vt0 ON (((NULL))>=((((vt0.c0)*(rt0.c0))))) WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt0.c0 END IN (CASE WHEN rt0.c2 THEN rt0.c1 END, vt1.c1))))) UNION ALL SELECT vt0.c0 FROM rt0 CROSS JOIN vt1 ON CAST(json_array_length(vt1.c0, '*xM5') AS REAL) LEFT OUTER JOIN vt0 ON (((NULL))>=((((vt0.c0)*(rt0.c0))))) WHERE ((((CASE WHEN vt1.c0 THEN vt0.c0 END IN (CASE WHEN rt0.c2 THEN rt0.c1 END, vt1.c1))) ISNULL));
SELECT vt0.c0 FROM rt0 CROSS JOIN vt1 ON CAST(json_array_length(vt1.c0, '*xM5') AS REAL) LEFT OUTER JOIN vt0 ON (((NULL))>=((((vt0.c0)*(rt0.c0)))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0)<(vt0.c0))  WHEN (((vt0.c0, vt0.c0, '-1100272214')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((x'')<=(vt0.c0)) WHEN CASE vt0.c0  WHEN '嶙?' THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN 0X34eec0ee THEN ((vt0.c0)||(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0)<(vt0.c0))  WHEN (((vt0.c0, vt0.c0, '-1100272214')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((x'')<=(vt0.c0)) WHEN CASE vt0.c0  WHEN '嶙?' THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN 0x34eec0ee THEN ((vt0.c0)||(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0)<(vt0.c0))  WHEN (((vt0.c0, vt0.c0, '-1100272214')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((x'')<=(vt0.c0)) WHEN CASE vt0.c0  WHEN '嶙?' THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN 0X34eec0ee THEN ((vt0.c0)||(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 WHERE ('-2088637952') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT ('-2088637952'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, rt0, vt1 WHERE ((('-2088637952') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1, vt0.c0 HAVING COUNT(AVG(vt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1, vt0.c0 HAVING (NOT (COUNT(AVG(vt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1, vt0.c0 HAVING ((COUNT(AVG(vt0.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((+ (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NULL IN (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NULL IN (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NULL IN (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0)<=(vt0.c0)) IN ())))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((((((vt0.c0)<=(vt0.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(CAST(GROUP_CONCAT(rt0.c2) AS INTEGER)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(CAST(GROUP_CONCAT(rt0.c2) AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(CAST(GROUP_CONCAT(rt0.c2) AS INTEGER))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0, 0.5760329620712471, rt0.c0))<((rt0.c2, vt0.c0, NULL))))/(((rt0.c1)|(vt0.c0))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((((rt0.c0, 0.5760329620712471, rt0.c0))<((rt0.c2, vt0.c0, NULL))))/(((rt0.c1)|(vt0.c0))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c0, 0.5760329620712471, rt0.c0))<((rt0.c2, vt0.c0, NULL))))/(((rt0.c1)|(vt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((~ (vt1.c1)))AND(vt1.c0)))OR(rt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((((((~ (vt1.c1)))AND(vt1.c0)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((((~ (vt1.c1)))AND(vt1.c0)))OR(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt1 INNER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON CASE WHEN 0X48c5b731 THEN vt1.c1 ELSE vt0.c0 END COLLATE NOCASE GROUP BY vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON QUOTE('1806618301') RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS INTEGER))) GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON QUOTE('1806618301') RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS INTEGER))) GROUP BY rt0.c0, vt1.c0 HAVING PRINTF(AVG(COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON QUOTE('1806618301') RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS INTEGER))) GROUP BY rt0.c0, vt1.c0 HAVING (NOT (PRINTF(AVG(COUNT(*))))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON QUOTE('1806618301') RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS INTEGER))) GROUP BY rt0.c0, vt1.c0 HAVING ((PRINTF(AVG(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (TYPEOF(((rt0.c1)-(rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (TYPEOF(((rt0.c1)-(rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((TYPEOF(((rt0.c1)-(rt0.c1)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c1 COLLATE NOCASE)/(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt1.c1 COLLATE NOCASE)/(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c1 COLLATE NOCASE)/(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL rt0.c2 FROM vt1 CROSS JOIN rt0 ON json_remove(((vt1.c0)==(-353053406)), vt0.c0 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON (((rt0.c1)|(rt0.c2)) IN (CAST(rt0.c2 AS NUMERIC))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1 CROSS JOIN rt0 ON json_remove(((vt1.c0)==(-353053406)), vt0.c0 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON (((rt0.c1)|(rt0.c2)) IN (CAST(rt0.c2 AS NUMERIC))) WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.19885025238452925)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1 CROSS JOIN rt0 ON json_remove(((vt1.c0)==(-353053406)), vt0.c0 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON (((rt0.c1)|(rt0.c2)) IN (CAST(rt0.c2 AS NUMERIC))) WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c0, 0.19885025238452925)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1 CROSS JOIN rt0 ON json_remove(((vt1.c0)=(-353053406)), vt0.c0 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON (((rt0.c1)|(rt0.c2)) IN (CAST(rt0.c2 AS NUMERIC))) WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.19885025238452925)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1 CROSS JOIN rt0 ON json_remove(((vt1.c0)==(-353053406)), vt0.c0 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON (((rt0.c1)|(rt0.c2)) IN (CAST(rt0.c2 AS NUMERIC))) GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON (((vt0.c0) IS FALSE) IN ()) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON (((vt0.c0) IS FALSE) IN ()) GROUP BY vt0.c0 HAVING CASE MIN(rt0.c2)  WHEN (- (MAX(TOTAL(vt0.c0)))) THEN MIN(vt1.c1) WHEN (((SUM(TOTAL(COUNT(*))), vt1.c0, rt0.c0))>((vt0.c0, MAX(vt1.c0), MAX(rt0.c2)))) THEN CASE WHEN rt0.c1 THEN AVG(TOTAL(GROUP_CONCAT(rt0.c2))) ELSE GROUP_CONCAT(vt1.c1) END WHEN rt0.c1 THEN (+ (vt0.c0)) END UNION ALL SELECT vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON (((vt0.c0) IS FALSE) IN ()) GROUP BY vt0.c0 HAVING (NOT (CASE MIN(rt0.c2)  WHEN (- (MAX(TOTAL(vt0.c0)))) THEN MIN(vt1.c1) WHEN (((SUM(TOTAL(COUNT(*))), vt1.c0, rt0.c0))>((vt0.c0, MAX(vt1.c0), MAX(rt0.c2)))) THEN CASE WHEN rt0.c1 THEN AVG(TOTAL(GROUP_CONCAT(rt0.c2))) ELSE GROUP_CONCAT(vt1.c1) END WHEN rt0.c1 THEN (+ (vt0.c0)) END)) UNION ALL SELECT vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON (((vt0.c0) IS FALSE) IN ()) GROUP BY vt0.c0 HAVING ((CASE MIN(rt0.c2)  WHEN (- (MAX(TOTAL(vt0.c0)))) THEN MIN(vt1.c1) WHEN (((SUM(TOTAL(COUNT(*))), vt1.c0, rt0.c0))>((vt0.c0, MAX(vt1.c0), MAX(rt0.c2)))) THEN CASE WHEN rt0.c1 THEN AVG(TOTAL(GROUP_CONCAT(rt0.c2))) ELSE GROUP_CONCAT(vt1.c1) END WHEN rt0.c1 THEN (+ (vt0.c0)) END) ISNULL);
SELECT ALL vt1.c1, rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, vt1;
SELECT ALL vt1.c1, rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((((vt1.c1) ISNULL) IN ())) UNION ALL SELECT vt1.c1, rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT ((((vt1.c1) ISNULL) IN ())))) UNION ALL SELECT ALL vt1.c1, rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((((((vt1.c1) ISNULL) IN ())) ISNULL));
SELECT ALL vt1.c1, rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE ((+ (vt0.c0 COLLATE NOCASE))) GROUP BY vt1.c1, vt0.c0 UNION SELECT vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE ((NOT ((+ (vt0.c0 COLLATE NOCASE))))) GROUP BY vt1.c1, vt0.c0 UNION SELECT vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE ((((+ (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) GROUP BY vt1.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((- ((vt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((- ((vt0.c0 IN ())))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((- ((vt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((- (rt0.c0)))AND(MAX(vt0.c0, NULL, rt0.c1, vt0.c0))))OR(((vt0.c0)<(vt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((((- (rt0.c0)))AND(MAX(vt0.c0, NULL, rt0.c1, vt0.c0))))OR(((vt0.c0)<(vt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((- (rt0.c0)))AND(MAX(vt0.c0, NULL, rt0.c1, vt0.c0))))OR(((vt0.c0)<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))+(CAST(vt0.c0 AS BLOB))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))+(CAST(vt0.c0 AS BLOB))) WHERE (((((rt0.c2)>>(rt0.c0))) NOTNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))+(CAST(vt0.c0 AS BLOB))) WHERE ((NOT (((((rt0.c2)>>(rt0.c0))) NOTNULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))+(CAST(vt0.c0 AS BLOB))) WHERE (((((((rt0.c2)>>(rt0.c0))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))+(CAST(vt0.c0 AS BLOB))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(rt0.c2) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(rt0.c2) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL SUM(((((rt0.c2)<(rt0.c1)))<=(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) FROM rt0 ORDER BY ((((((((NULL)AND(rt0.c0)))AND(rt0.c2)))AND('!f Cfz&')))AND(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((rt0.c2)+(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (CAST((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) AS TEXT)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (CAST((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) AS TEXT)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((CAST((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c1)LIKE(vt1.c0))) BETWEEN (18089696) AND ((vt1.c1 IN ())))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c1)LIKE(vt1.c0))) BETWEEN (18089696) AND ((vt1.c1 IN ())))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c1)LIKE(vt1.c0))) BETWEEN (18089696) AND ((vt1.c1 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) ISNULL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c0 END) ISNULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 END) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(((COUNT(rt0.c2)) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(((COUNT(rt0.c2)) NOTNULL)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(((COUNT(rt0.c2)) NOTNULL))) ISNULL);
SELECT vt1.c1, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((((-308727144)) NOT BETWEEN ((0.5661525076035441)) AND (('1582807863')))) BETWEEN (((((((((vt0.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR('0.7830516885134741'))) AND ((('-1100272214') IS TRUE)));
SELECT vt1.c1, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((((-308727144)) NOT BETWEEN ((0.5661525076035441)) AND (('1582807863')))) BETWEEN (((((((((vt0.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR('0.7830516885134741'))) AND ((('-1100272214') IS TRUE))) WHERE (((MIN(vt0.c0, vt0.c0)) NOT BETWEEN ((~ (vt0.c0))) AND (COALESCE(rt0.c1, NULL)))) UNION ALL SELECT vt1.c1, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((((-308727144)) NOT BETWEEN ((0.5661525076035441)) AND (('1582807863')))) BETWEEN (((((((((vt0.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR('0.7830516885134741'))) AND ((('-1100272214') IS TRUE))) WHERE ((NOT (((MIN(vt0.c0, vt0.c0)) NOT BETWEEN ((~ (vt0.c0))) AND (COALESCE(rt0.c1, NULL)))))) UNION ALL SELECT ALL vt1.c1, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((((-308727144)) NOT BETWEEN ((0.5661525076035441)) AND (('1582807863')))) BETWEEN (((((((((vt0.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR('0.7830516885134741'))) AND ((('-1100272214') IS TRUE))) WHERE (((((MIN(vt0.c0, vt0.c0)) NOT BETWEEN ((~ (vt0.c0))) AND (COALESCE(rt0.c1, NULL)))) ISNULL));
SELECT vt1.c1, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((((-308727144)) NOT BETWEEN ((0.5661525076035441)) AND (('1582807863')))) BETWEEN (((((((((vt0.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR('0.7830516885134741'))) AND ((('-1100272214') IS TRUE)));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ('1083578794'))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((NOT ('1083578794'))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, vt0, rt0 WHERE ((((NOT ('1083578794'))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, vt0, rt0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((('nu([aP/ꏓ'))>=(('-830752433'))))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((('nu([aP/ꏓ'))>=(('-830752433'))))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((((('nu([aP/ꏓ'))>=(('-830752433'))))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 HAVING 1723559276 UNION ALL SELECT ALL vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (1723559276)) UNION ALL SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 HAVING ((1723559276) ISNULL);
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 HAVING 1723559276 UNION ALL SELECT ALL vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (1723559276)) UNION ALL SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 HAVING ((1723559276) ISNULL);
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)AND('190855348'))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)AND('190855348'))))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)AND('190855348'))) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((NULL) NOT BETWEEN (rt0.c0) AND ((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c0) AND ((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((NULL) NOT BETWEEN (rt0.c0) AND ((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((((((((vt1.c1)AND(0.2940373595181788)))OR('1337101969')))OR(vt0.c0)))AND(vt1.c1))) AND (((vt1.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((((((((vt1.c1)AND(0.2940373595181788)))OR('1337101969')))OR(vt0.c0)))AND(vt1.c1))) AND (((vt1.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((((((((vt1.c1)AND(0.2940373595181788)))OR('1337101969')))OR(vt0.c0)))AND(vt1.c1))) AND (((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING COUNT(SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (COUNT(SUM(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING ((COUNT(SUM(rt0.c1))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE (CAST(NULL AS TEXT)) UNION SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION SELECT DISTINCT rt0.c2 FROM vt1, rt0 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt1, rt0;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))-((((vt1.c0))>=((vt1.c0)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0 IN ()))-((((vt1.c0))>=((vt1.c0)))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0 WHERE ((((((vt0.c0 IN ()))-((((vt1.c0))>=((vt1.c0)))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(COUNT(*))) IS TRUE) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((MAX(COUNT(*))) IS TRUE))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((MAX(COUNT(*))) IS TRUE)) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0)IS NOT(rt0.c0))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (vt1.c1 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((rt0.c0)IS NOT(rt0.c0))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (vt1.c1 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((((rt0.c0)IS NOT(rt0.c0))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (vt1.c1 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 'C(' CROSS JOIN vt1 ON ((((CASE 'Q1[/'  WHEN vt1.c0 THEN rt0.c0 END)OR(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0)<<(vt1.c1))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 'C(' CROSS JOIN vt1 ON ((((CASE 'Q1[/'  WHEN vt1.c0 THEN rt0.c0 END)OR(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0)<<(vt1.c1)))) WHERE ((NOT (rt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 'C(' CROSS JOIN vt1 ON ((((CASE 'Q1[/'  WHEN vt1.c0 THEN rt0.c0 END)OR(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0)<<(vt1.c1)))) WHERE ((NOT ((NOT (rt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 'C(' CROSS JOIN vt1 ON ((((CASE 'Q1[/'  WHEN vt1.c0 THEN rt0.c0 END)OR(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0)<<(vt1.c1)))) WHERE ((((NOT (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 'C(' CROSS JOIN vt1 ON ((((CASE 'Q1[/'  WHEN vt1.c0 THEN rt0.c0 END)OR(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0)<<(vt1.c1))));
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE (TRIM((vt1.c1 IN ()))) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE ((NOT (TRIM((vt1.c1 IN ()))))) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE (((TRIM((vt1.c1 IN ()))) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(TOTAL(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c1 IN ()))AND(vt0.c0)))OR(((NULL)IS(vt0.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((((vt1.c1 IN ()))AND(vt0.c0)))OR(((NULL)IS(vt0.c0))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((((vt1.c1 IN ()))AND(vt0.c0)))OR(((NULL)IS(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (x'') UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, rt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE (((TYPEOF(DISTINCT vt1.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))) AND (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c1 ELSE vt1.c0 END))) GROUP BY vt1.c0, vt1.c1, vt0.c0, rt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((TYPEOF(DISTINCT vt1.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))) AND (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c1 ELSE vt1.c0 END))))) GROUP BY vt1.c0, vt1.c1, vt0.c0, rt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE (((((TYPEOF(DISTINCT vt1.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))) AND (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c1 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0, rt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, rt0.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING MIN(CAST(MIN(GROUP_CONCAT('-771891849')) AS INTEGER)) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(CAST(MIN(GROUP_CONCAT('-771891849')) AS INTEGER)))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((MIN(CAST(MIN(GROUP_CONCAT('-771891849')) AS INTEGER))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (CAST(vt1.c1 AS BLOB) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c1 AS BLOB) COLLATE RTRIM))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((CAST(vt1.c1 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0;
SELECT ALL vt1.c1, vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c1, vt0.c0, rt0.c0;
SELECT vt1.c1, vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE (((((CAST(vt1.c1 AS TEXT))OR(((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c2)))))AND(((((rt0.c2)AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt1.c1, vt0.c0, rt0.c0 UNION SELECT vt1.c1, vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT (((((CAST(vt1.c1 AS TEXT))OR(((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c2)))))AND(((((rt0.c2)AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt1.c1, vt0.c0, rt0.c0 UNION SELECT ALL vt1.c1, vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE (((((((CAST(vt1.c1 AS TEXT))OR(((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c2)))))AND(((((rt0.c2)AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt1.c1, vt0.c0, rt0.c0;
SELECT ALL vt1.c1, vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (- (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (- (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT SUM(CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((((vt1.c0)AND(vt1.c0)))AND(NULL)) ELSE ((vt1.c1) ISNULL) END) FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 END)IS(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt1.c1, vt0.c0, rt0.c1 FROM rt0, vt0, vt1;
SELECT DISTINCT vt1.c1, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 WHERE (NULLIF(DISTINCT ((rt0.c2) ISNULL), vt1.c0 COLLATE BINARY)) UNION SELECT DISTINCT vt1.c1, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT (NULLIF(DISTINCT ((rt0.c2) ISNULL), vt1.c0 COLLATE BINARY)))) UNION SELECT DISTINCT vt1.c1, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 WHERE (((NULLIF(DISTINCT ((rt0.c2) ISNULL), vt1.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0, rt0.c1 FROM rt0, vt0, vt1;
SELECT rt0.c0, vt1.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c1;
SELECT rt0.c0, vt1.c1 FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c0 COLLATE RTRIM)>(((rt0.c1)<<(vt1.c1))))) GROUP BY rt0.c0, vt1.c1 UNION SELECT rt0.c0, vt1.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)>(((rt0.c1)<<(vt1.c1))))))) GROUP BY rt0.c0, vt1.c1 UNION SELECT ALL rt0.c0, vt1.c1 FROM rt0 NATURAL JOIN vt1 WHERE (((((rt0.c0 COLLATE RTRIM)>(((rt0.c1)<<(vt1.c1))))) ISNULL)) GROUP BY rt0.c0, vt1.c1;
SELECT rt0.c0, vt1.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(AVG(vt0.c0))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (0.5472241613147902) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (0.5472241613147902))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((0.5472241613147902) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (IFNULL(((vt0.c0)/(vt1.c0)), ((vt1.c1)IS NOT(vt1.c1)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (IFNULL(((vt0.c0)/(vt1.c0)), ((vt1.c1)IS NOT(vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((IFNULL(((vt0.c0)/(vt1.c0)), ((vt1.c1)IS NOT(vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))<(CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))<(CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))<(CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(']g') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(']g'))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(']g')) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(']g') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(']g'))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(']g')) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, vt1.c1, rt0.c1 FROM vt0, vt1, rt0;
SELECT ALL rt0.c2, vt1.c1, rt0.c1 FROM vt0, vt1, rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) IS FALSE)))) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c1 FROM vt0, vt1, rt0 WHERE (((((((rt0.c0) NOT NULL)) IS FALSE)) ISNULL));
SELECT rt0.c2, vt1.c1, rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c1, vt1.c1))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((NOT ((vt1.c0 IN (vt1.c1, vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((NOT ((vt1.c0 IN (vt1.c1, vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, vt1, rt0 WHERE ((x'5164' IN (((rt0.c0)<=(rt0.c0))))) GROUP BY vt1.c1, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((x'5164' IN (((rt0.c0)<=(rt0.c0))))))) GROUP BY vt1.c1, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt1.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((x'5164' IN (((rt0.c0)<=(rt0.c0))))) ISNULL)) GROUP BY vt1.c1, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((((SUM(rt0.c1), COUNT(*), rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, MIN(AVG(vt0.c0)))) AND ((rt0.c1, AVG(rt0.c1), rt0.c0))) IN ()) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (((((SUM(rt0.c1), COUNT(*), rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, MIN(AVG(vt0.c0)))) AND ((rt0.c1, AVG(rt0.c1), rt0.c0))) IN ()))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((((((SUM(rt0.c1), COUNT(*), rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, MIN(AVG(vt0.c0)))) AND ((rt0.c1, AVG(rt0.c1), rt0.c0))) IN ())) ISNULL);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((((SUM(rt0.c1), COUNT(*), rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, MIN(AVG(vt0.c0)))) AND ((rt0.c1, AVG(rt0.c1), rt0.c0))) IN ()) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (((((SUM(rt0.c1), COUNT(*), rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, MIN(AVG(vt0.c0)))) AND ((rt0.c1, AVG(rt0.c1), rt0.c0))) IN ()))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((((((SUM(rt0.c1), COUNT(*), rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, MIN(AVG(vt0.c0)))) AND ((rt0.c1, AVG(rt0.c1), rt0.c0))) IN ())) ISNULL);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL MAX(vt1.c1) FROM vt0, rt0, vt1 ORDER BY ((((rt0.c2)/(rt0.c2)))&(((NULL)IS NOT(vt0.c0)))), CASE 0.9711008575526536  WHEN CAST(rt0.c2 AS BLOB) THEN x'' WHEN (+ (0.5484419245201697)) THEN ((NULL)IS(rt0.c0)) WHEN (vt0.c0 IN (rt0.c2)) THEN ((vt1.c0)+(vt0.c0)) END;
SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c0)|(vt1.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN NULL THEN vt0.c0 END;
SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c0)|(vt1.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN NULL THEN vt0.c0 END WHERE (vt1.c1) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c0)|(vt1.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN NULL THEN vt0.c0 END WHERE ((NOT (vt1.c1))) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c0)|(vt1.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN NULL THEN vt0.c0 END WHERE (((vt1.c1) ISNULL));
SELECT vt1.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt1 INNER JOIN vt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c0)|(vt1.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN NULL THEN vt0.c0 END;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((((vt1.c0, INSTR(rt0.c0, rt0.c1), ((rt0.c2)!=(rt0.c2)), ((vt0.c0)-(rt0.c1)), CAST(rt0.c1 AS INTEGER)))>=((((rt0.c0)IS NOT(vt0.c0)), 2.109853256E9, vt0.c0 COLLATE BINARY, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))), (rt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT ((((vt1.c0, INSTR(rt0.c0, rt0.c1), ((rt0.c2)!=(rt0.c2)), ((vt0.c0)-(rt0.c1)), CAST(rt0.c1 AS INTEGER)))>=((((rt0.c0)IS NOT(vt0.c0)), 2.109853256E9, vt0.c0 COLLATE BINARY, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))), (rt0.c2 IN ()))))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((((((vt1.c0, INSTR(rt0.c0, rt0.c1), ((rt0.c2)<>(rt0.c2)), ((vt0.c0)-(rt0.c1)), CAST(rt0.c1 AS INTEGER)))>=((((rt0.c0)IS NOT(vt0.c0)), 2.109853256E9, vt0.c0 COLLATE BINARY, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))), (rt0.c2 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(vt0.c0)) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(vt0.c0)) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c1))) AND (vt0.c0 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(vt0.c0)) WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c1))) AND (vt0.c0 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(vt0.c0)) WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c1))) AND (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(vt0.c0)) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0;
SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((('-1493750869') BETWEEN (vt1.c1) AND (rt0.c2)))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((('-1493750869') BETWEEN (vt1.c1) AND (rt0.c2)))) GROUP BY rt0.c0 HAVING AVG(SUM(vt1.c0)) UNION ALL SELECT rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((('-1493750869') BETWEEN (vt1.c1) AND (rt0.c2)))) GROUP BY rt0.c0 HAVING (NOT (AVG(SUM(vt1.c0)))) UNION ALL SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((('-1493750869') BETWEEN (vt1.c1) AND (rt0.c2)))) GROUP BY rt0.c0 HAVING ((AVG(SUM(vt1.c0))) ISNULL);
SELECT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((+ (((vt1.c1)%(vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT ((+ (((vt1.c1)%(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((+ (((vt1.c1)%(vt1.c0))))) ISNULL));
SELECT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((NULL)IS NOT(vt1.c1)))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND((((('-1121618208')OR(vt1.c1)))OR('|\r,8ml3V')))))OR((vt1.c0 IN (vt1.c1))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((NULL)IS NOT(vt1.c1)))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND((((('-1121618208')OR(vt1.c1)))OR('|\r,8ml3V')))))OR((vt1.c0 IN (vt1.c1))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((((NULL)IS NOT(vt1.c1)))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND((((('-1121618208')OR(vt1.c1)))OR('|\r,8ml3V')))))OR((vt1.c0 IN (vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN load_extension(vt1.c1) THEN (((NULL, -1.640714689E9, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c1))) WHEN (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0)%(vt1.c1)) WHEN (((vt1.c1, vt0.c0, x'', '68802375', vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) THEN (vt1.c1 IN ()) ELSE vt1.c0 COLLATE NOCASE END) GROUP BY vt1.c1, vt0.c0 UNION SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE SQLITE_SOURCE_ID()  WHEN load_extension(vt1.c1) THEN (((NULL, -1.640714689E9, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c1))) WHEN (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0)%(vt1.c1)) WHEN (((vt1.c1, vt0.c0, x'', '68802375', vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) THEN (vt1.c1 IN ()) ELSE vt1.c0 COLLATE NOCASE END))) GROUP BY vt1.c1, vt0.c0 UNION SELECT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (((CASE SQLITE_SOURCE_ID()  WHEN load_extension(vt1.c1) THEN (((NULL, -1.640714689E9, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c1))) WHEN (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0)%(vt1.c1)) WHEN (((vt1.c1, vt0.c0, x'', '68802375', vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) THEN (vt1.c1 IN ()) ELSE vt1.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1 HAVING CASE CAST(vt0.c0 AS REAL)  WHEN ((((COUNT(0.5522094621436313))AND(vt1.c0)))AND(rt0.c0)) THEN MAX(rt0.c0) ELSE '885481159' END UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1 HAVING (NOT (CASE CAST(vt0.c0 AS REAL)  WHEN ((((COUNT(0.5522094621436313))AND(vt1.c0)))AND(rt0.c0)) THEN MAX(rt0.c0) ELSE '885481159' END)) UNION ALL SELECT vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1 HAVING ((CASE CAST(vt0.c0 AS REAL)  WHEN ((((COUNT(0.5522094621436313))AND(vt1.c0)))AND(rt0.c0)) THEN MAX(rt0.c0) ELSE '885481159' END) ISNULL);
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1 HAVING CASE CAST(vt0.c0 AS REAL)  WHEN ((((COUNT(0.5522094621436313))AND(vt1.c0)))AND(rt0.c0)) THEN MAX(rt0.c0) ELSE '885481159' END UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1 HAVING (NOT (CASE CAST(vt0.c0 AS REAL)  WHEN ((((COUNT(0.5522094621436313))AND(vt1.c0)))AND(rt0.c0)) THEN MAX(rt0.c0) ELSE '885481159' END)) UNION ALL SELECT vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1 HAVING ((CASE CAST(vt0.c0 AS REAL)  WHEN ((((COUNT(0.5522094621436313))AND(vt1.c0)))AND(rt0.c0)) THEN MAX(rt0.c0) ELSE '885481159' END) ISNULL);
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (json_type(CASE WHEN vt0.c0 THEN 0.21889608296584218 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6834022642774931 THEN vt0.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (json_type(CASE WHEN vt0.c0 THEN 0.21889608296584218 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6834022642774931 THEN vt0.c0 END)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((json_type(CASE WHEN vt0.c0 THEN 0.21889608296584218 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6834022642774931 THEN vt0.c0 END)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt0, vt1, rt0 WHERE ((((x'7c0c7b87' IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((- (x''))))) UNION SELECT DISTINCT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt0, vt1, rt0 WHERE ((NOT ((((x'7c0c7b87' IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((- (x''))))))) UNION SELECT DISTINCT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt0, vt1, rt0 WHERE ((((((x'7c0c7b87' IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((- (x''))))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt0, vt1, rt0;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE (CAST(((rt0.c1)GLOB(vt1.c1)) AS INTEGER)) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (CAST(((rt0.c1)GLOB(vt1.c1)) AS INTEGER)))) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 NOT INDEXED, vt1 WHERE (((CAST(((rt0.c1)GLOB(vt1.c1)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT vt1.c1, rt0.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c1, rt0.c1;
SELECT vt1.c1, rt0.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c1, rt0.c1 HAVING CASE WHEN vt1.c0 COLLATE RTRIM THEN MIN(COUNT(MAX(GROUP_CONCAT(TOTAL(vt1.c1))))) ELSE COUNT(*) END UNION ALL SELECT vt1.c1, rt0.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c1, rt0.c1 HAVING (NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN MIN(COUNT(MAX(GROUP_CONCAT(TOTAL(vt1.c1))))) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt1.c1, rt0.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c1, rt0.c1 HAVING ((CASE WHEN vt1.c0 COLLATE RTRIM THEN MIN(COUNT(MAX(GROUP_CONCAT(TOTAL(vt1.c1))))) ELSE COUNT(*) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, vt1, rt0 WHERE (CAST(((rt0.c1)<=(rt0.c2)) AS BLOB)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, vt1, rt0 WHERE ((NOT (CAST(((rt0.c1)<=(rt0.c2)) AS BLOB)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, vt1, rt0 WHERE (((CAST(((rt0.c1)<=(rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1;
SELECT ALL vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1 HAVING MIN(ABS(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1 HAVING (NOT (MIN(ABS(vt0.c0)))) UNION ALL SELECT vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1 HAVING ((MIN(ABS(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1;
SELECT ALL vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1 HAVING MIN(ABS(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1 HAVING (NOT (MIN(ABS(vt0.c0)))) UNION ALL SELECT vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1 HAVING ((MIN(ABS(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt1.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c1, rt0.c1;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt0, vt1;
SELECT rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE (CAST((+ (rt0.c0)) AS NUMERIC)) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE ((NOT (CAST((+ (rt0.c0)) AS NUMERIC)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE (((CAST((+ (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((LIKE(vt0.c0, vt0.c0, '6'), CAST(vt0.c0 AS TEXT), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==(('0.6834022642774931', (vt0.c0 IN ()), ((vt0.c0)<>(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((LIKE(vt0.c0, vt0.c0, '6'), CAST(vt0.c0 AS TEXT), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==(('0.6834022642774931', (vt0.c0 IN ()), ((vt0.c0)!=(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((LIKE(vt0.c0, vt0.c0, '6'), CAST(vt0.c0 AS TEXT), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==(('0.6834022642774931', (vt0.c0 IN ()), ((vt0.c0)!=(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE BINARY) GROUP BY vt1.c1, vt0.c0 UNION SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE BINARY))) GROUP BY vt1.c1, vt0.c0 UNION SELECT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(rt0.c2))OR(GROUP_CONCAT(TOTAL(MAX(TOTAL(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((SUM(rt0.c2))OR(GROUP_CONCAT(TOTAL(MAX(TOTAL(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((SUM(rt0.c2))OR(GROUP_CONCAT(TOTAL(MAX(TOTAL(rt0.c0))))))) ISNULL);
SELECT ALL * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((rt0.c0 IN ())) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT ((((rt0.c0 IN ())) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((((rt0.c0 IN ())) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((vt1.c0, NULL, vt1.c1)) BETWEEN ((((rt0.c0) IS FALSE), (NOT (vt0.c0)), RTRIM(vt0.c0))) AND ((CAST(rt0.c2 AS BLOB), (NOT (rt0.c0)), (NOT (rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT ((((vt1.c0, NULL, vt1.c1)) BETWEEN ((((rt0.c0) IS FALSE), (NOT (vt0.c0)), RTRIM(vt0.c0))) AND ((CAST(rt0.c2 AS BLOB), (NOT (rt0.c0)), (NOT (rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((((vt1.c0, NULL, vt1.c1)) BETWEEN ((((rt0.c0) IS FALSE), (NOT (vt0.c0)), RTRIM(vt0.c0))) AND ((CAST(rt0.c2 AS BLOB), (NOT (rt0.c0)), (NOT (rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c1)>(vt1.c1)))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT (((((((rt0.c1)>(vt1.c1)))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((((((rt0.c1)>(vt1.c1)))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT ALL rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0 HAVING ((((((((CAST(COUNT(vt1.c0) AS NUMERIC))AND(COUNT(vt0.c0))))OR(AVG(x'33e8'))))AND(COUNT(*))))AND(COUNT(rt0.c1))) UNION ALL SELECT rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0 HAVING (NOT (((((((((CAST(COUNT(vt1.c0) AS NUMERIC))AND(COUNT(vt0.c0))))OR(AVG(x'33e8'))))AND(COUNT(*))))AND(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0 HAVING ((((((((((CAST(COUNT(vt1.c0) AS NUMERIC))AND(COUNT(vt0.c0))))OR(AVG(x'33e8'))))AND(COUNT(*))))AND(COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0 HAVING ((((((((CAST(COUNT(vt1.c0) AS NUMERIC))AND(COUNT(vt0.c0))))OR(AVG(x'33e8'))))AND(COUNT(*))))AND(COUNT(rt0.c1))) UNION ALL SELECT rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0 HAVING (NOT (((((((((CAST(COUNT(vt1.c0) AS NUMERIC))AND(COUNT(vt0.c0))))OR(AVG(x'33e8'))))AND(COUNT(*))))AND(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0 HAVING ((((((((((CAST(COUNT(vt1.c0) AS NUMERIC))AND(COUNT(vt0.c0))))OR(AVG(x'33e8'))))AND(COUNT(*))))AND(COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt1, vt0, rt0;
SELECT rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE ((((((rt0.c0)>=(rt0.c0))))<((vt1.c1 COLLATE RTRIM)))) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt1, vt0 NOT INDEXED, rt0 WHERE ((NOT ((((((rt0.c0)>=(rt0.c0))))<((vt1.c1 COLLATE RTRIM)))))) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt1, vt0, rt0 WHERE ((((((((rt0.c0)>=(rt0.c0))))<((vt1.c1 COLLATE RTRIM)))) ISNULL));
SELECT ALL rt0.c2, vt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (CASE ((rt0.c1)|(rt0.c1))  WHEN ((rt0.c2)*(vt0.c0)) THEN (- (vt1.c1)) ELSE rt0.c1 END) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (CASE ((rt0.c1)|(rt0.c1))  WHEN ((rt0.c2)*(vt0.c0)) THEN (- (vt1.c1)) ELSE rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((CASE ((rt0.c1)|(rt0.c1))  WHEN ((rt0.c2)*(vt0.c0)) THEN (- (vt1.c1)) ELSE rt0.c1 END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0, rt0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c1 THEN '磗3' WHEN vt1.c0 THEN vt1.c1 END)OR(((vt0.c0) IS FALSE)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c1 THEN '磗3' WHEN vt1.c0 THEN vt1.c1 END)OR(((vt0.c0) IS FALSE)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c1 THEN '磗3' WHEN vt1.c0 THEN vt1.c1 END)OR(((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING GROUP_CONCAT(MAX(vt1.c0)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(MAX(vt1.c0)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT(MAX(vt1.c0))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((0.7844449587395093)==(rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((0.7844449587395093)=(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE (((((0.7844449587395093)=(rt0.c2))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1) NOT NULL), json_array_length(1080365217), (+ (rt0.c0))))<(((+ (rt0.c2)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(x'3335')), ((vt0.c0)GLOB(NULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c1) NOT NULL), json_array_length(1080365217), (+ (rt0.c0))))<(((+ (rt0.c2)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(x'3335')), ((vt0.c0)GLOB(NULL)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0 NOT INDEXED, rt0 WHERE ((((((((rt0.c1) NOT NULL), json_array_length(1080365217), (+ (rt0.c0))))<(((+ (rt0.c2)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(x'3335')), ((vt0.c0)GLOB(NULL)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (load_extension(LIKELY(DISTINCT rt0.c2), '')) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (load_extension(LIKELY(DISTINCT rt0.c2), '')))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((load_extension(LIKELY(DISTINCT rt0.c2), '')) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0 HAVING x'' UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0 HAVING ((x'') ISNULL);
SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0 HAVING x'' UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0 HAVING ((x'') ISNULL);
SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0 FROM vt1, vt0, rt0;
SELECT ALL rt0.c0 FROM vt1, vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN x'' ELSE vt1.c1 END COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN x'' ELSE vt1.c1 END COLLATE NOCASE))) UNION ALL SELECT rt0.c0 FROM vt1, vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN x'' ELSE vt1.c1 END COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (x'') UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(0.9161611620011301) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(0.9161611620011301))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(0.9161611620011301)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(0.9161611620011301) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(0.9161611620011301))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(0.9161611620011301)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0))) BETWEEN ((+ (vt1.c1))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(NULL)))OR(rt0.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0))) BETWEEN ((+ (vt1.c1))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(NULL)))OR(rt0.c0)))OR(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0))) BETWEEN ((+ (vt1.c1))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(NULL)))OR(rt0.c0)))OR(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((load_extension(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((load_extension(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((load_extension(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((('-2037559809')-((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.5744095827827936, vt0.c0)) BETWEEN ((1.591596087E9, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, '-153883107')))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((('-2037559809')-((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.5744095827827936, vt0.c0)) BETWEEN ((1.591596087E9, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, '-153883107')))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((('-2037559809')-((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.5744095827827936, vt0.c0)) BETWEEN ((1.591596087E9, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, '-153883107')))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(0.888820435233137)))IS((((vt0.c0, rt0.c1, rt0.c2))==((vt0.c0, rt0.c2, rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c1)))AND(0.888820435233137)))IS((((vt0.c0, rt0.c1, rt0.c2))=((vt0.c0, rt0.c2, rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))AND(0.888820435233137)))IS((((vt0.c0, rt0.c1, rt0.c2))==((vt0.c0, rt0.c2, rt0.c1)))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c0)==(0.05056262206839557))));
SELECT DISTINCT vt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c0)=(0.05056262206839557)))) WHERE ((rt0.c1 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c0)=(0.05056262206839557)))) WHERE ((NOT ((rt0.c1 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c0)==(0.05056262206839557)))) WHERE ((((rt0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c0)==(0.05056262206839557))));
SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((vt1.c1 IN ())) BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c1, rt0.c1, rt0.c2)))) AND ((vt1.c1 IN (vt1.c1)))) GROUP BY vt0.c0, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((vt1.c1 IN ())) BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c1, rt0.c1, rt0.c2)))) AND ((vt1.c1 IN (vt1.c1)))) WHERE (rt0.c2 COLLATE RTRIM) GROUP BY vt0.c0, rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((vt1.c1 IN ())) BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c1, rt0.c1, rt0.c2)))) AND ((vt1.c1 IN (vt1.c1)))) WHERE ((NOT (rt0.c2 COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c0, rt0.c1, vt1.c0 UNION SELECT vt0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((vt1.c1 IN ())) BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c1, rt0.c1, rt0.c2)))) AND ((vt1.c1 IN (vt1.c1)))) WHERE (((rt0.c2 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((vt1.c1 IN ())) BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c1, rt0.c1, rt0.c2)))) AND ((vt1.c1 IN (vt1.c1)))) GROUP BY vt0.c0, rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (UPPER((((x'', x'', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (UPPER((((x'', x'', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((UPPER((((x'', x'', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN ()) INNER JOIN vt1 ON (- (CAST(rt0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN ()) INNER JOIN vt1 ON (- (CAST(rt0.c0 AS NUMERIC))) WHERE ('g') UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN ()) INNER JOIN vt1 ON (- (CAST(rt0.c0 AS NUMERIC))) WHERE ((NOT ('g'))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN ()) INNER JOIN vt1 ON (- (CAST(rt0.c0 AS NUMERIC))) WHERE ((('g') ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c2 END IN ()) INNER JOIN vt1 ON (- (CAST(rt0.c0 AS NUMERIC)));
SELECT vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((rt0.c1)*(vt0.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((rt0.c1)*(vt0.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0, vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((rt0.c1)*(vt0.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CAST(MIN(GROUP_CONCAT(vt0.c0)) AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CAST(MIN(GROUP_CONCAT(vt0.c0)) AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CAST(MIN(GROUP_CONCAT(vt0.c0)) AS REAL))) ISNULL);
SELECT ALL SUM((((rt0.c2 IN (rt0.c0)))%((vt1.c1 IN (vt1.c0))))) FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (vt0.c0) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1 UNION SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((TOTAL(GROUP_CONCAT(COUNT(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((((TOTAL(GROUP_CONCAT(COUNT(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((((TOTAL(GROUP_CONCAT(COUNT(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((TOTAL(GROUP_CONCAT(COUNT(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((((TOTAL(GROUP_CONCAT(COUNT(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((((TOTAL(GROUP_CONCAT(COUNT(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1, vt0;
SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 WHERE (rt0.c0) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 WHERE (((rt0.c0) ISNULL));
SELECT vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((ABS(DISTINCT vt1.c1))==((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((ABS(DISTINCT vt1.c1))==((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((ABS(DISTINCT vt1.c1))==((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)*(rt0.c1)))) AND ((((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1)))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)*(rt0.c1)))) AND ((((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1)))))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((rt0.c1)*(rt0.c1)))) AND ((((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1)))))) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0 HAVING MIN(MAX(GROUP_CONCAT(AVG(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (MIN(MAX(GROUP_CONCAT(AVG(vt1.c0)))))) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0 HAVING ((MIN(MAX(GROUP_CONCAT(AVG(vt1.c0))))) ISNULL);
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON vt1.c0;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS REAL)) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE ((NOT (CAST(CAST(vt1.c1 AS BLOB) AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((CAST(CAST(vt1.c1 AS BLOB) AS REAL)) ISNULL));
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON vt1.c0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((NOT (CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((NOT (CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING MAX(CAST(rt0.c1 AS REAL)) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING MAX(CAST(rt0.c1 AS REAL)) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST((((vt1.c1))<((vt1.c0))) AS BLOB)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((((vt1.c1))<((vt1.c0))) AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((((vt1.c1))<((vt1.c0))) AS BLOB)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)) AND ((((vt1.c0)<(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)) AND ((((vt1.c0)<(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)) AND ((((vt1.c0)<(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0)GLOB(' Ow]Fa5\횙')) IN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)), x''))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)GLOB(' Ow]Fa5\횙')) IN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)), x''))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)GLOB(' Ow]Fa5\횙')) IN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)), x''))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 NOT INDEXED GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(MAX(rt0.c0))) NOTNULL) COLLATE RTRIM UNION ALL SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((GROUP_CONCAT(MAX(rt0.c0))) NOTNULL) COLLATE RTRIM)) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((((GROUP_CONCAT(MAX(rt0.c0))) NOTNULL) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 WHERE ((NULL IN ())) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 NOT INDEXED WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 WHERE ((((NULL IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE (((((((vt0.c0) NOTNULL))AND(1.7976931348623157E308)))AND(((x'3a38')|(rt0.c2))))) UNION SELECT DISTINCT vt1.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (((((((vt0.c0) NOTNULL))AND(1.7976931348623157E308)))AND(((x'3a38')|(rt0.c2))))))) UNION SELECT DISTINCT vt1.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE (((((((((vt0.c0) NOTNULL))AND(1.7976931348623157E308)))AND(((x'3a38')|(rt0.c2))))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((- (-480648791))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((- (-480648791))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((- (-480648791))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN ((((vt1.c0)AND(rt0.c2)))AND(NULL)) THEN ((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)) END LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))+(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN ((((vt1.c0)AND(rt0.c2)))AND(NULL)) THEN ((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)) END LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))+(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY vt1.c1 HAVING COUNT(CASE COUNT(vt1.c0)  WHEN vt1.c0 THEN SUM(vt1.c0) END) UNION ALL SELECT vt1.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN ((((vt1.c0)AND(rt0.c2)))AND(NULL)) THEN ((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)) END LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))+(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY vt1.c1 HAVING (NOT (COUNT(CASE COUNT(vt1.c0)  WHEN vt1.c0 THEN SUM(vt1.c0) END))) UNION ALL SELECT vt1.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN ((((vt1.c0)AND(rt0.c2)))AND(NULL)) THEN ((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)) END LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))+(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY vt1.c1 HAVING ((COUNT(CASE COUNT(vt1.c0)  WHEN vt1.c0 THEN SUM(vt1.c0) END)) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN ('') AND ('3iL\r'))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c1) NOT BETWEEN ('') AND ('3iL\r'))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c1) NOT BETWEEN ('') AND ('3iL\r'))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, rt0 WHERE ((((x'' COLLATE NOCASE))<=((((rt0.c2)>(vt1.c1)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((x'' COLLATE NOCASE))<=((((rt0.c2)>(vt1.c1)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, rt0 WHERE ((((((x'' COLLATE NOCASE))<=((((rt0.c2)>(vt1.c1)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((TOTAL(MIN(vt1.c1)))LIKE(0.31341256021942876)) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (((TOTAL(MIN(vt1.c1)))LIKE(0.31341256021942876)))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((TOTAL(MIN(vt1.c1)))LIKE(0.31341256021942876))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((+ (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (('I k\	|c*P' IN ()) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (('I k\	|c*P' IN ()) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((('I k\	|c*P' IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(MIN(vt0.c0))) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON vt1.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((((vt1.c1, vt0.c0, rt0.c0)) BETWEEN ((rt0.c2, vt1.c1, rt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) AND ((rt0.c2 IN ())))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON vt1.c0 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((((vt1.c1, vt0.c0, rt0.c0)) BETWEEN ((rt0.c2, vt1.c1, rt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) AND ((rt0.c2 IN ())))))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((((vt1.c1, vt0.c0, rt0.c0)) BETWEEN ((rt0.c2, vt1.c1, rt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) AND ((rt0.c2 IN ())))) ISNULL));
SELECT vt1.c1, vt1.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON vt1.c0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (vt1.c1) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) AS REAL)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) AS REAL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) AS REAL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING AVG(COUNT(vt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (AVG(COUNT(vt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((AVG(COUNT(vt0.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((NOT (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1)<<(x'')))AND((~ (vt1.c0)))))OR('587486640'));
SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1)<<(x'')))AND((~ (vt1.c0)))))OR('587486640')) WHERE (((((((vt1.c1)OR(vt0.c0)))OR(NULL)))IS(((rt0.c1)LIKE(vt1.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1)<<(x'')))AND((~ (vt1.c0)))))OR('587486640')) WHERE ((NOT (((((((vt1.c1)OR(vt0.c0)))OR(NULL)))IS(((rt0.c1)LIKE(vt1.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1)<<(x'')))AND((~ (vt1.c0)))))OR('587486640')) WHERE (((((((((vt1.c1)OR(vt0.c0)))OR(NULL)))IS(((rt0.c1)LIKE(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1)<<(x'')))AND((~ (vt1.c0)))))OR('587486640'));
SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1 FROM vt0, rt0, vt1 WHERE (CASE WHEN vt1.c1 THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) WHEN (vt0.c0 IN (x'588a')) THEN (((rt0.c0))<>((NULL))) WHEN (rt0.c1 IN ()) THEN rt0.c2 COLLATE BINARY ELSE ((vt0.c0)*(rt0.c0)) END) GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (CASE WHEN vt1.c1 THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) WHEN (vt0.c0 IN (x'588a')) THEN (((rt0.c0))!=((NULL))) WHEN (rt0.c1 IN ()) THEN rt0.c2 COLLATE BINARY ELSE ((vt0.c0)*(rt0.c0)) END))) GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1 FROM vt0, rt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) WHEN (vt0.c0 IN (x'588a')) THEN (((rt0.c0))<>((NULL))) WHEN (rt0.c1 IN ()) THEN rt0.c2 COLLATE BINARY ELSE ((vt0.c0)*(rt0.c0)) END) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0, vt1.c1, rt0.c1;
SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0 HAVING vt1.c1 UNION ALL SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0 HAVING ((vt1.c1) ISNULL);
SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0 HAVING vt1.c1 UNION ALL SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0 HAVING ((vt1.c1) ISNULL);
SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) GROUP BY vt1.c0;
SELECT rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((0.7618290995736622)/(CAST(vt1.c1 AS NUMERIC)))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 WHERE ((NOT (((0.7618290995736622)/(CAST(vt1.c1 AS NUMERIC)))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 WHERE (((((0.7618290995736622)/(CAST(vt1.c1 AS NUMERIC)))) ISNULL));
SELECT rt0.c0 FROM vt1, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.26630377638064284) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0.26630377638064284))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.26630377638064284) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1, rt0 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER)) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1, rt0 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1, rt0 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON ((((((rt0.c0) NOT NULL))OR(rt0.c0 COLLATE RTRIM)))OR(HEX('68802375'))) RIGHT OUTER JOIN rt0 ON (((vt1.c0 IN (vt1.c1, rt0.c1))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c1)>>(vt1.c0)))) GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((vt1.c1)AND(rt0.c0)))OR(0.24370957557616935)))<<(rt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT (((((((vt1.c1)AND(rt0.c0)))OR(0.24370957557616935)))<<(rt0.c2 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((((vt1.c1)AND(rt0.c0)))OR(0.24370957557616935)))<<(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN ()))OR((+ (rt0.c0)))))AND(NULL))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1 IN ()))OR((+ (rt0.c0)))))AND(NULL))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1 IN ()))OR((+ (rt0.c0)))))AND(NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON 0.5265468060176807 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON 0.5265468060176807 GROUP BY rt0.c1, rt0.c2 HAVING AVG(AVG(MAX(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON 0.5265468060176807 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(AVG(MAX(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON 0.5265468060176807 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(AVG(MAX(rt0.c2)) COLLATE NOCASE)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN (vt0.c0)) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0, vt0, vt1 WHERE ((+ (((rt0.c1)<=('KQ,鋆헿wh'))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT ((+ (((rt0.c1)<=('KQ,鋆헿wh'))))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0, vt0, vt1 WHERE ((((+ (((rt0.c1)<=('KQ,鋆헿wh'))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0, vt0, vt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (x'') GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((LIKE(COUNT(vt1.c0), AVG(TOTAL(vt1.c0))))+(MIN(TOTAL(GROUP_CONCAT(MIN(vt1.c0)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((LIKE(COUNT(vt1.c0), AVG(TOTAL(vt1.c0))))+(MIN(TOTAL(GROUP_CONCAT(MIN(vt1.c0)))))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((LIKE(COUNT(vt1.c0), AVG(TOTAL(vt1.c0))))+(MIN(TOTAL(GROUP_CONCAT(MIN(vt1.c0))))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt0, vt1, rt0;
SELECT vt0.c0, vt1.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 WHERE (((((rt0.c2)IS NOT(x'')))>(CASE vt1.c1  WHEN NULL THEN 0.2571914809702319 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 WHERE ((NOT (((((rt0.c2)IS NOT(x'')))>(CASE vt1.c1  WHEN NULL THEN 0.2571914809702319 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 WHERE (((((((rt0.c2)IS NOT(x'')))>(CASE vt1.c1  WHEN NULL THEN 0.2571914809702319 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL vt0.c0, vt1.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((0.1783040392093801)OR(TYPEOF(rt0.c2))))AND(((rt0.c2)||(rt0.c2)))))OR((vt0.c0 IN (vt0.c0)))))OR(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((((((0.1783040392093801)OR(TYPEOF(rt0.c2))))AND(((rt0.c2)||(rt0.c2)))))OR((vt0.c0 IN (vt0.c0)))))OR(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((((0.1783040392093801)OR(TYPEOF(rt0.c2))))AND(((rt0.c2)||(rt0.c2)))))OR((vt0.c0 IN (vt0.c0)))))OR(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN vt0.c0 ELSE ((vt1.c1)<('560330741')) END) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN vt0.c0 ELSE ((vt1.c1)<('560330741')) END))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 COLLATE RTRIM THEN vt0.c0 ELSE ((vt1.c1)<('560330741')) END) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((MAX(vt0.c0))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0)))) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((MAX(vt0.c0))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0)))) AND (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((MAX(vt0.c0))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0)))) AND (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((MAX(vt0.c0))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0)))) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((MAX(vt0.c0))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0)))) AND (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((MAX(vt0.c0))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0)))) AND (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS BLOB)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS BLOB) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CAST(CAST(rt0.c0 AS BLOB) AS BLOB)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0)-(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0)-(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0)-(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0)-(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0)-(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0)-(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c1 COLLATE RTRIM)-((NOT (NULL))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT (((rt0.c1 COLLATE RTRIM)-((NOT (NULL))))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c1 COLLATE RTRIM)-((NOT (NULL))))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)), NULL, MIN(vt0.c0, vt0.c0)))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL COLLATE BINARY, ((vt0.c0) NOT NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0 IN (vt0.c0)), NULL, MIN(vt0.c0, vt0.c0)))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL COLLATE BINARY, ((vt0.c0) NOT NULL))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0 IN (vt0.c0)), NULL, MIN(vt0.c0, vt0.c0)))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL COLLATE BINARY, ((vt0.c0) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) GROUP BY vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (((rt0.c2) ISNULL)) AND (((vt1.c0) IS FALSE)))) GROUP BY vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0 UNION SELECT vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) BETWEEN (((rt0.c2) ISNULL)) AND (((vt1.c0) IS FALSE)))))) GROUP BY vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0 UNION SELECT vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) WHERE (((((CAST(vt0.c0 AS INTEGER)) BETWEEN (((rt0.c2) ISNULL)) AND (((vt1.c0) IS FALSE)))) ISNULL)) GROUP BY vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) GROUP BY vt1.c1, vt1.c0, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN MIN(vt1.c1) THEN MIN(AVG(COUNT(*))) WHEN COUNT(*) THEN x'' WHEN ABS(DISTINCT vt1.c0) THEN ((SUM(vt1.c1))%(NULL)) ELSE TOTAL(vt1.c1) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN MIN(vt1.c1) THEN MIN(AVG(COUNT(*))) WHEN COUNT(*) THEN x'' WHEN ABS(DISTINCT vt1.c0) THEN ((SUM(vt1.c1))%(NULL)) ELSE TOTAL(vt1.c1) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN MIN(vt1.c1) THEN MIN(AVG(COUNT(*))) WHEN COUNT(*) THEN x'' WHEN ABS(DISTINCT vt1.c0) THEN ((SUM(vt1.c1))%(NULL)) ELSE TOTAL(vt1.c1) END) ISNULL);
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM vt0, vt1, rt0;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM vt0, vt1, rt0 WHERE ((vt1.c1 IN ()) COLLATE BINARY) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((vt1.c1 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((vt1.c1 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1, rt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((((((vt0.c0))<>((vt0.c0))))OR(CASE WHEN rt0.c0 THEN vt0.c0 END)))OR(vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT ((((((((vt0.c0))!=((vt0.c0))))OR(CASE WHEN rt0.c0 THEN vt0.c0 END)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((((((((vt0.c0))<>((vt0.c0))))OR(CASE WHEN rt0.c0 THEN vt0.c0 END)))OR(vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1 NOT INDEXED, rt0, vt0 WHERE ((NOT ((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, rt0, vt0 WHERE ((((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c0;
SELECT ALL vt1.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2;
SELECT vt1.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 HAVING AVG(GROUP_CONCAT(MAX(COUNT(*)))) UNION ALL SELECT vt1.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (AVG(GROUP_CONCAT(MAX(COUNT(*)))))) UNION ALL SELECT vt1.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 HAVING ((AVG(GROUP_CONCAT(MAX(COUNT(*))))) ISNULL);
SELECT * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE (CAST(((((((((((((rt0.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt1.c0)) AS BLOB)) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT (CAST(((((((((((((rt0.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt1.c0)) AS BLOB)))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE (((CAST(((((((((((((rt0.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt1.c0)) AS BLOB)) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 NOT INDEXED WHERE (CASE (('')||(0Xfffffffffb2b933e))  WHEN ((vt0.c0)>=(rt0.c0)) THEN (rt0.c1 IN ()) ELSE (((vt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, vt0.c0, rt0.c1))) END) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE (('')||(0xfffffffffb2b933e))  WHEN ((vt0.c0)>=(rt0.c0)) THEN (rt0.c1 IN ()) ELSE (((vt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, vt0.c0, rt0.c1))) END))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((CASE (('')||(0xfffffffffb2b933e))  WHEN ((vt0.c0)>=(rt0.c0)) THEN (rt0.c1 IN ()) ELSE (((vt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, vt0.c0, rt0.c1))) END) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ('start of month') GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ('start of month'))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((('start of month') ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((UPPER(rt0.c2))GLOB((~ (rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((UPPER(rt0.c2))GLOB((~ (rt0.c1))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((UPPER(rt0.c2))GLOB((~ (rt0.c1))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((- (vt0.c0)))>=(-2.037559809E9))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM rt0, vt1, vt0 NOT INDEXED WHERE ((NOT ((((- (vt0.c0)))>=(-2.037559809E9))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((((- (vt0.c0)))>=(-2.037559809E9))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN LTRIM(vt1.c0) THEN (+ (vt1.c0)) WHEN vt1.c1 THEN vt1.c0 COLLATE RTRIM WHEN (((('1-500000')AND(vt1.c1)))OR(-1.763163162E9)) THEN vt1.c1 ELSE json_type(vt1.c0) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN LTRIM(vt1.c0) THEN (+ (vt1.c0)) WHEN vt1.c1 THEN vt1.c0 COLLATE RTRIM WHEN (((('1-500000')AND(vt1.c1)))OR(-1.763163162E9)) THEN vt1.c1 ELSE json_type(vt1.c0) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN LTRIM(vt1.c0) THEN (+ (vt1.c0)) WHEN vt1.c1 THEN vt1.c0 COLLATE RTRIM WHEN (((('1-500000')AND(vt1.c1)))OR(-1.763163162E9)) THEN vt1.c1 ELSE json_type(vt1.c0) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2 HAVING GROUP_CONCAT(CASE WHEN vt0.c0 THEN NULL ELSE rt0.c1 END) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(CASE WHEN vt0.c0 THEN NULL ELSE rt0.c1 END))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2 HAVING ((GROUP_CONCAT(CASE WHEN vt0.c0 THEN NULL ELSE rt0.c1 END)) ISNULL);
SELECT ALL vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2 HAVING GROUP_CONCAT(CASE WHEN vt0.c0 THEN NULL ELSE rt0.c1 END) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(CASE WHEN vt0.c0 THEN NULL ELSE rt0.c1 END))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2 HAVING ((GROUP_CONCAT(CASE WHEN vt0.c0 THEN NULL ELSE rt0.c1 END)) ISNULL);
SELECT ALL vt1.c1, vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(rt0.c2 AS TEXT))) LEFT OUTER JOIN vt0 ON x'55cd330f';
SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(rt0.c2 AS TEXT))) LEFT OUTER JOIN vt0 ON x'55cd330f' WHERE (CAST(vt0.c0 AS REAL) COLLATE BINARY) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(rt0.c2 AS TEXT))) LEFT OUTER JOIN vt0 ON x'55cd330f' WHERE ((NOT (CAST(vt0.c0 AS REAL) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(rt0.c2 AS TEXT))) LEFT OUTER JOIN vt0 ON x'55cd330f' WHERE (((CAST(vt0.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(rt0.c2 AS TEXT))) LEFT OUTER JOIN vt0 ON x'55cd330f';
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UPPER(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('t_', vt0.c0, vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (UPPER(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('t_', vt0.c0, vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((UPPER(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('t_', vt0.c0, vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(vt0.c0 COLLATE NOCASE) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(vt0.c0 COLLATE NOCASE) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c1)|(rt0.c1)))<<(((vt0.c0) IS TRUE)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((((rt0.c1)|(rt0.c1)))<<(((vt0.c0) IS TRUE)))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c1)|(rt0.c1)))<<(((vt0.c0) IS TRUE)))) ISNULL));
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.250522810403229)) AS NUMERIC);
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.250522810403229)) AS NUMERIC) WHERE (((-9223372036854775808) BETWEEN (vt0.c0) AND (UPPER(0.47727643286383914)))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.250522810403229)) AS NUMERIC) WHERE ((NOT (((-9223372036854775808) BETWEEN (vt0.c0) AND (UPPER(0.47727643286383914)))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.250522810403229)) AS NUMERIC) WHERE (((((-9223372036854775808) BETWEEN (vt0.c0) AND (UPPER(0.47727643286383914)))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.250522810403229)) AS NUMERIC);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0 HAVING MAX(CAST(0.26630377638064284 AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(CAST(0.26630377638064284 AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(CAST(0.26630377638064284 AS INTEGER))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0 HAVING MAX(CAST(0.26630377638064284 AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(CAST(0.26630377638064284 AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(CAST(0.26630377638064284 AS INTEGER))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (+ (x'a7b3')) THEN ((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c0)|(vt1.c0)) END GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY COLLATE BINARY) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY COLLATE BINARY))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((CASE WHEN rt0.c2 THEN x'' END IN (CASE rt0.c0  WHEN rt0.c0 THEN -7.78715938E8 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM vt0, rt0 NOT INDEXED WHERE ((NOT ((CASE WHEN rt0.c2 THEN x'' END IN (CASE rt0.c0  WHEN rt0.c0 THEN -7.78715938E8 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN x'' END IN (CASE rt0.c0  WHEN rt0.c0 THEN -7.78715938E8 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)||(-2.7847204E7)))) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 UNION SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT (IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)||(-2.7847204E7)))))) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 UNION SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)||(-2.7847204E7)))) ISNULL)) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((((((((vt0.c0)OR(MAX(GROUP_CONCAT(vt1.c0)))))AND(vt1.c1)))AND(MAX(AVG(vt0.c0)))))OR(COUNT(COUNT(TOTAL(vt1.c1))))))GLOB(AVG(vt1.c1))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (((((((((((vt0.c0)OR(MAX(GROUP_CONCAT(vt1.c0)))))AND(vt1.c1)))AND(MAX(AVG(vt0.c0)))))OR(COUNT(COUNT(TOTAL(vt1.c1))))))GLOB(AVG(vt1.c1))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((((((((((vt0.c0)OR(MAX(GROUP_CONCAT(vt1.c0)))))AND(vt1.c1)))AND(MAX(AVG(vt0.c0)))))OR(COUNT(COUNT(TOTAL(vt1.c1))))))GLOB(AVG(vt1.c1)))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((((((rt0.c1, vt0.c0, vt1.c0))<=((vt0.c0, vt1.c0, rt0.c0)))))<((((rt0.c2)/(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (((((((rt0.c1, vt0.c0, vt1.c0))<=((vt0.c0, vt1.c0, rt0.c0)))))<((((rt0.c2)/(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((((((((rt0.c1, vt0.c0, vt1.c0))<=((vt0.c0, vt1.c0, rt0.c0)))))<((((rt0.c2)/(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c0) NOTNULL))*(LTRIM(vt0.c0, rt0.c2)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))*(LTRIM(vt0.c0, rt0.c2)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c0) NOTNULL))*(LTRIM(vt0.c0, rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((((vt0.c0)AND(SUM(vt0.c0))))AND(COUNT(GROUP_CONCAT(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((((vt0.c0)AND(SUM(vt0.c0))))AND(COUNT(GROUP_CONCAT(AVG(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((((vt0.c0)AND(SUM(vt0.c0))))AND(COUNT(GROUP_CONCAT(AVG(vt0.c0))))))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ('8u䠟5') UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ('8u䠟5'))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((('8u䠟5') ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)||(vt1.c1)) THEN vt1.c1 END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)||(vt1.c1)) THEN vt1.c1 END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN ((vt1.c0)||(vt1.c1)) THEN vt1.c1 END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (CAST(vt1.c0 AS BLOB)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(((MIN(vt1.c0))+(vt1.c1)) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(((MIN(vt1.c0))+(vt1.c1)) AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(((MIN(vt1.c0))+(vt1.c1)) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(((MIN(vt1.c0))+(vt1.c1)) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(((MIN(vt1.c0))+(vt1.c1)) AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(((MIN(vt1.c0))+(vt1.c1)) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT MIN(SQLITE_COMPILEOPTION_GET(((('du4'))>((rt0.c2))))) FROM rt0 ORDER BY rt0.c0 COLLATE NOCASE, rt0.c1, COALESCE(((rt0.c0)+(rt0.c0)), (+ (rt0.c2)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), TRIM(DISTINCT rt0.c0, rt0.c0));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1) IS TRUE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1) IS TRUE)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1) IS TRUE)) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ((- (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((- (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (((((CASE rt0.c1  WHEN 0.4742104199142526 THEN rt0.c2 ELSE '#(tg' END)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(-841028858))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((CASE rt0.c1  WHEN 0.4742104199142526 THEN rt0.c2 ELSE '#(tg' END)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(-841028858))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (((((((CASE rt0.c1  WHEN 0.4742104199142526 THEN rt0.c2 ELSE '#(tg' END)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(-841028858))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(0.7775895999104728) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(0.7775895999104728))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(0.7775895999104728)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(0.7775895999104728) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(0.7775895999104728))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(0.7775895999104728)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((('')) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CAST(0.5321913616690339 AS BLOB))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((('')) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CAST(0.5321913616690339 AS BLOB))))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (((((('')) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CAST(0.5321913616690339 AS BLOB))))) ISNULL));
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE ''  WHEN (('W3췮')=(0.4605074953854583)) THEN (- (rt0.c2)) END) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE ''  WHEN (('W3췮')==(0.4605074953854583)) THEN (- (rt0.c2)) END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE ''  WHEN (('W3췮')=(0.4605074953854583)) THEN (- (rt0.c2)) END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING MIN(MIN(MIN(MIN('434493364')))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(MIN(MIN(MIN('434493364')))))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((MIN(MIN(MIN(MIN('434493364'))))) ISNULL);
SELECT vt1.c1, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((ROUND(vt1.c0, rt0.c1))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)/(NULL)))) LEFT OUTER JOIN vt0 ON IFNULL(UNLIKELY(vt1.c0), UNLIKELY(vt1.c0));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (vt0.c0) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((TRIM(DISTINCT 0.556982543005396) IN (((vt1.c0)>>(vt1.c0))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((TRIM(DISTINCT 0.556982543005396) IN (((vt1.c0)>>(vt1.c0))))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((TRIM(DISTINCT 0.556982543005396) IN (((vt1.c0)>>(vt1.c0))))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 HAVING ((COUNT(rt0.c2)) ISNULL) UNION ALL SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 HAVING (NOT (((COUNT(rt0.c2)) ISNULL))) UNION ALL SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 HAVING ((((COUNT(rt0.c2)) ISNULL)) ISNULL);
SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 HAVING ((COUNT(rt0.c2)) ISNULL) UNION ALL SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 HAVING (NOT (((COUNT(rt0.c2)) ISNULL))) UNION ALL SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 HAVING ((((COUNT(rt0.c2)) ISNULL)) ISNULL);
SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt0, vt1 INNER JOIN rt0 ON CHANGES() GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN (((rt0.c1))>=((rt0.c1))) THEN CAST(rt0.c1 AS REAL) WHEN vt1.c1 THEN (+ (rt0.c0)) END FULL OUTER JOIN vt0 ON ((((- (vt0.c0))))<(((+ (vt1.c1)))));
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN (((rt0.c1))>=((rt0.c1))) THEN CAST(rt0.c1 AS REAL) WHEN vt1.c1 THEN (+ (rt0.c0)) END FULL OUTER JOIN vt0 ON ((((- (vt0.c0))))<(((+ (vt1.c1))))) WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.6716634543218074)) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN (((rt0.c1))>=((rt0.c1))) THEN CAST(rt0.c1 AS REAL) WHEN vt1.c1 THEN (+ (rt0.c0)) END FULL OUTER JOIN vt0 ON ((((- (vt0.c0))))<(((+ (vt1.c1))))) WHERE ((NOT (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.6716634543218074)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN (((rt0.c1))>=((rt0.c1))) THEN CAST(rt0.c1 AS REAL) WHEN vt1.c1 THEN (+ (rt0.c0)) END FULL OUTER JOIN vt0 ON ((((- (vt0.c0))))<(((+ (vt1.c1))))) WHERE (((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.6716634543218074)) ISNULL));
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN (((rt0.c1))>=((rt0.c1))) THEN CAST(rt0.c1 AS REAL) WHEN vt1.c1 THEN (+ (rt0.c0)) END FULL OUTER JOIN vt0 ON ((((- (vt0.c0))))<(((+ (vt1.c1)))));
SELECT DISTINCT rt0.c2 FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt0, vt1 WHERE (CASE vt1.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT (CASE vt1.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0, vt1 WHERE (((CASE vt1.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt0, vt1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((+ (vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((+ (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING CASE COUNT(SUM(AVG(rt0.c2)))  WHEN rt0.c1 THEN rt0.c2 COLLATE NOCASE ELSE TOTAL(GROUP_CONCAT(0.47727643286383914)) END UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT (CASE COUNT(SUM(AVG(rt0.c2)))  WHEN rt0.c1 THEN rt0.c2 COLLATE NOCASE ELSE TOTAL(GROUP_CONCAT(0.47727643286383914)) END)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING ((CASE COUNT(SUM(AVG(rt0.c2)))  WHEN rt0.c1 THEN rt0.c2 COLLATE NOCASE ELSE TOTAL(GROUP_CONCAT(0.47727643286383914)) END) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END IN ())) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END IN ())))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM vt1, rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))=(((vt1.c0)=(rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM vt1, rt0, vt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))=(((vt1.c0)==(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM vt1, rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))==(((vt1.c0)==(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt1.c0, vt1.c1 FROM vt1, rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE (TRIM(DISTINCT ((0.7683009132330634)GLOB(rt0.c2)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1 UNION SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE ((NOT (TRIM(DISTINCT ((0.7683009132330634)GLOB(rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE (((TRIM(DISTINCT ((0.7683009132330634)GLOB(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0 HAVING CAST(SUM(rt0.c1) AS NUMERIC) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (CAST(SUM(rt0.c1) AS NUMERIC))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0 HAVING ((CAST(SUM(rt0.c1) AS NUMERIC)) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0 HAVING CAST(SUM(rt0.c1) AS NUMERIC) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (CAST(SUM(rt0.c1) AS NUMERIC))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0 HAVING ((CAST(SUM(rt0.c1) AS NUMERIC)) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((NULL COLLATE BINARY, ('-1603979053' IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=(((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((NULL))), ((vt1.c0)|(vt1.c0)), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((NULL COLLATE BINARY, ('-1603979053' IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=(((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((NULL))), ((vt1.c0)|(vt1.c0)), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((NULL COLLATE BINARY, ('-1603979053' IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=(((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((NULL))), ((vt1.c0)|(vt1.c0)), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((NULL COLLATE NOCASE) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((((vt0.c0)OR(x'')))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((NULL COLLATE NOCASE) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((((vt0.c0)OR(x'')))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((NULL COLLATE NOCASE) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((((vt0.c0)OR(x'')))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((((vt0.c0 COLLATE RTRIM))>(((((vt1.c1))<((vt1.c0))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0 COLLATE RTRIM))>(((((vt1.c1))<((vt1.c0))))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((((((vt0.c0 COLLATE RTRIM))>(((((vt1.c1))<((vt1.c0))))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((TOTAL(rt0.c0)) NOT BETWEEN (1) AND (AVG(rt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (((TOTAL(rt0.c0)) NOT BETWEEN (1) AND (AVG(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((((TOTAL(rt0.c0)) NOT BETWEEN (1) AND (AVG(rt0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((TOTAL(rt0.c0)) NOT BETWEEN (1) AND (AVG(rt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (((TOTAL(rt0.c0)) NOT BETWEEN (1) AND (AVG(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((((TOTAL(rt0.c0)) NOT BETWEEN (1) AND (AVG(rt0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (0.29116004949276963 COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (0.29116004949276963 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((0.29116004949276963 COLLATE NOCASE) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ (811782152)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ (811782152)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ (811782152)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (HEX(DISTINCT 'K')) GROUP BY vt1.c1, rt0.c1, rt0.c2 UNION SELECT vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (HEX(DISTINCT 'K')))) GROUP BY vt1.c1, rt0.c1, rt0.c2 UNION SELECT vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((HEX(DISTINCT 'K')) ISNULL)) GROUP BY vt1.c1, rt0.c1, rt0.c2;
SELECT ALL vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT * FROM vt0 CROSS JOIN rt0 ON vt0.c0;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt0 ON vt0.c0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE x'0211' END)) AND ((CASE WHEN '0.5189732098106479' THEN rt0.c0 END, rt0.c0, rt0.c2 COLLATE NOCASE)));
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE x'0211' END)) AND ((CASE WHEN '0.5189732098106479' THEN rt0.c0 END, rt0.c0, rt0.c2 COLLATE NOCASE))) WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE x'0211' END)) AND ((CASE WHEN '0.5189732098106479' THEN rt0.c0 END, rt0.c0, rt0.c2 COLLATE NOCASE))) WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE x'0211' END)) AND ((CASE WHEN '0.5189732098106479' THEN rt0.c0 END, rt0.c0, rt0.c2 COLLATE NOCASE))) WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE x'0211' END)) AND ((CASE WHEN '0.5189732098106479' THEN rt0.c0 END, rt0.c0, rt0.c2 COLLATE NOCASE)));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((LIKELIHOOD(rt0.c1, 0.8508336719470239) IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((LIKELIHOOD(rt0.c1, 0.8508336719470239) IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((LIKELIHOOD(rt0.c1, 0.8508336719470239) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON x'';
SELECT ALL * FROM rt0 INNER JOIN vt1 ON x'' WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt1 ON x'' WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt1 ON x'' WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON x'';
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1;
SELECT rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0;
SELECT ALL rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (',Es禬8-LN') GROUP BY rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0 UNION SELECT rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT (',Es禬8-LN'))) GROUP BY rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0 UNION SELECT rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((',Es禬8-LN') ISNULL)) GROUP BY rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, vt1.c1, rt0.c1, vt1.c0, vt0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING AVG(AVG(-1.00089054E8)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (AVG(AVG(-1.00089054E8)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((AVG(AVG(-1.00089054E8))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((NULL)IS NOT(rt0.c2)))<=(rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((NULL)IS NOT(rt0.c2)))<=(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE (((((((NULL)IS NOT(rt0.c2)))<=(rt0.c0))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT rt0.c2))) AND ((rt0.c0)))) UNION SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT rt0.c2))) AND ((rt0.c0)))))) UNION SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT rt0.c2))) AND ((rt0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))<(((vt1.c0) IS FALSE)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))<(((vt1.c0) IS FALSE)))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))<(((vt1.c0) IS FALSE)))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(vt1.c1))) BETWEEN (((((rt0.c2)OR(rt0.c2)))OR(vt1.c1))) AND (((rt0.c2) NOTNULL))) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(vt1.c1))) BETWEEN (((((rt0.c2)OR(rt0.c2)))OR(vt1.c1))) AND (((rt0.c2) NOTNULL))) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0 HAVING SUM(((((((((MIN(rt0.c0))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(vt1.c1))) BETWEEN (((((rt0.c2)OR(rt0.c2)))OR(vt1.c1))) AND (((rt0.c2) NOTNULL))) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(((((((((MIN(rt0.c0))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(vt1.c1))) BETWEEN (((((rt0.c2)OR(rt0.c2)))OR(vt1.c1))) AND (((rt0.c2) NOTNULL))) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0 HAVING ((SUM(((((((((MIN(rt0.c0))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, vt1.c1, rt0.c1, rt0.c2, vt1.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c2, vt1.c1, vt0.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC), NULL, ((rt0.c0)IS NOT(rt0.c0)))) AND (((+ (vt1.c0)), TRIM(DISTINCT rt0.c1, rt0.c2), ((((vt0.c0)AND(rt0.c0)))AND(vt1.c1)))));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (CAST(((vt1.c0)+(vt1.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)+(vt1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST(((vt1.c0)+(vt1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((0.3192946393421514) IS FALSE))<(NULL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((0.3192946393421514) IS FALSE))<(NULL))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((0.3192946393421514) IS FALSE))<(NULL))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((vt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN (((((x'', rt0.c1, vt0.c0))>((rt0.c0, vt1.c1, 1903217442))), ((((NULL)OR(vt1.c1)))OR(rt0.c1)), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c1) ISNULL), ((vt1.c0)<<(vt0.c0)), ((rt0.c0)==(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT ((((vt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN (((((x'', rt0.c1, vt0.c0))>((rt0.c0, vt1.c1, 1903217442))), ((((NULL)OR(vt1.c1)))OR(rt0.c1)), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c1) ISNULL), ((vt1.c0)<<(vt0.c0)), ((rt0.c0)==(vt0.c0)))))))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((((((vt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN (((((x'', rt0.c1, vt0.c0))>((rt0.c0, vt1.c1, 1903217442))), ((((NULL)OR(vt1.c1)))OR(rt0.c1)), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c1) ISNULL), ((vt1.c0)<<(vt0.c0)), ((rt0.c0)==(vt0.c0)))))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0))<=((vt1.c1))))AND(-4.4070768E8)))AND((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((((vt1.c0))<=((vt1.c1))))AND(-4.4070768E8)))AND((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((((vt1.c0))<=((vt1.c1))))AND(-4.4070768E8)))AND((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 WHERE ((((+ (vt0.c0)))IS(((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(-1493446870)))AND(vt1.c1))))) GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 WHERE ((NOT ((((+ (vt0.c0)))IS(((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(-1493446870)))AND(vt1.c1))))))) GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 WHERE ((((((+ (vt0.c0)))IS(((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(-1493446870)))AND(vt1.c1))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING '-115229014' COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT ('-115229014' COLLATE NOCASE)) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (('-115229014' COLLATE NOCASE) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING '-115229014' COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT ('-115229014' COLLATE NOCASE)) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (('-115229014' COLLATE NOCASE) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT MIN(((((vt1.c1)*(vt1.c0)))/(CAST(vt1.c0 AS REAL)))) FROM vt0, vt1 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((NOT (CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END))))) UNION ALL SELECT * FROM vt1, rt0 NOT INDEXED WHERE ((((NOT (CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((x'cc3c', rt0.c1, NULL))<((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE);
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((x'cc3c', rt0.c1, NULL))<((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE) WHERE (CAST((((rt0.c0))<=((rt0.c1))) AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((x'cc3c', rt0.c1, NULL))<((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE) WHERE ((NOT (CAST((((rt0.c0))<=((rt0.c1))) AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((x'cc3c', rt0.c1, NULL))<((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE) WHERE (((CAST((((rt0.c0))<=((rt0.c1))) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((x'cc3c', rt0.c1, NULL))<((rt0.c0, rt0.c2, rt0.c0)))) IS FALSE);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (TYPEOF(DISTINCT ((rt0.c1)-(rt0.c1)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c1)-(rt0.c1)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c1)-(rt0.c1)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LOWER(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (LOWER(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((LOWER(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB)) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST((~ (rt0.c0)) AS BLOB)))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CAST((~ (rt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)>>(rt0.c2)))OR(((rt0.c2)/(vt0.c0)))) GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)>>(rt0.c2)))OR(((rt0.c2)/(vt0.c0)))) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING AVG(SUM(SUM(vt1.c0))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)>>(rt0.c2)))OR(((rt0.c2)/(vt0.c0)))) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (AVG(SUM(SUM(vt1.c0))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)>>(rt0.c2)))OR(((rt0.c2)/(vt0.c0)))) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING ((AVG(SUM(SUM(vt1.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN vt0.c0 END COLLATE NOCASE CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL);
SELECT ALL vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN vt0.c0 END COLLATE NOCASE CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL) WHERE (IFNULL(DISTINCT CASE WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, (((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c0, rt0.c1, NULL)) AND ((rt0.c0, rt0.c0, vt1.c0))))) UNION ALL SELECT vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN vt0.c0 END COLLATE NOCASE CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL) WHERE ((NOT (IFNULL(DISTINCT CASE WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, (((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c0, rt0.c1, NULL)) AND ((rt0.c0, rt0.c0, vt1.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN vt0.c0 END COLLATE NOCASE CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL) WHERE (((IFNULL(DISTINCT CASE WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, (((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c0, rt0.c1, NULL)) AND ((rt0.c0, rt0.c0, vt1.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN vt0.c0 END COLLATE NOCASE CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0)AND(vt1.c1)) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0)AND(vt1.c1)) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c1)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON rt0.c0 GROUP BY vt0.c0, rt0.c1, vt1.c1;
SELECT ALL vt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))<=(((+ (rt0.c1)))))) GROUP BY vt0.c0, rt0.c1, vt1.c1 UNION SELECT ALL vt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE ((NOT ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))<=(((+ (rt0.c1)))))))) GROUP BY vt0.c0, rt0.c1, vt1.c1 UNION SELECT ALL vt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE ((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))<=(((+ (rt0.c1)))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, vt1.c1;
SELECT vt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON rt0.c0 GROUP BY vt0.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((0.6162930084763693) BETWEEN ((+ (vt0.c0))) AND ((+ (vt1.c0)))) FULL OUTER JOIN vt1 ON ((((rt0.c1) IS TRUE)) IS TRUE) GROUP BY rt0.c1;
SELECT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))))) ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((((((((((vt1.c1)OR(rt0.c2)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)) IN ((rt0.c0 IN (rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((((((((vt1.c1)OR(rt0.c2)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)) IN ((rt0.c0 IN (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((((((((((((vt1.c1)OR(rt0.c2)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)) IN ((rt0.c0 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (NULL) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING (CAST(SUM(vt1.c0) AS INTEGER) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING (NOT ((CAST(SUM(vt1.c0) AS INTEGER) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING (((CAST(SUM(vt1.c0) AS INTEGER) IN ())) ISNULL);
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING (CAST(SUM(vt1.c0) AS INTEGER) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING (NOT ((CAST(SUM(vt1.c0) AS INTEGER) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING (((CAST(SUM(vt1.c0) AS INTEGER) IN ())) ISNULL);
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1 FROM rt0 NOT INDEXED, vt1, vt0;
SELECT rt0.c0, rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1 FROM rt0, vt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))||(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))||(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1 FROM rt0, vt1, vt0 WHERE (((((CAST(vt0.c0 AS BLOB))||(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT rt0.c0, rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1 FROM rt0 NOT INDEXED, vt1, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((- (rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (((vt0.c0)%(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((- (rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (((vt0.c0)%(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((- (rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (((vt0.c0)%(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (vt0.c0) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING MAX(highlight(TOTAL(MAX(AVG(NULL))), SUM(vt0.c0), GROUP_CONCAT(SUM(TOTAL(vt1.c1))), GROUP_CONCAT(MAX(MIN(TOTAL(vt1.c1)))))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING (NOT (MAX(highlight(TOTAL(MAX(AVG(NULL))), SUM(vt0.c0), GROUP_CONCAT(SUM(TOTAL(vt1.c1))), GROUP_CONCAT(MAX(MIN(TOTAL(vt1.c1)))))))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING ((MAX(highlight(TOTAL(MAX(AVG(NULL))), SUM(vt0.c0), GROUP_CONCAT(SUM(TOTAL(vt1.c1))), GROUP_CONCAT(MAX(MIN(TOTAL(vt1.c1))))))) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c2)), ((rt0.c1) NOT NULL)));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c2)), ((rt0.c1) NOT NULL))) WHERE ((((NOT (vt1.c0)))GLOB(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c2)), ((rt0.c1) NOT NULL))) WHERE ((NOT ((((NOT (vt1.c0)))GLOB(CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c2)), ((rt0.c1) NOT NULL))) WHERE ((((((NOT (vt1.c0)))GLOB(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c2)), ((rt0.c1) NOT NULL)));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE (((((UPPER(rt0.c0))AND((0xffffffffc23bfd11 IN ()))))AND(rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT (((((UPPER(rt0.c0))AND((0xffffffffc23bfd11 IN ()))))AND(rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE (((((((UPPER(rt0.c0))AND((0xffffffffc23bfd11 IN ()))))AND(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((0.5654358548575489)%((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((0.5654358548575489)%((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((0.5654358548575489)%((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(MAX(vt0.c0))) IS FALSE)) BETWEEN (COUNT(*) COLLATE RTRIM) AND (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((AVG(MAX(vt0.c0))) IS FALSE)) BETWEEN (COUNT(*) COLLATE RTRIM) AND (COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(MAX(vt0.c0))) IS FALSE)) BETWEEN (COUNT(*) COLLATE RTRIM) AND (COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ('271693816', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN ('271693816', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM IN ('271693816', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)LIKE('-1992379718'))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)LIKE('-1992379718'))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE NOCASE)LIKE('-1992379718'))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1;
SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE ((((vt1.c0 IN ()))<>((~ (vt1.c0))))) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 UNION SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE ((NOT ((((vt1.c0 IN ()))!=((~ (vt1.c0))))))) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 UNION SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE ((((((vt1.c0 IN ()))<>((~ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1;
SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((+ (rt0.c2))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((+ (rt0.c2))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ('*5es') UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ('*5es'))) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((('*5es') ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((((vt0.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt0.c0, vt0.c0, x''))))AND(vt0.c0 COLLATE RTRIM)))OR((~ (vt1.c1))))) GROUP BY vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((((vt0.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt0.c0, vt0.c0, x''))))AND(vt0.c0 COLLATE RTRIM)))OR((~ (vt1.c1))))))) GROUP BY vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((((((vt0.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt0.c0, vt0.c0, x''))))AND(vt0.c0 COLLATE RTRIM)))OR((~ (vt1.c1))))) ISNULL)) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c0, vt0.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING MAX(CASE WHEN vt1.c0 THEN SUM(rt0.c2) END) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING (NOT (MAX(CASE WHEN vt1.c0 THEN SUM(rt0.c2) END))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING ((MAX(CASE WHEN vt1.c0 THEN SUM(rt0.c2) END)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON NULL;
SELECT DISTINCT rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON NULL WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON NULL WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON NULL WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, vt0.c0, rt0.c2, vt1.c1, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN vt1 ON NULL;
SELECT rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, vt1.c1 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, vt1.c1 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING MAX(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (MAX(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((MAX(TOTAL(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c1, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, rt0.c1;
SELECT ALL vt1.c1, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE (((((CAST(rt0.c1 AS BLOB))OR(x'')))AND(((((rt0.c0)OR('751097970')))OR(rt0.c2))))) GROUP BY vt1.c1, rt0.c0, rt0.c1 UNION SELECT vt1.c1, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((((CAST(rt0.c1 AS BLOB))OR(x'')))AND(((((rt0.c0)OR('751097970')))OR(rt0.c2))))))) GROUP BY vt1.c1, rt0.c0, rt0.c1 UNION SELECT vt1.c1, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE (((((((CAST(rt0.c1 AS BLOB))OR(x'')))AND(((((rt0.c0)OR('751097970')))OR(rt0.c2))))) ISNULL)) GROUP BY vt1.c1, rt0.c0, rt0.c1;
SELECT ALL vt1.c1, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt1.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt1.c1 HAVING SUM(TOTAL(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt1.c1 HAVING (NOT (SUM(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt1.c1 HAVING ((SUM(TOTAL(rt0.c0))) ISNULL);
SELECT ALL rt0.c0, vt1.c1, rt0.c2, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt1.c1))) NOT BETWEEN ((+ (vt1.c1))) AND (((((rt0.c1)AND(vt1.c1)))OR(0Xffffffff94f5c745))));
SELECT ALL rt0.c0, vt1.c1, rt0.c2, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt1.c1))) NOT BETWEEN ((+ (vt1.c1))) AND (((((rt0.c1)AND(vt1.c1)))OR(0Xffffffff94f5c745)))) WHERE ((((vt1.c1, NULL, rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), NULL)) AND (((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), NULL, (vt1.c0 IN (vt1.c1)))))) UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c2, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt1.c1))) NOT BETWEEN ((+ (vt1.c1))) AND (((((rt0.c1)AND(vt1.c1)))OR(0Xffffffff94f5c745)))) WHERE ((NOT ((((vt1.c1, NULL, rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), NULL)) AND (((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), NULL, (vt1.c0 IN (vt1.c1)))))))) UNION ALL SELECT rt0.c0, vt1.c1, rt0.c2, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt1.c1))) NOT BETWEEN ((+ (vt1.c1))) AND (((((rt0.c1)AND(vt1.c1)))OR(0xffffffff94f5c745)))) WHERE ((((((vt1.c1, NULL, rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), NULL)) AND (((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), NULL, (vt1.c0 IN (vt1.c1)))))) ISNULL));
SELECT ALL rt0.c0, vt1.c1, rt0.c2, rt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)AND(vt1.c1))) NOT BETWEEN ((+ (vt1.c1))) AND (((((rt0.c1)AND(vt1.c1)))OR(0Xffffffff94f5c745))));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (NULLIF(DISTINCT rt0.c0, rt0.c1)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((NOT (NULLIF(DISTINCT rt0.c0, rt0.c1)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((((NOT (NULLIF(DISTINCT rt0.c0, rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT SUM(((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(vt1.c0 AS REAL))))OR(((rt0.c1)>=(rt0.c2))))) FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((NULL)IS((~ (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((NULL)IS((~ (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((NULL)IS((~ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c2 IN (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ((rt0.c2 IN (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((rt0.c2 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE (CASE WHEN (rt0.c0 IN (rt0.c2)) THEN CASE WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END ELSE ((vt0.c0)<=(rt0.c1)) END) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN (rt0.c2)) THEN CASE WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END ELSE ((vt0.c0)<=(rt0.c1)) END))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE (((CASE WHEN (rt0.c0 IN (rt0.c2)) THEN CASE WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END ELSE ((vt0.c0)<=(rt0.c1)) END) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((((COUNT(GROUP_CONCAT(COUNT(x'')))) NOT BETWEEN (SUM('175608831')) AND (COUNT(MAX(COUNT(*))))))AND(COUNT(TOTAL(vt0.c0)))))OR(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((((((COUNT(GROUP_CONCAT(COUNT(x'')))) NOT BETWEEN (SUM('175608831')) AND (COUNT(MAX(COUNT(*))))))AND(COUNT(TOTAL(vt0.c0)))))OR(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((((((COUNT(GROUP_CONCAT(COUNT(x'')))) NOT BETWEEN (SUM('175608831')) AND (COUNT(MAX(COUNT(*))))))AND(COUNT(TOTAL(vt0.c0)))))OR(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c2) ISNULL))AND((~ (rt0.c0)))))OR(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c2) ISNULL))AND((~ (rt0.c0)))))OR(CAST(rt0.c2 AS NUMERIC)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((((rt0.c2) ISNULL))AND((~ (rt0.c0)))))OR(CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)*((((x'8897', vt1.c1, vt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND (('1671529857', vt0.c0, vt1.c0)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)*((((x'8897', vt1.c1, vt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND (('1671529857', vt0.c0, vt1.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)*((((x'8897', vt1.c1, vt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND (('1671529857', vt0.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) ISNULL) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) ISNULL) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOT NULL)) NOTNULL) GROUP BY vt1.c1, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0 FROM vt0, vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0 FROM vt0, vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0 FROM vt0, vt1, rt0;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN CASE 0.8428356410964126  WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c2 COLLATE NOCASE WHEN ((((((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (vt1.c1 IN (rt0.c2)) WHEN NULL THEN CAST(rt0.c0 AS INTEGER) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c0)OR(vt1.c1)) WHEN vt0.c0 THEN (((vt0.c0, rt0.c2, vt1.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c1))) END INNER JOIN vt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)) THEN NULL WHEN (((rt0.c1, rt0.c1, vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0))) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)) WHEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (0.8723576508611597)) THEN ((rt0.c0) NOT NULL) ELSE (vt1.c0 IN ()) END GROUP BY rt0.c0;
SELECT ALL vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)==(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)=(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(rt0.c2)) IS FALSE) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)=(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING (NOT (((GROUP_CONCAT(rt0.c2)) IS FALSE))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)==(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c2)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)==(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)=(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(rt0.c2)) IS FALSE) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)=(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING (NOT (((GROUP_CONCAT(rt0.c2)) IS FALSE))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)==(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c2)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((LOWER(rt0.c0)))>((rt0.c0))) CROSS JOIN vt1 ON ((((vt1.c0)==(rt0.c2)))|(((((vt1.c1)AND(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6594581425372809)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6594581425372809)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6594581425372809)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END AS INTEGER) INNER JOIN vt0 ON 0.429457525871616;
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END AS INTEGER) INNER JOIN vt0 ON 0.429457525871616 WHERE (LTRIM((NOT (rt0.c2)), ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END AS INTEGER) INNER JOIN vt0 ON 0.429457525871616 WHERE ((NOT (LTRIM((NOT (rt0.c2)), ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END AS INTEGER) INNER JOIN vt0 ON 0.429457525871616 WHERE (((LTRIM((NOT (rt0.c2)), ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END AS INTEGER) INNER JOIN vt0 ON 0.429457525871616;
