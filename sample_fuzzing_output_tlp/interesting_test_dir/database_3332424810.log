-- Time: 2024/06/12 06:08:28
-- Database: database10
-- Database version: 3.40.0
-- seed value: 3332424810
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, tokenize = "unicode61 remove_diacritics 0"); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (x''); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(1748555540) WHERE ((((vt0.c0)=(vt0.c0))) BETWEEN (x'') AND ((1748555540 IN ()))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 505742930);\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('M่<f[,獺'); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''), (0.40961894793084475), (NULL); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('8LK|8XQ'), (0.0), ('810578810'); -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x5451112e); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 4ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('810578810'), (NULL), (0.6299651080858285), (0.3214452973714782), (''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.6745586137206365); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0x44b8ad5e) WHERE (vt0.c0 IN (vt0.c0)) COLLATE NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1000338848,3');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0Xffffffffdf9b78c1); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1611556190,14');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (-543459135); -- 0ms;
PRAGMA main.application_id; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL, c0='Q>c\rCxj^5', c0='l?' WHERE CASE WHEN vt0.c0 THEN ((vt0.c0)>=(vt0.c0)) WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN NULL ELSE (NOT (vt0.c0)) END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=0.12347421921771673, c0=x''; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''), (x'6f56'), ('-543459135'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL WHERE CASE (vt0.c0 IN ())  WHEN json_object(vt0.c0, vt0.c0) THEN x'4c1f' ELSE CASE 0.2774767007658181  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END; -- 1ms;
UPDATE OR FAIL vt0 SET c0='-467333560' WHERE vt0.c0; -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-99955975,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1152953694);\n; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM vt0 WHERE ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE; -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.007418251308027535 WHERE ((((vt0.c0)-(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE UPPER(DISTINCT (vt0.c0 IN ())); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('-932205411'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.24455714021430774); -- 0ms;
PRAGMA temp.stats; -- 1ms;
PRAGMA temp.legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1501497236); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('810578810'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=957957554,11');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41839'); -- 0ms;
PRAGMA soft_heap_limit = 3670820059454914968; -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=746480577; -- 0ms;
PRAGMA cache_spill = 2242104268860193587; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0x32f15f652e304198); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT highlight(COUNT(vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'79e94faf', vt0.c0, vt0.c0))), SUM(vt0.c0), vt0.c0) FROM vt0 WHERE (((CAST('''&' AS BLOB)) NOT BETWEEN (((-467333560)|(1.74855554E9))) AND (((0X3050737a) BETWEEN (0X1e250652) AND (-9.32205411E8))))) ORDER BY ((((vt0.c0)) NOT BETWEEN ((x'98d3')) AND ((vt0.c0))) IN ()) ASC  NULLS FIRST LIMIT 810578810; -- 0ms;
UPDATE vt0 SET c0='-1165212837' WHERE CHANGES(); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.stats; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=0.4097722489716691, c0='[eic'; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'94ae'), (x''), ('8LK|8XQ'), ('H+hgP\rq'), (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE UPPER('''&'); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (0.6299651080858285); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1611556190'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-269551057,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
VACUUM main; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('1414598958', '505742930'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'0f22'); -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL, c0=0.5072731313818865, c0=0Xffffffffc1cb7cf7; -- 1ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT ); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.2938577839770705 WHERE (CAST(rt0.c2 AS REAL) IN ((rt0.c2 IN ()))); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0)=(-467333560, '0.3214452973714782') WHERE (((t0.c0)) NOT BETWEEN ((LIKELIHOOD(t0.c0, 0.7469456048424629))) AND ((t0.c0 COLLATE BINARY))); -- 0ms;
UPDATE vt0 SET c0=0.9069637178933915, c0='3670820059454914968'; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x'e99b'), (''), ('-1611556190'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'dddc'; -- 0ms;
REINDEX; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c10; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, -9.32205411E8); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (x'e676'); -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=505742930,4');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE t0 SET c10=x'' WHERE (- (0Xffffffffb929c040)); -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR REPLACE INTO t0(c10) VALUES ('822740941'); -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(x''); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1) VALUES ('-960060949', '1748555540', 0.9611545561774182); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1204768404'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (1.414598958E9, NULL), (NULL, '-1466835343'), (1.000338848E9, x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0Xffffffffd809bafa); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.8152925315885616, c0=NULL; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2 IN (rt0.c1, rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 IN (rt0.c1, rt0.c1)) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2 IN (rt0.c1, rt0.c1)) IN ())) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CAST(((1414598958)=(vt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((1414598958)=(vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST(((1414598958)==(vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (x'') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING GROUP_CONCAT((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((NOT (rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((NOT (rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING GROUP_CONCAT((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((NOT (rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((NOT (rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((0.28925748903894366)<(((vt0.c0)AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((0.28925748903894366)<(((vt0.c0)AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((0.28925748903894366)<(((vt0.c0)AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT NULL)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) ISNULL)) NOT NULL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c2) ISNULL)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>((0Xffffffffb929c040))))IS(''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))>((0Xffffffffb929c040))))IS(''))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))>((0xffffffffb929c040))))IS(''))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c0)OR(NULL)))AND(0xffffffffa891de71)))>=(((rt0.c1) IS TRUE))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c0)OR(NULL)))AND(0xffffffffa891de71)))>=(((rt0.c1) IS TRUE))) GROUP BY vt0.c0 HAVING (((NULL, vt0.c0, GROUP_CONCAT(rt0.c2))) BETWEEN ((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (SUM(rt0.c1)) AND (MAX(TOTAL(SUM(COUNT(GROUP_CONCAT(MAX(vt0.c0)))))))), (((SUM(MIN(vt0.c0)), rt0.c2, MAX(rt0.c0), MAX(rt0.c2), COUNT(*)))>=((rt0.c1, GROUP_CONCAT(MAX(MAX(MIN(MAX(vt0.c0))))), COUNT(*), SUM(TOTAL(AVG(GROUP_CONCAT(vt0.c0)))), MIN(x'')))))) AND ((COUNT(TOTAL(vt0.c0)), rtreenode(MIN(NULL), vt0.c0), (COUNT(*) IN (COUNT(*), MIN(AVG(rt0.c0))))))) UNION ALL SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c0)OR(NULL)))AND(0xffffffffa891de71)))>=(((rt0.c1) IS TRUE))) GROUP BY vt0.c0 HAVING (NOT ((((NULL, vt0.c0, GROUP_CONCAT(rt0.c2))) BETWEEN ((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (SUM(rt0.c1)) AND (MAX(TOTAL(SUM(COUNT(GROUP_CONCAT(MAX(vt0.c0)))))))), (((SUM(MIN(vt0.c0)), rt0.c2, MAX(rt0.c0), MAX(rt0.c2), COUNT(*)))>=((rt0.c1, GROUP_CONCAT(MAX(MAX(MIN(MAX(vt0.c0))))), COUNT(*), SUM(TOTAL(AVG(GROUP_CONCAT(vt0.c0)))), MIN(x'')))))) AND ((COUNT(TOTAL(vt0.c0)), rtreenode(MIN(NULL), vt0.c0), (COUNT(*) IN (COUNT(*), MIN(AVG(rt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c0)OR(NULL)))AND(0xffffffffa891de71)))>=(((rt0.c1) IS TRUE))) GROUP BY vt0.c0 HAVING (((((NULL, vt0.c0, GROUP_CONCAT(rt0.c2))) BETWEEN ((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (SUM(rt0.c1)) AND (MAX(TOTAL(SUM(COUNT(GROUP_CONCAT(MAX(vt0.c0)))))))), (((SUM(MIN(vt0.c0)), rt0.c2, MAX(rt0.c0), MAX(rt0.c2), COUNT(*)))>=((rt0.c1, GROUP_CONCAT(MAX(MAX(MIN(MAX(vt0.c0))))), COUNT(*), SUM(TOTAL(AVG(GROUP_CONCAT(vt0.c0)))), MIN(x'')))))) AND ((COUNT(TOTAL(vt0.c0)), rtreenode(MIN(NULL), vt0.c0), (COUNT(*) IN (COUNT(*), MIN(AVG(rt0.c0)))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffbc790ecc))) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOTNULL)  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffbc790ecc))) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((vt0.c0) NOTNULL)  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffbc790ecc))) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((LIKELIHOOD(rt0.c1, 0.9119102799515589) IN (((rt0.c2) IS TRUE), ((((rt0.c1)AND(NULL)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((LIKELIHOOD(rt0.c1, 0.9119102799515589) IN (((rt0.c2) IS TRUE), ((((rt0.c1)AND(NULL)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((LIKELIHOOD(rt0.c1, 0.9119102799515589) IN (((rt0.c2) IS TRUE), ((((rt0.c1)AND(NULL)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((0.8779139735219911, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (('-1165212837', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN TOTAL_CHANGES() THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((0.8779139735219911, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (('-1165212837', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN TOTAL_CHANGES() THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((0.8779139735219911, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (('-1165212837', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING 0.7125885259499875 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (0.7125885259499875)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((0.7125885259499875) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING 0.7125885259499875 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (0.7125885259499875)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((0.7125885259499875) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (rtreenode(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END, LOWER(rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rtreenode(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END, LOWER(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((rtreenode(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END, LOWER(rt0.c2))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ('[]^쫹') UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ('[]^쫹'))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((('[]^쫹') ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((+ ((rt0.c0 IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((+ ((rt0.c0 IN ())))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((+ ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST(((((((((0.01378927509541894)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('1414598958')) AS BLOB)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((((((((0.01378927509541894)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('1414598958')) AS BLOB)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(((((((((0.01378927509541894)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('1414598958')) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((('썣rOO_' COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((('썣rOO_' COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((('썣rOO_' COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING CASE ((((((((AVG(rt0.c1))AND(MAX(MAX(AVG(MAX(SUM(MAX(NULL)))))))))OR(SUM(vt0.c0))))OR(0.4042743308537553)))OR(rt0.c0))  WHEN COUNT(*) THEN TOTAL(SUM(AVG(TOTAL(MIN(SUM(rt0.c0)))))) WHEN COUNT(rt0.c2) THEN MIN(vt0.c0) WHEN CAST(TOTAL(vt0.c0) AS INTEGER) THEN MIN(AVG(vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (CASE ((((((((AVG(rt0.c1))AND(MAX(MAX(AVG(MAX(SUM(MAX(NULL)))))))))OR(SUM(vt0.c0))))OR(0.4042743308537553)))OR(rt0.c0))  WHEN COUNT(*) THEN TOTAL(SUM(AVG(TOTAL(MIN(SUM(rt0.c0)))))) WHEN COUNT(rt0.c2) THEN MIN(vt0.c0) WHEN CAST(TOTAL(vt0.c0) AS INTEGER) THEN MIN(AVG(vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING ((CASE ((((((((AVG(rt0.c1))AND(MAX(MAX(AVG(MAX(SUM(MAX(NULL)))))))))OR(SUM(vt0.c0))))OR(0.4042743308537553)))OR(rt0.c0))  WHEN COUNT(*) THEN TOTAL(SUM(AVG(TOTAL(MIN(SUM(rt0.c0)))))) WHEN COUNT(rt0.c2) THEN MIN(vt0.c0) WHEN CAST(TOTAL(vt0.c0) AS INTEGER) THEN MIN(AVG(vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((json_type(rt0.c2)) NOT BETWEEN (((0xffffffffc6c6a1eb) BETWEEN (rt0.c2) AND (rt0.c2))) AND (json_array_length(rt0.c2, rt0.c0)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((json_type(rt0.c2)) NOT BETWEEN (((0Xffffffffc6c6a1eb) BETWEEN (rt0.c2) AND (rt0.c2))) AND (json_array_length(rt0.c2, rt0.c0)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((json_type(rt0.c2)) NOT BETWEEN (((0Xffffffffc6c6a1eb) BETWEEN (rt0.c2) AND (rt0.c2))) AND (json_array_length(rt0.c2, rt0.c0)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)IS(rt0.c2)))|(CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c2)))|(CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)IS(rt0.c2)))|(CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE NULL END IN ())) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((NOT ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE NULL END IN ())))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE NULL END IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND('{')))OR(rt0.c2)) IN ())) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND('{')))OR(rt0.c2)) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND('{')))OR(rt0.c2)) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)||(vt0.c0)) THEN ((rt0.c2)%(vt0.c0)) END) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0)||(vt0.c0)) THEN ((rt0.c2)%(vt0.c0)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN ((rt0.c0)||(vt0.c0)) THEN ((rt0.c2)%(vt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2) ISNULL) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) ISNULL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(AVG(rt0.c2)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(AVG(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(AVG(rt0.c2))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (UNLIKELY('321293493')) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (UNLIKELY('321293493')))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((UNLIKELY('321293493')) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (vt0.c0))) NOTNULL);
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (vt0.c0))) NOTNULL) WHERE (((NULL) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (vt0.c0))) NOTNULL) WHERE ((NOT (((NULL) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (vt0.c0))) NOTNULL) WHERE (((((NULL) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (vt0.c0))) NOTNULL);
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c2 IN (rt0.c2)) IN (((rt0.c1) IS FALSE)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c2 IN (rt0.c2)) IN (((rt0.c1) IS FALSE)))))) GROUP BY rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2 IN (rt0.c2)) IN (((rt0.c1) IS FALSE)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(AVG(SUM(TOTAL(MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(AVG(SUM(TOTAL(MIN(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(AVG(SUM(TOTAL(MIN(rt0.c1)))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((load_extension(rt0.c2, rt0.c1)) IS FALSE)) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((load_extension(rt0.c2, rt0.c1)) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((load_extension(rt0.c2, rt0.c1)) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((- (((rt0.c1)<<(''))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c1)<<(''))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (((rt0.c1)<<(''))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING SUM(AVG(AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (SUM(AVG(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((SUM(AVG(AVG(rt0.c2)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('mzf~u') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ('mzf~u'))) UNION ALL SELECT * FROM vt0 WHERE ((('mzf~u') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, (((vt0.c0)) BETWEEN ((0.007418251308027535)) AND (('-670450950'))), (NOT (x'28eb')))) AND ((rt0.c2 COLLATE RTRIM, 'dI!w' COLLATE RTRIM, CAST(rt0.c0 AS TEXT))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, (((vt0.c0)) BETWEEN ((0.007418251308027535)) AND (('-670450950'))), (NOT (x'28eb')))) AND ((rt0.c2 COLLATE RTRIM, 'dI!w' COLLATE RTRIM, CAST(rt0.c0 AS TEXT))))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, (((vt0.c0)) BETWEEN ((0.007418251308027535)) AND (('-670450950'))), (NOT (x'28eb')))) AND ((rt0.c2 COLLATE RTRIM, 'dI!w' COLLATE RTRIM, CAST(rt0.c0 AS TEXT))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING GROUP_CONCAT(((rt0.c1)==(SUM(MIN(TOTAL('[eic')))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c1)==(SUM(MIN(TOTAL('[eic')))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c1)=(SUM(MIN(TOTAL('[eic'))))))) ISNULL);
SELECT ALL rt0.c0 FROM vt0, rt0;
SELECT rt0.c0 FROM vt0, rt0 WHERE (LENGTH(((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.30085812856944083)))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT (LENGTH(((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.30085812856944083)))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 WHERE (((LENGTH(((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.30085812856944083)))) ISNULL));
SELECT ALL rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)-(rt0.c1))))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)-(rt0.c1))))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) WHERE (((x'') NOT BETWEEN (((-897504627)&(rt0.c2))) AND ((~ (rt0.c0))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)-(rt0.c1))))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) WHERE ((NOT (((x'') NOT BETWEEN (((-897504627)&(rt0.c2))) AND ((~ (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)-(rt0.c1))))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) WHERE (((((x'') NOT BETWEEN (((-897504627)&(rt0.c2))) AND ((~ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)-(rt0.c1))))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c0, vt0.c0, -8.97504627E8))<((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE RTRIM END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c0, vt0.c0, -8.97504627E8))<((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE RTRIM END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c0, vt0.c0, -8.97504627E8))<((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE RTRIM END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING 1038305166 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (1038305166)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((1038305166) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING 1038305166 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (1038305166)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((1038305166) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM rt0 CROSS JOIN vt0 ON (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (((vt0.c0, vt0.c0, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0)))))<(((((vt0.c0))>=((-4.6733356E8))), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (((vt0.c0, vt0.c0, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0)))))<(((((vt0.c0))>=((-4.6733356E8))), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(COALESCE(vt0.c0, rt0.c1))))OR((rt0.c2 IN (rt0.c2))))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (((vt0.c0, vt0.c0, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0)))))<(((((vt0.c0))>=((-4.6733356E8))), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) WHERE ((NOT ((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(COALESCE(vt0.c0, rt0.c1))))OR((rt0.c2 IN (rt0.c2))))))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (((vt0.c0, vt0.c0, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0)))))<(((((vt0.c0))>=((-4.6733356E8))), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) WHERE ((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(COALESCE(vt0.c0, rt0.c1))))OR((rt0.c2 IN (rt0.c2))))) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (((vt0.c0, vt0.c0, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0)))))<(((((vt0.c0))>=((-4.6733356E8))), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('0.0') NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('0.0') NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('0.0') NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END)&(((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END)&(((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))&(((rt0.c1)&(rt0.c2))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END)&(((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))) WHERE ((NOT (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))&(((rt0.c1)&(rt0.c2))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END)&(((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))) WHERE (((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))&(((rt0.c1)&(rt0.c2))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END)&(((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST((vt0.c0 IN (vt0.c0)) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST((vt0.c0 IN (vt0.c0)) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST((vt0.c0 IN (vt0.c0)) AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST((vt0.c0 IN (vt0.c0)) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST((vt0.c0 IN (vt0.c0)) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST((vt0.c0 IN (vt0.c0)) AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0) NOT NULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0) NOT NULL)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((vt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING AVG(MIN(vt0.c0)) COLLATE NOCASE UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(MIN(vt0.c0)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((AVG(MIN(vt0.c0)) COLLATE NOCASE) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN 0Xffffffff9f60d947 THEN vt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN 0xffffffff9f60d947 THEN vt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN 0xffffffff9f60d947 THEN vt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), (rt0.c2 IN (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), (rt0.c2 IN (rt0.c2))) WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), (rt0.c2 IN (rt0.c2))) WHERE ((NOT (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), (rt0.c2 IN (rt0.c2))) WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), (rt0.c2 IN (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0 HAVING (- ((vt0.c0 IN (MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0 HAVING (NOT ((- ((vt0.c0 IN (MAX(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0 HAVING (((- ((vt0.c0 IN (MAX(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0 HAVING (- ((vt0.c0 IN (MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0 HAVING (NOT ((- ((vt0.c0 IN (MAX(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0 HAVING (((- ((vt0.c0 IN (MAX(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((rt0.c2 IN ()))) GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((rt0.c1)<=(rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN (~ (rt0.c0)) THEN (NOT (rt0.c1)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE (rt0.c2 IN ())  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((rt0.c1)<=(rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN (~ (rt0.c0)) THEN (NOT (rt0.c1)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE (rt0.c2 IN ())  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((rt0.c1)<=(rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN (~ (rt0.c0)) THEN (NOT (rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))>>(((vt0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)*(vt0.c0)))>>(((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))>>(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING CASE CAST(vt0.c0 AS REAL)  WHEN MAX(MIN(MIN(5.0574293E8))) THEN ((((TOTAL(COUNT(*)))OR(GROUP_CONCAT(rt0.c2))))AND(rt0.c1)) ELSE MIN(rt0.c1) END UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT (CASE CAST(vt0.c0 AS REAL)  WHEN MAX(MIN(MIN(5.0574293E8))) THEN ((((TOTAL(COUNT(*)))OR(GROUP_CONCAT(rt0.c2))))AND(rt0.c1)) ELSE MIN(rt0.c1) END)) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING ((CASE CAST(vt0.c0 AS REAL)  WHEN MAX(MIN(MIN(5.0574293E8))) THEN ((((TOTAL(COUNT(*)))OR(GROUP_CONCAT(rt0.c2))))AND(rt0.c1)) ELSE MIN(rt0.c1) END) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((0.1487166355001217)/(rt0.c1))))>=((rt0.c2 COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((0.1487166355001217)/(rt0.c1))))>=((rt0.c2 COLLATE RTRIM)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((((0.1487166355001217)/(rt0.c1))))>=((rt0.c2 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c2))) NOTNULL) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)!=(rt0.c2))) NOTNULL) WHERE (((((((((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(((rt0.c0)&(rt0.c2)))))OR(((rt0.c0)GLOB(rt0.c1)))))AND((rt0.c2 IN ()))))OR(CASE vt0.c0  WHEN '-1132917044' THEN vt0.c0 END)))AND((((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, '-989887760', vt0.c0))))))OR(CAST(rt0.c1 AS BLOB)))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)!=(rt0.c2))) NOTNULL) WHERE ((NOT (((((((((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(((rt0.c0)&(rt0.c2)))))OR(((rt0.c0)GLOB(rt0.c1)))))AND((rt0.c2 IN ()))))OR(CASE vt0.c0  WHEN '-1132917044' THEN vt0.c0 END)))AND((((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, '-989887760', vt0.c0))))))OR(CAST(rt0.c1 AS BLOB)))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)!=(rt0.c2))) NOTNULL) WHERE (((((((((((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(((rt0.c0)&(rt0.c2)))))OR(((rt0.c0)GLOB(rt0.c1)))))AND((rt0.c2 IN ()))))OR(CASE vt0.c0  WHEN '-1132917044' THEN vt0.c0 END)))AND((((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, '-989887760', vt0.c0))))))OR(CAST(rt0.c1 AS BLOB)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c2))) NOTNULL) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(TOTAL(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(TOTAL(rt0.c1))) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c2 AS TEXT) END) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE ((vt0.c0) ISNULL)  WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c2 AS TEXT) END))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((CASE ((vt0.c0) ISNULL)  WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c2 AS TEXT) END) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1) IS FALSE)))<((rt0.c1 COLLATE BINARY)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c1) IS FALSE)))<((rt0.c1 COLLATE BINARY)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((((((rt0.c1) IS FALSE)))<((rt0.c1 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(GROUP_CONCAT(COUNT(vt0.c0))) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(vt0.c0))) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(vt0.c0))) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('564809476') UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('564809476'))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((('564809476') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (0x581a481f)) COLLATE BINARY;
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (0x581a481f)) COLLATE BINARY WHERE (0.2774767007658181) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (0X581a481f)) COLLATE BINARY WHERE ((NOT (0.2774767007658181))) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (0x581a481f)) COLLATE BINARY WHERE (((0.2774767007658181) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (0x581a481f)) COLLATE BINARY;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c0)LIKE(-9.8988776E8)) IN ())) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0)LIKE(-9.8988776E8)) IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c0)LIKE(-9.8988776E8)) IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1)) IS TRUE) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(rt0.c1)) IS TRUE))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c1)) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1)) IS TRUE) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(rt0.c1)) IS TRUE))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c1)) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((0.28180399175150683 COLLATE BINARY)) AND ((HEX(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((0.28180399175150683 COLLATE BINARY)) AND ((HEX(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((0.28180399175150683 COLLATE BINARY)) AND ((HEX(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-720677451') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-720677451'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('-720677451') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '321293493' GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '321293493' WHERE ((~ (((rt0.c1)*(vt0.c0))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '321293493' WHERE ((NOT ((~ (((rt0.c1)*(vt0.c0))))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '321293493' WHERE ((((~ (((rt0.c1)*(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '321293493' GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(((((vt0.c0)AND(NULL)))AND(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((((vt0.c0)AND(NULL)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(((((vt0.c0)AND(NULL)))AND(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(((((vt0.c0)AND(NULL)))AND(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((((vt0.c0)AND(NULL)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(((((vt0.c0)AND(NULL)))AND(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (LTRIM(((rt0.c2)%(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (LTRIM(((rt0.c2)%(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((LTRIM(((rt0.c2)%(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((0.07774758311800745)LIKE(rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((0.07774758311800745)LIKE(rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((0.07774758311800745)LIKE(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((NULL, rt0.c0, rt0.c1))<((rt0.c0, rt0.c1, rt0.c2))) IN (((((((((rt0.c1)OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((NULL, rt0.c0, rt0.c1))<((rt0.c0, rt0.c1, rt0.c2))) IN (((((((((rt0.c1)OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((((NULL, rt0.c0, rt0.c1))<((rt0.c0, rt0.c1, rt0.c2))) IN (((((((((rt0.c1)OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (AVG(COUNT(*))) AND ((MIN(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (AVG(COUNT(*))) AND ((MIN(vt0.c0) IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (AVG(COUNT(*))) AND ((MIN(vt0.c0) IN ())))) ISNULL);
SELECT ALL TOTAL((((rt0.c1 COLLATE RTRIM, CAST(rt0.c0 AS BLOB), x''))!=(((rt0.c1 IN ()), (rt0.c1 IN ()), TYPEOF(DISTINCT x''))))) FROM rt0 ORDER BY (NOT (((NULL) IS FALSE)));
SELECT vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (rt0.c2) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN ()))OR(rt0.c1)))AND(((0.9917326833552921) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2 IN ()))OR(rt0.c1)))AND(((0.9917326833552921) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c2 IN ()))OR(rt0.c1)))AND(((0.9917326833552921) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0, GROUP_CONCAT(vt0.c0), SUM(vt0.c0), vt0.c0, vt0.c0)) BETWEEN ((COUNT(*), MIN(vt0.c0), ((COUNT(*)) NOTNULL), ((((vt0.c0)OR(vt0.c0)))AND(SUM(vt0.c0))), AVG(MIN(AVG(COUNT(*)))))) AND ((x'', ((COUNT(*))LIKE(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (AVG(COUNT(COUNT(*))))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0, GROUP_CONCAT(vt0.c0), SUM(vt0.c0), vt0.c0, vt0.c0)) BETWEEN ((COUNT(*), MIN(vt0.c0), ((COUNT(*)) NOTNULL), ((((vt0.c0)OR(vt0.c0)))AND(SUM(vt0.c0))), AVG(MIN(AVG(COUNT(*)))))) AND ((x'', ((COUNT(*))LIKE(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (AVG(COUNT(COUNT(*))))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0, GROUP_CONCAT(vt0.c0), SUM(vt0.c0), vt0.c0, vt0.c0)) BETWEEN ((COUNT(*), MIN(vt0.c0), ((COUNT(*)) NOTNULL), ((((vt0.c0)OR(vt0.c0)))AND(SUM(vt0.c0))), AVG(MIN(AVG(COUNT(*)))))) AND ((x'', ((COUNT(*))LIKE(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (AVG(COUNT(COUNT(*))))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), NULL)))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)*(rt0.c1)) AS REAL);
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)*(rt0.c1)) AS REAL) WHERE ((((rt0.c0)*(rt0.c2)) IN ((((rt0.c2))>=((rt0.c2)))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)*(rt0.c1)) AS REAL) WHERE ((NOT ((((rt0.c0)*(rt0.c2)) IN ((((rt0.c2))>=((rt0.c2)))))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)*(rt0.c1)) AS REAL) WHERE ((((((rt0.c0)*(rt0.c2)) IN ((((rt0.c2))>=((rt0.c2)))))) ISNULL));
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)*(rt0.c1)) AS REAL);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((vt0.c0)LIKE(vt0.c0)))))OR((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))OR(((vt0.c0)LIKE(vt0.c0)))))OR((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((CAST(vt0.c0 AS REAL))OR(((vt0.c0)LIKE(vt0.c0)))))OR((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((LIKELIHOOD(DISTINCT vt0.c0, 0.8949090786517006) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((LIKELIHOOD(DISTINCT vt0.c0, 0.8949090786517006) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((LIKELIHOOD(DISTINCT vt0.c0, 0.8949090786517006) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)AND(vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)AND(vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)*((((rt0.c2))==(('dI!w')))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END)*((((rt0.c2))=(('dI!w')))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)*((((rt0.c2))=(('dI!w')))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (CASE WHEN x'' THEN (+ (rt0.c2)) END) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN x'' THEN (+ (rt0.c2)) END))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN (+ (rt0.c2)) END) ISNULL));
SELECT ALL rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<=(((rt0.c1)=(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER))<=(((rt0.c1)=(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))<=(((rt0.c1)=(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (CAST(((vt0.c0)=(vt0.c0)) AS NUMERIC)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(((vt0.c0)==(vt0.c0)) AS NUMERIC)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((CAST(((vt0.c0)==(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(CAST(AVG(COUNT(COUNT(MIN(COUNT(rt0.c0))))) AS REAL)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(AVG(COUNT(COUNT(MIN(COUNT(rt0.c0))))) AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(CAST(AVG(COUNT(COUNT(MIN(COUNT(rt0.c0))))) AS REAL))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE)))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((((x'a7ff', rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c2)==(vt0.c0)), 0.9827660155704449, (+ ('-731911111')))) AND (((NOT (rt0.c1)), TRIM(rt0.c2, vt0.c0), ((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((x'a7ff', rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c2)=(vt0.c0)), 0.9827660155704449, (+ ('-731911111')))) AND (((NOT (rt0.c1)), TRIM(rt0.c2, vt0.c0), ((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((((((x'a7ff', rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c2)=(vt0.c0)), 0.9827660155704449, (+ ('-731911111')))) AND (((NOT (rt0.c1)), TRIM(rt0.c2, vt0.c0), ((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)!=(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)<>(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)<>(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)<>(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)!=(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)<>(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)<>(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)<>(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((vt0.c0)!=(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2))==((rt0.c1)))) NOTNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c2))=((rt0.c1)))) NOTNULL)))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c2))=((rt0.c1)))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CAST(LIKE(rt0.c2, rt0.c1) AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(LIKE(rt0.c2, rt0.c1) AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST(LIKE(rt0.c2, rt0.c1) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((((- (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(vt0.c0))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((- (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(vt0.c0))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM vt0, rt0 NOT INDEXED WHERE ((((((((- (rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(vt0.c0))) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((TOTAL(vt0.c0)) BETWEEN (MAX(GROUP_CONCAT(TOTAL(vt0.c0)))) AND (GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((TOTAL(vt0.c0)) BETWEEN (MAX(GROUP_CONCAT(TOTAL(vt0.c0)))) AND (GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((TOTAL(vt0.c0)) BETWEEN (MAX(GROUP_CONCAT(TOTAL(vt0.c0)))) AND (GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((rt0.c1 IN (vt0.c0, 0x7f5ac2f2))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ())))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1 IN (vt0.c0, 0x7f5ac2f2))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ())))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((((rt0.c1 IN (vt0.c0, 0X7f5ac2f2))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ())))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN (('0.8779139735219911')) AND ((vt0.c0))), TRIM(NULL, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (0.8216717542456111)))) AND (((vt0.c0 IN ()), vt0.c0, (vt0.c0 IN (vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN (('0.8779139735219911')) AND ((vt0.c0))), TRIM(NULL, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (0.8216717542456111)))) AND (((vt0.c0 IN ()), vt0.c0, (vt0.c0 IN (vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN (('0.8779139735219911')) AND ((vt0.c0))), TRIM(NULL, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (0.8216717542456111)))) AND (((vt0.c0 IN ()), vt0.c0, (vt0.c0 IN (vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ('') GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (''))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((('') ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(AVG(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(AVG(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(AVG(COUNT(rt0.c1)))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (rt0.c2 COLLATE RTRIM) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELY(vt0.c0)) BETWEEN ('-319831197') AND (LIKELIHOOD(vt0.c0, 0.38777420501362125)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((LIKELY(vt0.c0)) BETWEEN ('-319831197') AND (LIKELIHOOD(vt0.c0, 0.38777420501362125)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((LIKELY(vt0.c0)) BETWEEN ('-319831197') AND (LIKELIHOOD(vt0.c0, 0.38777420501362125)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((1000338848 IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((1000338848 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((1000338848 IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING MIN(((vt0.c0) IS FALSE)) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(((vt0.c0) IS FALSE))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING MIN(((vt0.c0) IS FALSE)) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(((vt0.c0) IS FALSE))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((+ (rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (CAST(((rt0.c2)|(vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c2)|(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((CAST(((rt0.c2)|(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (x'') GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (x''))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(CASE vt0.c0  WHEN '-1204768404' THEN rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0))) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0))) NOT NULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN ((x'9689' IN ())) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN ((x'9689' IN ())) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN ((x'9689' IN ())) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)<(x'')))AND((- (rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)<(x'')))AND((- (rt0.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)<(x'')))AND((- (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt0.c0)))) ISNULL);
SELECT MIN(((rt0.c0) ISNULL)) FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((x'')GLOB(rt0.c0)))) AND ((((vt0.c0)IS(rt0.c2)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((x'')GLOB(rt0.c0)))) AND ((((vt0.c0)IS(rt0.c2)))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((((x'')GLOB(rt0.c0)))) AND ((((vt0.c0)IS(rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (SUBSTR((NOT (NULL)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (SUBSTR((NOT (NULL)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((SUBSTR((NOT (NULL)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0x21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0X21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0X21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0x21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0x21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0X21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0X21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0x21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE 0x21aa4f04  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE ((rt0.c0)-(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 NOT INDEXED, vt0;
SELECT rt0.c1 FROM rt0, vt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c0) AND (2100107224)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (vt0.c0) AND (2100107224)) COLLATE NOCASE))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (2100107224)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1 FROM rt0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CASE ((0.3675473292559486)<<(rt0.c0))  WHEN ((rt0.c1)*(rt0.c1)) THEN ((rt0.c0)|(x'')) END;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CASE ((0.3675473292559486)<<(rt0.c0))  WHEN ((rt0.c1)*(rt0.c1)) THEN ((rt0.c0)|(x'')) END WHERE ((- (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CASE ((0.3675473292559486)<<(rt0.c0))  WHEN ((rt0.c1)*(rt0.c1)) THEN ((rt0.c0)|(x'')) END WHERE ((NOT ((- (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CASE ((0.3675473292559486)<<(rt0.c0))  WHEN ((rt0.c1)*(rt0.c1)) THEN ((rt0.c0)|(x'')) END WHERE ((((- (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CASE ((0.3675473292559486)<<(rt0.c0))  WHEN ((rt0.c1)*(rt0.c1)) THEN ((rt0.c0)|(x'')) END;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((NOT (rt0.c0)) IN ())) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((NOT (rt0.c0)) IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((NOT (rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING '' UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT ('')) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (('') ISNULL);
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING '' UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT ('')) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (('') ISNULL);
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT NULL)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT NULL)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1)&(vt0.c0)))))AND((((('1999563973')OR(rt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '~+' END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1)&(vt0.c0)))))AND((((('1999563973')OR(rt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '~+' END))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1)&(vt0.c0)))))AND((((('1999563973')OR(rt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '~+' END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (x'5d1d') GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (x'5d1d'))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((x'5d1d') ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0 HAVING GROUP_CONCAT((rt0.c0 IN ())) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((rt0.c0 IN ()))) ISNULL);
SELECT ALL rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0 HAVING GROUP_CONCAT((rt0.c0 IN ())) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((rt0.c0 IN ()))) ISNULL);
SELECT ALL rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END END GROUP BY rt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0, rt0 WHERE (NULL COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (NULL COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((- ((rt0.c1 IN (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- ((rt0.c1 IN (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((- ((rt0.c1 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR(rt0.c1)))AND((rt0.c1 IN ())))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR(rt0.c1)))AND((rt0.c1 IN ())))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR(rt0.c1)))AND((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING '-731911111' UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT ('-731911111')) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (('-731911111') ISNULL);
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING '-731911111' UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT ('-731911111')) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (('-731911111') ISNULL);
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), x'b5b9');
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), x'b5b9') WHERE ((((+ (rt0.c2)))==((((rt0.c0, vt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), x'b5b9') WHERE ((NOT ((((+ (rt0.c2)))==((((rt0.c0, vt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), x'b5b9') WHERE ((((((+ (rt0.c2)))=((((rt0.c0, vt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), x'b5b9');
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((~ (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_type(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_type(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_type(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)AND(UPPER(DISTINCT rt0.c0))))OR(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c0 IN ()))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((rt0.c1)AND(UPPER(DISTINCT rt0.c0))))OR(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c0 IN ()))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1)AND(UPPER(DISTINCT rt0.c0))))OR(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c0 IN ()))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING CASE MIN(rt0.c0)  WHEN GROUP_CONCAT(rt0.c0) THEN rt0.c1 WHEN rt0.c0 THEN COUNT(MAX(vt0.c0)) WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (CASE MIN(rt0.c0)  WHEN GROUP_CONCAT(rt0.c0) THEN rt0.c1 WHEN rt0.c0 THEN COUNT(MAX(vt0.c0)) WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING ((CASE MIN(rt0.c0)  WHEN GROUP_CONCAT(rt0.c0) THEN rt0.c1 WHEN rt0.c0 THEN COUNT(MAX(vt0.c0)) WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY) ISNULL);
SELECT TOTAL(((COALESCE(rt0.c2, 1757528582)) NOT NULL)) FROM rt0 ORDER BY (((((((rt0.c1))!=((rt0.c0))))OR((rt0.c2 IN ()))))AND(((rt0.c0)OR(rt0.c2)))), ((((rt0.c1)OR(rt0.c0))) BETWEEN ((('-863145139') BETWEEN (rt0.c2) AND (rt0.c0))) AND (COALESCE(DISTINCT rt0.c0, rt0.c0))) DESC  NULLS LAST;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)+(1.478117407E9))  WHEN vt0.c0 THEN (~ (vt0.c0)) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)+(1.478117407E9))  WHEN vt0.c0 THEN (~ (vt0.c0)) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)+(1.478117407E9))  WHEN vt0.c0 THEN (~ (vt0.c0)) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)IS(vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)IS(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((- (NULL))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((- (NULL))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((- (NULL))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(vt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))  WHEN rt0.c0 COLLATE RTRIM THEN ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(0.0852389565780649)))AND(rt0.c1)))AND(rt0.c2)))OR(0.7902491364014789)) WHEN ((vt0.c0)&(rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1)|(-1652227522)) THEN CAST(rt0.c2 AS TEXT) ELSE ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))  WHEN rt0.c0 COLLATE RTRIM THEN ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(0.0852389565780649)))AND(rt0.c1)))AND(rt0.c2)))OR(0.7902491364014789)) WHEN ((vt0.c0)&(rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1)|(-1652227522)) THEN CAST(rt0.c2 AS TEXT) ELSE ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))  WHEN rt0.c0 COLLATE RTRIM THEN ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(0.0852389565780649)))AND(rt0.c1)))AND(rt0.c2)))OR(0.7902491364014789)) WHEN ((vt0.c0)&(rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1)|(-1652227522)) THEN CAST(rt0.c2 AS TEXT) ELSE ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END) ISNULL));
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((((rt0.c0)IS NOT(rt0.c2)))AND(x''))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)IS NOT(rt0.c2)))AND(x''))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)IS NOT(rt0.c2)))AND(x''))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))IS(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)/(vt0.c0)))IS(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))IS(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING TOTAL(MIN(rt0.c0)) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((TOTAL(MIN(rt0.c0))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)>=(CASE rt0.c2  WHEN 0.14529456580526634 THEN rt0.c2 ELSE rt0.c2 END))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)>=(CASE rt0.c2  WHEN 0.14529456580526634 THEN rt0.c2 ELSE rt0.c2 END))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)>=(CASE rt0.c2  WHEN 0.14529456580526634 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 0.43580441381694346 ELSE 0.31170396960773006 END, CAST(rt0.c0 AS NUMERIC), LTRIM(rt0.c2, rt0.c0))) AND (((rt0.c0 IN ()), LIKELY(rt0.c2), (rt0.c0 IN (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 0.43580441381694346 ELSE 0.31170396960773006 END, CAST(rt0.c0 AS NUMERIC), LTRIM(rt0.c2, rt0.c0))) AND (((rt0.c0 IN ()), LIKELY(rt0.c2), (rt0.c0 IN (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 0.43580441381694346 ELSE 0.31170396960773006 END, CAST(rt0.c0 AS NUMERIC), LTRIM(rt0.c2, rt0.c0))) AND (((rt0.c0 IN ()), LIKELY(rt0.c2), (rt0.c0 IN (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c1))<((rt0.c0)))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1))<((rt0.c0)))))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c1))<((rt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((0.9611545561774182 IN (rt0.c0))) AND (((rt0.c0)||(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((0.9611545561774182 IN (rt0.c0))) AND (((rt0.c0)||(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((0.9611545561774182 IN (rt0.c0))) AND (((rt0.c0)||(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((0.24853234557185866)) BETWEEN (((((rt0.c2, rt0.c2, rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((x'705d', rt0.c0, rt0.c2, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((0.24853234557185866)) BETWEEN (((((rt0.c2, rt0.c2, rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((x'705d', rt0.c0, rt0.c2, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((0.24853234557185866)) BETWEEN (((((rt0.c2, rt0.c2, rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((x'705d', rt0.c0, rt0.c2, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c2))))) AND ((rt0.c1 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, rt0.c2))))AND(rt0.c2)))OR(''))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((((rt0.c1, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, rt0.c2))))AND(rt0.c2)))OR(''))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c1, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, rt0.c2))))AND(rt0.c2)))OR(''))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING SUM(rt0.c0) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(rt0.c0)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING SUM(rt0.c0) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(rt0.c0)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))<=(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2 IN ()))<=(((vt0.c0) IS TRUE)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c2 IN ()))<=(((vt0.c0) IS TRUE)))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2140388468933372)!=(((vt0.c0) BETWEEN (rt0.c0) AND (NULL))));
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2140388468933372)!=(((vt0.c0) BETWEEN (rt0.c0) AND (NULL)))) WHERE (NULL) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2140388468933372)!=(((vt0.c0) BETWEEN (rt0.c0) AND (NULL)))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2140388468933372)<>(((vt0.c0) BETWEEN (rt0.c0) AND (NULL)))) WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2140388468933372)!=(((vt0.c0) BETWEEN (rt0.c0) AND (NULL))));
SELECT vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END))>=((CAST(x'3c3cd8bc' AS REAL)))) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END))>=((CAST(x'3c3cd8bc' AS REAL)))) WHERE (((((((vt0.c0) BETWEEN (-7.20677451E8) AND (rt0.c0)))OR(((rt0.c1)-(rt0.c1)))))AND((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c2, 0.6917870696626479, rt0.c2)))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END))>=((CAST(x'3c3cd8bc' AS REAL)))) WHERE ((NOT (((((((vt0.c0) BETWEEN (-7.20677451E8) AND (rt0.c0)))OR(((rt0.c1)-(rt0.c1)))))AND((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c2, 0.6917870696626479, rt0.c2)))))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END))>=((CAST(x'3c3cd8bc' AS REAL)))) WHERE (((((((((vt0.c0) BETWEEN (-7.20677451E8) AND (rt0.c0)))OR(((rt0.c1)-(rt0.c1)))))AND((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c2, 0.6917870696626479, rt0.c2)))))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END))>=((CAST(x'3c3cd8bc' AS REAL)))) GROUP BY vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((MIN(rt0.c2))) NOT BETWEEN ((x'afda')) AND ((TOTAL(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((MIN(rt0.c2))) NOT BETWEEN ((x'afda')) AND ((TOTAL(TOTAL(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((MIN(rt0.c2))) NOT BETWEEN ((x'afda')) AND ((TOTAL(TOTAL(rt0.c2)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))*((vt0.c0 IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))*((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))*((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c0)AND(rt0.c0)) IN (rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c0)AND(rt0.c0)) IN (rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c0)AND(rt0.c0)) IN (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('-1980068775') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('-1980068775'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('-1980068775') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(rt0.c0)) ISNULL) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((SUM(rt0.c0)) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((SUM(rt0.c0)) ISNULL)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(rt0.c0)) ISNULL) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((SUM(rt0.c0)) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((SUM(rt0.c0)) ISNULL)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0 FROM vt0, rt0;
SELECT rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1) BETWEEN ('-720677451') AND (vt0.c0)), (rt0.c2 IN (vt0.c0, rt0.c2)), (+ (rt0.c2))))==((ABS(rt0.c1), ((rt0.c0)<=(rt0.c2)), ((rt0.c2)-(rt0.c0)))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c1) BETWEEN ('-720677451') AND (vt0.c0)), (rt0.c2 IN (vt0.c0, rt0.c2)), (+ (rt0.c2))))=((ABS(rt0.c1), ((rt0.c0)<=(rt0.c2)), ((rt0.c2)-(rt0.c0)))))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 WHERE ((((((((rt0.c1) BETWEEN ('-720677451') AND (vt0.c0)), (rt0.c2 IN (vt0.c0, rt0.c2)), (+ (rt0.c2))))==((ABS(rt0.c1), ((rt0.c0)<=(rt0.c2)), ((rt0.c2)-(rt0.c0)))))) ISNULL));
SELECT ALL rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((NULLIF(DISTINCT rt0.c0, rt0.c0))AND((NULL IN ()))))OR((- (rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((NULLIF(DISTINCT rt0.c0, rt0.c0))AND((NULL IN ()))))OR((- (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((NULLIF(DISTINCT rt0.c0, rt0.c0))AND((NULL IN ()))))OR((- (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 NOT INDEXED, rt0 WHERE ((((((rt0.c1)==(rt0.c0))))>(((NOT (vt0.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c1)==(rt0.c0))))>(((NOT (vt0.c0)))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((((((((rt0.c1)==(rt0.c0))))>(((NOT (vt0.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CHAR(((TOTAL(rt0.c0))IS(rt0.c2)), MAX(COUNT(*)), MAX(MIN(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CHAR(((TOTAL(rt0.c0))IS(rt0.c2)), MAX(COUNT(*)), MAX(MIN(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CHAR(((TOTAL(rt0.c0))IS(rt0.c2)), MAX(COUNT(*)), MAX(MIN(rt0.c2)) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((0.8171479301309819) ISNULL)) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((0.8171479301309819) ISNULL)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((0.8171479301309819) ISNULL)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (GLOB(CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (GLOB(CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((GLOB(CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING TOTAL_CHANGES() UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (TOTAL_CHANGES())) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING ((TOTAL_CHANGES()) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING TOTAL_CHANGES() UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (TOTAL_CHANGES())) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING ((TOTAL_CHANGES()) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((vt0.c0)<=(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((vt0.c0)<=(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.4042743308537553) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.4042743308537553))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.4042743308537553) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 NOT INDEXED WHERE ((NOT (CAST((rt0.c1 IN ()) AS TEXT)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST((rt0.c1 IN ()) AS TEXT)) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND (((TOTAL('1') IN ())))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND (((TOTAL('1') IN ())))))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (((((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND (((TOTAL('1') IN ()))))) ISNULL);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND (((TOTAL('1') IN ())))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND (((TOTAL('1') IN ())))))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (((((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND (((TOTAL('1') IN ()))))) ISNULL);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2)OR(0.5191516067524301)))OR(x''))) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c2)OR(0.5191516067524301)))OR(x''))) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c2)OR(0.5191516067524301)))OR(x''))) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)+(rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)+(rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)+(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (CAST(rt0.c1 AS REAL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c1 AS REAL)))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS REAL)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING x'' UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((x'') ISNULL);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING x'' UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((x'') ISNULL);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((((vt0.c0)<('')) IN ())) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0)<('')) IN ())))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((((((vt0.c0)<('')) IN ())) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (0.28180399175150683 COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.28180399175150683 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.28180399175150683 COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((rt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((MIN(COUNT(*)), x'46e7', AVG(COUNT(*)))) AND ((LIKELY(DISTINCT MIN(rt0.c0)), MAX(COUNT(vt0.c0)), ((vt0.c0) NOT NULL)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((MIN(COUNT(*)), x'46e7', AVG(COUNT(*)))) AND ((LIKELY(DISTINCT MIN(rt0.c0)), MAX(COUNT(vt0.c0)), ((vt0.c0) NOT NULL)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((rt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((MIN(COUNT(*)), x'46e7', AVG(COUNT(*)))) AND ((LIKELY(DISTINCT MIN(rt0.c0)), MAX(COUNT(vt0.c0)), ((vt0.c0) NOT NULL))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS INTEGER) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c1 AS INTEGER) IN ())) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((('-1621042873'))>(((- (1781982752)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((('-1621042873'))>(((- (1781982752)))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((('-1621042873'))>(((- (1781982752)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) WHERE (((rt0.c2) ISNULL) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) WHERE ((NOT (((rt0.c2) ISNULL) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) WHERE (((((rt0.c2) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING MAX(CASE WHEN rt0.c0 THEN rt0.c2 ELSE COUNT(AVG(MIN(MIN(COUNT(*))))) END) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (MAX(CASE WHEN rt0.c0 THEN rt0.c2 ELSE COUNT(AVG(MIN(MIN(COUNT(*))))) END))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((MAX(CASE WHEN rt0.c0 THEN rt0.c2 ELSE COUNT(AVG(MIN(MIN(COUNT(*))))) END)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c0) NOTNULL);
SELECT ALL rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c0) NOTNULL) WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c0) NOTNULL) WHERE ((NOT (CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)))) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c0) NOTNULL) WHERE (((CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) ISNULL));
SELECT rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c0) NOTNULL);
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((vt0.c0)/(0.09419948725879257))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((NOT (((vt0.c0)/(0.09419948725879257))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((NOT (((vt0.c0)/(0.09419948725879257))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(TOTAL(MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(TOTAL(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(TOTAL(MAX(rt0.c1)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (x'bb73') UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (x'bb73'))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((x'bb73') ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((- (((rt0.c1)<>(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((- (((rt0.c1)<>(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((- (((rt0.c1)!=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((rt0.c0) NOT NULL) IN ())) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0) NOT NULL) IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((((rt0.c0) NOT NULL) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING AVG(AVG(MAX(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (AVG(AVG(MAX(MIN(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((AVG(AVG(MAX(MIN(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN ()))/(CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((vt0.c0 IN ()))/(CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0 IN ()))/(CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (- ((- (vt0.c0)))) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (- ((- (vt0.c0)))) WHERE (rt0.c2) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (- ((- (vt0.c0)))) WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (- ((- (vt0.c0)))) WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (- ((- (vt0.c0)))) GROUP BY rt0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((- (vt0.c0)) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((- (vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((- (vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((- (vt0.c0)) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((- (vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((- (vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (rt0.c1))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((((vt0.c0)AND(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((+ (rt0.c1))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((((vt0.c0)AND(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((+ (rt0.c1))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((((vt0.c0)AND(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0)<=((+ (rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)<=((+ (rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)<=((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(rt0.c1) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(rt0.c1)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(rt0.c1) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(rt0.c1)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) IS FALSE)))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((json_remove(vt0.c0, vt0.c0))>=(CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((json_remove(vt0.c0, vt0.c0))>=(CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((json_remove(vt0.c0, vt0.c0))>=(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((0xd16825c) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((0Xd16825c) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((0xd16825c) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((+ (rt0.c2)))) AND ((LOWER(DISTINCT rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (((+ (rt0.c2)))) AND ((LOWER(DISTINCT rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN (((+ (rt0.c2)))) AND ((LOWER(DISTINCT rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(rt0.c0))-(rt0.c1)) COLLATE BINARY UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(rt0.c0))-(rt0.c1)) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((COUNT(rt0.c0))-(rt0.c1)) COLLATE BINARY) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(rt0.c0))-(rt0.c1)) COLLATE BINARY UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(rt0.c0))-(rt0.c1)) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((COUNT(rt0.c0))-(rt0.c1)) COLLATE BINARY) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((- (rt0.c0)))!=(NULL))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((- (rt0.c0)))<>(NULL))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((((- (rt0.c0)))!=(NULL))) ISNULL));
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS TEXT) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((CAST(CAST(rt0.c1 AS TEXT) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c2))) COLLATE BINARY GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c2))) COLLATE BINARY WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN (NULL IN (rt0.c0, vt0.c0)) THEN rt0.c1 END) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c2))) COLLATE BINARY WHERE ((NOT (CASE CAST(rt0.c0 AS TEXT)  WHEN (NULL IN (rt0.c0, vt0.c0)) THEN rt0.c1 END))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c2))) COLLATE BINARY WHERE (((CASE CAST(rt0.c0 AS TEXT)  WHEN (NULL IN (rt0.c0, vt0.c0)) THEN rt0.c1 END) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c2))) COLLATE BINARY GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING CASE ((GROUP_CONCAT(SUM(MIN(vt0.c0))))&(GROUP_CONCAT(rt0.c2)))  WHEN CAST(rt0.c0 AS INTEGER) THEN TOTAL(SUM(rt0.c1)) END UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE ((GROUP_CONCAT(SUM(MIN(vt0.c0))))&(GROUP_CONCAT(rt0.c2)))  WHEN CAST(rt0.c0 AS INTEGER) THEN TOTAL(SUM(rt0.c1)) END)) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING ((CASE ((GROUP_CONCAT(SUM(MIN(vt0.c0))))&(GROUP_CONCAT(rt0.c2)))  WHEN CAST(rt0.c0 AS INTEGER) THEN TOTAL(SUM(rt0.c1)) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN ((vt0.c0)==(vt0.c0)) ELSE (('') IS TRUE) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN NULL COLLATE RTRIM THEN ((vt0.c0)==(vt0.c0)) ELSE (('') IS TRUE) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN NULL COLLATE RTRIM THEN ((vt0.c0)==(vt0.c0)) ELSE (('') IS TRUE) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0)/(rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)/(rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)/(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (highlight(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) IS FALSE), CAST(rt0.c0 AS REAL), x'1a242d10' COLLATE BINARY)) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (highlight(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) IS FALSE), CAST(rt0.c0 AS REAL), x'1a242d10' COLLATE BINARY)))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((highlight(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) IS FALSE), CAST(rt0.c0 AS REAL), x'1a242d10' COLLATE BINARY)) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING QUOTE(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (QUOTE(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((QUOTE(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING QUOTE(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (QUOTE(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((QUOTE(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1)LIKE(rt0.c2))  WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) THEN (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))) ELSE rt0.c2 COLLATE NOCASE END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((rt0.c1)LIKE(rt0.c2))  WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) THEN (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))) ELSE rt0.c2 COLLATE NOCASE END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE ((rt0.c1)LIKE(rt0.c2))  WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) THEN (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))) ELSE rt0.c2 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING CASE WHEN SUM(COUNT(rt0.c1)) THEN ((rt0.c2) NOTNULL) END UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN SUM(COUNT(rt0.c1)) THEN ((rt0.c2) NOTNULL) END)) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((CASE WHEN SUM(COUNT(rt0.c1)) THEN ((rt0.c2) NOTNULL) END) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (x'272189d7') UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (x'272189d7'))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((x'272189d7') ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2)==(rt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END ELSE rt0.c0 END) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN ((rt0.c2)==(rt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END ELSE rt0.c0 END))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN ((rt0.c2)==(rt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END ELSE rt0.c0 END) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(MIN(rt0.c0) AS BLOB) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(MIN(rt0.c0) AS BLOB))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(MIN(rt0.c0) AS BLOB)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(MIN(rt0.c0) AS BLOB) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(MIN(rt0.c0) AS BLOB))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(MIN(rt0.c0) AS BLOB)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 COLLATE BINARY))<=(((- (rt0.c2)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 COLLATE BINARY))<=(((- (rt0.c2)))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((vt0.c0 COLLATE BINARY))<=(((- (rt0.c2)))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((vt0.c0) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST((0.011627242012961836 IN ()) AS NUMERIC)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST((0.011627242012961836 IN ()) AS NUMERIC)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST((0.011627242012961836 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(TOTAL(COUNT(-9.8988776E8))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(TOTAL(COUNT(-9.8988776E8))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(TOTAL(COUNT(-9.8988776E8)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((- (vt0.c0)), ((vt0.c0)=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(0.5570562543754018)))OR(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((- (vt0.c0)), ((vt0.c0)==(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(0.5570562543754018)))OR(vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((- (vt0.c0)), ((vt0.c0)==(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(0.5570562543754018)))OR(vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)>(rt0.c0))) NOT BETWEEN (((rt0.c0)+('1000338848'))) AND ((NOT (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)>(rt0.c0))) NOT BETWEEN (((rt0.c0)+('1000338848'))) AND ((NOT (rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)>(rt0.c0))) NOT BETWEEN (((rt0.c0)+('1000338848'))) AND ((NOT (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((CAST(rt0.c1 AS BLOB))OR(((((((((NULL)OR(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((((((((0.6381133198944402)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))))) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE ((NOT (((((CAST(rt0.c1 AS BLOB))OR(((((((((NULL)OR(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((((((((0.6381133198944402)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))))))) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((((CAST(rt0.c1 AS BLOB))OR(((((((((NULL)OR(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((((((((0.6381133198944402)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (~ (MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (NOT ((~ (MIN(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (((~ (MIN(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (~ (MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (NOT ((~ (MIN(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (((~ (MIN(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c2 FROM rt0, vt0;
SELECT rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1) NOTNULL))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1) NOTNULL))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c1) NOTNULL))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL));
SELECT rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((COUNT(*))IS NOT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(*))IS NOT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((COUNT(*))IS NOT(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((rt0.c0)&(UNICODE(vt0.c0)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c0)&(UNICODE(vt0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)&(UNICODE(vt0.c0)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c1))>((rt0.c2))) IN ())) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1))>((rt0.c2))) IN ())))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c1))>((rt0.c2))) IN ())) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1) NOTNULL))))AND(CAST(rt0.c2 AS REAL)))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1) NOTNULL))))AND(CAST(rt0.c2 AS REAL)))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1) NOTNULL))))AND(CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING MAX(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MAX(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN x'' END) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS BLOB) THEN x'' END))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS BLOB) THEN x'' END) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN (((rt0.c2)>=(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((rt0.c0 COLLATE RTRIM IN (((rt0.c2)>=(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c0 COLLATE RTRIM IN (((rt0.c2)>=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (ABS(DISTINCT x'')) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (ABS(DISTINCT x'')))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((ABS(DISTINCT x'')) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING ((((((((((((vt0.c0)AND(MAX(MIN(MIN(COUNT(rt0.c0)))))))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(SUM(TOTAL(TOTAL(COUNT(AVG(rt0.c1))))))))OR(MAX(rt0.c2))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (((((((((((((vt0.c0)AND(MAX(MIN(MIN(COUNT(rt0.c0)))))))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(SUM(TOTAL(TOTAL(COUNT(AVG(rt0.c1))))))))OR(MAX(rt0.c2))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING ((((((((((((((vt0.c0)AND(MAX(MIN(MIN(COUNT(rt0.c0)))))))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(SUM(TOTAL(TOTAL(COUNT(AVG(rt0.c1))))))))OR(MAX(rt0.c2))) COLLATE NOCASE) ISNULL);
SELECT * FROM vt0 NOT INDEXED, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (rt0.c2, x''))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN (rt0.c2, x''))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN (rt0.c2, x''))) ISNULL));
SELECT * FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)/('')))<=((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)/('')))<=((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)/('')))<=((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (((MAX(rt0.c1)))>((json_type(rt0.c1)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT ((((MAX(rt0.c1)))>((json_type(rt0.c1)))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (((((MAX(rt0.c1)))>((json_type(rt0.c1))))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (((MAX(rt0.c1)))>((json_type(rt0.c1)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT ((((MAX(rt0.c1)))>((json_type(rt0.c1)))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (((((MAX(rt0.c1)))>((json_type(rt0.c1))))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c0 THEN INSTR(rt0.c2, vt0.c0) WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END THEN (+ (rt0.c1)) WHEN (+ (vt0.c0)) THEN HEX(vt0.c0) END GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(LIKELIHOOD(x'', 0.40229504295311647))))AND((rt0.c1 IN ()))))AND(0.6884322211095988)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))));
SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(LIKELIHOOD(x'', 0.40229504295311647))))AND((rt0.c1 IN ()))))AND(0.6884322211095988)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE (((rt0.c1 COLLATE BINARY)-(((vt0.c0) ISNULL)))) UNION ALL SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(LIKELIHOOD(x'', 0.40229504295311647))))AND((rt0.c1 IN ()))))AND(0.6884322211095988)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE ((NOT (((rt0.c1 COLLATE BINARY)-(((vt0.c0) ISNULL)))))) UNION ALL SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(LIKELIHOOD(x'', 0.40229504295311647))))AND((rt0.c1 IN ()))))AND(0.6884322211095988)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE (((((rt0.c1 COLLATE BINARY)-(((vt0.c0) ISNULL)))) ISNULL));
SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(LIKELIHOOD(x'', 0.40229504295311647))))AND((rt0.c1 IN ()))))AND(0.6884322211095988)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOTNULL))))OR((- (vt0.c0)))))OR(TOTAL_CHANGES())))AND(NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOTNULL))))OR((- (vt0.c0)))))OR(TOTAL_CHANGES())))AND(NULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOTNULL))))OR((- (vt0.c0)))))OR(TOTAL_CHANGES())))AND(NULL))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(MAX(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (COUNT(MAX(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(MAX(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((+ ((~ (vt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((+ ((~ (vt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((+ ((~ (vt0.c0))))) ISNULL));
SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(TRIM(vt0.c0) AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(TRIM(vt0.c0) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(TRIM(vt0.c0) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))) WHERE ((- (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))) WHERE ((NOT ((- (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))) WHERE ((((- (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c2)|(rt0.c2)))OR(((rt0.c0) IS FALSE))))OR(3.21293493E8))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c2)|(rt0.c2)))OR(((rt0.c0) IS FALSE))))OR(3.21293493E8))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((rt0.c2)|(rt0.c2)))OR(((rt0.c0) IS FALSE))))OR(3.21293493E8))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)!=(rt0.c0)))AND(CAST(rt0.c0 AS REAL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)!=(rt0.c0)))AND(CAST(rt0.c0 AS REAL)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)<>(rt0.c0)))AND(CAST(rt0.c0 AS REAL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(rt0.c0))LIKE(((GROUP_CONCAT(SUM(rt0.c2)))||(GROUP_CONCAT(MIN(rt0.c0)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((COUNT(rt0.c0))LIKE(((GROUP_CONCAT(SUM(rt0.c2)))||(GROUP_CONCAT(MIN(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((COUNT(rt0.c0))LIKE(((GROUP_CONCAT(SUM(rt0.c2)))||(GROUP_CONCAT(MIN(rt0.c0))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1 IN (rt0.c2)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1 IN (rt0.c2)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1 IN (rt0.c2)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((~ (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((NOT ((~ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((NOT ((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (CAST(((vt0.c0)+(rt0.c0)) AS INTEGER)) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(((vt0.c0)+(rt0.c0)) AS INTEGER)))) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((CAST(((vt0.c0)+(rt0.c0)) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT TOTAL('<G') FROM rt0, vt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1) ISNULL) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) ISNULL) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((- (CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((- (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (CAST(((rt0.c0) IS FALSE) AS REAL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(((rt0.c0) IS FALSE) AS REAL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((CAST(((rt0.c0) IS FALSE) AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((LOWER(DISTINCT 0.6901322061794042))OR(((TOTAL(MAX(rt0.c2)))IS(AVG(AVG(rt0.c1)))))))OR(CASE WHEN rt0.c2 THEN MIN(rt0.c1) WHEN TOTAL(rt0.c1) THEN '' WHEN rt0.c1 THEN rt0.c1 END)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((((LOWER(DISTINCT 0.6901322061794042))OR(((TOTAL(MAX(rt0.c2)))IS(AVG(AVG(rt0.c1)))))))OR(CASE WHEN rt0.c2 THEN MIN(rt0.c1) WHEN TOTAL(rt0.c1) THEN '' WHEN rt0.c1 THEN rt0.c1 END)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((LOWER(DISTINCT 0.6901322061794042))OR(((TOTAL(MAX(rt0.c2)))IS(AVG(AVG(rt0.c1)))))))OR(CASE WHEN rt0.c2 THEN MIN(rt0.c1) WHEN TOTAL(rt0.c1) THEN '' WHEN rt0.c1 THEN rt0.c1 END))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) AS NUMERIC)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((('-1466835343')<=(rt0.c1)))LIKE(((rt0.c1)AND(rt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((('-1466835343')<=(rt0.c1)))LIKE(((rt0.c1)AND(rt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((((('-1466835343')<=(rt0.c1)))LIKE(((rt0.c1)AND(rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE) COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c2) IS TRUE) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING CAST(json_object(TOTAL(rt0.c2), rt0.c0) AS NUMERIC) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (CAST(json_object(TOTAL(rt0.c2), rt0.c0) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((CAST(json_object(TOTAL(rt0.c2), rt0.c0) AS NUMERIC)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING CAST(json_object(TOTAL(rt0.c2), rt0.c0) AS NUMERIC) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (CAST(json_object(TOTAL(rt0.c2), rt0.c0) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((CAST(json_object(TOTAL(rt0.c2), rt0.c0) AS NUMERIC)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL SUM(((((rt0.c1) IS FALSE))==(CAST(rt0.c0 AS INTEGER)))) FROM rt0 ORDER BY (rt0.c2 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((('-1188446144')>(rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((('-1188446144')>(rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((('-1188446144')>(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '{Kl6zhEz', 0.7125885259499875))))OR((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '{Kl6zhEz', 0.7125885259499875))))OR((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '{Kl6zhEz', 0.7125885259499875))))OR((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING CASE WHEN MAX(rt0.c0) THEN (x'1f67' IN ()) WHEN CASE WHEN MIN(rt0.c1) THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN COUNT(SUM(COUNT(MAX(0Xffffffffddec59ad)))) ELSE rt0.c2 END THEN COUNT(GROUP_CONCAT(rt0.c1)) WHEN TYPEOF(rt0.c0) THEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(COUNT(SUM(rt0.c1)))))AND(GROUP_CONCAT(rt0.c2))) END UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CASE WHEN MAX(rt0.c0) THEN (x'1f67' IN ()) WHEN CASE WHEN MIN(rt0.c1) THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN COUNT(SUM(COUNT(MAX(0xffffffffddec59ad)))) ELSE rt0.c2 END THEN COUNT(GROUP_CONCAT(rt0.c1)) WHEN TYPEOF(rt0.c0) THEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(COUNT(SUM(rt0.c1)))))AND(GROUP_CONCAT(rt0.c2))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE WHEN MAX(rt0.c0) THEN (x'1f67' IN ()) WHEN CASE WHEN MIN(rt0.c1) THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN COUNT(SUM(COUNT(MAX(0xffffffffddec59ad)))) ELSE rt0.c2 END THEN COUNT(GROUP_CONCAT(rt0.c1)) WHEN TYPEOF(rt0.c0) THEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(COUNT(SUM(rt0.c1)))))AND(GROUP_CONCAT(rt0.c2))) END) ISNULL);
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c2)))OR('557728333'))) BETWEEN (((rt0.c1)/(rt0.c2))) AND (((vt0.c0)-(x'ccf9'))))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((((vt0.c0)OR(rt0.c2)))OR('557728333'))) BETWEEN (((rt0.c1)/(rt0.c2))) AND (((vt0.c0)-(x'ccf9'))))))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((((((vt0.c0)OR(rt0.c2)))OR('557728333'))) BETWEEN (((rt0.c1)/(rt0.c2))) AND (((vt0.c0)-(x'ccf9'))))) ISNULL));
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((- (rt0.c2)), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)), (~ (x''))))<((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)), rt0.c1, ((rt0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((- (rt0.c2)), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)), (~ (x''))))<((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)), rt0.c1, ((rt0.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((- (rt0.c2)), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)), (~ (x''))))<((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)), rt0.c1, ((rt0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((- (((rt0.c2)GLOB(rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- (((rt0.c2)GLOB(rt0.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (((rt0.c2)GLOB(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT((('2093093645')IS(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT((('2093093645')IS(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT((('2093093645')IS(COUNT(*))))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((LIKELY(vt0.c0))%((((rt0.c1))>=((rt0.c1)))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((LIKELY(vt0.c0))%((((rt0.c1))>=((rt0.c1))))) WHERE (NULL) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((LIKELY(vt0.c0))%((((rt0.c1))>=((rt0.c1))))) WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((LIKELY(vt0.c0))%((((rt0.c1))>=((rt0.c1))))) WHERE (((NULL) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((LIKELY(vt0.c0))%((((rt0.c1))>=((rt0.c1)))));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (rt0.c1 IN ()) WHEN (((('')AND(vt0.c0)))AND(rt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) THEN ((rt0.c0)>=(rt0.c2)) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE WHEN (~ (rt0.c1)) THEN (rt0.c1 IN ()) WHEN (((('')AND(vt0.c0)))AND(rt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) THEN ((rt0.c0)>=(rt0.c2)) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE WHEN (~ (rt0.c1)) THEN (rt0.c1 IN ()) WHEN (((('')AND(vt0.c0)))AND(rt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) THEN ((rt0.c0)>=(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING AVG(1274421159) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(1274421159))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((AVG(1274421159)) ISNULL);
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING AVG(1274421159) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(1274421159))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((AVG(1274421159)) ISNULL);
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c1)>(rt0.c0))) NOTNULL)) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)>(rt0.c0))) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c1)>(rt0.c0))) NOTNULL)) ISNULL));
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (COALESCE(((rt0.c0) NOTNULL), (((rt0.c1))<((rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (COALESCE(((rt0.c0) NOTNULL), (((rt0.c1))<((rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((COALESCE(((rt0.c0) NOTNULL), (((rt0.c1))<((rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)IS(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c0))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) END GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c0))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) END GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING ((TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))))LIKE(((SUM(vt0.c0))>(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c0))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) END GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (((TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))))LIKE(((SUM(vt0.c0))>(rt0.c0)))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c0))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) END GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING ((((TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))))LIKE(((SUM(vt0.c0))>(rt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((- (vt0.c0))))!=((((vt0.c0) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((- (vt0.c0))))<>((((vt0.c0) NOTNULL))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((- (vt0.c0))))!=((((vt0.c0) NOTNULL))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (0Xfffffffffa0acaf9)), ((vt0.c0)>=(vt0.c0))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), ((vt0.c0)GLOB(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (0Xfffffffffa0acaf9)), ((vt0.c0)>=(vt0.c0))))<>((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), ((vt0.c0)GLOB(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (0xfffffffffa0acaf9)), ((vt0.c0)>=(vt0.c0))))<>((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), ((vt0.c0)GLOB(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '310230169' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('310230169')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('310230169') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '310230169' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('310230169')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('310230169') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c0)AND('5505791173676617540:-3084107259501790546-289-238 7791639536030084068 948T9gYeS?x\rX')))AND(rt0.c0)))GLOB(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c0)AND('5505791173676617540:-3084107259501790546-289-238 7791639536030084068 948T9gYeS?x\rX')))AND(rt0.c0)))GLOB(CAST(rt0.c0 AS NUMERIC)))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c0)AND('5505791173676617540:-3084107259501790546-289-238 7791639536030084068 948T9gYeS?x\rX')))AND(rt0.c0)))GLOB(CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((LIKELY(DISTINCT rt0.c0) IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((LIKELY(DISTINCT rt0.c0) IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((LIKELY(DISTINCT rt0.c0) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (COALESCE(rt0.c2, rt0.c0)));
SELECT rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (COALESCE(rt0.c2, rt0.c0))) WHERE ((LTRIM(rt0.c0) IN (IFNULL(DISTINCT vt0.c0, rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (COALESCE(rt0.c2, rt0.c0))) WHERE ((NOT ((LTRIM(rt0.c0) IN (IFNULL(DISTINCT vt0.c0, rt0.c1)))))) UNION ALL SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (COALESCE(rt0.c2, rt0.c0))) WHERE ((((LTRIM(rt0.c0) IN (IFNULL(DISTINCT vt0.c0, rt0.c1)))) ISNULL));
SELECT rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (COALESCE(rt0.c2, rt0.c0)));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c0)OR(((vt0.c0)>=(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c0)OR(((vt0.c0)>=(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c0)OR(((vt0.c0)>=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS NUMERIC)) GROUP BY rt0.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS NUMERIC)))) GROUP BY rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (SQLITE_COMPILEOPTION_GET(rt0.c2))) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (SQLITE_COMPILEOPTION_GET(rt0.c2))) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((CASE WHEN rt0.c2 THEN AVG(rt0.c1) END) NOT BETWEEN (((MIN(COUNT(rt0.c1))) IS FALSE)) AND (MAX(MAX(rt0.c0)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (SQLITE_COMPILEOPTION_GET(rt0.c2))) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((CASE WHEN rt0.c2 THEN AVG(rt0.c1) END) NOT BETWEEN (((MIN(COUNT(rt0.c1))) IS FALSE)) AND (MAX(MAX(rt0.c0)))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (SQLITE_COMPILEOPTION_GET(rt0.c2))) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((((CASE WHEN rt0.c2 THEN AVG(rt0.c1) END) NOT BETWEEN (((MIN(COUNT(rt0.c1))) IS FALSE)) AND (MAX(MAX(rt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)|(vt0.c0))) AND ((NOT (rt0.c0))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)|(vt0.c0))) AND ((NOT (rt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)|(vt0.c0))) AND ((NOT (rt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) BETWEEN ((- (vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN ((- (vt0.c0))) AND (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN ((- (vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING ((((SUM(COUNT(GROUP_CONCAT(COUNT(*)))))IS NOT(rt0.c2))) BETWEEN (CAST(TOTAL(rt0.c1) AS REAL)) AND (COUNT(MAX(rt0.c1)))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((SUM(COUNT(GROUP_CONCAT(COUNT(*)))))IS NOT(rt0.c2))) BETWEEN (CAST(TOTAL(rt0.c1) AS REAL)) AND (COUNT(MAX(rt0.c1)))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING ((((((SUM(COUNT(GROUP_CONCAT(COUNT(*)))))IS NOT(rt0.c2))) BETWEEN (CAST(TOTAL(rt0.c1) AS REAL)) AND (COUNT(MAX(rt0.c1))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN ('[䆘') AND (rt0.c1)))AND(((rt0.c1)==(rt0.c2)))))OR(LOWER(rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN ('[䆘') AND (rt0.c1)))AND(((rt0.c1)==(rt0.c2)))))OR(LOWER(rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0) NOT BETWEEN ('[䆘') AND (rt0.c1)))AND(((rt0.c1)==(rt0.c2)))))OR(LOWER(rt0.c2)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (CAST((rt0.c0 IN (rt0.c1)) AS NUMERIC)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE ((NOT (CAST((rt0.c0 IN (rt0.c1)) AS NUMERIC)))) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((CAST((rt0.c0 IN (rt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c0)))IS((- (rt0.c1)))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c0)))IS((- (rt0.c1)))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c0)))IS((- (rt0.c1)))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c0)))IS((- (rt0.c1)))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((json_array_length(vt0.c0)) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((json_array_length(vt0.c0)) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((json_array_length(vt0.c0)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)==(rt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)==(rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)=(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN (((vt0.c0)GLOB(rt0.c2))) AND (((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (((((rt0.c2) ISNULL)) NOT BETWEEN (((vt0.c0)GLOB(rt0.c2))) AND (((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((((rt0.c2) ISNULL)) NOT BETWEEN (((vt0.c0)GLOB(rt0.c2))) AND (((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE ((COUNT(*)) IS FALSE)  WHEN x'' THEN SUM(TOTAL(vt0.c0)) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE ((COUNT(*)) IS FALSE)  WHEN x'' THEN SUM(TOTAL(vt0.c0)) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE ((COUNT(*)) IS FALSE)  WHEN x'' THEN SUM(TOTAL(vt0.c0)) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((- (CASE WHEN rt0.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT ((- (CASE WHEN rt0.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((((- (CASE WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0))>=((rt0.c0))) IN ())) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 NOT INDEXED WHERE ((NOT (((((rt0.c0))>=((rt0.c0))) IN ())))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c0))>=((rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.4659358177274875 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.4659358177274875)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.4659358177274875) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.4659358177274875 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.4659358177274875)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.4659358177274875) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT TOTAL((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((rt0.c2 IN (vt0.c0, rt0.c1)), NULLIF(DISTINCT rt0.c1, NULL), (((rt0.c1, rt0.c0, rt0.c0))>=((vt0.c0, x'', vt0.c0))))) AND (((- (0xffffffffcb348e39)), CASE WHEN x'' THEN rt0.c0 ELSE vt0.c0 END, ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))))) FROM vt0, rt0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (''))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (''))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (''))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))IS NOT(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))IS NOT(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))IS NOT(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND ('AL')) THEN ((vt0.c0)+(rt0.c2)) WHEN NULL THEN CASE WHEN '\3d AY' THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0))=((rt0.c2))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND ('AL')) THEN ((vt0.c0)+(rt0.c2)) WHEN NULL THEN CASE WHEN '\3d AY' THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0))==((rt0.c2))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END WHERE (HEX(vt0.c0) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND ('AL')) THEN ((vt0.c0)+(rt0.c2)) WHEN NULL THEN CASE WHEN '\3d AY' THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0))=((rt0.c2))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END WHERE ((NOT (HEX(vt0.c0) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND ('AL')) THEN ((vt0.c0)+(rt0.c2)) WHEN NULL THEN CASE WHEN '\3d AY' THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0))=((rt0.c2))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END WHERE (((HEX(vt0.c0) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND ('AL')) THEN ((vt0.c0)+(rt0.c2)) WHEN NULL THEN CASE WHEN '\3d AY' THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0))=((rt0.c2))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)|(x'' COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)|(x'' COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(x'' COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)>>(vt0.c0)) THEN '-245975136' WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS FALSE) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)>>(vt0.c0)) THEN '-245975136' WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS FALSE) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)>>(vt0.c0)) THEN '-245975136' WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS FALSE) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CASE WHEN TOTAL(COUNT(*)) THEN SUM(MIN(rt0.c0)) WHEN TOTAL(AVG(rt0.c2)) THEN CAST(COUNT(*) AS TEXT) WHEN MIN(0.542572852278696) THEN COUNT(*) END UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN TOTAL(COUNT(*)) THEN SUM(MIN(rt0.c0)) WHEN TOTAL(AVG(rt0.c2)) THEN CAST(COUNT(*) AS TEXT) WHEN MIN(0.542572852278696) THEN COUNT(*) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CASE WHEN TOTAL(COUNT(*)) THEN SUM(MIN(rt0.c0)) WHEN TOTAL(AVG(rt0.c2)) THEN CAST(COUNT(*) AS TEXT) WHEN MIN(0.542572852278696) THEN COUNT(*) END) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOTNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((UPPER(DISTINCT vt0.c0) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((UPPER(DISTINCT vt0.c0) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((UPPER(DISTINCT vt0.c0) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((+ ((((vt0.c0))>((rt0.c2)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((+ ((((vt0.c0))>((rt0.c2)))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((((+ ((((vt0.c0))>((rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS NUMERIC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS NUMERIC) WHERE (CASE CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END  WHEN CAST(rt0.c2 AS INTEGER) THEN LIKELIHOOD(rt0.c2, 0.6844037864117322) END) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS NUMERIC) WHERE ((NOT (CASE CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END  WHEN CAST(rt0.c2 AS INTEGER) THEN LIKELIHOOD(rt0.c2, 0.6844037864117322) END))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS NUMERIC) WHERE (((CASE CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END  WHEN CAST(rt0.c2 AS INTEGER) THEN LIKELIHOOD(rt0.c2, 0.6844037864117322) END) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS NUMERIC);
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN '' END, 0.21440851307395625)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN '' END, 0.21440851307395625)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN '' END, 0.21440851307395625)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN (((rt0.c0)) NOT BETWEEN (('1414598958')) AND ((rt0.c2))) THEN NULL COLLATE NOCASE WHEN json_array_length(rt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN ((rt0.c0) NOT NULL) THEN (~ (rt0.c0)) ELSE (- (vt0.c0)) END) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE CAST(rt0.c0 AS REAL)  WHEN (((rt0.c0)) NOT BETWEEN (('1414598958')) AND ((rt0.c2))) THEN NULL COLLATE NOCASE WHEN json_array_length(rt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN ((rt0.c0) NOT NULL) THEN (~ (rt0.c0)) ELSE (- (vt0.c0)) END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED WHERE (((CASE CAST(rt0.c0 AS REAL)  WHEN (((rt0.c0)) NOT BETWEEN (('1414598958')) AND ((rt0.c2))) THEN NULL COLLATE NOCASE WHEN json_array_length(rt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN ((rt0.c0) NOT NULL) THEN (~ (rt0.c0)) ELSE (- (vt0.c0)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE WHEN (((MIN(1460124617), GROUP_CONCAT(rt0.c1), rt0.c1))<((rt0.c2, TOTAL(rt0.c1), rt0.c0))) THEN GROUP_CONCAT(rt0.c0) ELSE MIN(rt0.c1) END UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN (((MIN(1460124617), GROUP_CONCAT(rt0.c1), rt0.c1))<((rt0.c2, TOTAL(rt0.c1), rt0.c0))) THEN GROUP_CONCAT(rt0.c0) ELSE MIN(rt0.c1) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN (((MIN(1460124617), GROUP_CONCAT(rt0.c1), rt0.c1))<((rt0.c2, TOTAL(rt0.c1), rt0.c0))) THEN GROUP_CONCAT(rt0.c0) ELSE MIN(rt0.c1) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE WHEN (((MIN(1460124617), GROUP_CONCAT(rt0.c1), rt0.c1))<((rt0.c2, TOTAL(rt0.c1), rt0.c0))) THEN GROUP_CONCAT(rt0.c0) ELSE MIN(rt0.c1) END UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN (((MIN(1460124617), GROUP_CONCAT(rt0.c1), rt0.c1))<((rt0.c2, TOTAL(rt0.c1), rt0.c0))) THEN GROUP_CONCAT(rt0.c0) ELSE MIN(rt0.c1) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN (((MIN(1460124617), GROUP_CONCAT(rt0.c1), rt0.c1))<((rt0.c2, TOTAL(rt0.c1), rt0.c0))) THEN GROUP_CONCAT(rt0.c0) ELSE MIN(rt0.c1) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ('0.5570562543754018') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ('0.5570562543754018'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('0.5570562543754018') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((- ('SW่\r莊e	'))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((- ('SW่\r莊e	'))))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((- ('SW่\r莊e	'))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))-(GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))-(GROUP_CONCAT(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))-(GROUP_CONCAT(TOTAL(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))/(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))/(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0)))/(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))OR(LIKELY(vt0.c0))))AND(NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0) ISNULL))OR(LIKELY(vt0.c0))))AND(NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0) ISNULL))OR(LIKELY(vt0.c0))))AND(NULL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (LIKELY(DISTINCT TOTAL(rt0.c2)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (LIKELY(DISTINCT TOTAL(rt0.c2)))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((NOT (LIKELY(DISTINCT TOTAL(rt0.c2))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (LIKELY(DISTINCT TOTAL(rt0.c2)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (LIKELY(DISTINCT TOTAL(rt0.c2)))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((NOT (LIKELY(DISTINCT TOTAL(rt0.c2))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0)>(rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)>(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((+ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))))OR(((vt0.c0)OR(rt0.c0))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))))OR(((vt0.c0)OR(rt0.c0))))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))))OR(((vt0.c0)OR(rt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 NOT INDEXED WHERE (0.5115405350368948) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (0.5115405350368948))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((0.5115405350368948) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (0.8867219167093404) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (0.8867219167093404))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (((0.8867219167093404) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(ABS(DISTINCT COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(ABS(DISTINCT COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(ABS(DISTINCT COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))==((((vt0.c0, 0X6c5e5dfa, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))=((((vt0.c0, 0X6c5e5dfa, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))==((((vt0.c0, 0x6c5e5dfa, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((0xffffffff8af51f13) ISNULL))>((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((0xffffffff8af51f13) ISNULL))>((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((0Xffffffff8af51f13) ISNULL))>((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (0X62ccfdef) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (0x62ccfdef))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((0X62ccfdef) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(SUM(rt0.c2)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((NOT (TOTAL(SUM(rt0.c2)))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((NOT (TOTAL(SUM(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) ELSE CAST(rt0.c0 AS REAL) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) ELSE CAST(rt0.c0 AS REAL) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) ELSE CAST(rt0.c0 AS REAL) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(NULL))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(NULL))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(NULL))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL))/(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))/(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL))/(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING CAST(CASE rt0.c1  WHEN AVG(COUNT(rt0.c2)) THEN COUNT(rt0.c0) ELSE MIN(rt0.c0) END AS REAL) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(CASE rt0.c1  WHEN AVG(COUNT(rt0.c2)) THEN COUNT(rt0.c0) ELSE MIN(rt0.c0) END AS REAL))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((CAST(CASE rt0.c1  WHEN AVG(COUNT(rt0.c2)) THEN COUNT(rt0.c0) ELSE MIN(rt0.c0) END AS REAL)) ISNULL);
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (json_patch(rt0.c2 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT (json_patch(rt0.c2 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((json_patch(rt0.c2 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) ISNULL));
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'e7a0') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x'e7a0'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'e7a0') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (((vt0.c0) IS TRUE) COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE (((((vt0.c0) IS TRUE) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT rt0.c1 FROM vt0, rt0;
SELECT rt0.c1 FROM vt0, rt0 WHERE (LTRIM(((rt0.c1)>=(rt0.c2)))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT (LTRIM(((rt0.c1)>=(rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE (((LTRIM(((rt0.c1)>=(rt0.c2)))) ISNULL));
SELECT rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (-1411126310) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (-1411126310))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((-1411126310) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)>(CAST(vt0.c0 AS REAL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)>(CAST(vt0.c0 AS REAL)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c1 COLLATE BINARY)>(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL MAX(CASE x''  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c1)&(vt0.c0)) WHEN ((rt0.c1) ISNULL) THEN COALESCE(rt0.c2, 1478117407) WHEN ',h荕b<w|	' THEN (((rt0.c1))<>((vt0.c0))) ELSE 0X5f3f0913 END) FROM vt0, rt0 ORDER BY (((NOT (rt0.c1)))+(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((ABS(x''))>=((rt0.c2 IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((ABS(x''))>=((rt0.c2 IN ())))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((ABS(x''))>=((rt0.c2 IN ())))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM;
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM WHERE ((((('') IS FALSE))*(CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM WHERE ((NOT ((((('') IS FALSE))*(CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM WHERE ((((((('') IS FALSE))*(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CHANGES()) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CHANGES()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CHANGES()) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.5900628890252767 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.5900628890252767)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.5900628890252767) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.5900628890252767 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.5900628890252767)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.5900628890252767) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((+ (rt0.c2)) IN (((NULL) BETWEEN (rt0.c0) AND (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((+ (rt0.c2)) IN (((NULL) BETWEEN (rt0.c0) AND (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE (((((+ (rt0.c2)) IN (((NULL) BETWEEN (rt0.c0) AND (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((x'') NOT BETWEEN (rt0.c2) AND ('\%')))) AND (((((rt0.c2))>=((rt0.c1))))));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((x'') NOT BETWEEN (rt0.c2) AND ('\%')))) AND (((((rt0.c2))>=((rt0.c1)))))) WHERE (((CAST(vt0.c0 AS INTEGER))%(((((rt0.c2)OR(rt0.c2)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((x'') NOT BETWEEN (rt0.c2) AND ('\%')))) AND (((((rt0.c2))>=((rt0.c1)))))) WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))%(((((rt0.c2)OR(rt0.c2)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((x'') NOT BETWEEN (rt0.c2) AND ('\%')))) AND (((((rt0.c2))>=((rt0.c1)))))) WHERE (((((CAST(vt0.c0 AS INTEGER))%(((((rt0.c2)OR(rt0.c2)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((x'') NOT BETWEEN (rt0.c2) AND ('\%')))) AND (((((rt0.c2))>=((rt0.c1))))));
SELECT ALL rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '' GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '' WHERE (UNICODE(rt0.c0)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '' WHERE ((NOT (UNICODE(rt0.c0)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '' WHERE (((UNICODE(rt0.c0)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '' GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ('pY<w') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('pY<w'))) UNION ALL SELECT * FROM vt0 WHERE ((('pY<w') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)+(vt0.c0)))))AND((~ (vt0.c0)))))OR(((vt0.c0)|(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)+(vt0.c0)))))AND((~ (vt0.c0)))))OR(((vt0.c0)|(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)+(vt0.c0)))))AND((~ (vt0.c0)))))OR(((vt0.c0)|(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(('-191918971' IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(('-191918971' IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(('-191918971' IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(('-191918971' IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(('-191918971' IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(('-191918971' IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE ((((((((NULL)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1))  WHEN CAST(rt0.c2 AS BLOB) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((((((((NULL)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1))  WHEN CAST(rt0.c2 AS BLOB) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE ((((((((NULL)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1))  WHEN CAST(rt0.c2 AS BLOB) THEN CASE WHEN rt0.c2 THEN rt0.c0 END END) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c1, vt0.c0))==((rt0.c1, rt0.c2, rt0.c2))))<(0x7a6045a5))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((rt0.c0, rt0.c1, vt0.c0))==((rt0.c1, rt0.c2, rt0.c2))))<(0x7a6045a5))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((rt0.c0, rt0.c1, vt0.c0))=((rt0.c1, rt0.c2, rt0.c2))))<(0x7a6045a5))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2)>=(rt0.c1)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c2)>=(rt0.c1)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c2)>=(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(MIN(rt0.c2))) BETWEEN (SUM(AVG(vt0.c0)) COLLATE RTRIM) AND ((NOT (rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (((GROUP_CONCAT(MIN(rt0.c2))) BETWEEN (SUM(AVG(vt0.c0)) COLLATE RTRIM) AND ((NOT (rt0.c1)))))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((((GROUP_CONCAT(MIN(rt0.c2))) BETWEEN (SUM(AVG(vt0.c0)) COLLATE RTRIM) AND ((NOT (rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((vt0.c0)OR(0.009434542898754894)))AND(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((vt0.c0)OR(0.009434542898754894)))AND(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((((vt0.c0)OR(0.009434542898754894)))AND(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((+ (((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ (((rt0.c1) NOT NULL)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ (((rt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(NULL))AND(((vt0.c0) NOT BETWEEN ('썣roo_') AND (vt0.c0)))))OR(vt0.c0)))OR((SUM(MAX(GROUP_CONCAT(AVG(NULL)))) IN ()))))AND(CAST(vt0.c0 AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((COUNT(NULL))AND(((vt0.c0) NOT BETWEEN ('썣roo_') AND (vt0.c0)))))OR(vt0.c0)))OR((SUM(MAX(GROUP_CONCAT(AVG(NULL)))) IN ()))))AND(CAST(vt0.c0 AS REAL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((COUNT(NULL))AND(((vt0.c0) NOT BETWEEN ('썣roo_') AND (vt0.c0)))))OR(vt0.c0)))OR((SUM(MAX(GROUP_CONCAT(AVG(NULL)))) IN ()))))AND(CAST(vt0.c0 AS REAL)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(NULL))AND(((vt0.c0) NOT BETWEEN ('썣roo_') AND (vt0.c0)))))OR(vt0.c0)))OR((SUM(MAX(GROUP_CONCAT(AVG(NULL)))) IN ()))))AND(CAST(vt0.c0 AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((COUNT(NULL))AND(((vt0.c0) NOT BETWEEN ('썣roo_') AND (vt0.c0)))))OR(vt0.c0)))OR((SUM(MAX(GROUP_CONCAT(AVG(NULL)))) IN ()))))AND(CAST(vt0.c0 AS REAL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((COUNT(NULL))AND(((vt0.c0) NOT BETWEEN ('썣roo_') AND (vt0.c0)))))OR(vt0.c0)))OR((SUM(MAX(GROUP_CONCAT(AVG(NULL)))) IN ()))))AND(CAST(vt0.c0 AS REAL)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ((rt0.c1 IN ())))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY IN ((rt0.c1 IN ())))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)OR(((rt0.c0)IS NOT('')))))OR(((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)OR(((rt0.c0)IS NOT('')))))OR(((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)OR(((rt0.c0)IS NOT('')))))OR(((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS TEXT) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS TEXT) WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS TEXT) WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS TEXT) WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS TEXT) GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((+ (GROUP_CONCAT(COUNT(SUM(rt0.c1))))))|(CASE WHEN rt0.c2 THEN MAX(SUM(AVG(MAX(SUM(TOTAL(rt0.c0)))))) WHEN rt0.c2 THEN SUM(MAX(COUNT(COUNT(rt0.c0)))) WHEN rt0.c1 THEN rt0.c1 END)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((+ (GROUP_CONCAT(COUNT(SUM(rt0.c1))))))|(CASE WHEN rt0.c2 THEN MAX(SUM(AVG(MAX(SUM(TOTAL(rt0.c0)))))) WHEN rt0.c2 THEN SUM(MAX(COUNT(COUNT(rt0.c0)))) WHEN rt0.c1 THEN rt0.c1 END)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((+ (GROUP_CONCAT(COUNT(SUM(rt0.c1))))))|(CASE WHEN rt0.c2 THEN MAX(SUM(AVG(MAX(SUM(TOTAL(rt0.c0)))))) WHEN rt0.c2 THEN SUM(MAX(COUNT(COUNT(rt0.c0)))) WHEN rt0.c1 THEN rt0.c1 END))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) IS TRUE))IS NOT(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))IS NOT(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0) IS TRUE))IS NOT(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON NULL;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON NULL WHERE (LTRIM(((rt0.c1)&(rt0.c1)))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON NULL WHERE ((NOT (LTRIM(((rt0.c1)&(rt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON NULL WHERE (((LTRIM(((rt0.c1)&(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON NULL;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 WHERE ((((NOT (rt0.c0))) IS TRUE)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((NOT (rt0.c0))) IS TRUE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((((((NOT (rt0.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING IFNULL(highlight(MIN(vt0.c0), rt0.c1, GROUP_CONCAT(MAX(rt0.c0)), MAX(0.9739439279973967)), MAX(SUM(vt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (IFNULL(highlight(MIN(vt0.c0), rt0.c1, GROUP_CONCAT(MAX(rt0.c0)), MAX(0.9739439279973967)), MAX(SUM(vt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((IFNULL(highlight(MIN(vt0.c0), rt0.c1, GROUP_CONCAT(MAX(rt0.c0)), MAX(0.9739439279973967)), MAX(SUM(vt0.c0)))) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c2)|('1736278278')) COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c2)|('1736278278')) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2)|('1736278278')) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((~ (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((~ (NULL))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (NULL))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN NULL THEN NULL ELSE vt0.c0 END)OR((+ (x'')))))AND(RTRIM(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CASE vt0.c0  WHEN NULL THEN NULL ELSE vt0.c0 END)OR((+ (x'')))))AND(RTRIM(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((CASE vt0.c0  WHEN NULL THEN NULL ELSE vt0.c0 END)OR((+ (x'')))))AND(RTRIM(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING COUNT((((rt0.c1, rt0.c1, vt0.c0))>((x'', SUM(rt0.c0), rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (COUNT((((rt0.c1, rt0.c1, vt0.c0))>((x'', SUM(rt0.c0), rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING ((COUNT((((rt0.c1, rt0.c1, vt0.c0))>((x'', SUM(rt0.c0), rt0.c0))))) ISNULL);
SELECT MAX(rt0.c2) FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) IS FALSE)))!=((0.7188261497027011)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0) IS FALSE)))<>((0.7188261497027011)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((((vt0.c0) IS FALSE)))!=((0.7188261497027011)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((vt0.c0)AND(9835057)) IN ()) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((vt0.c0)AND(9835057)) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((vt0.c0)AND(9835057)) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((vt0.c0)AND(9835057)) IN ()) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((vt0.c0)AND(9835057)) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((vt0.c0)AND(9835057)) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))OR((('a,E䙑}') BETWEEN (rt0.c0) AND (0.3742186639660714))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))OR((('a,E䙑}') BETWEEN (rt0.c0) AND (0.3742186639660714)))) WHERE (((CASE rt0.c1  WHEN '' THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END) ISNULL)) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))OR((('a,E䙑}') BETWEEN (rt0.c0) AND (0.3742186639660714)))) WHERE ((NOT (((CASE rt0.c1  WHEN '' THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))OR((('a,E䙑}') BETWEEN (rt0.c0) AND (0.3742186639660714)))) WHERE (((((CASE rt0.c1  WHEN '' THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END) ISNULL)) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))OR((('a,E䙑}') BETWEEN (rt0.c0) AND (0.3742186639660714))));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((~ (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((~ (rt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((~ (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((rt0.c2) NOT NULL)))<(((~ (rt0.c2)), rt0.c1, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((rt0.c2) NOT NULL)))<(((~ (rt0.c2)), rt0.c1, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((rt0.c2) NOT NULL)))<(((~ (rt0.c2)), rt0.c1, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (CAST(x'66e9' AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (CAST(x'66e9' AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (CAST(x'66e9' AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)), 0.7222239788567238) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)), 0.7222239788567238) WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)), 0.7222239788567238) WHERE ((NOT (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)), 0.7222239788567238) WHERE (((CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)), 0.7222239788567238) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c0 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING CASE WHEN GROUP_CONCAT('.h') THEN TOTAL(rt0.c1) ELSE COUNT(*) END UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT('.h') THEN TOTAL(rt0.c1) ELSE COUNT(*) END)) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN GROUP_CONCAT('.h') THEN TOTAL(rt0.c1) ELSE COUNT(*) END) ISNULL);
SELECT ALL rt0.c0 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING CASE WHEN GROUP_CONCAT('.h') THEN TOTAL(rt0.c1) ELSE COUNT(*) END UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT('.h') THEN TOTAL(rt0.c1) ELSE COUNT(*) END)) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN GROUP_CONCAT('.h') THEN TOTAL(rt0.c1) ELSE COUNT(*) END) ISNULL);
SELECT ALL rt0.c0 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((rt0.c1 IN (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (UNLIKELY(((NULL)AND('0.7049260019999367')))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (UNLIKELY(((NULL)AND('0.7049260019999367')))))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((UNLIKELY(((NULL)AND('0.7049260019999367')))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((COUNT(rt0.c2))AND(MAX(MAX(COUNT(rt0.c1))))))OR(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((COUNT(rt0.c2))AND(MAX(MAX(COUNT(rt0.c1))))))OR(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((COUNT(rt0.c2))AND(MAX(MAX(COUNT(rt0.c1))))))OR(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN (CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0) ISNULL) IN (CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) ISNULL) IN (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (8.22740941E8) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (8.22740941E8))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((8.22740941E8) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2 HAVING (((AVG(vt0.c0))) NOT BETWEEN (((((TOTAL(rt0.c1)))>((GROUP_CONCAT(MAX(rt0.c1))))))) AND ((((TOTAL('0.31170396960773006')) BETWEEN (MIN(x'8acd')) AND (COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT ((((AVG(vt0.c0))) NOT BETWEEN (((((TOTAL(rt0.c1)))>((GROUP_CONCAT(MAX(rt0.c1))))))) AND ((((TOTAL('0.31170396960773006')) BETWEEN (MIN(x'8acd')) AND (COUNT(*)))))))) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2 HAVING (((((AVG(vt0.c0))) NOT BETWEEN (((((TOTAL(rt0.c1)))>((GROUP_CONCAT(MAX(rt0.c1))))))) AND ((((TOTAL('0.31170396960773006')) BETWEEN (MIN(x'8acd')) AND (COUNT(*))))))) ISNULL);
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS TEXT)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c0 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((CAST(rt0.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY)<=(((rt0.c1)<(rt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)<=(((rt0.c1)<(rt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0 COLLATE BINARY)<=(((rt0.c1)<(rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (0Xffffffff8fcb602c) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (0xffffffff8fcb602c))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((0Xffffffff8fcb602c) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING MIN(((AVG(MIN(TOTAL(rt0.c0)))) ISNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (MIN(((AVG(MIN(TOTAL(rt0.c0)))) ISNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING ((MIN(((AVG(MIN(TOTAL(rt0.c0)))) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)IS(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)IS(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS INTEGER) IN ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER) IN ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 WHERE ((((NOT (CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING '1826780547' UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT ('1826780547')) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (('1826780547') ISNULL);
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING '1826780547' UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT ('1826780547')) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (('1826780547') ISNULL);
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) IN (LIKELIHOOD(rt0.c1, 0.2849779937699154)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) IN (LIKELIHOOD(rt0.c1, 0.2849779937699154)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) IN (LIKELIHOOD(rt0.c1, 0.2849779937699154)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((UNLIKELY(rt0.c1))OR(vt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((UNLIKELY(rt0.c1))OR(vt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((UNLIKELY(rt0.c1))OR(vt0.c0))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((((((((rt0.c1)OR(0.3952913925847825)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)>>(rt0.c0)) THEN (rt0.c1 IN ()) WHEN LIKELY('') THEN LENGTH(vt0.c0) END) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM vt0, rt0 NOT INDEXED WHERE ((NOT (CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((((((((rt0.c1)OR(0.3952913925847825)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)>>(rt0.c0)) THEN (rt0.c1 IN ()) WHEN LIKELY('') THEN LENGTH(vt0.c0) END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c2 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((((((((rt0.c1)OR(0.3952913925847825)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)>>(rt0.c0)) THEN (rt0.c1 IN ()) WHEN LIKELY('') THEN LENGTH(vt0.c0) END) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING MIN(MIN(0.8854012446597582)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (MIN(MIN(0.8854012446597582)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING ((MIN(MIN(0.8854012446597582))) ISNULL);
SELECT TOTAL(((rt0.c2 COLLATE BINARY)<(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))) FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1)-(rt0.c0)) IN ())) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)-(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)-(rt0.c0)) IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))OR(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC))OR(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL))AND(((vt0.c0)&(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))AND(((vt0.c0)&(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(((vt0.c0)&(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE))%('-2049271565' COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) IS TRUE))%('-2049271565' COLLATE BINARY))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2) IS TRUE))%('-2049271565' COLLATE BINARY))) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED INNER JOIN rt0 ON (((rt0.c0)<(vt0.c0)) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON (((rt0.c0)<(vt0.c0)) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) WHERE (5.57728333E8) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON (((rt0.c0)<(vt0.c0)) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) WHERE ((NOT (5.57728333E8))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON (((rt0.c0)<(vt0.c0)) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) WHERE (((5.57728333E8) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED INNER JOIN rt0 ON (((rt0.c0)<(vt0.c0)) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))));
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ('1477362458' COLLATE RTRIM) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ('1477362458' COLLATE RTRIM))) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((('1477362458' COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING SUM((rt0.c0 IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (SUM((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING ((SUM((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING SUM((rt0.c0 IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (SUM((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING ((SUM((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) ELSE (((vt0.c0))<=((vt0.c0))) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) ELSE (((vt0.c0))<=((vt0.c0))) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) ELSE (((vt0.c0))<=((vt0.c0))) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c2 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c2 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN ((0xffffffffad2a5e94, CAST(vt0.c0 AS TEXT), ((rt0.c1)GLOB(rt0.c1)))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(rt0.c2 AS REAL), ((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN ((0xffffffffad2a5e94, CAST(vt0.c0 AS TEXT), ((rt0.c1)GLOB(rt0.c1)))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(rt0.c2 AS REAL), ((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN ((0Xffffffffad2a5e94, CAST(vt0.c0 AS TEXT), ((rt0.c1)GLOB(rt0.c1)))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(rt0.c2 AS REAL), ((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN (((SUM(TOTAL(vt0.c0))))<((TOTAL(MAX(COUNT(*)))))) THEN MAX(vt0.c0) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN (((SUM(TOTAL(vt0.c0))))<((TOTAL(MAX(COUNT(*)))))) THEN MAX(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN (((SUM(TOTAL(vt0.c0))))<((TOTAL(MAX(COUNT(*)))))) THEN MAX(vt0.c0) END) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE 'TRUE'  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.4743613121745399)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X68c1c206 ELSE vt0.c0 END ELSE vt0.c0 END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE 'TRUE'  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.4743613121745399)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X68c1c206 ELSE vt0.c0 END ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE 'TRUE'  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.4743613121745399)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X68c1c206 ELSE vt0.c0 END ELSE vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING SUM(SUM(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (SUM(SUM(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(SUM(rt0.c1))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.9795946404874495) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.9795946404874495))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((0.9795946404874495) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)*(((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.39335988182432946))))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)*(((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.39335988182432946))))))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)*(((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.39335988182432946))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))<<(((AVG(AVG(vt0.c0)))=(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))<<(((AVG(AVG(vt0.c0)))==(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))<<(((AVG(AVG(vt0.c0)))==(vt0.c0))))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c1)%(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c1)%(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c1)%(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))>=((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))>=((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))>=((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS INTEGER) IN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((CAST(rt0.c2 AS INTEGER) IN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((((NOT (0.8899554876069845)))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c0)OR(rt0.c0)))))OR((- (rt0.c2)))))AND((~ (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((((NOT (0.8899554876069845)))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c0)OR(rt0.c0)))))OR((- (rt0.c2)))))AND((~ (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((((NOT (0.8899554876069845)))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c0)OR(rt0.c0)))))OR((- (rt0.c2)))))AND((~ (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(NULL AS INTEGER)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(NULL AS INTEGER)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(NULL AS INTEGER)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (CASE WHEN (~ (rt0.c0)) THEN CAST(vt0.c0 AS BLOB) END) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE ((NOT (CASE WHEN (~ (rt0.c0)) THEN CAST(vt0.c0 AS BLOB) END))) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (((CASE WHEN (~ (rt0.c0)) THEN CAST(vt0.c0 AS BLOB) END) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE BINARY)|(CASE WHEN vt0.c0 THEN vt0.c0 WHEN SUM(vt0.c0) THEN vt0.c0 WHEN x'' THEN MIN(SUM(COUNT(*))) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0 COLLATE BINARY)|(CASE WHEN vt0.c0 THEN vt0.c0 WHEN SUM(vt0.c0) THEN vt0.c0 WHEN x'' THEN MIN(SUM(COUNT(*))) END)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0 COLLATE BINARY)|(CASE WHEN vt0.c0 THEN vt0.c0 WHEN SUM(vt0.c0) THEN vt0.c0 WHEN x'' THEN MIN(SUM(COUNT(*))) END))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c1)))) BETWEEN (((rt0.c1) IS FALSE)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c1)))) BETWEEN (((rt0.c1) IS FALSE)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c1)))) BETWEEN (((rt0.c1) IS FALSE)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT '-968848148' COLLATE RTRIM, rt0.c1);
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT '-968848148' COLLATE RTRIM, rt0.c1) WHERE (COALESCE(5.0574293E8, (rt0.c1 IN ()))) UNION SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT '-968848148' COLLATE RTRIM, rt0.c1) WHERE ((NOT (COALESCE(5.0574293E8, (rt0.c1 IN ()))))) UNION SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT '-968848148' COLLATE RTRIM, rt0.c1) WHERE (((COALESCE(5.0574293E8, (rt0.c1 IN ()))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT '-968848148' COLLATE RTRIM, rt0.c1);
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 WHERE ((~ (((rt0.c0)||(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((NOT ((~ (((rt0.c0)||(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((((~ (((rt0.c0)||(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((AVG(COUNT(vt0.c0)))AND(NULL)))OR(COUNT(vt0.c0))), CAST(SUM(vt0.c0) AS TEXT), vt0.c0 COLLATE NOCASE))<((((vt0.c0)&(COUNT(MAX(SUM(vt0.c0))))), ((AVG(vt0.c0))-(vt0.c0)), MAX(AVG(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((((AVG(COUNT(vt0.c0)))AND(NULL)))OR(COUNT(vt0.c0))), CAST(SUM(vt0.c0) AS TEXT), vt0.c0 COLLATE NOCASE))<((((vt0.c0)&(COUNT(MAX(SUM(vt0.c0))))), ((AVG(vt0.c0))-(vt0.c0)), MAX(AVG(COUNT(*)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((((AVG(COUNT(vt0.c0)))AND(NULL)))OR(COUNT(vt0.c0))), CAST(SUM(vt0.c0) AS TEXT), vt0.c0 COLLATE NOCASE))<((((vt0.c0)&(COUNT(MAX(SUM(vt0.c0))))), ((AVG(vt0.c0))-(vt0.c0)), MAX(AVG(COUNT(*))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))IS NOT((rt0.c0 IN (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))IS NOT((rt0.c0 IN (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))IS NOT((rt0.c0 IN (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((0.1290745176138821) IS FALSE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((0.1290745176138821) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((0.1290745176138821) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((rt0.c2))<=((((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('aH\X濌t]')))AND(rt0.c1)))))) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2))<=((((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('aH\X濌t]')))AND(rt0.c1)))))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((rt0.c2))<=((((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('aH\X濌t]')))AND(rt0.c1)))))) ISNULL));
SELECT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (json_array_length(((rt0.c1)AND(rt0.c2)))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (json_array_length(((rt0.c1)AND(rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((json_array_length(((rt0.c1)AND(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE ((((CAST(rt0.c2 AS BLOB)))==(((vt0.c0 IN ()))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((CAST(rt0.c2 AS BLOB)))=(((vt0.c0 IN ()))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((((((CAST(rt0.c2 AS BLOB)))==(((vt0.c0 IN ()))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING COUNT(MIN(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(MIN(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((COUNT(MIN(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LTRIM((- (0.9827660155704449)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LTRIM((- (0.9827660155704449)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LTRIM((- (0.9827660155704449)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1))) NOTNULL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c1))) NOTNULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((JULIANDAY(MIN(rt0.c0), GROUP_CONCAT(vt0.c0), AVG(rt0.c2))) BETWEEN (COUNT(*)) AND (AVG(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (((JULIANDAY(MIN(rt0.c0), GROUP_CONCAT(vt0.c0), AVG(rt0.c2))) BETWEEN (COUNT(*)) AND (AVG(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((JULIANDAY(MIN(rt0.c0), GROUP_CONCAT(vt0.c0), AVG(rt0.c2))) BETWEEN (COUNT(*)) AND (AVG(COUNT(rt0.c1))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN (~ (vt0.c0)) THEN MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE BINARY  WHEN (~ (vt0.c0)) THEN MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE BINARY  WHEN (~ (vt0.c0)) THEN MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((LIKELIHOOD(vt0.c0, 0.7865463071427299))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((LIKELIHOOD(vt0.c0, 0.7865463071427299))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((LIKELIHOOD(vt0.c0, 0.7865463071427299))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(CAST(COUNT(TOTAL(vt0.c0)) AS BLOB)) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(CAST(COUNT(TOTAL(vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(CAST(COUNT(TOTAL(vt0.c0)) AS BLOB))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((((((rt0.c1)OR(((rt0.c2) ISNULL))))AND(((rt0.c0)IS NOT(rt0.c2)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND(CASE '-625271628'  WHEN vt0.c0 THEN rt0.c1 END))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((((((rt0.c1)OR(((rt0.c2) ISNULL))))AND(((rt0.c0)IS NOT(rt0.c2)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND(CASE '-625271628'  WHEN vt0.c0 THEN rt0.c1 END))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c1)OR(((rt0.c2) ISNULL))))AND(((rt0.c0)IS NOT(rt0.c2)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND(CASE '-625271628'  WHEN vt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (TIME(((rt0.c2) ISNULL), rt0.c0, rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c2 END, rt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (TIME(((rt0.c2) ISNULL), rt0.c0, rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c2 END, rt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((TIME(((rt0.c2) ISNULL), rt0.c0, rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c2 END, rt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((0xffffffff8ef7e806 COLLATE RTRIM))==((rt0.c1 COLLATE RTRIM)))) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((0Xffffffff8ef7e806 COLLATE RTRIM))==((rt0.c1 COLLATE RTRIM)))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((((0Xffffffff8ef7e806 COLLATE RTRIM))==((rt0.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE WHEN ((MIN(MAX(SUM(rt0.c2))))>>(COUNT(COUNT(rt0.c0)))) THEN COUNT(rt0.c0) WHEN AVG(SUM(rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN LIKELIHOOD(rt0.c0, 0.992218516016171) THEN AVG(MAX(rt0.c0)) COLLATE RTRIM WHEN (COUNT(rt0.c1) IN ()) THEN GROUP_CONCAT(rt0.c1) WHEN AVG(rt0.c2) THEN MAX(COUNT(rt0.c1)) ELSE CHANGES() END UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN ((MIN(MAX(SUM(rt0.c2))))>>(COUNT(COUNT(rt0.c0)))) THEN COUNT(rt0.c0) WHEN AVG(SUM(rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN LIKELIHOOD(rt0.c0, 0.992218516016171) THEN AVG(MAX(rt0.c0)) COLLATE RTRIM WHEN (COUNT(rt0.c1) IN ()) THEN GROUP_CONCAT(rt0.c1) WHEN AVG(rt0.c2) THEN MAX(COUNT(rt0.c1)) ELSE CHANGES() END)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN ((MIN(MAX(SUM(rt0.c2))))>>(COUNT(COUNT(rt0.c0)))) THEN COUNT(rt0.c0) WHEN AVG(SUM(rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN LIKELIHOOD(rt0.c0, 0.992218516016171) THEN AVG(MAX(rt0.c0)) COLLATE RTRIM WHEN (COUNT(rt0.c1) IN ()) THEN GROUP_CONCAT(rt0.c1) WHEN AVG(rt0.c2) THEN MAX(COUNT(rt0.c1)) ELSE CHANGES() END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((~ (vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0) IS TRUE)))<=((((vt0.c0)>(vt0.c0)), ((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((~ (vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0) IS TRUE)))<=((((vt0.c0)>(vt0.c0)), ((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT NULL))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((~ (vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0) IS TRUE)))<=((((vt0.c0)>(vt0.c0)), ((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT NULL))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((- (((rt0.c0)IS NOT('-863145139'))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c0)IS NOT('-863145139'))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (((rt0.c0)IS NOT('-863145139'))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0, vt0;
SELECT rt0.c2 FROM rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE TRIM(rt0.c1) END) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE TRIM(rt0.c1) END))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE TRIM(rt0.c1) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (SUBSTR(vt0.c0, rt0.c2 COLLATE RTRIM)) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((NOT (SUBSTR(vt0.c0, rt0.c2 COLLATE RTRIM)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((SUBSTR(vt0.c0, rt0.c2 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1 IN (rt0.c0, rt0.c2)) IN ())) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 IN (rt0.c0, rt0.c2)) IN ())))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1 IN (rt0.c0, rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((AVG(GROUP_CONCAT(MAX(vt0.c0))))AND(AVG(COUNT(*)))))AND(AVG(MIN(vt0.c0)))))AND(PRINTF(MAX(vt0.c0), vt0.c0, COUNT(vt0.c0)))))OR(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((AVG(GROUP_CONCAT(MAX(vt0.c0))))AND(AVG(COUNT(*)))))AND(AVG(MIN(vt0.c0)))))AND(PRINTF(MAX(vt0.c0), vt0.c0, COUNT(vt0.c0)))))OR(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((AVG(GROUP_CONCAT(MAX(vt0.c0))))AND(AVG(COUNT(*)))))AND(AVG(MIN(vt0.c0)))))AND(PRINTF(MAX(vt0.c0), vt0.c0, COUNT(vt0.c0)))))OR(AVG(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((LOWER(DISTINCT vt0.c0) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((LOWER(DISTINCT vt0.c0) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((LOWER(DISTINCT vt0.c0) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt0 NOT INDEXED;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (NULL) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((COUNT(rt0.c2))||(CAST(TOTAL(rt0.c0) AS INTEGER))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (((COUNT(rt0.c2))||(CAST(TOTAL(rt0.c0) AS INTEGER))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((((COUNT(rt0.c2))||(CAST(TOTAL(rt0.c0) AS INTEGER)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((COUNT(rt0.c2))||(CAST(TOTAL(rt0.c0) AS INTEGER))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (((COUNT(rt0.c2))||(CAST(TOTAL(rt0.c0) AS INTEGER))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((((COUNT(rt0.c2))||(CAST(TOTAL(rt0.c0) AS INTEGER)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((vt0.c0)<>(rt0.c0)) IN ())) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0)<>(rt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((vt0.c0)!=(rt0.c0)) IN ())) ISNULL));
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)GLOB(vt0.c0)), 0.7910378574517083)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((vt0.c0)GLOB(vt0.c0)), 0.7910378574517083)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT ((vt0.c0)GLOB(vt0.c0)), 0.7910378574517083)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN '0.8152925315885616' THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END END) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN '0.8152925315885616' THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END END))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (((CASE WHEN '0.8152925315885616' THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END END) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (SUM(vt0.c0) IN (((((MIN(vt0.c0))OR(vt0.c0)))AND(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((SUM(vt0.c0) IN (((((MIN(vt0.c0))OR(vt0.c0)))AND(COUNT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(vt0.c0) IN (((((MIN(vt0.c0))OR(vt0.c0)))AND(COUNT(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (SUM(vt0.c0) IN (((((MIN(vt0.c0))OR(vt0.c0)))AND(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((SUM(vt0.c0) IN (((((MIN(vt0.c0))OR(vt0.c0)))AND(COUNT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(vt0.c0) IN (((((MIN(vt0.c0))OR(vt0.c0)))AND(COUNT(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE;
SELECT * FROM rt0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE WHERE (CAST(COALESCE(rt0.c2, rt0.c0) AS TEXT)) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE WHERE ((NOT (CAST(COALESCE(rt0.c2, rt0.c0) AS TEXT)))) UNION ALL SELECT * FROM rt0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE WHERE (((CAST(COALESCE(rt0.c2, rt0.c0) AS TEXT)) ISNULL));
SELECT * FROM rt0 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (IFNULL(DISTINCT CAST(rt0.c0 AS REAL), ABS(DISTINCT x''))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (IFNULL(DISTINCT CAST(rt0.c0 AS REAL), ABS(DISTINCT x''))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((IFNULL(DISTINCT CAST(rt0.c0 AS REAL), ABS(DISTINCT x''))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (((vt0.c0) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c0) IS FALSE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)LIKE(MAX(vt0.c0)))))<(((NOT (AVG(MAX(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c0)LIKE(MAX(vt0.c0)))))<(((NOT (AVG(MAX(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((vt0.c0)LIKE(MAX(vt0.c0)))))<(((NOT (AVG(MAX(vt0.c0)))))))) ISNULL);
SELECT rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((rt0.c0)!=((((rt0.c1, '1726267280', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1)))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c0)<>((((rt0.c1, '1726267280', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1)))))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c0)<>((((rt0.c1, '1726267280', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1)))))) ISNULL));
SELECT rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (TRIM(((rt0.c0)GLOB(rt0.c2)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (TRIM(((rt0.c0)GLOB(rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((TRIM(((rt0.c0)GLOB(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ ((((vt0.c0))<(('-1201039170')))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ ((((vt0.c0))<(('-1201039170')))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ ((((vt0.c0))<(('-1201039170')))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(SUM(MAX(MIN(MIN(rt0.c2))))))IS NOT((rt0.c0 IN ()))) UNION ALL SELECT rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING (NOT (((GROUP_CONCAT(SUM(MAX(MIN(MIN(rt0.c2))))))IS NOT((rt0.c0 IN ()))))) UNION ALL SELECT ALL rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING ((((GROUP_CONCAT(SUM(MAX(MIN(MIN(rt0.c2))))))IS NOT((rt0.c0 IN ())))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c2) NOTNULL) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (TRIM(((rt0.c1)<=(NULL)), ((rt0.c0)IS(vt0.c0)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (TRIM(((rt0.c1)<=(NULL)), ((rt0.c0)IS(vt0.c0)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED WHERE (((TRIM(((rt0.c1)<=(NULL)), ((rt0.c0)IS(vt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING JULIANDAY(SUM(TOTAL(COUNT(*))), COUNT(COUNT(*)), CASE vt0.c0  WHEN rt0.c1 THEN AVG(vt0.c0) END, SUM(MAX(rt0.c0)), SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (JULIANDAY(SUM(TOTAL(COUNT(*))), COUNT(COUNT(*)), CASE vt0.c0  WHEN rt0.c1 THEN AVG(vt0.c0) END, SUM(MAX(rt0.c0)), SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((JULIANDAY(SUM(TOTAL(COUNT(*))), COUNT(COUNT(*)), CASE vt0.c0  WHEN rt0.c1 THEN AVG(vt0.c0) END, SUM(MAX(rt0.c0)), SUM(rt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)-(vt0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)-(vt0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)-(vt0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((- ('-1889925150'))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((- ('-1889925150'))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((- ('-1889925150'))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((0.12347421921771673) IS TRUE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((0.12347421921771673) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((0.12347421921771673) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(AVG(vt0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((('-475314889') IS TRUE) AS INTEGER)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST((('-475314889') IS TRUE) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((('-475314889') IS TRUE) AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL) IS FALSE))+(((0x391945b2) NOTNULL)));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL) IS FALSE))+(((0x391945b2) NOTNULL))) WHERE (((((rt0.c0) ISNULL)) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL) IS FALSE))+(((0x391945b2) NOTNULL))) WHERE ((NOT (((((rt0.c0) ISNULL)) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CAST(rt0.c2 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL) IS FALSE))+(((0X391945b2) NOTNULL))) WHERE (((((((rt0.c0) ISNULL)) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL) IS FALSE))+(((0x391945b2) NOTNULL)));
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (IFNULL(DISTINCT CAST(rt0.c2 AS TEXT), vt0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (IFNULL(DISTINCT CAST(rt0.c2 AS TEXT), vt0.c0 COLLATE RTRIM)))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((IFNULL(DISTINCT CAST(rt0.c2 AS TEXT), vt0.c0 COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json_array_length(COUNT(vt0.c0), MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json_array_length(COUNT(vt0.c0), MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json_array_length(COUNT(vt0.c0), MAX(vt0.c0))) ISNULL);
SELECT MAX((('0.7810695150091774')<=(rt0.c0))) FROM rt0, vt0 ORDER BY rt0.c2 DESC;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))<(GLOB(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))<(GLOB(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))<(GLOB(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'')))))OR((- (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'')))))OR((- (rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'')))))OR((- (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM(x'6564') UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(x'6564'))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(x'6564')) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM(x'6564') UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(x'6564'))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(x'6564')) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((((((('0.6917870696626479')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((((((('0.6917870696626479')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((((((('0.6917870696626479')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'99d8')AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((((((((0xffffffffc98d0fb5)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((x'99d8')AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((((((((0xffffffffc98d0fb5)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((x'99d8')AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((((((((0Xffffffffc98d0fb5)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING AVG(MAX(NULL)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (AVG(MAX(NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING ((AVG(MAX(NULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2))>=((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((((rt0.c0)<>(rt0.c1))) IS TRUE);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2))>=((CAST(rt0.c0 AS NUMERIC))))))) ORDER BY ((((rt0.c0)!=(rt0.c1))) IS TRUE);
SELECT * FROM rt0 WHERE ((((((rt0.c2))>=((CAST(rt0.c0 AS NUMERIC))))) ISNULL)) ORDER BY ((((rt0.c0)!=(rt0.c1))) IS TRUE);
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (('') IS TRUE) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (('') IS TRUE) WHERE (((rt0.c2)>(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (('') IS TRUE) WHERE ((NOT (((rt0.c2)>(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (('') IS TRUE) WHERE (((((rt0.c2)>(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (('') IS TRUE) GROUP BY rt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (+ (CASE rt0.c1  WHEN AVG(MAX(COUNT(*))) THEN MAX(rt0.c0) END)) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT ((+ (CASE rt0.c1  WHEN AVG(MAX(COUNT(*))) THEN MAX(rt0.c0) END)))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (((+ (CASE rt0.c1  WHEN AVG(MAX(COUNT(*))) THEN MAX(rt0.c0) END))) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)<>(rt0.c1)) IN (rt0.c0));
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)!=(rt0.c1)) IN (rt0.c0)) WHERE (CASE WHEN QUOTE(rt0.c2) THEN json_valid(rt0.c1) ELSE ((((((((NULL)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(x'')) END) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)!=(rt0.c1)) IN (rt0.c0)) WHERE ((NOT (CASE WHEN QUOTE(rt0.c2) THEN json_valid(rt0.c1) ELSE ((((((((NULL)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(x'')) END))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)<>(rt0.c1)) IN (rt0.c0)) WHERE (((CASE WHEN QUOTE(rt0.c2) THEN json_valid(rt0.c1) ELSE ((((((((NULL)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(x'')) END) ISNULL));
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)<>(rt0.c1)) IN (rt0.c0));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('kDD'))) THEN ((vt0.c0) ISNULL) ELSE ((0Xffffffffdb213d08) NOT BETWEEN (vt0.c0) AND (0.6184529892591473)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('kDD'))) THEN ((vt0.c0) ISNULL) ELSE ((0Xffffffffdb213d08) NOT BETWEEN (vt0.c0) AND (0.6184529892591473)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('kDD'))) THEN ((vt0.c0) ISNULL) ELSE ((0xffffffffdb213d08) NOT BETWEEN (vt0.c0) AND (0.6184529892591473)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON '' GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON '' WHERE (rt0.c2) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON '' WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON '' WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON '' GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((NOT (MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((NOT (MIN(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((NOT (MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((NOT (MIN(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ('-1936140748') UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ('-1936140748'))) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((('-1936140748') ISNULL));
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UPPER(CAST(vt0.c0 AS INTEGER))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (UPPER(CAST(vt0.c0 AS INTEGER))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((UPPER(CAST(vt0.c0 AS INTEGER))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING CASE CAST(rt0.c2 AS NUMERIC)  WHEN (((vt0.c0, TOTAL(rt0.c2), vt0.c0)) BETWEEN ((TOTAL(SUM(COUNT(*))), AVG(rt0.c1), rt0.c0)) AND ((rt0.c0, vt0.c0, GROUP_CONCAT(rt0.c0)))) THEN ((AVG(vt0.c0))&(rt0.c0)) ELSE ((COUNT(AVG(rt0.c0))) BETWEEN (vt0.c0) AND (rt0.c1)) END UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CASE CAST(rt0.c2 AS NUMERIC)  WHEN (((vt0.c0, TOTAL(rt0.c2), vt0.c0)) BETWEEN ((TOTAL(SUM(COUNT(*))), AVG(rt0.c1), rt0.c0)) AND ((rt0.c0, vt0.c0, GROUP_CONCAT(rt0.c0)))) THEN ((AVG(vt0.c0))&(rt0.c0)) ELSE ((COUNT(AVG(rt0.c0))) BETWEEN (vt0.c0) AND (rt0.c1)) END)) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN (((vt0.c0, TOTAL(rt0.c2), vt0.c0)) BETWEEN ((TOTAL(SUM(COUNT(*))), AVG(rt0.c1), rt0.c0)) AND ((rt0.c0, vt0.c0, GROUP_CONCAT(rt0.c0)))) THEN ((AVG(vt0.c0))&(rt0.c0)) ELSE ((COUNT(AVG(rt0.c0))) BETWEEN (vt0.c0) AND (rt0.c1)) END) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2)|((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)|((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2)))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)|((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (0xffffffffbae4755c))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (0Xffffffffbae4755c))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (0Xffffffffbae4755c))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ('1999563973') GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('1999563973'))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((('1999563973') ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON 'k' GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON 'k' GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((rt0.c1) NOT BETWEEN (GROUP_CONCAT(rt0.c2)) AND (TOTAL(MAX(GROUP_CONCAT(COUNT(*))))))) BETWEEN ((rt0.c0 IN ())) AND (CASE AVG(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) END)) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON 'k' GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (((((rt0.c1) NOT BETWEEN (GROUP_CONCAT(rt0.c2)) AND (TOTAL(MAX(GROUP_CONCAT(COUNT(*))))))) BETWEEN ((rt0.c0 IN ())) AND (CASE AVG(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) END)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON 'k' GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((((rt0.c1) NOT BETWEEN (GROUP_CONCAT(rt0.c2)) AND (TOTAL(MAX(GROUP_CONCAT(COUNT(*))))))) BETWEEN ((rt0.c0 IN ())) AND (CASE AVG(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) END))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)LIKE(rt0.c2))) NOT BETWEEN ((('') ISNULL)) AND (('' IN (rt0.c0))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)LIKE(rt0.c2))) NOT BETWEEN ((('') ISNULL)) AND (('' IN (rt0.c0)))) WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)LIKE(rt0.c2))) NOT BETWEEN ((('') ISNULL)) AND (('' IN (rt0.c0)))) WHERE ((NOT (CAST(rt0.c1 COLLATE BINARY AS REAL)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)LIKE(rt0.c2))) NOT BETWEEN ((('') ISNULL)) AND (('' IN (rt0.c0)))) WHERE (((CAST(rt0.c1 COLLATE BINARY AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)LIKE(rt0.c2))) NOT BETWEEN ((('') ISNULL)) AND (('' IN (rt0.c0))));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c0) IN ()) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c0) IN ()) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c0) IN ()) WHERE ((NOT ((CAST(rt0.c1 AS NUMERIC) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c0) IN ()) WHERE ((((CAST(rt0.c1 AS NUMERIC) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c0) IN ()) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0 HAVING rt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0 HAVING rt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((((((((rt0.c0)IS(rt0.c0)))AND(((rt0.c0)*(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)IS(rt0.c0)))AND(((rt0.c0)*(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c0)IS(rt0.c0)))AND(((rt0.c0)*(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE ((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(-9.8988776E8)))AND(NULL))  WHEN ((rt0.c0)<>(rt0.c0)) THEN (((rt0.c0, NULL, rt0.c1, rt0.c1, rt0.c1))<>((rt0.c1, rt0.c1, vt0.c0, -1201039170, vt0.c0))) ELSE LAST_INSERT_ROWID() END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE ((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(-9.8988776E8)))AND(NULL))  WHEN ((rt0.c0)<>(rt0.c0)) THEN (((rt0.c0, NULL, rt0.c1, rt0.c1, rt0.c1))!=((rt0.c1, rt0.c1, vt0.c0, -1201039170, vt0.c0))) ELSE LAST_INSERT_ROWID() END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE ((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(-9.8988776E8)))AND(NULL))  WHEN ((rt0.c0)!=(rt0.c0)) THEN (((rt0.c0, NULL, rt0.c1, rt0.c1, rt0.c1))<>((rt0.c1, rt0.c1, vt0.c0, -1201039170, vt0.c0))) ELSE LAST_INSERT_ROWID() END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL)) BETWEEN (((rt0.c0)|(rt0.c2))) AND ((rt0.c2 IN ())))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) NOTNULL)) BETWEEN (((rt0.c0)|(rt0.c2))) AND ((rt0.c2 IN ())))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c0) NOTNULL)) BETWEEN (((rt0.c0)|(rt0.c2))) AND ((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(vt0.c0)) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(vt0.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(vt0.c0)) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(vt0.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE (x'' IN ())  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE (x'' IN ())  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE (x'' IN ())  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UPPER(DISTINCT (NOT ('-509434832')))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UPPER(DISTINCT (NOT ('-509434832')))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UPPER(DISTINCT (NOT ('-509434832')))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN 0.019530495991461616 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c2 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN 0.019530495991461616 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((CAST(rt0.c1 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN 0.019530495991461616 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)AND(COUNT(*))))AND(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((((vt0.c0)AND(COUNT(*))))AND(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (((((vt0.c0)AND(COUNT(*))))AND(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)AND(COUNT(*))))AND(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((((vt0.c0)AND(COUNT(*))))AND(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (((((vt0.c0)AND(COUNT(*))))AND(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (('189569524' IN (CAST(rt0.c0 AS TEXT), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (('189569524' IN (CAST(rt0.c0 AS TEXT), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((('189569524' IN (CAST(rt0.c0 AS TEXT), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) ISNULL));
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((- (rt0.c0))))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((- (rt0.c0))))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((- (rt0.c0))))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c2)IS(rt0.c0))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((+ (rt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c2)IS(rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((+ (rt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c2)IS(rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((rt0.c2))<=((COUNT(*)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c2))<=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((rt0.c2))<=((COUNT(*))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((rt0.c2))<=((COUNT(*)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c2))<=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((rt0.c2))<=((COUNT(*))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) THEN (- (NULL)) ELSE NULLIF(rt0.c1, rt0.c1) END) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) THEN (- (NULL)) ELSE NULLIF(rt0.c1, rt0.c1) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) THEN (- (NULL)) ELSE NULLIF(rt0.c1, rt0.c1) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE BINARY COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE) COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (+ (((((((((vt0.c0)AND(rt0.c2)))OR(AVG(rt0.c1))))AND(COUNT(COUNT(*)))))AND(AVG(x''))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (NOT ((+ (((((((((vt0.c0)AND(rt0.c2)))OR(AVG(rt0.c1))))AND(COUNT(COUNT(*)))))AND(AVG(x''))))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (((+ (((((((((vt0.c0)AND(rt0.c2)))OR(AVG(rt0.c1))))AND(COUNT(COUNT(*)))))AND(AVG(x'')))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c0 WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c1 IN ()) WHEN ((((rt0.c0)AND('1826780547')))OR(rt0.c0)) THEN (~ (rt0.c2)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END;
SELECT ALL rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c0 WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c1 IN ()) WHEN ((((rt0.c0)AND('1826780547')))OR(rt0.c0)) THEN (~ (rt0.c2)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE (((((rt0.c1)IS(rt0.c2)))<=(COALESCE(NULL, rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c0 WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c1 IN ()) WHEN ((((rt0.c0)AND('1826780547')))OR(rt0.c0)) THEN (~ (rt0.c2)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE ((NOT (((((rt0.c1)IS(rt0.c2)))<=(COALESCE(NULL, rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c0 WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c1 IN ()) WHEN ((((rt0.c0)AND('1826780547')))OR(rt0.c0)) THEN (~ (rt0.c2)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE (((((((rt0.c1)IS(rt0.c2)))<=(COALESCE(NULL, rt0.c1)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c0 WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c1 IN ()) WHEN ((((rt0.c0)AND('1826780547')))OR(rt0.c0)) THEN (~ (rt0.c2)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((NOT (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (CASE ((x'e346') NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (x'')) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END) GROUP BY vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE ((x'e346') NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (x'')) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END))) GROUP BY vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((CASE ((x'e346') NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (x'')) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
