-- Time: 2024/06/11 05:25:37
-- Database: database28
-- Database version: 3.40.0
-- seed value: 320973128
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 3ms;
UPDATE OR REPLACE t0 SET (c0, c0, c0)=(x'4349', '1177315712', x'b0bcf8f2'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('-910351356'); -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('kZ'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c0='-910351356', c0=x''; -- 0ms;
UPDATE t0 SET c0=0.7104480494072839, c0=0.7519581320164485, c0=-9.10351356E8; -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('j-,t'); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=('-910351356'); -- 1ms;
UPDATE t0 SET (c0, c0, c0)=(NULL, 0.9614954505322868, NULL); -- 1ms;
UPDATE t0 SET c0=0.3214509809444005; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('R?{N9xo'), ('W'), ('0.3214509809444005'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (0.899000254837155), (0.20864896634505103); -- 1ms;
INSERT OR REPLACE INTO t0 VALUES ('-910351356'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
CREATE INDEX i64 ON t0(UPPER((+ (c0)))); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL TOTAL(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) FILTER(WHERE LOWER(DISTINCT t0.c0 COLLATE RTRIM)) OVER () FROM t0 GROUP BY LIKE(((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), 'j') HAVING CAST(((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('3Q	(0蓓ޯ')))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE t0 SET (c0, c0)=('295198443', 0.6027866650630236) WHERE ((~ (t0.c0)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0=1143672897, c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(NULL, 0Xffffffffc5baf74f) WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0)OR(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((((t0.c0) NOT NULL)) NOT NULL); -- 0ms;
UPDATE t0 SET c0=NULL WHERE (((t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((NULL)) AND ((t0.c0))))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR FAIL t0 SET c0='}w*UJt廫' WHERE (+ (t0.c0 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0x442b1041); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.42113063863182687); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 1ms;
CREATE INDEX i4 ON t0(CASE WHEN (((c0)) BETWEEN ((c0)) AND ((c0))) THEN NULL ELSE ((((((((c0)AND(c0)))OR(c0)))OR(c0)))OR(c0)) END DESC); -- 0ms;
DELETE FROM t0 WHERE CASE WHEN '524780755' THEN t0.c0 END COLLATE NOCASE; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 AFTER DELETE ON t0 WHEN (((t0.c0 IN ()))IS NOT(((t0.c0) BETWEEN (t0.c0) AND (NULL)))) BEGIN UPDATE OR ROLLBACK t0 SET (c0)=(x'') WHERE (((t0.c0)-(t0.c0)) IN ());END; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
REINDEX  t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.34879300255869405, c0='-612903332' WHERE (('92X4v')AND(((((x'fb3e')OR(t0.c0)))AND(t0.c0)))); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX i4; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0X442b1041); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('295198443'), (NULL), (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX i64; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 1ms;
UPDATE OR IGNORE t0 SET c0=x'ca30'; -- 1ms;
UPDATE OR IGNORE t0 SET c0=0.25368167858261004 WHERE LIKELIHOOD(CAST(t0.c0 AS REAL), 0.16282783143207147); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0Xfffffffff7897a82, 0Xffffffffb9db3224); -- 0ms;
REINDEX i64; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c0, c0)=('0.7104480494072839', NULL, x'33b06698'); -- 0ms;
CREATE TABLE t1 (c0 INT ); -- 0ms;
UPDATE t1 SET (c0)=('?)vF_r୎N!') WHERE ((((+ (t1.c0)), CAST(t1.c0 AS TEXT), (+ (t1.c0))))>((CAST(t1.c0 AS NUMERIC), ((t1.c0)OR(t1.c0)), (t1.c0 IN ())))); -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO t1 VALUES (0.9614954505322868) ON CONFLICT(c0) DO NOTHING; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
UPDATE t1 SET c0=0Xffffffffb9db3224 WHERE ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND(((((((((t1.c0)OR(0.1988263666472354)))AND(t1.c0)))OR(t1.c0)))AND(x'')))); -- 0ms;
END; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
REINDEX; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=('92X4V'); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (NULL); -- 1ms;
PRAGMA temp.reverse_unordered_selects; -- 1ms;
REINDEX  vt0; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 1ms;
DROP VIEW v0; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE t1 SET (c0)=(x'') WHERE (NOT ((((t1.c0))==((t1.c0))))); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((('-977602737')AND(((((t1.c0)OR(t1.c0)))AND(t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 ELSE t1.c0 END))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((('-977602737')AND(((((t1.c0)OR(t1.c0)))AND(t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 ELSE t1.c0 END))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((('-977602737')AND(((((t1.c0)OR(t1.c0)))AND(t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 ELSE t1.c0 END))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((vt0.c0) NOT NULL), ((t0.c0)%(t0.c0)), ((x'fd75') IS TRUE)))>=((x'97b4', ((((x'')AND(t0.c0)))AND(vt0.c0)), t0.c0)))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((((vt0.c0) NOT NULL), ((t0.c0)%(t0.c0)), ((x'fd75') IS TRUE)))>=((x'97b4', ((((x'')AND(t0.c0)))AND(vt0.c0)), t0.c0)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((((vt0.c0) NOT NULL), ((t0.c0)%(t0.c0)), ((x'fd75') IS TRUE)))>=((x'97b4', ((((x'')AND(t0.c0)))AND(vt0.c0)), t0.c0)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING COUNT(MIN(t1.c0)) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(MIN(t1.c0)))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((COUNT(MIN(t1.c0))) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((+ (vt0.c0))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((+ (vt0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) ISNULL))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) ISNULL))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) ISNULL))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS REAL))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN '-977602737' THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS REAL))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN '-977602737' THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN '-977602737' THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(t1.c0))-(((TOTAL(t1.c0))+(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((MIN(t1.c0))-(((TOTAL(t1.c0))+(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((MIN(t1.c0))-(((TOTAL(t1.c0))+(t1.c0))))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(t1.c0))-(((TOTAL(t1.c0))+(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((MIN(t1.c0))-(((TOTAL(t1.c0))+(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((MIN(t1.c0))-(((TOTAL(t1.c0))+(t1.c0))))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1 NOT INDEXED, vt0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) COLLATE NOCASE) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) COLLATE NOCASE))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) COLLATE NOCASE) ISNULL));
SELECT ALL t1.c0, vt0.c0 FROM t1 NOT INDEXED, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(x'36b5da34' AS TEXT)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(x'36b5da34' AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(x'36b5da34' AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, vt0, t0 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, vt0.c0, t1.c0))) WHEN ((t0.c0) NOT BETWEEN (229189510) AND (vt0.c0)) THEN ((((t1.c0)OR(vt0.c0)))AND(t1.c0)) WHEN (((0.5691396940412651)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) THEN ((vt0.c0)<<(vt0.c0)) ELSE 0.991960986716574 END) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, vt0, t0 WHERE ((NOT (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, vt0.c0, t1.c0))) WHEN ((t0.c0) NOT BETWEEN (229189510) AND (vt0.c0)) THEN ((((t1.c0)OR(vt0.c0)))AND(t1.c0)) WHEN (((0.5691396940412651)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) THEN ((vt0.c0)<<(vt0.c0)) ELSE 0.991960986716574 END))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, vt0, t0 WHERE (((CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, vt0.c0, t1.c0))) WHEN ((t0.c0) NOT BETWEEN (229189510) AND (vt0.c0)) THEN ((((t1.c0)OR(vt0.c0)))AND(t1.c0)) WHEN (((0.5691396940412651)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) THEN ((vt0.c0)<<(vt0.c0)) ELSE 0.991960986716574 END) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN((- (MAX(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN((- (MAX(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN((- (MAX(t1.c0))))) ISNULL);
SELECT TOTAL((NOT (JULIANDAY(t0.c0, t0.c0, vt0.c0, t0.c0, t0.c0)))) FROM t0, vt0 ORDER BY '';
SELECT ALL * FROM vt0, t0, t1;
SELECT * FROM vt0, t0, t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 ELSE vt0.c0 END) BETWEEN (CAST(t0.c0 AS REAL)) AND ((NOT (t1.c0))))) UNION ALL SELECT * FROM vt0, t0, t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 ELSE vt0.c0 END) BETWEEN (CAST(t0.c0 AS REAL)) AND ((NOT (t1.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0, t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 ELSE vt0.c0 END) BETWEEN (CAST(t0.c0 AS REAL)) AND ((NOT (t1.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((0.7611128410864736) BETWEEN (t0.c0) AND (TYPEOF(t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((0.7611128410864736) BETWEEN (t0.c0) AND (TYPEOF(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((0.7611128410864736) BETWEEN (t0.c0) AND (TYPEOF(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 WHERE (TYPEOF(((vt0.c0)<>(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t1 WHERE ((NOT (TYPEOF(((vt0.c0)!=(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1 WHERE (((TYPEOF(((vt0.c0)<>(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0 HAVING ((SUM(COUNT(*))) NOT BETWEEN (x'') AND ((((('-1562761676')OR(NULL)))AND(t0.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (((SUM(COUNT(*))) NOT BETWEEN (x'') AND ((((('-1562761676')OR(NULL)))AND(t0.c0)))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0 HAVING ((((SUM(COUNT(*))) NOT BETWEEN (x'') AND ((((('-1562761676')OR(NULL)))AND(t0.c0))))) ISNULL);
SELECT * FROM t1, t0, vt0;
SELECT * FROM t1, t0, vt0 WHERE ((((((('1634732878')AND(t1.c0)))AND(t0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE ((NOT ((((((('1634732878')AND(t1.c0)))AND(t0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE ((((((((('1634732878')AND(t1.c0)))AND(t0.c0))) NOT NULL)) ISNULL));
SELECT * FROM t1, t0, vt0;
SELECT DISTINCT t1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON COALESCE(CASE WHEN vt0.c0 THEN t1.c0 END, NULL COLLATE RTRIM) INNER JOIN t1 ON (+ (('?)vF_r୎N!' IN ())));
SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON CAST(((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON CAST(((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS INTEGER) WHERE (CASE WHEN ((0.8125553077333719)<(vt0.c0)) THEN ((t0.c0) IS FALSE) END) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON CAST(((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS INTEGER) WHERE ((NOT (CASE WHEN ((0.8125553077333719)<(vt0.c0)) THEN ((t0.c0) IS FALSE) END))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON CAST(((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS INTEGER) WHERE (((CASE WHEN ((0.8125553077333719)<(vt0.c0)) THEN ((t0.c0) IS FALSE) END) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON CAST(((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (- (MAX('-244101617'))) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (NOT ((- (MAX('-244101617'))))) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (((- (MAX('-244101617')))) ISNULL);
SELECT t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (- (MAX('-244101617'))) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (NOT ((- (MAX('-244101617'))))) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (((- (MAX('-244101617')))) ISNULL);
SELECT t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1;
SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0)>=(-1509075381)))) AND ((CAST(t1.c0 AS INTEGER))))) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((((t1.c0)>=(-1509075381)))) AND ((CAST(t1.c0 AS INTEGER))))))) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((((t1.c0)>=(-1509075381)))) AND ((CAST(t1.c0 AS INTEGER))))) ISNULL));
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1;
SELECT DISTINCT * FROM t0, t1 INNER JOIN vt0 ON (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY;
SELECT DISTINCT * FROM t0, t1 INNER JOIN vt0 ON (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY WHERE ((~ (NULL))) UNION SELECT DISTINCT * FROM t0, t1 INNER JOIN vt0 ON (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY WHERE ((NOT ((~ (NULL))))) UNION SELECT DISTINCT * FROM t0, t1 INNER JOIN vt0 ON (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY WHERE ((((~ (NULL))) ISNULL));
SELECT DISTINCT * FROM t0, t1 INNER JOIN vt0 ON (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY;
SELECT vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS REAL)) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS INTEGER) AS REAL)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (((CAST(CAST(vt0.c0 AS INTEGER) AS REAL)) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING GROUP_CONCAT(TOTAL(t0.c0)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(t0.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((GROUP_CONCAT(TOTAL(t0.c0))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (((NULLIF(t1.c0, t1.c0)) NOT NULL)) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((NULLIF(t1.c0, t1.c0)) NOT NULL)))) UNION ALL SELECT * FROM t1 WHERE (((((NULLIF(t1.c0, t1.c0)) NOT NULL)) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t1.c0, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t1.c0) NOT BETWEEN (0.5841288138310319) AND (((((t0.c0)OR(t1.c0)))AND(t1.c0)))) CROSS JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))  WHEN '-780314517' THEN CAST(vt0.c0 AS INTEGER) WHEN ((((t0.c0)OR(t1.c0)))OR(x'')) THEN TIME(t1.c0, t1.c0, t1.c0, t1.c0, t0.c0) WHEN NULL THEN UPPER(DISTINCT t1.c0) END GROUP BY t1.c0, vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING MIN(((MIN(MIN(t0.c0)))<>(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((MIN(MIN(t0.c0)))<>(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((MIN(((MIN(MIN(t0.c0)))!=(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0, t1, t0;
SELECT * FROM vt0, t1, t0 WHERE (((CHANGES()) ISNULL)) UNION ALL SELECT * FROM vt0, t1, t0 WHERE ((NOT (((CHANGES()) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE (((((CHANGES()) ISNULL)) ISNULL));
SELECT ALL * FROM vt0, t1, t0;
SELECT DISTINCT t1.c0 FROM vt0, t0, t1;
SELECT DISTINCT t1.c0 FROM vt0, t0 NOT INDEXED, t1 WHERE (CASE WHEN ((t0.c0)|(t0.c0)) THEN t1.c0 END) UNION SELECT DISTINCT t1.c0 FROM vt0, t0, t1 WHERE ((NOT (CASE WHEN ((t0.c0)|(t0.c0)) THEN t1.c0 END))) UNION SELECT DISTINCT t1.c0 FROM vt0, t0, t1 WHERE (((CASE WHEN ((t0.c0)|(t0.c0)) THEN t1.c0 END) ISNULL));
SELECT DISTINCT t1.c0 FROM vt0, t0, t1;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((t0.c0 IN ()))<(CASE WHEN vt0.c0 THEN t0.c0 WHEN x'8de9' THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((t0.c0 IN ()))<(CASE WHEN vt0.c0 THEN t0.c0 WHEN x'8de9' THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((t0.c0 IN ()))<(CASE WHEN vt0.c0 THEN t0.c0 WHEN x'8de9' THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t1, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t1, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0 HAVING ((((t0.c0)&(SUM(vt0.c0)))) IS TRUE) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t1, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0 HAVING (NOT (((((t0.c0)&(SUM(vt0.c0)))) IS TRUE))) UNION ALL SELECT vt0.c0, t0.c0 FROM t1 NOT INDEXED, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0 HAVING ((((((t0.c0)&(SUM(vt0.c0)))) IS TRUE)) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t1, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t1, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0 HAVING ((((t0.c0)&(SUM(vt0.c0)))) IS TRUE) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t1, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0 HAVING (NOT (((((t0.c0)&(SUM(vt0.c0)))) IS TRUE))) UNION ALL SELECT vt0.c0, t0.c0 FROM t1 NOT INDEXED, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0 HAVING ((((((t0.c0)&(SUM(vt0.c0)))) IS TRUE)) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t1, t0 INNER JOIN vt0 ON (((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((x''))) GROUP BY vt0.c0, t0.c0;
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((IFNULL(DISTINCT t0.c0, NULL) IN ((t0.c0 IN (NULL))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((IFNULL(DISTINCT t0.c0, NULL) IN ((t0.c0 IN (NULL))))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((IFNULL(DISTINCT t0.c0, NULL) IN ((t0.c0 IN (NULL))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((- (t1.c0)))OR(0x66ca410b)))OR(((t1.c0)IS(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((((- (t1.c0)))OR(0X66ca410b)))OR(((t1.c0)IS(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((((- (t1.c0)))OR(0x66ca410b)))OR(((t1.c0)IS(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE ('201196436') GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT ('201196436'))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((('201196436') ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN TOTAL(t0.c0) THEN AVG(AVG(t0.c0)) WHEN t0.c0 THEN COUNT(*) END) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN TOTAL(t0.c0) THEN AVG(AVG(t0.c0)) WHEN t0.c0 THEN COUNT(*) END))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN TOTAL(t0.c0) THEN AVG(AVG(t0.c0)) WHEN t0.c0 THEN COUNT(*) END)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN '-141985150' ELSE vt0.c0 END)<<(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN '-141985150' ELSE vt0.c0 END)<<(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN '-141985150' ELSE vt0.c0 END)<<(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN ()))IS(((t0.c0)%(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ()))IS(((t0.c0)%(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))IS(((t0.c0)%(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(vt0.c0)) COLLATE RTRIM GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(vt0.c0)) COLLATE RTRIM WHERE ((t1.c0 IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(vt0.c0)) COLLATE RTRIM WHERE ((NOT ((t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(vt0.c0)) COLLATE RTRIM WHERE ((((t1.c0 IN ())) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(vt0.c0)) COLLATE RTRIM GROUP BY t1.c0;
SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING SUM(((SUM(MIN(AVG(t0.c0))))*(COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (NOT (SUM(((SUM(MIN(AVG(t0.c0))))*(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING ((SUM(((SUM(MIN(AVG(t0.c0))))*(COUNT(*))))) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 WHERE ((json_extract(vt0.c0, vt0.c0) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT ((json_extract(vt0.c0, vt0.c0) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE ((((json_extract(vt0.c0, vt0.c0) IN ())) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE (((NOT (t1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (((NOT (t1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((((NOT (t1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(json_object(t0.c0, x'') AS INTEGER)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(json_object(t0.c0, x'') AS INTEGER)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(json_object(t0.c0, x'') AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 INDEXED BY i64 GROUP BY t0.c0;
SELECT t1.c0 FROM vt0, t0, t1;
SELECT ALL t1.c0 FROM vt0, t0, t1 WHERE ((((vt0.c0 IN ())) IS FALSE)) UNION ALL SELECT t1.c0 FROM vt0, t0, t1 WHERE ((NOT ((((vt0.c0 IN ())) IS FALSE)))) UNION ALL SELECT t1.c0 FROM vt0, t0, t1 WHERE ((((((vt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT t1.c0 FROM vt0, t0, t1;
SELECT DISTINCT t1.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON t1.c0;
SELECT DISTINCT t1.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON t1.c0 WHERE ((t1.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON t1.c0 WHERE ((NOT ((t1.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON t1.c0 WHERE ((((t1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((((((t0.c0)>>(t0.c0)))OR(((t0.c0) NOT NULL))))AND(x'e216')))OR(HEX(DISTINCT 1.724530955E9))))OR(((t0.c0)%(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0)>>(t0.c0)))OR(((t0.c0) NOT NULL))))AND(x'e216')))OR(HEX(DISTINCT 1.724530955E9))))OR(((t0.c0)%(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((t0.c0)>>(t0.c0)))OR(((t0.c0) NOT NULL))))AND(x'e216')))OR(HEX(DISTINCT 1.724530955E9))))OR(((t0.c0)%(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING CASE (NOT (GROUP_CONCAT(vt0.c0)))  WHEN AVG(t0.c0) THEN COUNT(vt0.c0) END UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (CASE (NOT (GROUP_CONCAT(vt0.c0)))  WHEN AVG(t0.c0) THEN COUNT(vt0.c0) END)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((CASE (NOT (GROUP_CONCAT(vt0.c0)))  WHEN AVG(t0.c0) THEN COUNT(vt0.c0) END) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING CASE (NOT (GROUP_CONCAT(vt0.c0)))  WHEN AVG(t0.c0) THEN COUNT(vt0.c0) END UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (CASE (NOT (GROUP_CONCAT(vt0.c0)))  WHEN AVG(t0.c0) THEN COUNT(vt0.c0) END)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((CASE (NOT (GROUP_CONCAT(vt0.c0)))  WHEN AVG(t0.c0) THEN COUNT(vt0.c0) END) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM t0, vt0 WHERE (0Xfffffffff7897a82) UNION ALL SELECT vt0.c0 FROM t0, vt0 WHERE ((NOT (0xfffffffff7897a82))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((0xfffffffff7897a82) ISNULL));
SELECT vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (((vt0.c0, 2.95198443E8, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), 0.01207371372117838)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (((vt0.c0, 2.95198443E8, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), 0.01207371372117838)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT (((vt0.c0, 2.95198443E8, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), 0.01207371372117838)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, t0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, t1 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))OR(vt0.c0)))OR(t0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0, t1 WHERE ((NOT ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))OR(vt0.c0)))OR(t0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0, t1 WHERE ((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))OR(vt0.c0)))OR(t0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, t1 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0, t1.c0 FROM vt0 LEFT OUTER JOIN t1 ON (~ (((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))) INNER JOIN t0 ON (+ (CASE WHEN t1.c0 THEN t0.c0 END)) GROUP BY vt0.c0, t0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (CASE WHEN ((x'')||(t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE (t1.c0 IN ()) END) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CASE WHEN ((x'')||(t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE (t1.c0 IN ()) END))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((CASE WHEN ((x'')||(t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE (t1.c0 IN ()) END) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0)OR(t1.c0)))AND(t1.c0)) IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0)OR(t1.c0)))AND(t1.c0)) IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INNER JOIN t1 ON (NOT ((t0.c0 IN (x''))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INNER JOIN t1 ON (NOT ((t0.c0 IN (x'')))) WHERE ((((((t0.c0, vt0.c0, t0.c0))>((vt0.c0, vt0.c0, t1.c0)))) NOT BETWEEN (json_type(t1.c0)) AND ((((vt0.c0, t0.c0, t1.c0))!=((t0.c0, vt0.c0, t0.c0)))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INNER JOIN t1 ON (NOT ((t0.c0 IN (x'')))) WHERE ((NOT ((((((t0.c0, vt0.c0, t0.c0))>((vt0.c0, vt0.c0, t1.c0)))) NOT BETWEEN (json_type(t1.c0)) AND ((((vt0.c0, t0.c0, t1.c0))!=((t0.c0, vt0.c0, t0.c0)))))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INNER JOIN t1 ON (NOT ((t0.c0 IN (x'')))) WHERE ((((((((t0.c0, vt0.c0, t0.c0))>((vt0.c0, vt0.c0, t1.c0)))) NOT BETWEEN (json_type(t1.c0)) AND ((((vt0.c0, t0.c0, t1.c0))<>((t0.c0, vt0.c0, t0.c0)))))) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INNER JOIN t1 ON (NOT ((t0.c0 IN (x''))));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))||(((t0.c0)+(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))||(((t0.c0)+(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))||(((t0.c0)+(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, vt0 NOT INDEXED, t1 GROUP BY t1.c0, t0.c0 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END COLLATE RTRIM;
SELECT * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END COLLATE RTRIM WHERE (t0.c0 COLLATE BINARY) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END COLLATE RTRIM WHERE ((NOT (t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END COLLATE RTRIM WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END COLLATE RTRIM;
SELECT DISTINCT vt0.c0 FROM vt0 INDEXED BY i4;
SELECT ALL t0.c0, vt0.c0, t1.c0 FROM vt0, t0 FULL OUTER JOIN t1 ON (((0.4367833661431467, t1.c0, t1.c0, vt0.c0, 'ODSGA\vS{')) NOT BETWEEN (((((t1.c0, t1.c0, vt0.c0)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY, CASE t1.c0  WHEN '-1509075381' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END, (t0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((((((t1.c0)AND(t0.c0)))AND(t0.c0)), t1.c0, (- (t1.c0)), (((x'7e29'))<>((vt0.c0))), LIKELIHOOD(t0.c0, 0.6460540205599752)))) GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT ALL t0.c0, vt0.c0, t1.c0 FROM vt0, t0 FULL OUTER JOIN t1 ON (((0.4367833661431467, t1.c0, t1.c0, vt0.c0, 'ODSGA\vS{')) NOT BETWEEN (((((t1.c0, t1.c0, vt0.c0)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY, CASE t1.c0  WHEN '-1509075381' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END, (t0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((((((t1.c0)AND(t0.c0)))AND(t0.c0)), t1.c0, (- (t1.c0)), (((x'7e29'))!=((vt0.c0))), LIKELIHOOD(t0.c0, 0.6460540205599752)))) WHERE (')廫') GROUP BY t0.c0, vt0.c0, t1.c0 UNION SELECT ALL t0.c0, vt0.c0, t1.c0 FROM vt0, t0 FULL OUTER JOIN t1 ON (((0.4367833661431467, t1.c0, t1.c0, vt0.c0, 'ODSGA\vS{')) NOT BETWEEN (((((t1.c0, t1.c0, vt0.c0)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY, CASE t1.c0  WHEN '-1509075381' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END, (t0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((((((t1.c0)AND(t0.c0)))AND(t0.c0)), t1.c0, (- (t1.c0)), (((x'7e29'))!=((vt0.c0))), LIKELIHOOD(t0.c0, 0.6460540205599752)))) WHERE ((NOT (')廫'))) GROUP BY t0.c0, vt0.c0, t1.c0 UNION SELECT t0.c0, vt0.c0, t1.c0 FROM vt0, t0 FULL OUTER JOIN t1 ON (((0.4367833661431467, t1.c0, t1.c0, vt0.c0, 'ODSGA\vS{')) NOT BETWEEN (((((t1.c0, t1.c0, vt0.c0)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY, CASE t1.c0  WHEN '-1509075381' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END, (t0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((((((t1.c0)AND(t0.c0)))AND(t0.c0)), t1.c0, (- (t1.c0)), (((x'7e29'))<>((vt0.c0))), LIKELIHOOD(t0.c0, 0.6460540205599752)))) WHERE (((')廫') ISNULL)) GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT ALL t0.c0, vt0.c0, t1.c0 FROM vt0, t0 FULL OUTER JOIN t1 ON (((0.4367833661431467, t1.c0, t1.c0, vt0.c0, 'ODSGA\vS{')) NOT BETWEEN (((((t1.c0, t1.c0, vt0.c0)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY, CASE t1.c0  WHEN '-1509075381' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END, (t0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((((((t1.c0)AND(t0.c0)))AND(t0.c0)), t1.c0, (- (t1.c0)), (((x'7e29'))<>((vt0.c0))), LIKELIHOOD(t0.c0, 0.6460540205599752)))) GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING MAX(CASE WHEN MIN(t0.c0) THEN MAX(MAX(SUM(SUM(SUM(MIN(MIN(vt0.c0))))))) WHEN t0.c0 THEN AVG(t0.c0) WHEN COUNT(vt0.c0) THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (MAX(CASE WHEN MIN(t0.c0) THEN MAX(MAX(SUM(SUM(SUM(MIN(MIN(vt0.c0))))))) WHEN t0.c0 THEN AVG(t0.c0) WHEN COUNT(vt0.c0) THEN vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((MAX(CASE WHEN MIN(t0.c0) THEN MAX(MAX(SUM(SUM(SUM(MIN(MIN(vt0.c0))))))) WHEN t0.c0 THEN AVG(t0.c0) WHEN COUNT(vt0.c0) THEN vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0;
SELECT vt0.c0, t1.c0 FROM t1, vt0 WHERE (((((((((t1.c0)AND(((t1.c0) NOT BETWEEN (vt0.c0) AND ('-849270450')))))AND(CAST(vt0.c0 AS REAL))))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, t1.c0 FROM t1, vt0 WHERE ((NOT (((((((((t1.c0)AND(((t1.c0) NOT BETWEEN (vt0.c0) AND ('-849270450')))))AND(CAST(vt0.c0 AS REAL))))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT vt0.c0, t1.c0 FROM t1, vt0 WHERE (((((((((((t1.c0)AND(((t1.c0) NOT BETWEEN (vt0.c0) AND ('-849270450')))))AND(CAST(vt0.c0 AS REAL))))AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((t0.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) ISNULL) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) ISNULL) WHERE (((((t0.c0))>=((t0.c0))) IN ())) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) ISNULL) WHERE ((NOT (((((t0.c0))>=((t0.c0))) IN ())))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) ISNULL) WHERE (((((((t0.c0))>=((t0.c0))) IN ())) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) ISNULL) GROUP BY t1.c0, t0.c0;
SELECT vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0 HAVING (((MAX(t1.c0) IN ())) IS FALSE) UNION ALL SELECT ALL vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0 HAVING (NOT ((((MAX(t1.c0) IN ())) IS FALSE))) UNION ALL SELECT ALL vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0 HAVING (((((MAX(t1.c0) IN ())) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0 HAVING (((MAX(t1.c0) IN ())) IS FALSE) UNION ALL SELECT ALL vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0 HAVING (NOT ((((MAX(t1.c0) IN ())) IS FALSE))) UNION ALL SELECT ALL vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0 HAVING (((((MAX(t1.c0) IN ())) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM t0, t1 RIGHT OUTER JOIN vt0 ON json_valid(((((((((t0.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0))) GROUP BY vt0.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((((t0.c0 COLLATE BINARY, (t1.c0 IN ()), ((t1.c0)LIKE(t1.c0)), CAST(x'' AS BLOB), '''{'))<=((((((((((t1.c0)OR('0.25368167858261004')))AND(t0.c0)))AND(NULL)))OR(t1.c0)), t1.c0 COLLATE BINARY, t0.c0 COLLATE NOCASE, LIKELY(x''), ((t0.c0)>>(t0.c0)))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ((((t0.c0 COLLATE BINARY, (t1.c0 IN ()), ((t1.c0)LIKE(t1.c0)), CAST(x'' AS BLOB), '''{'))<=((((((((((t1.c0)OR('0.25368167858261004')))AND(t0.c0)))AND(NULL)))OR(t1.c0)), t1.c0 COLLATE BINARY, t0.c0 COLLATE NOCASE, LIKELY(x''), ((t0.c0)>>(t0.c0)))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((((((t0.c0 COLLATE BINARY, (t1.c0 IN ()), ((t1.c0)LIKE(t1.c0)), CAST(x'' AS BLOB), '''{'))<=((((((((((t1.c0)OR('0.25368167858261004')))AND(t0.c0)))AND(NULL)))OR(t1.c0)), t1.c0 COLLATE BINARY, t0.c0 COLLATE NOCASE, LIKELY(x''), ((t0.c0)>>(t0.c0)))))) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((~ (((NULL)<(t0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((~ (((NULL)<(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((~ (((NULL)<(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 IN ()) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, t1 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((AVG(TOTAL(COUNT(*))))>(t0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, t0, t1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(TOTAL(COUNT(*))))>(t0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, t1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((AVG(TOTAL(COUNT(*))))>(t0.c0)))) ISNULL);
SELECT t1.c0 FROM t1 NATURAL JOIN t0;
SELECT ALL t1.c0 FROM t1 NOT INDEXED NATURAL JOIN t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0)))) BETWEEN (t0.c0) AND ((+ ('1143672897'))))) UNION ALL SELECT t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0)))) BETWEEN (t0.c0) AND ((+ ('1143672897'))))))) UNION ALL SELECT t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0)))) BETWEEN (t0.c0) AND ((+ ('1143672897'))))) ISNULL));
SELECT t1.c0 FROM t1 NATURAL JOIN t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((295198443)&('513238110'))) NOT BETWEEN (((t1.c0)<(t1.c0))) AND ((NOT (t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((295198443)&('513238110'))) NOT BETWEEN (((t1.c0)<(t1.c0))) AND ((NOT (t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((295198443)&('513238110'))) NOT BETWEEN (((t1.c0)<(t1.c0))) AND ((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 WHERE ((((t1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((t1.c0)<<(t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, vt0 WHERE ((NOT ((((t1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((t1.c0)<<(t1.c0)))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, vt0 WHERE ((((((t1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((t1.c0)<<(t1.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, t0 CROSS JOIN vt0 ON TYPEOF(DISTINCT ((t1.c0)==(x''))) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, t0 CROSS JOIN vt0 ON TYPEOF(DISTINCT ((t1.c0)=(x''))) GROUP BY t1.c0, vt0.c0 HAVING ((TOTAL(vt0.c0))==(((((GROUP_CONCAT(SUM(COUNT(t1.c0))))OR(AVG(t1.c0))))OR(COUNT(COUNT(*)))))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, t0 CROSS JOIN vt0 ON TYPEOF(DISTINCT ((t1.c0)=(x''))) GROUP BY t1.c0, vt0.c0 HAVING (NOT (((TOTAL(vt0.c0))==(((((GROUP_CONCAT(SUM(COUNT(t1.c0))))OR(AVG(t1.c0))))OR(COUNT(COUNT(*)))))))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, t0 CROSS JOIN vt0 ON TYPEOF(DISTINCT ((t1.c0)=(x''))) GROUP BY t1.c0, vt0.c0 HAVING ((((TOTAL(vt0.c0))=(((((GROUP_CONCAT(SUM(COUNT(t1.c0))))OR(AVG(t1.c0))))OR(COUNT(COUNT(*))))))) ISNULL);
SELECT ALL TOTAL(((((0.3858035349137542)<=(vt0.c0))) NOT BETWEEN (1177315712) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE '1214139074' END))) FROM vt0, t0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t1, t0, vt0;
SELECT DISTINCT * FROM t1, t0, vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (t0.c0)))) AND ((CAST(t0.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM t1, t0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((~ (t0.c0)))) AND ((CAST(t0.c0 AS TEXT))))))) UNION SELECT DISTINCT * FROM t1, t0, vt0 WHERE ((((((vt0.c0)) BETWEEN (((~ (t0.c0)))) AND ((CAST(t0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM t1, t0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)%(t0.c0))) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)%(t0.c0))) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)%(t0.c0))) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN t1 ON (((((((((vt0.c0 IN (vt0.c0, t1.c0)))AND(t0.c0)))AND(((t0.c0)>=(vt0.c0)))))OR(((vt0.c0) NOT NULL))))AND(t0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON ((vt0.c0 IN ()) IN ()) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN t1 ON (((((((((vt0.c0 IN (vt0.c0, t1.c0)))AND(t0.c0)))AND(((t0.c0)>=(vt0.c0)))))OR(((vt0.c0) NOT NULL))))AND(t0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON ((vt0.c0 IN ()) IN ()) GROUP BY t0.c0 HAVING CAST(COUNT(COUNT(vt0.c0)) AS BLOB) UNION ALL SELECT t0.c0 FROM t0 INNER JOIN t1 ON (((((((((vt0.c0 IN (vt0.c0, t1.c0)))AND(t0.c0)))AND(((t0.c0)>=(vt0.c0)))))OR(((vt0.c0) NOT NULL))))AND(t0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON ((vt0.c0 IN ()) IN ()) GROUP BY t0.c0 HAVING (NOT (CAST(COUNT(COUNT(vt0.c0)) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN t1 ON (((((((((vt0.c0 IN (vt0.c0, t1.c0)))AND(t0.c0)))AND(((t0.c0)>=(vt0.c0)))))OR(((vt0.c0) NOT NULL))))AND(t0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON ((vt0.c0 IN ()) IN ()) GROUP BY t0.c0 HAVING ((CAST(COUNT(COUNT(vt0.c0)) AS BLOB)) ISNULL);
SELECT ALL * FROM t0 INDEXED BY i4;
SELECT * FROM t0 INDEXED BY i4 WHERE (((0.8961016141537861) IS TRUE)) UNION ALL SELECT ALL * FROM t0 INDEXED BY i4 WHERE ((NOT (((0.8961016141537861) IS TRUE)))) UNION ALL SELECT ALL * FROM t0 INDEXED BY i4 WHERE (((((0.8961016141537861) IS TRUE)) ISNULL));
SELECT ALL * FROM t0 INDEXED BY i4;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END THEN TRIM(t0.c0) ELSE ((t0.c0)*(349729746)) END) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END THEN TRIM(t0.c0) ELSE ((t0.c0)*(349729746)) END))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE WHEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END THEN TRIM(t0.c0) ELSE ((t0.c0)*(349729746)) END) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0)+('-1749382593')) THEN CAST(t0.c0 AS BLOB) END GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0)+('-1749382593')) THEN CAST(t0.c0 AS BLOB) END WHERE (CASE WHEN LOWER(DISTINCT t0.c0) THEN vt0.c0 COLLATE RTRIM ELSE ((('', t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0, vt0.c0, t0.c0))) END) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0)+('-1749382593')) THEN CAST(t0.c0 AS BLOB) END WHERE ((NOT (CASE WHEN LOWER(DISTINCT t0.c0) THEN vt0.c0 COLLATE RTRIM ELSE ((('', t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0, vt0.c0, t0.c0))) END))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0)+('-1749382593')) THEN CAST(t0.c0 AS BLOB) END WHERE (((CASE WHEN LOWER(DISTINCT t0.c0) THEN vt0.c0 COLLATE RTRIM ELSE ((('', t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0, vt0.c0, t0.c0))) END) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0)+('-1749382593')) THEN CAST(t0.c0 AS BLOB) END GROUP BY t0.c0, vt0.c0;
SELECT t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0 HAVING (MIN(COUNT(MIN(MIN(SUM(GROUP_CONCAT(t0.c0)))))) IN ()) UNION ALL SELECT ALL t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0 HAVING (NOT ((MIN(COUNT(MIN(MIN(SUM(GROUP_CONCAT(t0.c0)))))) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0 HAVING (((MIN(COUNT(MIN(MIN(SUM(GROUP_CONCAT(t0.c0)))))) IN ())) ISNULL);
SELECT t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0 HAVING (MIN(COUNT(MIN(MIN(SUM(GROUP_CONCAT(t0.c0)))))) IN ()) UNION ALL SELECT ALL t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0 HAVING (NOT ((MIN(COUNT(MIN(MIN(SUM(GROUP_CONCAT(t0.c0)))))) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0 HAVING (((MIN(COUNT(MIN(MIN(SUM(GROUP_CONCAT(t0.c0)))))) IN ())) ISNULL);
SELECT t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0;
SELECT vt0.c0, t1.c0, t0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN 'Pu' THEN t0.c0 WHEN t1.c0 THEN NULL END)&(0xffffffff9a2b809a));
SELECT vt0.c0, t1.c0, t0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN 'Pu' THEN t0.c0 WHEN t1.c0 THEN NULL END)&(0Xffffffff9a2b809a)) WHERE (t0.c0) UNION ALL SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN 'Pu' THEN t0.c0 WHEN t1.c0 THEN NULL END)&(0Xffffffff9a2b809a)) WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN 'Pu' THEN t0.c0 WHEN t1.c0 THEN NULL END)&(0Xffffffff9a2b809a)) WHERE (((t0.c0) ISNULL));
SELECT vt0.c0, t1.c0, t0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN 'Pu' THEN t0.c0 WHEN t1.c0 THEN NULL END)&(0xffffffff9a2b809a));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((t0.c0 IN ()))&(NULL))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((t0.c0 IN ()))&(NULL))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((t0.c0 IN ()))&(NULL))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 NOT INDEXED GROUP BY t1.c0 HAVING CASE WHEN ((t0.c0)<<(COUNT(SUM(t0.c0)))) THEN COUNT(t1.c0) ELSE COUNT(*) END UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (CASE WHEN ((t0.c0)<<(COUNT(SUM(t0.c0)))) THEN COUNT(t1.c0) ELSE COUNT(*) END)) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((CASE WHEN ((t0.c0)<<(COUNT(SUM(t0.c0)))) THEN COUNT(t1.c0) ELSE COUNT(*) END) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CAST(t1.c0 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CAST(t1.c0 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (-1358508357) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (-1358508357))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((-1358508357) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING TOTAL_CHANGES() UNION ALL SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING (NOT (TOTAL_CHANGES())) UNION ALL SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING ((TOTAL_CHANGES()) ISNULL);
SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING TOTAL_CHANGES() UNION ALL SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING (NOT (TOTAL_CHANGES())) UNION ALL SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING ((TOTAL_CHANGES()) ISNULL);
SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT * FROM vt0, t1;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0 IN ()), CASE WHEN x'ce8b' THEN t1.c0 WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))>=((((vt0.c0) IS FALSE), ((vt0.c0)>=(t1.c0)), UNICODE('-1367225702'))))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((NOT (((((vt0.c0 IN ()), CASE WHEN x'ce8b' THEN t1.c0 WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))>=((((vt0.c0) IS FALSE), ((vt0.c0)>=(t1.c0)), UNICODE('-1367225702'))))))) UNION ALL SELECT * FROM vt0, t1 WHERE (((((((vt0.c0 IN ()), CASE WHEN x'ce8b' THEN t1.c0 WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))>=((((vt0.c0) IS FALSE), ((vt0.c0)>=(t1.c0)), UNICODE('-1367225702'))))) ISNULL));
SELECT * FROM vt0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)&((~ ('PTx9%KIx'))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)&((~ ('PTx9%KIx'))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)&((~ ('PTx9%KIx'))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(*) IN ((NOT (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(*) IN ((NOT (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) IN ((NOT (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(*) IN ((NOT (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(*) IN ((NOT (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) IN ((NOT (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t1.c0, vt0.c0 FROM vt0, t1;
SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE (CAST(t1.c0 AS INTEGER)) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT (CAST(t1.c0 AS INTEGER)))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 WHERE (((CAST(t1.c0 AS INTEGER)) ISNULL));
SELECT t1.c0, vt0.c0 FROM vt0, t1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)&(((vt0.c0)GLOB(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)&(((vt0.c0)GLOB(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)&(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS TEXT)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS TEXT)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0 HAVING ((LAST_INSERT_ROWID()) NOT BETWEEN (MIN(vt0.c0)) AND (SUM(t1.c0))) UNION ALL SELECT vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0 HAVING (NOT (((LAST_INSERT_ROWID()) NOT BETWEEN (MIN(vt0.c0)) AND (SUM(t1.c0))))) UNION ALL SELECT ALL vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0 HAVING ((((LAST_INSERT_ROWID()) NOT BETWEEN (MIN(vt0.c0)) AND (SUM(t1.c0)))) ISNULL);
SELECT ALL vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0 HAVING ((LAST_INSERT_ROWID()) NOT BETWEEN (MIN(vt0.c0)) AND (SUM(t1.c0))) UNION ALL SELECT vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0 HAVING (NOT (((LAST_INSERT_ROWID()) NOT BETWEEN (MIN(vt0.c0)) AND (SUM(t1.c0))))) UNION ALL SELECT ALL vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0 HAVING ((((LAST_INSERT_ROWID()) NOT BETWEEN (MIN(vt0.c0)) AND (SUM(t1.c0)))) ISNULL);
SELECT ALL vt0.c0, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT ALL * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (((t0.c0)-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (((t0.c0)-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))))) UNION ALL SELECT * FROM t1, t0 WHERE (((((t0.c0)-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT vt0.c0, t1.c0 FROM t1 NOT INDEXED, vt0;
SELECT DISTINCT vt0.c0, t1.c0 FROM t1, vt0 WHERE ((((t1.c0, t1.c0, t1.c0))<((1.123490882E9, t1.c0, t1.c0))) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM t1, vt0 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0))<((1.123490882E9, t1.c0, t1.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM t1, vt0 WHERE ((((((t1.c0, t1.c0, t1.c0))<((1.123490882E9, t1.c0, t1.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0 FROM t1 NOT INDEXED, vt0;
SELECT t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, vt0 WHERE (((LTRIM(t0.c0)) NOT BETWEEN (0xffffffffaf06cebb) AND (vt0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0, vt0 WHERE ((NOT (((LTRIM(t0.c0)) NOT BETWEEN (0Xffffffffaf06cebb) AND (vt0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0, vt0 WHERE (((((LTRIM(t0.c0)) NOT BETWEEN (0xffffffffaf06cebb) AND (vt0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((((((((AVG(vt0.c0))OR(MIN(SUM(vt0.c0)))))AND(vt0.c0)))AND(t0.c0)))OR(COUNT(*))))OR(t0.c0)))AND(vt0.c0))) ISNULL) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((((((((((((AVG(vt0.c0))OR(MIN(SUM(vt0.c0)))))AND(vt0.c0)))AND(t0.c0)))OR(COUNT(*))))OR(t0.c0)))AND(vt0.c0))) ISNULL))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((((((((((AVG(vt0.c0))OR(MIN(SUM(vt0.c0)))))AND(vt0.c0)))AND(t0.c0)))OR(COUNT(*))))OR(t0.c0)))AND(vt0.c0))) ISNULL)) ISNULL);
SELECT * FROM vt0, t0 FULL OUTER JOIN t1 ON (NOT (((NULL) BETWEEN (NULL) AND (t1.c0))));
SELECT * FROM vt0, t0 FULL OUTER JOIN t1 ON (NOT (((NULL) BETWEEN (NULL) AND (t1.c0)))) WHERE (TRIM((((t1.c0))>((t0.c0))))) UNION ALL SELECT * FROM vt0, t0 FULL OUTER JOIN t1 ON (NOT (((NULL) BETWEEN (NULL) AND (t1.c0)))) WHERE ((NOT (TRIM((((t1.c0))>((t0.c0))))))) UNION ALL SELECT * FROM vt0, t0 FULL OUTER JOIN t1 ON (NOT (((NULL) BETWEEN (NULL) AND (t1.c0)))) WHERE (((TRIM((((t1.c0))>((t0.c0))))) ISNULL));
SELECT * FROM vt0, t0 FULL OUTER JOIN t1 ON (NOT (((NULL) BETWEEN (NULL) AND (t1.c0))));
SELECT DISTINCT vt0.c0, t0.c0 FROM t1, vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t1, vt0, t0 WHERE ((((t1.c0 IN (t0.c0))) NOTNULL)) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t1, vt0, t0 WHERE ((NOT ((((t1.c0 IN (t0.c0))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t1, vt0, t0 WHERE ((((((t1.c0 IN (t0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t1, vt0, t0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 WHERE (((((CAST(x'' AS REAL))OR(((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))))AND((- (t1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t1, vt0 WHERE ((NOT (((((CAST(x'' AS REAL))OR(((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))))AND((- (t1.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t1, vt0 WHERE (((((((CAST(x'' AS REAL))OR(((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))))AND((- (t1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING COUNT(((t0.c0)IS(1.143672897E9))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(((t0.c0)IS(1.143672897E9))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(((t0.c0)IS(1.143672897E9)))) ISNULL);
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING COUNT(((t0.c0)IS(1.143672897E9))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(((t0.c0)IS(1.143672897E9))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(((t0.c0)IS(1.143672897E9)))) ISNULL);
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, vt0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, vt0, t1 WHERE (t1.c0) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, vt0, t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0, vt0, t1;
SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS NUMERIC) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS NUMERIC) WHERE (((((t0.c0 IN (t1.c0)), t0.c0, ((t1.c0)/(NULL))))<=((CASE WHEN t0.c0 THEN 0.6470155738796938 ELSE t0.c0 END, ((t1.c0)LIKE(t0.c0)), (x'c65b' IN ()))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS NUMERIC) WHERE ((NOT (((((t0.c0 IN (t1.c0)), t0.c0, ((t1.c0)/(NULL))))<=((CASE WHEN t0.c0 THEN 0.6470155738796938 ELSE t0.c0 END, ((t1.c0)LIKE(t0.c0)), (x'c65b' IN ()))))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS NUMERIC) WHERE (((((((t0.c0 IN (t1.c0)), t0.c0, ((t1.c0)/(NULL))))<=((CASE WHEN t0.c0 THEN 0.6470155738796938 ELSE t0.c0 END, ((t1.c0)LIKE(t0.c0)), (x'c65b' IN ()))))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS NUMERIC) GROUP BY t1.c0, t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(COUNT('4<')))GLOB(TOTAL(AVG(COUNT(*))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((GROUP_CONCAT(COUNT('4<')))GLOB(TOTAL(AVG(COUNT(*))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((GROUP_CONCAT(COUNT('4<')))GLOB(TOTAL(AVG(COUNT(*)))))) ISNULL);
SELECT * FROM t1, t0, vt0;
SELECT * FROM t1, t0, vt0 WHERE (((((t0.c0) BETWEEN (NULL) AND (t0.c0))) ISNULL)) UNION ALL SELECT * FROM t1, t0, vt0 WHERE ((NOT (((((t0.c0) BETWEEN (NULL) AND (t0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE (((((((t0.c0) BETWEEN (NULL) AND (t0.c0))) ISNULL)) ISNULL));
SELECT * FROM t1, t0, vt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CAST((t1.c0 IN ()) AS BLOB)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CAST((t1.c0 IN ()) AS BLOB)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST((t1.c0 IN ()) AS BLOB)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE ((+ (((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT ((+ (((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((((+ (((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0 FROM t1, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, vt0, t0 GROUP BY t0.c0 HAVING MIN(CAST(SUM(-1.708425062E9) AS TEXT)) UNION ALL SELECT ALL t0.c0 FROM t1, vt0, t0 GROUP BY t0.c0 HAVING (NOT (MIN(CAST(SUM(-1.708425062E9) AS TEXT)))) UNION ALL SELECT t0.c0 FROM t1, vt0, t0 GROUP BY t0.c0 HAVING ((MIN(CAST(SUM(-1.708425062E9) AS TEXT))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)>(((t1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c0)>(((t1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)>(((t1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt0.c0, t0.c0 FROM vt0, t0 NATURAL JOIN t1 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 NATURAL JOIN t1 WHERE (((((((((0.02299864827437803)OR(((t1.c0)LIKE(t0.c0)))))AND((~ (vt0.c0)))))OR(CAST(t0.c0 AS BLOB))))OR(((((t0.c0)AND(t0.c0)))AND(t1.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 NATURAL JOIN t1 WHERE ((NOT (((((((((0.02299864827437803)OR(((t1.c0)LIKE(t0.c0)))))AND((~ (vt0.c0)))))OR(CAST(t0.c0 AS BLOB))))OR(((((t0.c0)AND(t0.c0)))AND(t1.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 NATURAL JOIN t1 WHERE (((((((((((0.02299864827437803)OR(((t1.c0)LIKE(t0.c0)))))AND((~ (vt0.c0)))))OR(CAST(t0.c0 AS BLOB))))OR(((((t0.c0)AND(t0.c0)))AND(t1.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 NATURAL JOIN t1 GROUP BY vt0.c0, t0.c0;
SELECT t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING COUNT(((t0.c0)OR(COUNT(vt0.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING (NOT (COUNT(((t0.c0)OR(COUNT(vt0.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING ((COUNT(((t0.c0)OR(COUNT(vt0.c0))))) ISNULL);
SELECT * FROM t1, t0, vt0;
SELECT ALL * FROM t1, t0, vt0 WHERE (-1824879006) UNION ALL SELECT * FROM t1, t0, vt0 WHERE ((NOT (-1824879006))) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE (((-1824879006) ISNULL));
SELECT * FROM t1, t0, vt0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (((((t1.c0)-(t1.c0))) NOTNULL)) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (((((t1.c0)-(t1.c0))) NOTNULL)))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (((((((t1.c0)-(t1.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (401437628) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (401437628))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((401437628) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(vt0.c0))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (SUM(AVG(vt0.c0))) AND (AVG(SUM(SUM(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((COUNT(vt0.c0))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (SUM(AVG(vt0.c0))) AND (AVG(SUM(SUM(TOTAL(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(vt0.c0))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (SUM(AVG(vt0.c0))) AND (AVG(SUM(SUM(TOTAL(vt0.c0))))))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0, t1;
SELECT ALL vt0.c0 FROM t0, vt0, t1 WHERE (((CASE WHEN t1.c0 THEN vt0.c0 END)-(((0.40807090975383364)GLOB(t1.c0))))) UNION ALL SELECT vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN vt0.c0 END)-(((0.40807090975383364)GLOB(t1.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, t1 WHERE (((((CASE WHEN t1.c0 THEN vt0.c0 END)-(((0.40807090975383364)GLOB(t1.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM t0, vt0, t1;
SELECT DISTINCT * FROM t1, vt0 CROSS JOIN t0 ON NULL;
SELECT DISTINCT * FROM t1, vt0 CROSS JOIN t0 ON NULL WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT * FROM t1, vt0 CROSS JOIN t0 ON NULL WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT * FROM t1, vt0 CROSS JOIN t0 ON NULL WHERE (((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t1, vt0 CROSS JOIN t0 ON NULL;
SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0, t0 WHERE (CHAR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)), PRINTF(t1.c0), NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t1, vt0, t0 WHERE ((NOT (CHAR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)), PRINTF(t1.c0), NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t1, vt0, t0 WHERE (((CHAR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)), PRINTF(t1.c0), NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(vt0.c0))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(CAST(t1.c0 AS BLOB))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(CAST(t1.c0 AS BLOB))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE (((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(CAST(t1.c0 AS BLOB))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((vt0.c0)) BETWEEN (('1213765009')) AND ((t0.c0)))) BETWEEN (((t1.c0) IS FALSE)) AND (t0.c0 COLLATE RTRIM));
SELECT DISTINCT t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((vt0.c0)) BETWEEN (('1213765009')) AND ((t0.c0)))) BETWEEN (((t1.c0) IS FALSE)) AND (t0.c0 COLLATE RTRIM)) WHERE ((((((((vt0.c0)AND(t1.c0)))OR(0.1121264304926527))))==((((((t1.c0)OR(t0.c0)))AND(NULL)))))) UNION SELECT DISTINCT t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((vt0.c0)) BETWEEN (('1213765009')) AND ((t0.c0)))) BETWEEN (((t1.c0) IS FALSE)) AND (t0.c0 COLLATE RTRIM)) WHERE ((NOT ((((((((vt0.c0)AND(t1.c0)))OR(0.1121264304926527))))==((((((t1.c0)OR(t0.c0)))AND(NULL)))))))) UNION SELECT DISTINCT t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((vt0.c0)) BETWEEN (('1213765009')) AND ((t0.c0)))) BETWEEN (((t1.c0) IS FALSE)) AND (t0.c0 COLLATE RTRIM)) WHERE ((((((((((vt0.c0)AND(t1.c0)))OR(0.1121264304926527))))==((((((t1.c0)OR(t0.c0)))AND(NULL)))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((vt0.c0)) BETWEEN (('1213765009')) AND ((t0.c0)))) BETWEEN (((t1.c0) IS FALSE)) AND (t0.c0 COLLATE RTRIM));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((0.48651267251907926)*('1902588478'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((0.48651267251907926)*('1902588478'))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((0.48651267251907926)*('1902588478'))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING AVG(MIN(SUM(''''))) UNION ALL SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(MIN(SUM(''''))))) UNION ALL SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((AVG(MIN(SUM('''')))) ISNULL);
SELECT ALL * FROM t1, vt0, t0;
SELECT * FROM t1, vt0, t0 WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM t1, vt0, t0 WHERE ((NOT ((NOT (t1.c0))))) UNION ALL SELECT * FROM t1, vt0, t0 WHERE ((((NOT (t1.c0))) ISNULL));
SELECT ALL * FROM t1, vt0, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t0 INNER JOIN t1 ON ((CASE vt0.c0  WHEN 0.16799112794195858 THEN t0.c0 ELSE vt0.c0 END) ISNULL);
SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t0 INNER JOIN t1 ON ((CASE vt0.c0  WHEN 0.16799112794195858 THEN t0.c0 ELSE vt0.c0 END) ISNULL) WHERE (((t1.c0 COLLATE BINARY)!=(LIKELIHOOD(t1.c0, 0.12265016935374473)))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t0 INNER JOIN t1 ON ((CASE vt0.c0  WHEN 0.16799112794195858 THEN t0.c0 ELSE vt0.c0 END) ISNULL) WHERE ((NOT (((t1.c0 COLLATE BINARY)<>(LIKELIHOOD(t1.c0, 0.12265016935374473)))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t0 INNER JOIN t1 ON ((CASE vt0.c0  WHEN 0.16799112794195858 THEN t0.c0 ELSE vt0.c0 END) ISNULL) WHERE (((((t1.c0 COLLATE BINARY)!=(LIKELIHOOD(t1.c0, 0.12265016935374473)))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t0 INNER JOIN t1 ON ((CASE vt0.c0  WHEN 0.16799112794195858 THEN t0.c0 ELSE vt0.c0 END) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM vt0, t0, t1 WHERE ((((vt0.c0) NOT BETWEEN (x'eba0') AND (t0.c0)) IN ())) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM vt0, t0, t1 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (x'eba0') AND (t0.c0)) IN ())))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM vt0, t0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (x'eba0') AND (t0.c0)) IN ())) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '\rn' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('\rn')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('\rn') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '\rn' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('\rn')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('\rn') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(((0.47173517795611075) BETWEEN (t0.c0) AND (x'')) AS NUMERIC)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(((0.47173517795611075) BETWEEN (t0.c0) AND (x'')) AS NUMERIC)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(((0.47173517795611075) BETWEEN (t0.c0) AND (x'')) AS NUMERIC)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((((- (t1.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((((- (t1.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((((((- (t1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT vt0.c0, t0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t1, t0, vt0 WHERE ((- (((t0.c0) NOTNULL)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t1, t0, vt0 WHERE ((NOT ((- (((t0.c0) NOTNULL)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t1, t0, vt0 WHERE ((((- (((t0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX(t0.c0) FROM t0 NOT INDEXED, t1, vt0;
SELECT * FROM t1 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT vt0.c0)) NOT BETWEEN ((((t0.c0))!=((t0.c0)))) AND (t0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON (+ (((t1.c0) IS TRUE)));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)OR(t0.c0)))OR(0.31440679225266366)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c0)))OR(0.31440679225266366)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(0.31440679225266366)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'e32c' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'e32c')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'e32c') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'e32c' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'e32c')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'e32c') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0 FROM t1, vt0;
SELECT ALL t1.c0 FROM t1, vt0 WHERE ((+ ((NOT (vt0.c0))))) UNION ALL SELECT t1.c0 FROM t1, vt0 WHERE ((NOT ((+ ((NOT (vt0.c0))))))) UNION ALL SELECT t1.c0 FROM t1, vt0 WHERE ((((+ ((NOT (vt0.c0))))) ISNULL));
SELECT ALL t1.c0 FROM t1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0))==((vt0.c0))))))OR(json_quote(0.8782074833296777))))AND(((vt0.c0)<=(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0))==((vt0.c0))))))OR(json_quote(0.8782074833296777))))AND(((vt0.c0)<=(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0))==((vt0.c0))))))OR(json_quote(0.8782074833296777))))AND(((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, vt0.c0, t0.c0;
SELECT t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (IFNULL((t0.c0 IN ()), ((t1.c0)<>(NULL)))) GROUP BY t1.c0, vt0.c0, t0.c0 UNION SELECT t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE ((NOT (IFNULL((t0.c0 IN ()), ((t1.c0)!=(NULL)))))) GROUP BY t1.c0, vt0.c0, t0.c0 UNION SELECT t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (((IFNULL((t0.c0 IN ()), ((t1.c0)<>(NULL)))) ISNULL)) GROUP BY t1.c0, vt0.c0, t0.c0;
SELECT t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, vt0.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING TIME((((COUNT(MIN(COUNT(t0.c0)))))==((COUNT(*)))), ((t0.c0)GLOB(MIN(t0.c0))), COUNT(t0.c0), t0.c0 COLLATE NOCASE, COUNT(*), TOTAL(SUM('2123043643')), ((MIN(t1.c0))|(t0.c0))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (TIME((((COUNT(MIN(COUNT(t0.c0)))))=((COUNT(*)))), ((t0.c0)GLOB(MIN(t0.c0))), COUNT(t0.c0), t0.c0 COLLATE NOCASE, COUNT(*), TOTAL(SUM('2123043643')), ((MIN(t1.c0))|(t0.c0))))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((TIME((((COUNT(MIN(COUNT(t0.c0)))))==((COUNT(*)))), ((t0.c0)GLOB(MIN(t0.c0))), COUNT(t0.c0), t0.c0 COLLATE NOCASE, COUNT(*), TOTAL(SUM('2123043643')), ((MIN(t1.c0))|(t0.c0)))) ISNULL);
SELECT * FROM t1, t0 NOT INDEXED;
SELECT * FROM t1, t0 WHERE (((((CAST(t1.c0 AS TEXT))OR(t1.c0)))AND(t1.c0))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT (((((CAST(t1.c0 AS TEXT))OR(t1.c0)))AND(t1.c0))))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((((((CAST(t1.c0 AS TEXT))OR(t1.c0)))AND(t1.c0))) ISNULL));
SELECT * FROM t1, t0 NOT INDEXED;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((~ (((0.0968311761873385) IS TRUE)))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((~ (((0.0968311761873385) IS TRUE)))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((~ (((0.0968311761873385) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (CAST(UNLIKELY(DISTINCT t0.c0) AS BLOB)) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (CAST(UNLIKELY(DISTINCT t0.c0) AS BLOB)))) UNION ALL SELECT * FROM t0, t1 WHERE (((CAST(UNLIKELY(DISTINCT t0.c0) AS BLOB)) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((LIKELIHOOD(t0.c0, 0.8803798804349553))+(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT (((LIKELIHOOD(t0.c0, 0.8803798804349553))+(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((LIKELIHOOD(t0.c0, 0.8803798804349553))+(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((0.4350066796740877 IN ())) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT ((0.4350066796740877 IN ())))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((0.4350066796740877 IN ())) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0, t0.c0 FROM t1 INNER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)IS(t1.c0))) AND (((vt0.c0)>(vt0.c0)))) RIGHT OUTER JOIN t0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE GROUP BY vt0.c0, t0.c0;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (UPPER(896050361)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (UPPER(896050361)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((UPPER(896050361)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0)))IS NOT(((x'')<<(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)IS NOT(t1.c0)))IS NOT(((x'')<<(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((t1.c0)IS NOT(t1.c0)))IS NOT(((x'')<<(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t1 WHERE (vt0.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM vt0 NOT INDEXED, t1 WHERE ((NOT (vt0.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM vt0, t1 WHERE (((vt0.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING MIN(((x'e899')IS NOT(t1.c0))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (MIN(((x'e899')IS NOT(t1.c0))))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((MIN(((x'e899')IS NOT(t1.c0)))) ISNULL);
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING MIN(((x'e899')IS NOT(t1.c0))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (MIN(((x'e899')IS NOT(t1.c0))))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((MIN(((x'e899')IS NOT(t1.c0)))) ISNULL);
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON CASE (NOT (0.5574793638178099))  WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN t0.c0 THEN t1.c0 END END;
SELECT ALL t1.c0, vt0.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON CASE (NOT (0.5574793638178099))  WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN t0.c0 THEN t1.c0 END END WHERE (CAST(((vt0.c0)%(vt0.c0)) AS TEXT)) UNION ALL SELECT t1.c0, vt0.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON CASE (NOT (0.5574793638178099))  WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN t0.c0 THEN t1.c0 END END WHERE ((NOT (CAST(((vt0.c0)%(vt0.c0)) AS TEXT)))) UNION ALL SELECT t1.c0, vt0.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON CASE (NOT (0.5574793638178099))  WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN t0.c0 THEN t1.c0 END END WHERE (((CAST(((vt0.c0)%(vt0.c0)) AS TEXT)) ISNULL));
SELECT ALL t1.c0, vt0.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON CASE (NOT (0.5574793638178099))  WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN t0.c0 THEN t1.c0 END END;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((t1.c0)/(t1.c0)) IN ())) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)/(t1.c0)) IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0)/(t1.c0)) IN ())) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT vt0.c0, t0.c0 FROM vt0, t0, t1 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0, t1 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c0)) WHEN (vt0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0)%(vt0.c0)) WHEN (vt0.c0 IN ()) THEN CASE x''  WHEN t1.c0 THEN t1.c0 END END) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0, t1 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c0)) WHEN (vt0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0)%(vt0.c0)) WHEN (vt0.c0 IN ()) THEN CASE x''  WHEN t1.c0 THEN t1.c0 END END))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0, t1 WHERE (((CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c0)) WHEN (vt0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0)%(vt0.c0)) WHEN (vt0.c0 IN ()) THEN CASE x''  WHEN t1.c0 THEN t1.c0 END END) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, t1 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((UPPER(vt0.c0)) IS FALSE);
SELECT ALL * FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((UPPER(vt0.c0)) IS FALSE) WHERE (x'' COLLATE BINARY) UNION ALL SELECT ALL * FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((UPPER(vt0.c0)) IS FALSE) WHERE ((NOT (x'' COLLATE BINARY))) UNION ALL SELECT ALL * FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((UPPER(vt0.c0)) IS FALSE) WHERE (((x'' COLLATE BINARY) ISNULL));
SELECT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((UPPER(vt0.c0)) IS FALSE);
SELECT DISTINCT * FROM t0 INDEXED BY i64, t1, vt0;
SELECT DISTINCT * FROM t0 INDEXED BY i64, t1, vt0 WHERE (((vt0.c0 IN ()) IN (t0.c0, CAST(t1.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM t0 INDEXED BY i64, t1, vt0 WHERE ((NOT (((vt0.c0 IN ()) IN (t0.c0, CAST(t1.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM t0 INDEXED BY i64, t1, vt0 NOT INDEXED WHERE (((((vt0.c0 IN ()) IN (t0.c0, CAST(t1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t0 INDEXED BY i64, t1, vt0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE ((t1.c0 COLLATE BINARY IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT ((t1.c0 COLLATE BINARY IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((((t1.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM((((t1.c0 IN ())) BETWEEN (0.5322923094290312 COLLATE NOCASE) AND (t1.c0 COLLATE RTRIM))) FROM t1, t0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ('ItsX+檥,E') UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((NOT ('ItsX+檥,E'))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((('ItsX+檥,E') ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (NULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t1 WHERE ((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1 WHERE ((NOT ((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t1 WHERE ((((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(CASE AVG(t0.c0)  WHEN COUNT(*) THEN TOTAL(t0.c0) ELSE '' END) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(CASE AVG(t0.c0)  WHEN COUNT(*) THEN TOTAL(t0.c0) ELSE '' END))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(CASE AVG(t0.c0)  WHEN COUNT(*) THEN TOTAL(t0.c0) ELSE '' END)) ISNULL);
SELECT ALL TOTAL(((((((((((t1.c0)>>(vt0.c0)))OR((((vt0.c0))<((t1.c0))))))OR(t1.c0 COLLATE BINARY)))OR('')))OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0, t1 ORDER BY t1.c0 ASC  NULLS LAST, (((0xffffffffcb6e3533 IN (t1.c0)))OR(((((NULL)OR(t1.c0)))AND(vt0.c0)))) ASC;
SELECT ALL * FROM t0, vt0, t1;
SELECT ALL * FROM t0, vt0, t1 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) UNION ALL SELECT ALL * FROM t0, vt0, t1 WHERE ((NOT (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)))) UNION ALL SELECT * FROM t0, vt0, t1 WHERE (((CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0, vt0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ('-2031158838'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((NOT ('-2031158838'))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NOT ('-2031158838'))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM vt0, t0, t1 WHERE (COALESCE(DISTINCT vt0.c0, ((t1.c0) BETWEEN (-8.4927045E8) AND (1341206906)))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM vt0, t0, t1 WHERE ((NOT (COALESCE(DISTINCT vt0.c0, ((t1.c0) BETWEEN (-8.4927045E8) AND (1341206906)))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM vt0, t0, t1 WHERE (((COALESCE(DISTINCT vt0.c0, ((t1.c0) BETWEEN (-8.4927045E8) AND (1341206906)))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING CASE WHEN CAST(t1.c0 AS REAL) THEN COUNT(*) WHEN MIN(t0.c0) THEN ((GROUP_CONCAT(t1.c0))%(MAX(TOTAL(t1.c0)))) WHEN COUNT(AVG(t1.c0)) THEN ((t1.c0) IS TRUE) ELSE (t1.c0 IN ()) END UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN CAST(t1.c0 AS REAL) THEN COUNT(*) WHEN MIN(t0.c0) THEN ((GROUP_CONCAT(t1.c0))%(MAX(TOTAL(t1.c0)))) WHEN COUNT(AVG(t1.c0)) THEN ((t1.c0) IS TRUE) ELSE (t1.c0 IN ()) END)) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((CASE WHEN CAST(t1.c0 AS REAL) THEN COUNT(*) WHEN MIN(t0.c0) THEN ((GROUP_CONCAT(t1.c0))%(MAX(TOTAL(t1.c0)))) WHEN COUNT(AVG(t1.c0)) THEN ((t1.c0) IS TRUE) ELSE (t1.c0 IN ()) END) ISNULL);
SELECT * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE (CAST(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE (((CAST(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) ISNULL));
SELECT * FROM vt0, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (CAST(CAST(t1.c0 AS TEXT) AS NUMERIC)) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (CAST(CAST(t1.c0 AS TEXT) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((CAST(CAST(t1.c0 AS TEXT) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((NOT (t1.c0)) COLLATE BINARY) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((NOT (t1.c0)) COLLATE BINARY))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((NOT (t1.c0)) COLLATE BINARY) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0 HAVING CASE WHEN ((t0.c0) NOT NULL) THEN MIN(t0.c0) END UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0 HAVING (NOT (CASE WHEN ((t0.c0) NOT NULL) THEN MIN(t0.c0) END)) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0 HAVING ((CASE WHEN ((t0.c0) NOT NULL) THEN MIN(t0.c0) END) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0 HAVING CASE WHEN ((t0.c0) NOT NULL) THEN MIN(t0.c0) END UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0 HAVING (NOT (CASE WHEN ((t0.c0) NOT NULL) THEN MIN(t0.c0) END)) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0 HAVING ((CASE WHEN ((t0.c0) NOT NULL) THEN MIN(t0.c0) END) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, t0 INDEXED BY i4 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((~ (((t1.c0)AND(t1.c0))))) ORDER BY ((((t1.c0)|(t1.c0)))*(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)), PRINTF(CAST(t1.c0 AS NUMERIC), ((((t1.c0)AND(NULL)))OR(t1.c0)), (~ (t1.c0)))  NULLS LAST, (((((((t1.c0))<=(('-1824879006'))))OR(x'')))AND(((t1.c0)OR(t1.c0))))  NULLS LAST;
SELECT t1.c0 FROM t1 WHERE ((NOT ((~ (((t1.c0)AND(t1.c0))))))) ORDER BY ((((t1.c0)|(t1.c0)))*(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)), PRINTF(CAST(t1.c0 AS NUMERIC), ((((t1.c0)AND(NULL)))OR(t1.c0)), (~ (t1.c0)))  NULLS LAST, (((((((t1.c0))<=(('-1824879006'))))OR(x'')))AND(((t1.c0)OR(t1.c0))))  NULLS LAST;
SELECT ALL t1.c0 FROM t1 WHERE ((((~ (((t1.c0)AND(t1.c0))))) ISNULL)) ORDER BY ((((t1.c0)|(t1.c0)))*(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)), PRINTF(CAST(t1.c0 AS NUMERIC), ((((t1.c0)AND(NULL)))OR(t1.c0)), (~ (t1.c0)))  NULLS LAST, (((((((t1.c0))<=(('-1824879006'))))OR(x'')))AND(((t1.c0)OR(t1.c0))))  NULLS LAST;
SELECT t1.c0 FROM t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (t1.c0) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((TRIM(DISTINCT t0.c0)) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(x''))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((TRIM(DISTINCT t0.c0)) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(x''))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((TRIM(DISTINCT t0.c0)) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(x''))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING CAST(t1.c0 AS TEXT) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (CAST(t1.c0 AS TEXT))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((CAST(t1.c0 AS TEXT)) ISNULL);
SELECT t1.c0, t0.c0 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING CAST(t1.c0 AS TEXT) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (CAST(t1.c0 AS TEXT))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((CAST(t1.c0 AS TEXT)) ISNULL);
SELECT t1.c0, t0.c0 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0, t0.c0;
SELECT * FROM vt0, t1, t0;
SELECT * FROM vt0, t1, t0 WHERE ((((t1.c0)) NOT BETWEEN ((TRIM(t1.c0))) AND ((((vt0.c0)*(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((TRIM(t1.c0))) AND ((((vt0.c0)*(vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE ((((((t1.c0)) NOT BETWEEN ((TRIM(t1.c0))) AND ((((vt0.c0)*(vt0.c0)))))) ISNULL));
SELECT * FROM vt0, t1, t0;
SELECT DISTINCT t1.c0, vt0.c0 FROM t1, t0, vt0 NOT INDEXED;
SELECT DISTINCT t1.c0, vt0.c0 FROM t1, t0, vt0 WHERE (((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM t1, t0, vt0 NOT INDEXED WHERE ((NOT (((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM t1, t0, vt0 NOT INDEXED WHERE (((((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM t1, t0, vt0 NOT INDEXED;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((NOT (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0))<=((t0.c0))))/(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((t0.c0))<=((t0.c0))))/(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((t0.c0))<=((t0.c0))))/(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0))<=((t0.c0))))/(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((t0.c0))<=((t0.c0))))/(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((t0.c0))<=((t0.c0))))/(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0 IN (t1.c0, 0Xffffffff8cdc47c7))))==((json_object(t1.c0, t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0 IN (t1.c0, 0xffffffff8cdc47c7))))==((json_object(t1.c0, t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0 IN (t1.c0, 0xffffffff8cdc47c7))))==((json_object(t1.c0, t1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t1 ON NULLIF(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((t1.c0)*(t1.c0)));
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t1 ON NULLIF(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((t1.c0)*(t1.c0))) WHERE (CAST((vt0.c0 IN ()) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED LEFT OUTER JOIN t1 ON NULLIF(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((t1.c0)*(t1.c0))) WHERE ((NOT (CAST((vt0.c0 IN ()) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t1 ON NULLIF(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((t1.c0)*(t1.c0))) WHERE (((CAST((vt0.c0 IN ()) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t1 ON NULLIF(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((t1.c0)*(t1.c0)));
SELECT vt0.c0, t1.c0, t0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t1, vt0, t0 WHERE ('P	?') GROUP BY vt0.c0, t1.c0, t0.c0 UNION SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t1, vt0, t0 WHERE ((NOT ('P	?'))) GROUP BY vt0.c0, t1.c0, t0.c0 UNION SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t1, vt0, t0 WHERE ((('P	?') ISNULL)) GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT vt0.c0, t1.c0, t0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) ISNULL)) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0) ISNULL)) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) ISNULL)) NOT NULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) ISNULL)) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0) ISNULL)) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) ISNULL)) NOT NULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX((+ ((((t1.c0, t0.c0, vt0.c0))>=((t0.c0, vt0.c0, t1.c0)))))) FROM t1, vt0, t0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (LOWER(vt0.c0) COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LOWER(vt0.c0) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((LOWER(vt0.c0) COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0))) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0))) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0))) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0, t1.c0, vt0.c0 FROM t1, vt0, t0 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0 FROM t1, vt0, t0 WHERE (CHAR(t0.c0 COLLATE BINARY)) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t1, vt0, t0 WHERE ((NOT (CHAR(t0.c0 COLLATE BINARY)))) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t1, vt0, t0 WHERE (((CHAR(t0.c0 COLLATE BINARY)) ISNULL)) GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0 FROM t1, vt0, t0 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(AVG(COUNT(vt0.c0))) COLLATE NOCASE) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(AVG(COUNT(vt0.c0))) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(AVG(COUNT(vt0.c0))) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 END)IS NOT(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN t0.c0 END)IS NOT(((vt0.c0) ISNULL)))))) UNION ALL SELECT * FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN t0.c0 END)IS NOT(((vt0.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) NOTNULL) COLLATE BINARY) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((t1.c0) NOTNULL) COLLATE BINARY))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((t1.c0) NOTNULL) COLLATE BINARY) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(((x'f42f')%(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(((x'f42f')%(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(((x'f42f')%(t1.c0)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(((x'f42f')%(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(((x'f42f')%(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(((x'f42f')%(t1.c0)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL MIN((((vt0.c0 COLLATE RTRIM))<(((vt0.c0 IN ()))))) FROM vt0 ORDER BY (((vt0.c0 IN ()))<=(vt0.c0)) ASC;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE (COALESCE('', 0.44571310097440986, ((vt0.c0) NOT BETWEEN (t1.c0) AND (x'')), CASE WHEN t0.c0 THEN vt0.c0 END)) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((NOT (COALESCE('', 0.44571310097440986, ((vt0.c0) NOT BETWEEN (t1.c0) AND (x'')), CASE WHEN t0.c0 THEN vt0.c0 END)))) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE (((COALESCE('', 0.44571310097440986, ((vt0.c0) NOT BETWEEN (t1.c0) AND (x'')), CASE WHEN t0.c0 THEN vt0.c0 END)) ISNULL)) GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0 HAVING COUNT(CAST(COUNT(vt0.c0) AS REAL)) UNION ALL SELECT vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0 HAVING (NOT (COUNT(CAST(COUNT(vt0.c0) AS REAL)))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0 HAVING ((COUNT(CAST(COUNT(vt0.c0) AS REAL))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((((t0.c0)GLOB(t0.c0)))>=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((t0.c0)GLOB(t0.c0)))>=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c0)GLOB(t0.c0)))>=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (CAST((~ (t1.c0)) AS TEXT)) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE ((NOT (CAST((~ (t1.c0)) AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((CAST((~ (t1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON t0.c0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON t0.c0 WHERE (CAST(NULL AS BLOB)) GROUP BY t0.c0, vt0.c0, t1.c0 UNION SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON t0.c0 WHERE ((NOT (CAST(NULL AS BLOB)))) GROUP BY t0.c0, vt0.c0, t1.c0 UNION SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON t0.c0 WHERE (((CAST(NULL AS BLOB)) ISNULL)) GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON t0.c0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING CAST(TRIM(AVG(GROUP_CONCAT(vt0.c0)), vt0.c0) AS REAL) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (CAST(TRIM(AVG(GROUP_CONCAT(vt0.c0)), vt0.c0) AS REAL))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((CAST(TRIM(AVG(GROUP_CONCAT(vt0.c0)), vt0.c0) AS REAL)) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((((((((((UPPER(t0.c0))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND('-823547778')))AND(NULL COLLATE BINARY)))OR((t0.c0 IN (t0.c0, t0.c0)))))OR(((t0.c0) NOT NULL))))OR(((('1214139074', t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((((((((UPPER(t0.c0))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND('-823547778')))AND(NULL COLLATE BINARY)))OR((t0.c0 IN (t0.c0, t0.c0)))))OR(((t0.c0) NOT NULL))))OR(((('1214139074', t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((((((((UPPER(t0.c0))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND('-823547778')))AND(NULL COLLATE BINARY)))OR((t0.c0 IN (t0.c0, t0.c0)))))OR(((t0.c0) NOT NULL))))OR(((('1214139074', t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS TRUE))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) IS TRUE))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) IS TRUE))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) AND (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) AND (t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 NOT INDEXED WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) AND (t1.c0))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING ((((((((((((vt0.c0)OR(0.362279227166437)))OR(SUM(vt0.c0))))AND(TOTAL(t0.c0))))OR(t0.c0)))AND(CAST(t1.c0 AS NUMERIC))))OR((NOT (MAX(SUM(COUNT(COUNT(*)))))))) UNION ALL SELECT t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING (NOT (((((((((((((vt0.c0)OR(0.362279227166437)))OR(SUM(vt0.c0))))AND(TOTAL(t0.c0))))OR(t0.c0)))AND(CAST(t1.c0 AS NUMERIC))))OR((NOT (MAX(SUM(COUNT(COUNT(*)))))))))) UNION ALL SELECT t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING ((((((((((((((vt0.c0)OR(0.362279227166437)))OR(SUM(vt0.c0))))AND(TOTAL(t0.c0))))OR(t0.c0)))AND(CAST(t1.c0 AS NUMERIC))))OR((NOT (MAX(SUM(COUNT(COUNT(*))))))))) ISNULL);
SELECT ALL * FROM t0, vt0, t1;
SELECT ALL * FROM t0, vt0, t1 WHERE (t1.c0) UNION ALL SELECT ALL * FROM t0, vt0, t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t0, vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM t0, vt0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0) NOT NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) NOT NULL) AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((t0.c0) NOT NULL) AS NUMERIC)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0;
SELECT ALL t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING UNLIKELY(vt0.c0) COLLATE BINARY UNION ALL SELECT t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING (NOT (UNLIKELY(vt0.c0) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING ((UNLIKELY(vt0.c0) COLLATE BINARY) ISNULL);
SELECT t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0;
SELECT ALL t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING UNLIKELY(vt0.c0) COLLATE BINARY UNION ALL SELECT t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING (NOT (UNLIKELY(vt0.c0) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING ((UNLIKELY(vt0.c0) COLLATE BINARY) ISNULL);
SELECT t1.c0, t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (CAST(t1.c0 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON CASE t0.c0  WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((t1.c0))<((vt0.c0))) WHEN (+ (t0.c0)) THEN 0.27765477374939695 WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN ((vt0.c0) NOT NULL) ELSE ((t1.c0)LIKE(t1.c0)) END;
SELECT ALL t1.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (CAST(t1.c0 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON CASE t0.c0  WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((t1.c0))<((vt0.c0))) WHEN (+ (t0.c0)) THEN 0.27765477374939695 WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN ((vt0.c0) NOT NULL) ELSE ((t1.c0)LIKE(t1.c0)) END WHERE (IFNULL(vt0.c0, vt0.c0) COLLATE BINARY) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (CAST(t1.c0 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON CASE t0.c0  WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((t1.c0))<((vt0.c0))) WHEN (+ (t0.c0)) THEN 0.27765477374939695 WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN ((vt0.c0) NOT NULL) ELSE ((t1.c0)LIKE(t1.c0)) END WHERE ((NOT (IFNULL(vt0.c0, vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (CAST(t1.c0 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON CASE t0.c0  WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((t1.c0))<((vt0.c0))) WHEN (+ (t0.c0)) THEN 0.27765477374939695 WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN ((vt0.c0) NOT NULL) ELSE ((t1.c0)LIKE(t1.c0)) END WHERE (((IFNULL(vt0.c0, vt0.c0) COLLATE BINARY) ISNULL));
SELECT t1.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (CAST(t1.c0 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON CASE t0.c0  WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((t1.c0))<((vt0.c0))) WHEN (+ (t0.c0)) THEN 0.27765477374939695 WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN ((vt0.c0) NOT NULL) ELSE ((t1.c0)LIKE(t1.c0)) END;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ('K5nYz.') GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ('K5nYz.'))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((('K5nYz.') ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0) ISNULL))&(COUNT(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((t1.c0) ISNULL))&(COUNT(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((t1.c0) ISNULL))&(COUNT(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0) ISNULL))&(COUNT(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((t1.c0) ISNULL))&(COUNT(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((t1.c0) ISNULL))&(COUNT(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t0, vt0, t1;
SELECT * FROM t0, vt0, t1 WHERE (((((((t1.c0) ISNULL))AND(vt0.c0 COLLATE NOCASE)))OR(SQLITE_COMPILEOPTION_USED(x'')))) UNION ALL SELECT * FROM t0, vt0, t1 WHERE ((NOT (((((((t1.c0) ISNULL))AND(vt0.c0 COLLATE NOCASE)))OR(SQLITE_COMPILEOPTION_USED(x'')))))) UNION ALL SELECT * FROM t0, vt0, t1 WHERE (((((((((t1.c0) ISNULL))AND(vt0.c0 COLLATE NOCASE)))OR(SQLITE_COMPILEOPTION_USED(x'')))) ISNULL));
SELECT ALL * FROM t0, vt0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((('696404271') BETWEEN (((t0.c0)||(t0.c0))) AND (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((('696404271') BETWEEN (((t0.c0)||(t0.c0))) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((('696404271') BETWEEN (((t0.c0)||(t0.c0))) AND (t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, vt0, t1 WHERE (CASE ((((((((vt0.c0)AND(x'9295')))OR(t1.c0)))OR(t1.c0)))AND(''))  WHEN IFNULL(DISTINCT t0.c0, vt0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 END END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, vt0, t1 WHERE ((NOT (CASE ((((((((vt0.c0)AND(x'9295')))OR(t1.c0)))OR(t1.c0)))AND(''))  WHEN IFNULL(DISTINCT t0.c0, vt0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 END END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, vt0, t1 WHERE (((CASE ((((((((vt0.c0)AND(x'9295')))OR(t1.c0)))OR(t1.c0)))AND(''))  WHEN IFNULL(DISTINCT t0.c0, vt0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t1.c0 END END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) NOT NULL) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) NOT NULL) GROUP BY t0.c0, t1.c0 HAVING ((SUM(t1.c0)) BETWEEN ((((TOTAL(t1.c0))) NOT BETWEEN ((SUM(t1.c0))) AND ((t1.c0)))) AND ((t1.c0 IN (MIN(COUNT(0.34174769050624165)), t0.c0)))) UNION ALL SELECT t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) NOT NULL) GROUP BY t0.c0, t1.c0 HAVING (NOT (((SUM(t1.c0)) BETWEEN ((((TOTAL(t1.c0))) NOT BETWEEN ((SUM(t1.c0))) AND ((t1.c0)))) AND ((t1.c0 IN (MIN(COUNT(0.34174769050624165)), t0.c0)))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) NOT NULL) GROUP BY t0.c0, t1.c0 HAVING ((((SUM(t1.c0)) BETWEEN ((((TOTAL(t1.c0))) NOT BETWEEN ((SUM(t1.c0))) AND ((t1.c0)))) AND ((t1.c0 IN (MIN(COUNT(0.34174769050624165)), t0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 WHERE (((0.26926888417113914)>=((NOT (vt0.c0))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((NOT (((0.26926888417113914)>=((NOT (vt0.c0))))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE (((((0.26926888417113914)>=((NOT (vt0.c0))))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING '' UNION ALL SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING (('') ISNULL);
SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING '' UNION ALL SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING (('') ISNULL);
SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0;
SELECT vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (0.6718611699873646) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (0.6718611699873646))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((0.6718611699873646) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((0.4350066796740877)IS(t0.c0)))+(QUOTE(t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT (((((0.4350066796740877)IS(t0.c0)))+(QUOTE(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((((0.4350066796740877)IS(t0.c0)))+(QUOTE(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT ALL t0.c0, t1.c0 FROM vt0 INNER JOIN t1 ON CASE WHEN CAST(t0.c0 AS REAL) THEN t1.c0 ELSE CASE WHEN -1.931720761E9 THEN t0.c0 END END FULL OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c0, t1.c0))GLOB((+ (vt0.c0)))) GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (CASE WHEN SUM(t1.c0) THEN t1.c0 WHEN COUNT(TOTAL(t1.c0)) THEN MAX(GROUP_CONCAT(COUNT(*))) WHEN t1.c0 THEN GROUP_CONCAT(COUNT(TOTAL(GROUP_CONCAT(t1.c0)))) END IN (GROUP_CONCAT(t1.c0), MAX(MIN(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((CASE WHEN SUM(t1.c0) THEN t1.c0 WHEN COUNT(TOTAL(t1.c0)) THEN MAX(GROUP_CONCAT(COUNT(*))) WHEN t1.c0 THEN GROUP_CONCAT(COUNT(TOTAL(GROUP_CONCAT(t1.c0)))) END IN (GROUP_CONCAT(t1.c0), MAX(MIN(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((CASE WHEN SUM(t1.c0) THEN t1.c0 WHEN COUNT(TOTAL(t1.c0)) THEN MAX(GROUP_CONCAT(COUNT(*))) WHEN t1.c0 THEN GROUP_CONCAT(COUNT(TOTAL(GROUP_CONCAT(t1.c0)))) END IN (GROUP_CONCAT(t1.c0), MAX(MIN(t1.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t1, vt0, t0;
SELECT t0.c0 FROM t1, vt0, t0 WHERE (rtreenode(((((vt0.c0)AND(0.21285492323281963)))OR(t0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t1, vt0, t0 WHERE ((NOT (rtreenode(((((vt0.c0)AND(0.21285492323281963)))OR(t0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t1, vt0, t0 WHERE (((rtreenode(((((vt0.c0)AND(0.21285492323281963)))OR(t0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t1, vt0, t0;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((((t0.c0 IN ())) NOTNULL)) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT ((((t0.c0 IN ())) NOTNULL)))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((((((t0.c0 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)LIKE(NULL))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (x''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)LIKE(NULL))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (x''))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)LIKE(NULL))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (x''))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING SUM(AVG(COUNT(t0.c0))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (SUM(AVG(COUNT(t0.c0))))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((SUM(AVG(COUNT(t0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELY(((vt0.c0)IS NOT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (LIKELY(((vt0.c0)IS NOT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((LIKELY(((vt0.c0)IS NOT(vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING GROUP_CONCAT(MAX(t0.c0)) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(t0.c0)))) UNION ALL SELECT t1.c0, t0.c0 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0, t0.c0 HAVING ((GROUP_CONCAT(MAX(t0.c0))) ISNULL);
SELECT TOTAL(CAST((t1.c0 IN ()) AS BLOB)) FROM t0, t1, vt0;
SELECT ALL t0.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t1, t0 WHERE ((((((t0.c0)<(t0.c0))))<>((CASE t0.c0  WHEN t1.c0 THEN t1.c0 END)))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE ((NOT ((((((t0.c0)<(t0.c0))))!=((CASE t0.c0  WHEN t1.c0 THEN t1.c0 END)))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 WHERE ((((((((t0.c0)<(t0.c0))))<>((CASE t0.c0  WHEN t1.c0 THEN t1.c0 END)))) ISNULL));
SELECT ALL t0.c0 FROM t1, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND ('U?돟b^XdXO'))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND ('U?돟b^XdXO'))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (((vt0.c0) BETWEEN (vt0.c0) AND ('U?돟b^XdXO'))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, vt0 WHERE (CASE CAST(896050361 AS BLOB)  WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (t1.c0)) WHEN ((((vt0.c0)OR(t0.c0)))AND(t0.c0)) THEN (- (vt0.c0)) WHEN MAX(t0.c0, x'', vt0.c0, t0.c0) THEN t0.c0 COLLATE BINARY ELSE (NOT (vt0.c0)) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0, vt0 WHERE ((NOT (CASE CAST(896050361 AS BLOB)  WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (t1.c0)) WHEN ((((vt0.c0)OR(t0.c0)))AND(t0.c0)) THEN (- (vt0.c0)) WHEN MAX(t0.c0, x'', vt0.c0, t0.c0) THEN t0.c0 COLLATE BINARY ELSE (NOT (vt0.c0)) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0, vt0 WHERE (((CASE CAST(896050361 AS BLOB)  WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (t1.c0)) WHEN ((((vt0.c0)OR(t0.c0)))AND(t0.c0)) THEN (- (vt0.c0)) WHEN MAX(t0.c0, x'', vt0.c0, t0.c0) THEN t0.c0 COLLATE BINARY ELSE (NOT (vt0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MAX(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MAX(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MAX(AVG(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t1, vt0, t0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t1, vt0, t0 WHERE (((((((t0.c0)AND(t1.c0)))AND(t0.c0)))|(((((((((t1.c0)AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0, t0.c0, t1.c0 FROM t1, vt0, t0 WHERE ((NOT (((((((t0.c0)AND(t1.c0)))AND(t0.c0)))|(((((((((t1.c0)AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0))))))) UNION ALL SELECT vt0.c0, t0.c0, t1.c0 FROM t1, vt0, t0 WHERE (((((((((t0.c0)AND(t1.c0)))AND(t0.c0)))|(((((((((t1.c0)AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t1, vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))<>(((vt0.c0)GLOB(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)IS(vt0.c0)))<>(((vt0.c0)GLOB(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))<>(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM vt0, t0 NOT INDEXED GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE ((((((t0.c0))<((vt0.c0)))) NOT NULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT ((((((t0.c0))<((vt0.c0)))) NOT NULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((((((((t0.c0))<((vt0.c0)))) NOT NULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 NOT INDEXED GROUP BY t0.c0;
SELECT t1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t1.c0)))AND(t1.c0)) IN ()) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t1.c0)))AND(t1.c0)) IN ()) GROUP BY t1.c0, vt0.c0 HAVING (('') NOT BETWEEN (MIN(t0.c0)) AND (GROUP_CONCAT(AVG(AVG(t0.c0))))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t1.c0)))AND(t1.c0)) IN ()) GROUP BY t1.c0, vt0.c0 HAVING (NOT ((('') NOT BETWEEN (MIN(t0.c0)) AND (GROUP_CONCAT(AVG(AVG(t0.c0))))))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t1.c0)))AND(t1.c0)) IN ()) GROUP BY t1.c0, vt0.c0 HAVING (((('') NOT BETWEEN (MIN(t0.c0)) AND (GROUP_CONCAT(AVG(AVG(t0.c0)))))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, t1, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((- (((((vt0.c0)OR(t0.c0)))OR(0.48651267251907926))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((NOT ((- (((((vt0.c0)OR(t0.c0)))OR(0.48651267251907926))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((((- (((((vt0.c0)OR(t0.c0)))OR(0.48651267251907926))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0, t1, vt0;
SELECT DISTINCT t0.c0 FROM vt0, t0, t1;
SELECT DISTINCT t0.c0 FROM vt0, t0, t1 WHERE (t1.c0) UNION SELECT DISTINCT t0.c0 FROM vt0, t0, t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 NOT INDEXED, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0, t1;
SELECT t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<>(((((vt0.c0)AND(t1.c0)))AND(t1.c0))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT ((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<>(((((vt0.c0)AND(t1.c0)))AND(t1.c0))))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))!=(((((vt0.c0)AND(t1.c0)))AND(t1.c0))))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(((AVG(SUM(COUNT(SUM(t1.c0)))))OR(AVG(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(((AVG(SUM(COUNT(SUM(t1.c0)))))OR(AVG(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(((AVG(SUM(COUNT(SUM(t1.c0)))))OR(AVG(t1.c0))))) ISNULL);
SELECT ALL * FROM t1, vt0;
SELECT * FROM t1, vt0 WHERE (x'') UNION ALL SELECT * FROM t1, vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t1, vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t1, vt0;
SELECT DISTINCT * FROM vt0, t1, t0;
SELECT DISTINCT * FROM vt0, t1, t0 WHERE (((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) NOT BETWEEN (json_array_length('-1562761676')) AND (((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t1, t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) NOT BETWEEN (json_array_length('-1562761676')) AND (((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t1, t0 WHERE (((((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) NOT BETWEEN (json_array_length('-1562761676')) AND (((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, t0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ('纺#\n') GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ('纺#\n'))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((('纺#\n') ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT t1.c0 FROM vt0, t1, t0;
SELECT t1.c0 FROM vt0, t1, t0 WHERE ((HEX(t1.c0) IN ())) UNION ALL SELECT ALL t1.c0 FROM vt0, t1, t0 WHERE ((NOT ((HEX(t1.c0) IN ())))) UNION ALL SELECT ALL t1.c0 FROM vt0, t1, t0 WHERE ((((HEX(t1.c0) IN ())) ISNULL));
SELECT t1.c0 FROM vt0, t1, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) IS FALSE) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)-(NULL)))AND(0.0968311761873385)))OR(x''))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)-(NULL)))AND(0.0968311761873385)))OR(x''))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((((t1.c0)-(NULL)))AND(0.0968311761873385)))OR(x''))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT TOTAL(ROUND(-1795897741 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0, t1, vt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ()) CROSS JOIN t1 ON ABS(((((t0.c0)OR(NULL)))OR(x'')));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ()) CROSS JOIN t1 ON ABS(((((t0.c0)OR(NULL)))OR(x''))) WHERE (CASE WHEN CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END THEN CAST(t0.c0 AS NUMERIC) ELSE ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) END) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ()) CROSS JOIN t1 ON ABS(((((t0.c0)OR(NULL)))OR(x''))) WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END THEN CAST(t0.c0 AS NUMERIC) ELSE ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ()) CROSS JOIN t1 ON ABS(((((t0.c0)OR(NULL)))OR(x''))) WHERE (((CASE WHEN CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END THEN CAST(t0.c0 AS NUMERIC) ELSE ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ()) CROSS JOIN t1 ON ABS(((((t0.c0)OR(NULL)))OR(x'')));
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((t0.c0 IN ()))>>(t0.c0 COLLATE BINARY))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((t0.c0 IN ()))>>(t0.c0 COLLATE BINARY))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((t0.c0 IN ()))>>(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MIN(SUM(vt0.c0))))==((AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((MIN(SUM(vt0.c0))))==((AVG(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((MIN(SUM(vt0.c0))))=((AVG(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(TYPEOF(vt0.c0) AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(TYPEOF(vt0.c0) AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(TYPEOF(vt0.c0) AS TEXT)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT * FROM vt0, t1;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) IS TRUE)) IS FALSE)) UNION ALL SELECT * FROM vt0, t1 WHERE ((NOT (((((vt0.c0) IS TRUE)) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE (((((((vt0.c0) IS TRUE)) IS FALSE)) ISNULL));
SELECT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t0, t1;
SELECT DISTINCT * FROM vt0, t0, t1 WHERE ((((t0.c0, '*', vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, x'', 0.9374597187382255)) AND ((((0.9966017642968741)GLOB(vt0.c0)), ((((((((NULL)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))OR('^tT?bPL*')), ((t1.c0)*('')))))) UNION SELECT DISTINCT * FROM vt0, t0, t1 WHERE ((NOT ((((t0.c0, '*', vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, x'', 0.9374597187382255)) AND ((((0.9966017642968741)GLOB(vt0.c0)), ((((((((NULL)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))OR('^tT?bPL*')), ((t1.c0)*('')))))))) UNION SELECT DISTINCT * FROM vt0, t0, t1 WHERE ((((((t0.c0, '*', vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, x'', 0.9374597187382255)) AND ((((0.9966017642968741)GLOB(vt0.c0)), ((((((((NULL)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))OR('^tT?bPL*')), ((t1.c0)*('')))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, t1;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN (+ (t0.c0)) WHEN t1.c0 THEN (((('')OR(t0.c0)))AND(t0.c0)) WHEN ((t1.c0)>=(vt0.c0)) THEN CASE vt0.c0  WHEN t0.c0 THEN t1.c0 END END) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 WHERE ((NOT (CASE WHEN (t1.c0 IN ()) THEN (+ (t0.c0)) WHEN t1.c0 THEN (((('')OR(t0.c0)))AND(t0.c0)) WHEN ((t1.c0)>=(vt0.c0)) THEN CASE vt0.c0  WHEN t0.c0 THEN t1.c0 END END))) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 WHERE (((CASE WHEN (t1.c0 IN ()) THEN (+ (t0.c0)) WHEN t1.c0 THEN (((('')OR(t0.c0)))AND(t0.c0)) WHEN ((t1.c0)>=(vt0.c0)) THEN CASE vt0.c0  WHEN t0.c0 THEN t1.c0 END END) ISNULL)) GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT ALL t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) IS FALSE) UNION ALL SELECT ALL t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(*))) IS FALSE))) UNION ALL SELECT t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(COUNT(*))) IS FALSE)) ISNULL);
SELECT * FROM t0, t1, vt0;
SELECT ALL * FROM t0, t1, vt0 WHERE (CASE WHEN ((t0.c0)&(vt0.c0)) THEN (~ (t0.c0)) END) UNION ALL SELECT ALL * FROM t0, t1, vt0 WHERE ((NOT (CASE WHEN ((t0.c0)&(vt0.c0)) THEN (~ (t0.c0)) END))) UNION ALL SELECT ALL * FROM t0, t1, vt0 WHERE (((CASE WHEN ((t0.c0)&(vt0.c0)) THEN (~ (t0.c0)) END) ISNULL));
SELECT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (DATE('92X4v', CAST(t0.c0 AS INTEGER), t0.c0)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (DATE('92X4v', CAST(t0.c0 AS INTEGER), t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE (((DATE('92X4v', CAST(t0.c0 AS INTEGER), t0.c0)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (NULL) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (NULL))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)<>(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)!=(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)<>(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)<>(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)<>(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)!=(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)<>(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)<>(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1 INNER JOIN vt0 ON CAST(((t1.c0)<>(t1.c0)) AS REAL) GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t1.c0 FROM vt0, t1;
SELECT ALL t1.c0 FROM vt0, t1 WHERE (((((t1.c0)-(t1.c0))) NOTNULL)) UNION ALL SELECT ALL t1.c0 FROM vt0, t1 WHERE ((NOT (((((t1.c0)-(t1.c0))) NOTNULL)))) UNION ALL SELECT t1.c0 FROM vt0, t1 WHERE (((((((t1.c0)-(t1.c0))) NOTNULL)) ISNULL));
SELECT t1.c0 FROM vt0, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (CASE (NOT (t1.c0))  WHEN ((((((((t1.c0)OR(t0.c0)))AND(t0.c0)))OR(t1.c0)))AND(t1.c0)) THEN (t1.c0 IN ()) END) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (CASE (NOT (t1.c0))  WHEN ((((((((t1.c0)OR(t0.c0)))AND(t0.c0)))OR(t1.c0)))AND(t1.c0)) THEN (t1.c0 IN ()) END))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((CASE (NOT (t1.c0))  WHEN ((((((((t1.c0)OR(t0.c0)))AND(t0.c0)))OR(t1.c0)))AND(t1.c0)) THEN (t1.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, t0 WHERE (((((((((((((t1.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t1.c0)))AND(NULLIF(t1.c0, vt0.c0))))AND(x'24ae'))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 WHERE ((NOT (((((((((((((t1.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t1.c0)))AND(NULLIF(t1.c0, vt0.c0))))AND(x'24ae'))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 WHERE (((((((((((((((t1.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t1.c0)))AND(NULLIF(t1.c0, vt0.c0))))AND(x'24ae'))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0;
SELECT vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING MIN(GROUP_CONCAT(COUNT(MAX(AVG(GROUP_CONCAT(AVG(COUNT(SUM(COUNT(NULL)))))))))) UNION ALL SELECT vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(MAX(AVG(GROUP_CONCAT(AVG(COUNT(SUM(COUNT(NULL)))))))))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((MIN(GROUP_CONCAT(COUNT(MAX(AVG(GROUP_CONCAT(AVG(COUNT(SUM(COUNT(NULL))))))))))) ISNULL);
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, vt0, t1;
SELECT t0.c0, t1.c0, vt0.c0 FROM t0, vt0, t1 WHERE (highlight(NULLIF(DISTINCT vt0.c0, t1.c0), (t0.c0 IN (t0.c0)), ((vt0.c0) IS TRUE), (t1.c0 IN (t1.c0)))) UNION ALL SELECT t0.c0, t1.c0, vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (highlight(NULLIF(DISTINCT vt0.c0, t1.c0), (t0.c0 IN (t0.c0)), ((vt0.c0) IS TRUE), (t1.c0 IN (t1.c0)))))) UNION ALL SELECT t0.c0, t1.c0, vt0.c0 FROM t0, vt0, t1 WHERE (((highlight(NULLIF(DISTINCT vt0.c0, t1.c0), (t0.c0 IN (t0.c0)), ((vt0.c0) IS TRUE), (t1.c0 IN (t1.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1 INNER JOIN vt0 ON (((t0.c0 IN ())) IS FALSE);
SELECT DISTINCT t1.c0 FROM t0, t1 INNER JOIN vt0 ON (((t0.c0 IN ())) IS FALSE) WHERE (((((vt0.c0) NOTNULL)) ISNULL)) UNION SELECT DISTINCT t1.c0 FROM t0, t1 INNER JOIN vt0 ON (((t0.c0 IN ())) IS FALSE) WHERE ((NOT (((((vt0.c0) NOTNULL)) ISNULL)))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 INNER JOIN vt0 ON (((t0.c0 IN ())) IS FALSE) WHERE (((((((vt0.c0) NOTNULL)) ISNULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1 INNER JOIN vt0 ON (((t0.c0 IN ())) IS FALSE);
SELECT t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE (json_extract(CAST(t1.c0 AS REAL), CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 ELSE vt0.c0 END)) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((NOT (json_extract(CAST(t1.c0 AS REAL), CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 ELSE vt0.c0 END)))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE (((json_extract(CAST(t1.c0 AS REAL), CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 ELSE vt0.c0 END)) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0 FROM t0, vt0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((MAX(AVG(COUNT(vt0.c0))))>=(COUNT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (((MAX(AVG(COUNT(vt0.c0))))>=(COUNT(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((((MAX(AVG(COUNT(vt0.c0))))>=(COUNT(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT * FROM t0, vt0 CROSS JOIN t1 ON (('nHh') IS FALSE);
SELECT ALL * FROM t0, vt0 CROSS JOIN t1 ON (('nHh') IS FALSE) WHERE (CAST(((vt0.c0)IS NOT(-1.655585454E9)) AS BLOB)) UNION ALL SELECT ALL * FROM t0, vt0 CROSS JOIN t1 ON (('nHh') IS FALSE) WHERE ((NOT (CAST(((vt0.c0)IS NOT(-1.655585454E9)) AS BLOB)))) UNION ALL SELECT * FROM t0, vt0 CROSS JOIN t1 ON (('nHh') IS FALSE) WHERE (((CAST(((vt0.c0)IS NOT(-1.655585454E9)) AS BLOB)) ISNULL));
SELECT * FROM t0, vt0 CROSS JOIN t1 ON (('nHh') IS FALSE);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON CAST(SQLITE_SOURCE_ID() AS BLOB);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON CAST(SQLITE_SOURCE_ID() AS BLOB) WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON CAST(SQLITE_SOURCE_ID() AS BLOB) WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON CAST(SQLITE_SOURCE_ID() AS BLOB) WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON CAST(SQLITE_SOURCE_ID() AS BLOB);
SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 WHERE ((t0.c0 COLLATE BINARY IN (CAST(vt0.c0 AS REAL), 0.06231685962522293))) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 WHERE ((NOT ((t0.c0 COLLATE BINARY IN (CAST(vt0.c0 AS REAL), 0.06231685962522293))))) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT ALL t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 WHERE ((((t0.c0 COLLATE BINARY IN (CAST(vt0.c0 AS REAL), 0.06231685962522293))) ISNULL)) GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t0, t1 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN COALESCE(t0.c0, t0.c0) THEN ((((x'')OR(t0.c0)))OR(vt0.c0)) ELSE t0.c0 END;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN COALESCE(t0.c0, t0.c0) THEN ((((x'')OR(t0.c0)))OR(vt0.c0)) ELSE t0.c0 END WHERE (CAST(LIKELIHOOD(DISTINCT 0x4435bf20, 0.1986108133763662) AS REAL)) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN COALESCE(t0.c0, t0.c0) THEN ((((x'')OR(t0.c0)))OR(vt0.c0)) ELSE t0.c0 END WHERE ((NOT (CAST(LIKELIHOOD(DISTINCT 0X4435bf20, 0.1986108133763662) AS REAL)))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN COALESCE(t0.c0, t0.c0) THEN ((((x'')OR(t0.c0)))OR(vt0.c0)) ELSE t0.c0 END WHERE (((CAST(LIKELIHOOD(DISTINCT 0X4435bf20, 0.1986108133763662) AS REAL)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN COALESCE(t0.c0, t0.c0) THEN ((((x'')OR(t0.c0)))OR(vt0.c0)) ELSE t0.c0 END;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((NOT (t1.c0))))>((((t1.c0)<=(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (((((NOT (t1.c0))))>((((t1.c0)<=(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((((((NOT (t1.c0))))>((((t1.c0)<=(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT ALL t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)) WHERE (UPPER(((t0.c0) NOT BETWEEN (t0.c0) AND (0.9503494621428278)))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)) WHERE ((NOT (UPPER(((t0.c0) NOT BETWEEN (t0.c0) AND (0.9503494621428278)))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)) WHERE (((UPPER(((t0.c0) NOT BETWEEN (t0.c0) AND (0.9503494621428278)))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)) GROUP BY t0.c0, vt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (- (SUM(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((- (SUM(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((- (SUM(t1.c0)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (- (SUM(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((- (SUM(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((- (SUM(t1.c0)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t0, t1;
SELECT t1.c0 FROM vt0, t0, t1 WHERE (TRIM(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) UNION ALL SELECT t1.c0 FROM vt0, t0, t1 WHERE ((NOT (TRIM(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))) UNION ALL SELECT ALL t1.c0 FROM vt0, t0, t1 WHERE (((TRIM(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) ISNULL));
SELECT ALL t1.c0 FROM vt0, t0, t1;
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1;
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE (TYPEOF(((vt0.c0)<<(NULL)))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE ((NOT (TYPEOF(((vt0.c0)<<(NULL)))))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE (((TYPEOF(((vt0.c0)<<(NULL)))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 WHERE (((((t1.c0)<<(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t1 WHERE ((NOT (((((t1.c0)<<(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1 WHERE (((((((t1.c0)<<(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING CASE WHEN t0.c0 THEN 0.8913108149191733 ELSE MAX(vt0.c0) END COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (CASE WHEN t0.c0 THEN 0.8913108149191733 ELSE MAX(vt0.c0) END COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((CASE WHEN t0.c0 THEN 0.8913108149191733 ELSE MAX(vt0.c0) END COLLATE NOCASE) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING CASE WHEN t0.c0 THEN 0.8913108149191733 ELSE MAX(vt0.c0) END COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (CASE WHEN t0.c0 THEN 0.8913108149191733 ELSE MAX(vt0.c0) END COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((CASE WHEN t0.c0 THEN 0.8913108149191733 ELSE MAX(vt0.c0) END COLLATE NOCASE) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS BLOB)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ('-612903332') UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ('-612903332'))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((('-612903332') ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT t0.c0, t1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON LIKELIHOOD(DISTINCT t0.c0, 0.5831359221760433) COLLATE NOCASE COLLATE BINARY INNER JOIN t0 ON CASE WHEN vt0.c0 THEN t1.c0 ELSE t0.c0 END COLLATE NOCASE GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0 NOT INDEXED, t1 GROUP BY t1.c0, vt0.c0 HAVING SUM((NOT (t1.c0))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0 HAVING (NOT (SUM((NOT (t1.c0))))) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0 HAVING ((SUM((NOT (t1.c0)))) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0 NOT INDEXED, t1 GROUP BY t1.c0, vt0.c0 HAVING SUM((NOT (t1.c0))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0 HAVING (NOT (SUM((NOT (t1.c0))))) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0 HAVING ((SUM((NOT (t1.c0)))) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (0.7230661278182154) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.7230661278182154))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((0.7230661278182154) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((((t1.c0, NULL, 'hW\5e)D0s')) BETWEEN ((IFNULL(x'', t0.c0), CAST(t0.c0 AS BLOB), SQLITE_COMPILEOPTION_GET(t1.c0))) AND ((NULLIF(DISTINCT t1.c0, t1.c0), CAST(t0.c0 AS NUMERIC), ((t1.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((((t1.c0, NULL, 'hW\5e)D0s')) BETWEEN ((IFNULL(x'', t0.c0), CAST(t0.c0 AS BLOB), SQLITE_COMPILEOPTION_GET(t1.c0))) AND ((NULLIF(DISTINCT t1.c0, t1.c0), CAST(t0.c0 AS NUMERIC), ((t1.c0) IS TRUE))))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((((t1.c0, NULL, 'hW\5e)D0s')) BETWEEN ((IFNULL(x'', t0.c0), CAST(t0.c0 AS BLOB), SQLITE_COMPILEOPTION_GET(t1.c0))) AND ((NULLIF(DISTINCT t1.c0, t1.c0), CAST(t0.c0 AS NUMERIC), ((t1.c0) IS TRUE))))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (NULLIF((~ (t1.c0)), CAST(0Xf5a72f AS NUMERIC))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (NULLIF((~ (t1.c0)), CAST(0xf5a72f AS NUMERIC))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((NULLIF((~ (t1.c0)), CAST(0xf5a72f AS NUMERIC))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING MAX(((((t0.c0)OR(TOTAL(TOTAL(vt0.c0)))))OR(vt0.c0))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX(((((t0.c0)OR(TOTAL(TOTAL(vt0.c0)))))OR(vt0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX(((((t0.c0)OR(TOTAL(TOTAL(vt0.c0)))))OR(vt0.c0)))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (427644676) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (427644676))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((427644676) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM t0, t1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE (t1.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE ((NOT (t1.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE (((t1.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((AVG(COUNT(*)), t1.c0, SUM(GROUP_CONCAT(GROUP_CONCAT(t1.c0))))) NOT BETWEEN (((+ (t1.c0)), TOTAL(t1.c0), COUNT(t1.c0))) AND ((((GROUP_CONCAT(GROUP_CONCAT(t1.c0)))*(GROUP_CONCAT(COUNT(*)))), MIN(COUNT(t1.c0)), MIN(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((AVG(COUNT(*)), t1.c0, SUM(GROUP_CONCAT(GROUP_CONCAT(t1.c0))))) NOT BETWEEN (((+ (t1.c0)), TOTAL(t1.c0), COUNT(t1.c0))) AND ((((GROUP_CONCAT(GROUP_CONCAT(t1.c0)))*(GROUP_CONCAT(COUNT(*)))), MIN(COUNT(t1.c0)), MIN(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((AVG(COUNT(*)), t1.c0, SUM(GROUP_CONCAT(GROUP_CONCAT(t1.c0))))) NOT BETWEEN (((+ (t1.c0)), TOTAL(t1.c0), COUNT(t1.c0))) AND ((((GROUP_CONCAT(GROUP_CONCAT(t1.c0)))*(GROUP_CONCAT(COUNT(*)))), MIN(COUNT(t1.c0)), MIN(t1.c0))))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t1, t0;
SELECT ALL t0.c0 FROM vt0, t1, t0 WHERE (((vt0.c0)>=(((t1.c0)!=(t1.c0))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t1, t0 WHERE ((NOT (((vt0.c0)>=(((t1.c0)<>(t1.c0))))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t1, t0 WHERE (((((vt0.c0)>=(((t1.c0)<>(t1.c0))))) ISNULL));
SELECT ALL t0.c0 FROM vt0, t1, t0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CAST(((0.4362979062303691) NOT NULL) AS BLOB) RIGHT OUTER JOIN t1 ON (((vt0.c0, vt0.c0, t0.c0, NULL, t1.c0)) BETWEEN ((((t0.c0) BETWEEN (t1.c0) AND ('1094277062')), NULL, '1214139074', (t0.c0 IN ()), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), NULLIF(t1.c0, t1.c0), ((vt0.c0)*(x'faa6')), '704098026', CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CAST(((0.4362979062303691) NOT NULL) AS BLOB) RIGHT OUTER JOIN t1 ON (((vt0.c0, vt0.c0, t0.c0, NULL, t1.c0)) BETWEEN ((((t0.c0) BETWEEN (t1.c0) AND ('1094277062')), NULL, '1214139074', (t0.c0 IN ()), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), NULLIF(t1.c0, t1.c0), ((vt0.c0)*(x'faa6')), '704098026', CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END))) WHERE (t1.c0) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CAST(((0.4362979062303691) NOT NULL) AS BLOB) RIGHT OUTER JOIN t1 ON (((vt0.c0, vt0.c0, t0.c0, NULL, t1.c0)) BETWEEN ((((t0.c0) BETWEEN (t1.c0) AND ('1094277062')), NULL, '1214139074', (t0.c0 IN ()), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), NULLIF(t1.c0, t1.c0), ((vt0.c0)*(x'faa6')), '704098026', CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END))) WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CAST(((0.4362979062303691) NOT NULL) AS BLOB) RIGHT OUTER JOIN t1 ON (((vt0.c0, vt0.c0, t0.c0, NULL, t1.c0)) BETWEEN ((((t0.c0) BETWEEN (t1.c0) AND ('1094277062')), NULL, '1214139074', (t0.c0 IN ()), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), NULLIF(t1.c0, t1.c0), ((vt0.c0)*(x'faa6')), '704098026', CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END))) WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CAST(((0.4362979062303691) NOT NULL) AS BLOB) RIGHT OUTER JOIN t1 ON (((vt0.c0, vt0.c0, t0.c0, NULL, t1.c0)) BETWEEN ((((t0.c0) BETWEEN (t1.c0) AND ('1094277062')), NULL, '1214139074', (t0.c0 IN ()), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), NULLIF(t1.c0, t1.c0), ((vt0.c0)*(x'faa6')), '704098026', CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)));
SELECT t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t1, t0 WHERE (((IFNULL(t1.c0, t1.c0)) IS FALSE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t1, t0 WHERE ((NOT (((IFNULL(t1.c0, t1.c0)) IS FALSE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t1, t0 WHERE (((((IFNULL(t1.c0, t1.c0)) IS FALSE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0 NOT INDEXED, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, vt0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0 NOT INDEXED, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, vt0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST((- (t0.c0)) AS INTEGER)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST((- (t0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST((- (t0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((((t1.c0)) BETWEEN ((((t0.c0) IS FALSE))) AND ((CAST(t1.c0 AS INTEGER))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((((t0.c0) IS FALSE))) AND ((CAST(t1.c0 AS INTEGER))))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, t1 WHERE ((((((t1.c0)) BETWEEN ((((t0.c0) IS FALSE))) AND ((CAST(t1.c0 AS INTEGER))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (CASE WHEN ((t1.c0)OR(t1.c0)) THEN ((t0.c0) NOTNULL) ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (CASE WHEN ((t1.c0)OR(t1.c0)) THEN ((t0.c0) NOTNULL) ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE (((CASE WHEN ((t1.c0)OR(t1.c0)) THEN ((t0.c0) NOTNULL) ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT vt0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0 HAVING COUNT(((MAX(vt0.c0))>>(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0 HAVING (NOT (COUNT(((MAX(vt0.c0))>>(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0 HAVING ((COUNT(((MAX(vt0.c0))>>(vt0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((- (t0.c0))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND (t0.c0 COLLATE RTRIM));
SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((- (t0.c0))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE ('-619070998') UNION ALL SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((- (t0.c0))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE ((NOT ('-619070998'))) UNION ALL SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((- (t0.c0))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE ((('-619070998') ISNULL));
SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((- (t0.c0))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND (t0.c0 COLLATE RTRIM));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '0.6027866650630236' WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '0.6027866650630236' WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '0.6027866650630236' WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING SUM((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (SUM((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((SUM((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING SUM((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (SUM((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((SUM((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT MAX(((((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))<=(((0.49100909155213035) IS TRUE)))) FROM t1, vt0;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON 0.9481974463550613;
SELECT * FROM t1 CROSS JOIN vt0 ON 0.9481974463550613 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END)=(t1.c0))) UNION ALL SELECT * FROM t1 CROSS JOIN vt0 ON 0.9481974463550613 WHERE ((NOT (((CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END)==(t1.c0))))) UNION ALL SELECT * FROM t1 CROSS JOIN vt0 ON 0.9481974463550613 WHERE (((((CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END)=(t1.c0))) ISNULL));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON 0.9481974463550613;
SELECT DISTINCT t1.c0 FROM t1 INNER JOIN vt0 ON json_object(vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((- (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((- (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((- (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0 HAVING x'992ba0bd' UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (x'992ba0bd')) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0 HAVING ((x'992ba0bd') ISNULL);
SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0 HAVING x'992ba0bd' UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (x'992ba0bd')) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0 HAVING ((x'992ba0bd') ISNULL);
SELECT t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0 WHERE ((~ (TRIM(vt0.c0, NULL)))) UNION ALL SELECT vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0 WHERE ((NOT ((~ (TRIM(vt0.c0, NULL)))))) UNION ALL SELECT vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0 WHERE ((((~ (TRIM(vt0.c0, NULL)))) ISNULL));
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0;
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1;
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE (LIKELY(((t1.c0)>(t1.c0)))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE ((NOT (LIKELY(((t1.c0)>(t1.c0)))))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE (((LIKELY(((t1.c0)>(t1.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ('Zq榰H' COLLATE RTRIM) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ('Zq榰H' COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((('Zq榰H' COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING CAST(COUNT(t0.c0) AS INTEGER) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (CAST(COUNT(t0.c0) AS INTEGER))) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((CAST(COUNT(t0.c0) AS INTEGER)) ISNULL);
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING CAST(COUNT(t0.c0) AS INTEGER) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (CAST(COUNT(t0.c0) AS INTEGER))) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((CAST(COUNT(t0.c0) AS INTEGER)) ISNULL);
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0)<=(t0.c0)) AS BLOB)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)<=(t0.c0)) AS BLOB)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0)<=(t0.c0)) AS BLOB)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, 854376686))))<<((t0.c0 IN (t0.c0, t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, 854376686))))<<((t0.c0 IN (t0.c0, t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, 854376686))))<<((t0.c0 IN (t0.c0, t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((CAST(t0.c0 AS REAL) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((CAST(t0.c0 AS REAL) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (CASE '295198443'  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (CASE '295198443'  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (((CASE '295198443'  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 WHERE (UPPER((NOT (vt0.c0)))) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM t1, vt0 WHERE ((NOT (UPPER((NOT (vt0.c0)))))) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM t1, vt0 WHERE (((UPPER((NOT (vt0.c0)))) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(MIN(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MIN(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MIN(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 WHERE (((x'60fc')OR((t0.c0 IN ())))) UNION ALL SELECT t0.c0 FROM t0, t1 WHERE ((NOT (((x'60fc')OR((t0.c0 IN ())))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 WHERE (((((x'60fc')OR((t0.c0 IN ())))) ISNULL));
SELECT t0.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (CASE ((vt0.c0)IS NOT(t0.c0))  WHEN t0.c0 THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN (((t0.c0, vt0.c0, t0.c0))>=((vt0.c0, vt0.c0, t0.c0))) WHEN vt0.c0 THEN CAST(t0.c0 AS TEXT) ELSE (t0.c0 IN ()) END) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((NOT (CASE ((vt0.c0)IS NOT(t0.c0))  WHEN t0.c0 THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN (((t0.c0, vt0.c0, t0.c0))>=((vt0.c0, vt0.c0, t0.c0))) WHEN vt0.c0 THEN CAST(t0.c0 AS TEXT) ELSE (t0.c0 IN ()) END))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (((CASE ((vt0.c0)IS NOT(t0.c0))  WHEN t0.c0 THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN (((t0.c0, vt0.c0, t0.c0))>=((vt0.c0, vt0.c0, t0.c0))) WHEN vt0.c0 THEN CAST(t0.c0 AS TEXT) ELSE (t0.c0 IN ()) END) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (1.177315712E9) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (1.177315712E9))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (((1.177315712E9) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING AVG(COUNT(TOTAL(GROUP_CONCAT(MAX(COUNT(x'd64a')))))) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT (AVG(COUNT(TOTAL(GROUP_CONCAT(MAX(COUNT(x'd64a')))))))) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING ((AVG(COUNT(TOTAL(GROUP_CONCAT(MAX(COUNT(x'd64a'))))))) ISNULL);
SELECT ALL SUM(((CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END)GLOB('1015147985'))) FROM t0, t1, vt0 ORDER BY t1.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE BINARY AS TEXT)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE BINARY AS TEXT)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0, vt0 INDEXED BY i4;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE ((((vt0.c0))>((vt0.c0))) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NOT INDEXED, vt0 WHERE ((NOT ((((vt0.c0))>((vt0.c0))) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((((((vt0.c0))>((vt0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(t0.c0 COLLATE NOCASE AS TEXT) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(t0.c0 COLLATE NOCASE AS TEXT))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(t0.c0 COLLATE NOCASE AS TEXT)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(t0.c0 COLLATE NOCASE AS TEXT) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(t0.c0 COLLATE NOCASE AS TEXT))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(t0.c0 COLLATE NOCASE AS TEXT)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL SUM(CAST(TRIM(DISTINCT vt0.c0) AS NUMERIC)) FROM vt0, t0 ORDER BY t0.c0;
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((('0.9955826316822588'))<=((((t1.c0)-(t1.c0)))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((('0.9955826316822588'))<=((((t1.c0)-(t1.c0)))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((((('0.9955826316822588'))<=((((t1.c0)-(t1.c0)))))) ISNULL));
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN t1 ON '608349483';
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN t1 ON '608349483' WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN t1 ON '608349483' WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN t1 ON '608349483' WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN t1 ON '608349483';
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))IS((- (t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))IS((- (t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))IS((- (t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.2633426020528865 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.2633426020528865)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.2633426020528865) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.2633426020528865 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.2633426020528865)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.2633426020528865) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, t1;
SELECT * FROM t0, t1 WHERE ((~ (t0.c0))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT ((~ (t0.c0))))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((((~ (t0.c0))) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT vt0.c0 FROM t0, vt0, t1;
SELECT DISTINCT vt0.c0 FROM t0, vt0, t1 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0, t1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0, t1;
SELECT ALL t1.c0 FROM t1 INDEXED BY i4 INNER JOIN t0 ON ((TYPEOF(DISTINCT t0.c0))/(LOWER(t1.c0))) GROUP BY t1.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((SUM(t1.c0)) NOT BETWEEN (t1.c0) AND (MIN(0.8463818277179552))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(t1.c0)) NOT BETWEEN (t1.c0) AND (MIN(0.8463818277179552))))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((((SUM(t1.c0)) NOT BETWEEN (t1.c0) AND (MIN(0.8463818277179552)))) ISNULL);
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((SUM(t1.c0)) NOT BETWEEN (t1.c0) AND (MIN(0.8463818277179552))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(t1.c0)) NOT BETWEEN (t1.c0) AND (MIN(0.8463818277179552))))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((((SUM(t1.c0)) NOT BETWEEN (t1.c0) AND (MIN(0.8463818277179552)))) ISNULL);
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((NULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((NULL)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE LTRIM(vt0.c0, vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN 0Xffffffff80a48281 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE LTRIM(vt0.c0, vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN 0xffffffff80a48281 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE LTRIM(vt0.c0, vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN 0xffffffff80a48281 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, vt0.c0, t0.c0;
SELECT ALL t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (CAST(((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) AS NUMERIC)) GROUP BY t1.c0, vt0.c0, t0.c0 UNION SELECT t1.c0, vt0.c0, t0.c0 FROM t0, t1 NOT INDEXED, vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) AS NUMERIC)))) GROUP BY t1.c0, vt0.c0, t0.c0 UNION SELECT t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (((CAST(((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) AS NUMERIC)) ISNULL)) GROUP BY t1.c0, vt0.c0, t0.c0;
SELECT ALL t1.c0, vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, vt0.c0, t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (TRIM(t1.c0) COLLATE RTRIM) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (TRIM(t1.c0) COLLATE RTRIM))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((TRIM(t1.c0) COLLATE RTRIM) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING TOTAL(CASE WHEN MIN(GROUP_CONCAT(t0.c0)) THEN SUM(AVG(t0.c0)) WHEN t0.c0 THEN MIN(t1.c0) WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (TOTAL(CASE WHEN MIN(GROUP_CONCAT(t0.c0)) THEN SUM(AVG(t0.c0)) WHEN t0.c0 THEN MIN(t1.c0) WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((TOTAL(CASE WHEN MIN(GROUP_CONCAT(t0.c0)) THEN SUM(AVG(t0.c0)) WHEN t0.c0 THEN MIN(t1.c0) WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (x'') UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (x''))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((x'') ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (NULL) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 WHERE ((((vt0.c0 IN ()))>(t1.c0))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, vt0 WHERE ((NOT ((((vt0.c0 IN ()))>(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, vt0 WHERE ((((((vt0.c0 IN ()))>(t1.c0))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING MIN(SUM(AVG(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MIN(SUM(AVG(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0 HAVING ((MIN(SUM(AVG(vt0.c0)) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))<((t0.c0 IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))<((t0.c0 IN ())))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))<((t0.c0 IN ())))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ('') UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (''))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((('') ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM vt0, t1 WHERE ('-746015076') GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM vt0, t1 WHERE ((NOT ('-746015076'))) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM vt0, t1 WHERE ((('-746015076') ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT MAX(((((t1.c0 IN ())))<=((((t1.c0) ISNULL))))) FROM t1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c0)<>(t0.c0)), ((t0.c0) NOTNULL))) UNION ALL SELECT * FROM t0 WHERE ((NOT (TRIM(((t0.c0)<>(t0.c0)), ((t0.c0) NOTNULL))))) UNION ALL SELECT * FROM t0 WHERE (((TRIM(((t0.c0)!=(t0.c0)), ((t0.c0) NOTNULL))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (LOWER(DISTINCT (('-618330395')AND(t1.c0)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (LOWER(DISTINCT (('-618330395')AND(t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((LOWER(DISTINCT (('-618330395')AND(t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE WHERE ((((vt0.c0 IN ()))IS NOT(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE WHERE ((NOT ((((vt0.c0 IN ()))IS NOT(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE WHERE ((((((vt0.c0 IN ()))IS NOT(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t1 NATURAL JOIN t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t1 NATURAL JOIN t0 GROUP BY t0.c0, vt0.c0 HAVING json_insert(((vt0.c0)AND(vt0.c0)), CAST(t0.c0 AS TEXT), ((TOTAL(COUNT(*)))+(MIN(t0.c0)))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t1 NATURAL JOIN t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (json_insert(((vt0.c0)AND(vt0.c0)), CAST(t0.c0 AS TEXT), ((TOTAL(COUNT(*)))+(MIN(t0.c0)))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t1 NATURAL JOIN t0 GROUP BY t0.c0, vt0.c0 HAVING ((json_insert(((vt0.c0)AND(vt0.c0)), CAST(t0.c0 AS TEXT), ((TOTAL(COUNT(*)))+(MIN(t0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT CAST(t0.c0 AS TEXT), 0.9374832023497633)) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT CAST(t0.c0 AS TEXT), 0.9374832023497633)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((LIKELIHOOD(DISTINCT CAST(t0.c0 AS TEXT), 0.9374832023497633)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END) NOT NULL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN t1.c0 END) NOT NULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 END) NOT NULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE (((IFNULL(t1.c0, vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE)))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((NOT (((IFNULL(t1.c0, vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE)))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE (((((IFNULL(t1.c0, vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0;
SELECT t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0 HAVING (NULLIF(DISTINCT vt0.c0, t0.c0) IN ()) UNION ALL SELECT ALL t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0 HAVING (NOT ((NULLIF(DISTINCT vt0.c0, t0.c0) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0 HAVING (((NULLIF(DISTINCT vt0.c0, t0.c0) IN ())) ISNULL);
SELECT ALL t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0;
SELECT t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0 HAVING (NULLIF(DISTINCT vt0.c0, t0.c0) IN ()) UNION ALL SELECT ALL t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0 HAVING (NOT ((NULLIF(DISTINCT vt0.c0, t0.c0) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0 HAVING (((NULLIF(DISTINCT vt0.c0, t0.c0) IN ())) ISNULL);
SELECT ALL t1.c0 FROM t0, vt0 INNER JOIN t1 ON NULL COLLATE RTRIM GROUP BY t1.c0;
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM t1, t0, vt0;
SELECT DISTINCT vt0.c0 FROM t1, t0, vt0 WHERE (CASE WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN LOWER(DISTINCT t0.c0) END) UNION SELECT DISTINCT vt0.c0 FROM t1, t0, vt0 WHERE ((NOT (CASE WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN LOWER(DISTINCT t0.c0) END))) UNION SELECT DISTINCT vt0.c0 FROM t1, t0, vt0 WHERE (((CASE WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN LOWER(DISTINCT t0.c0) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM t1, t0, vt0;
SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT vt0.c0, t1.c0, t0.c0 FROM t1, t0, vt0 WHERE (((CHANGES()) NOT BETWEEN (((vt0.c0) BETWEEN ('1326193896') AND (t1.c0))) AND ((((t1.c0))<=((x'')))))) GROUP BY vt0.c0, t1.c0, t0.c0 UNION SELECT vt0.c0, t1.c0, t0.c0 FROM t1, t0, vt0 WHERE ((NOT (((CHANGES()) NOT BETWEEN (((vt0.c0) BETWEEN ('1326193896') AND (t1.c0))) AND ((((t1.c0))<=((x'')))))))) GROUP BY vt0.c0, t1.c0, t0.c0 UNION SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t1, t0, vt0 WHERE (((((CHANGES()) NOT BETWEEN (((vt0.c0) BETWEEN ('1326193896') AND (t1.c0))) AND ((((t1.c0))<=((x'')))))) ISNULL)) GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0 HAVING ((((MIN(t1.c0))AND(GROUP_CONCAT(TOTAL(t1.c0)))))OR((((GROUP_CONCAT(t1.c0), TOTAL(COUNT(*)), COUNT(t1.c0))) BETWEEN ((TOTAL(GROUP_CONCAT(vt0.c0)), COUNT(t1.c0), TOTAL(TOTAL(vt0.c0)))) AND ((t1.c0, SUM(t1.c0), COUNT(*)))))) UNION ALL SELECT vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0 HAVING (NOT (((((MIN(t1.c0))AND(GROUP_CONCAT(TOTAL(t1.c0)))))OR((((GROUP_CONCAT(t1.c0), TOTAL(COUNT(*)), COUNT(t1.c0))) BETWEEN ((TOTAL(GROUP_CONCAT(vt0.c0)), COUNT(t1.c0), TOTAL(TOTAL(vt0.c0)))) AND ((t1.c0, SUM(t1.c0), COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0 HAVING ((((((MIN(t1.c0))AND(GROUP_CONCAT(TOTAL(t1.c0)))))OR((((GROUP_CONCAT(t1.c0), TOTAL(COUNT(*)), COUNT(t1.c0))) BETWEEN ((TOTAL(GROUP_CONCAT(vt0.c0)), COUNT(t1.c0), TOTAL(TOTAL(vt0.c0)))) AND ((t1.c0, SUM(t1.c0), COUNT(*))))))) ISNULL);
SELECT ALL MIN(0Xffffffff85dc765e COLLATE NOCASE) FROM t0, t1, vt0 ORDER BY ((((((((((((((vt0.c0)OR(t1.c0)))OR(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t1.c0)))+(LOWER(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM t0, t1, vt0;
SELECT * FROM t0, t1, vt0 WHERE (CAST(((t0.c0) ISNULL) AS REAL)) UNION ALL SELECT ALL * FROM t0, t1, vt0 WHERE ((NOT (CAST(((t0.c0) ISNULL) AS REAL)))) UNION ALL SELECT * FROM t0, t1, vt0 WHERE (((CAST(((t0.c0) ISNULL) AS REAL)) ISNULL));
SELECT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1, vt0 WHERE ((((t1.c0)) NOT BETWEEN ((0Xffffffffc9d8c3bb)) AND (((+ (t1.c0)))))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((0Xffffffffc9d8c3bb)) AND (((+ (t1.c0)))))))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((0xffffffffc9d8c3bb)) AND (((+ (t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)<(vt0.c0))  WHEN ((vt0.c0)>('T')) THEN vt0.c0 COLLATE NOCASE END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)<(vt0.c0))  WHEN ((vt0.c0)>('T')) THEN vt0.c0 COLLATE NOCASE END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)<(vt0.c0))  WHEN ((vt0.c0)>('T')) THEN vt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0, NULL, vt0.c0))=((vt0.c0, COUNT(*), vt0.c0)))))<((TOTAL(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((vt0.c0, NULL, vt0.c0))==((vt0.c0, COUNT(*), vt0.c0)))))<((TOTAL(SUM(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((vt0.c0, NULL, vt0.c0))=((vt0.c0, COUNT(*), vt0.c0)))))<((TOTAL(SUM(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1;
SELECT vt0.c0, t1.c0 FROM vt0, t1 WHERE (((((t1.c0)OR(t1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c0)<>(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 WHERE ((NOT (((((t1.c0)OR(t1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c0)!=(vt0.c0))))))) UNION ALL SELECT vt0.c0, t1.c0 FROM vt0, t1 WHERE (((((((t1.c0)OR(t1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((t1.c0)<>(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE ((~ ((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ ((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((~ ((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((~ ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((~ ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((~ ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING LIKELIHOOD(TOTAL(t0.c0), 0.6679088351582154) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING (NOT (LIKELIHOOD(TOTAL(t0.c0), 0.6679088351582154))) UNION ALL SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING ((LIKELIHOOD(TOTAL(t0.c0), 0.6679088351582154)) ISNULL);
SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING LIKELIHOOD(TOTAL(t0.c0), 0.6679088351582154) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING (NOT (LIKELIHOOD(TOTAL(t0.c0), 0.6679088351582154))) UNION ALL SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0 HAVING ((LIKELIHOOD(TOTAL(t0.c0), 0.6679088351582154)) ISNULL);
SELECT vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL SUM((- (((t1.c0)||(0Xffffffffcee9a87e))))) FROM t1 ORDER BY json_quote(t1.c0) ASC, (((- (t1.c0)))/(((t1.c0)==(t1.c0)))) ASC;
SELECT t0.c0 FROM t1, t0;
SELECT t0.c0 FROM t1, t0 WHERE (((t1.c0) IS TRUE) COLLATE NOCASE) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE ((NOT (((t1.c0) IS TRUE) COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE (((((t1.c0) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t0 INNER JOIN t1 ON ((t0.c0 COLLATE BINARY)<(((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT DISTINCT t1.c0 FROM t0 INNER JOIN t1 ON ((t0.c0 COLLATE BINARY)<(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) WHERE (0.839906133247954 COLLATE BINARY) UNION SELECT DISTINCT t1.c0 FROM t0 INNER JOIN t1 ON ((t0.c0 COLLATE BINARY)<(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) WHERE ((NOT (0.839906133247954 COLLATE BINARY))) UNION SELECT DISTINCT t1.c0 FROM t0 INNER JOIN t1 ON ((t0.c0 COLLATE BINARY)<(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) WHERE (((0.839906133247954 COLLATE BINARY) ISNULL));
SELECT DISTINCT t1.c0 FROM t0 INNER JOIN t1 ON ((t0.c0 COLLATE BINARY)<(((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (+ (TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT ((+ (TOTAL(t0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (((+ (TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (+ (TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT ((+ (TOTAL(t0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (((+ (TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (CASE 'W'  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (CASE 'W'  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 NOT INDEXED, t0 WHERE (((CASE 'W'  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CAST(x'' AS REAL)) NOTNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(x'' AS REAL)) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(x'' AS REAL)) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING TOTAL(COUNT(TOTAL(t1.c0))) UNION ALL SELECT t1.c0, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (TOTAL(COUNT(TOTAL(t1.c0))))) UNION ALL SELECT t1.c0, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((TOTAL(COUNT(TOTAL(t1.c0)))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) AS BLOB)) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) AS BLOB)))) UNION ALL SELECT * FROM t0, vt0 WHERE (((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) AS BLOB)) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, t1, vt0;
SELECT DISTINCT vt0.c0 FROM t0, t1, vt0 WHERE ((((NOT (vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t0, t1, vt0 WHERE ((NOT ((((NOT (vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM t0, t1, vt0 WHERE ((((((NOT (vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, t1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (IFNULL(DISTINCT RTRIM(vt0.c0), ((vt0.c0)GLOB(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (IFNULL(DISTINCT RTRIM(vt0.c0), ((vt0.c0)GLOB(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((IFNULL(DISTINCT RTRIM(vt0.c0), ((vt0.c0)GLOB(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((((MIN(vt0.c0))) BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((((MIN(vt0.c0))) BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((((MIN(vt0.c0))) BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM t1, vt0, t0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM t1, vt0, t0 WHERE ((((t1.c0)) NOT BETWEEN ((((vt0.c0)<=(t0.c0)))) AND ((x'dd4b')))) UNION SELECT DISTINCT vt0.c0 FROM t1, vt0, t0 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((((vt0.c0)<=(t0.c0)))) AND ((x'dd4b')))))) UNION SELECT DISTINCT vt0.c0 FROM t1, vt0, t0 WHERE ((((((t1.c0)) NOT BETWEEN ((((vt0.c0)<=(t0.c0)))) AND ((x'dd4b')))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t1, vt0, t0 NOT INDEXED;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB))>(((t0.c0)<<(t1.c0)))) GROUP BY t0.c0;
SELECT t0.c0 FROM t1 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB))>(((t0.c0)<<(t1.c0)))) GROUP BY t0.c0 HAVING ((COUNT(AVG(GROUP_CONCAT(1)))) IS TRUE) UNION ALL SELECT ALL t0.c0 FROM t1 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB))>(((t0.c0)<<(t1.c0)))) GROUP BY t0.c0 HAVING (NOT (((COUNT(AVG(GROUP_CONCAT(1)))) IS TRUE))) UNION ALL SELECT t0.c0 FROM t1 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB))>(((t0.c0)<<(t1.c0)))) GROUP BY t0.c0 HAVING ((((COUNT(AVG(GROUP_CONCAT(1)))) IS TRUE)) ISNULL);
SELECT ALL * FROM t1, vt0 NOT INDEXED;
SELECT * FROM t1, vt0 WHERE (CASE ((t1.c0)>>(t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN (((vt0.c0))<((t1.c0))) END) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE ((t1.c0)>>(t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN (((vt0.c0))<((t1.c0))) END))) UNION ALL SELECT * FROM t1, vt0 WHERE (((CASE ((t1.c0)>>(t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN (((vt0.c0))<((t1.c0))) END) ISNULL));
SELECT ALL * FROM t1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0) IS FALSE)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, t0 FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t1.c0)>(vt0.c0)))) AND ((t1.c0 COLLATE NOCASE))) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, t0 FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t1.c0)>(vt0.c0)))) AND ((t1.c0 COLLATE NOCASE))) GROUP BY t1.c0, vt0.c0 HAVING ((MIN(COUNT(*))) NOT BETWEEN (((((COUNT(*))AND(vt0.c0)))AND(vt0.c0))) AND (SUM(MIN(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, t0 FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t1.c0)>(vt0.c0)))) AND ((t1.c0 COLLATE NOCASE))) GROUP BY t1.c0, vt0.c0 HAVING (NOT (((MIN(COUNT(*))) NOT BETWEEN (((((COUNT(*))AND(vt0.c0)))AND(vt0.c0))) AND (SUM(MIN(GROUP_CONCAT(t1.c0))))))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, t0 NOT INDEXED FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t1.c0)>(vt0.c0)))) AND ((t1.c0 COLLATE NOCASE))) GROUP BY t1.c0, vt0.c0 HAVING ((((MIN(COUNT(*))) NOT BETWEEN (((((COUNT(*))AND(vt0.c0)))AND(vt0.c0))) AND (SUM(MIN(GROUP_CONCAT(t1.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0))) BETWEEN (((201196436) IS FALSE)) AND (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) BETWEEN (((201196436) IS FALSE)) AND (CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0))) BETWEEN (((201196436) IS FALSE)) AND (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM t1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM t1 NATURAL JOIN vt0 WHERE (((((t1.c0)OR('ﮡS')))OR(NULL))) UNION SELECT DISTINCT vt0.c0 FROM t1 NATURAL JOIN vt0 WHERE ((NOT (((((t1.c0)OR('ﮡS')))OR(NULL))))) UNION SELECT DISTINCT vt0.c0 FROM t1 NATURAL JOIN vt0 WHERE (((((((t1.c0)OR('ﮡS')))OR(NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t1 NATURAL JOIN vt0;
SELECT vt0.c0 FROM t0, t1 INDEXED BY i64, vt0 GROUP BY vt0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0 HAVING ((COUNT(*))>(AVG(AVG(TOTAL(COUNT(TOTAL(MIN(vt0.c0)))))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0 HAVING (NOT (((COUNT(*))>(AVG(AVG(TOTAL(COUNT(TOTAL(MIN(vt0.c0)))))))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c0 HAVING ((((COUNT(*))>(AVG(AVG(TOTAL(COUNT(TOTAL(MIN(vt0.c0))))))))) ISNULL);
SELECT ALL TOTAL(((('')) BETWEEN ((0.25368167858261004)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN 0.6550595302605681 WHEN t1.c0 THEN vt0.c0 END)))) FROM vt0, t1;
SELECT ALL vt0.c0 FROM t1, t0, vt0;
SELECT vt0.c0 FROM t1, t0, vt0 WHERE (((LAST_INSERT_ROWID()) IS TRUE)) UNION ALL SELECT vt0.c0 FROM t1, t0, vt0 WHERE ((NOT (((LAST_INSERT_ROWID()) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM t1, t0, vt0 WHERE (((((LAST_INSERT_ROWID()) IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM t1, t0, vt0;
SELECT DISTINCT t0.c0 FROM vt0, t1, t0;
SELECT DISTINCT t0.c0 FROM vt0, t1, t0 WHERE (((CAST(t1.c0 AS NUMERIC))<=(NULL))) UNION SELECT DISTINCT t0.c0 FROM vt0, t1, t0 WHERE ((NOT (((CAST(t1.c0 AS NUMERIC))<=(NULL))))) UNION SELECT DISTINCT t0.c0 FROM vt0, t1, t0 WHERE (((((CAST(t1.c0 AS NUMERIC))<=(NULL))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t1, t0;
SELECT t1.c0, vt0.c0 FROM t1, t0, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, t0, vt0 WHERE (CAST((t1.c0 IN ()) AS BLOB)) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1, t0, vt0 WHERE ((NOT (CAST((t1.c0 IN ()) AS BLOB)))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1, t0, vt0 WHERE (((CAST((t1.c0 IN ()) AS BLOB)) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, t0, vt0 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (json_extract((NOT (t0.c0)), (~ (t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (json_extract((NOT (t0.c0)), (~ (t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((json_extract((NOT (t0.c0)), (~ (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0 HAVING TOTAL(((((vt0.c0)OR(t1.c0)))AND(vt0.c0))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (TOTAL(((((vt0.c0)OR(t1.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((TOTAL(((((vt0.c0)OR(t1.c0)))AND(vt0.c0)))) ISNULL);
SELECT t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0 HAVING TOTAL(((((vt0.c0)OR(t1.c0)))AND(vt0.c0))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (TOTAL(((((vt0.c0)OR(t1.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((TOTAL(((((vt0.c0)OR(t1.c0)))AND(vt0.c0)))) ISNULL);
SELECT t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((json_patch(vt0.c0, vt0.c0) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((json_patch(vt0.c0, vt0.c0) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((json_patch(vt0.c0, vt0.c0) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE (((((((t1.c0)OR(t1.c0)))AND(t0.c0))) ISNULL)) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((((((t1.c0)OR(t1.c0)))AND(t0.c0))) ISNULL)))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE CASE t1.c0  WHEN '' THEN 0Xffffffff8bea021c ELSE t1.c0 END  WHEN t1.c0 THEN (((t1.c0, t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0))) WHEN t1.c0 THEN ((NULL) NOTNULL) WHEN ((t1.c0)GLOB(t1.c0)) THEN CASE t1.c0  WHEN '608349483' THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '-1087495271' ELSE t1.c0 END END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE CASE t1.c0  WHEN '' THEN 0Xffffffff8bea021c ELSE t1.c0 END  WHEN t1.c0 THEN (((t1.c0, t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0))) WHEN t1.c0 THEN ((NULL) NOTNULL) WHEN ((t1.c0)GLOB(t1.c0)) THEN CASE t1.c0  WHEN '608349483' THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '-1087495271' ELSE t1.c0 END END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CASE CASE t1.c0  WHEN '' THEN 0Xffffffff8bea021c ELSE t1.c0 END  WHEN t1.c0 THEN (((t1.c0, t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0))) WHEN t1.c0 THEN ((NULL) NOTNULL) WHEN ((t1.c0)GLOB(t1.c0)) THEN CASE t1.c0  WHEN '608349483' THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '-1087495271' ELSE t1.c0 END END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING SUM((SUM(COUNT(COUNT(AVG(SUM(t0.c0))))) IN ())) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (SUM((SUM(COUNT(COUNT(AVG(SUM(t0.c0))))) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((SUM((SUM(COUNT(COUNT(AVG(SUM(t0.c0))))) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING SUM((SUM(COUNT(COUNT(AVG(SUM(t0.c0))))) IN ())) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (SUM((SUM(COUNT(COUNT(AVG(SUM(t0.c0))))) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((SUM((SUM(COUNT(COUNT(AVG(SUM(t0.c0))))) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT MAX(CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS NUMERIC)) FROM t0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0)<=(t0.c0)) AS REAL)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)<=(t0.c0)) AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0)<=(t0.c0)) AS REAL)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0;
SELECT DISTINCT t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0 WHERE (CAST(((((((((t0.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0 WHERE ((NOT (CAST(((((((((t0.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0 WHERE (((CAST(((((((((t0.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t1 WHERE ((((~ (vt0.c0)))/(t1.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1 WHERE ((NOT ((((~ (vt0.c0)))/(t1.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1 WHERE ((((((~ (vt0.c0)))/(t1.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0, t0.c0;
SELECT t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0, t0.c0 HAVING MIN(LTRIM(COUNT(*))) UNION ALL SELECT ALL t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0, t0.c0 HAVING (NOT (MIN(LTRIM(COUNT(*))))) UNION ALL SELECT t1.c0, vt0.c0, t0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, vt0.c0, t0.c0 HAVING ((MIN(LTRIM(COUNT(*)))) ISNULL);
SELECT ALL * FROM t1, vt0, t0 INDEXED BY i4;
SELECT * FROM t1, vt0, t0 INDEXED BY i4 WHERE (((((INSTR(t1.c0, t1.c0))OR(t1.c0)))OR((- (vt0.c0))))) UNION ALL SELECT ALL * FROM t1, vt0, t0 INDEXED BY i4 WHERE ((NOT (((((INSTR(t1.c0, t1.c0))OR(t1.c0)))OR((- (vt0.c0))))))) UNION ALL SELECT ALL * FROM t1, vt0, t0 INDEXED BY i4 WHERE (((((((INSTR(t1.c0, t1.c0))OR(t1.c0)))OR((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM t1, vt0, t0 INDEXED BY i4;
SELECT DISTINCT t1.c0 FROM t0 LEFT OUTER JOIN vt0 ON '2034753208' CROSS JOIN t1 ON CASE WHEN (((('-228377044')AND(x'')))AND(t1.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) END;
SELECT DISTINCT t1.c0 FROM t0 LEFT OUTER JOIN vt0 ON '2034753208' CROSS JOIN t1 ON CASE WHEN (((('-228377044')AND(x'')))AND(t1.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) END WHERE (x'' COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT t1.c0 FROM t0 LEFT OUTER JOIN vt0 ON '2034753208' CROSS JOIN t1 ON CASE WHEN (((('-228377044')AND(x'')))AND(t1.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) END WHERE ((NOT (x'' COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0 FROM t0 LEFT OUTER JOIN vt0 ON '2034753208' CROSS JOIN t1 ON CASE WHEN (((('-228377044')AND(x'')))AND(t1.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) END WHERE (((x'' COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0 FROM t0 LEFT OUTER JOIN vt0 ON '2034753208' CROSS JOIN t1 ON CASE WHEN (((('-228377044')AND(x'')))AND(t1.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)) END;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND((t1.c0 IN ()))))OR((0.8741086746227281 IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND((t1.c0 IN ()))))OR((0.8741086746227281 IN ())))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND((t1.c0 IN ()))))OR((0.8741086746227281 IN ())))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((NULL IN ()))OR(t1.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (NULL)))) AND (('1830190833'))) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((NULL IN ()))OR(t1.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (NULL)))) AND (('1830190833'))) GROUP BY t1.c0, vt0.c0 HAVING GROUP_CONCAT(MAX(t1.c0)) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((NULL IN ()))OR(t1.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (NULL)))) AND (('1830190833'))) GROUP BY t1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(t1.c0)))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((NULL IN ()))OR(t1.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (NULL)))) AND (('1830190833'))) GROUP BY t1.c0, vt0.c0 HAVING ((GROUP_CONCAT(MAX(t1.c0))) ISNULL);
SELECT TOTAL((~ (((((((((t1.c0)AND(vt0.c0)))AND(t1.c0)))OR(vt0.c0)))AND(t0.c0))))) FROM vt0, t1, t0;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))/((t0.c0 IN ())));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))/((t0.c0 IN ()))) WHERE (CAST(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))/((t0.c0 IN ()))) WHERE ((NOT (CAST(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))/((t0.c0 IN ()))) WHERE (((CAST(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))/((t0.c0 IN ())));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ('-670561136') GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ('-670561136'))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((('-670561136') ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING ((TOTAL(TOTAL(SUM(t0.c0))))<=(COUNT(AVG(TOTAL(COUNT(t0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(TOTAL(SUM(t0.c0))))<=(COUNT(AVG(TOTAL(COUNT(t0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING ((((TOTAL(TOTAL(SUM(t0.c0))))<=(COUNT(AVG(TOTAL(COUNT(t0.c0))))))) ISNULL);
SELECT ALL * FROM t1, vt0, t0;
SELECT * FROM t1, vt0, t0 WHERE (((((vt0.c0 IN (vt0.c0, t1.c0)), LIKELY(vt0.c0), ABS(t0.c0)))==(((t0.c0 IN ()), vt0.c0 COLLATE NOCASE, t0.c0)))) UNION ALL SELECT ALL * FROM t1, vt0, t0 WHERE ((NOT (((((vt0.c0 IN (vt0.c0, t1.c0)), LIKELY(vt0.c0), ABS(t0.c0)))==(((t0.c0 IN ()), vt0.c0 COLLATE NOCASE, t0.c0)))))) UNION ALL SELECT ALL * FROM t1, vt0, t0 WHERE (((((((vt0.c0 IN (vt0.c0, t1.c0)), LIKELY(vt0.c0), ABS(t0.c0)))==(((t0.c0 IN ()), vt0.c0 COLLATE NOCASE, t0.c0)))) ISNULL));
SELECT ALL * FROM t1, vt0, t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))))AND(((t0.c0) IS TRUE)));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))))AND(((t0.c0) IS TRUE))) WHERE (CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))))AND(((t0.c0) IS TRUE))) WHERE ((NOT (CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))))AND(((t0.c0) IS TRUE))) WHERE (((CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))))AND(((t0.c0) IS TRUE)));
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) COLLATE NOCASE) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) COLLATE NOCASE))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '784212728' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('784212728')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('784212728') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '784212728' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('784212728')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('784212728') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) WHERE ('Z7') UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) WHERE ((NOT ('Z7'))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) WHERE ((('Z7') ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL);
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CAST(json_object(0.577031682164579, '') AS INTEGER)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CAST(json_object(0.577031682164579, '') AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CAST(json_object(0.577031682164579, '') AS INTEGER)) ISNULL));
SELECT t0.c0 FROM t0 INDEXED BY i64 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INDEXED BY i64 WHERE ((UPPER(t0.c0) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 INDEXED BY i64 WHERE ((NOT ((UPPER(t0.c0) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 INDEXED BY i64 WHERE ((((UPPER(t0.c0) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INDEXED BY i64 GROUP BY t0.c0;
SELECT vt0.c0 FROM t1, vt0 LEFT OUTER JOIN t0 ON t1.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 LEFT OUTER JOIN t0 ON t1.c0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) BETWEEN (((TOTAL(vt0.c0)) IS TRUE)) AND (t1.c0 COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM t1, vt0 LEFT OUTER JOIN t0 ON t1.c0 GROUP BY vt0.c0 HAVING (NOT (((MIN(COUNT(*))) BETWEEN (((TOTAL(vt0.c0)) IS TRUE)) AND (t1.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 LEFT OUTER JOIN t0 ON t1.c0 GROUP BY vt0.c0 HAVING ((((MIN(COUNT(*))) BETWEEN (((TOTAL(vt0.c0)) IS TRUE)) AND (t1.c0 COLLATE NOCASE))) ISNULL);
SELECT SUM((((((t0.c0 IN (vt0.c0, vt0.c0)))AND(t0.c0 COLLATE NOCASE)))OR((t1.c0 IN ())))) FROM vt0, t0, t1;
SELECT ALL t0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON ((((((vt0.c0) ISNULL))AND(CASE WHEN t1.c0 THEN vt0.c0 END)))OR(((((vt0.c0)AND(t0.c0)))AND(t1.c0))));
SELECT ALL t0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON ((((((vt0.c0) ISNULL))AND(CASE WHEN t1.c0 THEN vt0.c0 END)))OR(((((vt0.c0)AND(t0.c0)))AND(t1.c0)))) WHERE (((NULL) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c0)) AND (t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON ((((((vt0.c0) ISNULL))AND(CASE WHEN t1.c0 THEN vt0.c0 END)))OR(((((vt0.c0)AND(t0.c0)))AND(t1.c0)))) WHERE ((NOT (((NULL) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c0)) AND (t0.c0 COLLATE RTRIM))))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON ((((((vt0.c0) ISNULL))AND(CASE WHEN t1.c0 THEN vt0.c0 END)))OR(((((vt0.c0)AND(t0.c0)))AND(t1.c0)))) WHERE (((((NULL) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c0)) AND (t0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t0, vt0 RIGHT OUTER JOIN t1 ON ((((((vt0.c0) ISNULL))AND(CASE WHEN t1.c0 THEN vt0.c0 END)))OR(((((vt0.c0)AND(t0.c0)))AND(t1.c0))));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((((NOT (t1.c0)))OR((~ (t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((((NOT (t1.c0)))OR((~ (t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((((NOT (t1.c0)))OR((~ (t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 NOT INDEXED WHERE (ABS((NOT (t1.c0)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (ABS((NOT (t1.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((ABS((NOT (t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 NOT INDEXED, t0 GROUP BY t1.c0 HAVING SUM(SUM(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (SUM(SUM(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((SUM(SUM(t1.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOTNULL) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOTNULL) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON LENGTH(CASE '1679577042'  WHEN t1.c0 THEN t0.c0 END) RIGHT OUTER JOIN vt0 ON ((vt0.c0)%((vt0.c0 IN ())));
SELECT DISTINCT vt0.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON LENGTH(CASE '1679577042'  WHEN t1.c0 THEN t0.c0 END) RIGHT OUTER JOIN vt0 ON ((vt0.c0)%((vt0.c0 IN ()))) WHERE ((t1.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON LENGTH(CASE '1679577042'  WHEN t1.c0 THEN t0.c0 END) RIGHT OUTER JOIN vt0 ON ((vt0.c0)%((vt0.c0 IN ()))) WHERE ((NOT ((t1.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON LENGTH(CASE '1679577042'  WHEN t1.c0 THEN t0.c0 END) RIGHT OUTER JOIN vt0 ON ((vt0.c0)%((vt0.c0 IN ()))) WHERE ((((t1.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON LENGTH(CASE '1679577042'  WHEN t1.c0 THEN t0.c0 END) RIGHT OUTER JOIN vt0 ON ((vt0.c0)%((vt0.c0 IN ())));
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t0.c0, t1.c0;
SELECT vt0.c0, t0.c0, t1.c0 FROM vt0, t1, t0 WHERE ((((- (t1.c0)))%(((t0.c0)==(t0.c0))))) GROUP BY vt0.c0, t0.c0, t1.c0 UNION SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t1, t0 WHERE ((NOT ((((- (t1.c0)))%(((t0.c0)==(t0.c0))))))) GROUP BY vt0.c0, t0.c0, t1.c0 UNION SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t1, t0 WHERE ((((((- (t1.c0)))%(((t0.c0)==(t0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0, t1.c0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t1, t0 GROUP BY vt0.c0, t0.c0, t1.c0;
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7395151253910762)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7395151253910762)) GROUP BY t0.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7395151253910762)) GROUP BY t0.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7395151253910762)) GROUP BY t0.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM t1, t0, vt0;
SELECT * FROM t1, t0, vt0 WHERE (MAX(t0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 END, TRIM('J<', vt0.c0))) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE ((NOT (MAX(t0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 END, TRIM('J<', vt0.c0))))) UNION ALL SELECT * FROM t1, t0, vt0 WHERE (((MAX(t0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 END, TRIM('J<', vt0.c0))) ISNULL));
SELECT ALL * FROM t1, t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t1, t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t1, t0, vt0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0))<((t0.c0, vt0.c0, t1.c0))) THEN t0.c0 COLLATE RTRIM ELSE '' END) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t1, t0, vt0 WHERE ((NOT (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0))<((t0.c0, vt0.c0, t1.c0))) THEN t0.c0 COLLATE RTRIM ELSE '' END))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t1, t0, vt0 WHERE (((CASE CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0))<((t0.c0, vt0.c0, t1.c0))) THEN t0.c0 COLLATE RTRIM ELSE '' END) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM t1, t0, vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CAST((t1.c0 IN ()) AS INTEGER)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST((t1.c0 IN ()) AS INTEGER)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CAST((t1.c0 IN ()) AS INTEGER)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT (((vt0.c0)<=(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT ((NOT (((vt0.c0)<=(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (((NOT (((vt0.c0)<=(t1.c0))))) ISNULL);
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT (((vt0.c0)<=(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT ((NOT (((vt0.c0)<=(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (((NOT (((vt0.c0)<=(t1.c0))))) ISNULL);
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS FALSE)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS FALSE)))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 NOT INDEXED, t0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS FALSE)) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1, t0;
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1, t0 WHERE (SQLITE_SOURCE_ID()) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1, t0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1, t0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1, t0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 WHERE (CAST(((vt0.c0)AND(vt0.c0)) AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t1, vt0 WHERE ((NOT (CAST(((vt0.c0)AND(vt0.c0)) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t1, vt0 WHERE (((CAST(((vt0.c0)AND(vt0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING MIN(TOTAL(COUNT(*))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING (NOT (MIN(TOTAL(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((MIN(TOTAL(COUNT(*)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((x'0b6d')IS NOT(t0.c0)) COLLATE RTRIM) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((x'0b6d')IS NOT(t0.c0)) COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((x'0b6d')IS NOT(t0.c0)) COLLATE RTRIM) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, t1, t0;
SELECT DISTINCT * FROM vt0, t1, t0 WHERE ((((vt0.c0 COLLATE BINARY, CASE WHEN NULL THEN vt0.c0 END, CAST(t0.c0 AS BLOB)))<(((((t0.c0))<((vt0.c0))), ((t0.c0)<=(NULL)), CASE t0.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) UNION SELECT DISTINCT * FROM vt0, t1, t0 WHERE ((NOT ((((vt0.c0 COLLATE BINARY, CASE WHEN NULL THEN vt0.c0 END, CAST(t0.c0 AS BLOB)))<(((((t0.c0))<((vt0.c0))), ((t0.c0)<=(NULL)), CASE t0.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, t1, t0 WHERE ((((((vt0.c0 COLLATE BINARY, CASE WHEN NULL THEN vt0.c0 END, CAST(t0.c0 AS BLOB)))<(((((t0.c0))<((vt0.c0))), ((t0.c0)<=(NULL)), CASE t0.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((NULL))<((0.16875209218965437)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((NULL))<((0.16875209218965437)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((NULL))<((0.16875209218965437)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0, t1;
SELECT t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE (CAST(t1.c0 AS BLOB)) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (CAST(t1.c0 AS BLOB)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE (((CAST(t1.c0 AS BLOB)) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0, t1;
SELECT DISTINCT t1.c0, t0.c0, vt0.c0 FROM t0, vt0, t1;
SELECT DISTINCT t1.c0, t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE (vt0.c0) UNION SELECT DISTINCT t1.c0, t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT t1.c0, t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT t1.c0, t0.c0, vt0.c0 FROM t0, vt0, t1;
SELECT ALL vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0, t0 WHERE (((x'')<((~ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t1, vt0, t0 WHERE ((NOT (((x'')<((~ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t1, vt0, t0 WHERE (((((x'')<((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(x'a246') UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(x'a246'))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(x'a246')) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(x'a246') UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(x'a246'))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(x'a246')) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) ISNULL)))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED WHERE (((((CAST(t0.c0 AS TEXT)) ISNULL)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t1 INNER JOIN t0 ON vt0.c0;
SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t1 INNER JOIN t0 ON vt0.c0 WHERE (((((((vt0.c0)>=(t1.c0)))AND((t1.c0 IN (vt0.c0)))))OR(((((t0.c0)AND(vt0.c0)))OR(x''))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t1 INNER JOIN t0 ON vt0.c0 WHERE ((NOT (((((((vt0.c0)>=(t1.c0)))AND((t1.c0 IN (vt0.c0)))))OR(((((t0.c0)AND(vt0.c0)))OR(x''))))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM vt0 NOT INDEXED, t1 INNER JOIN t0 ON vt0.c0 WHERE (((((((((vt0.c0)>=(t1.c0)))AND((t1.c0 IN (vt0.c0)))))OR(((((t0.c0)AND(vt0.c0)))OR(x''))))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM vt0, t1 INNER JOIN t0 ON vt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((((45523204, t1.c0, t1.c0))=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((NULL) BETWEEN (t1.c0) AND (NULL))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((45523204, t1.c0, t1.c0))=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((NULL) BETWEEN (t1.c0) AND (NULL))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((((45523204, t1.c0, t1.c0))=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((NULL) BETWEEN (t1.c0) AND (NULL))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 INDEXED BY i64 GROUP BY t1.c0;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (CASE (((t1.c0))>=((t1.c0)))  WHEN CAST(t1.c0 AS NUMERIC) THEN t1.c0 WHEN ((1527472913) IS TRUE) THEN (+ ('-1176817116')) WHEN (((t1.c0))<((t1.c0))) THEN (NOT (t1.c0)) ELSE CAST(t1.c0 AS NUMERIC) END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE (((t1.c0))>=((t1.c0)))  WHEN CAST(t1.c0 AS NUMERIC) THEN t1.c0 WHEN ((1527472913) IS TRUE) THEN (+ ('-1176817116')) WHEN (((t1.c0))<((t1.c0))) THEN (NOT (t1.c0)) ELSE CAST(t1.c0 AS NUMERIC) END))) UNION ALL SELECT * FROM t1 WHERE (((CASE (((t1.c0))>=((t1.c0)))  WHEN CAST(t1.c0 AS NUMERIC) THEN t1.c0 WHEN ((1527472913) IS TRUE) THEN (+ ('-1176817116')) WHEN (((t1.c0))<((t1.c0))) THEN (NOT (t1.c0)) ELSE CAST(t1.c0 AS NUMERIC) END) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((((x'dd6c')AND(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((x'dd6c')AND(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((x'dd6c')AND(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (TOTAL_CHANGES()) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE (CAST(t1.c0 AS BLOB)) UNION ALL SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((NOT (CAST(t1.c0 AS BLOB)))) UNION ALL SELECT t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE (((CAST(t1.c0 AS BLOB)) ISNULL));
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM t0, t1, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c0)<=(vt0.c0)))|((('1121655066') NOTNULL)))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0)<=(vt0.c0)))|((('1121655066') NOTNULL)))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c0)<=(vt0.c0)))|((('1121655066') NOTNULL)))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c0 ELSE (((t0.c0))=((t0.c0))) END) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c0 ELSE (((t0.c0))=((t0.c0))) END))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (((CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c0 ELSE (((t0.c0))=((t0.c0))) END) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 INDEXED BY i4 GROUP BY t0.c0;
SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) ISNULL)))<=((CAST(vt0.c0 AS REAL))));
SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) ISNULL)))<=((CAST(vt0.c0 AS REAL)))) WHERE (LOWER(DISTINCT CAST(vt0.c0 AS REAL))) UNION ALL SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) ISNULL)))<=((CAST(vt0.c0 AS REAL)))) WHERE ((NOT (LOWER(DISTINCT CAST(vt0.c0 AS REAL))))) UNION ALL SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) ISNULL)))<=((CAST(vt0.c0 AS REAL)))) WHERE (((LOWER(DISTINCT CAST(vt0.c0 AS REAL))) ISNULL));
SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) ISNULL)))<=((CAST(vt0.c0 AS REAL))));
SELECT DISTINCT * FROM vt0, t1, t0;
SELECT DISTINCT * FROM vt0, t1, t0 WHERE (CAST(t0.c0 AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, t1, t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, t1, t0 WHERE (((CAST(t0.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, t1, t0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 WHERE ((((t1.c0)IS NOT(t1.c0)) IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT ((((t1.c0)IS NOT(t1.c0)) IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((((((t1.c0)IS NOT(t1.c0)) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0))>=((((t1.c0)>=(t0.c0))))) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0))>=((((t1.c0)>=(t0.c0))))) GROUP BY t1.c0, t0.c0 HAVING ((((((((((((COUNT(t1.c0))AND(COALESCE(DISTINCT COUNT(t1.c0), SUM(TOTAL(t1.c0)), MAX(NULL), GROUP_CONCAT('1466629025')))))OR(LOWER(t0.c0))))AND(COUNT(*))))OR(TOTAL(t1.c0))))AND(HEX(DISTINCT t0.c0))))AND(CASE t1.c0  WHEN t1.c0 THEN MIN(AVG(COUNT(*))) ELSE t1.c0 END)) UNION ALL SELECT t1.c0, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0))>=((((t1.c0)>=(t0.c0))))) GROUP BY t1.c0, t0.c0 HAVING (NOT (((((((((((((COUNT(t1.c0))AND(COALESCE(DISTINCT COUNT(t1.c0), SUM(TOTAL(t1.c0)), MAX(NULL), GROUP_CONCAT('1466629025')))))OR(LOWER(t0.c0))))AND(COUNT(*))))OR(TOTAL(t1.c0))))AND(HEX(DISTINCT t0.c0))))AND(CASE t1.c0  WHEN t1.c0 THEN MIN(AVG(COUNT(*))) ELSE t1.c0 END)))) UNION ALL SELECT t1.c0, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0))>=((((t1.c0)>=(t0.c0))))) GROUP BY t1.c0, t0.c0 HAVING ((((((((((((((COUNT(t1.c0))AND(COALESCE(DISTINCT COUNT(t1.c0), SUM(TOTAL(t1.c0)), MAX(NULL), GROUP_CONCAT('1466629025')))))OR(LOWER(t0.c0))))AND(COUNT(*))))OR(TOTAL(t1.c0))))AND(HEX(DISTINCT t0.c0))))AND(CASE t1.c0  WHEN t1.c0 THEN MIN(AVG(COUNT(*))) ELSE t1.c0 END))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOTNULL) FULL OUTER JOIN t1 ON (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c0))));
SELECT * FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOTNULL) FULL OUTER JOIN t1 ON (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) WHERE ((NOT ((NOT (t1.c0))))) UNION ALL SELECT * FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOTNULL) FULL OUTER JOIN t1 ON (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) WHERE ((NOT ((NOT ((NOT (t1.c0))))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOTNULL) FULL OUTER JOIN t1 ON (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) WHERE ((((NOT ((NOT (t1.c0))))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOTNULL) FULL OUTER JOIN t1 ON (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c0))));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((t1.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((t1.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0 COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY GROUP BY t0.c0, t1.c0 HAVING CASE COUNT(*)  WHEN ((NULL)IS NOT(TOTAL(GROUP_CONCAT(COUNT(*))))) THEN t0.c0 ELSE MAX(COUNT(*)) END UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY GROUP BY t0.c0, t1.c0 HAVING (NOT (CASE COUNT(*)  WHEN ((NULL)IS NOT(TOTAL(GROUP_CONCAT(COUNT(*))))) THEN t0.c0 ELSE MAX(COUNT(*)) END)) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY GROUP BY t0.c0, t1.c0 HAVING ((CASE COUNT(*)  WHEN ((NULL)IS NOT(TOTAL(GROUP_CONCAT(COUNT(*))))) THEN t0.c0 ELSE MAX(COUNT(*)) END) ISNULL);
SELECT ALL * FROM t1, vt0;
SELECT ALL * FROM t1, vt0 WHERE ((CASE t1.c0  WHEN vt0.c0 THEN 0.5364607709670115 ELSE t1.c0 END IN ())) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((NOT ((CASE t1.c0  WHEN vt0.c0 THEN 0.5364607709670115 ELSE t1.c0 END IN ())))) UNION ALL SELECT * FROM t1, vt0 WHERE ((((CASE t1.c0  WHEN vt0.c0 THEN 0.5364607709670115 ELSE t1.c0 END IN ())) ISNULL));
SELECT ALL * FROM t1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (ABS(DISTINCT NULL) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (ABS(DISTINCT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((ABS(DISTINCT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (CAST(t0.c0 AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(((t1.c0)IS NOT(AVG(t1.c0))) AS TEXT) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(((t1.c0)IS NOT(AVG(t1.c0))) AS TEXT))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(((t1.c0)IS NOT(AVG(t1.c0))) AS TEXT)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(((t1.c0)IS NOT(AVG(t1.c0))) AS TEXT) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(((t1.c0)IS NOT(AVG(t1.c0))) AS TEXT))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(((t1.c0)IS NOT(AVG(t1.c0))) AS TEXT)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (NULL) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((NULL) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((((((((t1.c0)OR(x'')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)) THEN x'' WHEN t1.c0 COLLATE BINARY THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN t1.c0 THEN t1.c0 END THEN (- (t1.c0)) WHEN CAST(NULL AS NUMERIC) THEN (((t1.c0, x'', t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, 0.839906133247954, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, ''))) ELSE ((NULL)<=(t1.c0)) END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE WHEN ((((((((t1.c0)OR(x'')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)) THEN x'' WHEN t1.c0 COLLATE BINARY THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN t1.c0 THEN t1.c0 END THEN (- (t1.c0)) WHEN CAST(NULL AS NUMERIC) THEN (((t1.c0, x'', t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, 0.839906133247954, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, ''))) ELSE ((NULL)<=(t1.c0)) END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN ((((((((t1.c0)OR(x'')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)) THEN x'' WHEN t1.c0 COLLATE BINARY THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN t1.c0 THEN t1.c0 END THEN (- (t1.c0)) WHEN CAST(NULL AS NUMERIC) THEN (((t1.c0, x'', t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, 0.839906133247954, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, ''))) ELSE ((NULL)<=(t1.c0)) END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0, vt0.c0, 859012233)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)GLOB(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((((vt0.c0 IN ()))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0, vt0.c0, 859012233)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)GLOB(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0 IN ()))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0, vt0.c0, 859012233)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)GLOB(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL MAX(UPPER(DISTINCT ((t0.c0)<>(vt0.c0)))) FROM t1, t0, vt0 ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0)<=('-746015076'))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CASE ''  WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) ISNULL) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(NULL)) THEN NULLIF(t0.c0, t1.c0) END;
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CASE ''  WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) ISNULL) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(NULL)) THEN NULLIF(t0.c0, t1.c0) END WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CASE ''  WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) ISNULL) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(NULL)) THEN NULLIF(t0.c0, t1.c0) END WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CASE ''  WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) ISNULL) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(NULL)) THEN NULLIF(t0.c0, t1.c0) END WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CASE ''  WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) ISNULL) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(NULL)) THEN NULLIF(t0.c0, t1.c0) END;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))) AND ((((x''))>=((t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))) AND ((((x''))>=((t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))) AND ((((x''))>=((t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS TEXT)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) IS FALSE) AS TEXT)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((t0.c0) IS FALSE) AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT * FROM t1, vt0 NATURAL JOIN t0;
SELECT ALL * FROM t1, vt0 NATURAL JOIN t0 WHERE (((((t1.c0) IS FALSE)) BETWEEN (json_array_length(t0.c0, t0.c0)) AND (CAST(t1.c0 AS REAL)))) UNION ALL SELECT * FROM t1, vt0 NATURAL JOIN t0 WHERE ((NOT (((((t1.c0) IS FALSE)) BETWEEN (json_array_length(t0.c0, t0.c0)) AND (CAST(t1.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM t1, vt0 NATURAL JOIN t0 WHERE (((((((t1.c0) IS FALSE)) BETWEEN (json_array_length(t0.c0, t0.c0)) AND (CAST(t1.c0 AS REAL)))) ISNULL));
SELECT * FROM t1, vt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (-2.031158838E9) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (-2.031158838E9))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((-2.031158838E9) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT ((t0.c0 COLLATE RTRIM IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((((t0.c0 COLLATE RTRIM IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (vt0.c0 IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0 IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (vt0.c0 IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0 IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))OR(((t0.c0)&(t0.c0)))))AND(CAST(t0.c0 AS TEXT)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0 IN ()))OR(((t0.c0)&(t0.c0)))))AND(CAST(t0.c0 AS TEXT)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0 IN ()))OR(((t0.c0)&(t0.c0)))))AND(CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0, t1;
SELECT DISTINCT * FROM t0, vt0, t1 WHERE (((CASE WHEN t0.c0 THEN t1.c0 ELSE vt0.c0 END) BETWEEN ((+ (vt0.c0))) AND ((t1.c0 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0, t1 WHERE ((NOT (((CASE WHEN t0.c0 THEN t1.c0 ELSE vt0.c0 END) BETWEEN ((+ (vt0.c0))) AND ((t1.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0, t1 WHERE (((((CASE WHEN t0.c0 THEN t1.c0 ELSE vt0.c0 END) BETWEEN ((+ (vt0.c0))) AND ((t1.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING CAST(x'' AS BLOB) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (CAST(x'' AS BLOB))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((CAST(x'' AS BLOB)) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING CAST(x'' AS BLOB) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (CAST(x'' AS BLOB))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((CAST(x'' AS BLOB)) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, vt0, t1;
SELECT vt0.c0, t0.c0, t1.c0 FROM t0 NOT INDEXED, vt0, t1 WHERE ((((- (vt0.c0)))AND(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, vt0, t1 WHERE ((NOT ((((- (vt0.c0)))AND(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, vt0, t1 NOT INDEXED WHERE ((((((- (vt0.c0)))AND(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, vt0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (TRIM(t0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (TRIM(t0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((TRIM(t0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((CAST('' AS INTEGER)))>=(('814410783')))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((CAST('' AS INTEGER)))>=(('814410783')))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((CAST('' AS INTEGER)))>=(('814410783')))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((TRIM(DISTINCT t1.c0)) NOT NULL) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (((TRIM(DISTINCT t1.c0)) NOT NULL))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((((TRIM(DISTINCT t1.c0)) NOT NULL)) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((TRIM(DISTINCT t1.c0)) NOT NULL) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (((TRIM(DISTINCT t1.c0)) NOT NULL))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((((TRIM(DISTINCT t1.c0)) NOT NULL)) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, t1, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((~ (CAST(t1.c0 AS TEXT)))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((NOT ((~ (CAST(t1.c0 AS TEXT)))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((((~ (CAST(t1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, t1, vt0;
SELECT vt0.c0, t1.c0, t0.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t0, t1, vt0 WHERE (((t0.c0)>(t0.c0)) COLLATE NOCASE) GROUP BY vt0.c0, t1.c0, t0.c0 UNION SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t0, t1, vt0 WHERE ((NOT (((t0.c0)>(t0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0, t1.c0, t0.c0 UNION SELECT ALL vt0.c0, t1.c0, t0.c0 FROM t0, t1, vt0 WHERE (((((t0.c0)>(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT vt0.c0, t1.c0, t0.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL * FROM vt0, t0, t1 INDEXED BY i64;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN (((t1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((t1.c0 IN (((t1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN (((t1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((CAST(t1.c0 AS REAL) IN (-17109635))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((CAST(t1.c0 AS REAL) IN (-17109635))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((CAST(t1.c0 AS REAL) IN (-17109635))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON ((((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.2600561835436298))) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON ((((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.2600561835436298))) GROUP BY vt0.c0, t0.c0 HAVING AVG(CASE t0.c0  WHEN MIN(vt0.c0) THEN t0.c0 ELSE t0.c0 END) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON ((((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.2600561835436298))) GROUP BY vt0.c0, t0.c0 HAVING (NOT (AVG(CASE t0.c0  WHEN MIN(vt0.c0) THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON ((((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c0))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.2600561835436298))) GROUP BY vt0.c0, t0.c0 HAVING ((AVG(CASE t0.c0  WHEN MIN(vt0.c0) THEN t0.c0 ELSE t0.c0 END)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(((vt0.c0)/(vt0.c0)))))OR(((((((((vt0.c0)AND(x'0780')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0) ISNULL))AND(((vt0.c0)/(vt0.c0)))))OR(((((((((vt0.c0)AND(x'0780')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0) ISNULL))AND(((vt0.c0)/(vt0.c0)))))OR(((((((((vt0.c0)AND(x'0780')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((CAST(t0.c0 AS REAL))>>('cq'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (((CAST(t0.c0 AS REAL))>>('cq'))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((((CAST(t0.c0 AS REAL))>>('cq'))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL t1.c0 FROM vt0 INNER JOIN t1 ON CAST(CASE ''  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL) RIGHT OUTER JOIN t0 ON (+ (t1.c0)) GROUP BY t1.c0;
SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON (NOT ('-746015076')) RIGHT OUTER JOIN vt0 ON IFNULL(((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT * FROM t1 FULL OUTER JOIN t0 ON (NOT ('-746015076')) RIGHT OUTER JOIN vt0 ON IFNULL(((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) WHERE (x'42ee002c') UNION ALL SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON (NOT ('-746015076')) RIGHT OUTER JOIN vt0 ON IFNULL(((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) WHERE ((NOT (x'42ee002c'))) UNION ALL SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON (NOT ('-746015076')) RIGHT OUTER JOIN vt0 ON IFNULL(((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) WHERE (((x'42ee002c') ISNULL));
SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON (NOT ('-746015076')) RIGHT OUTER JOIN vt0 ON IFNULL(((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_patch('', ((vt0.c0)>(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_patch('', ((vt0.c0)>(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_patch('', ((vt0.c0)>(vt0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((+ (x'')))OR(IFNULL(t0.c0, 1295792554))))OR((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((+ (x'')))OR(IFNULL(t0.c0, 1295792554))))OR((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((+ (x'')))OR(IFNULL(t0.c0, 1295792554))))OR((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT * FROM vt0, t1, t0;
SELECT ALL * FROM vt0, t1, t0 WHERE (((CAST(t1.c0 AS BLOB)) BETWEEN (((((t1.c0)OR(t0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS FALSE)))) UNION ALL SELECT * FROM vt0, t1, t0 WHERE ((NOT (((CAST(t1.c0 AS BLOB)) BETWEEN (((((t1.c0)OR(t0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE (((((CAST(t1.c0 AS BLOB)) BETWEEN (((((t1.c0)OR(t0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS FALSE)))) ISNULL));
SELECT * FROM vt0, t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0, vt0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0, vt0 WHERE (RTRIM(t0.c0) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0, vt0 WHERE ((NOT (RTRIM(t0.c0) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0, vt0 WHERE (((RTRIM(t0.c0) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0, vt0;
SELECT vt0.c0, t0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t1, vt0, t0 WHERE (x'') GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t1, vt0, t0 WHERE ((NOT (x''))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t1, vt0, t0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (HEX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((HEX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((t1.c0)<(0.21285492323281963 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((t1.c0)<(0.21285492323281963 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((t1.c0)<(0.21285492323281963 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (0.4840586800833375) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (0.4840586800833375))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((0.4840586800833375) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN (((('-133195018')GLOB(vt0.c0)))) AND ((((t0.c0) NOT NULL)))) LEFT OUTER JOIN t0 ON vt0.c0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN (((('-133195018')GLOB(vt0.c0)))) AND ((((t0.c0) NOT NULL)))) LEFT OUTER JOIN t0 ON vt0.c0 GROUP BY t0.c0, vt0.c0 HAVING MAX(MAX(TOTAL(COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN (((('-133195018')GLOB(vt0.c0)))) AND ((((t0.c0) NOT NULL)))) LEFT OUTER JOIN t0 ON vt0.c0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX(MAX(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN (((('-133195018')GLOB(vt0.c0)))) AND ((((t0.c0) NOT NULL)))) LEFT OUTER JOIN t0 ON vt0.c0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX(MAX(TOTAL(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (324455074) AND (t1.c0)))OR(LIKELIHOOD(NULL, 0.46409783958780826))))OR((((t1.c0))<((t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((t1.c0) NOT BETWEEN (324455074) AND (t1.c0)))OR(LIKELIHOOD(NULL, 0.46409783958780826))))OR((((t1.c0))<((t1.c0)))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0) NOT BETWEEN (324455074) AND (t1.c0)))OR(LIKELIHOOD(NULL, 0.46409783958780826))))OR((((t1.c0))<((t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 WHERE (CAST(t1.c0 AS BLOB) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0 WHERE ((NOT (CAST(t1.c0 AS BLOB) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE (((CAST(t1.c0 AS BLOB) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING CAST(((COUNT(TOTAL(GROUP_CONCAT(t1.c0)))) NOT BETWEEN (t0.c0) AND (t1.c0)) AS TEXT) UNION ALL SELECT ALL t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING (NOT (CAST(((COUNT(TOTAL(GROUP_CONCAT(t1.c0)))) NOT BETWEEN (t0.c0) AND (t1.c0)) AS TEXT))) UNION ALL SELECT ALL t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING ((CAST(((COUNT(TOTAL(GROUP_CONCAT(t1.c0)))) NOT BETWEEN (t0.c0) AND (t1.c0)) AS TEXT)) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0, t1 NOT INDEXED;
SELECT ALL t0.c0 FROM vt0, t0, t1 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((t0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, t1 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((t0.c0 COLLATE NOCASE)))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, t1 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((t0.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0, t1 NOT INDEXED;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ('4?\rF&#᳨V') UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ('4?\rF&#᳨V'))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((('4?\rF&#᳨V') ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT vt0.c0, t1.c0, t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((((t0.c0)IS NOT(t1.c0)))AND((('')AND(vt0.c0)))))OR((((0x42f71c42))==((vt0.c0))))) FULL OUTER JOIN vt0 ON ((0.7519581320164485)>(((0.40900636682121316)%(t0.c0)))) GROUP BY vt0.c0, t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0;
SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING ((CASE WHEN COUNT(*) THEN t1.c0 ELSE vt0.c0 END) NOT BETWEEN (COUNT(*)) AND ((+ (COUNT(*))))) UNION ALL SELECT ALL t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING (NOT (((CASE WHEN COUNT(*) THEN t1.c0 ELSE vt0.c0 END) NOT BETWEEN (COUNT(*)) AND ((+ (COUNT(*))))))) UNION ALL SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING ((((CASE WHEN COUNT(*) THEN t1.c0 ELSE vt0.c0 END) NOT BETWEEN (COUNT(*)) AND ((+ (COUNT(*)))))) ISNULL);
SELECT ALL t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0;
SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING ((CASE WHEN COUNT(*) THEN t1.c0 ELSE vt0.c0 END) NOT BETWEEN (COUNT(*)) AND ((+ (COUNT(*))))) UNION ALL SELECT ALL t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING (NOT (((CASE WHEN COUNT(*) THEN t1.c0 ELSE vt0.c0 END) NOT BETWEEN (COUNT(*)) AND ((+ (COUNT(*))))))) UNION ALL SELECT t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0 HAVING ((((CASE WHEN COUNT(*) THEN t1.c0 ELSE vt0.c0 END) NOT BETWEEN (COUNT(*)) AND ((+ (COUNT(*)))))) ISNULL);
SELECT ALL t1.c0, t0.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, vt0.c0;
SELECT * FROM vt0 INNER JOIN t1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))*(((t1.c0)%(t1.c0))));
SELECT ALL * FROM vt0 INNER JOIN t1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))*(((t1.c0)%(t1.c0)))) WHERE (((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)OR(t1.c0)))AND(t1.c0)))))AND((((325254013)) BETWEEN ((vt0.c0)) AND ((0.01153323724457822)))))) UNION ALL SELECT * FROM vt0 INNER JOIN t1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))*(((t1.c0)%(t1.c0)))) WHERE ((NOT (((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)OR(t1.c0)))AND(t1.c0)))))AND((((325254013)) BETWEEN ((vt0.c0)) AND ((0.01153323724457822)))))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))*(((t1.c0)%(t1.c0)))) WHERE (((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)OR(t1.c0)))AND(t1.c0)))))AND((((325254013)) BETWEEN ((vt0.c0)) AND ((0.01153323724457822)))))) ISNULL));
SELECT * FROM vt0 INNER JOIN t1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))*(((t1.c0)%(t1.c0))));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))AND(((t1.c0)<(t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 END))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))AND(((t1.c0)<(t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 END))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))AND(((t1.c0)<(t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 END))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING MAX((~ (t1.c0))) UNION ALL SELECT t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING (NOT (MAX((~ (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING ((MAX((~ (t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING MAX((~ (t1.c0))) UNION ALL SELECT t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING (NOT (MAX((~ (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0 HAVING ((MAX((~ (t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1, t0, vt0 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) IS FALSE))*(((t0.c0)IS NOT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) IS FALSE))*(((t0.c0)IS NOT(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) IS FALSE))*(((t0.c0)IS NOT(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t1.c0 FROM vt0, t1;
SELECT DISTINCT t1.c0 FROM vt0, t1 WHERE (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT t1.c0 FROM vt0, t1 WHERE ((NOT (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0 FROM vt0, t1 WHERE (((((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0 FROM vt0, t1;
SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT ALL t0.c0, t1.c0, vt0.c0 FROM vt0, t1, t0 WHERE (((CAST(t0.c0 AS TEXT))OR(((vt0.c0) IS TRUE)))) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t1, t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT))OR(((vt0.c0) IS TRUE)))))) GROUP BY t0.c0, t1.c0, vt0.c0 UNION SELECT ALL t0.c0, t1.c0, vt0.c0 FROM vt0, t1, t0 WHERE (((((CAST(t0.c0 AS TEXT))OR(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t1.c0, vt0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING AVG(((MAX(GROUP_CONCAT(t1.c0)))-(t1.c0))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (AVG(((MAX(GROUP_CONCAT(t1.c0)))-(t1.c0))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((AVG(((MAX(GROUP_CONCAT(t1.c0)))-(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)<<(t1.c0))) NOTNULL)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)<<(t1.c0))) NOTNULL)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)<<(t1.c0))) NOTNULL)) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE t1.c0  WHEN 0.703839322256904 THEN t1.c0 END) ISNULL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((CASE t1.c0  WHEN 0.703839322256904 THEN t1.c0 END) ISNULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CASE t1.c0  WHEN 0.703839322256904 THEN t1.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND ((((((t1.c0)OR(x'')))OR(t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 NOT INDEXED WHERE ((NOT ((((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND ((((((t1.c0)OR(x'')))OR(t1.c0)))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND ((((((t1.c0)OR(x'')))OR(t1.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c0, t1.c0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c0, t1.c0 HAVING ((GROUP_CONCAT(MAX(COUNT(*))))%(((((((((t0.c0)OR(MIN(MIN(t0.c0)))))AND(AVG(NULL))))AND(COUNT(*))))OR(vt0.c0)))) UNION ALL SELECT vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c0, t1.c0 HAVING (NOT (((GROUP_CONCAT(MAX(COUNT(*))))%(((((((((t0.c0)OR(MIN(MIN(t0.c0)))))AND(AVG(NULL))))AND(COUNT(*))))OR(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t1.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c0, t1.c0 HAVING ((((GROUP_CONCAT(MAX(COUNT(*))))%(((((((((t0.c0)OR(MIN(MIN(t0.c0)))))AND(AVG(NULL))))AND(COUNT(*))))OR(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, t1;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, t1 WHERE (HEX(DISTINCT ((-1231938318)&('-1624825365')))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, t1 WHERE ((NOT (HEX(DISTINCT ((-1231938318)&('-1624825365')))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, t1 WHERE (((HEX(DISTINCT ((-1231938318)&('-1624825365')))) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, t1;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, t1.c0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY WHERE (((t0.c0)*(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0, t0.c0, t1.c0 UNION SELECT vt0.c0, t0.c0, t1.c0 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY WHERE ((NOT (((t0.c0)*(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0, t0.c0, t1.c0 UNION SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY WHERE (((((t0.c0)*(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, t0.c0, t1.c0;
SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING TOTAL(TOTAL(t0.c0)) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (TOTAL(TOTAL(t0.c0)))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((TOTAL(TOTAL(t0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), (+ (-244101617)), (((vt0.c0))>=((vt0.c0)))))=((x'', CAST(t1.c0 AS TEXT), UPPER(t1.c0))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), (+ (-244101617)), (((vt0.c0))>=((vt0.c0)))))=((x'', CAST(t1.c0 AS TEXT), UPPER(t1.c0)))) WHERE (((CAST(t1.c0 AS TEXT)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), (+ (-244101617)), (((vt0.c0))>=((vt0.c0)))))=((x'', CAST(t1.c0 AS TEXT), UPPER(t1.c0)))) WHERE ((NOT (((CAST(t1.c0 AS TEXT)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), (+ (-244101617)), (((vt0.c0))>=((vt0.c0)))))==((x'', CAST(t1.c0 AS TEXT), UPPER(t1.c0)))) WHERE (((((CAST(t1.c0 AS TEXT)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), (+ (-244101617)), (((vt0.c0))>=((vt0.c0)))))=((x'', CAST(t1.c0 AS TEXT), UPPER(t1.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(((t1.c0)||(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(((t1.c0)||(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(((t1.c0)||(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(((t1.c0)||(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(((t1.c0)||(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(((t1.c0)||(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0, t0.c0, t1.c0 FROM vt0, t1 INNER JOIN t0 ON t1.c0;
SELECT vt0.c0, t0.c0, t1.c0 FROM vt0 NOT INDEXED, t1 INNER JOIN t0 ON t1.c0 WHERE ((0x3e8ee813 IN ())) UNION ALL SELECT ALL vt0.c0, t0.c0, t1.c0 FROM vt0, t1 INNER JOIN t0 ON t1.c0 WHERE ((NOT ((0X3e8ee813 IN ())))) UNION ALL SELECT vt0.c0, t0.c0, t1.c0 FROM vt0, t1 INNER JOIN t0 ON t1.c0 WHERE ((((0X3e8ee813 IN ())) ISNULL));
SELECT vt0.c0, t0.c0, t1.c0 FROM vt0, t1 INNER JOIN t0 ON t1.c0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (((t1.c0)IS NOT(t1.c0))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (((t1.c0)IS NOT(t1.c0))))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (((t1.c0)IS NOT(t1.c0))))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>(vt0.c0)) IN (((((NULL)OR(vt0.c0)))AND(t1.c0)))) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>(vt0.c0)) IN (((((NULL)OR(vt0.c0)))AND(t1.c0)))) GROUP BY t1.c0, vt0.c0 HAVING MIN(AVG(vt0.c0)) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>(vt0.c0)) IN (((((NULL)OR(vt0.c0)))AND(t1.c0)))) GROUP BY t1.c0, vt0.c0 HAVING (NOT (MIN(AVG(vt0.c0)))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>(vt0.c0)) IN (((((NULL)OR(vt0.c0)))AND(t1.c0)))) GROUP BY t1.c0, vt0.c0 HAVING ((MIN(AVG(vt0.c0))) ISNULL);
SELECT TOTAL((((((vt0.c0, t1.c0, t1.c0))>((t0.c0, t0.c0, t1.c0))))+((vt0.c0 IN ())))) FROM t0, vt0, t1 ORDER BY CASE (NOT (t0.c0))  WHEN ((t1.c0) BETWEEN (t0.c0) AND ('622743037')) THEN ((t1.c0)-(t0.c0)) ELSE t1.c0 COLLATE BINARY END ASC;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)OR((NULL IN ()))))OR(x''))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)OR((NULL IN ()))))OR(x''))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)OR((NULL IN ()))))OR(x''))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((((((((((((((((t1.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND((('ZQEoNeh')>>(t1.c0)))))AND((0.15716803806807256 IN ())));
SELECT DISTINCT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((((((((((((((((t1.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND((('ZQEoNeh')>>(t1.c0)))))AND((0.15716803806807256 IN ()))) WHERE (((((t1.c0) BETWEEN (t1.c0) AND (0.5952699637615861)))<<(CASE x''  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((((((((((((((((t1.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND((('ZQEoNeh')>>(t1.c0)))))AND((0.15716803806807256 IN ()))) WHERE ((NOT (((((t1.c0) BETWEEN (t1.c0) AND (0.5952699637615861)))<<(CASE x''  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((((((((((((((((t1.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND((('ZQEoNeh')>>(t1.c0)))))AND((0.15716803806807256 IN ()))) WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (0.5952699637615861)))<<(CASE x''  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((((((((((((((((t1.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND((('ZQEoNeh')>>(t1.c0)))))AND((0.15716803806807256 IN ())));
