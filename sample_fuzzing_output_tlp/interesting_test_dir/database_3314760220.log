-- Time: 2024/06/09 20:45:18
-- Database: database20
-- Database version: 3.40.0
-- seed value: 3314760220
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
DELETE FROM vt0 WHERE SQLITE_SOURCE_ID(); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0 WHERE (CASE WHEN (~ (x'')) THEN (('Xm') NOT NULL) END) ORDER BY ((vt0.c0 COLLATE BINARY)+(((vt0.c0)LIKE('129397164')))) ASC  NULLS FIRST; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM; -- 1ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA secure_delete = true; -- 4ms;
INSERT OR ABORT INTO vt0 VALUES (0.8010273611809011); -- 1ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 1ms;
ANALYZE main; -- 0ms;
DROP VIEW v0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 6ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (',L\W깅6Q'); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (((SQLITE_COMPILEOPTION_GET('0.8010273611809011')) BETWEEN (NULL) AND ((('0.8010273611809011')-(NULL))))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1080098348,2');\n; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.foreign_keys = true; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (SQLITE_VERSION()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c0)>=(rt0.c2)) THEN ((rt0.c0)|(NULL)) ELSE json_quote(vt0.c0) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN ((rt0.c0)>=(rt0.c2)) THEN ((rt0.c0)|(NULL)) ELSE json_quote(vt0.c0) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN ((rt0.c0)>=(rt0.c2)) THEN ((rt0.c0)|(NULL)) ELSE json_quote(vt0.c0) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 WHERE ((((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c1)/(vt0.c0)))))AND(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))))AND(rt0.c2)))OR(((vt0.c0)&(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c1)/(vt0.c0)))))AND(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))))AND(rt0.c2)))OR(((vt0.c0)&(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((((((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c1)/(vt0.c0)))))AND(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))))AND(rt0.c2)))OR(((vt0.c0)&(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c1)) BETWEEN ((MAX(COUNT(rt0.c0)))) AND ((SUM(rt0.c0)))) COLLATE RTRIM UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c1)) BETWEEN ((MAX(COUNT(rt0.c0)))) AND ((SUM(rt0.c0)))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((rt0.c1)) BETWEEN ((MAX(COUNT(rt0.c0)))) AND ((SUM(rt0.c0)))) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)==(rt0.c2)) IN ())) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)==(rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)=(rt0.c2)) IN ())) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN (- (rt0.c1)) ELSE ((rt0.c0)GLOB(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) ISNULL) THEN (- (rt0.c1)) ELSE ((rt0.c0)GLOB(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN ((rt0.c0) ISNULL) THEN (- (rt0.c1)) ELSE ((rt0.c0)GLOB(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT NULL)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0 IN ())) NOT NULL)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((MIN(rt0.c2))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((MIN(rt0.c2))))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((MIN(rt0.c2)))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c2))) IS FALSE)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)GLOB(rt0.c2))) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c2))) IS FALSE)) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CAST(x'' AS BLOB)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CAST(x'' AS BLOB)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CAST(x'' AS BLOB)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(CAST(vt0.c0 AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(CAST(vt0.c0 AS TEXT))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(CAST(vt0.c0 AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(CAST(vt0.c0 AS TEXT))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (',L\W깅6Q') UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (',L\W깅6Q'))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((',L\W깅6Q') ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (0.8010273611809011) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (0.8010273611809011))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((0.8010273611809011) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (CAST(rt0.c0 AS TEXT)) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((SUM(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1))))))!=((COUNT(*)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((SUM(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1))))))!=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((SUM(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1))))))!=((COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) ISNULL) AS INTEGER)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) ISNULL) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((COALESCE(rt0.c2, rt0.c0) IN (((rt0.c1)<(rt0.c2)), ((rt0.c0)<(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((COALESCE(rt0.c2, rt0.c0) IN (((rt0.c1)<(rt0.c2)), ((rt0.c0)<(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((COALESCE(rt0.c2, rt0.c0) IN (((rt0.c1)<(rt0.c2)), ((rt0.c0)<(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((x'13d4')) BETWEEN ((x'')) AND ((rt0.c1))))>=(((rt0.c0) IS TRUE))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((x'13d4')) BETWEEN ((x'')) AND ((rt0.c1))))>=(((rt0.c0) IS TRUE))) WHERE (((((((((((rt0.c0)OR(1.29397164E8)))AND(rt0.c2)))OR(rt0.c2)))OR('~p,2l**S'))) ISNULL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((x'13d4')) BETWEEN ((x'')) AND ((rt0.c1))))>=(((rt0.c0) IS TRUE))) WHERE ((NOT (((((((((((rt0.c0)OR(1.29397164E8)))AND(rt0.c2)))OR(rt0.c2)))OR('~p,2l**S'))) ISNULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((x'13d4')) BETWEEN ((x'')) AND ((rt0.c1))))>=(((rt0.c0) IS TRUE))) WHERE (((((((((((((rt0.c0)OR(1.29397164E8)))AND(rt0.c2)))OR(rt0.c2)))OR('~p,2l**S'))) ISNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 CROSS JOIN vt0 ON (((((x'13d4')) BETWEEN ((x'')) AND ((rt0.c1))))>=(((rt0.c0) IS TRUE))) GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING 0.7715496424551216 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (0.7715496424551216)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((0.7715496424551216) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING 0.7715496424551216 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (0.7715496424551216)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((0.7715496424551216) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)<(vt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0)|(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)|(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0)|(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(rt0.c1))) BETWEEN ((rt0.c0)) AND ((COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt0.c1))) BETWEEN ((rt0.c0)) AND ((COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((((GROUP_CONCAT(rt0.c1))) BETWEEN ((rt0.c0)) AND ((COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(rt0.c1))) BETWEEN ((rt0.c0)) AND ((COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt0.c1))) BETWEEN ((rt0.c0)) AND ((COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((((GROUP_CONCAT(rt0.c1))) BETWEEN ((rt0.c0)) AND ((COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- ((('1756450691')GLOB(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- ((('1756450691')GLOB(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- ((('1756450691')GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(((rt0.c1)%(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(((rt0.c1)%(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(((rt0.c1)%(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT((+ (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT((+ (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT((+ (rt0.c2)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT((+ (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT((+ (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT((+ (rt0.c2)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((- (1.29397164E8))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((- (1.29397164E8))))) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((- (1.29397164E8))) ISNULL));
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ('1080098348') UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ('1080098348'))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 NOT INDEXED WHERE ((('1080098348') ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((NOT (NULL)))OR('939406165' COLLATE NOCASE)))OR(((rt0.c0)GLOB(rt0.c2))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((NOT (NULL)))OR('939406165' COLLATE NOCASE)))OR(((rt0.c0)GLOB(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((NOT (NULL)))OR('939406165' COLLATE NOCASE)))OR(((rt0.c0)GLOB(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(MIN(GROUP_CONCAT(AVG(SUM(SUM(COUNT(rt0.c0))))), MAX(GROUP_CONCAT(COUNT(COUNT(*)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(MIN(GROUP_CONCAT(AVG(SUM(SUM(COUNT(rt0.c0))))), MAX(GROUP_CONCAT(COUNT(COUNT(*)))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(MIN(GROUP_CONCAT(AVG(SUM(SUM(COUNT(rt0.c0))))), MAX(GROUP_CONCAT(COUNT(COUNT(*))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2)||(rt0.c0)) IN (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2)||(rt0.c0)) IN (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2)||(rt0.c0)) IN (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST((+ (rt0.c1)) AS REAL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST((+ (rt0.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST((+ (rt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (CAST(((((vt0.c0)AND(rt0.c1)))AND(rt0.c0)) AS REAL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((((vt0.c0)AND(rt0.c1)))AND(rt0.c0)) AS REAL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((CAST(((((vt0.c0)AND(rt0.c1)))AND(rt0.c0)) AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING UNLIKELY(DISTINCT SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (UNLIKELY(DISTINCT SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((UNLIKELY(DISTINCT SUM(rt0.c1))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING UNLIKELY(DISTINCT SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (UNLIKELY(DISTINCT SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((UNLIKELY(DISTINCT SUM(rt0.c1))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT TOTAL(highlight(CAST(rt0.c0 AS NUMERIC), ((rt0.c0) NOTNULL), ((((vt0.c0)OR(0.17308722403861754)))OR(rt0.c1)), ((((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))) FROM vt0, rt0;
SELECT rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((COALESCE(rt0.c2, rt0.c0, rt0.c0, x'8180e946'))||(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((COALESCE(rt0.c2, rt0.c0, rt0.c0, x'8180e946'))||(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((((COALESCE(rt0.c2, rt0.c0, rt0.c0, x'8180e946'))||(rt0.c0))) ISNULL));
SELECT rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON (+ (x'618e')) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON (+ (x'618e')) WHERE ((~ (CAST(rt0.c0 AS BLOB)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON (+ (x'618e')) WHERE ((NOT ((~ (CAST(rt0.c0 AS BLOB)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON (+ (x'618e')) WHERE ((((~ (CAST(rt0.c0 AS BLOB)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON (+ (x'618e')) GROUP BY rt0.c1;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT MIN(((((rt0.c2) NOT BETWEEN (NULL) AND (x''))) BETWEEN (json_type(rt0.c1)) AND (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))))) FROM rt0, vt0;
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(LIKE(rt0.c2, rt0.c2, 'S'))))AND(CAST(rt0.c2 AS TEXT)));
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(LIKE(rt0.c2, rt0.c2, 'S'))))AND(CAST(rt0.c2 AS TEXT))) WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))) AND (((~ (rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(LIKE(rt0.c2, rt0.c2, 'S'))))AND(CAST(rt0.c2 AS TEXT))) WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))) AND (((~ (rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(LIKE(rt0.c2, rt0.c2, 'S'))))AND(CAST(rt0.c2 AS TEXT))) WHERE ((((((vt0.c0)) NOT BETWEEN ((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))) AND (((~ (rt0.c1)))))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(LIKE(rt0.c2, rt0.c2, 'S'))))AND(CAST(rt0.c2 AS TEXT)));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN (NULL))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN (NULL))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN (NULL))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ('-1994538786' COLLATE BINARY, LIKELIHOOD(x'', 0.039034016052671316)))) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ('-1994538786' COLLATE BINARY, LIKELIHOOD(x'', 0.039034016052671316)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ('-1994538786' COLLATE BINARY, LIKELIHOOD(x'', 0.039034016052671316)))) ISNULL));
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN '-1797827937' END) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN '-1797827937' END) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN '-1797827937' END) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (CAST(NULLIF(vt0.c0, vt0.c0) AS REAL)) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(NULLIF(vt0.c0, vt0.c0) AS REAL)))) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CAST(NULLIF(vt0.c0, vt0.c0) AS REAL)) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0))IS NOT(MIN(AVG(MIN(vt0.c0))) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0))IS NOT(MIN(AVG(MIN(vt0.c0))) COLLATE BINARY)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0))IS NOT(MIN(AVG(MIN(vt0.c0))) COLLATE BINARY))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL)))) UNION ALL SELECT * FROM vt0 WHERE (((NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c2, rt0.c1)))OR((- (rt0.c0)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c2 IN (rt0.c2, rt0.c1)))OR((- (rt0.c0)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c2 IN (rt0.c2, rt0.c1)))OR((- (rt0.c0)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 WHERE (CASE WHEN (- (rt0.c1)) THEN CAST(NULL AS INTEGER) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0) NOT BETWEEN (0xffffffffb22cda36) AND (vt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((x'b26a')+(rt0.c1)) ELSE ((vt0.c0)IS(vt0.c0)) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN (- (rt0.c1)) THEN CAST(NULL AS INTEGER) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0) NOT BETWEEN (0Xffffffffb22cda36) AND (vt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((x'b26a')+(rt0.c1)) ELSE ((vt0.c0)IS(vt0.c0)) END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN (- (rt0.c1)) THEN CAST(NULL AS INTEGER) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0) NOT BETWEEN (0xffffffffb22cda36) AND (vt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((x'b26a')+(rt0.c1)) ELSE ((vt0.c0)IS(vt0.c0)) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(SQLITE_COMPILEOPTION_USED(rt0.c2) AS BLOB) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(SQLITE_COMPILEOPTION_USED(rt0.c2) AS BLOB))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(SQLITE_COMPILEOPTION_USED(rt0.c2) AS BLOB)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(SQLITE_COMPILEOPTION_USED(rt0.c2) AS BLOB) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(SQLITE_COMPILEOPTION_USED(rt0.c2) AS BLOB))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(SQLITE_COMPILEOPTION_USED(rt0.c2) AS BLOB)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) ISNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)AND('-696916282')))OR(('1105272610' IN (rt0.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)AND('-696916282')))OR(('1105272610' IN (rt0.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND('-696916282')))OR(('1105272610' IN (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(TOTAL(TOTAL(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(TOTAL(TOTAL(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(TOTAL(TOTAL(GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((vt0.c0)OR(0.16448599122707386)))OR(x'763f')))AND(vt0.c0 COLLATE NOCASE)))OR((~ (rt0.c2))));
SELECT ALL vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((vt0.c0)OR(0.16448599122707386)))OR(x'763f')))AND(vt0.c0 COLLATE NOCASE)))OR((~ (rt0.c2)))) WHERE (((('414499408' IN (rt0.c0)))<<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((vt0.c0)OR(0.16448599122707386)))OR(x'763f')))AND(vt0.c0 COLLATE NOCASE)))OR((~ (rt0.c2)))) WHERE ((NOT (((('414499408' IN (rt0.c0)))<<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((vt0.c0)OR(0.16448599122707386)))OR(x'763f')))AND(vt0.c0 COLLATE NOCASE)))OR((~ (rt0.c2)))) WHERE (((((('414499408' IN (rt0.c0)))<<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT ALL vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((vt0.c0)OR(0.16448599122707386)))OR(x'763f')))AND(vt0.c0 COLLATE NOCASE)))OR((~ (rt0.c2))));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c2)GLOB(0.2697945944843112)))IS NOT((NOT (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (((((rt0.c2)GLOB(0.2697945944843112)))IS NOT((NOT (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c2)GLOB(0.2697945944843112)))IS NOT((NOT (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c0)IS(vt0.c0)))LIKE(((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0)IS(vt0.c0)))LIKE(((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c0)IS(vt0.c0)))LIKE(((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL)) BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((('129397164')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)<(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((('129397164')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)<(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((('129397164')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)<(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING AVG((MAX(COUNT(TOTAL(GROUP_CONCAT(rt0.c2)))) IN (MAX(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG((MAX(COUNT(TOTAL(GROUP_CONCAT(rt0.c2)))) IN (MAX(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG((MAX(COUNT(TOTAL(GROUP_CONCAT(rt0.c2)))) IN (MAX(rt0.c0))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (load_extension(rt0.c1)) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (load_extension(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((load_extension(rt0.c1)) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (0X7b671ac) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (0X7b671ac))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((0x7b671ac) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)/(x'')) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)/(x'')) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)/(x'')) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING MIN(TYPEOF(DISTINCT MIN(vt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (MIN(TYPEOF(DISTINCT MIN(vt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING ((MIN(TYPEOF(DISTINCT MIN(vt0.c0)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND (((~ (rt0.c2)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND (((~ (rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND (((~ (rt0.c2)))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TYPEOF(DISTINCT (rt0.c0 IN ()));
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TYPEOF(DISTINCT (rt0.c0 IN ())) WHERE ((- (((rt0.c0)/(rt0.c2))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TYPEOF(DISTINCT (rt0.c0 IN ())) WHERE ((NOT ((- (((rt0.c0)/(rt0.c2))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TYPEOF(DISTINCT (rt0.c0 IN ())) WHERE ((((- (((rt0.c0)/(rt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TYPEOF(DISTINCT (rt0.c0 IN ()));
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (IFNULL(rt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (IFNULL(rt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((IFNULL(rt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING TRIM(DISTINCT (SUM(rt0.c2) IN (vt0.c0, rt0.c1))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (TRIM(DISTINCT (SUM(rt0.c2) IN (vt0.c0, rt0.c1))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING ((TRIM(DISTINCT (SUM(rt0.c2) IN (vt0.c0, rt0.c1)))) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING TRIM(DISTINCT (SUM(rt0.c2) IN (vt0.c0, rt0.c1))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (TRIM(DISTINCT (SUM(rt0.c2) IN (vt0.c0, rt0.c1))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING ((TRIM(DISTINCT (SUM(rt0.c2) IN (vt0.c0, rt0.c1)))) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (NULLIF((rt0.c0 IN ()), ((vt0.c0)&(rt0.c1)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (NULLIF((rt0.c0 IN ()), ((vt0.c0)&(rt0.c1)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((NULLIF((rt0.c0 IN ()), ((vt0.c0)&(rt0.c1)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (LTRIM((vt0.c0 IN ()))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (LTRIM((vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((LTRIM((vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON '-1994538786' COLLATE RTRIM GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON '-1994538786' COLLATE RTRIM WHERE (rt0.c0) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON '-1994538786' COLLATE RTRIM WHERE ((NOT (rt0.c0))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON '-1994538786' COLLATE RTRIM WHERE (((rt0.c0) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON '-1994538786' COLLATE RTRIM GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0 HAVING (TRIM(DISTINCT MIN(vt0.c0), AVG(rt0.c1)) IN ((GROUP_CONCAT(COUNT(vt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0 HAVING (NOT ((TRIM(DISTINCT MIN(vt0.c0), AVG(rt0.c1)) IN ((GROUP_CONCAT(COUNT(vt0.c0)) IN ()))))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0 HAVING (((TRIM(DISTINCT MIN(vt0.c0), AVG(rt0.c1)) IN ((GROUP_CONCAT(COUNT(vt0.c0)) IN ())))) ISNULL);
SELECT rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0 HAVING (TRIM(DISTINCT MIN(vt0.c0), AVG(rt0.c1)) IN ((GROUP_CONCAT(COUNT(vt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0 HAVING (NOT ((TRIM(DISTINCT MIN(vt0.c0), AVG(rt0.c1)) IN ((GROUP_CONCAT(COUNT(vt0.c0)) IN ()))))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0 HAVING (((TRIM(DISTINCT MIN(vt0.c0), AVG(rt0.c1)) IN ((GROUP_CONCAT(COUNT(vt0.c0)) IN ())))) ISNULL);
SELECT rt0.c2, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((- (vt0.c0))) ISNULL) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN ((rt0.c1) NOT NULL) ELSE ((((0.5978197579372558)AND(rt0.c2)))OR(NULL)) END) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (+ (rt0.c2)) THEN ((rt0.c1) NOT NULL) ELSE ((((0.5978197579372558)AND(rt0.c2)))OR(NULL)) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE WHEN (+ (rt0.c2)) THEN ((rt0.c1) NOT NULL) ELSE ((((0.5978197579372558)AND(rt0.c2)))OR(NULL)) END) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-1649592052') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-1649592052'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('-1649592052') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN ('-605050349') AND (rt0.c1)) ELSE ((rt0.c1)&(rt0.c2)) END) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN ('-605050349') AND (rt0.c1)) ELSE ((rt0.c1)&(rt0.c2)) END))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN ('-605050349') AND (rt0.c1)) ELSE ((rt0.c1)&(rt0.c2)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(AVG(SUM(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(AVG(SUM(COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(AVG(SUM(COUNT(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)*(rt0.c0))) NOTNULL)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c0)*(rt0.c0))) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)*(rt0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((json_quote(vt0.c0))AND(rt0.c0));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((json_quote(vt0.c0))AND(rt0.c0)) WHERE (((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))<=(LOWER(rt0.c2)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((json_quote(vt0.c0))AND(rt0.c0)) WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))<=(LOWER(rt0.c2)))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((json_quote(vt0.c0))AND(rt0.c0)) WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))<=(LOWER(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((json_quote(vt0.c0))AND(rt0.c0));
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c1)>>(vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))))AND(((((vt0.c0)AND(vt0.c0)))OR(rt0.c2))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c1)>>(vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))))AND(((((vt0.c0)AND(vt0.c0)))OR(rt0.c2))))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c1)>>(vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))))AND(((((vt0.c0)AND(vt0.c0)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING UPPER(DISTINCT COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (UPPER(DISTINCT COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((UPPER(DISTINCT COUNT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING UPPER(DISTINCT COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (UPPER(DISTINCT COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((UPPER(DISTINCT COUNT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) WHERE (((json_extract(vt0.c0, vt0.c0, rt0.c1, rt0.c2))<=(((vt0.c0)GLOB(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) WHERE ((NOT (((json_extract(vt0.c0, vt0.c0, rt0.c1, rt0.c2))<=(((vt0.c0)GLOB(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) WHERE (((((json_extract(vt0.c0, vt0.c0, rt0.c1, rt0.c2))<=(((vt0.c0)GLOB(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c1)))>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))));
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((LOWER(rt0.c1))OR((+ (vt0.c0)))) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((LOWER(rt0.c1))OR((+ (vt0.c0)))) WHERE (((((rt0.c2)<=(rt0.c1))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((LOWER(rt0.c1))OR((+ (vt0.c0)))) WHERE ((NOT (((((rt0.c2)<=(rt0.c1))) ISNULL)))) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((LOWER(rt0.c1))OR((+ (vt0.c0)))) WHERE (((((((rt0.c2)<=(rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((LOWER(rt0.c1))OR((+ (vt0.c0)))) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND ('0.17308722403861754')) IN ((NOT (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c2) BETWEEN (rt0.c2) AND ('0.17308722403861754')) IN ((NOT (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c2) AND ('0.17308722403861754')) IN ((NOT (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))IS(((vt0.c0) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))IS(((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))IS(((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_VERSION() GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_VERSION() GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING ((((AVG(COUNT(vt0.c0)))OR(MAX(rt0.c1))))OR(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_VERSION() GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((((AVG(COUNT(vt0.c0)))OR(MAX(rt0.c1))))OR(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_VERSION() GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING ((((((AVG(COUNT(vt0.c0)))OR(MAX(rt0.c1))))OR(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL MIN(1.7976931348623157E308) FROM rt0;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (LIKELIHOOD((vt0.c0 IN (rt0.c1)), 0.8737738469295936)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (LIKELIHOOD((vt0.c0 IN (rt0.c1)), 0.8737738469295936)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD((vt0.c0 IN (rt0.c1)), 0.8737738469295936)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (rt0.c2 COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c1) ISNULL) IN ((((vt0.c0))>((rt0.c1)))))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1) ISNULL) IN ((((vt0.c0))>((rt0.c1)))))))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1) ISNULL) IN ((((vt0.c0))>((rt0.c1)))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 HAVING COUNT(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 HAVING (NOT (COUNT(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 HAVING ((COUNT(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT vt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 HAVING COUNT(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 HAVING (NOT (COUNT(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 HAVING ((COUNT(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT vt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0;
SELECT ALL MIN((+ ((rt0.c0 IN ())))) FROM rt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)<=(vt0.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0)<=(vt0.c0)) AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0)<=(vt0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((0.5692452353851164) ISNULL) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((0.5692452353851164) ISNULL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((0.5692452353851164) ISNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((1526556919)|(rt0.c0)))>>(CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((1526556919)|(rt0.c0)))>>(CAST(rt0.c0 AS TEXT)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((1526556919)|(rt0.c0)))>>(CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING 1.526556919E9 UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (1.526556919E9)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((1.526556919E9) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING 1.526556919E9 UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (1.526556919E9)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((1.526556919E9) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)&(vt0.c0)) AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)&(vt0.c0)) AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (CAST(((x'')+(rt0.c2)) AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(((x'')+(rt0.c2)) AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((CAST(((x'')+(rt0.c2)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c1) NOT NULL) THEN (NOT (rt0.c0)) WHEN ((rt0.c0) IS FALSE) THEN (+ (rt0.c1)) WHEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE ((vt0.c0)*(rt0.c1)) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c1) NOT NULL) THEN (NOT (rt0.c0)) WHEN ((rt0.c0) IS FALSE) THEN (+ (rt0.c1)) WHEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE ((vt0.c0)*(rt0.c1)) END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c1) NOT NULL) THEN (NOT (rt0.c0)) WHEN ((rt0.c0) IS FALSE) THEN (+ (rt0.c1)) WHEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE ((vt0.c0)*(rt0.c1)) END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(AVG(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(AVG(TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(AVG(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (x'dab4') UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (x'dab4'))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((x'dab4') ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((((((((json_type(rt0.c2))AND(((rt0.c1)*(rt0.c2)))))OR(((vt0.c0)>(vt0.c0)))))OR(NULL)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c1)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((((((((((json_type(rt0.c2))AND(((rt0.c1)*(rt0.c2)))))OR(((vt0.c0)>(vt0.c0)))))OR(NULL)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c1)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((((((((((json_type(rt0.c2))AND(((rt0.c1)*(rt0.c2)))))OR(((vt0.c0)>(vt0.c0)))))OR(NULL)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c1)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (CASE ((vt0.c0)LIKE(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN CASE NULL  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE x'e0ba' END WHEN ((rt0.c0)!=(rt0.c0)) THEN ((vt0.c0)>=(rt0.c1)) WHEN (NULL IN ()) THEN (~ (vt0.c0)) END) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE ((vt0.c0)LIKE(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN CASE NULL  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE x'e0ba' END WHEN ((rt0.c0)<>(rt0.c0)) THEN ((vt0.c0)>=(rt0.c1)) WHEN (NULL IN ()) THEN (~ (vt0.c0)) END))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((CASE ((vt0.c0)LIKE(rt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN CASE NULL  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE x'e0ba' END WHEN ((rt0.c0)!=(rt0.c0)) THEN ((vt0.c0)>=(rt0.c1)) WHEN (NULL IN ()) THEN (~ (vt0.c0)) END) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (LOWER(DISTINCT rt0.c2), (((rt0.c2, 1971170885, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, vt0.c0))))) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (LOWER(DISTINCT rt0.c2), (((rt0.c2, 1971170885, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, vt0.c0))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING COUNT(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (LOWER(DISTINCT rt0.c2), (((rt0.c2, 1971170885, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, vt0.c0))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (COUNT(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (LOWER(DISTINCT rt0.c2), (((rt0.c2, 1971170885, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, vt0.c0))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING ((COUNT(COUNT(rt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((('<I')<<(rt0.c1))))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((NOT ((('<I')<<(rt0.c1))))))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((NOT ((('<I')<<(rt0.c1))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING GROUP_CONCAT((- (TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT((- (TOTAL(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT((- (TOTAL(rt0.c2))))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS NUMERIC)) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS NUMERIC)))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS NUMERIC)) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (((vt0.c0) NOTNULL) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(CASE 0.1842190909615431  WHEN COUNT(vt0.c0) THEN COUNT(SUM(vt0.c0)) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(CASE 0.1842190909615431  WHEN COUNT(vt0.c0) THEN COUNT(SUM(vt0.c0)) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(CASE 0.1842190909615431  WHEN COUNT(vt0.c0) THEN COUNT(SUM(vt0.c0)) END)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((('0.14168324408583322'))<=((((rt0.c0)GLOB(rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((('0.14168324408583322'))<=((((rt0.c0)GLOB(rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE (((((('0.14168324408583322'))<=((((rt0.c0)GLOB(rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((CAST('1834985580' AS REAL))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST('1834985580' AS REAL))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST('1834985580' AS REAL))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING SUM(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((SUM(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((x'', vt0.c0 COLLATE NOCASE, ((vt0.c0)<=(vt0.c0))))>((vt0.c0, ((vt0.c0)LIKE(vt0.c0)), NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((x'', vt0.c0 COLLATE NOCASE, ((vt0.c0)<=(vt0.c0))))>((vt0.c0, ((vt0.c0)LIKE(vt0.c0)), NULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((x'', vt0.c0 COLLATE NOCASE, ((vt0.c0)<=(vt0.c0))))>((vt0.c0, ((vt0.c0)LIKE(vt0.c0)), NULL)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON '';
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON '' WHERE (CASE UPPER(vt0.c0)  WHEN vt0.c0 THEN (- (rt0.c2)) WHEN SQLITE_VERSION() THEN (rt0.c2 IN ()) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN CAST(rt0.c1 AS INTEGER) END) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON '' WHERE ((NOT (CASE UPPER(vt0.c0)  WHEN vt0.c0 THEN (- (rt0.c2)) WHEN SQLITE_VERSION() THEN (rt0.c2 IN ()) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN CAST(rt0.c1 AS INTEGER) END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON '' WHERE (((CASE UPPER(vt0.c0)  WHEN vt0.c0 THEN (- (rt0.c2)) WHEN SQLITE_VERSION() THEN (rt0.c2 IN ()) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN CAST(rt0.c1 AS INTEGER) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON '';
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 WHERE (rt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING SUM(SUBSTR(AVG(rt0.c0), rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (SUM(SUBSTR(AVG(rt0.c0), rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((SUM(SUBSTR(AVG(rt0.c0), rt0.c2))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (UNLIKELY(DISTINCT vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT (UNLIKELY(DISTINCT vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(MIN(TOTAL(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(MIN(TOTAL(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(MIN(TOTAL(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c2) NOT NULL))OR(((rt0.c1)!=(rt0.c0)))))AND(rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c2) NOT NULL))OR(((rt0.c1)<>(rt0.c0)))))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2) NOT NULL))OR(((rt0.c1)!=(rt0.c0)))))AND(rt0.c0))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((0.8776031140818323)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c2)OR(vt0.c0)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)), ((vt0.c0)+(rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED WHERE ((NOT ((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((0.8776031140818323)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c2)OR(vt0.c0)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)), ((vt0.c0)+(rt0.c2)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((0.8776031140818323)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c2)OR(vt0.c0)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)), ((vt0.c0)+(rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'')%(CAST(TOTAL(MIN(MIN(MAX(MIN(vt0.c0))))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((x'')%(CAST(TOTAL(MIN(MIN(MAX(MIN(vt0.c0))))) AS NUMERIC))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((x'')%(CAST(TOTAL(MIN(MIN(MAX(MIN(vt0.c0))))) AS NUMERIC)))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0)>=('wd?eB')) AS INTEGER)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c0)>=('wd?eB')) AS INTEGER)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CAST(((rt0.c0)>=('wd?eB')) AS INTEGER)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((rt0.c2 IN ())) AND (TYPEOF(rt0.c0)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((rt0.c2 IN ())) AND (TYPEOF(rt0.c0)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((rt0.c2 IN ())) AND (TYPEOF(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 END IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c0 THEN rt0.c0 END IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c0 END IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((MIN(rt0.c0))) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((TOTAL(MIN(414499408))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((MIN(rt0.c0))) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((TOTAL(MIN(414499408))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((MIN(rt0.c0))) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((TOTAL(MIN(414499408)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'') UNION ALL SELECT * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 WHERE (((x'') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((((- (vt0.c0))) NOT NULL)) UNION SELECT DISTINCT rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((- (vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((((((- (vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (NULLIF(DISTINCT (NOT (rt0.c2)), ((NULL)!=(rt0.c1)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (NULLIF(DISTINCT (NOT (rt0.c2)), ((NULL)!=(rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE (((NULLIF(DISTINCT (NOT (rt0.c2)), ((NULL)<>(rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0))||(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0))||(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0))||(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0))||(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0))||(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0))||(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE (((vt0.c0)<<(rt0.c2)) COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)<<(rt0.c2)) COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((vt0.c0)<<(rt0.c2)) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (UNLIKELY(((vt0.c0)-(0.9878381133656109)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (UNLIKELY(((vt0.c0)-(0.9878381133656109)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((UNLIKELY(((vt0.c0)-(0.9878381133656109)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (1136497560) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (1136497560))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((1136497560) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM((((rt0.c1 IN ())) BETWEEN ((~ (rt0.c2))) AND (SUBSTR(rt0.c1, rt0.c1)))) FROM rt0, vt0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((+ (rt0.c1)) IN ())) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((+ (rt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((+ (rt0.c1)) IN ())) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((vt0.c0)*(rt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((vt0.c0)*(rt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((((vt0.c0)*(rt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((NULL)) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))))) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((NULL)) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c0)IS NOT(rt0.c2)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c0)IS NOT(rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c0)IS NOT(rt0.c2)))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN (- (rt0.c1)) ELSE ((rt0.c2)*(rt0.c1)) END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (NOT (rt0.c0)) THEN (- (rt0.c1)) ELSE ((rt0.c2)*(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE WHEN (NOT (rt0.c0)) THEN (- (rt0.c1)) ELSE ((rt0.c2)*(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(GROUP_CONCAT(AVG(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(GROUP_CONCAT(AVG(vt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c2)<<(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((LIKELY(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c2)<<(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((LIKELY(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c2)<<(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (TYPEOF(((vt0.c0)IS(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (TYPEOF(((vt0.c0)IS(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((TYPEOF(((vt0.c0)IS(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE (((('<')<<(rt0.c0)) IN ())) GROUP BY vt0.c0, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((('<')<<(rt0.c0)) IN ())))) GROUP BY vt0.c0, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE (((((('<')<<(rt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CASE GROUP_CONCAT(COUNT(0.8256004963150402))  WHEN vt0.c0 THEN AVG(SUM(TOTAL(vt0.c0))) WHEN vt0.c0 THEN AVG(MIN(MIN(MIN(vt0.c0)))) WHEN vt0.c0 THEN MAX(COUNT(*)) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CASE GROUP_CONCAT(COUNT(0.8256004963150402))  WHEN vt0.c0 THEN AVG(SUM(TOTAL(vt0.c0))) WHEN vt0.c0 THEN AVG(MIN(MIN(MIN(vt0.c0)))) WHEN vt0.c0 THEN MAX(COUNT(*)) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CASE GROUP_CONCAT(COUNT(0.8256004963150402))  WHEN vt0.c0 THEN AVG(SUM(TOTAL(vt0.c0))) WHEN vt0.c0 THEN AVG(MIN(MIN(MIN(vt0.c0)))) WHEN vt0.c0 THEN MAX(COUNT(*)) END)) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))==(CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))==(CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 NOT INDEXED WHERE ((((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2)))) NOT BETWEEN (((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))) AND ((((rt0.c2))==((rt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2)))) NOT BETWEEN (((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))) AND ((((rt0.c2))==((rt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2)))) NOT BETWEEN (((((rt0.c2)OR(vt0.c0)))AND(rt0.c1))) AND ((((rt0.c2))=((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((COALESCE(rt0.c1, rt0.c1) IN (((rt0.c2)+('ږAu2'))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((COALESCE(rt0.c1, rt0.c1) IN (((rt0.c2)+('ږAu2'))))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((COALESCE(rt0.c1, rt0.c1) IN (((rt0.c2)+('ږAu2'))))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c0)AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c0)AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c0)AND(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c0)AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c0)AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c0)AND(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c2, rt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0, rt0.c2, rt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((((vt0.c0, rt0.c2, rt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS TEXT))<(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT))<(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))<(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c2)!=(((vt0.c0)GLOB(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((rt0.c2)!=(((vt0.c0)GLOB(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c2)<>(((vt0.c0)GLOB(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG(CASE WHEN rt0.c0 THEN '-1994538786' WHEN rt0.c2 THEN COUNT(*) WHEN rt0.c1 THEN SUM(rt0.c1) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(CASE WHEN rt0.c0 THEN '-1994538786' WHEN rt0.c2 THEN COUNT(*) WHEN rt0.c1 THEN SUM(rt0.c1) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(CASE WHEN rt0.c0 THEN '-1994538786' WHEN rt0.c2 THEN COUNT(*) WHEN rt0.c1 THEN SUM(rt0.c1) END)) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (0xfffffffffd9747ab) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (0xfffffffffd9747ab))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((0xfffffffffd9747ab) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (0.9986982745509776) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (0.9986982745509776))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((0.9986982745509776) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (CAST((~ (rt0.c2)) AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((NOT (CAST((~ (rt0.c2)) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((CAST((~ (rt0.c2)) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- ((vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- ((vt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- ((vt0.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- ((vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- ((vt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- ((vt0.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (UPPER(CASE WHEN '414499408' THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (UPPER(CASE WHEN '414499408' THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((UPPER(CASE WHEN '414499408' THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2)OR(rt0.c1)) END GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2)OR(rt0.c1)) END WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2)OR(rt0.c1)) END WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2)OR(rt0.c1)) END WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 CROSS JOIN vt0 ON CASE WHEN (NOT (NULL)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2)OR(rt0.c1)) END GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*))<<(TOTAL(SUM(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((COUNT(*))<<(TOTAL(SUM(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((COUNT(*))<<(TOTAL(SUM(rt0.c2))))) ISNULL);
SELECT ALL vt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM rt0, vt0 WHERE (CAST((((('??.%_]%JE')AND(vt0.c0)))OR(NULL)) AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST((((('??.%_]%JE')AND(vt0.c0)))OR(NULL)) AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE (((CAST((((('??.%_]%JE')AND(vt0.c0)))OR(NULL)) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c0)LIKE(rt0.c0))))=((((rt0.c0)%(rt0.c0)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0)LIKE(rt0.c0))))==((((rt0.c0)%(rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c0)LIKE(rt0.c0))))==((((rt0.c0)%(rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (((rt0.c0)||(rt0.c0))) AND ((rt0.c0 IN ())))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((rt0.c0) BETWEEN (((rt0.c0)||(rt0.c0))) AND ((rt0.c0 IN ())))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0) BETWEEN (((rt0.c0)||(rt0.c0))) AND ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING CAST(CASE rt0.c0  WHEN rt0.c2 THEN MIN(SUM(COUNT(COUNT(*)))) END AS INTEGER) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CAST(CASE rt0.c0  WHEN rt0.c2 THEN MIN(SUM(COUNT(COUNT(*)))) END AS INTEGER))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CAST(CASE rt0.c0  WHEN rt0.c2 THEN MIN(SUM(COUNT(COUNT(*)))) END AS INTEGER)) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END) AND (COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c2)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END) AND (COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c2)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END) AND (COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c2)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((('0.9986982745509776') BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((('0.9986982745509776') BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((('0.9986982745509776') BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON '-1e500' GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON '-1e500' WHERE ((~ (CAST(rt0.c2 AS INTEGER)))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON '-1e500' WHERE ((NOT ((~ (CAST(rt0.c2 AS INTEGER)))))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON '-1e500' WHERE ((((~ (CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON '-1e500' GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING ABS(DISTINCT ((TOTAL(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (AVG(TOTAL(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (ABS(DISTINCT ((TOTAL(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (AVG(TOTAL(rt0.c2))))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING ((ABS(DISTINCT ((TOTAL(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (AVG(TOTAL(rt0.c2)))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((ABS(rt0.c0) IN (((rt0.c2)>>(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((ABS(rt0.c0) IN (((rt0.c2)>>(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((ABS(rt0.c0) IN (((rt0.c2)>>(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (CAST((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, rt0.c0))) AS NUMERIC)) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, rt0.c0))) AS NUMERIC)))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CAST((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, rt0.c0))) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (rt0.c1 COLLATE NOCASE IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((rt0.c1 COLLATE NOCASE IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c1 COLLATE NOCASE IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (rt0.c1 COLLATE NOCASE IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((rt0.c1 COLLATE NOCASE IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c1 COLLATE NOCASE IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0)&(NULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0)&(NULL)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0)&(NULL)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (SUBSTR((rt0.c1 IN ()), (~ (vt0.c0)))) GROUP BY vt0.c0, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (SUBSTR((rt0.c1 IN ()), (~ (vt0.c0)))))) GROUP BY vt0.c0, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((SUBSTR((rt0.c1 IN ()), (~ (vt0.c0)))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING GROUP_CONCAT(COUNT(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.09566780358323246, rt0.c1, rt0.c1))) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.09566780358323246, rt0.c1, rt0.c1))) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.09566780358323246, rt0.c1, rt0.c1))) IN ())) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))>=(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))>=(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))>=(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (rt0.c2) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING ((0.9496368562877544)*(COUNT(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (((0.9496368562877544)*(COUNT(SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING ((((0.9496368562877544)*(COUNT(SUM(rt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((0.006330598072882054, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, DATE(vt0.c0, 0.24266405061808827, vt0.c0, 983928946, 0.7359408051693673), CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE BINARY, (((vt0.c0))>((vt0.c0))), 't-f5UR')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((0.006330598072882054, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, DATE(vt0.c0, 0.24266405061808827, vt0.c0, 983928946, 0.7359408051693673), CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE BINARY, (((vt0.c0))>((vt0.c0))), 't-f5UR')))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((0.006330598072882054, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, DATE(vt0.c0, 0.24266405061808827, vt0.c0, 983928946, 0.7359408051693673), CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE BINARY, (((vt0.c0))>((vt0.c0))), 't-f5UR')))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((('?')LIKE(TYPEOF(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((('?')LIKE(TYPEOF(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((('?')LIKE(TYPEOF(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CAST(((vt0.c0)%(TOTAL(rt0.c2))) AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(((vt0.c0)%(TOTAL(rt0.c2))) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(((vt0.c0)%(TOTAL(rt0.c2))) AS NUMERIC)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CAST(((vt0.c0)%(TOTAL(rt0.c2))) AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(((vt0.c0)%(TOTAL(rt0.c2))) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(((vt0.c0)%(TOTAL(rt0.c2))) AS NUMERIC)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (json_patch((NOT (vt0.c0)), vt0.c0 COLLATE BINARY)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (json_patch((NOT (vt0.c0)), vt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((json_patch((NOT (vt0.c0)), vt0.c0 COLLATE BINARY)) ISNULL));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS NUMERIC) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(x'ac41' AS TEXT)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(x'ac41' AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(x'ac41' AS TEXT)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c2)AND(rt0.c1))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c1))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c2)AND(rt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))%((((x''))>=((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)-(vt0.c0)))%((((x''))>=((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)-(vt0.c0)))%((((x''))>=((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING ((((((((((((SUM(rt0.c1))AND(SUM(rt0.c2))))AND(GROUP_CONCAT(COUNT(*)))))OR(MAX(rt0.c1))))OR(rt0.c0)))OR(GROUP_CONCAT(rt0.c0))))AND(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (((((((((((((SUM(rt0.c1))AND(SUM(rt0.c2))))AND(GROUP_CONCAT(COUNT(*)))))OR(MAX(rt0.c1))))OR(rt0.c0)))OR(GROUP_CONCAT(rt0.c0))))AND(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING ((((((((((((((SUM(rt0.c1))AND(SUM(rt0.c2))))AND(GROUP_CONCAT(COUNT(*)))))OR(MAX(rt0.c1))))OR(rt0.c0)))OR(GROUP_CONCAT(rt0.c0))))AND(COUNT(*)))) ISNULL);
SELECT ALL MIN(((((rt0.c0)<>(rt0.c2)))LIKE(rt0.c2 COLLATE BINARY))) FROM vt0, rt0 ORDER BY (+ (((rt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((('442207321' IN ()))) AND ((((rt0.c1)&(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((('442207321' IN ()))) AND ((((rt0.c1)&(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((('442207321' IN ()))) AND ((((rt0.c1)&(rt0.c1)))))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))>=((CAST(vt0.c0 AS INTEGER))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))>=((CAST(vt0.c0 AS INTEGER))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))>=((CAST(vt0.c0 AS INTEGER))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((TRIM(DISTINCT x'eb3b'))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE -1.781945996E9 END)))AND(((rt0.c0) ISNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((TRIM(DISTINCT x'eb3b'))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE -1.781945996E9 END)))AND(((rt0.c0) ISNULL)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((TRIM(DISTINCT x'eb3b'))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE -1.781945996E9 END)))AND(((rt0.c0) ISNULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c1 THEN rt0.c2 END, (~ (rt0.c2))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c1 THEN rt0.c2 END, (~ (rt0.c2))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(TOTAL(rt0.c1))) BETWEEN ((((rt0.c0))<>(('58652492')))) AND (((rt0.c1)+(MIN(COUNT(*)))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c1 THEN rt0.c2 END, (~ (rt0.c2))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((SUM(TOTAL(rt0.c1))) BETWEEN ((((rt0.c0))<>(('58652492')))) AND (((rt0.c1)+(MIN(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c1 THEN rt0.c2 END, (~ (rt0.c2))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((((SUM(TOTAL(rt0.c1))) BETWEEN ((((rt0.c0))<>(('58652492')))) AND (((rt0.c1)+(MIN(COUNT(*))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0))<=((vt0.c0))) IN (((0.3687903926315417) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0))<=((vt0.c0))) IN (((0.3687903926315417) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c0))) IN (((0.3687903926315417) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)<>('1894712982'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0)<>('1894712982'))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0)<>('1894712982'))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (json_remove((+ (vt0.c0)), (NOT (NULL)))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (json_remove((+ (vt0.c0)), (NOT (NULL)))))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((json_remove((+ (vt0.c0)), (NOT (NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING CASE WHEN SUM(rt0.c1) THEN MAX(rt0.c0) ELSE AVG(AVG(MAX(rt0.c2))) END UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (CASE WHEN SUM(rt0.c1) THEN MAX(rt0.c0) ELSE AVG(AVG(MAX(rt0.c2))) END)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((CASE WHEN SUM(rt0.c1) THEN MAX(rt0.c0) ELSE AVG(AVG(MAX(rt0.c2))) END) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)*((((rt0.c0))<((rt0.c1)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c1)*((((rt0.c0))<((rt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)*((((rt0.c0))<((rt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c1)==(rt0.c0)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)==(rt0.c0)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE WHEN ((rt0.c1)==(rt0.c0)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c1)AND(rt0.c1))) NOT NULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c1))) NOT NULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c1)AND(rt0.c1))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COALESCE(((((((((GROUP_CONCAT(rt0.c1))AND(MAX(rt0.c1))))OR(rt0.c1)))AND(COUNT(*))))AND(COUNT(NULL))), SUM(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COALESCE(((((((((GROUP_CONCAT(rt0.c1))AND(MAX(rt0.c1))))OR(rt0.c1)))AND(COUNT(*))))AND(COUNT(NULL))), SUM(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COALESCE(((((((((GROUP_CONCAT(rt0.c1))AND(MAX(rt0.c1))))OR(rt0.c1)))AND(COUNT(*))))AND(COUNT(NULL))), SUM(COUNT(rt0.c1)))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)+(rt0.c0))) NOTNULL)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)+(rt0.c0))) NOTNULL)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((rt0.c0)+(rt0.c0))) NOTNULL)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (((((NULL)AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (((((NULL)AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (((((NULL)AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(CASE ''  WHEN NULL THEN '' END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(CASE ''  WHEN NULL THEN '' END))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(CASE ''  WHEN NULL THEN '' END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((-2024354167) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE NULL END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((-2024354167) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE NULL END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((-2024354167) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE NULL END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE RTRIM, ((((rt0.c1)AND(rt0.c1)))OR(x'')), rt0.c2, ((rt0.c1) BETWEEN ('-875043885') AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c2 END, (+ (rt0.c0))))<=((TYPEOF(rt0.c2), (('HWa1s')IS(rt0.c2)), ((('983928946'))<=((rt0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1)AND(rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c1 END, rt0.c1)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE RTRIM, ((((rt0.c1)AND(rt0.c1)))OR(x'')), rt0.c2, ((rt0.c1) BETWEEN ('-875043885') AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c2 END, (+ (rt0.c0))))<=((TYPEOF(rt0.c2), (('HWa1s')IS(rt0.c2)), ((('983928946'))<=((rt0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1)AND(rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c1 END, rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE RTRIM, ((((rt0.c1)AND(rt0.c1)))OR(x'')), rt0.c2, ((rt0.c1) BETWEEN ('-875043885') AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c2 END, (+ (rt0.c0))))<=((TYPEOF(rt0.c2), (('HWa1s')IS(rt0.c2)), ((('983928946'))<=((rt0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1)AND(rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c1 END, rt0.c1)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON '6/~3VTꨓ~' GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON '6/~3VTꨓ~' GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING MAX(((MIN(COUNT(*))) IS TRUE)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON '6/~3VTꨓ~' GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (MAX(((MIN(COUNT(*))) IS TRUE)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON '6/~3VTꨓ~' GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING ((MAX(((MIN(COUNT(*))) IS TRUE))) ISNULL);
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(NULL))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(NULL))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(NULL))) ISNULL));
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))))<=((rt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))))<=((rt0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))))<=((rt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING COUNT(NULL) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING ((COUNT(NULL)) ISNULL);
SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING COUNT(NULL) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING ((COUNT(NULL)) ISNULL);
SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (-1426755514) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (-1426755514))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((-1426755514) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((rt0.c1 IN (vt0.c0, rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN ((rt0.c1 IN (vt0.c0, rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN ((rt0.c1 IN (vt0.c0, rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN ('-605050349') AND (rt0.c0))) BETWEEN (((rt0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) BETWEEN ('-605050349') AND (rt0.c0))) BETWEEN (((rt0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c2) BETWEEN ('-605050349') AND (rt0.c0))) BETWEEN (((rt0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((AVG(MAX(COUNT(rt0.c2)))) NOT NULL) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(MAX(COUNT(rt0.c2)))) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((((AVG(MAX(COUNT(rt0.c2)))) NOT NULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (HEX(NULLIF(vt0.c0, vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (HEX(NULLIF(vt0.c0, vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((HEX(NULLIF(vt0.c0, vt0.c0))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0, 0.9748273310933865, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), vt0.c0, vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)|(vt0.c0)), CAST('-503288919' AS TEXT), ((vt0.c0)IS(vt0.c0)), vt0.c0, ((((vt0.c0)OR('')))OR(vt0.c0)), vt0.c0, (NULL IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, 0.9748273310933865, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), vt0.c0, vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)|(vt0.c0)), CAST('-503288919' AS TEXT), ((vt0.c0)IS(vt0.c0)), vt0.c0, ((((vt0.c0)OR('')))OR(vt0.c0)), vt0.c0, (NULL IN ()))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, 0.9748273310933865, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), vt0.c0, vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)|(vt0.c0)), CAST('-503288919' AS TEXT), ((vt0.c0)IS(vt0.c0)), vt0.c0, ((((vt0.c0)OR('')))OR(vt0.c0)), vt0.c0, (NULL IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((NOT (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL((NOT (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((NOT (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL((NOT (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(((rt0.c2 COLLATE RTRIM) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) FROM rt0 ORDER BY NULL DESC  NULLS FIRST;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), IFNULL(vt0.c0, NULL)))<(('', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), TYPEOF(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), IFNULL(vt0.c0, NULL)))<(('', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), TYPEOF(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), IFNULL(vt0.c0, NULL)))<(('', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), TYPEOF(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS INTEGER))) WHERE (CASE WHEN ((rt0.c1)==(vt0.c0)) THEN (('	a') NOT BETWEEN (vt0.c0) AND (NULL)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS INTEGER))) WHERE ((NOT (CASE WHEN ((rt0.c1)==(vt0.c0)) THEN (('	a') NOT BETWEEN (vt0.c0) AND (NULL)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS INTEGER))) WHERE (((CASE WHEN ((rt0.c1)=(vt0.c0)) THEN (('	a') NOT BETWEEN (vt0.c0) AND (NULL)) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(COUNT(rt0.c0))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(json_array_length(vt0.c0)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(json_array_length(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(json_array_length(vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((((((((((('1460995165')OR('+L-8r')))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(PRINTF(rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c0)<(rt0.c1)))))OR(((rt0.c0)*(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((((((((((((('1460995165')OR('+L-8r')))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(PRINTF(rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c0)<(rt0.c1)))))OR(((rt0.c0)*(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((((((((((((('1460995165')OR('+L-8r')))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(PRINTF(rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c0)<(rt0.c1)))))OR(((rt0.c0)*(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((HEX(DISTINCT rt0.c0)))>=((((rt0.c2)*(0X867ae76)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((HEX(DISTINCT rt0.c0)))>=((((rt0.c2)*(0x867ae76)))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((HEX(DISTINCT rt0.c0)))>=((((rt0.c2)*(0x867ae76)))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(((COUNT(*)) NOT NULL)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(((COUNT(*)) NOT NULL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(((COUNT(*)) NOT NULL))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(DISTINCT rt0.c0)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (LIKELY(DISTINCT rt0.c0)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c0)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN (rt0.c2, rt0.c2))));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN (rt0.c2, rt0.c2)))) WHERE ((~ (x''))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN (rt0.c2, rt0.c2)))) WHERE ((NOT ((~ (x''))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN (rt0.c2, rt0.c2)))) WHERE ((((~ (x''))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN (rt0.c2, rt0.c2))));
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (rt0.c0 IN ()), 0x496344) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (rt0.c0 IN ()), 0x496344) WHERE ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))==((x'5b7b')))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (rt0.c0 IN ()), 0x496344) WHERE ((NOT ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))=((x'5b7b')))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (rt0.c0 IN ()), 0X496344) WHERE ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))=((x'5b7b')))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (rt0.c0 IN ()), 0x496344) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING ABS(MIN(COUNT(rt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (ABS(MIN(COUNT(rt0.c0))))) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING ((ABS(MIN(COUNT(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT rt0.c1 FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN (((0.3601193742704004, NULL, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))) END) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) IS FALSE) THEN (((0.3601193742704004, NULL, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))) END))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE (((CASE WHEN ((rt0.c2) IS FALSE) THEN (((0.3601193742704004, NULL, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))) END) ISNULL));
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0x190ecd5c) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 END) AND (x'5531')) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0X190ecd5c) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 END) AND (x'5531')) WHERE (vt0.c0) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0x190ecd5c) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 END) AND (x'5531')) WHERE ((NOT (vt0.c0))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0x190ecd5c) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 END) AND (x'5531')) WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0x190ecd5c) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 END) AND (x'5531')) GROUP BY rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING json_remove(SUM(rt0.c2), rt0.c0) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (json_remove(SUM(rt0.c2), rt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING ((json_remove(SUM(rt0.c2), rt0.c0)) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING json_remove(SUM(rt0.c2), rt0.c0) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (json_remove(SUM(rt0.c2), rt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING ((json_remove(SUM(rt0.c2), rt0.c0)) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2) IS TRUE))AND(rt0.c0 COLLATE BINARY)))OR((rt0.c2 IN ()))))AND(((rt0.c1)+(rt0.c1)))))OR(((rt0.c2) IS FALSE))) GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((NULLIF(rt0.c2, rt0.c0)) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.8376817610279206)) AND (((vt0.c0) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((NULLIF(rt0.c2, rt0.c0)) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.8376817610279206)) AND (((vt0.c0) NOTNULL)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((NULLIF(rt0.c2, rt0.c0)) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.8376817610279206)) AND (((vt0.c0) NOTNULL)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((ABS(DISTINCT rt0.c1))AND(rt0.c2)))OR((vt0.c0 IN (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((ABS(DISTINCT rt0.c1))AND(rt0.c2)))OR((vt0.c0 IN (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((((ABS(DISTINCT rt0.c1))AND(rt0.c2)))OR((vt0.c0 IN (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (COALESCE(vt0.c0, vt0.c0, vt0.c0, 0x7a623aa8) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, 0X7a623aa8) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0, vt0.c0, 0X7a623aa8) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(COUNT(*)))<(NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((AVG(COUNT(*)))<(NULL)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((AVG(COUNT(*)))<(NULL))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (-3.79989903E8) UNION ALL SELECT * FROM rt0 WHERE ((NOT (-3.79989903E8))) UNION ALL SELECT * FROM rt0 WHERE (((-3.79989903E8) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((+ (((NULL) BETWEEN (rt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ (((NULL) BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ (((NULL) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((rt0.c1 IN ())) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((rt0.c1 IN ())))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM(((rt0.c2) NOT BETWEEN (rt0.c1) AND (TOTAL(MAX(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(((rt0.c2) NOT BETWEEN (rt0.c1) AND (TOTAL(MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(((rt0.c2) NOT BETWEEN (rt0.c1) AND (TOTAL(MAX(rt0.c1)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (~ (((vt0.c0) IS TRUE))), (((vt0.c0 IN ())) IS TRUE) DESC;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) ORDER BY (~ (((vt0.c0) IS TRUE))), (((vt0.c0 IN ())) IS TRUE) DESC;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL)) ORDER BY (~ (((vt0.c0) IS TRUE))), (((vt0.c0 IN ())) IS TRUE) DESC;
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (rt0.c1) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(((TOTAL(rt0.c0)) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(((TOTAL(rt0.c0)) NOTNULL)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(((TOTAL(rt0.c0)) NOTNULL))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((0Xffffffff88c3e3e4) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((0Xffffffff88c3e3e4) ISNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((0xffffffff88c3e3e4) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(HEX(DISTINCT vt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(HEX(DISTINCT vt0.c0)))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(HEX(DISTINCT vt0.c0)))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(AVG(AVG(COUNT(x'')))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(AVG(AVG(COUNT(x'')))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(AVG(AVG(COUNT(x''))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))AND((+ (x'')))))AND(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0 IN (vt0.c0)))AND((+ (x'')))))AND(((vt0.c0) IS TRUE)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0 IN (vt0.c0)))AND((+ (x'')))))AND(((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB(UNLIKELY(DISTINCT 'ty+ie(')))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB(UNLIKELY(DISTINCT 'ty+ie(')))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB(UNLIKELY(DISTINCT 'ty+ie(')))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CAST((((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1))) AS BLOB)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST((((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1))) AS BLOB)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST((((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1))) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(((SUM(TOTAL(SUM(rt0.c2))))IS NOT(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(((SUM(TOTAL(SUM(rt0.c2))))IS NOT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(((SUM(TOTAL(SUM(rt0.c2))))IS NOT(rt0.c1)))) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (LIKELY(rt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (LIKELY(rt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((LIKELY(rt0.c0)) ISNULL));
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (HEX(rt0.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (HEX(rt0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((HEX(rt0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((+ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING AVG(SUM(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG(SUM(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(SUM(rt0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (LIKELIHOOD(((((((((rt0.c2)AND(rt0.c0)))AND('?c')))AND(rt0.c0)))AND(rt0.c1)), 0.10173267983899448)) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (LIKELIHOOD(((((((((rt0.c2)AND(rt0.c0)))AND('?c')))AND(rt0.c0)))AND(rt0.c1)), 0.10173267983899448)))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((LIKELIHOOD(((((((((rt0.c2)AND(rt0.c0)))AND('?c')))AND(rt0.c0)))AND(rt0.c1)), 0.10173267983899448)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (COALESCE(rt0.c0, vt0.c0) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (COALESCE(rt0.c0, vt0.c0) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((COALESCE(rt0.c0, vt0.c0) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING CASE WHEN INSTR(MAX(GROUP_CONCAT(MIN(rt0.c0))), rt0.c2) THEN COUNT(rt0.c0) END UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN INSTR(MAX(GROUP_CONCAT(MIN(rt0.c0))), rt0.c2) THEN COUNT(rt0.c0) END)) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN INSTR(MAX(GROUP_CONCAT(MIN(rt0.c0))), rt0.c2) THEN COUNT(rt0.c0) END) ISNULL);
SELECT ALL MAX(((((CAST(rt0.c1 AS TEXT))OR(rt0.c2)))OR('<⬗'))) FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (rt0.c1 IN ()) ELSE (x'1f281f89' IN (rt0.c1)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (rt0.c1 IN ()) ELSE (x'1f281f89' IN (rt0.c1)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (rt0.c1 IN ()) ELSE (x'1f281f89' IN (rt0.c1)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c0))!=((rt0.c2))))))AND(((rt0.c2) ISNULL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c0))!=((rt0.c2))))))AND(((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c0))!=((rt0.c2))))))AND(((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'' COLLATE BINARY COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x'' COLLATE BINARY COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'' COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((((TOTAL(vt0.c0)))<=((vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((((TOTAL(vt0.c0)))<=((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((((TOTAL(vt0.c0)))<=((vt0.c0))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)) WHEN (rt0.c2 IN ()) THEN UPPER(DISTINCT NULL) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) BETWEEN (vt0.c0) AND (x'f39e')) END) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)) WHEN (rt0.c2 IN ()) THEN UPPER(DISTINCT NULL) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) BETWEEN (vt0.c0) AND (x'f39e')) END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)) WHEN (rt0.c2 IN ()) THEN UPPER(DISTINCT NULL) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) BETWEEN (vt0.c0) AND (x'f39e')) END) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c2) IS FALSE))<=((NULL IN (vt0.c0, rt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) IS FALSE))<=((NULL IN (vt0.c0, rt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c2) IS FALSE))<=((NULL IN (vt0.c0, rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR((+ (vt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))AND((~ (rt0.c0)))))AND((~ (0xffffffff8756ce89)))))AND(((0.37000795748308135) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOTNULL))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR((+ (vt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))AND((~ (rt0.c0)))))AND((~ (0xffffffff8756ce89)))))AND(((0.37000795748308135) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOTNULL))) WHERE (CASE WHEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c2 AS INTEGER) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR((+ (vt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))AND((~ (rt0.c0)))))AND((~ (0xffffffff8756ce89)))))AND(((0.37000795748308135) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOTNULL))) WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c2 AS INTEGER) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR((+ (vt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))AND((~ (rt0.c0)))))AND((~ (0Xffffffff8756ce89)))))AND(((0.37000795748308135) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOTNULL))) WHERE (((CASE WHEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c2 AS INTEGER) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR((+ (vt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))AND((~ (rt0.c0)))))AND((~ (0xffffffff8756ce89)))))AND(((0.37000795748308135) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOTNULL))) GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(MIN(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(MIN(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(MIN(COUNT(rt0.c2)))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)=(rt0.c1)))>=(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)=(rt0.c1)))>=(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)=(rt0.c1)))>=(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (-4.26903659E8) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (-4.26903659E8))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((-4.26903659E8) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((COUNT(*))IS(MAX(rt0.c2))) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING (NOT (((COUNT(*))IS(MAX(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((((COUNT(*))IS(MAX(rt0.c2)))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((COUNT(*))IS(MAX(rt0.c2))) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING (NOT (((COUNT(*))IS(MAX(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2 HAVING ((((COUNT(*))IS(MAX(rt0.c2)))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))GLOB(((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))) GROUP BY vt0.c0, rt0.c2;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) NOTNULL)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c2) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((rt0.c2) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((((0X53f4b39f)OR(rt0.c1)))OR(x''))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CAST(rt0.c1 AS REAL) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((((0x53f4b39f)OR(rt0.c1)))OR(x''))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CAST(rt0.c1 AS REAL) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((((0x53f4b39f)OR(rt0.c1)))OR(x''))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CAST(rt0.c1 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((((((TOTAL('-2105760501'))OR(TOTAL(x'af50'))))AND(rt0.c2)))OR(rt0.c1)))AND(COUNT(*)))) NOTNULL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((((((((TOTAL('-2105760501'))OR(TOTAL(x'af50'))))AND(rt0.c2)))OR(rt0.c1)))AND(COUNT(*)))) NOTNULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((((((((TOTAL('-2105760501'))OR(TOTAL(x'af50'))))AND(rt0.c2)))OR(rt0.c1)))AND(COUNT(*)))) NOTNULL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((((((TOTAL('-2105760501'))OR(TOTAL(x'af50'))))AND(rt0.c2)))OR(rt0.c1)))AND(COUNT(*)))) NOTNULL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((((((((TOTAL('-2105760501'))OR(TOTAL(x'af50'))))AND(rt0.c2)))OR(rt0.c1)))AND(COUNT(*)))) NOTNULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((((((((TOTAL('-2105760501'))OR(TOTAL(x'af50'))))AND(rt0.c2)))OR(rt0.c1)))AND(COUNT(*)))) NOTNULL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(NULL AS TEXT)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (CAST((+ ('Oi%JVfQ')) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST((+ ('Oi%JVfQ')) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((CAST((+ ('Oi%JVfQ')) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (((rt0.c2)LIKE(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((~ (((rt0.c2)LIKE(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (((rt0.c2)LIKE(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c1) AND (TOTAL(rt0.c1))) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c1) AND (TOTAL(rt0.c1))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c1) AND (TOTAL(rt0.c1))) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c1) AND (TOTAL(rt0.c1))) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c1) AND (TOTAL(rt0.c1))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c1) AND (TOTAL(rt0.c1))) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((((vt0.c0 IN (rt0.c2)))AND(((((vt0.c0)OR(x'')))AND('0.24266405061808827')))))AND(CASE 0.6014716658971276  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND((+ (rt0.c1)))))OR((+ (rt0.c1))));
SELECT ALL vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((((vt0.c0 IN (rt0.c2)))AND(((((vt0.c0)OR(x'')))AND('0.24266405061808827')))))AND(CASE 0.6014716658971276  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND((+ (rt0.c1)))))OR((+ (rt0.c1)))) WHERE ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))>(((rt0.c0 IN ()))))) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((((vt0.c0 IN (rt0.c2)))AND(((((vt0.c0)OR(x'')))AND('0.24266405061808827')))))AND(CASE 0.6014716658971276  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND((+ (rt0.c1)))))OR((+ (rt0.c1)))) WHERE ((NOT ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))>(((rt0.c0 IN ()))))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((((vt0.c0 IN (rt0.c2)))AND(((((vt0.c0)OR(x'')))AND('0.24266405061808827')))))AND(CASE 0.6014716658971276  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND((+ (rt0.c1)))))OR((+ (rt0.c1)))) WHERE ((((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))>(((rt0.c0 IN ()))))) ISNULL));
SELECT vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((((vt0.c0 IN (rt0.c2)))AND(((((vt0.c0)OR(x'')))AND('0.24266405061808827')))))AND(CASE 0.6014716658971276  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND((+ (rt0.c1)))))OR((+ (rt0.c1))));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((NULL) NOT NULL)) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT (((NULL) NOT NULL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 WHERE (0.9812615578253154) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT (0.9812615578253154))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((0.9812615578253154) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((((MAX(rt0.c0))GLOB(AVG(rt0.c0))), COUNT(*), AVG(MIN(MAX(rt0.c0)))))!=((COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))), LIKELIHOOD(MIN(rt0.c2), 0.06746109222873664), (rt0.c2 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT ((((((MAX(rt0.c0))GLOB(AVG(rt0.c0))), COUNT(*), AVG(MIN(MAX(rt0.c0)))))!=((COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))), LIKELIHOOD(MIN(rt0.c2), 0.06746109222873664), (rt0.c2 IN ())))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((((((MAX(rt0.c0))GLOB(AVG(rt0.c0))), COUNT(*), AVG(MIN(MAX(rt0.c0)))))<>((COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))), LIKELIHOOD(MIN(rt0.c2), 0.06746109222873664), (rt0.c2 IN ()))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2)))) IS TRUE)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2)))) IS TRUE)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2)))) IS TRUE)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((rt0.c1)>=(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((rt0.c1)>=(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((rt0.c1)>=(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 WHERE (CAST(CAST('cL' AS TEXT) AS INTEGER)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST(CAST('cL' AS TEXT) AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((CAST(CAST('cL' AS TEXT) AS INTEGER)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(MAX(vt0.c0)))OR(SUM(GROUP_CONCAT(NULL)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((- (vt0.c0)))))AND(MAX(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((COUNT(MAX(vt0.c0)))OR(SUM(GROUP_CONCAT(NULL)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((- (vt0.c0)))))AND(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((COUNT(MAX(vt0.c0)))OR(SUM(GROUP_CONCAT(NULL)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((- (vt0.c0)))))AND(MAX(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (vt0.c0)) COLLATE NOCASE) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN (((rt0.c2)) BETWEEN (('1968922932')) AND ((rt0.c1))) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN ((rt0.c2)AND(rt0.c1)) THEN ((rt0.c0) NOT NULL) WHEN 0X7f4c5d16 THEN ((rt0.c1)>=(rt0.c2)) END) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE (rt0.c0 IN ())  WHEN (((rt0.c2)) BETWEEN (('1968922932')) AND ((rt0.c1))) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN ((rt0.c2)AND(rt0.c1)) THEN ((rt0.c0) NOT NULL) WHEN 0X7f4c5d16 THEN ((rt0.c1)>=(rt0.c2)) END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE (rt0.c0 IN ())  WHEN (((rt0.c2)) BETWEEN (('1968922932')) AND ((rt0.c1))) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN ((rt0.c2)AND(rt0.c1)) THEN ((rt0.c0) NOT NULL) WHEN 0X7f4c5d16 THEN ((rt0.c1)>=(rt0.c2)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(vt0.c0))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c1) IS FALSE)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c1) IS FALSE))) WHERE (rt0.c1) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c1) IS FALSE))) WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c1) IS FALSE))) WHERE (((rt0.c1) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c1) IS FALSE)));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (LIKELIHOOD((+ (vt0.c0)), 0.6946660825417779)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (LIKELIHOOD((+ (vt0.c0)), 0.6946660825417779)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((LIKELIHOOD((+ (vt0.c0)), 0.6946660825417779)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((- (vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((- (vt0.c0)))))OR(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((- (vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING SUM(GROUP_CONCAT(SUM(MAX(MIN(COUNT(TOTAL(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SUM(GROUP_CONCAT(SUM(MAX(MIN(COUNT(TOTAL(rt0.c1))))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(GROUP_CONCAT(SUM(MAX(MIN(COUNT(TOTAL(rt0.c1)))))))) ISNULL);
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((~ ((((rt0.c0))>=((0.14168324408583322)))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((~ ((((rt0.c0))>=((0.14168324408583322)))))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((~ ((((rt0.c0))>=((0.14168324408583322)))))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (CAST(vt0.c0 AS INTEGER)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(SUM(SUM(vt0.c0)) AS BLOB) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(SUM(SUM(vt0.c0)) AS BLOB) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(SUM(SUM(vt0.c0)) AS BLOB) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(SUM(SUM(vt0.c0)) AS BLOB) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(SUM(SUM(vt0.c0)) AS BLOB) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(SUM(SUM(vt0.c0)) AS BLOB) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0)<(rt0.c2)))GLOB((((rt0.c1, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c2, rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)<(rt0.c2)))GLOB((((rt0.c1, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c2, rt0.c1)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c0)<(rt0.c2)))GLOB((((rt0.c1, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c2, rt0.c1)))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1)<(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1)<(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1)<(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (TYPEOF(DISTINCT ((rt0.c2) BETWEEN (0.7283071473418596) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c2) BETWEEN (0.7283071473418596) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((TYPEOF(DISTINCT ((rt0.c2) BETWEEN (0.7283071473418596) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE '\Hoᯑw'  WHEN x'' THEN 0xffffffffa225bd34 END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE '\Hoᯑw'  WHEN x'' THEN 0Xffffffffa225bd34 END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE '\Hoᯑw'  WHEN x'' THEN 0Xffffffffa225bd34 END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((0X3a837a25)>=(CAST(AVG(rt0.c1) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (((0x3a837a25)>=(CAST(AVG(rt0.c1) AS NUMERIC))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((0X3a837a25)>=(CAST(AVG(rt0.c1) AS NUMERIC)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((0X3a837a25)>=(CAST(AVG(rt0.c1) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (((0x3a837a25)>=(CAST(AVG(rt0.c1) AS NUMERIC))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((0X3a837a25)>=(CAST(AVG(rt0.c1) AS NUMERIC)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1) IS FALSE), (rt0.c2 IN ()), rt0.c0))==((((rt0.c0)<(rt0.c2)), (NOT (rt0.c2)), ((rt0.c0)AND(rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c1) IS FALSE), (rt0.c2 IN ()), rt0.c0))=((((rt0.c0)<(rt0.c2)), (NOT (rt0.c2)), ((rt0.c0)AND(rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1) IS FALSE), (rt0.c2 IN ()), rt0.c0))==((((rt0.c0)<(rt0.c2)), (NOT (rt0.c2)), ((rt0.c0)AND(rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT(((vt0.c0)GLOB(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))IS NOT(((vt0.c0)GLOB(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))IS NOT(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c1)))))OR(LENGTH(rt0.c1))))OR('0.8776031140818323')))AND((rt0.c1 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c1)))))OR(LENGTH(rt0.c1))))OR('0.8776031140818323')))AND((rt0.c1 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c1)))))OR(LENGTH(rt0.c1))))OR('0.8776031140818323')))AND((rt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((0xc57c88a) NOT BETWEEN (rt0.c2) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((0xc57c88a) NOT BETWEEN (rt0.c2) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((((((rt0.c1)>(vt0.c0)))OR(((rt0.c2)!=(vt0.c0)))))AND(((rt0.c2)+(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((0Xc57c88a) NOT BETWEEN (rt0.c2) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((NOT (((((((rt0.c1)>(vt0.c0)))OR(((rt0.c2)!=(vt0.c0)))))AND(((rt0.c2)+(rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((0Xc57c88a) NOT BETWEEN (rt0.c2) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((((((((rt0.c1)>(vt0.c0)))OR(((rt0.c2)<>(vt0.c0)))))AND(((rt0.c2)+(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((0xc57c88a) NOT BETWEEN (rt0.c2) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELY(vt0.c0))*(0.43912403305097447))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((LIKELY(vt0.c0))*(0.43912403305097447))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((LIKELY(vt0.c0))*(0.43912403305097447))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, (+ (rt0.c0)), (rt0.c2 IN (rt0.c1, rt0.c2))))<>(((rt0.c1 IN ()), rt0.c1, CAST(rt0.c2 AS TEXT))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, (+ (rt0.c0)), (rt0.c2 IN (rt0.c1, rt0.c2))))!=(((rt0.c1 IN ()), rt0.c1, CAST(rt0.c2 AS TEXT))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, (+ (rt0.c0)), (rt0.c2 IN (rt0.c1, rt0.c2))))!=(((rt0.c1 IN ()), rt0.c1, CAST(rt0.c2 AS TEXT))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (TOTAL(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((TOTAL(COUNT(*)) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((TOTAL(COUNT(*)) IN ())) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (TOTAL(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((TOTAL(COUNT(*)) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((TOTAL(COUNT(*)) IN ())) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CAST(vt0.c0 AS TEXT)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((x''))>=((((vt0.c0)LIKE(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((x''))>=((((vt0.c0)LIKE(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((x''))>=((((vt0.c0)LIKE(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((~ (CAST(rt0.c2 AS BLOB)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c2 AS BLOB)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((~ (CAST(rt0.c2 AS BLOB)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING COUNT(CAST(MIN(TOTAL(vt0.c0)) AS TEXT)) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(CAST(MIN(TOTAL(vt0.c0)) AS TEXT)))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(CAST(MIN(TOTAL(vt0.c0)) AS TEXT))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (0.10140688910055684)))|(LIKELIHOOD(vt0.c0, 0.5703740109049065)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (0.10140688910055684)))|(LIKELIHOOD(vt0.c0, 0.5703740109049065)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (0.10140688910055684)))|(LIKELIHOOD(vt0.c0, 0.5703740109049065)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (CAST((+ (rt0.c2)) AS TEXT)) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST((+ (rt0.c2)) AS TEXT)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((CAST((+ (rt0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c0)))OR(CAST(rt0.c1 AS REAL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)IS NOT(rt0.c0)))OR(CAST(rt0.c1 AS REAL)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)IS NOT(rt0.c0)))OR(CAST(rt0.c1 AS REAL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (~ (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (~ (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING MIN((+ (MIN(AVG(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (~ (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN((+ (MIN(AVG(rt0.c2))))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (~ (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING ((MIN((+ (MIN(AVG(rt0.c2)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END  WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c2) ISNULL) ELSE vt0.c0 END) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END  WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c2) ISNULL) ELSE vt0.c0 END))) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END  WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c2) ISNULL) ELSE vt0.c0 END) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((rt0.c1)) NOT BETWEEN ((((COUNT(*)) ISNULL))) AND ((CASE MIN(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) ELSE AVG(rt0.c1) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((((COUNT(*)) ISNULL))) AND ((CASE MIN(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) ELSE AVG(rt0.c1) END))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c1)) NOT BETWEEN ((((COUNT(*)) ISNULL))) AND ((CASE MIN(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) ELSE AVG(rt0.c1) END)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((rt0.c1)) NOT BETWEEN ((((COUNT(*)) ISNULL))) AND ((CASE MIN(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) ELSE AVG(rt0.c1) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((((COUNT(*)) ISNULL))) AND ((CASE MIN(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) ELSE AVG(rt0.c1) END))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c1)) NOT BETWEEN ((((COUNT(*)) ISNULL))) AND ((CASE MIN(rt0.c1)  WHEN rt0.c0 THEN COUNT(*) ELSE AVG(rt0.c1) END)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((~ (rt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (CAST((rt0.c1 IN (rt0.c0, rt0.c0)) AS BLOB)) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST((rt0.c1 IN (rt0.c0, rt0.c0)) AS BLOB)))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (((CAST((rt0.c1 IN (rt0.c0, rt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (json_valid(CASE NULL  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN 0.1389558032371585 THEN vt0.c0 END)) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (json_valid(CASE NULL  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN 0.1389558032371585 THEN vt0.c0 END)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((json_valid(CASE NULL  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN 0.1389558032371585 THEN vt0.c0 END)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING SUM(MAX(rt0.c2)) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT (SUM(MAX(rt0.c2)))) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING ((SUM(MAX(rt0.c2))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((vt0.c0)|(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((vt0.c0)|(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((vt0.c0)|(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c0 IN ()) IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS TEXT)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN (rt0.c2)) AS TEXT)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST((rt0.c2 IN (rt0.c2)) AS TEXT)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(TOTAL(rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(TOTAL(rt0.c2))) ISNULL);
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN ((-1.841060862E9)AND(rt0.c0)) ELSE ((0.11182863941728116) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN ((-1.841060862E9)AND(rt0.c0)) ELSE ((0.11182863941728116) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END WHERE (((((rt0.c1)>=(rt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN ((-1.841060862E9)AND(rt0.c0)) ELSE ((0.11182863941728116) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END WHERE ((NOT (((((rt0.c1)>=(rt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN ((-1.841060862E9)AND(rt0.c0)) ELSE ((0.11182863941728116) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END WHERE (((((((rt0.c1)>=(rt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN ((-1.841060862E9)AND(rt0.c0)) ELSE ((0.11182863941728116) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((- (((rt0.c2)IS(rt0.c1))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((- (((rt0.c2)IS(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((((- (((rt0.c2)IS(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE), CAST(rt0.c2 AS TEXT), (NULL IN ()))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), NULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE), CAST(rt0.c2 AS TEXT), (NULL IN ()))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), NULL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE), CAST(rt0.c2 AS TEXT), (NULL IN ()))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING SUM(rt0.c0) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (SUM(rt0.c0) COLLATE RTRIM)) UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING ((SUM(rt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING SUM(rt0.c0) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (SUM(rt0.c0) COLLATE RTRIM)) UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING ((SUM(rt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL MAX(((rt0.c1 COLLATE BINARY)LIKE((((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, 0.4911771701899743, rt0.c1, vt0.c0, x'5e24')) AND ((rt0.c2, rt0.c2, NULL, rt0.c0, vt0.c0)))))) FROM vt0, rt0;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((NOT (((rt0.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((NOT (((rt0.c0) NOT NULL)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(x'')))OR((rt0.c2 IN ()))))OR(0x7cce7079)))AND(((rt0.c1)OR(rt0.c2))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(x'')))OR((rt0.c2 IN ()))))OR(0X7cce7079)))AND(((rt0.c1)OR(rt0.c2)))) WHERE (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(x'')))OR((rt0.c2 IN ()))))OR(0x7cce7079)))AND(((rt0.c1)OR(rt0.c2)))) WHERE ((NOT (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(x'')))OR((rt0.c2 IN ()))))OR(0x7cce7079)))AND(((rt0.c1)OR(rt0.c2)))) WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(x'')))OR((rt0.c2 IN ()))))OR(0x7cce7079)))AND(((rt0.c1)OR(rt0.c2))));
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ())) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((CAST(rt0.c0 AS INTEGER) IN ())))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE ((((CAST(rt0.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(TOTAL(rt0.c2)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(TOTAL(rt0.c2))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)||(vt0.c0)), ((vt0.c0)<=(vt0.c0)))) AND ((vt0.c0, x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)||(vt0.c0)), ((vt0.c0)<=(vt0.c0)))) AND ((vt0.c0, x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)||(vt0.c0)), ((vt0.c0)<=(vt0.c0)))) AND ((vt0.c0, x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (-1656853209) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (-1656853209))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((-1656853209) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2) NOTNULL))<<(((NULL) NOTNULL)))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) NOTNULL))<<(((NULL) NOTNULL)))))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2) NOTNULL))<<(((NULL) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (GROUP_CONCAT(SUM(MAX(vt0.c0))) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((GROUP_CONCAT(SUM(MAX(vt0.c0))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(SUM(MAX(vt0.c0))) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (GROUP_CONCAT(SUM(MAX(vt0.c0))) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((GROUP_CONCAT(SUM(MAX(vt0.c0))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(SUM(MAX(vt0.c0))) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))) IN ())) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))) IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))) IN ())) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((TRIM(rt0.c2)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((TRIM(rt0.c2)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((TRIM(rt0.c2)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c2 IN ())) BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (vt0.c0))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2 IN ())) BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (vt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c2 IN ())) BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (vt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING GLOB(COUNT(rt0.c0), CASE WHEN rt0.c0 THEN MIN(SUM(rt0.c2)) WHEN rt0.c1 THEN AVG(GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c0)))) WHEN rt0.c2 THEN MIN(vt0.c0) WHEN rt0.c2 THEN rt0.c1 WHEN AVG(NULL) THEN rt0.c1 ELSE rt0.c1 END) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (GLOB(COUNT(rt0.c0), CASE WHEN rt0.c0 THEN MIN(SUM(rt0.c2)) WHEN rt0.c1 THEN AVG(GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c0)))) WHEN rt0.c2 THEN MIN(vt0.c0) WHEN rt0.c2 THEN rt0.c1 WHEN AVG(NULL) THEN rt0.c1 ELSE rt0.c1 END))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((GLOB(COUNT(rt0.c0), CASE WHEN rt0.c0 THEN MIN(SUM(rt0.c2)) WHEN rt0.c1 THEN AVG(GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c0)))) WHEN rt0.c2 THEN MIN(vt0.c0) WHEN rt0.c2 THEN rt0.c1 WHEN AVG(NULL) THEN rt0.c1 ELSE rt0.c1 END)) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((((((vt0.c0)OR(rt0.c1)))AND('1596795542')))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((((((vt0.c0)OR(rt0.c1)))AND('1596795542')))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((((((vt0.c0)OR(rt0.c1)))AND('1596795542')))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END) AND (vt0.c0))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END) AND (vt0.c0))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END) AND (vt0.c0))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))<((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))<((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))<((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING COUNT(TOTAL(TOTAL(vt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(TOTAL(TOTAL(vt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((COUNT(TOTAL(TOTAL(vt0.c0)))) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((- ((NOT (rt0.c0))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((- ((NOT (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((- ((NOT (rt0.c0))))) ISNULL));
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((((vt0.c0)>=(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE))<((((vt0.c0)>=(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 COLLATE NOCASE))<((((vt0.c0)>=(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))%(x'e444'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))%(x'e444'))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))%(x'e444'))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING GROUP_CONCAT((GROUP_CONCAT(rt0.c2) IN ())) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(rt0.c2) IN ())))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((GROUP_CONCAT((GROUP_CONCAT(rt0.c2) IN ()))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING GROUP_CONCAT((GROUP_CONCAT(rt0.c2) IN ())) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(rt0.c2) IN ())))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((GROUP_CONCAT((GROUP_CONCAT(rt0.c2) IN ()))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) ELSE CASE 1890188499  WHEN vt0.c0 THEN vt0.c0 END END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) ELSE CASE 1890188499  WHEN vt0.c0 THEN vt0.c0 END END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) ELSE CASE 1890188499  WHEN vt0.c0 THEN vt0.c0 END END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((- (COALESCE(rt0.c0, rt0.c0, rt0.c0, rt0.c2)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((- (COALESCE(rt0.c0, rt0.c0, rt0.c0, rt0.c2)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((- (COALESCE(rt0.c0, rt0.c0, rt0.c0, rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((0X6473078a)) AND ((((rt0.c2) IS TRUE))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((0X6473078a)) AND ((((rt0.c2) IS TRUE))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c2)) BETWEEN ((0x6473078a)) AND ((((rt0.c2) IS TRUE))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0 HAVING SUM(AVG(AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (SUM(AVG(AVG(COUNT(*)))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0 HAVING ((SUM(AVG(AVG(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (NULL) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (NULLIF((((vt0.c0))<((rt0.c0))), (rt0.c2 IN ()))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (NULLIF((((vt0.c0))<((rt0.c0))), (rt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((NULLIF((((vt0.c0))<((rt0.c0))), (rt0.c2 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 WHEN x'1eee' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.36386315476814346))) ELSE 'BW?P' END) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 WHEN x'1eee' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.36386315476814346))) ELSE 'BW?P' END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 WHEN x'1eee' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.36386315476814346))) ELSE 'BW?P' END) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING JULIANDAY(MAX(rt0.c2), ((rt0.c1) BETWEEN (rt0.c1) AND (MIN(vt0.c0))), MIN(rt0.c2), MAX(MIN(rt0.c2)), ((NULL)>>(COUNT(COUNT(vt0.c0))))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (JULIANDAY(MAX(rt0.c2), ((rt0.c1) BETWEEN (rt0.c1) AND (MIN(vt0.c0))), MIN(rt0.c2), MAX(MIN(rt0.c2)), ((NULL)>>(COUNT(COUNT(vt0.c0))))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING ((JULIANDAY(MAX(rt0.c2), ((rt0.c1) BETWEEN (rt0.c1) AND (MIN(vt0.c0))), MIN(rt0.c2), MAX(MIN(rt0.c2)), ((NULL)>>(COUNT(COUNT(vt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((LIKE(rt0.c1, rt0.c2, 'l')) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((LIKE(rt0.c1, rt0.c2, 'l')) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((LIKE(rt0.c1, rt0.c2, 'l')) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c1 THEN CASE WHEN x'' THEN rt0.c1 ELSE vt0.c0 END END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c1 THEN CASE WHEN x'' THEN rt0.c1 ELSE vt0.c0 END END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c1 THEN CASE WHEN x'' THEN rt0.c1 ELSE vt0.c0 END END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ('-1015278875') GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT ('-1015278875'))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((('-1015278875') ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING AVG(GROUP_CONCAT(MIN(MIN(vt0.c0)))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(GROUP_CONCAT(MIN(MIN(vt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((AVG(GROUP_CONCAT(MIN(MIN(vt0.c0))))) ISNULL);
SELECT ALL SUM((((CHAR(rt0.c0)))<=((rt0.c2)))) FROM rt0 ORDER BY ((((NULL)OR(rt0.c2)))OR((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c1))))) ASC  NULLS LAST, ((CAST(rt0.c0 AS REAL))OR(CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(0.7373848655699)))AND(UNLIKELY(rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(0.7373848655699)))AND(UNLIKELY(rt0.c2)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(0.7373848655699)))AND(UNLIKELY(rt0.c2)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((+ ((((rt0.c2))<>((rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((+ ((((rt0.c2))!=((rt0.c0)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((+ ((((rt0.c2))<>((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(MAX(rt0.c1)) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(MAX(rt0.c1))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (0.8422955498383794) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (0.8422955498383794))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((0.8422955498383794) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((- (rt0.c0))) ISNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((- (rt0.c0))) ISNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((- (rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (NULL) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((0x16c1febe)OR(rt0.c1)))AND(((vt0.c0)>=(rt0.c1))))) GROUP BY rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((0X16c1febe)OR(rt0.c1)))AND(((vt0.c0)>=(rt0.c1))))))) GROUP BY rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((((0X16c1febe)OR(rt0.c1)))AND(((vt0.c0)>=(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CAST(x'' AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(x'' AS NUMERIC))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(x'' AS NUMERIC)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CAST(x'' AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(x'' AS NUMERIC))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(x'' AS NUMERIC)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(x'' AS NUMERIC)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(x'' AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(x'' AS NUMERIC)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('')AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((('')AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((('')AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN (vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN (vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING MAX(GROUP_CONCAT(AVG(vt0.c0))) COLLATE NOCASE COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(AVG(vt0.c0))) COLLATE NOCASE COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((MAX(GROUP_CONCAT(AVG(vt0.c0))) COLLATE NOCASE COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UNLIKELY(DISTINCT (+ (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT (+ (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((UNLIKELY(DISTINCT (+ (vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c1))) AND (rt0.c0))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c1))) AND (rt0.c0))))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c1))) AND (rt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING rt0.c1 UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING rt0.c1 UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (NULL) AND (rt0.c1))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (NULL) AND (rt0.c1))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (NULL) AND (rt0.c1))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)%(rt0.c1)))==(x''))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)%(rt0.c1)))==(x''))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)%(rt0.c1)))==(x''))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE json_array(rt0.c1, rt0.c1, vt0.c0, rt0.c0)  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END GROUP BY rt0.c2, vt0.c0;
SELECT MAX(((((((((((vt0.c0)<=(vt0.c0)))AND(ABS(vt0.c0))))AND(vt0.c0)))AND((NOT (vt0.c0)))))AND(x''))) FROM vt0 ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN ((x'')OR(vt0.c0)) ELSE ((vt0.c0) IS FALSE) END DESC, ((((vt0.c0)||(vt0.c0))) BETWEEN (SQLITE_SOURCE_ID()) AND ((NOT (vt0.c0)))), ((vt0.c0)GLOB(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ('1760732144') UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT ('1760732144'))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((('1760732144') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((x'')*(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((x'')*(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'')*(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(((((MAX(rt0.c0))AND(1.760732144E9)))OR(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(((((MAX(rt0.c0))AND(1.760732144E9)))OR(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(((((MAX(rt0.c0))AND(1.760732144E9)))OR(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN rt0.c2 COLLATE RTRIM WHEN '' THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c2) NOTNULL) THEN (('-1605227753') NOTNULL) END) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN rt0.c2 COLLATE RTRIM WHEN '' THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c2) NOTNULL) THEN (('-1605227753') NOTNULL) END))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN rt0.c2 COLLATE RTRIM WHEN '' THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c2) NOTNULL) THEN (('-1605227753') NOTNULL) END) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- ((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- ((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- ((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1) NOTNULL), rt0.c0 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>((rt0.c2 COLLATE NOCASE, ((rt0.c1) IS FALSE), CAST(vt0.c0 AS INTEGER))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c1) NOTNULL), rt0.c0 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>((rt0.c2 COLLATE NOCASE, ((rt0.c1) IS FALSE), CAST(vt0.c0 AS INTEGER))))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((((((rt0.c1) NOTNULL), rt0.c0 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>((rt0.c2 COLLATE NOCASE, ((rt0.c1) IS FALSE), CAST(vt0.c0 AS INTEGER))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE 0.4911771701899743  WHEN COUNT(*) THEN vt0.c0 ELSE vt0.c0 END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE 0.4911771701899743  WHEN COUNT(*) THEN vt0.c0 ELSE vt0.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE 0.4911771701899743  WHEN COUNT(*) THEN vt0.c0 ELSE vt0.c0 END) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE 0.4911771701899743  WHEN COUNT(*) THEN vt0.c0 ELSE vt0.c0 END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE 0.4911771701899743  WHEN COUNT(*) THEN vt0.c0 ELSE vt0.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE 0.4911771701899743  WHEN COUNT(*) THEN vt0.c0 ELSE vt0.c0 END) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM(x'') FROM rt0, vt0 ORDER BY CASE ((((((((vt0.c0)AND(rt0.c2)))OR(0X3bc601f2)))AND('1156401093')))OR(rt0.c1))  WHEN x'2f3aea2e' THEN rt0.c1 END ASC;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)), CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)), CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)), CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))>(((NOT (rt0.c0)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))>(((NOT (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))>(((NOT (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING '-379989903' UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ('-379989903')) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (('-379989903') ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING '-379989903' UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ('-379989903')) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (('-379989903') ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1)<(rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)<(rt0.c1)) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)<(rt0.c1)) IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON json_remove((+ (vt0.c0)), COALESCE(DISTINCT rt0.c1, rt0.c1), CAST(rt0.c2 AS TEXT), COALESCE(DISTINCT '-2102431445', rt0.c1));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON json_remove((+ (vt0.c0)), COALESCE(DISTINCT rt0.c1, rt0.c1), CAST(rt0.c2 AS TEXT), COALESCE(DISTINCT '-2102431445', rt0.c1)) WHERE (TYPEOF((NOT (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON json_remove((+ (vt0.c0)), COALESCE(DISTINCT rt0.c1, rt0.c1), CAST(rt0.c2 AS TEXT), COALESCE(DISTINCT '-2102431445', rt0.c1)) WHERE ((NOT (TYPEOF((NOT (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON json_remove((+ (vt0.c0)), COALESCE(DISTINCT rt0.c1, rt0.c1), CAST(rt0.c2 AS TEXT), COALESCE(DISTINCT '-2102431445', rt0.c1)) WHERE (((TYPEOF((NOT (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON json_remove((+ (vt0.c0)), COALESCE(DISTINCT rt0.c1, rt0.c1), CAST(rt0.c2 AS TEXT), COALESCE(DISTINCT '-2102431445', rt0.c1));
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2)GLOB(vt0.c0)))>('1329654026'))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)GLOB(vt0.c0)))>('1329654026'))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2)GLOB(vt0.c0)))>('1329654026'))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((- (((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((- (((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((- (((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1 HAVING (~ (MAX(rt0.c2))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1 HAVING (NOT ((~ (MAX(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1 HAVING (((~ (MAX(rt0.c2)))) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1 HAVING (~ (MAX(rt0.c2))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1 HAVING (NOT ((~ (MAX(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1 HAVING (((~ (MAX(rt0.c2)))) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON (NOT ((((rt0.c2))<>((vt0.c0))))) GROUP BY vt0.c0, rt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((UNLIKELY(rt0.c1)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((UNLIKELY(rt0.c1)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((UNLIKELY(rt0.c1)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ('Cq') GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ('Cq'))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((('Cq') ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING MAX(((1685260170) IS FALSE)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (MAX(((1685260170) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((MAX(((1685260170) IS FALSE))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING MAX(((1685260170) IS FALSE)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (MAX(((1685260170) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((MAX(((1685260170) IS FALSE))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((0.43912403305097447)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)>>(rt0.c2)) WHEN (+ (rt0.c1)) THEN (rt0.c2 IN (x'')) END GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(x''))) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(x''))) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(x''))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((+ (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(rt0.c1 AS REAL)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS REAL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(((0Xffffffffbd7851be)LIKE(AVG(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(((0Xffffffffbd7851be)LIKE(AVG(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(((0xffffffffbd7851be)LIKE(AVG(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (QUOTE(((vt0.c0)LIKE(rt0.c0)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (QUOTE(((vt0.c0)LIKE(rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((QUOTE(((vt0.c0)LIKE(rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((x'' IN ()))AND(((vt0.c0) IS FALSE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((x'' IN ()))AND(((vt0.c0) IS FALSE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((x'' IN ()))AND(((vt0.c0) IS FALSE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (((vt0.c0)/(0.7482333243655961))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c0)/(0.7482333243655961))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c0)/(0.7482333243655961))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((- (rt0.c0))) IS TRUE);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((- (rt0.c0))) IS TRUE) WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.25318993972239023)) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((- (rt0.c0))) IS TRUE) WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c0, 0.25318993972239023)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((- (rt0.c0))) IS TRUE) WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.25318993972239023)) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((- (rt0.c0))) IS TRUE);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((GROUP_CONCAT(MIN(SUM(COUNT(*)))))LIKE(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(MIN(SUM(COUNT(*)))))LIKE(TOTAL(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(MIN(SUM(COUNT(*)))))LIKE(TOTAL(rt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, LOWER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c0 AS TEXT)))<>((CAST(vt0.c0 AS INTEGER), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (+ (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0, LOWER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c0 AS TEXT)))!=((CAST(vt0.c0 AS INTEGER), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (+ (vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0, LOWER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c0 AS TEXT)))<>((CAST(vt0.c0 AS INTEGER), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (+ (vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST((vt0.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((~ (rt0.c2))) BETWEEN (json_insert(rt0.c1, rt0.c1, rt0.c2)) AND (UNLIKELY(rt0.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((~ (rt0.c2))) BETWEEN (json_insert(rt0.c1, rt0.c1, rt0.c2)) AND (UNLIKELY(rt0.c0)))))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE ((((((~ (rt0.c2))) BETWEEN (json_insert(rt0.c1, rt0.c1, rt0.c2)) AND (UNLIKELY(rt0.c0)))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CASE COUNT(*)  WHEN SUM(rt0.c2) THEN rt0.c0 ELSE CASE MAX(rt0.c1)  WHEN MIN(AVG(GROUP_CONCAT(rt0.c1))) THEN MAX(rt0.c1) END END UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CASE COUNT(*)  WHEN SUM(rt0.c2) THEN rt0.c0 ELSE CASE MAX(rt0.c1)  WHEN MIN(AVG(GROUP_CONCAT(rt0.c1))) THEN MAX(rt0.c1) END END)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CASE COUNT(*)  WHEN SUM(rt0.c2) THEN rt0.c0 ELSE CASE MAX(rt0.c1)  WHEN MIN(AVG(GROUP_CONCAT(rt0.c1))) THEN MAX(rt0.c1) END END) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c0) AND (rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 IN ())))<=((((rt0.c0) NOTNULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2 IN ())))<=((((rt0.c0) NOTNULL))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2 IN ())))<=((((rt0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (vt0.c0)) AS BLOB)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST((rt0.c2 IN (vt0.c0)) AS BLOB)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE (((CAST((rt0.c2 IN (vt0.c0)) AS BLOB)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING (((((((((((1596795542))<=((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))AND(((rt0.c2)>=(COUNT(AVG(MAX(TOTAL(rt0.c2)))))))))OR(((rt0.c2)AND(vt0.c0)))))OR(MIN(SUM(GROUP_CONCAT(rt0.c1))))))AND(vt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT ((((((((((((1596795542))<=((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))AND(((rt0.c2)>=(COUNT(AVG(MAX(TOTAL(rt0.c2)))))))))OR(((rt0.c2)AND(vt0.c0)))))OR(MIN(SUM(GROUP_CONCAT(rt0.c1))))))AND(vt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING (((((((((((((1596795542))<=((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))AND(((rt0.c2)>=(COUNT(AVG(MAX(TOTAL(rt0.c2)))))))))OR(((rt0.c2)AND(vt0.c0)))))OR(MIN(SUM(GROUP_CONCAT(rt0.c1))))))AND(vt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))OR(NULL)) AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(((((rt0.c1)AND(rt0.c0)))OR(NULL)) AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((CAST(((((rt0.c1)AND(rt0.c0)))OR(NULL)) AS TEXT)) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)LIKE(vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)LIKE(vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((((((rt0.c2)IS(rt0.c1)))AND((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (((((((rt0.c2)IS(rt0.c1)))AND((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((((((((rt0.c2)IS(rt0.c1)))AND((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (((NULL, COUNT(*), ((COUNT(AVG(COUNT(*))))>=(rt0.c1)), rtreenode(x'', rt0.c1), AVG(MIN(rt0.c1))))>(('1790080599', AVG(COUNT(*)), ((((((((rt0.c2)OR(rt0.c0)))OR(AVG(rt0.c1))))AND(COUNT(vt0.c0))))AND(rt0.c2)), rt0.c1, COUNT(TOTAL(MIN(SUM(COUNT(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((NULL, COUNT(*), ((COUNT(AVG(COUNT(*))))>=(rt0.c1)), rtreenode(x'', rt0.c1), AVG(MIN(rt0.c1))))>(('1790080599', AVG(COUNT(*)), ((((((((rt0.c2)OR(rt0.c0)))OR(AVG(rt0.c1))))AND(COUNT(vt0.c0))))AND(rt0.c2)), rt0.c1, COUNT(TOTAL(MIN(SUM(COUNT(rt0.c2)))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((NULL, COUNT(*), ((COUNT(AVG(COUNT(*))))>=(rt0.c1)), rtreenode(x'', rt0.c1), AVG(MIN(rt0.c1))))>(('1790080599', AVG(COUNT(*)), ((((((((rt0.c2)OR(rt0.c0)))OR(AVG(rt0.c1))))AND(COUNT(vt0.c0))))AND(rt0.c2)), rt0.c1, COUNT(TOTAL(MIN(SUM(COUNT(rt0.c2))))))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (UNICODE('~w1AZFw')) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (UNICODE('~w1AZFw')))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((UNICODE('~w1AZFw')) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((NOT ((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((NOT ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_quote(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (json_quote(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((json_quote(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(AVG(AVG(TOTAL(AVG(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(AVG(AVG(TOTAL(AVG(rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(AVG(AVG(TOTAL(AVG(rt0.c1)))))) ISNULL);
SELECT TOTAL(CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN 0.7478824799596259 THEN (- (rt0.c2)) WHEN (vt0.c0 IN ()) THEN ((rt0.c0) NOTNULL) WHEN vt0.c0 THEN rt0.c2 COLLATE BINARY END) FROM rt0, vt0 ORDER BY CAST(((rt0.c0)<=(rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ('wd?eB') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('wd?eB'))) UNION ALL SELECT * FROM rt0 WHERE ((('wd?eB') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2) ISNULL))IS NOT(-2.102431445E9))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) ISNULL))IS NOT(-2.102431445E9))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2) ISNULL))IS NOT(-2.102431445E9))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(SUM(AVG(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(SUM(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(SUM(AVG(vt0.c0)))) ISNULL);
SELECT SUM(CAST((((vt0.c0))>((rt0.c2))) AS NUMERIC)) FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (CASE vt0.c0  WHEN x'' THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ('2053075748') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('2053075748'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('2053075748') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING MAX(NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING MAX(NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (DATETIME('*0功A', ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), GLOB(rt0.c0, rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (DATETIME('*0功A', ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), GLOB(rt0.c0, rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((DATETIME('*0功A', ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), GLOB(rt0.c0, rt0.c0))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(DISTINCT (+ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(DISTINCT (+ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END) WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)))OR(vt0.c0 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(DISTINCT (+ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END) WHERE ((NOT (((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)))OR(vt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(DISTINCT (+ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END) WHERE (((((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)))OR(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(DISTINCT (+ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING GROUP_CONCAT(((rt0.c1) IS FALSE)) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(((rt0.c1) IS FALSE))) ISNULL);
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING GROUP_CONCAT(((rt0.c1) IS FALSE)) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(((rt0.c1) IS FALSE))) ISNULL);
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (NULL) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))IS(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 IN ()))IS(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((((vt0.c0 IN ()))IS(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2)GLOB(((rt0.c0)|(rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)GLOB(((rt0.c0)|(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)GLOB(((rt0.c0)|(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0) COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0) COLLATE NOCASE) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0) COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0) COLLATE NOCASE) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT ((NOT (MAX(rt0.c1))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT ((NOT ((NOT (MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (((NOT ((NOT (MAX(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT ((NOT (MAX(rt0.c1))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT ((NOT ((NOT (MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (((NOT ((NOT (MAX(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(0.5736655738128165 AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(0.5736655738128165 AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(0.5736655738128165 AS TEXT)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c1)GLOB(NULL))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c1)GLOB(NULL))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c1 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c1)GLOB(NULL))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((rt0.c1)IS('1096044986')) IN ())) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)IS('1096044986')) IN ())))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c1)IS('1096044986')) IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING SUM(AVG(AVG(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(AVG(AVG(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(AVG(AVG(rt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT (rt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE ((((NOT (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.20692081780131) AND (vt0.c0)))>>(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (0.20692081780131) AND (vt0.c0)))>>(CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (0.20692081780131) AND (vt0.c0)))>>(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((('141012598') NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c1)|(NULL))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((('141012598') NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c1)|(NULL))))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((('141012598') NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c1)|(NULL))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (TOTAL('kh') IN (MIN(GROUP_CONCAT(MAX(AVG(SUM(rt0.c1))))) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((TOTAL('kh') IN (MIN(GROUP_CONCAT(MAX(AVG(SUM(rt0.c1))))) COLLATE NOCASE)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((TOTAL('kh') IN (MIN(GROUP_CONCAT(MAX(AVG(SUM(rt0.c1))))) COLLATE NOCASE))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((('351056236')OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(UNLIKELY(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((('351056236')OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(UNLIKELY(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((('351056236')OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(UNLIKELY(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)+((rt0.c0 IN (rt0.c0, rt0.c1))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)+((rt0.c0 IN (rt0.c0, rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)+((rt0.c0 IN (rt0.c0, rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING TOTAL((COUNT(MIN(rt0.c1)) IN ())) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (TOTAL((COUNT(MIN(rt0.c1)) IN ())))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING ((TOTAL((COUNT(MIN(rt0.c1)) IN ()))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING TOTAL((COUNT(MIN(rt0.c1)) IN ())) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (TOTAL((COUNT(MIN(rt0.c1)) IN ())))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING ((TOTAL((COUNT(MIN(rt0.c1)) IN ()))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2)-(vt0.c0)) COLLATE BINARY) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c2)-(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c2)-(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((TYPEOF(x'') IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((TYPEOF(x'') IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((TYPEOF(x'') IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE (json_insert((NOT (rt0.c2)), vt0.c0 COLLATE RTRIM, (((rt0.c1, vt0.c0, rt0.c0))>((vt0.c0, rt0.c1, rt0.c1))), rt0.c0 COLLATE BINARY, (((rt0.c1, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c1, vt0.c0))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (json_insert((NOT (rt0.c2)), vt0.c0 COLLATE RTRIM, (((rt0.c1, vt0.c0, rt0.c0))>((vt0.c0, rt0.c1, rt0.c1))), rt0.c0 COLLATE BINARY, (((rt0.c1, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c1, vt0.c0))))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((json_insert((NOT (rt0.c2)), vt0.c0 COLLATE RTRIM, (((rt0.c1, vt0.c0, rt0.c0))>((vt0.c0, rt0.c1, rt0.c1))), rt0.c0 COLLATE BINARY, (((rt0.c1, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c1, vt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING CAST((MIN(GROUP_CONCAT(GROUP_CONCAT(''))) IN (rt0.c2, rt0.c1)) AS INTEGER) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CAST((MIN(GROUP_CONCAT(GROUP_CONCAT(''))) IN (rt0.c2, rt0.c1)) AS INTEGER))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST((MIN(GROUP_CONCAT(GROUP_CONCAT(''))) IN (rt0.c2, rt0.c1)) AS INTEGER)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (CAST(((vt0.c0)-(rt0.c0)) AS BLOB)) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(((vt0.c0)-(rt0.c0)) AS BLOB)))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (((CAST(((vt0.c0)-(rt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN CAST(vt0.c0 AS TEXT) THEN (((rt0.c0)) BETWEEN ((x'4b05')) AND ((rt0.c2))) WHEN (vt0.c0 IN (vt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN ((rt0.c0)IS('-1601812590')) ELSE 0.5891449976724056 END) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE (rt0.c2 IN ())  WHEN CAST(vt0.c0 AS TEXT) THEN (((rt0.c0)) BETWEEN ((x'4b05')) AND ((rt0.c2))) WHEN (vt0.c0 IN (vt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN ((rt0.c0)IS('-1601812590')) ELSE 0.5891449976724056 END))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((CASE (rt0.c2 IN ())  WHEN CAST(vt0.c0 AS TEXT) THEN (((rt0.c0)) BETWEEN ((x'4b05')) AND ((rt0.c2))) WHEN (vt0.c0 IN (vt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN ((rt0.c0)IS('-1601812590')) ELSE 0.5891449976724056 END) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (((x''))!=((((rt0.c0) BETWEEN (SUM(AVG(COUNT(COUNT(vt0.c0))))) AND (x''))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT ((((x''))<>((((rt0.c0) BETWEEN (SUM(AVG(COUNT(COUNT(vt0.c0))))) AND (x''))))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (((((x''))!=((((rt0.c0) BETWEEN (SUM(AVG(COUNT(COUNT(vt0.c0))))) AND (x'')))))) ISNULL);
SELECT TOTAL(((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN ((('0.5978197579372558') IS TRUE)) AND (((NULL)%(rt0.c2))))) FROM rt0 ORDER BY ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE 0.15876976122255204 END)OR(ROUND(rt0.c0, rt0.c2))))OR((x'' IN ())))  NULLS LAST;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)AND(rt0.c2))) NOTNULL);
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)AND(rt0.c2))) NOTNULL) WHERE ((((NOT (vt0.c0))) NOTNULL)) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)AND(rt0.c2))) NOTNULL) WHERE ((NOT ((((NOT (vt0.c0))) NOTNULL)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)AND(rt0.c2))) NOTNULL) WHERE ((((((NOT (vt0.c0))) NOTNULL)) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)AND(rt0.c2))) NOTNULL);
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN (0.7521290422591111 IN ()) WHEN ((vt0.c0) NOT NULL) THEN (~ (rt0.c2)) WHEN (((rt0.c2))<((rt0.c0))) THEN CAST(rt0.c2 AS INTEGER) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE vt0.c0 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN (0.7521290422591111 IN ()) WHEN ((vt0.c0) NOT NULL) THEN (~ (rt0.c2)) WHEN (((rt0.c2))<((rt0.c0))) THEN CAST(rt0.c2 AS INTEGER) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE vt0.c0 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN (0.7521290422591111 IN ()) WHEN ((vt0.c0) NOT NULL) THEN (~ (rt0.c2)) WHEN (((rt0.c2))<((rt0.c0))) THEN CAST(rt0.c2 AS INTEGER) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (CAST(((rt0.c1)OR(vt0.c0)) AS TEXT)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c1)OR(vt0.c0)) AS TEXT)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((CAST(((rt0.c1)OR(vt0.c0)) AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN((('-379989903')<>(COUNT(SUM(MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(TOTAL(rt0.c0)))))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN((('-379989903')!=(COUNT(SUM(MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(TOTAL(rt0.c0)))))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN((('-379989903')<>(COUNT(SUM(MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(TOTAL(rt0.c0))))))))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (0.9241242248482404 COLLATE NOCASE) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (0.9241242248482404 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((0.9241242248482404 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((UNICODE(rt0.c2))OR(UNICODE('9p7-钥\r-愴n'))))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((UNICODE(rt0.c2))OR(UNICODE('9p7-钥\r-愴n'))))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((UNICODE(rt0.c2))OR(UNICODE('9p7-钥\r-愴n'))))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((rt0.c2 COLLATE BINARY IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE ('1167758244' COLLATE BINARY) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ('1167758244' COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((('1167758244' COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (rt0.c2, rt0.c1))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c0 IN (rt0.c2, rt0.c1))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((((((vt0.c0 IN (rt0.c2, rt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (CAST(((((rt0.c2)OR(rt0.c1)))AND('')) AS NUMERIC)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(((((rt0.c2)OR(rt0.c1)))AND('')) AS NUMERIC)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((CAST(((((rt0.c2)OR(rt0.c1)))AND('')) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(vt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(ROUND(rt0.c0, rt0.c0) AS TEXT)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(ROUND(rt0.c0, rt0.c0) AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(ROUND(rt0.c0, rt0.c0) AS TEXT)) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((0.5710875435559256) IS FALSE))>=(((rt0.c0)>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((0.5710875435559256) IS FALSE))>=(((rt0.c0)>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((0.5710875435559256) IS FALSE))>=(((rt0.c0)>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((((((((rt0.c1, vt0.c0, x'', rt0.c1, rt0.c2))<=((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1))))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))OR((((0.5979523801141363)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(((rt0.c1)||(rt0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((((((((rt0.c1, vt0.c0, x'', rt0.c1, rt0.c2))<=((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1))))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))OR((((0.5979523801141363)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(((rt0.c1)||(rt0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))))) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 NOT INDEXED WHERE ((((((((((((((rt0.c1, vt0.c0, x'', rt0.c1, rt0.c2))<=((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1))))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))OR((((0.5979523801141363)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(((rt0.c1)||(rt0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'c7e3b568' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'c7e3b568')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'c7e3b568') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'c7e3b568' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'c7e3b568')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'c7e3b568') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 NOT INDEXED WHERE (ABS(vt0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (ABS(vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((ABS(vt0.c0 COLLATE RTRIM)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<=((vt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE BINARY))<=((vt0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE BINARY))<=((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (rt0.c0) GROUP BY rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '-687800096' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('-687800096')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('-687800096') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '-687800096' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('-687800096')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('-687800096') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD((((vt0.c0))<>((vt0.c0))), 0.23643116913629492)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LIKELIHOOD((((vt0.c0))<>((vt0.c0))), 0.23643116913629492)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD((((vt0.c0))!=((vt0.c0))), 0.23643116913629492)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((+ (rt0.c1))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((+ (rt0.c1))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((+ (rt0.c1))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(((rt0.c1)*(SUM(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(((rt0.c1)*(SUM(AVG(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(((rt0.c1)*(SUM(AVG(rt0.c2)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL)) IS FALSE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL)) IS FALSE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ROUND(vt0.c0, vt0.c0) THEN vt0.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (x'10d1')) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ROUND(vt0.c0, vt0.c0) THEN vt0.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (x'10d1')) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ROUND(vt0.c0, vt0.c0) THEN vt0.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (x'10d1')) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKE('-379989903', vt0.c0, '洧') COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKE('-379989903', vt0.c0, '洧') COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKE('-379989903', vt0.c0, '洧') COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT MAX(((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) FROM vt0 ORDER BY '2093903993';
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((~ (rt0.c0)) AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((~ (rt0.c0)) AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((~ (rt0.c0)) AS TEXT)) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN (+ (rt0.c2)) WHEN rt0.c1 THEN rt0.c0 WHEN (('1080098348') IS TRUE) THEN 0.5072261714462334 END) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS REAL) THEN (+ (rt0.c2)) WHEN rt0.c1 THEN rt0.c0 WHEN (('1080098348') IS TRUE) THEN 0.5072261714462334 END))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS REAL) THEN (+ (rt0.c2)) WHEN rt0.c1 THEN rt0.c0 WHEN (('1080098348') IS TRUE) THEN 0.5072261714462334 END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)!=(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)<>(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)!=(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS NUMERIC))IS NOT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS NUMERIC))IS NOT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(COUNT(MIN(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS NUMERIC))IS NOT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(MIN(COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS NUMERIC))IS NOT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(MIN(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, 0.7005101779146528, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c0))))GLOB(rt0.c1))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, 0.7005101779146528, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c0))))GLOB(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, 0.7005101779146528, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c0))))GLOB(rt0.c1))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT)));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT))) WHERE ((((((rt0.c1)<<(rt0.c2)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), ((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((GLOB(rt0.c1, rt0.c0), (- (rt0.c0)), rt0.c2, rt0.c0, NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT))) WHERE ((NOT ((((((rt0.c1)<<(rt0.c2)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), ((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((GLOB(rt0.c1, rt0.c0), (- (rt0.c0)), rt0.c2, rt0.c0, NULL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT))) WHERE ((((((((rt0.c1)<<(rt0.c2)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), ((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((GLOB(rt0.c1, rt0.c0), (- (rt0.c0)), rt0.c2, rt0.c0, NULL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT)));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)>=((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)>=((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)>=((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(SUM(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(SUM(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((SUM(COUNT(SUM(AVG(vt0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((0.9139839350698313)) AND ((vt0.c0))))+(CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.5531862273234045 END))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((0.9139839350698313)) AND ((vt0.c0))))+(CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.5531862273234045 END))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((((rt0.c0)) BETWEEN ((0.9139839350698313)) AND ((vt0.c0))))+(CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.5531862273234045 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((((vt0.c0) NOTNULL))OR((((vt0.c0))<((rt0.c1))))))AND(NULL))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((((vt0.c0) NOTNULL))OR((((vt0.c0))<((rt0.c1))))))AND(NULL))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((((((vt0.c0) NOTNULL))OR((((vt0.c0))<((rt0.c1))))))AND(NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (((((((COUNT(*)))<((rt0.c1))))AND(MIN(MAX(AVG(TOTAL(MAX(TOTAL(COUNT(*))))))))))AND(HEX(DISTINCT rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT ((((((((COUNT(*)))<((rt0.c1))))AND(MIN(MAX(AVG(TOTAL(MAX(TOTAL(COUNT(*))))))))))AND(HEX(DISTINCT rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (((((((((COUNT(*)))<((rt0.c1))))AND(MIN(MAX(AVG(TOTAL(MAX(TOTAL(COUNT(*))))))))))AND(HEX(DISTINCT rt0.c0)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((JULIANDAY(rt0.c2, NULL, rt0.c2))||(CASE WHEN rt0.c2 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((JULIANDAY(rt0.c2, NULL, rt0.c2))||(CASE WHEN rt0.c2 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((JULIANDAY(rt0.c2, NULL, rt0.c2))||(CASE WHEN rt0.c2 THEN vt0.c0 END))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, (vt0.c0 IN (NULL)), ((rt0.c0)=(rt0.c0)))) AND (((- (rt0.c1)), ((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS BLOB))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, (vt0.c0 IN (NULL)), ((rt0.c0)=(rt0.c0)))) AND (((- (rt0.c1)), ((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS BLOB))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, (vt0.c0 IN (NULL)), ((rt0.c0)=(rt0.c0)))) AND (((- (rt0.c1)), ((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS BLOB))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (0X68f2a3f0)))+(LOWER(DISTINCT rt0.c0)))) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (0x68f2a3f0)))+(LOWER(DISTINCT rt0.c0)))))) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (0x68f2a3f0)))+(LOWER(DISTINCT rt0.c0)))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (((COUNT(*) IN (vt0.c0))) BETWEEN (SUM(vt0.c0)) AND (((rt0.c2) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT ((((COUNT(*) IN (vt0.c0))) BETWEEN (SUM(vt0.c0)) AND (((rt0.c2) IS FALSE))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (((((COUNT(*) IN (vt0.c0))) BETWEEN (SUM(vt0.c0)) AND (((rt0.c2) IS FALSE)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (((COUNT(*) IN (vt0.c0))) BETWEEN (SUM(vt0.c0)) AND (((rt0.c2) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT ((((COUNT(*) IN (vt0.c0))) BETWEEN (SUM(vt0.c0)) AND (((rt0.c2) IS FALSE))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (((((COUNT(*) IN (vt0.c0))) BETWEEN (SUM(vt0.c0)) AND (((rt0.c2) IS FALSE)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c2)<<(rt0.c2)))>((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)<<(rt0.c2)))>((NOT (rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c2)<<(rt0.c2)))>((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (0.863052654475695) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (0.863052654475695))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((0.863052654475695) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING json_remove(AVG(rt0.c0), CAST(SUM(rt0.c1) AS TEXT), MIN(rt0.c2), TOTAL(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (json_remove(AVG(rt0.c0), CAST(SUM(rt0.c1) AS TEXT), MIN(rt0.c2), TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((json_remove(AVG(rt0.c0), CAST(SUM(rt0.c1) AS TEXT), MIN(rt0.c2), TOTAL(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING json_remove(AVG(rt0.c0), CAST(SUM(rt0.c1) AS TEXT), MIN(rt0.c2), TOTAL(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (json_remove(AVG(rt0.c0), CAST(SUM(rt0.c1) AS TEXT), MIN(rt0.c2), TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((json_remove(AVG(rt0.c0), CAST(SUM(rt0.c1) AS TEXT), MIN(rt0.c2), TOTAL(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS FALSE)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (rt0.c1 COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING CASE WHEN SUM(COUNT(*)) THEN COUNT(rt0.c0) ELSE AVG(rt0.c0) END UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CASE WHEN SUM(COUNT(*)) THEN COUNT(rt0.c0) ELSE AVG(rt0.c0) END)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE WHEN SUM(COUNT(*)) THEN COUNT(rt0.c0) ELSE AVG(rt0.c0) END) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2 COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST((((vt0.c0))>=((4809540))) AS REAL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST((((vt0.c0))>=((4809540))) AS REAL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST((((vt0.c0))>=((4809540))) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((- (0.7815444297553981)) IN ())) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((- (0.7815444297553981)) IN ())))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((- (0.7815444297553981)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT((((TOTAL(rt0.c1))) NOT BETWEEN ((MAX(rt0.c0))) AND ((rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT((((TOTAL(rt0.c1))) NOT BETWEEN ((MAX(rt0.c0))) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT((((TOTAL(rt0.c1))) NOT BETWEEN ((MAX(rt0.c0))) AND ((rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (TYPEOF(DISTINCT CASE x''  WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT CASE x''  WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((TYPEOF(DISTINCT CASE x''  WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(ABS(x'') AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(ABS(x'') AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(ABS(x'') AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c0)||(rt0.c0)))IS NOT(((rt0.c1) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)||(rt0.c0)))IS NOT(((rt0.c1) NOTNULL)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c0)||(rt0.c0)))IS NOT(((rt0.c1) NOTNULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)>>(GROUP_CONCAT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)>>(GROUP_CONCAT(COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)>>(GROUP_CONCAT(COUNT(vt0.c0))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((x'')<(rt0.c0)))GLOB(highlight(vt0.c0, rt0.c0, vt0.c0, rt0.c2)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((x'')<(rt0.c0)))GLOB(highlight(vt0.c0, rt0.c0, vt0.c0, rt0.c2)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((x'')<(rt0.c0)))GLOB(highlight(vt0.c0, rt0.c0, vt0.c0, rt0.c2)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((LTRIM(rt0.c0) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((LTRIM(rt0.c0) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((LTRIM(rt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT ((+ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT ((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(TOTAL(SUM(MAX(MIN(TOTAL(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(TOTAL(SUM(MAX(MIN(TOTAL(GROUP_CONCAT(COUNT(*)))))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(TOTAL(SUM(MAX(MIN(TOTAL(GROUP_CONCAT(COUNT(*))))))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c0) IS TRUE))OR(LIKELY(vt0.c0))))OR(((rt0.c2)==(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c0) IS TRUE))OR(LIKELY(vt0.c0))))OR(((rt0.c2)=(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((((rt0.c0) IS TRUE))OR(LIKELY(vt0.c0))))OR(((rt0.c2)==(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE INSTR(rt0.c0, rt0.c2)  WHEN (NOT (rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c1)>(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE INSTR(rt0.c0, rt0.c2)  WHEN (NOT (rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c1)>(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE INSTR(rt0.c0, rt0.c2)  WHEN (NOT (rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c1)>(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1, rt0.c1, rt0.c2))==((rt0.c1, rt0.c2, rt0.c2))) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (''))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1, rt0.c1, rt0.c2))==((rt0.c1, rt0.c2, rt0.c2))) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (''))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1, rt0.c1, rt0.c2))=((rt0.c1, rt0.c2, rt0.c2))) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (''))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((NULL) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((NULL) NOTNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
