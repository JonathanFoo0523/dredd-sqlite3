-- Time: 2024/06/09 16:14:20
-- Database: database79
-- Database version: 3.40.0
-- seed value: 4056651979
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, order=ASC, compress=likely, uncompress=likely); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0x79f3fb04); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY; -- 1ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''), ('-'), (x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 8ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0x79f3fb04) WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ()))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.7260362243142275), (x''), ('cx6gZ\Bcp'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '60639'); -- 0ms;
PRAGMA main.auto_vacuum = NONE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1901849393), (NULL), (0.37755836438993384); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=0.7260362243142275; -- 0ms;
DROP TABLE vt0; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (1901849393), (NULL), (NULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.03067581729369928) WHERE CASE WHEN ((vt1.c0)==(vt1.c0)) THEN (NOT (vt1.c0)) ELSE ((vt1.c0)|(vt1.c0)) END; -- 0ms;
ANALYZE temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (311434616), (0.5304421568585249), (''); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES ('0.5304421568585249'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.5604146932908582); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
ANALYZE sqlite_master; -- 1ms;
ANALYZE vt1; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1191074093); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1800633925); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 4); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('2143024755'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0.7861505818097021); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 7ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x''); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 2143024755);\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt1 SET (c0)=(x'200c0478') WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (x'4e7c')))LIKE(0.8462253757461485)); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR('2046032644')))OR(0X7fbbf673)))OR(((((x'd7ef0cf0')OR(0.045198340757763966)))OR(x'5836')))))AND(CASE 0.6410197772042044  WHEN '311434616' THEN 0.49250698756073197 ELSE x'2e9f' END)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
UPDATE vt1 SET (c0, c0)=('-1871055883', x''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1.901849393E9), (NULL), ('0.0'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE '-'; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'132f'; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-1818202841'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.11647037416860395) WHERE (((NOT (0.9320016095651331))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 1ms;
ANALYZE main; -- 0ms;
DELETE FROM vt1; -- 0ms;
UPDATE vt0 SET (c0)=('-1029291007') WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5570819312030927 THEN vt0.c0 ELSE vt0.c0 END IN ()); -- 0ms;
UPDATE vt0 SET (c0)=(0.529243920275095) WHERE ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE BINARY)); -- 1ms;
UPDATE vt0 SET (c0)=(0.08027378938211249) WHERE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM; -- 0ms;
REINDEX; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
PRAGMA cache_size; -- 0ms;
PRAGMA main.journal_size_limit = 2569992857180021225; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('-1735401010'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (0.11647037416860395), (x''), (-1029291007); -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0, c0, c0)=(x'', 0.6956364396062227, x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1871055883'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'2d15'); -- 3ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 1ms;
VACUUM temp; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('qV{Y%M\nd|'); -- 2ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'a05a6524', 0x7fffffffffffffff) WHERE ((vt0.c0 COLLATE NOCASE) NOTNULL); -- 1ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(0.5422829781291101); -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0Xffffffffc91ca8b0), (NULL), (NULL); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
PRAGMA main.journal_size_limit = 0; -- 0ms;
REINDEX RTRIM; -- 0ms;
CREATE TEMP TABLE t0 (c0 INTEGER ); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.49250698756073197), (NULL), (1014453785); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
REINDEX; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X4afcf88b ELSE vt0.c0 END)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X4afcf88b ELSE vt0.c0 END)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0x4afcf88b ELSE vt0.c0 END)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.16340422439182412)) NOTNULL)) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT (((LIKELIHOOD(DISTINCT vt1.c0, 0.16340422439182412)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((LIKELIHOOD(DISTINCT vt1.c0, 0.16340422439182412)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 WHERE (CAST(((('-'))>((vt0.c0))) AS TEXT)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (CAST(((('-'))>((vt0.c0))) AS TEXT)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE (((CAST(((('-'))>((vt0.c0))) AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0 HAVING ((COUNT(COUNT(AVG(vt0.c0)))) NOTNULL) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0 HAVING (NOT (((COUNT(COUNT(AVG(vt0.c0)))) NOTNULL))) UNION ALL SELECT t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0 HAVING ((((COUNT(COUNT(AVG(vt0.c0)))) NOTNULL)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0)) AND ((((vt1.c0)||(vt0.c0)), (((vt0.c0))<((t0.c0))), ((('1901849393'))>=((vt0.c0))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0)) AND ((((vt1.c0)||(vt0.c0)), (((vt0.c0))<((t0.c0))), ((('1901849393'))>=((vt0.c0))))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0)) AND ((((vt1.c0)||(vt0.c0)), (((vt0.c0))<((t0.c0))), ((('1901849393'))>=((vt0.c0))))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(0.3309535841585106 COLLATE NOCASE AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(0.3309535841585106 COLLATE NOCASE AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(0.3309535841585106 COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING json_type(((t0.c0)%(SUM(vt1.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (json_type(((t0.c0)%(SUM(vt1.c0)))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((json_type(((t0.c0)%(SUM(vt1.c0))))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING json_type(((t0.c0)%(SUM(vt1.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (json_type(((t0.c0)%(SUM(vt1.c0)))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((json_type(((t0.c0)%(SUM(vt1.c0))))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT * FROM t0, vt1 INNER JOIN vt0 ON (ABS(DISTINCT t0.c0) IN ());
SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON (ABS(DISTINCT t0.c0) IN ()) WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND((NOT (t0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT * FROM t0, vt1 INNER JOIN vt0 ON (ABS(DISTINCT t0.c0) IN ()) WHERE ((NOT (((((((vt0.c0)LIKE(vt0.c0)))AND((NOT (t0.c0)))))OR(CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON (ABS(DISTINCT t0.c0) IN ()) WHERE (((((((((vt0.c0)LIKE(vt0.c0)))AND((NOT (t0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT * FROM t0, vt1 INNER JOIN vt0 ON (ABS(DISTINCT t0.c0) IN ());
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((((((t0.c0 COLLATE BINARY)OR(((t0.c0) IS FALSE))))OR(((t0.c0)AND(vt1.c0)))))OR(((vt1.c0) NOTNULL))))AND((((t0.c0))=((t0.c0)))))) UNION SELECT DISTINCT * FROM vt1, t0 NOT INDEXED, vt0 WHERE ((NOT (((((((((t0.c0 COLLATE BINARY)OR(((t0.c0) IS FALSE))))OR(((t0.c0)AND(vt1.c0)))))OR(((vt1.c0) NOTNULL))))AND((((t0.c0))==((t0.c0)))))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((((((((t0.c0 COLLATE BINARY)OR(((t0.c0) IS FALSE))))OR(((t0.c0)AND(vt1.c0)))))OR(((vt1.c0) NOTNULL))))AND((((t0.c0))=((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((('\')-(CASE WHEN t0.c0 THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((('\')-(CASE WHEN t0.c0 THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((('\')-(CASE WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))>(UNLIKELY(vt1.c0)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))>(UNLIKELY(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))>(UNLIKELY(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((+ (t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((+ (t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((+ (t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, t0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, t0 WHERE (((((vt1.c0)>(vt0.c0)))/(x''))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT (((((vt1.c0)>(vt0.c0)))/(x''))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, t0 WHERE (((((((vt1.c0)>(vt0.c0)))/(x''))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))==((vt0.c0)))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))==((vt0.c0)))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0 HAVING AVG(x'') COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (AVG(x'') COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0 HAVING ((AVG(x'') COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0 HAVING AVG(x'') COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (AVG(x'') COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0 HAVING ((AVG(x'') COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL TOTAL(((((vt1.c0)>>(vt1.c0))) BETWEEN (((((((((t0.c0)OR(vt1.c0)))OR(t0.c0)))AND(-206423936)))AND(t0.c0))) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) FROM t0, vt1 ORDER BY (((((vt1.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((t0.c0, vt1.c0, t0.c0)))) BETWEEN (DATETIME(t0.c0, vt1.c0, t0.c0, t0.c0, vt1.c0)) AND ((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))<=(vt0.c0 COLLATE NOCASE));
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))<=(vt0.c0 COLLATE NOCASE)) WHERE (0x25fb0631) UNION ALL SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))<=(vt0.c0 COLLATE NOCASE)) WHERE ((NOT (0X25fb0631))) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))<=(vt0.c0 COLLATE NOCASE)) WHERE (((0x25fb0631) ISNULL));
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))<=(vt0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((NOT (t0.c0)) IN (((t0.c0)GLOB(t0.c0)), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) RIGHT OUTER JOIN t0 ON 0.5108593058533294;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 INNER JOIN t0 ON (((((((((NOT ('-867940944')))AND(x'')))OR((t0.c0 IN ()))))OR(((vt1.c0) BETWEEN ('\') AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 INNER JOIN t0 ON (((((((((NOT ('-867940944')))AND(x'')))OR((t0.c0 IN ()))))OR(((vt1.c0) BETWEEN ('\') AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))) WHERE (NULLIF(DISTINCT vt1.c0, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 INNER JOIN t0 ON (((((((((NOT ('-867940944')))AND(x'')))OR((t0.c0 IN ()))))OR(((vt1.c0) BETWEEN ('\') AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))) WHERE ((NOT (NULLIF(DISTINCT vt1.c0, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 INNER JOIN t0 ON (((((((((NOT ('-867940944')))AND(x'')))OR((t0.c0 IN ()))))OR(((vt1.c0) BETWEEN ('\') AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))) WHERE (((NULLIF(DISTINCT vt1.c0, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 INNER JOIN t0 ON (((((((((NOT ('-867940944')))AND(x'')))OR((t0.c0 IN ()))))OR(((vt1.c0) BETWEEN ('\') AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END, (((t0.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c0, NULL))), TRIM(vt1.c0)))<=(((NULL IN (NULL, '')), ((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL)))) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END, (((t0.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c0, NULL))), TRIM(vt1.c0)))<=(((NULL IN (NULL, '')), ((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL)))) GROUP BY vt1.c0, t0.c0 HAVING HEX(((SUM(SUM(TOTAL(t0.c0))))&(MIN(t0.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END, (((t0.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c0, NULL))), TRIM(vt1.c0)))<=(((NULL IN (NULL, '')), ((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL)))) GROUP BY vt1.c0, t0.c0 HAVING (NOT (HEX(((SUM(SUM(TOTAL(t0.c0))))&(MIN(t0.c0)))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END, (((t0.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c0, NULL))), TRIM(vt1.c0)))<=(((NULL IN (NULL, '')), ((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL)))) GROUP BY vt1.c0, t0.c0 HAVING ((HEX(((SUM(SUM(TOTAL(t0.c0))))&(MIN(t0.c0))))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (((((((((t0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) FULL OUTER JOIN vt1 ON ((((t0.c0 IN (vt0.c0))))>=((((0xffffffff988fe1ce) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '' WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN ((vt1.c0)||(vt0.c0)) ELSE '324694351' END) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '' WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN ((vt1.c0)||(vt0.c0)) ELSE '324694351' END))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '' WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN ((vt1.c0)||(vt0.c0)) ELSE '324694351' END) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)||(1257888017))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)||(1257888017))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (x''))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)||(1257888017))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (x''))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1 NOT INDEXED, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1 NOT INDEXED, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1 NOT INDEXED, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD((~ (vt1.c0)), 0.026683952845367065)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (LIKELIHOOD((~ (vt1.c0)), 0.026683952845367065)))) UNION ALL SELECT * FROM vt1 WHERE (((LIKELIHOOD((~ (vt1.c0)), 0.026683952845367065)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((x'')||(NULL)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((x'')||(NULL)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((x'')||(NULL)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((('') NOT BETWEEN (vt0.c0) AND (t0.c0)))==(0.7057960040784091 COLLATE NOCASE))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((('') NOT BETWEEN (vt0.c0) AND (t0.c0)))==(0.7057960040784091 COLLATE NOCASE))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((('') NOT BETWEEN (vt0.c0) AND (t0.c0)))=(0.7057960040784091 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0 HAVING (+ (SUM(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0 HAVING (NOT ((+ (SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0 HAVING (((+ (SUM(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0 HAVING (+ (SUM(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0 HAVING (NOT ((+ (SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0 HAVING (((+ (SUM(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON x'bd05' FULL OUTER JOIN vt1 ON (~ (CASE WHEN t0.c0 THEN 4.39879375E8 ELSE vt1.c0 END)) GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON 0.39316187613411735;
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON 0.39316187613411735 WHERE ((((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))) UNION SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON 0.39316187613411735 WHERE ((NOT ((((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))))) UNION SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON 0.39316187613411735 WHERE ((((((t0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON 0.39316187613411735;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (NULLIF(DISTINCT x'', vt1.c0) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULLIF(DISTINCT x'', vt1.c0) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((NULLIF(DISTINCT x'', vt1.c0) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON CAST((NOT (t0.c0)) AS INTEGER) INNER JOIN vt0 ON CAST(vt0.c0 AS REAL);
SELECT * FROM t0 CROSS JOIN vt1 ON CAST((NOT (t0.c0)) AS INTEGER) INNER JOIN vt0 ON CAST(vt0.c0 AS REAL) WHERE (CASE (+ ('CX6GZ\BCP'))  WHEN NULLIF(DISTINCT t0.c0, vt0.c0) THEN ((vt0.c0)=(t0.c0)) ELSE vt1.c0 END) UNION ALL SELECT * FROM t0 CROSS JOIN vt1 ON CAST((NOT (t0.c0)) AS INTEGER) INNER JOIN vt0 ON CAST(vt0.c0 AS REAL) WHERE ((NOT (CASE (+ ('CX6GZ\BCP'))  WHEN NULLIF(DISTINCT t0.c0, vt0.c0) THEN ((vt0.c0)==(t0.c0)) ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt1 ON CAST((NOT (t0.c0)) AS INTEGER) INNER JOIN vt0 ON CAST(vt0.c0 AS REAL) WHERE (((CASE (+ ('CX6GZ\BCP'))  WHEN NULLIF(DISTINCT t0.c0, vt0.c0) THEN ((vt0.c0)==(t0.c0)) ELSE vt1.c0 END) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON CAST((NOT (t0.c0)) AS INTEGER) INNER JOIN vt0 ON CAST(vt0.c0 AS REAL);
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, t0.c0))))<=(json_insert(t0.c0, t0.c0, t0.c0, 'HX*H', vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, t0.c0))))<=(json_insert(t0.c0, t0.c0, t0.c0, 'HX*H', vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, t0.c0))))<=(json_insert(t0.c0, t0.c0, t0.c0, 'HX*H', vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING MAX(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (MAX(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((MAX(TOTAL(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TRIM(t0.c0 COLLATE RTRIM);
SELECT * FROM vt1 FULL OUTER JOIN t0 ON TRIM(t0.c0 COLLATE RTRIM) WHERE ((('-2135001612' IN ()) IN ())) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TRIM(t0.c0 COLLATE RTRIM) WHERE ((NOT ((('-2135001612' IN ()) IN ())))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN t0 ON TRIM(t0.c0 COLLATE RTRIM) WHERE ((((('-2135001612' IN ()) IN ())) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TRIM(t0.c0 COLLATE RTRIM);
SELECT DISTINCT vt0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt1 NOT INDEXED, vt0 WHERE (((UPPER(DISTINCT t0.c0))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((UPPER(DISTINCT t0.c0))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt1, vt0 WHERE (((((UPPER(DISTINCT t0.c0))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.2614494331766696))) BETWEEN (LIKE(vt1.c0, vt1.c0)) AND ((vt0.c0 IN (vt0.c0)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.2614494331766696))) BETWEEN (LIKE(vt1.c0, vt1.c0)) AND ((vt0.c0 IN (vt0.c0)))) WHERE (((vt0.c0 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.2614494331766696))) BETWEEN (LIKE(vt1.c0, vt1.c0)) AND ((vt0.c0 IN (vt0.c0)))) WHERE ((NOT (((vt0.c0 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.2614494331766696))) BETWEEN (LIKE(vt1.c0, vt1.c0)) AND ((vt0.c0 IN (vt0.c0)))) WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.2614494331766696))) BETWEEN (LIKE(vt1.c0, vt1.c0)) AND ((vt0.c0 IN (vt0.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING MAX(SUM(vt1.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (MAX(SUM(vt1.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((MAX(SUM(vt1.c0))) ISNULL);
SELECT * FROM vt1, vt0, t0;
SELECT * FROM vt1, vt0 NOT INDEXED, t0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1399920568' THEN vt1.c0 END)) AND ((((vt0.c0) ISNULL))))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1399920568' THEN vt1.c0 END)) AND ((((vt0.c0) ISNULL))))))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1399920568' THEN vt1.c0 END)) AND ((((vt0.c0) ISNULL))))) ISNULL));
SELECT * FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE (((((vt0.c0) IS TRUE)) NOT NULL)) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT (((((vt0.c0) IS TRUE)) NOT NULL)))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 NOT INDEXED WHERE (((((((vt0.c0) IS TRUE)) NOT NULL)) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 NOT INDEXED FULL OUTER JOIN vt1 ON ((json_extract(vt0.c0, t0.c0))|(CASE WHEN vt1.c0 THEN 0.24489368370100395 ELSE vt0.c0 END)) INNER JOIN t0 ON t0.c0 GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((((vt0.c0))>((vt0.c0))))OR((+ (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((((vt0.c0))>((vt0.c0))))OR((+ (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((((vt0.c0))>((vt0.c0))))OR((+ (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (CAST(((t0.c0) NOTNULL) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (CAST(((t0.c0) NOTNULL) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (((CAST(((t0.c0) NOTNULL) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (((t0.c0)|(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((+ (((t0.c0)|(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((+ (((t0.c0)|(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON JULIANDAY(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c0 COLLATE NOCASE) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON JULIANDAY(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c0 COLLATE NOCASE) GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT(((AVG(t0.c0)) NOTNULL)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON JULIANDAY(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c0 COLLATE NOCASE) GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(t0.c0)) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON JULIANDAY(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c0 COLLATE NOCASE) GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT(((AVG(t0.c0)) NOTNULL))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) ISNULL));
SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((vt0.c0)<<(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0)-(vt1.c0)))))OR(json_patch(vt1.c0, vt0.c0))))OR((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((((((vt0.c0)<<(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0)-(vt1.c0)))))OR(json_patch(vt1.c0, vt0.c0))))OR((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((((vt0.c0)<<(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0)-(vt1.c0)))))OR(json_patch(vt1.c0, vt0.c0))))OR((- (vt0.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING AVG((vt1.c0 IN (MIN(SUM(SUM(NULL)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (AVG((vt1.c0 IN (MIN(SUM(SUM(NULL)))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((AVG((vt1.c0 IN (MIN(SUM(SUM(NULL))))))) ISNULL);
SELECT ALL t0.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM t0, vt1 WHERE (CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))>(MIN(vt0.c0, t0.c0, t0.c0, vt0.c0)));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))>(MIN(vt0.c0, t0.c0, t0.c0, vt0.c0))) WHERE (t0.c0) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))>(MIN(vt0.c0, t0.c0, t0.c0, vt0.c0))) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))>(MIN(vt0.c0, t0.c0, t0.c0, vt0.c0))) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))>(MIN(vt0.c0, t0.c0, t0.c0, vt0.c0)));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0)>(vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (TYPEOF(DISTINCT ((vt1.c0)>(vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE (((TYPEOF(DISTINCT ((vt1.c0)>(vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0) ISNULL) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((vt1.c0) ISNULL) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))OR(NULL)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))OR(NULL)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))OR(NULL)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 CROSS JOIN vt1 ON ((((((t0.c0))>=((t0.c0)))))<((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 CROSS JOIN vt1 ON ((((((t0.c0))>=((t0.c0)))))<((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(vt1.c0)) NOT BETWEEN ('>鹌*u|A') AND (TOTAL(MAX(t0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 CROSS JOIN vt1 ON ((((((t0.c0))>=((t0.c0)))))<((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((SUM(vt1.c0)) NOT BETWEEN ('>鹌*u|A') AND (TOTAL(MAX(t0.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 CROSS JOIN vt1 ON ((((((t0.c0))>=((t0.c0)))))<((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) GROUP BY vt0.c0, vt1.c0 HAVING ((((SUM(vt1.c0)) NOT BETWEEN ('>鹌*u|A') AND (TOTAL(MAX(t0.c0))))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((((vt0.c0 IN ()))-(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT ((((vt0.c0 IN ()))-(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((((((vt0.c0 IN ()))-(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING TOTAL(((((vt1.c0)AND(AVG(MIN(MAX(AVG(GROUP_CONCAT(vt0.c0))))))))AND(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((((vt1.c0)AND(AVG(MIN(MAX(AVG(GROUP_CONCAT(vt0.c0))))))))AND(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((TOTAL(((((vt1.c0)AND(AVG(MIN(MAX(AVG(GROUP_CONCAT(vt0.c0))))))))AND(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL SUM((+ (CAST(vt0.c0 AS TEXT)))) FROM vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0, t0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE ((((((t0.c0)OR(vt1.c0)))OR(t0.c0)) IN (NULLIF(DISTINCT vt1.c0, vt0.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT ((((((t0.c0)OR(vt1.c0)))OR(t0.c0)) IN (NULLIF(DISTINCT vt1.c0, vt0.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE ((((((((t0.c0)OR(vt1.c0)))OR(t0.c0)) IN (NULLIF(DISTINCT vt1.c0, vt0.c0)))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (((vt0.c0 IN (t0.c0))) NOTNULL);
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (((vt0.c0 IN (t0.c0))) NOTNULL) WHERE (((+ (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (((vt0.c0 IN (t0.c0))) NOTNULL) WHERE ((NOT (((+ (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (((vt0.c0 IN (t0.c0))) NOTNULL) WHERE (((((+ (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (((vt0.c0 IN (t0.c0))) NOTNULL);
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE (TYPEOF((vt1.c0 IN ()))) GROUP BY t0.c0, vt0.c0, vt1.c0 UNION SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT (TYPEOF((vt1.c0 IN ()))))) GROUP BY t0.c0, vt0.c0, vt1.c0 UNION SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE (((TYPEOF((vt1.c0 IN ()))) ISNULL)) GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE ((vt0.c0) NOTNULL)  WHEN TOTAL(COUNT(*)) THEN TOTAL(vt0.c0) WHEN TOTAL(MIN(MIN(vt0.c0))) THEN MIN(vt0.c0) WHEN CAST(SUM(MAX(vt0.c0)) AS REAL) THEN AVG(vt0.c0) WHEN LIKE(MAX(vt0.c0), vt0.c0, '-') THEN ((((((((COUNT(*))OR(0x7eea37dd)))OR(COUNT(*))))OR(vt0.c0)))OR(vt0.c0)) WHEN (NOT (NULL)) THEN SUM(MAX(vt0.c0)) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE ((vt0.c0) NOTNULL)  WHEN TOTAL(COUNT(*)) THEN TOTAL(vt0.c0) WHEN TOTAL(MIN(MIN(vt0.c0))) THEN MIN(vt0.c0) WHEN CAST(SUM(MAX(vt0.c0)) AS REAL) THEN AVG(vt0.c0) WHEN LIKE(MAX(vt0.c0), vt0.c0, '-') THEN ((((((((COUNT(*))OR(0X7eea37dd)))OR(COUNT(*))))OR(vt0.c0)))OR(vt0.c0)) WHEN (NOT (NULL)) THEN SUM(MAX(vt0.c0)) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE ((vt0.c0) NOTNULL)  WHEN TOTAL(COUNT(*)) THEN TOTAL(vt0.c0) WHEN TOTAL(MIN(MIN(vt0.c0))) THEN MIN(vt0.c0) WHEN CAST(SUM(MAX(vt0.c0)) AS REAL) THEN AVG(vt0.c0) WHEN LIKE(MAX(vt0.c0), vt0.c0, '-') THEN ((((((((COUNT(*))OR(0x7eea37dd)))OR(COUNT(*))))OR(vt0.c0)))OR(vt0.c0)) WHEN (NOT (NULL)) THEN SUM(MAX(vt0.c0)) END) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON t0.c0 WHERE (UPPER(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON t0.c0 WHERE ((NOT (UPPER(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON t0.c0 WHERE (((UPPER(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))) ISNULL));
SELECT ALL vt1.c0, t0.c0 FROM t0 INNER JOIN vt1 ON t0.c0;
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND (('CX6GZ\BCP' COLLATE BINARY)))) UNION SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND (('CX6GZ\BCP' COLLATE BINARY)))))) UNION SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND (('CX6GZ\BCP' COLLATE BINARY)))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0) NOTNULL))<((vt1.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))<((vt1.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))<((vt1.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (+ (AVG(vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((+ (AVG(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((+ (AVG(vt0.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (+ (AVG(vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((+ (AVG(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((+ (AVG(vt0.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT MAX((((((vt0.c0))>((t0.c0))))|(vt0.c0))) FROM t0, vt1, vt0;
SELECT * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((('1533440757') IS TRUE)) UNION ALL SELECT * FROM t0, vt1, vt0 NOT INDEXED WHERE ((NOT ((('1533440757') IS TRUE)))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((((('1533440757') IS TRUE)) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c0 COLLATE RTRIM THEN t0.c0 END LEFT OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((0.8194881547200699) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE (~ (t0.c0)) END GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING MAX(SQLITE_VERSION()) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MAX(SQLITE_VERSION()))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((MAX(SQLITE_VERSION())) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING MAX(SQLITE_VERSION()) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MAX(SQLITE_VERSION()))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((MAX(SQLITE_VERSION())) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)GLOB((NOT (0.42183265008112547)))) INNER JOIN vt0 ON ((((((((NULL)AND(x'7945')))OR(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND('-1913667566'));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (CASE ((((vt0.c0)AND(t0.c0)))AND(t0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN CASE x''  WHEN x'' THEN t0.c0 END ELSE vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE ((((vt0.c0)AND(t0.c0)))AND(t0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN CASE x''  WHEN x'' THEN t0.c0 END ELSE vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((CASE ((((vt0.c0)AND(t0.c0)))AND(t0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN CASE x''  WHEN x'' THEN t0.c0 END ELSE vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)|(vt1.c0))))<((vt1.c0 COLLATE NOCASE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)|(vt1.c0))))<((vt1.c0 COLLATE NOCASE)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)|(vt1.c0))))<((vt1.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING COUNT(CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(CAST(t0.c0 AS NUMERIC))) ISNULL);
SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING COUNT(CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(CAST(t0.c0 AS NUMERIC))) ISNULL);
SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) IS FALSE) IN ()) CROSS JOIN vt1 ON vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) IS FALSE) IN ()) CROSS JOIN vt1 ON vt1.c0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(x''))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) IS FALSE) IN ()) CROSS JOIN vt1 ON vt1.c0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(x''))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) IS FALSE) IN ()) CROSS JOIN vt1 ON vt1.c0 WHERE (((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(x''))) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) IS FALSE) IN ()) CROSS JOIN vt1 ON vt1.c0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON ((LOWER(vt0.c0))*(((t0.c0)>>(vt1.c0))));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON ((LOWER(vt0.c0))*(((t0.c0)>>(vt1.c0)))) WHERE (NULL) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, t0 NOT INDEXED CROSS JOIN vt1 ON ((LOWER(vt0.c0))*(((t0.c0)>>(vt1.c0)))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON ((LOWER(vt0.c0))*(((t0.c0)>>(vt1.c0)))) WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON ((LOWER(vt0.c0))*(((t0.c0)>>(vt1.c0))));
SELECT vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON ((SUBSTR(NULL, vt0.c0)) IS FALSE) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON ((SUBSTR(NULL, vt0.c0)) IS FALSE) WHERE (((LTRIM(vt1.c0, vt1.c0))<<(vt1.c0))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON ((SUBSTR(NULL, vt0.c0)) IS FALSE) WHERE ((NOT (((LTRIM(vt1.c0, vt1.c0))<<(vt1.c0))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON ((SUBSTR(NULL, vt0.c0)) IS FALSE) WHERE (((((LTRIM(vt1.c0, vt1.c0))<<(vt1.c0))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) IS TRUE) LEFT OUTER JOIN vt0 ON ((SUBSTR(NULL, vt0.c0)) IS FALSE) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt1.c0 FROM t0, vt1;
SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((~ ((+ (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 WHERE ((NOT ((~ ((+ (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((((~ ((+ (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT NULL))IS(CAST(vt1.c0 AS NUMERIC)));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT NULL))IS(CAST(vt1.c0 AS NUMERIC))) WHERE ((- ((~ (t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT NULL))IS(CAST(vt1.c0 AS NUMERIC))) WHERE ((NOT ((- ((~ (t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT NULL))IS(CAST(vt1.c0 AS NUMERIC))) WHERE ((((- ((~ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT NULL))IS(CAST(vt1.c0 AS NUMERIC)));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(0Xffffffffc2bdac1a AS BLOB)) AND (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(0Xffffffffc2bdac1a AS BLOB)) AND (CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(0xffffffffc2bdac1a AS BLOB)) AND (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ISNULL));
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((+ (vt0.c0))))<=((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((+ (vt0.c0))))<=((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((+ (vt0.c0))))<=((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0))>((t0.c0))))AND(((t0.c0) BETWEEN ('2046032644') AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0))>((t0.c0))))AND(((t0.c0) BETWEEN ('2046032644') AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0))>((t0.c0))))AND(((t0.c0) BETWEEN ('2046032644') AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((-4.2042962E8)LIKE(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((-4.2042962E8)LIKE(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((-4.2042962E8)LIKE(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((-4.2042962E8)LIKE(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((-4.2042962E8)LIKE(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((-4.2042962E8)LIKE(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE ((((- (t0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT ((((- (t0.c0))) IS TRUE)))) UNION ALL SELECT * FROM vt1, t0 WHERE ((((((- (t0.c0))) IS TRUE)) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt0, vt1 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0, vt1 WHERE (((((CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('e4书ow') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ('e4书ow'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('e4书ow') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON (CASE t0.c0  WHEN vt0.c0 THEN '' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0Xffffffff9085c12d WHEN x'' THEN vt0.c0 END IN (vt0.c0)) RIGHT OUTER JOIN t0 ON CAST((((vt0.c0))>=((-1.399920568E9))) AS BLOB) GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON vt1.c0;
SELECT ALL t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE (CASE (t0.c0 IN ())  WHEN ((t0.c0)OR(t0.c0)) THEN CHANGES() WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS NUMERIC) WHEN (((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((t0.c0)<=(vt1.c0)) END) UNION ALL SELECT ALL t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE ((NOT (CASE (t0.c0 IN ())  WHEN ((t0.c0)OR(t0.c0)) THEN CHANGES() WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS NUMERIC) WHEN (((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((t0.c0)<=(vt1.c0)) END))) UNION ALL SELECT ALL t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE (((CASE (t0.c0 IN ())  WHEN ((t0.c0)OR(t0.c0)) THEN CHANGES() WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS NUMERIC) WHEN (((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((t0.c0)<=(vt1.c0)) END) ISNULL));
SELECT t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON vt1.c0;
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((0.5030001599107214) IS TRUE);
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((0.5030001599107214) IS TRUE) WHERE (CAST(((vt0.c0) NOTNULL) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((0.5030001599107214) IS TRUE) WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((0.5030001599107214) IS TRUE) WHERE (((CAST(((vt0.c0) NOTNULL) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((0.5030001599107214) IS TRUE);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON vt1.c0 LEFT OUTER JOIN vt0 ON (((0.3603118385331371) NOT NULL) IN (UPPER(DISTINCT t0.c0), ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN t0 ON vt1.c0 LEFT OUTER JOIN vt0 ON (((0.3603118385331371) NOT NULL) IN (UPPER(DISTINCT t0.c0), ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) GROUP BY vt1.c0 HAVING GROUP_CONCAT(COUNT(t0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON vt1.c0 LEFT OUTER JOIN vt0 ON (((0.3603118385331371) NOT NULL) IN (UPPER(DISTINCT t0.c0), ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(t0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN t0 ON vt1.c0 LEFT OUTER JOIN vt0 ON (((0.3603118385331371) NOT NULL) IN (UPPER(DISTINCT t0.c0), ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(COUNT(t0.c0))) ISNULL);
SELECT * FROM vt0, vt1, t0;
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((~ (((vt1.c0)<=(vt1.c0))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((NOT ((~ (((vt1.c0)<=(vt1.c0))))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((((~ (((vt1.c0)<=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN vt0.c0 THEN 1.533440757E9 ELSE vt1.c0 END)))AND(((vt1.c0) NOT NULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN vt0.c0 THEN 1.533440757E9 ELSE vt1.c0 END)))AND(((vt1.c0) NOT NULL)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN vt0.c0 THEN 1.533440757E9 ELSE vt1.c0 END)))AND(((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(vt1.c0))) BETWEEN (((MIN(vt1.c0)) BETWEEN (NULL) AND (vt0.c0))) AND (((MIN(COUNT(*))) ISNULL))) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(GROUP_CONCAT(vt1.c0))) BETWEEN (((MIN(vt1.c0)) BETWEEN (NULL) AND (vt0.c0))) AND (((MIN(COUNT(*))) ISNULL))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((TOTAL(GROUP_CONCAT(vt1.c0))) BETWEEN (((MIN(vt1.c0)) BETWEEN (NULL) AND (vt0.c0))) AND (((MIN(COUNT(*))) ISNULL)))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))>=((vt0.c0 COLLATE NOCASE))) CROSS JOIN t0 ON (- (((vt1.c0) IS TRUE)));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))>=((vt0.c0 COLLATE NOCASE))) CROSS JOIN t0 ON (- (((vt1.c0) IS TRUE))) WHERE (x'') UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))>=((vt0.c0 COLLATE NOCASE))) CROSS JOIN t0 ON (- (((vt1.c0) IS TRUE))) WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))>=((vt0.c0 COLLATE NOCASE))) CROSS JOIN t0 ON (- (((vt1.c0) IS TRUE))) WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))>=((vt0.c0 COLLATE NOCASE))) CROSS JOIN t0 ON (- (((vt1.c0) IS TRUE)));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON JULIANDAY(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, '0.03067581729369928' COLLATE RTRIM);
SELECT DISTINCT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON JULIANDAY(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, '0.03067581729369928' COLLATE RTRIM) WHERE (LOWER(((vt0.c0) IS TRUE))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON JULIANDAY(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, '0.03067581729369928' COLLATE RTRIM) WHERE ((NOT (LOWER(((vt0.c0) IS TRUE))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON JULIANDAY(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, '0.03067581729369928' COLLATE RTRIM) WHERE (((LOWER(((vt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON JULIANDAY(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, '0.03067581729369928' COLLATE RTRIM);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))LIKE(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))LIKE(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))LIKE(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(*))|((vt1.c0 IN ()))) UNION ALL SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))|((vt1.c0 IN ()))))) UNION ALL SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING ((((COUNT(*))|((vt1.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(*))|((vt1.c0 IN ()))) UNION ALL SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))|((vt1.c0 IN ()))))) UNION ALL SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING ((((COUNT(*))|((vt1.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((+ ((t0.c0 IN ())))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((+ ((t0.c0 IN ())))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((+ ((t0.c0 IN ())))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))>=(((t0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))>=(((t0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))>=(((t0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING MAX(TOTAL(vt0.c0)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (MAX(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((MAX(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM t0, vt1, vt0;
SELECT * FROM t0, vt1, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE ((NOT (CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE (((CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (-1.981063549E9) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (-1.981063549E9))) UNION SELECT DISTINCT * FROM t0 WHERE (((-1.981063549E9) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOT NULL) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT NULL) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(CAST(MIN(vt1.c0) AS REAL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(CAST(MIN(vt1.c0) AS REAL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(CAST(MIN(vt1.c0) AS REAL))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'e6ab5b3c' END IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'e6ab5b3c' END IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'e6ab5b3c' END IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1 WHERE (((t0.c0)IS(CASE WHEN vt0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((t0.c0)IS(CASE WHEN vt0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1 WHERE (((((t0.c0)IS(CASE WHEN vt0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)OR(vt1.c0)), (NOT (vt1.c0)))) AND (((+ (t0.c0)), CAST(t0.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE ((NOT ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)OR(vt1.c0)), (NOT (vt1.c0)))) AND (((+ (t0.c0)), CAST(t0.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)OR(vt1.c0)), (NOT (vt1.c0)))) AND (((+ (t0.c0)), CAST(t0.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((NULL)AND((((GROUP_CONCAT(t0.c0)))<((MAX(t0.c0)))))))OR((((t0.c0))<=((t0.c0))))))AND(COUNT(t0.c0))))OR(MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((((((NULL)AND((((GROUP_CONCAT(t0.c0)))<((MAX(t0.c0)))))))OR((((t0.c0))<=((t0.c0))))))AND(COUNT(t0.c0))))OR(MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((((NULL)AND((((GROUP_CONCAT(t0.c0)))<((MAX(t0.c0)))))))OR((((t0.c0))<=((t0.c0))))))AND(COUNT(t0.c0))))OR(MIN(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((NULL)AND((((GROUP_CONCAT(t0.c0)))<((MAX(t0.c0)))))))OR((((t0.c0))<=((t0.c0))))))AND(COUNT(t0.c0))))OR(MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((((((NULL)AND((((GROUP_CONCAT(t0.c0)))<((MAX(t0.c0)))))))OR((((t0.c0))<=((t0.c0))))))AND(COUNT(t0.c0))))OR(MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((((NULL)AND((((GROUP_CONCAT(t0.c0)))<((MAX(t0.c0)))))))OR((((t0.c0))<=((t0.c0))))))AND(COUNT(t0.c0))))OR(MIN(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>(vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((NOT (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((NOT (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE (884386168) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE ((NOT (884386168))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE (((884386168) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(MIN(AVG(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(MIN(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(MIN(AVG(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD('', 0.5075915593436808) THEN MIN(vt0.c0, vt0.c0) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END;
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD('', 0.5075915593436808) THEN MIN(vt0.c0, vt0.c0) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END WHERE ((((+ (vt0.c0))) NOTNULL)) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD('', 0.5075915593436808) THEN MIN(vt0.c0, vt0.c0) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END WHERE ((NOT ((((+ (vt0.c0))) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD('', 0.5075915593436808) THEN MIN(vt0.c0, vt0.c0) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END WHERE ((((((+ (vt0.c0))) NOTNULL)) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD('', 0.5075915593436808) THEN MIN(vt0.c0, vt0.c0) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END;
SELECT DISTINCT t0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt1, vt0 WHERE ('}') UNION SELECT DISTINCT t0.c0 FROM t0, vt1, vt0 WHERE ((NOT ('}'))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1, vt0 WHERE ((('}') ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1, vt0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((t0.c0)OR(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((t0.c0)OR(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((t0.c0)OR(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((COUNT(vt1.c0) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((COUNT(vt1.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((COUNT(vt1.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((COUNT(vt1.c0) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((COUNT(vt1.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((COUNT(vt1.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((vt0.c0) NOT NULL)) UNION ALL SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, vt0, t0 WHERE ((- (((vt1.c0) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((- (((vt1.c0) IS TRUE)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, vt0, t0 WHERE ((((- (((vt1.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING AVG(TOTAL(vt1.c0)) UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING (NOT (AVG(TOTAL(vt1.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING ((AVG(TOTAL(vt1.c0))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0;
SELECT t0.c0 FROM vt0, t0 WHERE (NULLIF(((((((((t0.c0)AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(t0.c0 AS TEXT))) UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (NULLIF(((((((((t0.c0)AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(t0.c0 AS TEXT))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 WHERE (((NULLIF(((((((((t0.c0)AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(t0.c0 AS TEXT))) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ ('0.6410197772042044'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ ('0.6410197772042044'))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ ('0.6410197772042044'))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((- ((- (t0.c0))))) GROUP BY t0.c0, vt0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT ((- ((- (t0.c0))))))) GROUP BY t0.c0, vt0.c0, vt1.c0 UNION SELECT t0.c0, vt0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((((- ((- (t0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT t0.c0))LIKE(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT t0.c0))LIKE(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))) GROUP BY vt1.c0 HAVING MAX(UNLIKELY(DISTINCT MAX(t0.c0))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT t0.c0))LIKE(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))) GROUP BY vt1.c0 HAVING (NOT (MAX(UNLIKELY(DISTINCT MAX(t0.c0))))) UNION ALL SELECT vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT t0.c0))LIKE(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))) GROUP BY vt1.c0 HAVING ((MAX(UNLIKELY(DISTINCT MAX(t0.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (vt0.c0) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((vt0.c0) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE (INSTR((vt0.c0 IN ()), '-2028966642')) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE ((NOT (INSTR((vt0.c0 IN ()), '-2028966642')))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE (((INSTR((vt0.c0 IN ()), '-2028966642')) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) IS TRUE) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) IS TRUE) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(MIN(GROUP_CONCAT(MIN(COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(MIN(GROUP_CONCAT(MIN(COUNT(*))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(MIN(GROUP_CONCAT(MIN(COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((((((t0.c0))>=((vt0.c0)))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c0)GLOB(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM t0, vt0 WHERE ((NOT ((((((t0.c0))>=((vt0.c0)))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c0)GLOB(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM t0, vt0 WHERE ((((((((t0.c0))>=((vt0.c0)))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (CASE WHEN LIKE(t0.c0, x'9659') THEN ((vt1.c0) IS FALSE) ELSE ((t0.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (CASE WHEN LIKE(t0.c0, x'9659') THEN ((vt1.c0) IS FALSE) ELSE ((t0.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((CASE WHEN LIKE(t0.c0, x'9659') THEN ((vt1.c0) IS FALSE) ELSE ((t0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((~ (((vt0.c0)==(vt0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((~ (((vt0.c0)==(vt0.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((~ (((vt0.c0)=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 NOT INDEXED, t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*))*(COUNT(COUNT(*)))) UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*))*(COUNT(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING ((((COUNT(*))*(COUNT(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((NOT (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (0.8544361368699687))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((NOT (0.8544361368699687))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((NOT (0.8544361368699687))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON (('-1361694594')/(((vt1.c0)>>(vt1.c0)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON (('-1361694594')/(((vt1.c0)>>(vt1.c0)))) GROUP BY vt1.c0 HAVING SUM(COUNT(vt0.c0)) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON (('-1361694594')/(((vt1.c0)>>(vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON (('-1361694594')/(((vt1.c0)>>(vt1.c0)))) GROUP BY vt1.c0 HAVING ((SUM(COUNT(vt0.c0))) ISNULL);
SELECT vt1.c0 FROM t0, vt1;
SELECT vt1.c0 FROM t0, vt1 WHERE (((((((t0.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (t0.c0) AND (((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 WHERE ((NOT (((((((t0.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (t0.c0) AND (((vt1.c0) IS FALSE)))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 WHERE (((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (t0.c0) AND (((vt1.c0) IS FALSE)))) ISNULL));
SELECT vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 NOT INDEXED FULL OUTER JOIN vt0 ON vt1.c0;
SELECT DISTINCT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt1.c0 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) UNION SELECT DISTINCT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt1.c0 WHERE (((CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0, vt1 NOT INDEXED FULL OUTER JOIN vt0 ON vt1.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)|(vt1.c0))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)|(vt1.c0))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)|(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((NOT (TOTAL(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((NOT (TOTAL(TOTAL(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((NOT (TOTAL(TOTAL(vt1.c0)))))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (vt0.c0) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt1.c0 FROM t0 NOT INDEXED, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))-((vt1.c0 IN (t0.c0, t0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))-((vt1.c0 IN (t0.c0, t0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))-((vt1.c0 IN (t0.c0, t0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0 NOT INDEXED, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) NOTNULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON CASE ((((((((t0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))  WHEN ((((((((vt1.c0)OR(t0.c0)))OR('')))AND(vt0.c0)))OR(t0.c0)) THEN ((vt0.c0)=('-')) END FULL OUTER JOIN vt1 ON 0X32a32507 COLLATE NOCASE GROUP BY vt0.c0, vt1.c0;
SELECT ALL t0.c0 FROM vt1, t0;
SELECT t0.c0 FROM vt1, t0 WHERE (MAX(CASE WHEN vt1.c0 THEN -95373564 END, x'')) UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (MAX(CASE WHEN vt1.c0 THEN -95373564 END, x'')))) UNION ALL SELECT t0.c0 FROM vt1, t0 WHERE (((MAX(CASE WHEN vt1.c0 THEN -95373564 END, x'')) ISNULL));
SELECT ALL t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOT BETWEEN ((- (NULL))) AND ((NOT (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0))) NOT BETWEEN ((- (NULL))) AND ((NOT (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0))) NOT BETWEEN ((- (NULL))) AND ((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t0.c0)<=(vt0.c0)) WHEN (+ (-1.545382126E9)) THEN CAST(t0.c0 AS NUMERIC) WHEN SUBSTR(t0.c0, t0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t0.c0)<=(vt0.c0)) WHEN (+ (-1.545382126E9)) THEN CAST(t0.c0 AS NUMERIC) WHEN SUBSTR(t0.c0, t0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END WHERE (((((((t0.c0))<((t0.c0)))))<>((((vt0.c0)&(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t0.c0)<=(vt0.c0)) WHEN (+ (-1.545382126E9)) THEN CAST(t0.c0 AS NUMERIC) WHEN SUBSTR(t0.c0, t0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END WHERE ((NOT (((((((t0.c0))<((t0.c0)))))<>((((vt0.c0)&(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t0.c0)<=(vt0.c0)) WHEN (+ (-1.545382126E9)) THEN CAST(t0.c0 AS NUMERIC) WHEN SUBSTR(t0.c0, t0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END WHERE (((((((((t0.c0))<((t0.c0)))))<>((((vt0.c0)&(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t0.c0)<=(vt0.c0)) WHEN (+ (-1.545382126E9)) THEN CAST(t0.c0 AS NUMERIC) WHEN SUBSTR(t0.c0, t0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING GROUP_CONCAT(SUM(COUNT(t0.c0))) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(COUNT(t0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((GROUP_CONCAT(SUM(COUNT(t0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((NULL)AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((NULL)AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((NULL)AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 WHERE (((((((((t0.c0)OR((t0.c0 IN ('*yq갚2X', t0.c0)))))AND((('-757749203')LIKE(vt0.c0)))))OR(((t0.c0)<=('-1993480630')))))AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((((((((t0.c0)OR((t0.c0 IN ('*yq갚2X', t0.c0)))))AND((('-757749203')LIKE(vt0.c0)))))OR(((t0.c0)<=('-1993480630')))))AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 WHERE (((((((((((t0.c0)OR((t0.c0 IN ('*yq갚2X', t0.c0)))))AND((('-757749203')LIKE(vt0.c0)))))OR(((t0.c0)<=('-1993480630')))))AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1;
SELECT vt1.c0, t0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(vt1.c0))/((~ (t0.c0)))) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(vt1.c0))/((~ (t0.c0)))) WHERE ((((vt0.c0)!=(vt0.c0)) IN (((t0.c0)%(vt1.c0))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(vt1.c0))/((~ (t0.c0)))) WHERE ((NOT ((((vt0.c0)<>(vt0.c0)) IN (((t0.c0)%(vt1.c0))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(vt1.c0))/((~ (t0.c0)))) WHERE ((((((vt0.c0)!=(vt0.c0)) IN (((t0.c0)%(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((UNLIKELY(vt1.c0))/((~ (t0.c0)))) GROUP BY vt1.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0 HAVING ((((((((COUNT(*))OR(t0.c0)))AND('254206599')))AND(x'')))OR(vt1.c0)) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0 HAVING (NOT (((((((((COUNT(*))OR(t0.c0)))AND('254206599')))AND(x'')))OR(vt1.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0 HAVING ((((((((((COUNT(*))OR(t0.c0)))AND('254206599')))AND(x'')))OR(vt1.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0 HAVING ((((((((COUNT(*))OR(t0.c0)))AND('254206599')))AND(x'')))OR(vt1.c0)) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0 HAVING (NOT (((((((((COUNT(*))OR(t0.c0)))AND('254206599')))AND(x'')))OR(vt1.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0 HAVING ((((((((((COUNT(*))OR(t0.c0)))AND('254206599')))AND(x'')))OR(vt1.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(t0.c0)))) AND ((vt1.c0))) GROUP BY t0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (ABS(('n[6' IN ()))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (ABS(('n[6' IN ()))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((ABS(('n[6' IN ()))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) NOTNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((((NOT (t0.c0)))OR(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((((NOT (t0.c0)))OR(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((((NULL))>((CAST(vt0.c0 AS TEXT))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((((NOT (t0.c0)))OR(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((NOT ((((NULL))>((CAST(vt0.c0 AS TEXT))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((((NOT (t0.c0)))OR(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((((((NULL))>((CAST(vt0.c0 AS TEXT))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((((NOT (t0.c0)))OR(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS TEXT)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS TEXT)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS TEXT)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON ((vt0.c0)+(vt1.c0)) COLLATE BINARY FULL OUTER JOIN vt0 ON (((t0.c0) ISNULL) IN (((vt1.c0) IS TRUE)));
SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, vt1 WHERE (CASE CASE vt1.c0  WHEN NULL THEN x'be26' END  WHEN ((t0.c0)LIKE(0.4813958266626258)) THEN ((vt0.c0) ISNULL) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (CASE CASE vt1.c0  WHEN NULL THEN x'be26' END  WHEN ((t0.c0)LIKE(0.4813958266626258)) THEN ((vt0.c0) ISNULL) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0, vt1 WHERE (((CASE CASE vt1.c0  WHEN NULL THEN x'be26' END  WHEN ((t0.c0)LIKE(0.4813958266626258)) THEN ((vt0.c0) ISNULL) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0)) BETWEEN (MAX(TOTAL(GROUP_CONCAT(GROUP_CONCAT(NULL))))) AND ((vt1.c0 IN (COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0)) BETWEEN (MAX(TOTAL(GROUP_CONCAT(GROUP_CONCAT(NULL))))) AND ((vt1.c0 IN (COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0)) BETWEEN (MAX(TOTAL(GROUP_CONCAT(GROUP_CONCAT(NULL))))) AND ((vt1.c0 IN (COUNT(*)))))) ISNULL);
SELECT ALL MIN(((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt0.c0)|(vt1.c0))) AND (((vt0.c0)==(vt0.c0))))) FROM vt1, vt0;
SELECT vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0) IS TRUE))>>(((vt0.c0)%(vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) IS TRUE))>>(((vt0.c0)%(vt0.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) IS TRUE))>>(((vt0.c0)%(vt0.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (CAST(((x'6027')<(vt0.c0)) AS TEXT)) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (CAST(((x'6027')<(vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (((CAST(((x'6027')<(vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) IN (((vt1.c0)IS(t0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) IN (((vt1.c0)IS(t0.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) IN (((vt1.c0)IS(t0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING UPPER(vt1.c0) UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING (NOT (UPPER(vt1.c0))) UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((UPPER(vt1.c0)) ISNULL);
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING UPPER(vt1.c0) UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING (NOT (UPPER(vt1.c0))) UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((UPPER(vt1.c0)) ISNULL);
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN LIKELIHOOD(vt1.c0, 0.6936359594759268) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (('P狵') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE NULL END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN LIKELIHOOD(vt1.c0, 0.6936359594759268) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (('P狵') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE NULL END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN LIKELIHOOD(vt1.c0, 0.6936359594759268) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (('P狵') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE NULL END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS INTEGER) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS INTEGER) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS INTEGER) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING MAX((t0.c0 IN ())) UNION ALL SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX((t0.c0 IN ())))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MAX((t0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING MAX((t0.c0 IN ())) UNION ALL SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX((t0.c0 IN ())))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MAX((t0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt0, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE (((((((t0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE ((NOT (((((((t0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE (((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) ISNULL));
SELECT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0))>((0.1106098553255741)))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0))>((0.1106098553255741)))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0))>((0.1106098553255741)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(vt1.c0)))>(((vt0.c0)>(vt1.c0)))) INNER JOIN t0 ON ((((t0.c0)AND((t0.c0 IN ()))))AND('-95373564')) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(vt1.c0)))>(((vt0.c0)>(vt1.c0)))) INNER JOIN t0 ON ((((t0.c0)AND((t0.c0 IN ()))))AND('-95373564')) WHERE ((~ (CAST(vt0.c0 AS INTEGER)))) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(vt1.c0)))>(((vt0.c0)>(vt1.c0)))) INNER JOIN t0 ON ((((t0.c0)AND((t0.c0 IN ()))))AND('-95373564')) WHERE ((NOT ((~ (CAST(vt0.c0 AS INTEGER)))))) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(vt1.c0)))>(((vt0.c0)>(vt1.c0)))) INNER JOIN t0 ON ((((t0.c0)AND((t0.c0 IN ()))))AND('-95373564')) WHERE ((((~ (CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(vt1.c0)))>(((vt0.c0)>(vt1.c0)))) INNER JOIN t0 ON ((((t0.c0)AND((t0.c0 IN ()))))AND('-95373564')) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON 0.8766917391182864 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON 0.8766917391182864 GROUP BY vt1.c0 HAVING CAST(AVG(MIN(x'')) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON 0.8766917391182864 GROUP BY vt1.c0 HAVING (NOT (CAST(AVG(MIN(x'')) AS TEXT))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON 0.8766917391182864 GROUP BY vt1.c0 HAVING ((CAST(AVG(MIN(x'')) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))-(CAST(0.9287726387134366 AS INTEGER)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))-(CAST(0.9287726387134366 AS INTEGER)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))-(CAST(0.9287726387134366 AS INTEGER)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)+(vt1.c0))) IS FALSE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)+(vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)+(vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (CASE WHEN ((t0.c0)|(t0.c0)) THEN ((vt0.c0) ISNULL) END) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (CASE WHEN ((t0.c0)|(t0.c0)) THEN ((vt0.c0) ISNULL) END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (((CASE WHEN ((t0.c0)|(t0.c0)) THEN ((vt0.c0) ISNULL) END) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING 'gu' UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ('gu')) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING (('gu') ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING 'gu' UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ('gu')) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING (('gu') ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS BLOB) GROUP BY vt0.c0, vt1.c0;
SELECT * FROM t0, vt0, vt1;
SELECT ALL * FROM t0, vt0, vt1 WHERE ((- (((vt1.c0)<>(t0.c0))))) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT ((- (((vt1.c0)!=(t0.c0))))))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE ((((- (((vt1.c0)!=(t0.c0))))) ISNULL));
SELECT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0)) AS REAL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST((vt0.c0 IN (vt1.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST((vt0.c0 IN (vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))OR(((vt0.c0) NOT BETWEEN ('618304680') AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN '1884305477' END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((CAST(vt1.c0 AS NUMERIC))OR(((vt0.c0) NOT BETWEEN ('618304680') AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN '1884305477' END))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((CAST(vt1.c0 AS NUMERIC))OR(((vt0.c0) NOT BETWEEN ('618304680') AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN '1884305477' END))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(AVG(COUNT(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(AVG(COUNT(AVG(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(AVG(COUNT(AVG(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0, vt1, t0;
SELECT ALL * FROM vt0, vt1, t0 WHERE ((+ ((t0.c0 IN ())))) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT ((+ ((t0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 WHERE ((((+ ((t0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (-1.399920568E9) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (-1.399920568E9))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((-1.399920568E9) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON t0.c0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE (((((t0.c0) NOT BETWEEN (0Xffffffff99ac01c5) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (0Xffffffff99ac01c5) AND (vt1.c0))) ISNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE (((((((t0.c0) NOT BETWEEN (0xffffffff99ac01c5) AND (vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON t0.c0 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (((MAX(GROUP_CONCAT(vt0.c0)))) BETWEEN ((LIKELIHOOD(vt0.c0, 0.403689110744311))) AND (((~ (COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT ((((MAX(GROUP_CONCAT(vt0.c0)))) BETWEEN ((LIKELIHOOD(vt0.c0, 0.403689110744311))) AND (((~ (COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (((((MAX(GROUP_CONCAT(vt0.c0)))) BETWEEN ((LIKELIHOOD(vt0.c0, 0.403689110744311))) AND (((~ (COUNT(*))))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CHANGES()) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CHANGES()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CHANGES()) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((~ (CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((~ (CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((((~ (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 WHERE (LIKELY(DISTINCT ((vt1.c0)AND(vt1.c0)))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt0 NOT INDEXED, vt1 WHERE ((NOT (LIKELY(DISTINCT ((vt1.c0)AND(vt1.c0)))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((LIKELY(DISTINCT ((vt1.c0)AND(vt1.c0)))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING AVG(((SUM(vt1.c0)) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING (NOT (AVG(((SUM(vt1.c0)) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING ((AVG(((SUM(vt1.c0)) NOT NULL))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) ISNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST((~ (vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST((~ (vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (NULL) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (NULL))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(t0.c0 COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(t0.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(t0.c0 COLLATE NOCASE)) ISNULL);
SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(t0.c0 COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(t0.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(t0.c0 COLLATE NOCASE)) ISNULL);
SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((CAST(t0.c0 AS NUMERIC) IN ())) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT ((CAST(t0.c0 AS NUMERIC) IN ())))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((CAST(t0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((((vt1.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((x'04da') BETWEEN (0.1927083923325711) AND (t0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 NOT INDEXED WHERE ((NOT ((((vt1.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((x'04da') BETWEEN (0.1927083923325711) AND (t0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((((((vt1.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((x'04da') BETWEEN (0.1927083923325711) AND (t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((SUM(vt0.c0) IN (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((SUM(vt0.c0) IN (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((SUM(vt0.c0) IN (vt0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ('') UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (''))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((('') ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (CAST((~ (t0.c0)) AS INTEGER)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (CAST((~ (t0.c0)) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE (((CAST((~ (t0.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN (CAST(vt1.c0 AS INTEGER))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN (CAST(vt1.c0 AS INTEGER))) GROUP BY vt0.c0, vt1.c0 HAVING AVG(CASE WHEN vt0.c0 THEN MIN(MAX(t0.c0)) ELSE MIN(vt0.c0) END) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN (CAST(vt1.c0 AS INTEGER))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(CASE WHEN vt0.c0 THEN MIN(MAX(t0.c0)) ELSE MIN(vt0.c0) END))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN (CAST(vt1.c0 AS INTEGER))) GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(CASE WHEN vt0.c0 THEN MIN(MAX(t0.c0)) ELSE MIN(vt0.c0) END)) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ('OqB') UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ('OqB'))) UNION ALL SELECT * FROM t0, vt0 WHERE ((('OqB') ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0)!=(vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0)<>(vt0.c0)) COLLATE RTRIM WHERE (((('-', ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c0)IS NOT(0x6cace472))))<(('C#,X&v4R	', ((vt0.c0)OR(vt0.c0)), ((vt0.c0) IS TRUE))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0)<>(vt0.c0)) COLLATE RTRIM WHERE ((NOT (((('-', ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c0)IS NOT(0x6cace472))))<(('C#,X&v4R	', ((vt0.c0)OR(vt0.c0)), ((vt0.c0) IS TRUE))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0)!=(vt0.c0)) COLLATE RTRIM WHERE (((((('-', ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c0)IS NOT(0x6cace472))))<(('C#,X&v4R	', ((vt0.c0)OR(vt0.c0)), ((vt0.c0) IS TRUE))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0)!=(vt0.c0)) COLLATE RTRIM;
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY WHERE ((((NOT ('300429656')))IS(vt0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY WHERE ((NOT ((((NOT ('300429656')))IS(vt0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY WHERE ((((((NOT ('300429656')))IS(vt0.c0))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY GROUP BY t0.c0, vt0.c0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN ()), vt1.c0))==(((NULL IN ()), (((0.4363684158535195, vt1.c0, vt0.c0)) BETWEEN ((x'4ef7', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))), ((vt0.c0)=(vt1.c0))))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN ()), vt1.c0))=(((NULL IN ()), (((0.4363684158535195, vt1.c0, vt0.c0)) BETWEEN ((x'4ef7', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))), ((vt0.c0)=(vt1.c0))))) GROUP BY vt1.c0 HAVING GROUP_CONCAT(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN ()), vt1.c0))==(((NULL IN ()), (((0.4363684158535195, vt1.c0, vt0.c0)) BETWEEN ((x'4ef7', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))), ((vt0.c0)=(vt1.c0))))) GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN ()), vt1.c0))==(((NULL IN ()), (((0.4363684158535195, vt1.c0, vt0.c0)) BETWEEN ((x'4ef7', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))), ((vt0.c0)=(vt1.c0))))) GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt1.c0))) IS TRUE);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt1.c0))) IS TRUE) WHERE ((((CAST(t0.c0 AS TEXT)))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))) UNION ALL SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt1.c0))) IS TRUE) WHERE ((NOT ((((CAST(t0.c0 AS TEXT)))==((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))))) UNION ALL SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt1.c0))) IS TRUE) WHERE ((((((CAST(t0.c0 AS TEXT)))==((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))) ISNULL));
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt1.c0))) IS TRUE);
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((CAST(vt1.c0 AS REAL)))<>((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((((CAST(vt1.c0 AS REAL)))<>((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')))))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((((CAST(vt1.c0 AS REAL)))<>((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')))))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON x'b941' COLLATE NOCASE GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON x'b941' COLLATE NOCASE WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON x'b941' COLLATE NOCASE WHERE ((NOT ((((vt0.c0)<=(vt0.c0)) IN ())))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON x'b941' COLLATE NOCASE WHERE ((((((vt0.c0)<=(vt0.c0)) IN ())) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON x'b941' COLLATE NOCASE GROUP BY t0.c0, vt0.c0;
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING AVG(t0.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING (NOT (AVG(t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((AVG(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING AVG(t0.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING (NOT (AVG(t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((AVG(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT ALL SUM(((((vt1.c0) IS FALSE)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) FROM vt0, vt1, t0 ORDER BY ((((t0.c0) ISNULL))&(CASE WHEN t0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((((((((vt1.c0)IS(vt0.c0)))AND(vt1.c0)))OR((+ (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE ((NOT (((((((((((vt1.c0)IS(vt0.c0)))AND(vt1.c0)))OR((+ (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((vt1.c0)IS(vt0.c0)))AND(vt1.c0)))OR((+ (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT)) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN ((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, vt0.c0)))) AND (((t0.c0) NOT NULL))) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN ((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, vt0.c0)))) AND (((t0.c0) NOT NULL))) GROUP BY vt0.c0, t0.c0 HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN MAX(vt0.c0) END)IS NOT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN ((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, vt0.c0)))) AND (((t0.c0) NOT NULL))) GROUP BY vt0.c0, t0.c0 HAVING (NOT (((CASE vt0.c0  WHEN vt0.c0 THEN MAX(vt0.c0) END)IS NOT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN ((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, vt0.c0)))) AND (((t0.c0) NOT NULL))) GROUP BY vt0.c0, t0.c0 HAVING ((((CASE vt0.c0  WHEN vt0.c0 THEN MAX(vt0.c0) END)IS NOT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(vt0.c0)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)<<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)<<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)<<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE);
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE) WHERE ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END IN ())) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE) WHERE ((NOT ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END IN ())))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE) WHERE ((((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE);
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE (TRIM('', t0.c0) COLLATE BINARY) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (TRIM('', t0.c0) COLLATE BINARY))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((TRIM('', t0.c0) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(GROUP_CONCAT(MIN(vt1.c0)))) NOT BETWEEN (((MIN(vt1.c0)) IS TRUE)) AND (((((x'')OR(COUNT(*))))OR(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((COUNT(GROUP_CONCAT(MIN(vt1.c0)))) NOT BETWEEN (((MIN(vt1.c0)) IS TRUE)) AND (((((x'')OR(COUNT(*))))OR(t0.c0)))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((((COUNT(GROUP_CONCAT(MIN(vt1.c0)))) NOT BETWEEN (((MIN(vt1.c0)) IS TRUE)) AND (((((x'')OR(COUNT(*))))OR(t0.c0))))) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1;
SELECT ALL vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE (CAST('-1061997295' AS BLOB)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((NOT (CAST('-1061997295' AS BLOB)))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((CAST('-1061997295' AS BLOB)) ISNULL));
SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN t0 WHERE (((((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(t0.c0))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(t0.c0))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN t0 WHERE (((((((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(t0.c0))) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN ('u9{') AND ((((('-1548580000')AND(vt1.c0)))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL)) NOT BETWEEN ('u9{') AND ((((('-1548580000')AND(vt1.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) ISNULL)) NOT BETWEEN ('u9{') AND ((((('-1548580000')AND(vt1.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((MIN(vt1.c0))OR(((t0.c0)&(COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (((MIN(vt1.c0))OR(((t0.c0)&(COUNT(*))))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((MIN(vt1.c0))OR(((t0.c0)&(COUNT(*)))))) ISNULL);
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((MIN(vt1.c0))OR(((t0.c0)&(COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (((MIN(vt1.c0))OR(((t0.c0)&(COUNT(*))))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((MIN(vt1.c0))OR(((t0.c0)&(COUNT(*)))))) ISNULL);
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(TRIM(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR(TRIM(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0 IN ()))OR(TRIM(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0) IS FALSE)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)OR(vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)OR(vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0, '}', t0.c0)) BETWEEN ((CASE WHEN 0.7744681551486454 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS TEXT), NULL)) AND (((t0.c0 IN (t0.c0)), t0.c0, ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(x'')))AND('710767314')))AND(t0.c0)))OR(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, '}', t0.c0)) BETWEEN ((CASE WHEN 0.7744681551486454 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS TEXT), NULL)) AND (((t0.c0 IN (t0.c0)), t0.c0, ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(x'')))AND('710767314')))AND(t0.c0)))OR(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0, '}', t0.c0)) BETWEEN ((CASE WHEN 0.7744681551486454 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS TEXT), NULL)) AND (((t0.c0 IN (t0.c0)), t0.c0, ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(x'')))AND('710767314')))AND(t0.c0)))OR(t0.c0)))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (0.8582645989581604) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (0.8582645989581604))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((0.8582645989581604) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE (']z') GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT (']z'))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE (((']z') ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (vt1.c0 IN (vt0.c0, vt1.c0)), ((vt1.c0)&(vt0.c0))) LEFT OUTER JOIN vt1 ON ((((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))OR(((vt0.c0)LIKE(vt0.c0)))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (0.020053363328980778) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (0.020053363328980778))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((0.020053363328980778) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((0.7050345491445088)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((0.7050345491445088)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((0.7050345491445088)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0 CROSS JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE -2.135001612E9 END) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE -2.135001612E9 END) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) WHERE ((~ ((t0.c0 IN ())))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE -2.135001612E9 END) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) WHERE ((NOT ((~ ((t0.c0 IN ())))))) UNION ALL SELECT * FROM t0 CROSS JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE -2.135001612E9 END) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) WHERE ((((~ ((t0.c0 IN ())))) ISNULL));
SELECT * FROM t0 CROSS JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE -2.135001612E9 END) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 COLLATE RTRIM)<<('2080705349'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)<<('2080705349'))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)<<('2080705349'))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((NULL) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt1.c0 AS REAL))) GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((x'' COLLATE RTRIM)>(((vt0.c0)<(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((x'' COLLATE RTRIM)>(((vt0.c0)<(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((x'' COLLATE RTRIM)>(((vt0.c0)<(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((((t0.c0))=((vt1.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT ((((((t0.c0))==((vt1.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((((((t0.c0))==((vt1.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END IN ())) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END IN ())))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END IN ())) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((TOTAL(vt1.c0)) IS TRUE) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (((TOTAL(vt1.c0)) IS TRUE))) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((((TOTAL(vt1.c0)) IS TRUE)) ISNULL);
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((TOTAL(vt1.c0)) IS TRUE) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (((TOTAL(vt1.c0)) IS TRUE))) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((((TOTAL(vt1.c0)) IS TRUE)) ISNULL);
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0;
SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE ((NOT (((vt1.c0) IS FALSE) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE (((((vt1.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON '2129278941';
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON '2129278941' WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON '2129278941' WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON '2129278941' WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON '2129278941';
SELECT vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((0.8297888548343567 IN (t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE ((NOT ((((0.8297888548343567 IN (t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((((0.8297888548343567 IN (t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING CAST(((MIN(AVG(vt0.c0)))%(SUM(TOTAL(COUNT(COUNT(vt1.c0)))))) AS BLOB) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (CAST(((MIN(AVG(vt0.c0)))%(SUM(TOTAL(COUNT(COUNT(vt1.c0)))))) AS BLOB))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((CAST(((MIN(AVG(vt0.c0)))%(SUM(TOTAL(COUNT(COUNT(vt1.c0)))))) AS BLOB)) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (0.12217072848660449) UNION ALL SELECT * FROM vt1 WHERE ((NOT (0.12217072848660449))) UNION ALL SELECT ALL * FROM vt1 WHERE (((0.12217072848660449) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))|(((vt0.c0)IS NOT(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))|(((vt0.c0)IS NOT(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))|(((vt0.c0)IS NOT(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))!=('Z}a.*P')) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))<>('Z}a.*P')) WHERE (((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)-(CAST(vt0.c0 AS TEXT)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))<>('Z}a.*P')) WHERE ((NOT (((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)-(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))!=('Z}a.*P')) WHERE (((((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)-(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))!=('Z}a.*P')) GROUP BY vt1.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (MAX(t0.c0) IN (MIN(t0.c0), GROUP_CONCAT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((MAX(t0.c0) IN (MIN(t0.c0), GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((MAX(t0.c0) IN (MIN(t0.c0), GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (MAX(t0.c0) IN (MIN(t0.c0), GROUP_CONCAT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((MAX(t0.c0) IN (MIN(t0.c0), GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((MAX(t0.c0) IN (MIN(t0.c0), GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((SUBSTR(t0.c0, t0.c0) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((SUBSTR(t0.c0, t0.c0) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((SUBSTR(t0.c0, t0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0)*(vt1.c0))) ISNULL)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)*(vt1.c0))) ISNULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)*(vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(MAX(SUM(vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(SUM(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(MAX(SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(t0.c0 AS REAL);
SELECT * FROM vt0 INNER JOIN t0 ON CAST(t0.c0 AS REAL) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '324694351' END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(t0.c0 AS REAL) WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '324694351' END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(t0.c0 AS REAL) WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '324694351' END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(t0.c0 AS REAL);
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((x'') ISNULL)) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((x'') ISNULL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((x'') ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((((('m_៩YNq^b') BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT ((((('m_៩YNq^b') BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((((((('m_៩YNq^b') BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0))OR(SUM(SUM(COUNT(COUNT(*)))))))OR(((vt1.c0) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((COUNT(vt1.c0))OR(SUM(SUM(COUNT(COUNT(*)))))))OR(((vt1.c0) IS FALSE))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((COUNT(vt1.c0))OR(SUM(SUM(COUNT(COUNT(*)))))))OR(((vt1.c0) IS FALSE)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((t0.c0) IS TRUE) COLLATE RTRIM) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (((t0.c0) IS TRUE) COLLATE RTRIM))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((((t0.c0) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c0)&(vt1.c0))) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)&(vt1.c0))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)&(vt1.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (0Xfffffffff9dd841f) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (0Xfffffffff9dd841f))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((0Xfffffffff9dd841f) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0, t0.c0 HAVING COUNT(AVG(COUNT(*))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (COUNT(AVG(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0, t0.c0 HAVING ((COUNT(AVG(COUNT(*)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE json_type(t0.c0)  WHEN 'V+c5>' THEN t0.c0 WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)IS NOT('o9tr')) WHEN ((t0.c0)-(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE json_type(t0.c0)  WHEN 'V+c5>' THEN t0.c0 WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)IS NOT('o9tr')) WHEN ((t0.c0)-(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE json_type(t0.c0)  WHEN 'V+c5>' THEN t0.c0 WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)IS NOT('o9tr')) WHEN ((t0.c0)-(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0)))))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0)))))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0)))))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 NOT INDEXED RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 NOT INDEXED RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((LIKE(vt0.c0, t0.c0, '+'))OR(((vt1.c0)&(NULL)))))AND(((vt1.c0) NOT BETWEEN ('791558236') AND (0.7127367768801728))));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((LIKE(vt0.c0, t0.c0, '+'))OR(((vt1.c0)&(NULL)))))AND(((vt1.c0) NOT BETWEEN ('791558236') AND (0.7127367768801728)))) WHERE ((((((('-2133430666')OR(vt0.c0)))OR('')))>((vt1.c0 IN (t0.c0))))) UNION ALL SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((LIKE(vt0.c0, t0.c0, '+'))OR(((vt1.c0)&(NULL)))))AND(((vt1.c0) NOT BETWEEN ('791558236') AND (0.7127367768801728)))) WHERE ((NOT ((((((('-2133430666')OR(vt0.c0)))OR('')))>((vt1.c0 IN (t0.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((LIKE(vt0.c0, t0.c0, '+'))OR(((vt1.c0)&(NULL)))))AND(((vt1.c0) NOT BETWEEN ('791558236') AND (0.7127367768801728)))) WHERE ((((((((('-2133430666')OR(vt0.c0)))OR('')))>((vt1.c0 IN (t0.c0))))) ISNULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((LIKE(vt0.c0, t0.c0, '+'))OR(((vt1.c0)&(NULL)))))AND(((vt1.c0) NOT BETWEEN ('791558236') AND (0.7127367768801728))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NULL IN (vt0.c0))) IS FALSE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((NULL IN (vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((NULL IN (vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING MIN(AVG(GROUP_CONCAT(t0.c0))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (MIN(AVG(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((MIN(AVG(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL * FROM vt1, vt0, t0;
SELECT * FROM vt1, vt0, t0 WHERE (((t0.c0)IS(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((t0.c0)IS(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c0)IS(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt0.c0)))GLOB(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt0.c0)))GLOB(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt0.c0)))GLOB(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (((((t0.c0)||(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (((0Xffffffff969fd5a6) NOT BETWEEN (t0.c0) AND (NULL))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (((((t0.c0)||(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (((0xffffffff969fd5a6) NOT BETWEEN (t0.c0) AND (NULL))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE (((((((t0.c0)||(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (((0xffffffff969fd5a6) NOT BETWEEN (t0.c0) AND (NULL))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0 HAVING AVG(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0 HAVING (NOT (AVG(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0 HAVING ((AVG(SUM(t0.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((vt0.c0)/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x''))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((vt0.c0)/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x''))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((vt0.c0)/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x''))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM t0, vt1, vt0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE (((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOTNULL)) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE (((((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOTNULL)) ISNULL));
SELECT vt0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((((vt1.c0)|(vt1.c0)) IN (((vt1.c0) IS TRUE), (+ (t0.c0))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((((vt1.c0)|(vt1.c0)) IN (((vt1.c0) IS TRUE), (+ (t0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((((vt1.c0)|(vt1.c0)) IN (((vt1.c0) IS TRUE), (+ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (CASE WHEN 0.5906676402755029 THEN (~ (t0.c0)) ELSE ((t0.c0)/(t0.c0)) END) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (CASE WHEN 0.5906676402755029 THEN (~ (t0.c0)) ELSE ((t0.c0)/(t0.c0)) END))) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT t0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((CASE WHEN 0.5906676402755029 THEN (~ (t0.c0)) ELSE ((t0.c0)/(t0.c0)) END) ISNULL)) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING 0.2687554993445792 UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (0.2687554993445792)) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((0.2687554993445792) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING 0.2687554993445792 UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (0.2687554993445792)) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((0.2687554993445792) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0;
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((((vt1.c0) IS FALSE)) IS TRUE)) UNION ALL SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT (((((vt1.c0) IS FALSE)) IS TRUE)))) UNION ALL SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((((((vt1.c0) IS FALSE)) IS TRUE)) ISNULL));
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM t0, vt1 INNER JOIN vt0 ON (+ (t0.c0));
SELECT DISTINCT vt0.c0, vt1.c0 FROM t0, vt1 INNER JOIN vt0 ON (+ (t0.c0)) WHERE (((((((((SQLITE_COMPILEOPTION_GET(t0.c0))AND(((((vt0.c0)AND(vt1.c0)))OR(t0.c0)))))OR(t0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))OR((+ (0.34466178062442476))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM t0 NOT INDEXED, vt1 INNER JOIN vt0 ON (+ (t0.c0)) WHERE ((NOT (((((((((SQLITE_COMPILEOPTION_GET(t0.c0))AND(((((vt0.c0)AND(vt1.c0)))OR(t0.c0)))))OR(t0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))OR((+ (0.34466178062442476))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM t0, vt1 INNER JOIN vt0 ON (+ (t0.c0)) WHERE (((((((((((SQLITE_COMPILEOPTION_GET(t0.c0))AND(((((vt0.c0)AND(vt1.c0)))OR(t0.c0)))))OR(t0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))OR((+ (0.34466178062442476))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM t0, vt1 INNER JOIN vt0 ON (+ (t0.c0));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS BLOB))/(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB))/(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))/(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN TOTAL(COUNT(t0.c0)) THEN (~ (TOTAL(t0.c0))) ELSE TOTAL(SUM(t0.c0)) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN TOTAL(COUNT(t0.c0)) THEN (~ (TOTAL(t0.c0))) ELSE TOTAL(SUM(t0.c0)) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN TOTAL(COUNT(t0.c0)) THEN (~ (TOTAL(t0.c0))) ELSE TOTAL(SUM(t0.c0)) END) ISNULL);
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((0.4607023120315167 IN ())) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((0.4607023120315167 IN ())))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((0.4607023120315167 IN ())) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (TRIM(DISTINCT ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((t0.c0)OR(t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (TRIM(DISTINCT ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((t0.c0)OR(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((TRIM(DISTINCT ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((t0.c0)OR(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((- (t0.c0))) BETWEEN (((vt1.c0)<(t0.c0))) AND ('Gp')) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((- (t0.c0))) BETWEEN (((vt1.c0)<(t0.c0))) AND ('Gp')) GROUP BY t0.c0, vt1.c0 HAVING SUM(AVG(TOTAL(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((- (t0.c0))) BETWEEN (((vt1.c0)<(t0.c0))) AND ('Gp')) GROUP BY t0.c0, vt1.c0 HAVING (NOT (SUM(AVG(TOTAL(COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON (((- (t0.c0))) BETWEEN (((vt1.c0)<(t0.c0))) AND ('Gp')) GROUP BY t0.c0, vt1.c0 HAVING ((SUM(AVG(TOTAL(COUNT(t0.c0))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((SQLITE_COMPILEOPTION_GET(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (((vt1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((CAST(vt1.c0 AS TEXT) IN (((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((CAST(vt1.c0 AS TEXT) IN (((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT vt1.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, t0 WHERE ((vt0.c0 COLLATE RTRIM IN (CAST(vt0.c0 AS BLOB), ((vt1.c0)|(vt0.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN (CAST(vt0.c0 AS BLOB), ((vt1.c0)|(vt0.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0, t0 WHERE ((((vt0.c0 COLLATE RTRIM IN (CAST(vt0.c0 AS BLOB), ((vt1.c0)|(vt0.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING ((SUM(vt1.c0)) BETWEEN ((AVG(x'') IN ())) AND ((AVG(t0.c0) IN (vt1.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt1.c0)) BETWEEN ((AVG(x'') IN ())) AND ((AVG(t0.c0) IN (vt1.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING ((((SUM(vt1.c0)) BETWEEN ((AVG(x'') IN ())) AND ((AVG(t0.c0) IN (vt1.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING ((SUM(vt1.c0)) BETWEEN ((AVG(x'') IN ())) AND ((AVG(t0.c0) IN (vt1.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt1.c0)) BETWEEN ((AVG(x'') IN ())) AND ((AVG(t0.c0) IN (vt1.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING ((((SUM(vt1.c0)) BETWEEN ((AVG(x'') IN ())) AND ((AVG(t0.c0) IN (vt1.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((+ ((vt0.c0 IN (vt1.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((+ ((vt0.c0 IN (vt1.c0))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((((+ ((vt0.c0 IN (vt1.c0))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((((+ (vt0.c0)))<=(NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT ((((+ (vt0.c0)))<=(NULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((((((+ (vt0.c0)))<=(NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0 WHERE (((CAST('-1297767573' AS REAL))|(x'70b1'))) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((CAST('-1297767573' AS REAL))|(x'70b1'))))) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0 WHERE (((((CAST('-1297767573' AS REAL))|(x'70b1'))) ISNULL)) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY t0.c0, vt1.c0 HAVING ((((GROUP_CONCAT(vt0.c0))GLOB(vt0.c0))) NOTNULL) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((((GROUP_CONCAT(vt0.c0))GLOB(vt0.c0))) NOTNULL))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0 HAVING ((((((GROUP_CONCAT(vt0.c0))GLOB(vt0.c0))) NOTNULL)) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY t0.c0, vt1.c0 HAVING ((((GROUP_CONCAT(vt0.c0))GLOB(vt0.c0))) NOTNULL) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((((GROUP_CONCAT(vt0.c0))GLOB(vt0.c0))) NOTNULL))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0 HAVING ((((((GROUP_CONCAT(vt0.c0))GLOB(vt0.c0))) NOTNULL)) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((- ((((vt1.c0))>((vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- ((((vt1.c0))>((vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((- ((((vt1.c0))>((vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING TOTAL(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING ((TOTAL(MAX(vt0.c0))) ISNULL);
SELECT MIN(CASE (- (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)<<(vt1.c0)) END) FROM vt1 ORDER BY ((((((((NULL)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0 COLLATE RTRIM)))OR(((0.04957444313944981) IS FALSE))), vt1.c0 COLLATE NOCASE DESC  NULLS FIRST, (((vt1.c0)) BETWEEN ((((vt1.c0)<(x'')))) AND (((0.4095876697871985 IN ())))) DESC;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (DATETIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (DATETIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (DATETIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))=(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))=(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))==(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) WHERE ((NOT (CAST(((vt1.c0)>=(vt1.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))==(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) WHERE (((CAST(((vt1.c0)>=(vt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))=(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0 HAVING MIN(AVG(vt0.c0)) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (MIN(AVG(vt0.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0 HAVING ((MIN(AVG(vt0.c0))) ISNULL);
SELECT MAX(((((((((TYPEOF(DISTINCT vt1.c0))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND(vt1.c0 COLLATE BINARY)))AND('w'))) FROM vt0, vt1, t0;
SELECT vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((0.5901985148640655)IS NOT((((vt0.c0))>=((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((0.5901985148640655)IS NOT((((vt0.c0))>=((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((0.5901985148640655)IS NOT((((vt0.c0))>=((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS NUMERIC)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE RTRIM AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS NUMERIC)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((((vt0.c0)IS(vt1.c0))))>((((((t0.c0)AND(vt0.c0)))AND(t0.c0))))) LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) ISNULL) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((((vt0.c0)IS(vt1.c0))))>((((((t0.c0)AND(vt0.c0)))AND(t0.c0))))) LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) ISNULL) GROUP BY vt1.c0, t0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt1.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((((vt0.c0)IS(vt1.c0))))>((((((t0.c0)AND(vt0.c0)))AND(t0.c0))))) LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) ISNULL) GROUP BY vt1.c0, t0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((((vt0.c0)IS(vt1.c0))))>((((((t0.c0)AND(vt0.c0)))AND(t0.c0))))) LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) ISNULL) GROUP BY vt1.c0, t0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1;
SELECT vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((((((((vt1.c0)=(t0.c0)))AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '-1058747718' END)))OR((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT (((((((((((vt1.c0)==(t0.c0)))AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '-1058747718' END)))OR((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((((((((((vt1.c0)==(t0.c0)))AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '-1058747718' END)))OR((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ (((t0.c0) ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ (((t0.c0) ISNULL)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ (((t0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-' WHEN '849552647' THEN vt1.c0 END AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-' WHEN '849552647' THEN vt1.c0 END AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-' WHEN '849552647' THEN vt1.c0 END AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING MAX((((('')AND(t0.c0)))OR(GROUP_CONCAT(MIN(MIN(0Xffffffffedee4298)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX((((('')AND(t0.c0)))OR(GROUP_CONCAT(MIN(MIN(0xffffffffedee4298)))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX((((('')AND(t0.c0)))OR(GROUP_CONCAT(MIN(MIN(0xffffffffedee4298))))))) ISNULL);
SELECT * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 NATURAL JOIN t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((vt1.c0)>(t0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(t0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((((vt1.c0)>(t0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(t0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((((vt1.c0)>(t0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 NATURAL JOIN t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN (((0xffffffff8b4e7555, vt0.c0, vt0.c0))>=((vt0.c0, t0.c0, t0.c0))) WHEN load_extension(x'c713') THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN 2.76281746E8 THEN ((vt0.c0) ISNULL) END) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN (t0.c0 IN ()) THEN (((0xffffffff8b4e7555, vt0.c0, vt0.c0))>=((vt0.c0, t0.c0, t0.c0))) WHEN load_extension(x'c713') THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN 2.76281746E8 THEN ((vt0.c0) ISNULL) END))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((CASE WHEN (t0.c0 IN ()) THEN (((0xffffffff8b4e7555, vt0.c0, vt0.c0))>=((vt0.c0, t0.c0, t0.c0))) WHEN load_extension(x'c713') THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN 2.76281746E8 THEN ((vt0.c0) ISNULL) END) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (0.9068751871545796 IN ()) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ((0.9068751871545796 IN ()))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((0.9068751871545796 IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (0.9068751871545796 IN ()) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ((0.9068751871545796 IN ()))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((0.9068751871545796 IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (UPPER(vt1.c0) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (UPPER(vt1.c0) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE (((UPPER(vt1.c0) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0))>=((x'2577'))) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0))>=((x'2577'))) COLLATE BINARY WHERE (((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END)IS(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0))>=((x'2577'))) COLLATE BINARY WHERE ((NOT (((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END)IS(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0))>=((x'2577'))) COLLATE BINARY WHERE (((((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END)IS(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0))>=((x'2577'))) COLLATE BINARY;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(GROUP_CONCAT(vt0.c0))))))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(GROUP_CONCAT(vt0.c0))))))))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(GROUP_CONCAT(vt0.c0)))))))))))))) ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((t0.c0 IN ())) IS FALSE)) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((((t0.c0 IN ())) IS FALSE)))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((((t0.c0 IN ())) IS FALSE)) ISNULL));
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)%(NULL)))>(CAST(t0.c0 AS BLOB)))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)%(NULL)))>(CAST(t0.c0 AS BLOB)))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0)%(NULL)))>(CAST(t0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, ')P')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, ')P')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, ')P')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) FULL OUTER JOIN vt0 ON ((t0.c0)+(vt0.c0)) COLLATE NOCASE;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (x'') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((t0.c0 COLLATE RTRIM)*(t0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)*(t0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((((t0.c0 COLLATE RTRIM)*(t0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING COUNT(SUM(COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(SUM(COUNT(vt0.c0)))) ISNULL);
SELECT SUM(((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (vt0.c0) AND ((t0.c0 IN ())))) FROM vt0, t0 ORDER BY QUOTE(((vt0.c0)OR(t0.c0))), ''  NULLS LAST, t0.c0;
SELECT vt1.c0 FROM vt1, t0, vt0;
SELECT ALL vt1.c0 FROM vt1, t0, vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) UNION ALL SELECT vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOTNULL)))) UNION ALL SELECT vt1.c0 FROM vt1, t0, vt0 WHERE ((((((vt0.c0 IN ())) NOTNULL)) ISNULL));
SELECT vt1.c0 FROM vt1, t0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN '' THEN (- (vt1.c0)) ELSE vt1.c0 COLLATE BINARY END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN '' THEN (- (vt1.c0)) ELSE vt1.c0 COLLATE BINARY END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN '' THEN (- (vt1.c0)) ELSE vt1.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.9606954602284032)>>(((('1884305477', vt1.c0, vt1.c0)) BETWEEN ((MAX(vt1.c0), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((0.9606954602284032)>>(((('1884305477', vt1.c0, vt1.c0)) BETWEEN ((MAX(vt1.c0), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((0.9606954602284032)>>(((('1884305477', vt1.c0, vt1.c0)) BETWEEN ((MAX(vt1.c0), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.9606954602284032)>>(((('1884305477', vt1.c0, vt1.c0)) BETWEEN ((MAX(vt1.c0), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((0.9606954602284032)>>(((('1884305477', vt1.c0, vt1.c0)) BETWEEN ((MAX(vt1.c0), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((0.9606954602284032)>>(((('1884305477', vt1.c0, vt1.c0)) BETWEEN ((MAX(vt1.c0), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((((NOT (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((- (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((NOT (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((- (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE ((((((((NOT (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((- (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt0.c0));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt0.c0)) WHERE (((((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.9814782411091791 ELSE x'' END)AND(load_extension(NULL))))OR(((vt0.c0) NOT NULL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffffd92d23e8)))))OR(((vt1.c0)<<(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt0.c0)) WHERE ((NOT (((((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.9814782411091791 ELSE x'' END)AND(load_extension(NULL))))OR(((vt0.c0) NOT NULL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffffd92d23e8)))))OR(((vt1.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt0.c0)) WHERE (((((((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.9814782411091791 ELSE x'' END)AND(load_extension(NULL))))OR(((vt0.c0) NOT NULL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffd92d23e8)))))OR(((vt1.c0)<<(vt0.c0))))) ISNULL));
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON -1.256436051E9 FULL OUTER JOIN t0 ON ((ROUND(t0.c0, vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) AND (SUBSTR('~㠚k1/', t0.c0))) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON -1.256436051E9 FULL OUTER JOIN t0 ON ((ROUND(t0.c0, vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) AND (SUBSTR('~㠚k1/', t0.c0))) WHERE (t0.c0) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON -1.256436051E9 FULL OUTER JOIN t0 ON ((ROUND(t0.c0, vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) AND (SUBSTR('~㠚k1/', t0.c0))) WHERE ((NOT (t0.c0))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON -1.256436051E9 FULL OUTER JOIN t0 ON ((ROUND(t0.c0, vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) AND (SUBSTR('~㠚k1/', t0.c0))) WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON -1.256436051E9 FULL OUTER JOIN t0 ON ((ROUND(t0.c0, vt1.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) AND (SUBSTR('~㠚k1/', t0.c0))) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0 HAVING (~ (MAX(vt1.c0))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT ((~ (MAX(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY vt0.c0, t0.c0 HAVING (((~ (MAX(vt1.c0)))) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0 HAVING (~ (MAX(vt1.c0))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT ((~ (MAX(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY vt0.c0, t0.c0 HAVING (((~ (MAX(vt1.c0)))) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON (~ (TRIM(DISTINCT vt1.c0, vt0.c0)));
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON (~ (TRIM(DISTINCT vt1.c0, vt0.c0))) WHERE (x'bf31' COLLATE RTRIM) UNION ALL SELECT * FROM vt1, vt0 FULL OUTER JOIN t0 ON (~ (TRIM(DISTINCT vt1.c0, vt0.c0))) WHERE ((NOT (x'bf31' COLLATE RTRIM))) UNION ALL SELECT * FROM vt1, vt0 FULL OUTER JOIN t0 ON (~ (TRIM(DISTINCT vt1.c0, vt0.c0))) WHERE (((x'bf31' COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON (~ (TRIM(DISTINCT vt1.c0, vt0.c0)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (0.9068751871545796) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (0.9068751871545796))) UNION SELECT DISTINCT * FROM vt1 WHERE (((0.9068751871545796) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((COUNT(*)) IS FALSE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((COUNT(*)) IS FALSE)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((COUNT(*)) IS FALSE))) ISNULL);
SELECT * FROM t0, vt0, vt1;
SELECT ALL * FROM t0, vt0, vt1 NOT INDEXED WHERE (CASE UPPER(vt1.c0)  WHEN ((vt1.c0)==(vt0.c0)) THEN MIN(vt1.c0, t0.c0, vt0.c0, vt0.c0) ELSE ((vt0.c0) IS FALSE) END) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE ((NOT (CASE UPPER(vt1.c0)  WHEN ((vt1.c0)=(vt0.c0)) THEN MIN(vt1.c0, t0.c0, vt0.c0, vt0.c0) ELSE ((vt0.c0) IS FALSE) END))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE (((CASE UPPER(vt1.c0)  WHEN ((vt1.c0)==(vt0.c0)) THEN MIN(vt1.c0, t0.c0, vt0.c0, vt0.c0) ELSE ((vt0.c0) IS FALSE) END) ISNULL));
SELECT * FROM t0, vt0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((SQLITE_COMPILEOPTION_USED('')) NOT BETWEEN (x'') AND ((((vt0.c0))<=((vt0.c0)))));
SELECT DISTINCT t0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((SQLITE_COMPILEOPTION_USED('')) NOT BETWEEN (x'') AND ((((vt0.c0))<=((vt0.c0))))) WHERE (NULL) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((SQLITE_COMPILEOPTION_USED('')) NOT BETWEEN (x'') AND ((((vt0.c0))<=((vt0.c0))))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((SQLITE_COMPILEOPTION_USED('')) NOT BETWEEN (x'') AND ((((vt0.c0))<=((vt0.c0))))) WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON ((SQLITE_COMPILEOPTION_USED('')) NOT BETWEEN (x'') AND ((((vt0.c0))<=((vt0.c0)))));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((((vt0.c0))=((vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((((vt0.c0))=((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((((vt0.c0))=((vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((((vt0.c0))=((vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((((vt0.c0))=((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((((vt0.c0))=((vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0, t0.c0, '0.045198340757763966', t0.c0, t0.c0))>=((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0, vt1.c0, t0.c0))) IN ())) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((((vt1.c0, vt1.c0, vt1.c0, t0.c0, '0.045198340757763966', t0.c0, t0.c0))>=((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0, vt1.c0, t0.c0))) IN ())))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0, t0.c0, '0.045198340757763966', t0.c0, t0.c0))>=((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0, vt1.c0, t0.c0))) IN ())) ISNULL));
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT))>=((((t0.c0, t0.c0, '-1608929573'))==((vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))>=((((t0.c0, t0.c0, '-1608929573'))==((vt0.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((((CAST(vt0.c0 AS TEXT))>=((((t0.c0, t0.c0, '-1608929573'))=((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0) ISNULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN (~ (vt0.c0)) END GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0) ISNULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN (~ (vt0.c0)) END WHERE (json_object(CAST(vt0.c0 AS NUMERIC), CAST(vt1.c0 AS NUMERIC))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0) ISNULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN (~ (vt0.c0)) END WHERE ((NOT (json_object(CAST(vt0.c0 AS NUMERIC), CAST(vt1.c0 AS NUMERIC))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0) ISNULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN (~ (vt0.c0)) END WHERE (((json_object(CAST(vt0.c0 AS NUMERIC), CAST(vt1.c0 AS NUMERIC))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(COUNT(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c0));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c0)) WHERE (((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))>=(((vt0.c0)&(vt0.c0))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c0)) WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))>=(((vt0.c0)&(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c0)) WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))>=(((vt0.c0)&(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c0));
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(LOWER(DISTINCT vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(LOWER(DISTINCT vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(LOWER(DISTINCT vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(LOWER(DISTINCT vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(LOWER(DISTINCT vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(LOWER(DISTINCT vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((x'') NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((x'') NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((x'') NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (((t0.c0) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (((t0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (MAX(CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) IS TRUE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (MAX(CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) IS TRUE))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((MAX(CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) IS TRUE))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON LOWER(DISTINCT (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) RIGHT OUTER JOIN vt1 ON (((((t0.c0)<<(vt0.c0)), ((((vt0.c0)AND(t0.c0)))AND(vt0.c0)), ((t0.c0)|(t0.c0))))<>((NULL, vt1.c0 COLLATE BINARY, ''))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((('1857127842' COLLATE RTRIM) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((('1857127842' COLLATE RTRIM) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((('1857127842' COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '')) BETWEEN ((0.2019462741164274, t0.c0, vt0.c0, t0.c0, NULL)) AND ((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((t0.c0))<=((t0.c0)))) AND ((~ (t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '')) BETWEEN ((0.2019462741164274, t0.c0, vt0.c0, t0.c0, NULL)) AND ((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((t0.c0))<=((t0.c0)))) AND ((~ (t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '')) BETWEEN ((0.2019462741164274, t0.c0, vt0.c0, t0.c0, NULL)) AND ((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((t0.c0))<=((t0.c0)))) AND ((~ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE (((((t0.c0)!=('LW}9VfaB'))) NOT BETWEEN (x'') AND (-1.913667566E9 COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((((t0.c0)!=('LW}9VfaB'))) NOT BETWEEN (x'') AND (-1.913667566E9 COLLATE NOCASE))))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE (((((((t0.c0)!=('LW}9VfaB'))) NOT BETWEEN (x'') AND (-1.913667566E9 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING CASE WHEN TOTAL(AVG(MIN(TOTAL(AVG(COUNT(*)))))) THEN NULL WHEN ((MAX(vt1.c0))%(MIN(vt1.c0))) THEN MIN(COUNT(*)) WHEN COUNT(vt1.c0) THEN (- (vt1.c0)) WHEN COUNT(SUM(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE COUNT(*)  WHEN GROUP_CONCAT(SUM(vt1.c0)) THEN t0.c0 ELSE SUM(TOTAL(SUM(t0.c0))) END THEN TOTAL(COUNT(*)) COLLATE NOCASE END UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (CASE WHEN TOTAL(AVG(MIN(TOTAL(AVG(COUNT(*)))))) THEN NULL WHEN ((MAX(vt1.c0))%(MIN(vt1.c0))) THEN MIN(COUNT(*)) WHEN COUNT(vt1.c0) THEN (- (vt1.c0)) WHEN COUNT(SUM(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE COUNT(*)  WHEN GROUP_CONCAT(SUM(vt1.c0)) THEN t0.c0 ELSE SUM(TOTAL(SUM(t0.c0))) END THEN TOTAL(COUNT(*)) COLLATE NOCASE END)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((CASE WHEN TOTAL(AVG(MIN(TOTAL(AVG(COUNT(*)))))) THEN NULL WHEN ((MAX(vt1.c0))%(MIN(vt1.c0))) THEN MIN(COUNT(*)) WHEN COUNT(vt1.c0) THEN (- (vt1.c0)) WHEN COUNT(SUM(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE COUNT(*)  WHEN GROUP_CONCAT(SUM(vt1.c0)) THEN t0.c0 ELSE SUM(TOTAL(SUM(t0.c0))) END THEN TOTAL(COUNT(*)) COLLATE NOCASE END) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt1, vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE ((+ ((vt1.c0 IN ())))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((+ ((vt1.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE ((((+ ((vt1.c0 IN ())))) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (((((t0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (((((t0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (((((((t0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((((vt1.c0)<=(vt0.c0)) IN ((vt1.c0 IN ())))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT ((((vt1.c0)<=(vt0.c0)) IN ((vt1.c0 IN ())))))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((((((vt1.c0)<=(vt0.c0)) IN ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.3788416933587311)>=(AVG(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((0.3788416933587311)>=(AVG(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((0.3788416933587311)>=(AVG(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.3788416933587311)>=(AVG(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((0.3788416933587311)>=(AVG(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((0.3788416933587311)>=(AVG(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((((((((((vt0.c0)>=(vt0.c0)))AND((vt0.c0 IN (vt1.c0)))))AND(((vt1.c0) ISNULL))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND((((vt1.c0, 0.7137615567852916, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((((((((((vt0.c0)>=(vt0.c0)))AND((vt0.c0 IN (vt1.c0)))))AND(((vt1.c0) ISNULL))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND((((vt1.c0, 0.7137615567852916, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) WHERE (((((vt1.c0)&('-1055948909'))) BETWEEN ((vt1.c0 IN ())) AND ('-1297767573'))) ORDER BY (((vt0.c0)==(vt1.c0)) IN ());
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((((((((((vt0.c0)>=(vt0.c0)))AND((vt0.c0 IN (vt1.c0)))))AND(((vt1.c0) ISNULL))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND((((vt1.c0, 0.7137615567852916, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) WHERE ((NOT (((((vt1.c0)&('-1055948909'))) BETWEEN ((vt1.c0 IN ())) AND ('-1297767573'))))) ORDER BY (((vt0.c0)=(vt1.c0)) IN ());
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((((((((((vt0.c0)>=(vt0.c0)))AND((vt0.c0 IN (vt1.c0)))))AND(((vt1.c0) ISNULL))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND((((vt1.c0, 0.7137615567852916, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) WHERE (((((((vt1.c0)&('-1055948909'))) BETWEEN ((vt1.c0 IN ())) AND ('-1297767573'))) ISNULL)) ORDER BY (((vt0.c0)==(vt1.c0)) IN ());
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((((((((((vt0.c0)>=(vt0.c0)))AND((vt0.c0 IN (vt1.c0)))))AND(((vt1.c0) ISNULL))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0)))))AND((((vt1.c0, 0.7137615567852916, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (CASE WHEN ((t0.c0)>>(t0.c0)) THEN t0.c0 END) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (CASE WHEN ((t0.c0)>>(t0.c0)) THEN t0.c0 END))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((CASE WHEN ((t0.c0)>>(t0.c0)) THEN t0.c0 END) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST((((vt1.c0, GROUP_CONCAT(COUNT(vt1.c0)), vt1.c0))!=((SUM(COUNT(*)), COUNT(vt1.c0), GROUP_CONCAT(vt1.c0)))) AS INTEGER) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((((vt1.c0, GROUP_CONCAT(COUNT(vt1.c0)), vt1.c0))<>((SUM(COUNT(*)), COUNT(vt1.c0), GROUP_CONCAT(vt1.c0)))) AS INTEGER))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST((((vt1.c0, GROUP_CONCAT(COUNT(vt1.c0)), vt1.c0))!=((SUM(COUNT(*)), COUNT(vt1.c0), GROUP_CONCAT(vt1.c0)))) AS INTEGER)) ISNULL);
SELECT * FROM vt1, t0 NATURAL JOIN vt0;
SELECT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((CAST(vt1.c0 AS BLOB))||(((vt1.c0)>(t0.c0))))) UNION ALL SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))||(((vt1.c0)>(t0.c0))))))) UNION ALL SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((CAST(vt1.c0 AS BLOB))||(((vt1.c0)>(t0.c0))))) ISNULL));
SELECT * FROM vt1, t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('E1YlQF*b6')))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('E1YlQF*b6')))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('E1YlQF*b6')))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE ((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0))))<((t0.c0 COLLATE BINARY)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT ((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0))))<((t0.c0 COLLATE BINARY)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0))))<((t0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1 NOT INDEXED, vt0, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING ((vt1.c0)<=(((vt0.c0) IS TRUE))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((vt1.c0)<=(((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING ((((vt1.c0)<=(((vt0.c0) IS TRUE)))) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1 NOT INDEXED, vt0, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING ((vt1.c0)<=(((vt0.c0) IS TRUE))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((vt1.c0)<=(((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING ((((vt1.c0)<=(((vt0.c0) IS TRUE)))) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1 NOT INDEXED, vt0, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL * FROM vt0, vt1, t0;
SELECT * FROM vt0, vt1, t0 WHERE (((t0.c0)!=(vt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT (((t0.c0)<>(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 WHERE (((((t0.c0)!=(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (0x48155c4a) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (0x48155c4a))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((0x48155c4a) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (vt0.c0) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING (((t0.c0, SUM(COUNT(*)), MAX(vt0.c0))) BETWEEN (((+ (MAX(t0.c0))), ((AVG(vt0.c0)) IS FALSE), AVG(t0.c0))) AND ((CAST(vt1.c0 AS TEXT), TYPEOF(DISTINCT vt1.c0), MIN(vt1.c0)))) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((((t0.c0, SUM(COUNT(*)), MAX(vt0.c0))) BETWEEN (((+ (MAX(t0.c0))), ((AVG(vt0.c0)) IS FALSE), AVG(t0.c0))) AND ((CAST(vt1.c0 AS TEXT), TYPEOF(DISTINCT vt1.c0), MIN(vt1.c0)))))) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING (((((t0.c0, SUM(COUNT(*)), MAX(vt0.c0))) BETWEEN (((+ (MAX(t0.c0))), ((AVG(vt0.c0)) IS FALSE), AVG(t0.c0))) AND ((CAST(vt1.c0 AS TEXT), TYPEOF(DISTINCT vt1.c0), MIN(vt1.c0))))) ISNULL);
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((((json_array_length(NULL, t0.c0))AND(0.07452632907020673)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (((((json_array_length(NULL, t0.c0))AND(0.07452632907020673)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((((((json_array_length(NULL, t0.c0))AND(0.07452632907020673)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0 HAVING AVG((((MIN(GROUP_CONCAT(TOTAL(vt1.c0)))))>=((AVG(t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (AVG((((MIN(GROUP_CONCAT(TOTAL(vt1.c0)))))>=((AVG(t0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((AVG((((MIN(GROUP_CONCAT(TOTAL(vt1.c0)))))>=((AVG(t0.c0)))))) ISNULL);
SELECT ALL * FROM vt0, vt1, t0;
SELECT * FROM vt0, vt1, t0 WHERE (((vt1.c0 IN ()) IN ())) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT (((vt1.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt1.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((- (((t0.c0)<=(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT ((- (((t0.c0)<=(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((((- (((t0.c0)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON load_extension((((vt1.c0))>=((vt0.c0))), ((t0.c0)+(vt0.c0))) RIGHT OUTER JOIN vt0 ON t0.c0 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((COUNT(t0.c0)))) AS NUMERIC) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((COUNT(t0.c0)))) AS NUMERIC))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((COUNT(t0.c0)))) AS NUMERIC)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((COUNT(t0.c0)))) AS NUMERIC) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((COUNT(t0.c0)))) AS NUMERIC))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((COUNT(t0.c0)))) AS NUMERIC)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c0) NOT NULL)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c0) NOT NULL)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((- (0.11368656831234036))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((NOT ((- (0.11368656831234036))))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((NOT ((- (0.11368656831234036))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((0.13815822842179215 IN (vt1.c0, vt1.c0)))AND((((vt0.c0, vt1.c0, vt1.c0))>((vt0.c0, vt1.c0, vt1.c0))))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((((0.13815822842179215 IN (vt1.c0, vt1.c0)))AND((((vt0.c0, vt1.c0, vt1.c0))>((vt0.c0, vt1.c0, vt1.c0))))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((((0.13815822842179215 IN (vt1.c0, vt1.c0)))AND((((vt0.c0, vt1.c0, vt1.c0))>((vt0.c0, vt1.c0, vt1.c0))))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(((-886138163)<(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(((-886138163)<(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((SUM(((-886138163)<(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(((-886138163)<(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(((-886138163)<(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((SUM(((-886138163)<(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT SUM((((vt0.c0 IN ())) BETWEEN (NULL) AND (((vt0.c0)LIKE(vt0.c0))))) FROM vt0 ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ('-95373564') UNION SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT ('-95373564'))) UNION SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((('-95373564') ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((((((t0.c0) IS TRUE))OR(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) IS TRUE)))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((((((t0.c0) IS TRUE))OR(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((((((((t0.c0) IS TRUE))OR(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0 NOT INDEXED GROUP BY t0.c0, vt0.c0 HAVING SUM(MAX(COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (SUM(MAX(COUNT(*))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((SUM(MAX(COUNT(*)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE NOCASE));
SELECT vt0.c0, vt1.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE NOCASE)) WHERE (((((vt1.c0) NOT BETWEEN (t0.c0) AND (0.10772369548367722)))<<((vt1.c0 IN ())))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE NOCASE)) WHERE ((NOT (((((vt1.c0) NOT BETWEEN (t0.c0) AND (0.10772369548367722)))<<((vt1.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE NOCASE)) WHERE (((((((vt1.c0) NOT BETWEEN (t0.c0) AND (0.10772369548367722)))<<((vt1.c0 IN ())))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE NOCASE));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (NULL) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)&(vt0.c0))) NOT NULL) LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)&(vt0.c0))) NOT NULL) LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY WHERE ((((vt0.c0 COLLATE BINARY, 0.9454288692461343 COLLATE NOCASE, 'q#!Wm'))<((((vt1.c0) NOT BETWEEN (t0.c0) AND (NULL)), ((0.6376941104895985) BETWEEN (vt1.c0) AND (vt0.c0)), (vt0.c0 IN ()))))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)&(vt0.c0))) NOT NULL) LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY WHERE ((NOT ((((vt0.c0 COLLATE BINARY, 0.9454288692461343 COLLATE NOCASE, 'q#!Wm'))<((((vt1.c0) NOT BETWEEN (t0.c0) AND (NULL)), ((0.6376941104895985) BETWEEN (vt1.c0) AND (vt0.c0)), (vt0.c0 IN ()))))))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((((vt1.c0)&(vt0.c0))) NOT NULL) LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY WHERE ((((((vt0.c0 COLLATE BINARY, 0.9454288692461343 COLLATE NOCASE, 'q#!Wm'))<((((vt1.c0) NOT BETWEEN (t0.c0) AND (NULL)), ((0.6376941104895985) BETWEEN (vt1.c0) AND (vt0.c0)), (vt0.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)&(vt0.c0))) NOT NULL) LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING CASE WHEN AVG('1088423872') THEN COUNT(*) END UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING (NOT (CASE WHEN AVG('1088423872') THEN COUNT(*) END)) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((CASE WHEN AVG('1088423872') THEN COUNT(*) END) ISNULL);
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING CASE WHEN AVG('1088423872') THEN COUNT(*) END UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING (NOT (CASE WHEN AVG('1088423872') THEN COUNT(*) END)) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((CASE WHEN AVG('1088423872') THEN COUNT(*) END) ISNULL);
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (((+ (t0.c0)) IN ())) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (((+ (t0.c0)) IN ())))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((((+ (t0.c0)) IN ())) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (~ (CAST(t0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON ((NOT (vt0.c0)) IN ());
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (~ (CAST(t0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON ((NOT (vt0.c0)) IN ()) WHERE (MIN((+ (NULL)), ((0.34466178062442476) ISNULL), vt0.c0, (((vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt1.c0))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (~ (CAST(t0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON ((NOT (vt0.c0)) IN ()) WHERE ((NOT (MIN((+ (NULL)), ((0.34466178062442476) ISNULL), vt0.c0, (((vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt1.c0))))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (~ (CAST(t0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON ((NOT (vt0.c0)) IN ()) WHERE (((MIN((+ (NULL)), ((0.34466178062442476) ISNULL), vt0.c0, (((vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON (~ (CAST(t0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON ((NOT (vt0.c0)) IN ());
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((vt1.c0 IN ()) COLLATE RTRIM))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((vt1.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((0.6028776853976456)<=(MIN(MAX(MAX(vt1.c0))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (((0.6028776853976456)<=(MIN(MAX(MAX(vt1.c0))))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((0.6028776853976456)<=(MIN(MAX(MAX(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN '6i4CO,%' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN '6i4CO,%' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN '6i4CO,%' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))IS(t0.c0 COLLATE BINARY)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))IS(t0.c0 COLLATE BINARY)) WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER)) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))IS(t0.c0 COLLATE BINARY)) WHERE ((NOT (CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))IS(t0.c0 COLLATE BINARY)) WHERE (((CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))IS(t0.c0 COLLATE BINARY)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(x''))) NOT NULL) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(x''))) NOT NULL) GROUP BY vt1.c0, vt0.c0 HAVING AVG(AVG(COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(x''))) NOT NULL) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (AVG(AVG(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(x''))) NOT NULL) GROUP BY vt1.c0, vt0.c0 HAVING ((AVG(AVG(COUNT(*)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT (t0.c0)) COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((NOT (t0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (CASE WHEN ((NULL) ISNULL) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (~ (t0.c0)) END) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (CASE WHEN ((NULL) ISNULL) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (~ (t0.c0)) END))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((CASE WHEN ((NULL) ISNULL) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (~ (t0.c0)) END) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((+ (0xfffffffffa50b704)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((+ (0Xfffffffffa50b704)))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((+ (0xfffffffffa50b704)))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((+ (((vt1.c0)AND(NULL))))) UNION SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((+ (((vt1.c0)AND(NULL))))))) UNION SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((((+ (((vt1.c0)AND(NULL))))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((t0.c0))==((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((t0.c0)AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((t0.c0))=((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((t0.c0))=((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, vt1 NOT INDEXED, t0 GROUP BY t0.c0 HAVING CASE GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(SUM(SUM(COUNT(*)))))))  WHEN COUNT(*) THEN COUNT(*) WHEN COUNT(t0.c0) THEN NULL WHEN ((((vt1.c0)OR(-197453847)))AND(MAX(vt0.c0))) THEN AVG(vt0.c0) ELSE (~ (vt0.c0)) END UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING (NOT (CASE GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(SUM(SUM(COUNT(*)))))))  WHEN COUNT(*) THEN COUNT(*) WHEN COUNT(t0.c0) THEN NULL WHEN ((((vt1.c0)OR(-197453847)))AND(MAX(vt0.c0))) THEN AVG(vt0.c0) ELSE (~ (vt0.c0)) END)) UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING ((CASE GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(SUM(SUM(COUNT(*)))))))  WHEN COUNT(*) THEN COUNT(*) WHEN COUNT(t0.c0) THEN NULL WHEN ((((vt1.c0)OR(-197453847)))AND(MAX(vt0.c0))) THEN AVG(vt0.c0) ELSE (~ (vt0.c0)) END) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (((~ (t0.c0)) IN ())) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (((~ (t0.c0)) IN ())))) UNION ALL SELECT * FROM t0, vt1 WHERE (((((~ (t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((NOT (t0.c0)))>>(((vt0.c0)!=(NULL))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT ((((NOT (t0.c0)))>>(((vt0.c0)!=(NULL))))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((((NOT (t0.c0)))>>(((vt0.c0)!=(NULL))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((vt0.c0 IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, vt1, t0;
SELECT ALL * FROM vt0, vt1, t0 WHERE ((NOT (TRIM(DISTINCT t0.c0)))) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT ((NOT (TRIM(DISTINCT t0.c0)))))) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((((NOT (TRIM(DISTINCT t0.c0)))) ISNULL));
SELECT ALL * FROM vt0, vt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0 COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN (t0.c0 IN ()) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN (t0.c0 IN (t0.c0)) THEN (t0.c0 IN ()) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN (t0.c0 IN (t0.c0)) THEN (t0.c0 IN ()) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(vt0.c0) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(vt0.c0) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))|(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 364373804 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))|(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 364373804 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))|(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 364373804 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)*(vt1.c0)))) AND ((ABS(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)*(vt1.c0)))) AND ((ABS(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt1.c0)*(vt1.c0)))) AND ((ABS(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 NOT INDEXED GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING SUM(MIN(SUM(COUNT(*)))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (SUM(MIN(SUM(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((SUM(MIN(SUM(COUNT(*))))) ISNULL);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)<(vt0.c0)) THEN (((t0.c0))>=((t0.c0))) END;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)<(vt0.c0)) THEN (((t0.c0))>=((t0.c0))) END WHERE (CASE UNLIKELY(t0.c0)  WHEN (vt0.c0 IN (t0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)<(vt0.c0)) THEN (((t0.c0))>=((t0.c0))) END WHERE ((NOT (CASE UNLIKELY(t0.c0)  WHEN (vt0.c0 IN (t0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)<(vt0.c0)) THEN (((t0.c0))>=((t0.c0))) END WHERE (((CASE UNLIKELY(t0.c0)  WHEN (vt0.c0 IN (t0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)<(vt0.c0)) THEN (((t0.c0))>=((t0.c0))) END;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((TRIM(vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((TRIM(vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((TRIM(vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t0, vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) ISNULL)) UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) ISNULL)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt0, vt1 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) ISNULL)) ISNULL));
SELECT vt1.c0, vt0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0 COLLATE RTRIM)))AND(CAST(t0.c0 AS NUMERIC))))OR(CAST(t0.c0 AS TEXT))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((t0.c0)AND(t0.c0 COLLATE RTRIM)))AND(CAST(t0.c0 AS NUMERIC))))OR(CAST(t0.c0 AS TEXT))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0 COLLATE RTRIM)))AND(CAST(t0.c0 AS NUMERIC))))OR(CAST(t0.c0 AS TEXT))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING ((COALESCE(DISTINCT GROUP_CONCAT(t0.c0), vt0.c0, AVG(vt1.c0), TOTAL(vt1.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt1.c0 COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING (NOT (((COALESCE(DISTINCT GROUP_CONCAT(t0.c0), vt0.c0, AVG(vt1.c0), TOTAL(vt1.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING ((((COALESCE(DISTINCT GROUP_CONCAT(t0.c0), vt0.c0, AVG(vt1.c0), TOTAL(vt1.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt1.c0 COLLATE NOCASE))) ISNULL);
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING ((COALESCE(DISTINCT GROUP_CONCAT(t0.c0), vt0.c0, AVG(vt1.c0), TOTAL(vt1.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt1.c0 COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING (NOT (((COALESCE(DISTINCT GROUP_CONCAT(t0.c0), vt0.c0, AVG(vt1.c0), TOTAL(vt1.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING ((((COALESCE(DISTINCT GROUP_CONCAT(t0.c0), vt0.c0, AVG(vt1.c0), TOTAL(vt1.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt1.c0 COLLATE NOCASE))) ISNULL);
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c0)OR(vt1.c0)))AND(t0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt1, t0 WHERE ((NOT (((((t0.c0)OR(vt1.c0)))AND(t0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, t0 WHERE (((((((t0.c0)OR(vt1.c0)))AND(t0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((~ (PRINTF(vt1.c0, vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((~ (PRINTF(vt1.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((~ (PRINTF(vt1.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON 0Xffffffffd80d08f0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON 0Xffffffffd80d08f0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN ((((t0.c0))<=((vt0.c0)))) AND (((vt0.c0)<<(NULL))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON 0Xffffffffd80d08f0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC)) BETWEEN ((((t0.c0))<=((vt0.c0)))) AND (((vt0.c0)<<(NULL))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON 0xffffffffd80d08f0 WHERE (((((CAST(t0.c0 AS NUMERIC)) BETWEEN ((((t0.c0))<=((vt0.c0)))) AND (((vt0.c0)<<(NULL))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON 0Xffffffffd80d08f0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0))*((vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0))*((vt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0))*((vt0.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0))*((vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0))*((vt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0))*((vt0.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN ('>X,/說MJ䊘|') AND (t0.c0))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((vt1.c0 COLLATE BINARY) NOT BETWEEN ('>X,/說MJ䊘|') AND (t0.c0))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((vt1.c0 COLLATE BINARY) NOT BETWEEN ('>X,/說MJ䊘|') AND (t0.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0, x'', t0.c0)) NOT BETWEEN ((x'', (('-1516872873')>=(t0.c0)), NULL)) AND ((t0.c0 COLLATE RTRIM, ((t0.c0)|(t0.c0)), ((t0.c0) BETWEEN (0.5759558062894345) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, x'', t0.c0)) NOT BETWEEN ((x'', (('-1516872873')>=(t0.c0)), NULL)) AND ((t0.c0 COLLATE RTRIM, ((t0.c0)|(t0.c0)), ((t0.c0) BETWEEN (0.5759558062894345) AND (t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, x'', t0.c0)) NOT BETWEEN ((x'', (('-1516872873')>=(t0.c0)), NULL)) AND ((t0.c0 COLLATE RTRIM, ((t0.c0)|(t0.c0)), ((t0.c0) BETWEEN (0.5759558062894345) AND (t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0 HAVING ((COUNT(SUM(t0.c0))) NOT NULL) UNION ALL SELECT vt1.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0 HAVING (NOT (((COUNT(SUM(t0.c0))) NOT NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0 HAVING ((((COUNT(SUM(t0.c0))) NOT NULL)) ISNULL);
SELECT t0.c0 FROM vt0, vt1 CROSS JOIN t0 ON NULL;
SELECT t0.c0 FROM vt0, vt1 CROSS JOIN t0 ON NULL WHERE ((((((vt0.c0))==((t0.c0)))) NOTNULL)) UNION ALL SELECT t0.c0 FROM vt0, vt1 CROSS JOIN t0 ON NULL WHERE ((NOT ((((((vt0.c0))=((t0.c0)))) NOTNULL)))) UNION ALL SELECT ALL t0.c0 FROM vt0, vt1 CROSS JOIN t0 ON NULL WHERE ((((((((vt0.c0))==((t0.c0)))) NOTNULL)) ISNULL));
SELECT t0.c0 FROM vt0, vt1 CROSS JOIN t0 ON NULL;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((- ('-383253314' COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((- ('-383253314' COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((- ('-383253314' COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE RTRIM GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE RTRIM WHERE (CASE WHEN 0.8658915654818731 COLLATE NOCASE THEN CAST(t0.c0 AS INTEGER) END) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE RTRIM WHERE ((NOT (CASE WHEN 0.8658915654818731 COLLATE NOCASE THEN CAST(t0.c0 AS INTEGER) END))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE RTRIM WHERE (((CASE WHEN 0.8658915654818731 COLLATE NOCASE THEN CAST(t0.c0 AS INTEGER) END) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE RTRIM GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT ALL MIN(0.6956364396062227) FROM t0 ORDER BY (+ (CASE WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE ((NULL) BETWEEN (vt1.c0) AND ('0.0')) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE ((NULL) BETWEEN (vt1.c0) AND ('0.0')) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE ((NULL) BETWEEN (vt1.c0) AND ('0.0')) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) LEFT OUTER JOIN t0 ON vt1.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (CAST(COALESCE(vt0.c0, 0.09169411334576905) AS BLOB)) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CAST(COALESCE(vt0.c0, 0.09169411334576905) AS BLOB)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CAST(COALESCE(vt0.c0, 0.09169411334576905) AS BLOB)) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((t0.c0))>=((COUNT(*)))) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ((((t0.c0))>=((COUNT(*)))) COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((((t0.c0))>=((COUNT(*)))) COLLATE RTRIM) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((t0.c0))>=((COUNT(*)))) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ((((t0.c0))>=((COUNT(*)))) COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (((((t0.c0))>=((COUNT(*)))) COLLATE RTRIM) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) UNION ALL SELECT ALL * FROM t0 NOT INDEXED WHERE ((NOT ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON HEX(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)));
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON HEX(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))) WHERE (((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))==(((t0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON HEX(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))) WHERE ((NOT (((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))==(((t0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON HEX(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))) WHERE (((((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))=(((t0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON HEX(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)));
SELECT ALL vt1.c0 FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (UPPER(DISTINCT vt0.c0))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (UPPER(DISTINCT vt0.c0))) WHERE (CASE x''  WHEN ((t0.c0)<>(t0.c0)) THEN ((vt0.c0)>=(vt1.c0)) WHEN t0.c0 THEN x'' WHEN ((((((((t0.c0)AND(vt1.c0)))OR(x'')))AND('阕F+e')))AND(t0.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 END WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt0.c0)AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE (((vt1.c0, t0.c0, '487842294'))<>((vt1.c0, t0.c0, t0.c0))) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (UPPER(DISTINCT vt0.c0))) WHERE ((NOT (CASE x''  WHEN ((t0.c0)!=(t0.c0)) THEN ((vt0.c0)>=(vt1.c0)) WHEN t0.c0 THEN x'' WHEN ((((((((t0.c0)AND(vt1.c0)))OR(x'')))AND('阕F+e')))AND(t0.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 END WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt0.c0)AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE (((vt1.c0, t0.c0, '487842294'))!=((vt1.c0, t0.c0, t0.c0))) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (UPPER(DISTINCT vt0.c0))) WHERE (((CASE x''  WHEN ((t0.c0)!=(t0.c0)) THEN ((vt0.c0)>=(vt1.c0)) WHEN t0.c0 THEN x'' WHEN ((((((((t0.c0)AND(vt1.c0)))OR(x'')))AND('阕F+e')))AND(t0.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 END WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt0.c0)AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE (((vt1.c0, t0.c0, '487842294'))!=((vt1.c0, t0.c0, t0.c0))) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (UPPER(DISTINCT vt0.c0))) GROUP BY vt1.c0;
SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT * FROM vt1 INNER JOIN vt0 ON CAST('|' AS NUMERIC) COLLATE RTRIM;
SELECT * FROM vt1 INNER JOIN vt0 ON CAST('|' AS NUMERIC) COLLATE RTRIM WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)) AND (((vt0.c0 IN ()))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST('|' AS NUMERIC) COLLATE RTRIM WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)) AND (((vt0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST('|' AS NUMERIC) COLLATE RTRIM WHERE ((((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)) AND (((vt0.c0 IN ()))))) ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON CAST('|' AS NUMERIC) COLLATE RTRIM;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0)))>=(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0)))>=(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((((0.43367297335990096))<((('>?1q6' IN ()))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0)))>=(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((NOT ((((0.43367297335990096))<((('>?1q6' IN ()))))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0)))>=(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((((((0.43367297335990096))<((('>?1q6' IN ()))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0)))>=(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN 'Pb' COLLATE NOCASE ELSE (- (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN 'Pb' COLLATE NOCASE ELSE (- (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE RTRIM THEN 'Pb' COLLATE NOCASE ELSE (- (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((- (t0.c0)) IN ((- (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((- (t0.c0)) IN ((- (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((- (t0.c0)) IN ((- (t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0 CROSS JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))&(vt1.c0)) RIGHT OUTER JOIN vt0 ON (NOT (vt1.c0)) COLLATE BINARY;
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0 CROSS JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))&(vt1.c0)) RIGHT OUTER JOIN vt0 ON (NOT (vt1.c0)) COLLATE BINARY WHERE (((CASE WHEN 0.5906676402755029 THEN vt1.c0 END)IS((NOT (t0.c0))))) UNION SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0 CROSS JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))&(vt1.c0)) RIGHT OUTER JOIN vt0 ON (NOT (vt1.c0)) COLLATE BINARY WHERE ((NOT (((CASE WHEN 0.5906676402755029 THEN vt1.c0 END)IS((NOT (t0.c0))))))) UNION SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0 CROSS JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))&(vt1.c0)) RIGHT OUTER JOIN vt0 ON (NOT (vt1.c0)) COLLATE BINARY WHERE (((((CASE WHEN 0.5906676402755029 THEN vt1.c0 END)IS((NOT (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM t0 CROSS JOIN vt1 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))&(vt1.c0)) RIGHT OUTER JOIN vt0 ON (NOT (vt1.c0)) COLLATE BINARY;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 WHERE (CASE (((t0.c0))<((vt0.c0)))  WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE (((t0.c0))<((vt0.c0)))  WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE (((CASE (((t0.c0))<((vt0.c0)))  WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON 0.39316187613411735 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON 0.39316187613411735 GROUP BY vt1.c0, t0.c0 HAVING COUNT(SUM(-1.545382126E9)) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON 0.39316187613411735 GROUP BY vt1.c0, t0.c0 HAVING (NOT (COUNT(SUM(-1.545382126E9)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON 0.39316187613411735 GROUP BY vt1.c0, t0.c0 HAVING ((COUNT(SUM(-1.545382126E9))) ISNULL);
SELECT TOTAL(CAST(((vt0.c0) NOT NULL) AS BLOB)) FROM vt0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (LIKELY(vt0.c0)));
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (LIKELY(vt0.c0))) WHERE (((CAST(vt1.c0 AS BLOB))LIKE(NULL))) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (LIKELY(vt0.c0))) WHERE ((NOT (((CAST(vt1.c0 AS BLOB))LIKE(NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (LIKELY(vt0.c0))) WHERE (((((CAST(vt1.c0 AS BLOB))LIKE(NULL))) ISNULL));
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (LIKELY(vt0.c0)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (NULL) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (NULL))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (('-1206199209')OR(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT ((('-1206199209')OR(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (((('-1206199209')OR(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (('-1206199209')OR(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT ((('-1206199209')OR(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (((('-1206199209')OR(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE (CASE ((vt1.c0)-(vt1.c0))  WHEN (0.47612606593991036 IN ()) THEN LOWER(vt0.c0) ELSE '-239634924' END) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT (CASE ((vt1.c0)-(vt1.c0))  WHEN (0.47612606593991036 IN ()) THEN LOWER(vt0.c0) ELSE '-239634924' END))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE (((CASE ((vt1.c0)-(vt1.c0))  WHEN (0.47612606593991036 IN ()) THEN LOWER(vt0.c0) ELSE '-239634924' END) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0, t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0, t0 NOT INDEXED WHERE (((CAST(t0.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0, t0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN (('0.5108593058533294') IS TRUE) ELSE ((vt1.c0) ISNULL) END) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (CASE WHEN (~ (vt1.c0)) THEN (('0.5108593058533294') IS TRUE) ELSE ((vt1.c0) ISNULL) END))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((CASE WHEN (~ (vt1.c0)) THEN (('0.5108593058533294') IS TRUE) ELSE ((vt1.c0) ISNULL) END) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (x'4246') AND (vt1.c0)))AND((vt1.c0 IN ()))))OR((vt0.c0 IN ()))) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (x'4246') AND (vt1.c0)))AND((vt1.c0 IN ()))))OR((vt0.c0 IN ()))) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING AVG(GROUP_CONCAT(AVG(x'abeb'))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (x'4246') AND (vt1.c0)))AND((vt1.c0 IN ()))))OR((vt0.c0 IN ()))) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(AVG(x'abeb'))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (x'4246') AND (vt1.c0)))AND((vt1.c0 IN ()))))OR((vt0.c0 IN ()))) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((AVG(GROUP_CONCAT(AVG(x'abeb')))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c0)<=(((NULL) NOTNULL)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0)<=(((NULL) NOTNULL)))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0)<=(((NULL) NOTNULL)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((+ ((((vt1.c0))>=((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ ((((vt1.c0))>=((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((+ ((((vt1.c0))>=((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CAST(0.0016709455008754315 AS INTEGER) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CAST(0.0016709455008754315 AS INTEGER) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CAST(0.0016709455008754315 AS INTEGER) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, vt0, t0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE (0.06463882107623786) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT (0.06463882107623786))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE (((0.06463882107623786) ISNULL));
SELECT t0.c0, vt1.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE WHERE (((((vt1.c0)|(NULL)))+(CAST(vt1.c0 AS TEXT)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE WHERE ((NOT (((((vt1.c0)|(NULL)))+(CAST(vt1.c0 AS TEXT)))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE WHERE (((((((vt1.c0)|(NULL)))+(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE (CAST(t0.c0 AS NUMERIC)) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE ((NOT (CAST(t0.c0 AS NUMERIC)))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE (((CAST(t0.c0 AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT(TOTAL(TOTAL(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(TOTAL(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT(TOTAL(TOTAL(MAX(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((vt0.c0 COLLATE BINARY IN ((((vt0.c0))>=((vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ((((vt0.c0))>=((vt1.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt0.c0 COLLATE BINARY IN ((((vt0.c0))>=((vt1.c0)))))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((t0.c0, vt1.c0, vt1.c0, vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), (t0.c0 IN ()), ((('1555684998')) NOT BETWEEN ((0.04433098856245099)) AND ((t0.c0))), t0.c0)) AND ((((t0.c0) BETWEEN (0.851302526545713) AND (vt1.c0)), ((vt1.c0) IS TRUE), ((t0.c0)IS NOT('00*4')), (NOT (t0.c0)), NULL)));
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((t0.c0, vt1.c0, vt1.c0, vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), (t0.c0 IN ()), ((('1555684998')) NOT BETWEEN ((0.04433098856245099)) AND ((t0.c0))), t0.c0)) AND ((((t0.c0) BETWEEN (0.851302526545713) AND (vt1.c0)), ((vt1.c0) IS TRUE), ((t0.c0)IS NOT('00*4')), (NOT (t0.c0)), NULL))) WHERE ((((t0.c0, x'', vt1.c0 COLLATE NOCASE))<=((rtreenode(t0.c0, t0.c0), t0.c0, ((((t0.c0)AND(t0.c0)))OR(vt1.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((t0.c0, vt1.c0, vt1.c0, vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), (t0.c0 IN ()), ((('1555684998')) NOT BETWEEN ((0.04433098856245099)) AND ((t0.c0))), t0.c0)) AND ((((t0.c0) BETWEEN (0.851302526545713) AND (vt1.c0)), ((vt1.c0) IS TRUE), ((t0.c0)IS NOT('00*4')), (NOT (t0.c0)), NULL))) WHERE ((NOT ((((t0.c0, x'', vt1.c0 COLLATE NOCASE))<=((rtreenode(t0.c0, t0.c0), t0.c0, ((((t0.c0)AND(t0.c0)))OR(vt1.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((t0.c0, vt1.c0, vt1.c0, vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), (t0.c0 IN ()), ((('1555684998')) NOT BETWEEN ((0.04433098856245099)) AND ((t0.c0))), t0.c0)) AND ((((t0.c0) BETWEEN (0.851302526545713) AND (vt1.c0)), ((vt1.c0) IS TRUE), ((t0.c0)IS NOT('00*4')), (NOT (t0.c0)), NULL))) WHERE ((((((t0.c0, x'', vt1.c0 COLLATE NOCASE))<=((rtreenode(t0.c0, t0.c0), t0.c0, ((((t0.c0)AND(t0.c0)))OR(vt1.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((t0.c0, vt1.c0, vt1.c0, vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), (t0.c0 IN ()), ((('1555684998')) NOT BETWEEN ((0.04433098856245099)) AND ((t0.c0))), t0.c0)) AND ((((t0.c0) BETWEEN (0.851302526545713) AND (vt1.c0)), ((vt1.c0) IS TRUE), ((t0.c0)IS NOT('00*4')), (NOT (t0.c0)), NULL)));
SELECT vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1, vt0 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1, vt0 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING 0.9346305117536445 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.9346305117536445)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.9346305117536445) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING 0.9346305117536445 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.9346305117536445)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.9346305117536445) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt1, t0, vt0;
SELECT * FROM vt1, t0, vt0 WHERE ((NOT (SUBSTR(vt1.c0, t0.c0)))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((NOT ((NOT (SUBSTR(vt1.c0, t0.c0)))))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((((NOT (SUBSTR(vt1.c0, t0.c0)))) ISNULL));
SELECT * FROM vt1, t0, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY)<(ROUND(t0.c0, vt1.c0)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)<(ROUND(t0.c0, vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((((vt1.c0 COLLATE BINARY)<(ROUND(t0.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1;
SELECT t0.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE ((+ (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE ((NOT ((+ (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((+ (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0;
SELECT MAX(vt1.c0) FROM t0 NOT INDEXED, vt1 ORDER BY t0.c0, (- (((((t0.c0)AND(t0.c0)))AND(t0.c0)))) ASC  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON x'';
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON x'' WHERE (vt1.c0) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON x'' WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON x'' WHERE (((vt1.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON x'';
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((t0.c0 IN (1963997665)))OR((vt0.c0 IN ()))))AND(NULL)))OR(((t0.c0)<=(t0.c0)))))OR(((t0.c0)<(vt0.c0))));
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((t0.c0 IN (1963997665)))OR((vt0.c0 IN ()))))AND(NULL)))OR(((t0.c0)<=(t0.c0)))))OR(((t0.c0)<(vt0.c0)))) WHERE ((((+ (t0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((t0.c0 IN (1963997665)))OR((vt0.c0 IN ()))))AND(NULL)))OR(((t0.c0)<=(t0.c0)))))OR(((t0.c0)<(vt0.c0)))) WHERE ((NOT ((((+ (t0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((t0.c0 IN (1963997665)))OR((vt0.c0 IN ()))))AND(NULL)))OR(((t0.c0)<=(t0.c0)))))OR(((t0.c0)<(vt0.c0)))) WHERE ((((((+ (t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((t0.c0 IN (1963997665)))OR((vt0.c0 IN ()))))AND(NULL)))OR(((t0.c0)<=(t0.c0)))))OR(((t0.c0)<(vt0.c0))));
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c0 END) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c0 END) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((CASE vt0.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c0 END) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt1.c0, vt1.c0), COALESCE(vt1.c0, 0x363e0286), NULL, x''))>=((TRIM(''), x'', 'v -eRsU', (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt1.c0) ISNULL))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt1.c0, vt1.c0), COALESCE(vt1.c0, 0X363e0286), NULL, x''))>=((TRIM(''), x'', 'v -eRsU', (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt1.c0) ISNULL))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt1.c0, vt1.c0), COALESCE(vt1.c0, 0X363e0286), NULL, x''))>=((TRIM(''), x'', 'v -eRsU', (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt1.c0) ISNULL))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LIKELIHOOD(((vt1.c0)>(vt1.c0)), 0.49312808499277194)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LIKELIHOOD(((vt1.c0)>(vt1.c0)), 0.49312808499277194)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LIKELIHOOD(((vt1.c0)>(vt1.c0)), 0.49312808499277194)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0.19708042534855097 END)))OR(NULL)))AND(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) NOTNULL))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0.19708042534855097 END)))OR(NULL)))AND(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0) NOTNULL))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0.19708042534855097 END)))OR(NULL)))AND(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('1823270002')+(COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((('1823270002')+(COUNT(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((('1823270002')+(COUNT(COUNT(*))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((((0.48163793145894784)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((TYPEOF(DISTINCT t0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT ((((0.48163793145894784)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((TYPEOF(DISTINCT t0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((((((0.48163793145894784)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((TYPEOF(DISTINCT t0.c0))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((~ (x'')))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((+ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((~ (x'')))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((+ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((((~ (x'')))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((CASE WHEN t0.c0 THEN vt1.c0 END, ((vt1.c0)>=(t0.c0)), (((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=(((t0.c0 IN (t0.c0, t0.c0)), ((t0.c0) NOT BETWEEN (0.0709130797984211) AND (t0.c0)), '')))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((((CASE WHEN t0.c0 THEN vt1.c0 END, ((vt1.c0)>=(t0.c0)), (((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=(((t0.c0 IN (t0.c0, t0.c0)), ((t0.c0) NOT BETWEEN (0.0709130797984211) AND (t0.c0)), '')))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((CASE WHEN t0.c0 THEN vt1.c0 END, ((vt1.c0)>=(t0.c0)), (((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=(((t0.c0 IN (t0.c0, t0.c0)), ((t0.c0) NOT BETWEEN (0.0709130797984211) AND (t0.c0)), '')))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB)) IS TRUE)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB)) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((CAST(vt1.c0 AS BLOB)) IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN vt0.c0 THEN ((0Xffffffffb8be3ae8)GLOB(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE (- (vt0.c0))  WHEN vt0.c0 THEN ((0Xffffffffb8be3ae8)GLOB(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE (- (vt0.c0))  WHEN vt0.c0 THEN ((0Xffffffffb8be3ae8)GLOB(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (~ (json_type(t0.c0))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (~ (json_type(t0.c0))) WHERE ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))<>((((vt0.c0)||(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (~ (json_type(t0.c0))) WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))!=((((vt0.c0)||(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (~ (json_type(t0.c0))) WHERE ((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))<>((((vt0.c0)||(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (~ (json_type(t0.c0))) GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0 HAVING ((CASE WHEN vt1.c0 THEN t0.c0 END)|(AVG(vt1.c0))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0 HAVING (NOT (((CASE WHEN vt1.c0 THEN t0.c0 END)|(AVG(vt1.c0))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0 HAVING ((((CASE WHEN vt1.c0 THEN t0.c0 END)|(AVG(vt1.c0)))) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0 HAVING ((CASE WHEN vt1.c0 THEN t0.c0 END)|(AVG(vt1.c0))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0 HAVING (NOT (((CASE WHEN vt1.c0 THEN t0.c0 END)|(AVG(vt1.c0))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0 HAVING ((((CASE WHEN vt1.c0 THEN t0.c0 END)|(AVG(vt1.c0)))) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c0, vt1.c0;
SELECT * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST((t0.c0 IN ()) AS BLOB)) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (CAST((t0.c0 IN ()) AS BLOB)))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE (((CAST((t0.c0 IN ()) AS BLOB)) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((((((NOT (vt1.c0)))OR((((x'', vt1.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))OR((t0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT ((((((NOT (vt1.c0)))OR((((x'', vt1.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))OR((t0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((((((((NOT (vt1.c0)))OR((((x'', vt1.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))OR((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON vt1.c0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON vt1.c0 WHERE ((CAST(903915625 AS TEXT) IN ())) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON vt1.c0 WHERE ((NOT ((CAST(903915625 AS TEXT) IN ())))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON vt1.c0 WHERE ((((CAST(903915625 AS TEXT) IN ())) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON vt1.c0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(SUM(AVG(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(SUM(AVG(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(SUM(AVG(t0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ('') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM t0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((t0.c0)!=(t0.c0)) END GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((t0.c0)<>(t0.c0)) END WHERE ((((vt1.c0 IN ()))>=(vt1.c0))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((t0.c0)!=(t0.c0)) END WHERE ((NOT ((((vt1.c0 IN ()))>=(vt1.c0))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((t0.c0)<>(t0.c0)) END WHERE ((((((vt1.c0 IN ()))>=(vt1.c0))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((t0.c0)!=(t0.c0)) END GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (- ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((0xffffffffb7399257, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (- ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((0Xffffffffb7399257, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))) GROUP BY t0.c0, vt0.c0 HAVING AVG(MAX(vt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (- ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((0xffffffffb7399257, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))) GROUP BY t0.c0, vt0.c0 HAVING (NOT (AVG(MAX(vt0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (- ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((0Xffffffffb7399257, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))) GROUP BY t0.c0, vt0.c0 HAVING ((AVG(MAX(vt0.c0) COLLATE NOCASE)) ISNULL);
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0;
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((((vt0.c0))!=((vt0.c0))) IN ())) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((vt0.c0))<>((vt0.c0))) IN ())))) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((((((vt0.c0))!=((vt0.c0))) IN ())) ISNULL));
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((t0.c0)OR(vt0.c0)))GLOB(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT (((((t0.c0)OR(vt0.c0)))GLOB(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((((t0.c0)OR(vt0.c0)))GLOB(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (COUNT(vt1.c0) IN (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((COUNT(vt1.c0) IN (COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((COUNT(vt1.c0) IN (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (COUNT(vt1.c0) IN (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((COUNT(vt1.c0) IN (COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((COUNT(vt1.c0) IN (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((x''))>(('')))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT ((((x''))>(('')))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((((x''))>(('')))) ISNULL));
SELECT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ());
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((vt0.c0)OR(vt1.c0)) THEN (((vt0.c0)) BETWEEN ((x'07d5')) AND ((vt0.c0))) END) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE ((NOT (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((vt0.c0)OR(vt1.c0)) THEN (((vt0.c0)) BETWEEN ((x'07d5')) AND ((vt0.c0))) END))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE (((CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((vt0.c0)OR(vt1.c0)) THEN (((vt0.c0)) BETWEEN ((x'07d5')) AND ((vt0.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c0)) IN ());
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (json_valid(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (json_valid(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((json_valid(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(TOTAL(GROUP_CONCAT(vt1.c0)) AS REAL) COLLATE BINARY UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(TOTAL(GROUP_CONCAT(vt1.c0)) AS REAL) COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(TOTAL(GROUP_CONCAT(vt1.c0)) AS REAL) COLLATE BINARY) ISNULL);
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c0)||(t0.c0))));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c0)||(t0.c0)))) WHERE ('+') UNION ALL SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c0)||(t0.c0)))) WHERE ((NOT ('+'))) UNION ALL SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c0)||(t0.c0)))) WHERE ((('+') ISNULL));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c0)||(t0.c0))));
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((((vt1.c0))>=((vt0.c0))) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST((((vt1.c0))>=((vt0.c0))) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST((((vt1.c0))>=((vt0.c0))) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE (TRIM(DISTINCT CASE WHEN vt0.c0 THEN '-1356532548' ELSE vt1.c0 END)) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT (TRIM(DISTINCT CASE WHEN vt0.c0 THEN '-1356532548' ELSE vt1.c0 END)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE (((TRIM(DISTINCT CASE WHEN vt0.c0 THEN '-1356532548' ELSE vt1.c0 END)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM t0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING GROUP_CONCAT(TOTAL(vt1.c0)) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt1.c0)))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt1.c0))) ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1;
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS TEXT)))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((CAST(((vt0.c0) NOT NULL) AS TEXT)) ISNULL));
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c0) IS FALSE) AS REAL) INNER JOIN vt1 ON (((((+ (t0.c0)))AND(((vt0.c0) NOT NULL))))OR(x'')) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c0) IS FALSE) AS REAL) INNER JOIN vt1 ON (((((+ (t0.c0)))AND(((vt0.c0) NOT NULL))))OR(x'')) WHERE (CAST(json_array_length(vt0.c0) AS BLOB)) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c0) IS FALSE) AS REAL) INNER JOIN vt1 ON (((((+ (t0.c0)))AND(((vt0.c0) NOT NULL))))OR(x'')) WHERE ((NOT (CAST(json_array_length(vt0.c0) AS BLOB)))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c0) IS FALSE) AS REAL) INNER JOIN vt1 ON (((((+ (t0.c0)))AND(((vt0.c0) NOT NULL))))OR(x'')) WHERE (((CAST(json_array_length(vt0.c0) AS BLOB)) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c0) IS FALSE) AS REAL) INNER JOIN vt1 ON (((((+ (t0.c0)))AND(((vt0.c0) NOT NULL))))OR(x'')) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING 0xffffffff87976dc5 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (0xffffffff87976dc5)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0xffffffff87976dc5) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING 0xffffffff87976dc5 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (0xffffffff87976dc5)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0xffffffff87976dc5) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((t0.c0)>>(vt1.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((t0.c0)>>(vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((t0.c0)>>(vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE ((CAST(t0.c0 AS NUMERIC) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT ((CAST(t0.c0 AS NUMERIC) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((CAST(t0.c0 AS NUMERIC) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING AVG(vt1.c0) COLLATE BINARY COLLATE BINARY UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (AVG(vt1.c0) COLLATE BINARY COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((AVG(vt1.c0) COLLATE BINARY COLLATE BINARY) ISNULL);
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING AVG(vt1.c0) COLLATE BINARY COLLATE BINARY UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (AVG(vt1.c0) COLLATE BINARY COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((AVG(vt1.c0) COLLATE BINARY COLLATE BINARY) ISNULL);
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (+ (vt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY) ISNULL) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT TOTAL(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) FROM t0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE ((t0.c0 COLLATE BINARY IN ())) UNION ALL SELECT t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT ((t0.c0 COLLATE BINARY IN ())))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE ((((t0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON HEX(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON HEX(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) WHERE ((- (rtreenode(vt1.c0, vt0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON HEX(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) WHERE ((NOT ((- (rtreenode(vt1.c0, vt0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON HEX(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) WHERE ((((- (rtreenode(vt1.c0, vt0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON HEX(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) GROUP BY t0.c0;
SELECT vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(MIN(TOTAL(GROUP_CONCAT(SUM(vt1.c0))))))AND(COUNT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(MIN(TOTAL(GROUP_CONCAT(SUM(vt1.c0))))))AND(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((((COUNT(MIN(TOTAL(GROUP_CONCAT(SUM(vt1.c0))))))AND(COUNT(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((((((((+ (vt1.c0)))OR((0.1879832979054029 IN ()))))AND(vt1.c0)))OR((- (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOTNULL) COLLATE RTRIM))) ORDER BY (((((((((+ (vt1.c0)))OR((0.1879832979054029 IN ()))))AND(vt1.c0)))OR((- (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOTNULL) COLLATE RTRIM) ISNULL)) ORDER BY (((((((((+ (vt1.c0)))OR((0.1879832979054029 IN ()))))AND(vt1.c0)))OR((- (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((((('-2094098510')AND(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT ((((('-2094098510')AND(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((((((('-2094098510')AND(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((- (vt1.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((- (vt1.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((- (vt1.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND ((((x'92af1a320e6d'))!=((vt0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND ((((x'92af1a320e6d'))!=((vt0.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE RTRIM) BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND ((((x'92af1a320e6d'))!=((vt0.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE (((UPPER(t0.c0)) BETWEEN (((t0.c0) ISNULL)) AND ((NOT (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((NOT (((UPPER(t0.c0)) BETWEEN (((t0.c0) ISNULL)) AND ((NOT (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE (((((UPPER(t0.c0)) BETWEEN (((t0.c0) ISNULL)) AND ((NOT (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((TOTAL(vt1.c0))OR(COUNT(MIN(-8.18190215E8)))))AND(MAX(0.9025341640866837))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((((TOTAL(vt1.c0))OR(COUNT(MIN(-8.18190215E8)))))AND(MAX(0.9025341640866837))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((((TOTAL(vt1.c0))OR(COUNT(MIN(-8.18190215E8)))))AND(MAX(0.9025341640866837)))) ISNULL);
SELECT t0.c0 FROM t0, vt0 NATURAL JOIN vt1;
SELECT ALL t0.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((t0.c0)<<(t0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT (((((t0.c0)<<(t0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((((t0.c0)<<(t0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END))) ISNULL));
SELECT t0.c0 FROM t0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((- ((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- ((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((- ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(AVG(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(AVG(t0.c0))) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0x3f106fb6 THEN t0.c0 ELSE vt1.c0 END);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0x3f106fb6 THEN t0.c0 ELSE vt1.c0 END) WHERE ((+ ((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0X3f106fb6 THEN t0.c0 ELSE vt1.c0 END) WHERE ((NOT ((+ ((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0X3f106fb6 THEN t0.c0 ELSE vt1.c0 END) WHERE ((((+ ((vt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0x3f106fb6 THEN t0.c0 ELSE vt1.c0 END);
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1997510463' WHEN '''d' THEN t0.c0 END) AND (((vt1.c0) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1997510463' WHEN '''d' THEN t0.c0 END) AND (((vt1.c0) IS FALSE)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((((CAST(vt1.c0 AS TEXT)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1997510463' WHEN '''d' THEN t0.c0 END) AND (((vt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING x'' COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (x'' COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM vt1, t0 NOT INDEXED GROUP BY t0.c0 HAVING ((x'' COLLATE RTRIM) ISNULL);
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING x'' COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (x'' COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM vt1, t0 NOT INDEXED GROUP BY t0.c0 HAVING ((x'' COLLATE RTRIM) ISNULL);
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE ((0.3768268926188276)%(vt1.c0))  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0) THEN CAST(vt1.c0 AS REAL) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE ((0.3768268926188276)%(vt1.c0))  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0) THEN CAST(vt1.c0 AS REAL) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE ((0.3768268926188276)%(vt1.c0))  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0) THEN CAST(vt1.c0 AS REAL) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE (CASE WHEN (t0.c0 IN ()) THEN (~ (t0.c0)) END) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (CASE WHEN (t0.c0 IN ()) THEN (~ (t0.c0)) END))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((CASE WHEN (t0.c0 IN ()) THEN (~ (t0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((NULL IN ()) AS REAL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST((NULL IN ()) AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST((NULL IN ()) AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0 HAVING AVG((vt0.c0 IN ())) UNION ALL SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0 HAVING (NOT (AVG((vt0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0 HAVING ((AVG((vt0.c0 IN ()))) ISNULL);
SELECT t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0 HAVING AVG((vt0.c0 IN ())) UNION ALL SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0 HAVING (NOT (AVG((vt0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0 HAVING ((AVG((vt0.c0 IN ()))) ISNULL);
SELECT t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE ((('-244584933')<>(((vt0.c0)&(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((('-244584933')!=(((vt0.c0)&(vt1.c0))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((('-244584933')!=(((vt0.c0)&(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(TOTAL(vt1.c0)))<(((AVG(MAX(AVG(COUNT(*)))))>>(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(TOTAL(vt1.c0)))<(((AVG(MAX(AVG(COUNT(*)))))>>(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(TOTAL(vt1.c0)))<(((AVG(MAX(AVG(COUNT(*)))))>>(vt1.c0))))) ISNULL);
SELECT t0.c0 FROM t0, vt1;
SELECT t0.c0 FROM t0, vt1 WHERE (((NULL) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (ABS(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0, vt1 WHERE ((NOT (((NULL) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (ABS(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 WHERE (((((NULL) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (ABS(t0.c0)))) ISNULL));
SELECT t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT t0.c0 FROM vt1, t0, vt0 WHERE ('2138219020') UNION SELECT DISTINCT t0.c0 FROM vt1, t0, vt0 WHERE ((NOT ('2138219020'))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0, vt0 WHERE ((('2138219020') ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, t0, vt0;
SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0, vt0 WHERE (1425120032 COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (1425120032 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0, vt0 WHERE (((1425120032 COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING UNLIKELY(TOTAL(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (UNLIKELY(TOTAL(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((UNLIKELY(TOTAL(TOTAL(vt0.c0)))) ISNULL);
SELECT * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((t0.c0)OR(t0.c0)))AND(vt0.c0)) IN (UPPER(DISTINCT vt0.c0)))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE ((NOT ((((((t0.c0)OR(t0.c0)))AND(vt0.c0)) IN (UPPER(DISTINCT vt0.c0)))))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)) IN (UPPER(DISTINCT vt0.c0)))) ISNULL));
SELECT * FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<=((~ (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<=((~ (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<=((~ (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0 HAVING AVG(MAX(GROUP_CONCAT(GROUP_CONCAT(SUM(t0.c0))))) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, t0.c0 HAVING (NOT (AVG(MAX(GROUP_CONCAT(GROUP_CONCAT(SUM(t0.c0))))) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0 HAVING ((AVG(MAX(GROUP_CONCAT(GROUP_CONCAT(SUM(t0.c0))))) COLLATE BINARY) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>(vt0.c0))))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
