-- Time: 2024/06/08 23:45:30
-- Database: database83
-- Database version: 3.40.0
-- seed value: 2964296283
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB , +c4 INT ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
PRAGMA default_cache_size = 1143440886; -- 1ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA temp.default_cache_size; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
UPDATE OR REPLACE rt0 SET c2=NULL WHERE NULLIF(0.6606209870097952, COALESCE(rt0.c2, rt0.c2)); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 165533657); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='' WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(CAST(vt1.c0 AS REAL))); -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 6ms;
PRAGMA temp.cache_size = 1161739844565919119; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0, c4, c3) VALUES ('-1661766957', x'7764', x'8e8a', x'41df'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '39507'); -- 0ms;
UPDATE rt0 SET (c2)=(1.143440886E9) WHERE rt0.c3; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE rt0 SET c0='', c1=NULL; -- 11ms;
INSERT OR ABORT INTO vt1 VALUES (0.8984099067292941); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1489193619,2');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x'976dc639'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET c4=NULL, c3=''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (-1.661766957E9); -- 9ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=(NULL, '1147805028') WHERE (NOT (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('-1481652709'); -- 9ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x''); -- 0ms;
PRAGMA main.journal_mode = DELETE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1143440886,13');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 105152874); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0x46cbcd39, c3='	' WHERE CAST(((rt0.c2) IS FALSE) AS REAL); -- 8ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(x'', ''); -- 1ms;
SELECT rtreecheck('rt0'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
ANALYZE; -- 2ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(0Xffffffffa7afc61b) WHERE ((((t0.c0) IS FALSE)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(t0.c0)) AND (((t0.c0)GLOB(t0.c0)))); -- 0ms;
VACUUM main; -- 4ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR ABORT vt1 SET c0=0.9497061820952721; -- 4ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED); -- 1ms;
UPDATE vt1 SET (c0, c0)=(655109829, '655109829') WHERE CAST(vt1.c0 AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET (c0, c0)=('0.8984099067292941', x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c1) VALUES ('', x'23ee'); -- 16ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1187761465'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 4ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 1ms;
PRAGMA main.application_id = 8438387081509654747; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1489193619 sz=-1380200179'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (0.04182062825596411), (''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.04306580297067164, c0=-1866988238; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c1=NULL; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA main.cache_size = -7782454597015439178; -- 0ms;
UPDATE vt0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0=0.19882559106448627 WHERE ((LOWER(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((vt1.c0 IN ()))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1866988238);\n; -- 0ms;
END TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
DROP TABLE IF EXISTS vt1; -- 8ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2) AS SELECT ALL (((+ (rt0.c1))) BETWEEN (rt0.c4) AND ((- (x'93b3')))), COUNT(*), ((((((rt0.c2) IS FALSE))AND((~ (vt0.c0)))))OR(((rt0.c4)/(rt0.c3)))) FROM rt0, vt0; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE (t0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT DISTINCT v0.c0, vt0.c1, rt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c4, rt0.c3, v0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON DATE(((vt0.c0) NOT NULL), x'42ed', ((((rt0.c2)AND(vt0.c0)))OR(v0.c0))) RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)GLOB(v0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR(UPPER(vt0.c0)));
SELECT ALL t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2 FROM t0, vt0 FULL OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (SQLITE_SOURCE_ID()) AND ((((v0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((v0.c1)AND(rt0.c3)))OR(rt0.c0)) AS NUMERIC) GROUP BY t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2;
SELECT t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2 FROM t0, vt0 FULL OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (SQLITE_SOURCE_ID()) AND ((((v0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((v0.c1)AND(rt0.c3)))OR(rt0.c0)) AS NUMERIC) WHERE (((CASE rt0.c4  WHEN rt0.c3 THEN v0.c1 END)-(v0.c1))) GROUP BY t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2 UNION SELECT t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2 FROM t0, vt0 FULL OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (SQLITE_SOURCE_ID()) AND ((((v0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((v0.c1)AND(rt0.c3)))OR(rt0.c0)) AS NUMERIC) WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c3 THEN v0.c1 END)-(v0.c1))))) GROUP BY t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2 UNION SELECT t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2 FROM t0, vt0 FULL OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (SQLITE_SOURCE_ID()) AND ((((v0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((v0.c1)AND(rt0.c3)))OR(rt0.c0)) AS NUMERIC) WHERE (((((CASE rt0.c4  WHEN rt0.c3 THEN v0.c1 END)-(v0.c1))) ISNULL)) GROUP BY t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2;
SELECT ALL t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2 FROM t0, vt0 FULL OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (SQLITE_SOURCE_ID()) AND ((((v0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((v0.c1)AND(rt0.c3)))OR(rt0.c0)) AS NUMERIC) GROUP BY t0.c0, rt0.c4, vt0.c1, v0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c2;
SELECT ALL v0.c2, v0.c0, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0;
SELECT v0.c2, v0.c0, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT v0.c2, v0.c0, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT v0.c2, v0.c0, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0 COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0, rt0, v0, t0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE ((~ (HEX(rt0.c3)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE ((NOT ((~ (HEX(rt0.c3)))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE ((((~ (HEX(rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0, t0 NOT INDEXED;
SELECT vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1 FROM t0, v0 INNER JOIN vt0 ON -1.661766957E9 INNER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c1 THEN rt0.c1 END)*(CASE WHEN rt0.c2 THEN rt0.c4 END)) GROUP BY vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1;
SELECT ALL vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1 FROM t0, v0 INNER JOIN vt0 ON -1.661766957E9 INNER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c1 THEN rt0.c1 END)*(CASE WHEN rt0.c2 THEN rt0.c4 END)) WHERE ((((vt0.c0)GLOB(rt0.c3)) IN ())) GROUP BY vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1 UNION SELECT ALL vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1 FROM t0, v0 INNER JOIN vt0 ON -1.661766957E9 INNER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c1 THEN rt0.c1 END)*(CASE WHEN rt0.c2 THEN rt0.c4 END)) WHERE ((NOT ((((vt0.c0)GLOB(rt0.c3)) IN ())))) GROUP BY vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1 UNION SELECT vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1 FROM t0, v0 INNER JOIN vt0 ON -1.661766957E9 INNER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c1 THEN rt0.c1 END)*(CASE WHEN rt0.c2 THEN rt0.c4 END)) WHERE ((((((vt0.c0)GLOB(rt0.c3)) IN ())) ISNULL)) GROUP BY vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1;
SELECT vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1 FROM t0, v0 INNER JOIN vt0 ON -1.661766957E9 INNER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c1 THEN rt0.c1 END)*(CASE WHEN rt0.c2 THEN rt0.c4 END)) GROUP BY vt0.c1, rt0.c0, v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0, vt0.c0, v0.c1;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING MAX(((((((((((((v0.c1)OR(v0.c0)))OR(COUNT(SUM(v0.c1)))))OR(MIN(NULL))))OR(v0.c0)))AND(GROUP_CONCAT(v0.c2))))AND(COUNT(*)))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (MAX(((((((((((((v0.c1)OR(v0.c0)))OR(COUNT(SUM(v0.c1)))))OR(MIN(NULL))))OR(v0.c0)))AND(GROUP_CONCAT(v0.c2))))AND(COUNT(*)))))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((MAX(((((((((((((v0.c1)OR(v0.c0)))OR(COUNT(SUM(v0.c1)))))OR(MIN(NULL))))OR(v0.c0)))AND(GROUP_CONCAT(v0.c2))))AND(COUNT(*))))) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c1 FROM vt0, v0, rt0;
SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c1 FROM vt0, v0, rt0 WHERE (((((((vt0.c0)AND(rt0.c1)))AND('-1661766957')))&(vt0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c1 FROM vt0, v0, rt0 WHERE ((NOT (((((((vt0.c0)AND(rt0.c1)))AND('-1661766957')))&(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c1 FROM vt0, v0, rt0 WHERE (((((((((vt0.c0)AND(rt0.c1)))AND('-1661766957')))&(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c1 COLLATE BINARY) NOT NULL)))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE (((((vt0.c1 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c2, v0.c1, t0.c0, vt0.c1 FROM v0, t0, rt0, vt0 NOT INDEXED GROUP BY v0.c2, v0.c1, t0.c0, vt0.c1;
SELECT v0.c2, v0.c1, t0.c0, vt0.c1 FROM v0, t0, rt0, vt0 WHERE (CASE ((rt0.c2)OR(rt0.c2))  WHEN json_insert(rt0.c1, v0.c0, t0.c0) THEN ((rt0.c0)&(v0.c0)) ELSE (((v0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) GROUP BY v0.c2, v0.c1, t0.c0, vt0.c1 UNION SELECT v0.c2, v0.c1, t0.c0, vt0.c1 FROM v0, t0, rt0, vt0 WHERE ((NOT (CASE ((rt0.c2)OR(rt0.c2))  WHEN json_insert(rt0.c1, v0.c0, t0.c0) THEN ((rt0.c0)&(v0.c0)) ELSE (((v0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) END))) GROUP BY v0.c2, v0.c1, t0.c0, vt0.c1 UNION SELECT ALL v0.c2, v0.c1, t0.c0, vt0.c1 FROM v0, t0, rt0, vt0 WHERE (((CASE ((rt0.c2)OR(rt0.c2))  WHEN json_insert(rt0.c1, v0.c0, t0.c0) THEN ((rt0.c0)&(v0.c0)) ELSE (((v0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) ISNULL)) GROUP BY v0.c2, v0.c1, t0.c0, vt0.c1;
SELECT ALL v0.c2, v0.c1, t0.c0, vt0.c1 FROM v0, t0, rt0, vt0 NOT INDEXED GROUP BY v0.c2, v0.c1, t0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((CAST(vt0.c0 AS REAL))AND(CAST(vt0.c1 AS REAL))))AND((vt0.c1 IN ()))))OR(CAST(vt0.c1 AS INTEGER))))AND((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS REAL))AND(CAST(vt0.c1 AS REAL))))AND((vt0.c1 IN ()))))OR(CAST(vt0.c1 AS INTEGER))))AND((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((CAST(vt0.c0 AS REAL))AND(CAST(vt0.c1 AS REAL))))AND((vt0.c1 IN ()))))OR(CAST(vt0.c1 AS INTEGER))))AND((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END THEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)) WHEN rt0.c2 THEN ')k' WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE BINARY ELSE UNLIKELY(DISTINCT rt0.c2) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END THEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)) WHEN rt0.c2 THEN ')k' WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE BINARY ELSE UNLIKELY(DISTINCT rt0.c2) END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END THEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)) WHEN rt0.c2 THEN ')k' WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE BINARY ELSE UNLIKELY(DISTINCT rt0.c2) END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c0 HAVING ((load_extension(TOTAL(vt0.c0), SUM(MIN(AVG(COUNT(*))))))>(((((((((vt0.c1)OR(t0.c0)))OR(GROUP_CONCAT(vt0.c0))))AND(AVG(vt0.c0))))AND(vt0.c0)))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (((load_extension(TOTAL(vt0.c0), SUM(MIN(AVG(COUNT(*))))))>(((((((((vt0.c1)OR(t0.c0)))OR(GROUP_CONCAT(vt0.c0))))AND(AVG(vt0.c0))))AND(vt0.c0)))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c0 HAVING ((((load_extension(TOTAL(vt0.c0), SUM(MIN(AVG(COUNT(*))))))>(((((((((vt0.c1)OR(t0.c0)))OR(GROUP_CONCAT(vt0.c0))))AND(AVG(vt0.c0))))AND(vt0.c0))))) ISNULL);
SELECT ALL * FROM rt0, vt0, t0, v0;
SELECT * FROM rt0, vt0, t0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))-('1187761465'))) UNION ALL SELECT * FROM rt0, vt0, t0, v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))-('1187761465'))))) UNION ALL SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))-('1187761465'))) ISNULL));
SELECT ALL * FROM rt0, vt0, t0, v0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((((rt0.c3)AND(rt0.c4)))AND(NULL))) BETWEEN (((rt0.c2)IS(rt0.c4))) AND (((t0.c0)<<(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((((rt0.c3)AND(rt0.c4)))AND(NULL))) BETWEEN (((rt0.c2)IS(rt0.c4))) AND (((t0.c0)<<(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((((rt0.c3)AND(rt0.c4)))AND(NULL))) BETWEEN (((rt0.c2)IS(rt0.c4))) AND (((t0.c0)<<(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c3 FROM vt0, rt0 NOT INDEXED, t0, v0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, rt0, t0, v0 WHERE ((((((x'' IN ()))OR(LTRIM(rt0.c4))))OR(CASE t0.c0  WHEN v0.c2 THEN rt0.c2 WHEN t0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 END))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0, rt0, t0, v0 WHERE ((NOT ((((((x'' IN ()))OR(LTRIM(rt0.c4))))OR(CASE t0.c0  WHEN v0.c2 THEN rt0.c2 WHEN t0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 END))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0, rt0, t0, v0 WHERE ((((((((x'' IN ()))OR(LTRIM(rt0.c4))))OR(CASE t0.c0  WHEN v0.c2 THEN rt0.c2 WHEN t0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 END))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, rt0 NOT INDEXED, t0, v0 GROUP BY rt0.c3;
SELECT ALL vt0.c1, v0.c1, v0.c2, t0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CAST(json_valid(v0.c1) AS INTEGER) INNER JOIN vt0 ON v0.c1 GROUP BY vt0.c1, v0.c1, v0.c2, t0.c0, vt0.c0;
SELECT vt0.c1, v0.c1, v0.c2, t0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CAST(json_valid(v0.c1) AS INTEGER) INNER JOIN vt0 ON v0.c1 GROUP BY vt0.c1, v0.c1, v0.c2, t0.c0, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*)))LIKE(COUNT(*))) UNION ALL SELECT ALL vt0.c1, v0.c1, v0.c2, t0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CAST(json_valid(v0.c1) AS INTEGER) INNER JOIN vt0 ON v0.c1 GROUP BY vt0.c1, v0.c1, v0.c2, t0.c0, vt0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(*)))LIKE(COUNT(*))))) UNION ALL SELECT vt0.c1, v0.c1, v0.c2, t0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CAST(json_valid(v0.c1) AS INTEGER) INNER JOIN vt0 ON v0.c1 GROUP BY vt0.c1, v0.c1, v0.c2, t0.c0, vt0.c0 HAVING ((((GROUP_CONCAT(COUNT(*)))LIKE(COUNT(*)))) ISNULL);
SELECT ALL t0.c0, v0.c2 FROM t0, v0;
SELECT t0.c0, v0.c2 FROM t0, v0 WHERE (0.13513333276313588) UNION ALL SELECT ALL t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (0.13513333276313588))) UNION ALL SELECT ALL t0.c0, v0.c2 FROM t0, v0 WHERE (((0.13513333276313588) ISNULL));
SELECT ALL t0.c0, v0.c2 FROM t0, v0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL WHERE (v0.c0) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL;
SELECT ALL vt0.c0, v0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c1, v0.c0;
SELECT vt0.c0, v0.c1, v0.c0 FROM v0, vt0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN x'18c2' THEN vt0.c1 END) NOT BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) AND (LOWER(DISTINCT '')))) GROUP BY vt0.c0, v0.c1, v0.c0 UNION SELECT ALL vt0.c0, v0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT (((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN x'18c2' THEN vt0.c1 END) NOT BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) AND (LOWER(DISTINCT '')))))) GROUP BY vt0.c0, v0.c1, v0.c0 UNION SELECT vt0.c0, v0.c1, v0.c0 FROM v0, vt0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN x'18c2' THEN vt0.c1 END) NOT BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) AND (LOWER(DISTINCT '')))) ISNULL)) GROUP BY vt0.c0, v0.c1, v0.c0;
SELECT ALL vt0.c0, v0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c1, v0.c0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT * FROM rt0 INNER JOIN v0 ON ((((0.2690196565553107)=(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)<>('699136854'))));
SELECT * FROM rt0 INNER JOIN v0 ON ((((0.2690196565553107)=(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)<>('699136854')))) WHERE ((~ (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN v0.c2 THEN x'' WHEN rt0.c1 THEN 0x29abfb56 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON ((((0.2690196565553107)=(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)!=('699136854')))) WHERE ((NOT ((~ (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN v0.c2 THEN x'' WHEN rt0.c1 THEN 0x29abfb56 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END))))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON ((((0.2690196565553107)=(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)!=('699136854')))) WHERE ((((~ (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN v0.c2 THEN x'' WHEN rt0.c1 THEN 0X29abfb56 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) ISNULL));
SELECT * FROM rt0 INNER JOIN v0 ON ((((0.2690196565553107)=(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)<>('699136854'))));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (UPPER(((v0.c2)>>(v0.c2)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (UPPER(((v0.c2)>>(v0.c2)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((UPPER(((v0.c2)>>(v0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((CASE rt0.c4  WHEN 0.7086687111525929 THEN v0.c2 END IN ())) GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((NOT ((CASE rt0.c4  WHEN 0.7086687111525929 THEN v0.c2 END IN ())))) GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((CASE rt0.c4  WHEN 0.7086687111525929 THEN v0.c2 END IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c1, v0.c2, rt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(CAST(AVG(MAX(GROUP_CONCAT(vt0.c0))) AS TEXT)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(CAST(AVG(MAX(GROUP_CONCAT(vt0.c0))) AS TEXT)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(CAST(AVG(MAX(GROUP_CONCAT(vt0.c0))) AS TEXT))) ISNULL);
SELECT * FROM t0, rt0 NATURAL JOIN v0;
SELECT * FROM t0, rt0 NATURAL JOIN v0 WHERE (((rt0.c4) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c2)))) AND ((((rt0.c3))==((rt0.c0)))))) UNION ALL SELECT * FROM t0, rt0 NATURAL JOIN v0 WHERE ((NOT (((rt0.c4) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c2)))) AND ((((rt0.c3))==((rt0.c0)))))))) UNION ALL SELECT ALL * FROM t0, rt0 NATURAL JOIN v0 WHERE (((((rt0.c4) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c2)))) AND ((((rt0.c3))=((rt0.c0)))))) ISNULL));
SELECT * FROM t0, rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, v0.c1, t0.c0, rt0.c1 FROM v0, vt0 LEFT OUTER JOIN rt0 ON CAST(CASE x'3fd4'  WHEN NULL THEN vt0.c0 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '~*{}' WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END AS TEXT) INNER JOIN t0 ON CAST(((v0.c1) BETWEEN (t0.c0) AND (NULL)) AS BLOB);
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, v0.c1, t0.c0, rt0.c1 FROM v0, vt0 LEFT OUTER JOIN rt0 ON CAST(CASE x'3fd4'  WHEN NULL THEN vt0.c0 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '~*{}' WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END AS TEXT) INNER JOIN t0 ON CAST(((v0.c1) BETWEEN (t0.c0) AND (NULL)) AS BLOB) WHERE (((((((t0.c0) NOT NULL))AND(v0.c0)))AND(((rt0.c2) ISNULL)))) UNION SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, v0.c1, t0.c0, rt0.c1 FROM v0, vt0 LEFT OUTER JOIN rt0 ON CAST(CASE x'3fd4'  WHEN NULL THEN vt0.c0 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '~*{}' WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END AS TEXT) INNER JOIN t0 ON CAST(((v0.c1) BETWEEN (t0.c0) AND (NULL)) AS BLOB) WHERE ((NOT (((((((t0.c0) NOT NULL))AND(v0.c0)))AND(((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, v0.c1, t0.c0, rt0.c1 FROM v0, vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON CAST(CASE x'3fd4'  WHEN NULL THEN vt0.c0 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '~*{}' WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END AS TEXT) INNER JOIN t0 ON CAST(((v0.c1) BETWEEN (t0.c0) AND (NULL)) AS BLOB) WHERE (((((((((t0.c0) NOT NULL))AND(v0.c0)))AND(((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, v0.c1, t0.c0, rt0.c1 FROM v0, vt0 LEFT OUTER JOIN rt0 ON CAST(CASE x'3fd4'  WHEN NULL THEN vt0.c0 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '~*{}' WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END AS TEXT) INNER JOIN t0 ON CAST(((v0.c1) BETWEEN (t0.c0) AND (NULL)) AS BLOB);
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE (NULL) GROUP BY t0.c0, vt0.c1, vt0.c0 UNION SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (NULL))) GROUP BY t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1;
SELECT vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1 HAVING ((SUM(v0.c2)) NOTNULL) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1 HAVING (NOT (((SUM(v0.c2)) NOTNULL))) UNION ALL SELECT vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1 HAVING ((((SUM(v0.c2)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1;
SELECT vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1 HAVING ((SUM(v0.c2)) NOTNULL) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1 HAVING (NOT (((SUM(v0.c2)) NOTNULL))) UNION ALL SELECT vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1 HAVING ((((SUM(v0.c2)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0, t0.c0, v0.c2, vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, t0.c0, v0.c2, vt0.c1;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((vt0.c1 IN ())) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c1 IN ())))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM t0, rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM t0, rt0, vt0 WHERE (json(vt0.c1) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM t0, rt0, vt0 WHERE ((NOT (json(vt0.c1) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM t0, rt0, vt0 WHERE (((json(vt0.c1) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0, v0 GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3;
SELECT v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0, v0 WHERE (CAST(((0X2d7f5c91) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0, v0 WHERE ((NOT (CAST(((0X2d7f5c91) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)))) GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0, v0 WHERE (((CAST(((0x2d7f5c91) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0, v0 GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c0, v0.c2, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, t0.c0, rt0.c0, v0.c0, v0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, t0.c0, rt0.c0, v0.c0, v0.c2;
SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c3, t0.c0, rt0.c0, v0.c0, v0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, t0.c0, rt0.c0, v0.c0, v0.c2 HAVING COUNT(GROUP_CONCAT(MIN(rt0.c3))) UNION ALL SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c3, t0.c0, rt0.c0, v0.c0, v0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, t0.c0, rt0.c0, v0.c0, v0.c2 HAVING (NOT (COUNT(GROUP_CONCAT(MIN(rt0.c3))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, t0.c0, rt0.c0, v0.c0, v0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, t0.c0, rt0.c0, v0.c0, v0.c2 HAVING ((COUNT(GROUP_CONCAT(MIN(rt0.c3)))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, vt0.c1 FROM rt0, t0, vt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE ((((vt0.c0 IN (rt0.c3, rt0.c2)))>=(PRINTF(vt0.c1, rt0.c3, rt0.c0, vt0.c0, rt0.c4)))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT ((((vt0.c0 IN (rt0.c3, rt0.c2)))>=(PRINTF(vt0.c1, rt0.c3, rt0.c0, vt0.c0, rt0.c4)))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE ((((((vt0.c0 IN (rt0.c3, rt0.c2)))>=(PRINTF(vt0.c1, rt0.c3, rt0.c0, vt0.c0, rt0.c4)))) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, vt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c4, v0.c1, t0.c0, rt0.c0, rt0.c3, v0.c2 FROM vt0, v0, rt0, t0;
SELECT DISTINCT rt0.c4, v0.c1, t0.c0, rt0.c0, rt0.c3, v0.c2 FROM vt0, v0, rt0, t0 WHERE (2076240368) UNION SELECT DISTINCT rt0.c4, v0.c1, t0.c0, rt0.c0, rt0.c3, v0.c2 FROM vt0, v0, rt0, t0 WHERE ((NOT (2076240368))) UNION SELECT DISTINCT rt0.c4, v0.c1, t0.c0, rt0.c0, rt0.c3, v0.c2 FROM vt0, v0, rt0, t0 WHERE (((2076240368) ISNULL));
SELECT DISTINCT rt0.c4, v0.c1, t0.c0, rt0.c0, rt0.c3, v0.c2 FROM vt0, v0, rt0, t0;
SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON ('841945980' IN ()) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2;
SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON ('841945980' IN ()) WHERE (((((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))OR(v0.c2)))&((rt0.c1 IN (v0.c2, rt0.c2))))) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2 UNION SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON ('841945980' IN ()) WHERE ((NOT (((((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))OR(v0.c2)))&((rt0.c1 IN (v0.c2, rt0.c2))))))) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2 UNION SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON ('841945980' IN ()) WHERE (((((((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))OR(v0.c2)))&((rt0.c1 IN (v0.c2, rt0.c2))))) ISNULL)) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2;
SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON ('841945980' IN ()) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0, rt0.c3, vt0.c0, vt0.c1, v0.c2;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, v0, vt0, rt0;
SELECT * FROM t0, v0, vt0, rt0 WHERE (((((rt0.c1)&(rt0.c4))) IS TRUE)) UNION ALL SELECT ALL * FROM t0, v0, vt0, rt0 WHERE ((NOT (((((rt0.c1)&(rt0.c4))) IS TRUE)))) UNION ALL SELECT * FROM t0, v0, vt0, rt0 WHERE (((((((rt0.c1)&(rt0.c4))) IS TRUE)) ISNULL));
SELECT ALL * FROM t0, v0, vt0, rt0;
SELECT DISTINCT v0.c2, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE (((v0.c2)GLOB(((((v0.c2)AND(v0.c2)))OR(0.6709614096616752))))) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE ((NOT (((v0.c2)GLOB(((((v0.c2)AND(v0.c2)))OR(0.6709614096616752))))))) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE (((((v0.c2)GLOB(((((v0.c2)AND(v0.c2)))OR(0.6709614096616752))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0 FROM v0;
SELECT v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1;
SELECT v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1 FROM v0, rt0, vt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((v0.c1) NOT NULL))))) GROUP BY v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1 UNION SELECT v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1 FROM v0, rt0, vt0, t0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((v0.c1) NOT NULL))))))) GROUP BY v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1 UNION SELECT v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1 FROM v0, rt0, vt0, t0 WHERE ((((((vt0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((v0.c1) NOT NULL))))) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1;
SELECT v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c2, vt0.c1, rt0.c4, vt0.c0, v0.c1;
SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1;
SELECT v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 HAVING CAST((GROUP_CONCAT(SUM(v0.c0)) IN ()) AS INTEGER) UNION ALL SELECT v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 HAVING (NOT (CAST((GROUP_CONCAT(SUM(v0.c0)) IN ()) AS INTEGER))) UNION ALL SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 HAVING ((CAST((GROUP_CONCAT(SUM(v0.c0)) IN ()) AS INTEGER)) ISNULL);
SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1;
SELECT v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 HAVING CAST((GROUP_CONCAT(SUM(v0.c0)) IN ()) AS INTEGER) UNION ALL SELECT v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 HAVING (NOT (CAST((GROUP_CONCAT(SUM(v0.c0)) IN ()) AS INTEGER))) UNION ALL SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 HAVING ((CAST((GROUP_CONCAT(SUM(v0.c0)) IN ()) AS INTEGER)) ISNULL);
SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4, v0.c1;
SELECT * FROM v0, rt0, t0;
SELECT ALL * FROM v0, rt0, t0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY) UNION ALL SELECT * FROM v0, rt0, t0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, rt0, t0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY) ISNULL));
SELECT * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((v0.c2) NOTNULL))AND(CAST(NULL AS BLOB))))AND(((v0.c1) BETWEEN (t0.c0) AND (v0.c1))));
SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((v0.c2) NOTNULL))AND(CAST(NULL AS BLOB))))AND(((v0.c1) BETWEEN (t0.c0) AND (v0.c1)))) WHERE (((CAST(t0.c0 AS BLOB))<>('0.0'))) UNION SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((v0.c2) NOTNULL))AND(CAST(NULL AS BLOB))))AND(((v0.c1) BETWEEN (t0.c0) AND (v0.c1)))) WHERE ((NOT (((CAST(t0.c0 AS BLOB))<>('0.0'))))) UNION SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((v0.c2) NOTNULL))AND(CAST(NULL AS BLOB))))AND(((v0.c1) BETWEEN (t0.c0) AND (v0.c1)))) WHERE (((((CAST(t0.c0 AS BLOB))<>('0.0'))) ISNULL));
SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((v0.c2) NOTNULL))AND(CAST(NULL AS BLOB))))AND(((v0.c1) BETWEEN (t0.c0) AND (v0.c1))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN ('u') AND (vt0.c0)))<<((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, NULL, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN ('u') AND (vt0.c0)))<<((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, NULL, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN ('u') AND (vt0.c0)))<<((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, NULL, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(MAX(AVG(COUNT(t0.c0))))) ISNULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SUM(MAX(AVG(COUNT(t0.c0))))) ISNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(MAX(AVG(COUNT(t0.c0))))) ISNULL)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)<(vt0.c1)) THEN 0x5451e0e2 ELSE ((vt0.c1)IS NOT(vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c1)<(vt0.c1)) THEN 0x5451e0e2 ELSE ((vt0.c1)IS NOT(vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN ((vt0.c1)<(vt0.c1)) THEN 0x5451e0e2 ELSE ((vt0.c1)IS NOT(vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((((((((((((((((rt0.c1)AND(rt0.c3)))OR(0.6482382390825072)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2 COLLATE RTRIM)))OR(((vt0.c1)*(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT (((((((((((((((((rt0.c1)AND(rt0.c3)))OR(0.6482382390825072)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2 COLLATE RTRIM)))OR(((vt0.c1)*(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((((((((((((((((((rt0.c1)AND(rt0.c3)))OR(0.6482382390825072)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2 COLLATE RTRIM)))OR(((vt0.c1)*(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT ALL v0.c0, rt0.c1 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM t0, rt0, v0, vt0 WHERE ((((((+ (NULL)))AND(((rt0.c3)IS(rt0.c1)))))AND((NOT (v0.c2))))) GROUP BY v0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c1 FROM t0, rt0, v0, vt0 WHERE ((NOT ((((((+ (NULL)))AND(((rt0.c3)IS(rt0.c1)))))AND((NOT (v0.c2))))))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM t0, rt0, v0, vt0 WHERE ((((((((+ (NULL)))AND(((rt0.c3)IS(rt0.c1)))))AND((NOT (v0.c2))))) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, t0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, rt0.c0, t0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3, rt0.c4;
SELECT v0.c0, rt0.c0, t0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, rt0.c0, t0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3, rt0.c4 HAVING MAX(CASE WHEN COUNT(*) THEN '	6郓,턍l䪓X+' WHEN GROUP_CONCAT(rt0.c2) THEN GROUP_CONCAT(rt0.c3) WHEN GROUP_CONCAT(AVG(MAX(vt0.c0))) THEN rt0.c2 WHEN t0.c0 THEN v0.c2 WHEN '' THEN v0.c1 ELSE MAX(rt0.c4) END) UNION ALL SELECT ALL v0.c0, rt0.c0, t0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, rt0.c0, t0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (MAX(CASE WHEN COUNT(*) THEN '	6郓,턍l䪓X+' WHEN GROUP_CONCAT(rt0.c2) THEN GROUP_CONCAT(rt0.c3) WHEN GROUP_CONCAT(AVG(MAX(vt0.c0))) THEN rt0.c2 WHEN t0.c0 THEN v0.c2 WHEN '' THEN v0.c1 ELSE MAX(rt0.c4) END))) UNION ALL SELECT v0.c0, rt0.c0, t0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, rt0.c0, t0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3, rt0.c4 HAVING ((MAX(CASE WHEN COUNT(*) THEN '	6郓,턍l䪓X+' WHEN GROUP_CONCAT(rt0.c2) THEN GROUP_CONCAT(rt0.c3) WHEN GROUP_CONCAT(AVG(MAX(vt0.c0))) THEN rt0.c2 WHEN t0.c0 THEN v0.c2 WHEN '' THEN v0.c1 ELSE MAX(rt0.c4) END)) ISNULL);
SELECT SUM(HEX((~ (rt0.c2)))) FROM rt0, vt0, t0, v0 ORDER BY JULIANDAY(((v0.c1)OR('699136854')), CAST('1708792418' AS NUMERIC), ((NULL)>>(rt0.c0)));
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c1))>((vt0.c1))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c1))>((vt0.c1))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c1))>((vt0.c1))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c2 AS BLOB)) BETWEEN ((('8xx#iglv')!=(v0.c1))) AND (((v0.c1)OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CAST(v0.c2 AS BLOB)) BETWEEN ((('8xx#iglv')<>(v0.c1))) AND (((v0.c1)OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CAST(v0.c2 AS BLOB)) BETWEEN ((('8xx#iglv')<>(v0.c1))) AND (((v0.c1)OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c2, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY v0.c2, rt0.c4;
SELECT ALL v0.c2, rt0.c4 FROM t0, v0, rt0, vt0 WHERE (((((CAST(v0.c2 AS TEXT))AND(ABS(t0.c0))))OR(((((((((v0.c0)AND(0.6667564334788981)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0))))) GROUP BY v0.c2, rt0.c4 UNION SELECT v0.c2, rt0.c4 FROM t0, v0, rt0, vt0 WHERE ((NOT (((((CAST(v0.c2 AS TEXT))AND(ABS(t0.c0))))OR(((((((((v0.c0)AND(0.6667564334788981)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0))))))) GROUP BY v0.c2, rt0.c4 UNION SELECT ALL v0.c2, rt0.c4 FROM t0, v0, rt0, vt0 WHERE (((((((CAST(v0.c2 AS TEXT))AND(ABS(t0.c0))))OR(((((((((v0.c0)AND(0.6667564334788981)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0))))) ISNULL)) GROUP BY v0.c2, rt0.c4;
SELECT ALL v0.c2, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY v0.c2, rt0.c4;
SELECT rt0.c0, t0.c0 FROM v0 NOT INDEXED, t0, rt0, vt0 GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c0, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, t0.c0 HAVING COUNT(MIN(SUM(SUM(0.6667564334788981)))) UNION ALL SELECT rt0.c0, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, t0.c0 HAVING (NOT (COUNT(MIN(SUM(SUM(0.6667564334788981)))))) UNION ALL SELECT rt0.c0, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, t0.c0 HAVING ((COUNT(MIN(SUM(SUM(0.6667564334788981))))) ISNULL);
SELECT rt0.c2 FROM t0, vt0, rt0;
SELECT ALL rt0.c2 FROM t0, vt0, rt0 WHERE (CAST(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS NUMERIC)) UNION ALL SELECT rt0.c2 FROM t0, vt0, rt0 WHERE ((NOT (CAST(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2 FROM t0, vt0, rt0 WHERE (((CAST(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS NUMERIC)) ISNULL));
SELECT rt0.c2 FROM t0, vt0, rt0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT ALL t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((1147805028, v0.c0, v0.c0, -1.056297679E9, ((v0.c0) IS FALSE)))<>((((((v0.c2)OR(v0.c1)))OR(v0.c2)), ((((((((v0.c2)OR(v0.c0)))AND('672074562')))OR(v0.c1)))OR(v0.c2)), v0.c1 COLLATE BINARY, ((v0.c0) IS FALSE), (('-9223372036854775808') NOT BETWEEN (v0.c1) AND (v0.c2))))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((1147805028, v0.c0, v0.c0, -1.056297679E9, ((v0.c0) IS FALSE)))!=((((((v0.c2)OR(v0.c1)))OR(v0.c2)), ((((((((v0.c2)OR(v0.c0)))AND('672074562')))OR(v0.c1)))OR(v0.c2)), v0.c1 COLLATE BINARY, ((v0.c0) IS FALSE), (('-9223372036854775808') NOT BETWEEN (v0.c1) AND (v0.c2))))) WHERE (((v0.c1 COLLATE BINARY) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN t0 ON (((1147805028, v0.c0, v0.c0, -1.056297679E9, ((v0.c0) IS FALSE)))!=((((((v0.c2)OR(v0.c1)))OR(v0.c2)), ((((((((v0.c2)OR(v0.c0)))AND('672074562')))OR(v0.c1)))OR(v0.c2)), v0.c1 COLLATE BINARY, ((v0.c0) IS FALSE), (('-9223372036854775808') NOT BETWEEN (v0.c1) AND (v0.c2))))) WHERE ((NOT (((v0.c1 COLLATE BINARY) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((1147805028, v0.c0, v0.c0, -1.056297679E9, ((v0.c0) IS FALSE)))!=((((((v0.c2)OR(v0.c1)))OR(v0.c2)), ((((((((v0.c2)OR(v0.c0)))AND('672074562')))OR(v0.c1)))OR(v0.c2)), v0.c1 COLLATE BINARY, ((v0.c0) IS FALSE), (('-9223372036854775808') NOT BETWEEN (v0.c1) AND (v0.c2))))) WHERE (((((v0.c1 COLLATE BINARY) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((1147805028, v0.c0, v0.c0, -1.056297679E9, ((v0.c0) IS FALSE)))<>((((((v0.c2)OR(v0.c1)))OR(v0.c2)), ((((((((v0.c2)OR(v0.c0)))AND('672074562')))OR(v0.c1)))OR(v0.c2)), v0.c1 COLLATE BINARY, ((v0.c0) IS FALSE), (('-9223372036854775808') NOT BETWEEN (v0.c1) AND (v0.c2))))) GROUP BY t0.c0;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING SUM(SUM(v0.c2)) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (SUM(SUM(v0.c2)))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((SUM(SUM(v0.c2))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (LOWER(')s')) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (LOWER(')s')))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((LOWER(')s')) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2)&(rt0.c3)) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)&(rt0.c3)) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2)&(rt0.c3)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((ABS(t0.c0))IS(vt0.c0))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((ABS(t0.c0))IS(vt0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((ABS(t0.c0))IS(vt0.c0))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((vt0.c0, MAX(vt0.c0), MAX(MAX(COUNT(vt0.c1))), vt0.c1, SUM(AVG(SUM(COUNT(vt0.c0)))))) NOT BETWEEN ((((COUNT(*))GLOB(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))), GROUP_CONCAT(COUNT(vt0.c0)), AVG(NULL) COLLATE NOCASE, (- (vt0.c1)), SUM(COUNT(GROUP_CONCAT(vt0.c1))))) AND ((SUM(COUNT(vt0.c1)), TOTAL(GROUP_CONCAT(MAX(vt0.c0))), MAX(MIN(NULL)), ((GROUP_CONCAT(AVG(MAX(vt0.c1)))) NOT NULL), TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((vt0.c0, MAX(vt0.c0), MAX(MAX(COUNT(vt0.c1))), vt0.c1, SUM(AVG(SUM(COUNT(vt0.c0)))))) NOT BETWEEN ((((COUNT(*))GLOB(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))), GROUP_CONCAT(COUNT(vt0.c0)), AVG(NULL) COLLATE NOCASE, (- (vt0.c1)), SUM(COUNT(GROUP_CONCAT(vt0.c1))))) AND ((SUM(COUNT(vt0.c1)), TOTAL(GROUP_CONCAT(MAX(vt0.c0))), MAX(MIN(NULL)), ((GROUP_CONCAT(AVG(MAX(vt0.c1)))) NOT NULL), TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((vt0.c0, MAX(vt0.c0), MAX(MAX(COUNT(vt0.c1))), vt0.c1, SUM(AVG(SUM(COUNT(vt0.c0)))))) NOT BETWEEN ((((COUNT(*))GLOB(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))), GROUP_CONCAT(COUNT(vt0.c0)), AVG(NULL) COLLATE NOCASE, (- (vt0.c1)), SUM(COUNT(GROUP_CONCAT(vt0.c1))))) AND ((SUM(COUNT(vt0.c1)), TOTAL(GROUP_CONCAT(MAX(vt0.c0))), MAX(MIN(NULL)), ((GROUP_CONCAT(AVG(MAX(vt0.c1)))) NOT NULL), TOTAL(vt0.c0))))) ISNULL);
SELECT v0.c1 FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN t0 ON ((ABS(DISTINCT vt0.c0))<(((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))));
SELECT v0.c1 FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN t0 ON ((ABS(DISTINCT vt0.c0))<(((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))) WHERE (v0.c1) UNION ALL SELECT v0.c1 FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN t0 ON ((ABS(DISTINCT vt0.c0))<(((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))) WHERE ((NOT (v0.c1))) UNION ALL SELECT v0.c1 FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN t0 ON ((ABS(DISTINCT vt0.c0))<(((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))) WHERE (((v0.c1) ISNULL));
SELECT v0.c1 FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN t0 ON ((ABS(DISTINCT vt0.c0))<(((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))));
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((CAST(v0.c1 AS INTEGER))&(v0.c1))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((CAST(v0.c1 AS INTEGER))&(v0.c1))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((CAST(v0.c1 AS INTEGER))&(v0.c1))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c3)>=(rt0.c4)) IN ())) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c3)>=(rt0.c4)) IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c3)>=(rt0.c4)) IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.c1;
SELECT ALL rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.c1 HAVING ((((((((COUNT(rt0.c4))AND(((((((((vt0.c0)OR(GROUP_CONCAT(vt0.c0))))AND(rt0.c3)))OR(6.99136854E8)))AND(rt0.c1)))))OR(SUM(SUM(NULL)))))AND(SUM(COUNT(*)))))AND(CAST(rt0.c1 AS INTEGER))) UNION ALL SELECT rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.c1 HAVING (NOT (((((((((COUNT(rt0.c4))AND(((((((((vt0.c0)OR(GROUP_CONCAT(vt0.c0))))AND(rt0.c3)))OR(6.99136854E8)))AND(rt0.c1)))))OR(SUM(SUM(NULL)))))AND(SUM(COUNT(*)))))AND(CAST(rt0.c1 AS INTEGER))))) UNION ALL SELECT rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.c1 HAVING ((((((((((COUNT(rt0.c4))AND(((((((((vt0.c0)OR(GROUP_CONCAT(vt0.c0))))AND(rt0.c3)))OR(6.99136854E8)))AND(rt0.c1)))))OR(SUM(SUM(NULL)))))AND(SUM(COUNT(*)))))AND(CAST(rt0.c1 AS INTEGER)))) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt0.c3 FROM t0, rt0;
SELECT rt0.c1, t0.c0, rt0.c3 FROM t0, rt0 WHERE (CAST(rt0.c3 AS BLOB)) UNION ALL SELECT rt0.c1, t0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (CAST(rt0.c3 AS BLOB)))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c3 FROM t0, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) ISNULL));
SELECT ALL rt0.c1, t0.c0, rt0.c3 FROM t0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))<=(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))<=(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))<=(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1 FROM t0, v0 GROUP BY v0.c1;
SELECT v0.c1 FROM t0, v0 WHERE (((((((((((t0.c0)AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS TRUE)) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM t0, v0 WHERE ((NOT (((((((((((t0.c0)AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS TRUE)))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM t0, v0 WHERE (((((((((((((t0.c0)AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS TRUE)) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM t0, v0 GROUP BY v0.c1;
SELECT ALL v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0;
SELECT v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 HAVING AVG((rt0.c3 IN ())) UNION ALL SELECT v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 HAVING (NOT (AVG((rt0.c3 IN ())))) UNION ALL SELECT ALL v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 HAVING ((AVG((rt0.c3 IN ()))) ISNULL);
SELECT ALL v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0;
SELECT v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 HAVING AVG((rt0.c3 IN ())) UNION ALL SELECT v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 HAVING (NOT (AVG((rt0.c3 IN ())))) UNION ALL SELECT ALL v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 HAVING ((AVG((rt0.c3 IN ()))) ISNULL);
SELECT ALL v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c1, vt0.c0, v0.c0;
SELECT ALL rt0.c4, v0.c2, v0.c1, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.c1 FROM vt0, rt0, v0 FULL OUTER JOIN t0 ON rt0.c3;
SELECT rt0.c4, v0.c2, v0.c1, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.c1 FROM vt0, rt0, v0 FULL OUTER JOIN t0 ON rt0.c3 WHERE (((((rt0.c3) NOTNULL))/(((rt0.c1)<=(rt0.c2))))) UNION ALL SELECT rt0.c4, v0.c2, v0.c1, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.c1 FROM vt0, rt0, v0 FULL OUTER JOIN t0 ON rt0.c3 WHERE ((NOT (((((rt0.c3) NOTNULL))/(((rt0.c1)<=(rt0.c2))))))) UNION ALL SELECT ALL rt0.c4, v0.c2, v0.c1, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.c1 FROM vt0, rt0, v0 FULL OUTER JOIN t0 ON rt0.c3 WHERE (((((((rt0.c3) NOTNULL))/(((rt0.c1)<=(rt0.c2))))) ISNULL));
SELECT ALL rt0.c4, v0.c2, v0.c1, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.c1 FROM vt0, rt0, v0 FULL OUTER JOIN t0 ON rt0.c3;
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (CAST(((rt0.c4)<=(rt0.c1)) AS INTEGER)) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c4)<=(rt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CAST(((rt0.c4)<=(rt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT v0.c1, t0.c0, v0.c0 FROM vt0, v0 INNER JOIN t0 ON ((((v0.c1)||(v0.c1))) IS FALSE) GROUP BY v0.c1, t0.c0, v0.c0;
SELECT ALL v0.c1, t0.c0, v0.c0 FROM vt0, v0 INNER JOIN t0 ON ((((v0.c1)||(v0.c1))) IS FALSE) WHERE (CAST((- (vt0.c1)) AS TEXT)) GROUP BY v0.c1, t0.c0, v0.c0 UNION SELECT ALL v0.c1, t0.c0, v0.c0 FROM vt0, v0 INNER JOIN t0 ON ((((v0.c1)||(v0.c1))) IS FALSE) WHERE ((NOT (CAST((- (vt0.c1)) AS TEXT)))) GROUP BY v0.c1, t0.c0, v0.c0 UNION SELECT ALL v0.c1, t0.c0, v0.c0 FROM vt0, v0 INNER JOIN t0 ON ((((v0.c1)||(v0.c1))) IS FALSE) WHERE (((CAST((- (vt0.c1)) AS TEXT)) ISNULL)) GROUP BY v0.c1, t0.c0, v0.c0;
SELECT v0.c1, t0.c0, v0.c0 FROM vt0, v0 INNER JOIN t0 ON ((((v0.c1)||(v0.c1))) IS FALSE) GROUP BY v0.c1, t0.c0, v0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING SUM(GROUP_CONCAT('^]')) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (SUM(GROUP_CONCAT('^]')))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING ((SUM(GROUP_CONCAT('^]'))) ISNULL);
SELECT ALL * FROM t0, vt0, v0;
SELECT ALL * FROM t0, vt0, v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)OR('1861466758'))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE ((NOT (((CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)OR('1861466758'))))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE (((((CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)OR('1861466758'))) ISNULL));
SELECT ALL * FROM t0, vt0, v0;
SELECT DISTINCT t0.c0, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)%(CAST(rt0.c4 AS REAL)))) UNION SELECT DISTINCT t0.c0, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c2 END)%(CAST(rt0.c4 AS REAL)))))) UNION SELECT DISTINCT t0.c0, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)%(CAST(rt0.c4 AS REAL)))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t0;
SELECT ALL rt0.c3, rt0.c2 FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 COLLATE BINARY CROSS JOIN rt0 ON ((ABS(vt0.c0)) IS FALSE) GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 COLLATE BINARY CROSS JOIN rt0 ON ((ABS(vt0.c0)) IS FALSE) WHERE (vt0.c1) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 COLLATE BINARY CROSS JOIN rt0 ON ((ABS(vt0.c0)) IS FALSE) WHERE ((NOT (vt0.c1))) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 COLLATE BINARY CROSS JOIN rt0 ON ((ABS(vt0.c0)) IS FALSE) WHERE (((vt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 COLLATE BINARY CROSS JOIN rt0 ON ((ABS(vt0.c0)) IS FALSE) GROUP BY rt0.c3, rt0.c2;
SELECT ALL v0.c1, rt0.c4, v0.c2 FROM t0, v0 LEFT OUTER JOIN vt0 ON CAST(CAST(rt0.c1 AS BLOB) AS REAL) INNER JOIN rt0 ON CAST(CASE WHEN v0.c1 THEN rt0.c2 ELSE vt0.c1 END AS INTEGER) GROUP BY v0.c1, rt0.c4, v0.c2;
SELECT ALL * FROM t0, rt0, vt0;
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN (rt0.c4 IN (rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)) END) UNION ALL SELECT * FROM t0, rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN (rt0.c4 IN (rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)) END))) UNION ALL SELECT ALL * FROM t0, rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN (rt0.c4 IN (rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)) END) ISNULL));
SELECT ALL * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM vt0, v0, t0, rt0;
SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE (CASE WHEN (((x'642e'))<((t0.c0))) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE x'' END ELSE ((((((((rt0.c2)AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c3)))OR(v0.c0)) END) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE ((NOT (CASE WHEN (((x'642e'))<((t0.c0))) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE x'' END ELSE ((((((((rt0.c2)AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c3)))OR(v0.c0)) END))) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE (((CASE WHEN (((x'642e'))<((t0.c0))) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE x'' END ELSE ((((((((rt0.c2)AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c3)))OR(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0, rt0;
SELECT vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1 FROM v0, rt0, t0, vt0 GROUP BY vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1;
SELECT vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1 FROM v0, rt0, t0, vt0 WHERE (((CASE WHEN t0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN v0.c2 THEN t0.c0 ELSE rt0.c4 END) ISNULL)) GROUP BY vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1 UNION SELECT vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1 FROM v0, rt0, t0, vt0 WHERE ((NOT (((CASE WHEN t0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN v0.c2 THEN t0.c0 ELSE rt0.c4 END) ISNULL)))) GROUP BY vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1 UNION SELECT vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1 FROM v0, rt0, t0, vt0 WHERE (((((CASE WHEN t0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN v0.c2 THEN t0.c0 ELSE rt0.c4 END) ISNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1;
SELECT vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1 FROM v0, rt0, t0, vt0 GROUP BY vt0.c0, rt0.c4, v0.c2, vt0.c1, v0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c0, v0.c1;
SELECT ALL v0.c1, rt0.c0 FROM t0, v0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0;
SELECT v0.c1, rt0.c0 FROM t0, v0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0 HAVING AVG(CAST(v0.c1 AS TEXT)) UNION ALL SELECT ALL v0.c1, rt0.c0 FROM t0, v0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0 HAVING (NOT (AVG(CAST(v0.c1 AS TEXT)))) UNION ALL SELECT ALL v0.c1, rt0.c0 FROM t0, v0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0 HAVING ((AVG(CAST(v0.c1 AS TEXT))) ISNULL);
SELECT ALL v0.c1, rt0.c0 FROM t0, v0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0;
SELECT v0.c1, rt0.c0 FROM t0, v0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0 HAVING AVG(CAST(v0.c1 AS TEXT)) UNION ALL SELECT ALL v0.c1, rt0.c0 FROM t0, v0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0 HAVING (NOT (AVG(CAST(v0.c1 AS TEXT)))) UNION ALL SELECT ALL v0.c1, rt0.c0 FROM t0, v0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0 HAVING ((AVG(CAST(v0.c1 AS TEXT))) ISNULL);
SELECT ALL v0.c1, rt0.c0 FROM t0, v0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((rt0.c2)AND(0.19507858983793303)))AND(rt0.c3)))AND(v0.c2)))OR(v0.c2)))OR(((((x'')AND(rt0.c4)))OR(v0.c0)))))AND((~ (rt0.c2)))))AND((((rt0.c1))<(('C/'))))))AND(((rt0.c2)+(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(v0.c2 COLLATE NOCASE)) GROUP BY v0.c1, rt0.c0;
SELECT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, rt0;
SELECT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (0.4705625438718609) AND (((rt0.c1)<=(rt0.c1))))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS REAL)) BETWEEN (0.4705625438718609) AND (((rt0.c1)<=(rt0.c1))))))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE (((((CAST(rt0.c0 AS REAL)) BETWEEN (0.4705625438718609) AND (((rt0.c1)<=(rt0.c1))))) ISNULL));
SELECT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, rt0;
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM v0, vt0, t0;
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM v0, vt0, t0 WHERE ((((((v0.c0 IN ()))AND(((('0.36070697441694566')) BETWEEN ((v0.c1)) AND ((vt0.c0))))))OR(vt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM v0, vt0, t0 WHERE ((NOT ((((((v0.c0 IN ()))AND(((('0.36070697441694566')) BETWEEN ((v0.c1)) AND ((vt0.c0))))))OR(vt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM v0, vt0, t0 WHERE ((((((((v0.c0 IN ()))AND(((('0.36070697441694566')) BETWEEN ((v0.c1)) AND ((vt0.c0))))))OR(vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM v0, vt0, t0;
SELECT ALL v0.c1 FROM vt0, rt0, v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt0, rt0, v0 WHERE (CASE WHEN NULL THEN ((((NULL)OR(rt0.c4)))AND(rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN ((v0.c2)LIKE(v0.c1)) WHEN v0.c0 THEN ((('DR)-&G8M'))=((v0.c1))) WHEN ((rt0.c4) NOTNULL) THEN CASE vt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE vt0.c1 END WHEN CAST(rt0.c0 AS NUMERIC) THEN LIKELIHOOD(rt0.c4, 0.6177923057540352) ELSE ((((((((0.5480706314712015)AND(v0.c1)))AND(rt0.c1)))AND(0.058480554934133844)))AND(v0.c2)) END) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM vt0, rt0, v0 WHERE ((NOT (CASE WHEN NULL THEN ((((NULL)OR(rt0.c4)))AND(rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN ((v0.c2)LIKE(v0.c1)) WHEN v0.c0 THEN ((('DR)-&G8M'))=((v0.c1))) WHEN ((rt0.c4) NOTNULL) THEN CASE vt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE vt0.c1 END WHEN CAST(rt0.c0 AS NUMERIC) THEN LIKELIHOOD(rt0.c4, 0.6177923057540352) ELSE ((((((((0.5480706314712015)AND(v0.c1)))AND(rt0.c1)))AND(0.058480554934133844)))AND(v0.c2)) END))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM vt0, rt0, v0 WHERE (((CASE WHEN NULL THEN ((((NULL)OR(rt0.c4)))AND(rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN ((v0.c2)LIKE(v0.c1)) WHEN v0.c0 THEN ((('DR)-&G8M'))=((v0.c1))) WHEN ((rt0.c4) NOTNULL) THEN CASE vt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE vt0.c1 END WHEN CAST(rt0.c0 AS NUMERIC) THEN LIKELIHOOD(rt0.c4, 0.6177923057540352) ELSE ((((((((0.5480706314712015)AND(v0.c1)))AND(rt0.c1)))AND(0.058480554934133844)))AND(v0.c2)) END) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt0, rt0, v0 GROUP BY v0.c1;
SELECT ALL v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2;
SELECT v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2 HAVING (((MIN(GROUP_CONCAT(MAX(SUM(rt0.c1)))) IN ())) ISNULL) UNION ALL SELECT v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2 HAVING (NOT ((((MIN(GROUP_CONCAT(MAX(SUM(rt0.c1)))) IN ())) ISNULL))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2 HAVING (((((MIN(GROUP_CONCAT(MAX(SUM(rt0.c1)))) IN ())) ISNULL)) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2;
SELECT v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2 HAVING (((MIN(GROUP_CONCAT(MAX(SUM(rt0.c1)))) IN ())) ISNULL) UNION ALL SELECT v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2 HAVING (NOT ((((MIN(GROUP_CONCAT(MAX(SUM(rt0.c1)))) IN ())) ISNULL))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2 HAVING (((((MIN(GROUP_CONCAT(MAX(SUM(rt0.c1)))) IN ())) ISNULL)) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c4, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0) NOTNULL) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c3, rt0.c0, vt0.c0, v0.c1, t0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0, vt0;
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c3, rt0.c0, vt0.c0, v0.c1, t0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0, vt0 WHERE ((('954372307') BETWEEN (CASE v0.c0  WHEN rt0.c3 THEN v0.c1 WHEN t0.c0 THEN v0.c1 WHEN v0.c1 THEN rt0.c0 END) AND (vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c4, vt0.c1, rt0.c3, rt0.c0, vt0.c0, v0.c1, t0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0, vt0 WHERE ((NOT ((('954372307') BETWEEN (CASE v0.c0  WHEN rt0.c3 THEN v0.c1 WHEN t0.c0 THEN v0.c1 WHEN v0.c1 THEN rt0.c0 END) AND (vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c4, vt0.c1, rt0.c3, rt0.c0, vt0.c0, v0.c1, t0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0, vt0 WHERE ((((('954372307') BETWEEN (CASE v0.c0  WHEN rt0.c3 THEN v0.c1 WHEN t0.c0 THEN v0.c1 WHEN v0.c1 THEN rt0.c0 END) AND (vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c3, rt0.c0, vt0.c0, v0.c1, t0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('-1693946507') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('-1693946507'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('-1693946507') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((CASE rt0.c2  WHEN t0.c0 THEN '1187761465' ELSE vt0.c0 END) ISNULL) INNER JOIN vt0 ON CASE rt0.c2  WHEN ((vt0.c1)IS(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c3, rt0.c2;
SELECT ALL TOTAL(((((t0.c0)AND(v0.c0)))IS NOT((x'' IN ())))) FROM t0, v0;
SELECT rt0.c1, rt0.c4, rt0.c3, vt0.c0, vt0.c1, v0.c2, rt0.c0 FROM t0, rt0, v0, vt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt0.c0, vt0.c1, v0.c2, rt0.c0 FROM t0, rt0, v0, vt0 WHERE (CAST(-1992161609 AS INTEGER)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt0.c0, vt0.c1, v0.c2, rt0.c0 FROM t0, rt0, v0, vt0 WHERE ((NOT (CAST(-1992161609 AS INTEGER)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt0.c0, vt0.c1, v0.c2, rt0.c0 FROM t0, rt0, v0, vt0 WHERE (((CAST(-1992161609 AS INTEGER)) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c3, vt0.c0, vt0.c1, v0.c2, rt0.c0 FROM t0, rt0, v0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((1.489193619E9)OR(CAST(t0.c0 AS NUMERIC))))OR((NOT (t0.c0)))))AND((~ (t0.c0)))))OR(((t0.c0)IS NOT(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((1.489193619E9)OR(CAST(t0.c0 AS NUMERIC))))OR((NOT (t0.c0)))))AND((~ (t0.c0)))))OR(((t0.c0)IS NOT(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((1.489193619E9)OR(CAST(t0.c0 AS NUMERIC))))OR((NOT (t0.c0)))))AND((~ (t0.c0)))))OR(((t0.c0)IS NOT(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c3 FROM vt0, t0, rt0, v0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, t0, rt0, v0 WHERE ((~ (((((vt0.c1)OR(v0.c2)))OR(vt0.c0))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt0, t0, rt0, v0 WHERE ((NOT ((~ (((((vt0.c1)OR(v0.c2)))OR(vt0.c0))))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0, t0, rt0, v0 WHERE ((((~ (((((vt0.c1)OR(v0.c2)))OR(vt0.c0))))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, t0, rt0, v0 GROUP BY rt0.c3;
SELECT ALL v0.c1, vt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c0, v0.c2 FROM rt0, t0 NOT INDEXED, vt0, v0 GROUP BY v0.c1, vt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c0, v0.c2;
SELECT ALL v0.c1, vt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c0, v0.c2 FROM rt0, t0, vt0, v0 GROUP BY v0.c1, vt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c0, v0.c2 HAVING MIN(((((v0.c2)OR(rt0.c4)))OR(COUNT(*)))) UNION ALL SELECT ALL v0.c1, vt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c0, v0.c2 FROM rt0, t0, vt0, v0 GROUP BY v0.c1, vt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c0, v0.c2 HAVING (NOT (MIN(((((v0.c2)OR(rt0.c4)))OR(COUNT(*)))))) UNION ALL SELECT v0.c1, vt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c0, v0.c2 FROM rt0, t0, vt0, v0 GROUP BY v0.c1, vt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c0, v0.c2 HAVING ((MIN(((((v0.c2)OR(rt0.c4)))OR(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c1) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT * FROM v0 WHERE (((v0.c1) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c3, v0.c1, rt0.c1, vt0.c0, v0.c2, t0.c0, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON TRIM(DISTINCT x'f4ed', UNLIKELY(DISTINCT rt0.c3)) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)<>(-2.032244851E9)) WHEN (+ (rt0.c3)) THEN v0.c2 COLLATE NOCASE WHEN '' COLLATE RTRIM THEN (- (vt0.c1)) END;
SELECT DISTINCT rt0.c3, v0.c1, rt0.c1, vt0.c0, v0.c2, t0.c0, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON TRIM(DISTINCT x'f4ed', UNLIKELY(DISTINCT rt0.c3)) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)!=(-2.032244851E9)) WHEN (+ (rt0.c3)) THEN v0.c2 COLLATE NOCASE WHEN '' COLLATE RTRIM THEN (- (vt0.c1)) END WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((vt0.c0)*(v0.c1)) ELSE (rt0.c3 IN (v0.c0)) END) UNION SELECT DISTINCT rt0.c3, v0.c1, rt0.c1, vt0.c0, v0.c2, t0.c0, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON TRIM(DISTINCT x'f4ed', UNLIKELY(DISTINCT rt0.c3)) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)!=(-2.032244851E9)) WHEN (+ (rt0.c3)) THEN v0.c2 COLLATE NOCASE WHEN '' COLLATE RTRIM THEN (- (vt0.c1)) END WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((vt0.c0)*(v0.c1)) ELSE (rt0.c3 IN (v0.c0)) END))) UNION SELECT DISTINCT rt0.c3, v0.c1, rt0.c1, vt0.c0, v0.c2, t0.c0, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON TRIM(DISTINCT x'f4ed', UNLIKELY(DISTINCT rt0.c3)) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)!=(-2.032244851E9)) WHEN (+ (rt0.c3)) THEN v0.c2 COLLATE NOCASE WHEN '' COLLATE RTRIM THEN (- (vt0.c1)) END WHERE (((CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((vt0.c0)*(v0.c1)) ELSE (rt0.c3 IN (v0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c3, v0.c1, rt0.c1, vt0.c0, v0.c2, t0.c0, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON TRIM(DISTINCT x'f4ed', UNLIKELY(DISTINCT rt0.c3)) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)<>(-2.032244851E9)) WHEN (+ (rt0.c3)) THEN v0.c2 COLLATE NOCASE WHEN '' COLLATE RTRIM THEN (- (vt0.c1)) END;
SELECT v0.c2 FROM v0 LEFT OUTER JOIN t0 ON 0x4f84624b GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 LEFT OUTER JOIN t0 ON 0x4f84624b WHERE (CASE WHEN ((v0.c2)<=(v0.c0)) THEN ((((v0.c2)OR(v0.c0)))OR(t0.c0)) WHEN (v0.c0 IN ()) THEN (~ (v0.c0)) WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0)==(v0.c0)) END) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 LEFT OUTER JOIN t0 ON 0X4f84624b WHERE ((NOT (CASE WHEN ((v0.c2)<=(v0.c0)) THEN ((((v0.c2)OR(v0.c0)))OR(t0.c0)) WHEN (v0.c0 IN ()) THEN (~ (v0.c0)) WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0)=(v0.c0)) END))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 LEFT OUTER JOIN t0 ON 0X4f84624b WHERE (((CASE WHEN ((v0.c2)<=(v0.c0)) THEN ((((v0.c2)OR(v0.c0)))OR(t0.c0)) WHEN (v0.c0 IN ()) THEN (~ (v0.c0)) WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0)=(v0.c0)) END) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 LEFT OUTER JOIN t0 ON 0x4f84624b GROUP BY v0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING MAX(((GROUP_CONCAT(TOTAL(MIN(SUM(rt0.c4)))))||(rt0.c3))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (MAX(((GROUP_CONCAT(TOTAL(MIN(SUM(rt0.c4)))))||(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING ((MAX(((GROUP_CONCAT(TOTAL(MIN(SUM(rt0.c4)))))||(rt0.c3)))) ISNULL);
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0, v0.c2, v0.c0)) BETWEEN ((vt0.c0, vt0.c1, v0.c2)) AND ((v0.c2, vt0.c0, vt0.c1))) IN ())) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0, v0.c2, v0.c0)) BETWEEN ((vt0.c0, vt0.c1, v0.c2)) AND ((v0.c2, vt0.c0, vt0.c1))) IN ())))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((((vt0.c0, v0.c2, v0.c0)) BETWEEN ((vt0.c0, vt0.c1, v0.c2)) AND ((v0.c2, vt0.c0, vt0.c1))) IN ())) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON ROUND(CASE vt0.c0  WHEN vt0.c1 THEN 7303179 ELSE rt0.c2 END, CASE WHEN v0.c1 THEN rt0.c0 END) RIGHT OUTER JOIN t0 ON (~ (((((rt0.c3)AND(v0.c0)))AND(vt0.c1))));
SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON ROUND(CASE vt0.c0  WHEN vt0.c1 THEN 7303179 ELSE rt0.c2 END, CASE WHEN v0.c1 THEN rt0.c0 END) RIGHT OUTER JOIN t0 ON (~ (((((rt0.c3)AND(v0.c0)))AND(vt0.c1)))) WHERE (((vt0.c1)IS NOT(rt0.c3)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON ROUND(CASE vt0.c0  WHEN vt0.c1 THEN 7303179 ELSE rt0.c2 END, CASE WHEN v0.c1 THEN rt0.c0 END) RIGHT OUTER JOIN t0 ON (~ (((((rt0.c3)AND(v0.c0)))AND(vt0.c1)))) WHERE ((NOT (((vt0.c1)IS NOT(rt0.c3)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON ROUND(CASE vt0.c0  WHEN vt0.c1 THEN 7303179 ELSE rt0.c2 END, CASE WHEN v0.c1 THEN rt0.c0 END) RIGHT OUTER JOIN t0 ON (~ (((((rt0.c3)AND(v0.c0)))AND(vt0.c1)))) WHERE (((((vt0.c1)IS NOT(rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON ROUND(CASE vt0.c0  WHEN vt0.c1 THEN 7303179 ELSE rt0.c2 END, CASE WHEN v0.c1 THEN rt0.c0 END) RIGHT OUTER JOIN t0 ON (~ (((((rt0.c3)AND(v0.c0)))AND(vt0.c1))));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c1)) NOT NULL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((UNLIKELY(DISTINCT vt0.c1)) NOT NULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((UNLIKELY(DISTINCT vt0.c1)) NOT NULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t0.c0, v0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2 HAVING GROUP_CONCAT(COUNT(v0.c1)) UNION ALL SELECT t0.c0, v0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(v0.c1)))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2 HAVING ((GROUP_CONCAT(COUNT(v0.c1))) ISNULL);
SELECT MAX(((UPPER(vt0.c1)) IS FALSE)) FROM v0, vt0, t0 ORDER BY ((x'') BETWEEN ((~ (vt0.c1))) AND (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC  NULLS FIRST;
SELECT ALL rt0.c2, v0.c1, vt0.c0, rt0.c3, t0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, t0 CROSS JOIN rt0 ON ((vt0.c1) BETWEEN (t0.c0) AND (v0.c1)) COLLATE RTRIM INNER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY;
SELECT ALL rt0.c2, v0.c1, vt0.c0, rt0.c3, t0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, t0 CROSS JOIN rt0 ON ((vt0.c1) BETWEEN (t0.c0) AND (v0.c1)) COLLATE RTRIM INNER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY WHERE ((~ ((NOT (vt0.c0))))) UNION ALL SELECT ALL rt0.c2, v0.c1, vt0.c0, rt0.c3, t0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, t0 CROSS JOIN rt0 ON ((vt0.c1) BETWEEN (t0.c0) AND (v0.c1)) COLLATE RTRIM INNER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY WHERE ((NOT ((~ ((NOT (vt0.c0))))))) UNION ALL SELECT rt0.c2, v0.c1, vt0.c0, rt0.c3, t0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, t0 CROSS JOIN rt0 ON ((vt0.c1) BETWEEN (t0.c0) AND (v0.c1)) COLLATE RTRIM INNER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY WHERE ((((~ ((NOT (vt0.c0))))) ISNULL));
SELECT ALL rt0.c2, v0.c1, vt0.c0, rt0.c3, t0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, t0 CROSS JOIN rt0 ON ((vt0.c1) BETWEEN (t0.c0) AND (v0.c1)) COLLATE RTRIM INNER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, rt0, v0, t0;
SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE (((((((((0Xffffffffc716f006)OR(((rt0.c3)==(rt0.c2)))))AND(CAST(vt0.c0 AS REAL))))AND(CASE rt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE rt0.c3 END)))OR(((rt0.c3)AND(t0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE ((NOT (((((((((0xffffffffc716f006)OR(((rt0.c3)=(rt0.c2)))))AND(CAST(vt0.c0 AS REAL))))AND(CASE rt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE rt0.c3 END)))OR(((rt0.c3)AND(t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE (((((((((((0Xffffffffc716f006)OR(((rt0.c3)=(rt0.c2)))))AND(CAST(vt0.c0 AS REAL))))AND(CASE rt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE rt0.c3 END)))OR(((rt0.c3)AND(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0, t0;
SELECT v0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c4, v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON v0.c0 INNER JOIN v0 ON (- (COALESCE(DISTINCT v0.c2, rt0.c1))) GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c4, v0.c2, t0.c0;
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING MIN((((MAX(MIN(AVG(MAX(v0.c2))))))>=((MIN(AVG(TOTAL(NULL))))))) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING (NOT (MIN((((MAX(MIN(AVG(MAX(v0.c2))))))>=((MIN(AVG(TOTAL(NULL))))))))) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING ((MIN((((MAX(MIN(AVG(MAX(v0.c2))))))>=((MIN(AVG(TOTAL(NULL)))))))) ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN v0 ON CAST(0.2794641486662911 AS TEXT);
SELECT ALL v0.c0, vt0.c1, vt0.c0, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN v0 ON CAST(0.2794641486662911 AS TEXT) WHERE (((((vt0.c1) BETWEEN ('666305599') AND (vt0.c1)))!=(CHANGES()))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN v0 ON CAST(0.2794641486662911 AS TEXT) WHERE ((NOT (((((vt0.c1) BETWEEN ('666305599') AND (vt0.c1)))!=(CHANGES()))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN v0 ON CAST(0.2794641486662911 AS TEXT) WHERE (((((((vt0.c1) BETWEEN ('666305599') AND (vt0.c1)))!=(CHANGES()))) ISNULL));
SELECT v0.c0, vt0.c1, vt0.c0, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN v0 ON CAST(0.2794641486662911 AS TEXT);
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))<((((t0.c0)>=(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))<((((t0.c0)>=(t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))<((((t0.c0)>=(t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0, vt0.c0, v0.c2, vt0.c1 FROM v0 INNER JOIN vt0 ON (- (x'3006')) FULL OUTER JOIN t0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT) GROUP BY v0.c0, vt0.c0, v0.c2, vt0.c1;
SELECT v0.c0, vt0.c0, v0.c2, vt0.c1 FROM v0 INNER JOIN vt0 ON (- (x'3006')) FULL OUTER JOIN t0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT) WHERE (((((((NULL)OR('4')))OR(vt0.c0)))>>(json_quote(v0.c2)))) GROUP BY v0.c0, vt0.c0, v0.c2, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, v0.c2, vt0.c1 FROM v0 INNER JOIN vt0 ON (- (x'3006')) FULL OUTER JOIN t0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT) WHERE ((NOT (((((((NULL)OR('4')))OR(vt0.c0)))>>(json_quote(v0.c2)))))) GROUP BY v0.c0, vt0.c0, v0.c2, vt0.c1 UNION SELECT v0.c0, vt0.c0, v0.c2, vt0.c1 FROM v0 INNER JOIN vt0 ON (- (x'3006')) FULL OUTER JOIN t0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT) WHERE (((((((((NULL)OR('4')))OR(vt0.c0)))>>(json_quote(v0.c2)))) ISNULL)) GROUP BY v0.c0, vt0.c0, v0.c2, vt0.c1;
SELECT v0.c0, vt0.c0, v0.c2, vt0.c1 FROM v0 INNER JOIN vt0 ON (- (x'3006')) FULL OUTER JOIN t0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT) GROUP BY v0.c0, vt0.c0, v0.c2, vt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c2 HAVING (((rt0.c4 IN ())) BETWEEN (GROUP_CONCAT(MIN(COUNT(AVG(MIN(COUNT(*))))))) AND (GROUP_CONCAT(rt0.c3))) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c2 HAVING (NOT ((((rt0.c4 IN ())) BETWEEN (GROUP_CONCAT(MIN(COUNT(AVG(MIN(COUNT(*))))))) AND (GROUP_CONCAT(rt0.c3))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c2 HAVING (((((rt0.c4 IN ())) BETWEEN (GROUP_CONCAT(MIN(COUNT(AVG(MIN(COUNT(*))))))) AND (GROUP_CONCAT(rt0.c3)))) ISNULL);
SELECT ALL * FROM v0, rt0 INNER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (0.08695661377135722)) LEFT OUTER JOIN vt0 ON (+ (CASE WHEN rt0.c1 THEN vt0.c1 END));
SELECT * FROM v0, rt0 INNER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (0.08695661377135722)) LEFT OUTER JOIN vt0 ON (+ (CASE WHEN rt0.c1 THEN vt0.c1 END)) WHERE ((('+絴ywj|~') BETWEEN (((vt0.c0)/(v0.c1))) AND ((NOT (v0.c2))))) UNION ALL SELECT ALL * FROM v0, rt0 INNER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (0.08695661377135722)) LEFT OUTER JOIN vt0 ON (+ (CASE WHEN rt0.c1 THEN vt0.c1 END)) WHERE ((NOT ((('+絴ywj|~') BETWEEN (((vt0.c0)/(v0.c1))) AND ((NOT (v0.c2))))))) UNION ALL SELECT ALL * FROM v0, rt0 NOT INDEXED INNER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (0.08695661377135722)) LEFT OUTER JOIN vt0 ON (+ (CASE WHEN rt0.c1 THEN vt0.c1 END)) WHERE ((((('+絴ywj|~') BETWEEN (((vt0.c0)/(v0.c1))) AND ((NOT (v0.c2))))) ISNULL));
SELECT ALL * FROM v0, rt0 INNER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (0.08695661377135722)) LEFT OUTER JOIN vt0 ON (+ (CASE WHEN rt0.c1 THEN vt0.c1 END));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)=(rt0.c0)))IS(((rt0.c1)-(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c3)=(rt0.c0)))IS(((rt0.c1)-(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)==(rt0.c0)))IS(((rt0.c1)-(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((v0.c0)LIKE(v0.c1)) THEN ((t0.c0) IS FALSE) END CROSS JOIN v0 ON HEX(v0.c0) GROUP BY vt0.c0;
SELECT v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2;
SELECT v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 HAVING MAX((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 HAVING (NOT (MAX((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))))) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 HAVING ((MAX((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4))))) ISNULL);
SELECT v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2;
SELECT v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 HAVING MAX((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 HAVING (NOT (MAX((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))))) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 HAVING ((MAX((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4))))) ISNULL);
SELECT v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2;
SELECT ALL MIN((((rt0.c2)) BETWEEN (((rt0.c3 IN ()))) AND ((CASE WHEN rt0.c1 THEN rt0.c3 END)))) FROM rt0 ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) THEN (((rt0.c3, NULL, rt0.c0))>((rt0.c0, rt0.c4, rt0.c3))) END;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))==((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))=((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))==((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((('-598006451') IS TRUE)) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((('-598006451') IS TRUE)))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((('-598006451') IS TRUE)) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT v0.c2 FROM v0, vt0, t0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, vt0, t0 WHERE (CASE WHEN v0.c0 THEN CAST(vt0.c1 AS INTEGER) ELSE (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, vt0, t0 WHERE ((NOT (CASE WHEN v0.c0 THEN CAST(vt0.c1 AS INTEGER) ELSE (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, vt0, t0 WHERE (((CASE WHEN v0.c0 THEN CAST(vt0.c1 AS INTEGER) ELSE (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0, vt0, t0 GROUP BY v0.c2;
SELECT ALL rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1;
SELECT rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING (NOT (AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING (NOT ((NOT (AVG(rt0.c2))))) UNION ALL SELECT rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING (((NOT (AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1;
SELECT rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING (NOT (AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING (NOT ((NOT (AVG(rt0.c2))))) UNION ALL SELECT rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING (((NOT (AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c4, v0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, v0.c1;
SELECT ALL SUM(NULL COLLATE NOCASE) FROM v0, vt0, rt0, t0;
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE ('') UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0 WHERE ((('') ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON LIKELY('tA^5Ov') GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON LIKELY('tA^5Ov') WHERE (v0.c2) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON LIKELY('tA^5Ov') WHERE ((NOT (v0.c2))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON LIKELY('tA^5Ov') WHERE (((v0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON LIKELY('tA^5Ov') GROUP BY rt0.c1, rt0.c0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (COUNT(v0.c2) IN ()) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((COUNT(v0.c2) IN ()))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((COUNT(v0.c2) IN ())) ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (COUNT(v0.c2) IN ()) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((COUNT(v0.c2) IN ()))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((COUNT(v0.c2) IN ())) ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL TOTAL((((rt0.c2)) NOT BETWEEN ((((v0.c0) BETWEEN (x'b5791d40') AND (v0.c2)))) AND ((((((v0.c2)OR(rt0.c2)))OR(rt0.c3)))))) FROM vt0, rt0 NOT INDEXED, v0;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((((v0.c2)AND(rt0.c0)))OR(v0.c2)))/(((rt0.c4) NOT NULL))) LEFT OUTER JOIN t0 ON (vt0.c1 IN (CASE WHEN rt0.c2 THEN vt0.c1 END)) CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0))) NOT NULL);
SELECT DISTINCT rt0.c2, v0.c1, rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((rtreenode(rt0.c2, rt0.c1) IN ())) UNION SELECT DISTINCT rt0.c2, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((rtreenode(rt0.c2, rt0.c1) IN ())))) UNION SELECT DISTINCT rt0.c2, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((rtreenode(rt0.c2, rt0.c1) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, v0.c1, rt0.c1, v0.c0 FROM rt0, v0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((((rt0.c3)OR(vt0.c1)))OR(vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((((rt0.c3)OR(vt0.c1)))OR(vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(((((rt0.c3)OR(vt0.c1)))OR(vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING SUM(TOTAL(-1620887872)) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT (SUM(TOTAL(-1620887872)))) UNION ALL SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING ((SUM(TOTAL(-1620887872))) ISNULL);
SELECT ALL v0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT ALL v0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((rt0.c2) ISNULL)) UNION ALL SELECT v0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((rt0.c2) ISNULL)))) UNION ALL SELECT ALL v0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c2) ISNULL)) ISNULL));
SELECT ALL v0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, t0, vt0 WHERE (v0.c2) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, t0, vt0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, t0 NOT INDEXED, vt0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, t0, vt0;
SELECT ALL rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT NULL) GROUP BY rt0.c1, t0.c0, rt0.c3;
SELECT ALL rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT NULL) WHERE (0xffffffffd6fb628f) GROUP BY rt0.c1, t0.c0, rt0.c3 UNION SELECT ALL rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT NULL) WHERE ((NOT (0xffffffffd6fb628f))) GROUP BY rt0.c1, t0.c0, rt0.c3 UNION SELECT ALL rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT NULL) WHERE (((0Xffffffffd6fb628f) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c3;
SELECT ALL rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT NULL) GROUP BY rt0.c1, t0.c0, rt0.c3;
SELECT ALL v0.c1, vt0.c1, vt0.c0 FROM t0, vt0, rt0, v0 GROUP BY v0.c1, vt0.c1, vt0.c0;
SELECT v0.c1, vt0.c1, vt0.c0 FROM t0, vt0, rt0, v0 GROUP BY v0.c1, vt0.c1, vt0.c0 HAVING MAX(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT v0.c1, vt0.c1, vt0.c0 FROM t0, vt0, rt0, v0 GROUP BY v0.c1, vt0.c1, vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL v0.c1, vt0.c1, vt0.c0 FROM t0, vt0, rt0, v0 NOT INDEXED GROUP BY v0.c1, vt0.c1, vt0.c0 HAVING ((MAX(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT rt0.c3, rt0.c1, t0.c0, vt0.c1, v0.c2, rt0.c0, v0.c1 FROM rt0 CROSS JOIN t0 ON ((((v0.c2)<(rt0.c4)))<(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON (((- (rt0.c2))) BETWEEN (((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) AND (((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c2)))) INNER JOIN v0 ON (((vt0.c0) IS FALSE) IN ());
SELECT rt0.c3, rt0.c1, t0.c0, vt0.c1, v0.c2, rt0.c0, v0.c1 FROM rt0 CROSS JOIN t0 ON ((((v0.c2)<(rt0.c4)))<(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON (((- (rt0.c2))) BETWEEN (((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) AND (((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c2)))) INNER JOIN v0 ON (((vt0.c0) IS FALSE) IN ()) WHERE (((NOT (rt0.c3)) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1, t0.c0, vt0.c1, v0.c2, rt0.c0, v0.c1 FROM rt0 CROSS JOIN t0 ON ((((v0.c2)<(rt0.c4)))<(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON (((- (rt0.c2))) BETWEEN (((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) AND (((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c2)))) INNER JOIN v0 ON (((vt0.c0) IS FALSE) IN ()) WHERE ((NOT (((NOT (rt0.c3)) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1, t0.c0, vt0.c1, v0.c2, rt0.c0, v0.c1 FROM rt0 CROSS JOIN t0 ON ((((v0.c2)<(rt0.c4)))<(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON (((- (rt0.c2))) BETWEEN (((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) AND (((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c2)))) INNER JOIN v0 ON (((vt0.c0) IS FALSE) IN ()) WHERE (((((NOT (rt0.c3)) IN ())) ISNULL));
SELECT rt0.c3, rt0.c1, t0.c0, vt0.c1, v0.c2, rt0.c0, v0.c1 FROM rt0 CROSS JOIN t0 ON ((((v0.c2)<(rt0.c4)))<(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON (((- (rt0.c2))) BETWEEN (((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) AND (((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c2)))) INNER JOIN v0 ON (((vt0.c0) IS FALSE) IN ());
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((NULL)IS NOT(rt0.c4)))OR(((NULL)%(v0.c0)))))AND((rt0.c3 IN ())));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((NULL)IS NOT(rt0.c4)))OR(((NULL)%(v0.c0)))))AND((rt0.c3 IN ()))) WHERE (((((((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c1)))OR(((v0.c0)!=(v0.c2)))))OR(((((v0.c0)OR(v0.c2)))AND(v0.c1))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((NULL)IS NOT(rt0.c4)))OR(((NULL)%(v0.c0)))))AND((rt0.c3 IN ()))) WHERE ((NOT (((((((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c1)))OR(((v0.c0)!=(v0.c2)))))OR(((((v0.c0)OR(v0.c2)))AND(v0.c1))))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((NULL)IS NOT(rt0.c4)))OR(((NULL)%(v0.c0)))))AND((rt0.c3 IN ()))) WHERE (((((((((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c1)))OR(((v0.c0)<>(v0.c2)))))OR(((((v0.c0)OR(v0.c2)))AND(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((NULL)IS NOT(rt0.c4)))OR(((NULL)%(v0.c0)))))AND((rt0.c3 IN ())));
SELECT rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0, t0, v0, vt0 WHERE ((((((vt0.c1))<=((vt0.c0))))<<((((rt0.c3)) BETWEEN ((v0.c1)) AND ((NULL)))))) GROUP BY rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1 UNION SELECT rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0, t0, v0, vt0 WHERE ((NOT ((((((vt0.c1))<=((vt0.c0))))<<((((rt0.c3)) BETWEEN ((v0.c1)) AND ((NULL)))))))) GROUP BY rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1 UNION SELECT rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0, t0, v0, vt0 WHERE ((((((((vt0.c1))<=((vt0.c0))))<<((((rt0.c3)) BETWEEN ((v0.c1)) AND ((NULL)))))) ISNULL)) GROUP BY rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1)GLOB('1032246885')) GROUP BY rt0.c4, rt0.c2, rt0.c3, vt0.c1, rt0.c1, rt0.c0, vt0.c0;
SELECT v0.c1 FROM v0;
SELECT v0.c1 FROM v0 WHERE (((((v0.c1)+(v0.c1))) NOT NULL)) UNION ALL SELECT v0.c1 FROM v0 WHERE ((NOT (((((v0.c1)+(v0.c1))) NOT NULL)))) UNION ALL SELECT v0.c1 FROM v0 WHERE (((((((v0.c1)+(v0.c1))) NOT NULL)) ISNULL));
SELECT v0.c1 FROM v0;
SELECT DISTINCT * FROM t0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((- (rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((- (rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((- (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('-1822837699') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('-1822837699'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('-1822837699') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 HAVING CASE MIN(rt0.c1)  WHEN ((((rt0.c2)OR(COUNT(*))))OR(SUM(v0.c2))) THEN CAST(MIN(rt0.c0) AS BLOB) END UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 HAVING (NOT (CASE MIN(rt0.c1)  WHEN ((((rt0.c2)OR(COUNT(*))))OR(SUM(v0.c2))) THEN CAST(MIN(rt0.c0) AS BLOB) END)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 HAVING ((CASE MIN(rt0.c1)  WHEN ((((rt0.c2)OR(COUNT(*))))OR(SUM(v0.c2))) THEN CAST(MIN(rt0.c0) AS BLOB) END) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 HAVING CASE MIN(rt0.c1)  WHEN ((((rt0.c2)OR(COUNT(*))))OR(SUM(v0.c2))) THEN CAST(MIN(rt0.c0) AS BLOB) END UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 HAVING (NOT (CASE MIN(rt0.c1)  WHEN ((((rt0.c2)OR(COUNT(*))))OR(SUM(v0.c2))) THEN CAST(MIN(rt0.c0) AS BLOB) END)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 HAVING ((CASE MIN(rt0.c1)  WHEN ((((rt0.c2)OR(COUNT(*))))OR(SUM(v0.c2))) THEN CAST(MIN(rt0.c0) AS BLOB) END) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt0.c4, v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c2 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c2 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c3, rt0.c4, t0.c0, v0.c1, rt0.c1, v0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0 CROSS JOIN t0 ON (((rt0.c4, ((((v0.c0)OR(v0.c0)))AND(x'd90c')), rt0.c2))<>((((rt0.c2) ISNULL), load_extension(t0.c0), rt0.c4))) LEFT OUTER JOIN vt0 ON ((x'493144ab') BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))) AND ((- (rt0.c4)))) CROSS JOIN v0 ON ((((v0.c0)!=(rt0.c2))) NOTNULL) GROUP BY rt0.c3, rt0.c4, t0.c0, v0.c1, rt0.c1, v0.c2, vt0.c0, rt0.c0, v0.c0;
SELECT ALL vt0.c1 FROM v0, vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt0, t0 GROUP BY vt0.c1 HAVING MAX(CAST(TOTAL(NULL) AS NUMERIC)) UNION ALL SELECT vt0.c1 FROM v0, vt0, t0 GROUP BY vt0.c1 HAVING (NOT (MAX(CAST(TOTAL(NULL) AS NUMERIC)))) UNION ALL SELECT vt0.c1 FROM v0, vt0, t0 GROUP BY vt0.c1 HAVING ((MAX(CAST(TOTAL(NULL) AS NUMERIC))) ISNULL);
SELECT * FROM vt0, t0, v0, rt0;
SELECT ALL * FROM vt0, t0, v0, rt0 WHERE ((('1777279756')!=((v0.c1 IN ())))) UNION ALL SELECT * FROM vt0, t0, v0, rt0 WHERE ((NOT ((('1777279756')<>((v0.c1 IN ())))))) UNION ALL SELECT * FROM vt0, t0, v0, rt0 WHERE ((((('1777279756')!=((v0.c1 IN ())))) ISNULL));
SELECT * FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((((v0.c1 COLLATE RTRIM))<=((CAST(vt0.c1 AS BLOB))))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT ((((v0.c1 COLLATE RTRIM))<=((CAST(vt0.c1 AS BLOB))))))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((((((v0.c1 COLLATE RTRIM))<=((CAST(vt0.c1 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2;
SELECT ALL rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2 FROM v0, rt0 NOT INDEXED WHERE (LIKELIHOOD(x'' COLLATE NOCASE, 0.9874687685969433)) GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2 UNION SELECT rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2 FROM v0, rt0 WHERE ((NOT (LIKELIHOOD(x'' COLLATE NOCASE, 0.9874687685969433)))) GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2 UNION SELECT ALL rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2 FROM v0, rt0 WHERE (((LIKELIHOOD(x'' COLLATE NOCASE, 0.9874687685969433)) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2;
SELECT rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, rt0.c1, v0.c2;
SELECT ALL v0.c1 FROM v0, t0 LEFT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN (t0.c0 IN (v0.c1)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((rt0.c2)LIKE(t0.c0)) END GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, t0 LEFT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN (t0.c0 IN (v0.c1)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((rt0.c2)LIKE(t0.c0)) END GROUP BY v0.c1 HAVING AVG(SUM(MAX(rt0.c3)) COLLATE BINARY) UNION ALL SELECT ALL v0.c1 FROM v0, t0 LEFT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN (t0.c0 IN (v0.c1)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((rt0.c2)LIKE(t0.c0)) END GROUP BY v0.c1 HAVING (NOT (AVG(SUM(MAX(rt0.c3)) COLLATE BINARY))) UNION ALL SELECT v0.c1 FROM v0, t0 LEFT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN (t0.c0 IN (v0.c1)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((rt0.c2)LIKE(t0.c0)) END GROUP BY v0.c1 HAVING ((AVG(SUM(MAX(rt0.c3)) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((((((vt0.c1)OR(v0.c1)))AND(vt0.c0)))OR(v0.c0)))OR(3.18598914E8)))AND((((vt0.c0))<((v0.c2))))))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((vt0.c1)%(vt0.c1)))))OR(((v0.c0)<=(v0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((((((vt0.c1)OR(v0.c1)))AND(vt0.c0)))OR(v0.c0)))OR(3.18598914E8)))AND((((vt0.c0))<((v0.c2))))))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((vt0.c1)%(vt0.c1)))))OR(((v0.c0)<=(v0.c0)))) WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((((((vt0.c1)OR(v0.c1)))AND(vt0.c0)))OR(v0.c0)))OR(3.18598914E8)))AND((((vt0.c0))<((v0.c2))))))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((vt0.c1)%(vt0.c1)))))OR(((v0.c0)<=(v0.c0)))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((((((vt0.c1)OR(v0.c1)))AND(vt0.c0)))OR(v0.c0)))OR(3.18598914E8)))AND((((vt0.c0))<((v0.c2))))))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((vt0.c1)%(vt0.c1)))))OR(((v0.c0)<=(v0.c0)))) WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((((((vt0.c1)OR(v0.c1)))AND(vt0.c0)))OR(v0.c0)))OR(3.18598914E8)))AND((((vt0.c0))<((v0.c2))))))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((vt0.c1)%(vt0.c1)))))OR(((v0.c0)<=(v0.c0))));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0 NOT INDEXED, vt0 WHERE (((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))<=(vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))<=(vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))<=(vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1 FROM rt0, t0, v0, vt0 WHERE ((((v0.c1, vt0.c1, rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c4) AND (v0.c1)), (NOT (t0.c0)), 0.6682961194303199)) AND ((((rt0.c2)&('-503546537')), v0.c1, (+ (rt0.c2)))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1 FROM rt0, t0, v0, vt0 WHERE ((NOT ((((v0.c1, vt0.c1, rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c4) AND (v0.c1)), (NOT (t0.c0)), 0.6682961194303199)) AND ((((rt0.c2)&('-503546537')), v0.c1, (+ (rt0.c2)))))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1 FROM rt0, t0, v0 NOT INDEXED, vt0 WHERE ((((((v0.c1, vt0.c1, rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c4) AND (v0.c1)), (NOT (t0.c0)), 0.6682961194303199)) AND ((((rt0.c2)&('-503546537')), v0.c1, (+ (rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c0, vt0.c1, rt0.c1;
SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM v0, rt0, t0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM v0, rt0, t0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING SUM(AVG('-1303498701')) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM v0, rt0, t0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING (NOT (SUM(AVG('-1303498701')))) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM v0, rt0, t0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0 HAVING ((SUM(AVG('-1303498701'))) ISNULL);
SELECT ALL rt0.c4 FROM rt0, vt0, t0, v0;
SELECT rt0.c4 FROM rt0, vt0, t0, v0 WHERE (((((v0.c1) BETWEEN (vt0.c1) AND (rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 END) AND (NULL))) UNION ALL SELECT ALL rt0.c4 FROM rt0, vt0, t0, v0 WHERE ((NOT (((((v0.c1) BETWEEN (vt0.c1) AND (rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 END) AND (NULL))))) UNION ALL SELECT ALL rt0.c4 FROM rt0, vt0, t0, v0 WHERE (((((((v0.c1) BETWEEN (vt0.c1) AND (rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 END) AND (NULL))) ISNULL));
SELECT ALL rt0.c4 FROM rt0, vt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c0, (rt0.c1 IN ()), (~ (rt0.c4)))) AND ((((t0.c0)LIKE(t0.c0)), ((t0.c0)<=(rt0.c1)), (rt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c0, (rt0.c1 IN ()), (~ (rt0.c4)))) AND ((((t0.c0)LIKE(t0.c0)), ((t0.c0)<=(rt0.c1)), (rt0.c1 IN ()))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c0, (rt0.c1 IN ()), (~ (rt0.c4)))) AND ((((t0.c0)LIKE(t0.c0)), ((t0.c0)<=(rt0.c1)), (rt0.c1 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE NOCASE)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0;
SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 HAVING rt0.c4 UNION ALL SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 HAVING ((rt0.c4) ISNULL);
SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0;
SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 HAVING rt0.c4 UNION ALL SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 HAVING ((rt0.c4) ISNULL);
SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c4, t0.c0;
SELECT rt0.c4 FROM rt0, vt0, t0;
SELECT ALL rt0.c4 FROM rt0, vt0, t0 WHERE ((((('-288864895')OR(vt0.c1)))AND((vt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c4 FROM rt0, vt0, t0 WHERE ((NOT ((((('-288864895')OR(vt0.c1)))AND((vt0.c0 IN ())))))) UNION ALL SELECT rt0.c4 FROM rt0, vt0, t0 WHERE ((((((('-288864895')OR(vt0.c1)))AND((vt0.c0 IN ())))) ISNULL));
SELECT rt0.c4 FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((~ (t0.c0)))==(t0.c0 COLLATE BINARY));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((~ (t0.c0)))==(t0.c0 COLLATE BINARY)) WHERE (((rt0.c1) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((0.4376592309725842, rt0.c3, rt0.c4, '655109829', rt0.c3))<((x'', rt0.c0, rt0.c3, rt0.c1, rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((~ (t0.c0)))==(t0.c0 COLLATE BINARY)) WHERE ((NOT (((rt0.c1) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((0.4376592309725842, rt0.c3, rt0.c4, '655109829', rt0.c3))<((x'', rt0.c0, rt0.c3, rt0.c1, rt0.c3)))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((~ (t0.c0)))=(t0.c0 COLLATE BINARY)) WHERE (((((rt0.c1) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((0.4376592309725842, rt0.c3, rt0.c4, '655109829', rt0.c3))<((x'', rt0.c0, rt0.c3, rt0.c1, rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((~ (t0.c0)))==(t0.c0 COLLATE BINARY));
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((v0.c1 COLLATE BINARY) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((v0.c1 COLLATE BINARY) ISNULL)))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((v0.c1 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(COUNT(GROUP_CONCAT(MAX(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(GROUP_CONCAT(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(GROUP_CONCAT(MAX(v0.c0))))) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c4 FROM rt0, t0, vt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c4 FROM rt0, t0, vt0 WHERE ('2146804777') UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c4 FROM rt0, t0, vt0 WHERE ((NOT ('2146804777'))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c4 FROM rt0, t0, vt0 WHERE ((('2146804777') ISNULL));
SELECT rt0.c2, vt0.c1, rt0.c4 FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((+ ('V꾜8v'))))>((t0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((+ ('V꾜8v'))))>((t0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((((+ ('V꾜8v'))))>((t0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(((((vt0.c0)OR(rt0.c3)))OR(rt0.c1))) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(((((vt0.c0)OR(rt0.c3)))OR(rt0.c1))) WHERE (((((CASE vt0.c0  WHEN rt0.c2 THEN '-978112463' WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END)AND((~ (rt0.c1)))))AND((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1)))))) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(((((vt0.c0)OR(rt0.c3)))OR(rt0.c1))) WHERE ((NOT (((((CASE vt0.c0  WHEN rt0.c2 THEN '-978112463' WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END)AND((~ (rt0.c1)))))AND((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1)))))))) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(((((vt0.c0)OR(rt0.c3)))OR(rt0.c1))) WHERE (((((((CASE vt0.c0  WHEN rt0.c2 THEN '-978112463' WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END)AND((~ (rt0.c1)))))AND((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1)))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(((((vt0.c0)OR(rt0.c3)))OR(rt0.c1))) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING CAST(((t0.c0)IS NOT(vt0.c1)) AS BLOB) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (CAST(((t0.c0)IS NOT(vt0.c1)) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((CAST(((t0.c0)IS NOT(vt0.c1)) AS BLOB)) ISNULL);
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING CAST(((t0.c0)IS NOT(vt0.c1)) AS BLOB) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (CAST(((t0.c0)IS NOT(vt0.c1)) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((CAST(((t0.c0)IS NOT(vt0.c1)) AS BLOB)) ISNULL);
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT v0.c0, rt0.c0, v0.c1, vt0.c1 FROM vt0, rt0 CROSS JOIN t0 ON ((t0.c0) NOTNULL) COLLATE BINARY FULL OUTER JOIN v0 ON ((((NOT (t0.c0)), '', (~ (vt0.c0))))>((CAST(0.058480554934133844 AS NUMERIC), ((v0.c1) IS TRUE), CASE WHEN rt0.c2 THEN vt0.c0 END)));
SELECT ALL v0.c0, rt0.c0, v0.c1, vt0.c1 FROM vt0, rt0 CROSS JOIN t0 ON ((t0.c0) NOTNULL) COLLATE BINARY FULL OUTER JOIN v0 ON ((((NOT (t0.c0)), '', (~ (vt0.c0))))>((CAST(0.058480554934133844 AS NUMERIC), ((v0.c1) IS TRUE), CASE WHEN rt0.c2 THEN vt0.c0 END))) WHERE ((((((v0.c1)OR(v0.c2)))AND(rt0.c3)) IN ())) UNION ALL SELECT v0.c0, rt0.c0, v0.c1, vt0.c1 FROM vt0, rt0 CROSS JOIN t0 ON ((t0.c0) NOTNULL) COLLATE BINARY FULL OUTER JOIN v0 ON ((((NOT (t0.c0)), '', (~ (vt0.c0))))>((CAST(0.058480554934133844 AS NUMERIC), ((v0.c1) IS TRUE), CASE WHEN rt0.c2 THEN vt0.c0 END))) WHERE ((NOT ((((((v0.c1)OR(v0.c2)))AND(rt0.c3)) IN ())))) UNION ALL SELECT v0.c0, rt0.c0, v0.c1, vt0.c1 FROM vt0, rt0 CROSS JOIN t0 ON ((t0.c0) NOTNULL) COLLATE BINARY FULL OUTER JOIN v0 ON ((((NOT (t0.c0)), '', (~ (vt0.c0))))>((CAST(0.058480554934133844 AS NUMERIC), ((v0.c1) IS TRUE), CASE WHEN rt0.c2 THEN vt0.c0 END))) WHERE ((((((((v0.c1)OR(v0.c2)))AND(rt0.c3)) IN ())) ISNULL));
SELECT v0.c0, rt0.c0, v0.c1, vt0.c1 FROM vt0, rt0 CROSS JOIN t0 ON ((t0.c0) NOTNULL) COLLATE BINARY FULL OUTER JOIN v0 ON ((((NOT (t0.c0)), '', (~ (vt0.c0))))>((CAST(0.058480554934133844 AS NUMERIC), ((v0.c1) IS TRUE), CASE WHEN rt0.c2 THEN vt0.c0 END)));
SELECT DISTINCT * FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE;
SELECT DISTINCT * FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE WHERE ((((v0.c0, v0.c2, rt0.c3, rt0.c0, vt0.c1)) NOT BETWEEN ((((t0.c0)>>(rt0.c1)), v0.c2, ((vt0.c0)OR(rt0.c2)), t0.c0, ((rt0.c0) IS TRUE))) AND ((rt0.c4 COLLATE BINARY, (v0.c1 IN (v0.c1, v0.c1)), (NOT (vt0.c0)), ((((vt0.c1)OR(0.9421608769546114)))AND(rt0.c4)), (((v0.c2))!=((rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, v0, t0 LEFT OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE WHERE ((NOT ((((v0.c0, v0.c2, rt0.c3, rt0.c0, vt0.c1)) NOT BETWEEN ((((t0.c0)>>(rt0.c1)), v0.c2, ((vt0.c0)OR(rt0.c2)), t0.c0, ((rt0.c0) IS TRUE))) AND ((rt0.c4 COLLATE BINARY, (v0.c1 IN (v0.c1, v0.c1)), (NOT (vt0.c0)), ((((vt0.c1)OR(0.9421608769546114)))AND(rt0.c4)), (((v0.c2))!=((rt0.c0))))))))) UNION SELECT DISTINCT * FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE WHERE ((((((v0.c0, v0.c2, rt0.c3, rt0.c0, vt0.c1)) NOT BETWEEN ((((t0.c0)>>(rt0.c1)), v0.c2, ((vt0.c0)OR(rt0.c2)), t0.c0, ((rt0.c0) IS TRUE))) AND ((rt0.c4 COLLATE BINARY, (v0.c1 IN (v0.c1, v0.c1)), (NOT (vt0.c0)), ((((vt0.c1)OR(0.9421608769546114)))AND(rt0.c4)), (((v0.c2))<>((rt0.c0))))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE;
SELECT v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1 FROM vt0, v0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1;
SELECT ALL v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1 FROM vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c1 END)+(((((((((v0.c1)OR(v0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1 UNION SELECT ALL v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1 FROM vt0, v0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c1 END)+(((((((((v0.c1)OR(v0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))))) GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1 UNION SELECT v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1 FROM vt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c1 END)+(((((((((v0.c1)OR(v0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) ISNULL)) GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1;
SELECT v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1 FROM vt0, v0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1, vt0.c1;
SELECT ALL v0.c0, vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, vt0.c0, rt0.c4;
SELECT ALL v0.c0, vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, vt0.c0, rt0.c4 HAVING MIN((((rt0.c4))<=((MAX(rt0.c3))))) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, vt0.c0, rt0.c4 HAVING (NOT (MIN((((rt0.c4))<=((MAX(rt0.c3))))))) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY v0.c0, vt0.c0, rt0.c4 HAVING ((MIN((((rt0.c4))<=((MAX(rt0.c3)))))) ISNULL);
SELECT * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c2) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0, vt0, t0;
SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0, vt0, t0 WHERE ((((((t0.c0)>>(vt0.c0))))>=((x'')))) UNION SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0, vt0, t0 WHERE ((NOT ((((((t0.c0)>>(vt0.c0))))>=((x'')))))) UNION SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0, vt0, t0 WHERE ((((((((t0.c0)>>(vt0.c0))))>=((x'')))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0, vt0, t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c1, 0.9497061820952721, vt0.c0))))<(vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c1, 0.9497061820952721, vt0.c0))))<(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c1))<>((vt0.c1, 0.9497061820952721, vt0.c0))))<(vt0.c1))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING MAX(MAX(COUNT(SUM(TOTAL(v0.c1))))) UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT (MAX(MAX(COUNT(SUM(TOTAL(v0.c1))))))) UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING ((MAX(MAX(COUNT(SUM(TOTAL(v0.c1)))))) ISNULL);
SELECT vt0.c0, vt0.c1, v0.c1 FROM v0 CROSS JOIN vt0 ON ((((NULL IN ()), v0.c2 COLLATE BINARY, (v0.c0 IN (0.027306487056954265))))>(((~ ('C/')), '0.9497061820952721', ((x'a244')||(v0.c1)))));
SELECT vt0.c0, vt0.c1, v0.c1 FROM v0 CROSS JOIN vt0 ON ((((NULL IN ()), v0.c2 COLLATE BINARY, (v0.c0 IN (0.027306487056954265))))>(((~ ('C/')), '0.9497061820952721', ((x'a244')||(v0.c1))))) WHERE (((vt0.c0)AND('!K1!'))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c1 FROM v0 CROSS JOIN vt0 ON ((((NULL IN ()), v0.c2 COLLATE BINARY, (v0.c0 IN (0.027306487056954265))))>(((~ ('C/')), '0.9497061820952721', ((x'a244')||(v0.c1))))) WHERE ((NOT (((vt0.c0)AND('!K1!'))))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c1 FROM v0 CROSS JOIN vt0 ON ((((NULL IN ()), v0.c2 COLLATE BINARY, (v0.c0 IN (0.027306487056954265))))>(((~ ('C/')), '0.9497061820952721', ((x'a244')||(v0.c1))))) WHERE (((((vt0.c0)AND('!K1!'))) ISNULL));
SELECT vt0.c0, vt0.c1, v0.c1 FROM v0 CROSS JOIN vt0 ON ((((NULL IN ()), v0.c2 COLLATE BINARY, (v0.c0 IN (0.027306487056954265))))>(((~ ('C/')), '0.9497061820952721', ((x'a244')||(v0.c1)))));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))<=(((vt0.c1)+(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS BLOB))<=(((vt0.c1)+(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c1 AS BLOB))<=(((vt0.c1)+(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))IS(vt0.c0))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS TEXT))IS(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS TEXT))IS(vt0.c0))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING CAST(((rt0.c3) BETWEEN (COUNT(rt0.c3)) AND (rt0.c2)) AS TEXT) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (CAST(((rt0.c3) BETWEEN (COUNT(rt0.c3)) AND (rt0.c2)) AS TEXT))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING ((CAST(((rt0.c3) BETWEEN (COUNT(rt0.c3)) AND (rt0.c2)) AS TEXT)) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING CAST(((rt0.c3) BETWEEN (COUNT(rt0.c3)) AND (rt0.c2)) AS TEXT) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (CAST(((rt0.c3) BETWEEN (COUNT(rt0.c3)) AND (rt0.c2)) AS TEXT))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING ((CAST(((rt0.c3) BETWEEN (COUNT(rt0.c3)) AND (rt0.c2)) AS TEXT)) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2;
SELECT t0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM t0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)<>(vt0.c0))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((+ (rt0.c2)))) RIGHT OUTER JOIN rt0 ON ((((((rt0.c4)AND(rt0.c1)))OR(vt0.c1)))>=(LIKELIHOOD(DISTINCT -1100624921, 0.3609190440630896)));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)==(t0.c0))) BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)=(t0.c0))) BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)=(t0.c0))) BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4 FROM vt0, v0, t0, rt0 GROUP BY v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4;
SELECT v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4 FROM vt0, v0, t0, rt0 WHERE (((CASE WHEN v0.c2 THEN t0.c0 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c3 THEN t0.c0 ELSE v0.c0 END)<<(((v0.c0)AND(vt0.c0))))) GROUP BY v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4 UNION SELECT ALL v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4 FROM vt0, v0, t0, rt0 WHERE ((NOT (((CASE WHEN v0.c2 THEN t0.c0 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c3 THEN t0.c0 ELSE v0.c0 END)<<(((v0.c0)AND(vt0.c0))))))) GROUP BY v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4 UNION SELECT v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4 FROM vt0, v0, t0, rt0 WHERE (((((CASE WHEN v0.c2 THEN t0.c0 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c3 THEN t0.c0 ELSE v0.c0 END)<<(((v0.c0)AND(vt0.c0))))) ISNULL)) GROUP BY v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4 FROM vt0, v0, t0, rt0 GROUP BY v0.c2, v0.c1, t0.c0, rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING COALESCE(((rt0.c0)%(AVG(rt0.c3))), CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), UPPER(DISTINCT rt0.c2), MAX(rt0.c0), CAST(COUNT(*) AS REAL), GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (COALESCE(((rt0.c0)%(AVG(rt0.c3))), CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), UPPER(DISTINCT rt0.c2), MAX(rt0.c0), CAST(COUNT(*) AS REAL), GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((COALESCE(((rt0.c0)%(AVG(rt0.c3))), CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), UPPER(DISTINCT rt0.c2), MAX(rt0.c0), CAST(COUNT(*) AS REAL), GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING COALESCE(((rt0.c0)%(AVG(rt0.c3))), CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), UPPER(DISTINCT rt0.c2), MAX(rt0.c0), CAST(COUNT(*) AS REAL), GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (COALESCE(((rt0.c0)%(AVG(rt0.c3))), CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), UPPER(DISTINCT rt0.c2), MAX(rt0.c0), CAST(COUNT(*) AS REAL), GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((COALESCE(((rt0.c0)%(AVG(rt0.c3))), CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), UPPER(DISTINCT rt0.c2), MAX(rt0.c0), CAST(COUNT(*) AS REAL), GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL SUM(CASE (v0.c1 IN ())  WHEN ((v0.c0)<(t0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)) ELSE ((rt0.c0)IS(v0.c2)) END) FROM t0, rt0, vt0, v0 ORDER BY TRIM(rt0.c2 COLLATE BINARY, ((vt0.c1)&(rt0.c2)))  NULLS LAST;
SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2, vt0.c1, t0.c0 FROM t0, v0, vt0;
SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((((v0.c2)) BETWEEN (((vt0.c0 IN (v0.c2)))) AND ((((((((((((((vt0.c1)AND(v0.c2)))OR(t0.c0)))OR(x'')))OR(0.04872638881032976)))OR(v0.c1)))AND(vt0.c1)))))) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((NOT ((((v0.c2)) BETWEEN (((vt0.c0 IN (v0.c2)))) AND ((((((((((((((vt0.c1)AND(v0.c2)))OR(t0.c0)))OR(x'')))OR(0.04872638881032976)))OR(v0.c1)))AND(vt0.c1)))))))) UNION ALL SELECT v0.c1, vt0.c0, v0.c0, v0.c2, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((((((v0.c2)) BETWEEN (((vt0.c0 IN (v0.c2)))) AND ((((((((((((((vt0.c1)AND(v0.c2)))OR(t0.c0)))OR(x'')))OR(0.04872638881032976)))OR(v0.c1)))AND(vt0.c1)))))) ISNULL));
SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2, vt0.c1, t0.c0 FROM t0, v0, vt0;
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((v0.c0) IS TRUE)) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((NOT (((((v0.c0) IS TRUE)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((((v0.c0) IS TRUE)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT ALL rt0.c3, vt0.c0, rt0.c2 FROM v0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, vt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (rt0.c3) GROUP BY rt0.c3, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, vt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3, vt0.c0, rt0.c2 UNION SELECT rt0.c3, vt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, vt0.c0, rt0.c2 FROM v0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, vt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, vt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, vt0.c1 HAVING GROUP_CONCAT(COUNT(AVG(MAX(AVG(rt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, vt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(AVG(MAX(AVG(rt0.c1))))))) UNION ALL SELECT ALL vt0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, vt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(COUNT(AVG(MAX(AVG(rt0.c1)))))) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c2 FROM v0 WHERE (v0.c1 COLLATE BINARY) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((NOT (v0.c1 COLLATE BINARY))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 WHERE (((v0.c1 COLLATE BINARY) ISNULL));
SELECT ALL v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c2 FROM vt0, t0, v0, rt0;
SELECT DISTINCT v0.c2 FROM vt0, t0, v0, rt0 WHERE (((((vt0.c0)&(v0.c2)))>=((((vt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c1)))))) UNION SELECT DISTINCT v0.c2 FROM vt0, t0, v0, rt0 WHERE ((NOT (((((vt0.c0)&(v0.c2)))>=((((vt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c1)))))))) UNION SELECT DISTINCT v0.c2 FROM vt0, t0, v0, rt0 WHERE (((((((vt0.c0)&(v0.c2)))>=((((vt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c1)))))) ISNULL));
SELECT DISTINCT v0.c2 FROM vt0, t0, v0, rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))LIKE(0xffffffffe341e1ae))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))LIKE(0Xffffffffe341e1ae))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))LIKE(0Xffffffffe341e1ae))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING MIN(CASE WHEN MAX(MAX(v0.c1)) THEN v0.c0 ELSE v0.c2 END) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (MIN(CASE WHEN MAX(MAX(v0.c1)) THEN v0.c0 ELSE v0.c2 END))) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((MIN(CASE WHEN MAX(MAX(v0.c1)) THEN v0.c0 ELSE v0.c2 END)) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c2 COLLATE BINARY)) AND ((x'')))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c2 COLLATE BINARY)) AND ((x'')))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c2 COLLATE BINARY)) AND ((x'')))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((x'' IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((x'' IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((x'' IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4;
SELECT rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4 HAVING (((- (rt0.c2))) BETWEEN (MAX(rt0.c4)) AND (((rt0.c4)*(AVG(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, v0.c2, rt0.c4 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4 HAVING (NOT ((((- (rt0.c2))) BETWEEN (MAX(rt0.c4)) AND (((rt0.c4)*(AVG(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4 HAVING (((((- (rt0.c2))) BETWEEN (MAX(rt0.c4)) AND (((rt0.c4)*(AVG(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4;
SELECT rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4 HAVING (((- (rt0.c2))) BETWEEN (MAX(rt0.c4)) AND (((rt0.c4)*(AVG(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, v0.c2, rt0.c4 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4 HAVING (NOT ((((- (rt0.c2))) BETWEEN (MAX(rt0.c4)) AND (((rt0.c4)*(AVG(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4 HAVING (((((- (rt0.c2))) BETWEEN (MAX(rt0.c4)) AND (((rt0.c4)*(AVG(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4;
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)>=(t0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))) CROSS JOIN vt0 ON (((NOT (vt0.c1))) ISNULL) LEFT OUTER JOIN v0 ON ((rt0.c4)IS NOT(v0.c0)) COLLATE NOCASE;
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)>=(t0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))) CROSS JOIN vt0 ON (((NOT (vt0.c1))) ISNULL) LEFT OUTER JOIN v0 ON ((rt0.c4)IS NOT(v0.c0)) COLLATE NOCASE WHERE ((('-1380200179' IN (rt0.c2)) IN ())) UNION ALL SELECT * FROM t0 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)>=(t0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))) CROSS JOIN vt0 ON (((NOT (vt0.c1))) ISNULL) LEFT OUTER JOIN v0 ON ((rt0.c4)IS NOT(v0.c0)) COLLATE NOCASE WHERE ((NOT ((('-1380200179' IN (rt0.c2)) IN ())))) UNION ALL SELECT * FROM t0 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)>=(t0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))) CROSS JOIN vt0 ON (((NOT (vt0.c1))) ISNULL) LEFT OUTER JOIN v0 ON ((rt0.c4)IS NOT(v0.c0)) COLLATE NOCASE WHERE ((((('-1380200179' IN (rt0.c2)) IN ())) ISNULL));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)>=(t0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))) CROSS JOIN vt0 ON (((NOT (vt0.c1))) ISNULL) LEFT OUTER JOIN v0 ON ((rt0.c4)IS NOT(v0.c0)) COLLATE NOCASE;
SELECT DISTINCT rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE ('-954798074') UNION SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE ((NOT ('-954798074'))) UNION SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE ((('-954798074') ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, t0;
SELECT v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0 FROM rt0, v0, t0, vt0 GROUP BY v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0;
SELECT v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0 FROM rt0, v0, t0, vt0 WHERE (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (QUOTE(v0.c0)))) GROUP BY v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0 UNION SELECT ALL v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0 FROM rt0, v0, t0, vt0 WHERE ((NOT (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (QUOTE(v0.c0)))))) GROUP BY v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0 UNION SELECT v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0 FROM rt0, v0, t0, vt0 WHERE (((((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (QUOTE(v0.c0)))) ISNULL)) GROUP BY v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0;
SELECT v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0 FROM rt0, v0, t0, vt0 GROUP BY v0.c0, rt0.c3, t0.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c2, v0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT ((NOT (AVG(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (((NOT (AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT ((NOT (AVG(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (((NOT (AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT SUM(CAST(v0.c1 COLLATE NOCASE AS NUMERIC)) FROM v0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))%(CAST(x'd487' AS TEXT)));
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)) IN (((vt0.c1)!=(vt0.c1))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)) IN (((vt0.c1)!=(vt0.c1))))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)) IN (((vt0.c1)!=(vt0.c1))))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE (0.1966891102492252) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((NOT (0.1966891102492252))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE (((0.1966891102492252) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (MIN(CAST(rt0.c1 AS REAL), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((x''))), CAST(rt0.c0 AS NUMERIC), (rt0.c1 IN ()), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)), ((0.5956867084448222)*('1356785576')))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (MIN(CAST(rt0.c1 AS REAL), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((x''))), CAST(rt0.c0 AS NUMERIC), (rt0.c1 IN ()), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)), ((0.5956867084448222)*('1356785576')))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (((MIN(CAST(rt0.c1 AS REAL), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((x''))), CAST(rt0.c0 AS NUMERIC), (rt0.c1 IN ()), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)), ((0.5956867084448222)*('1356785576')))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING MAX(SUM(v0.c2)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (MAX(SUM(v0.c2)))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((MAX(SUM(v0.c2))) ISNULL);
SELECT * FROM v0, vt0, rt0, t0;
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((((v0.c1)>(v0.c0))) NOTNULL)) UNION ALL SELECT * FROM v0, vt0, rt0, t0 WHERE ((NOT (((((v0.c1)>(v0.c0))) NOTNULL)))) UNION ALL SELECT * FROM v0, vt0, rt0, t0 WHERE (((((((v0.c1)>(v0.c0))) NOTNULL)) ISNULL));
SELECT * FROM v0, vt0, rt0, t0;
SELECT DISTINCT * FROM v0, rt0, t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0, rt0, t0 NATURAL JOIN vt0 WHERE (CAST(((((((((v0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(t0.c0)))AND(v0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, rt0, t0 NATURAL JOIN vt0 WHERE ((NOT (CAST(((((((((v0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(t0.c0)))AND(v0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, rt0, t0 NATURAL JOIN vt0 WHERE (((CAST(((((((((v0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(t0.c0)))AND(v0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0 NATURAL JOIN vt0;
SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 WHERE (v0.c2) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0, vt0 WHERE ((NOT (v0.c2))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM v0, vt0 WHERE (((v0.c2) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt0, v0, t0, rt0;
SELECT * FROM vt0, v0, t0, rt0 WHERE ((~ (v0.c1 COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, v0, t0, rt0 WHERE ((NOT ((~ (v0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0, v0, t0, rt0 WHERE ((((~ (v0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0, v0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((+ (t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((+ (t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((+ (t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (((((v0.c2)OR(v0.c1)))AND(v0.c1))) AND (LIKELY(rt0.c1)))) GROUP BY rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) BETWEEN (((((v0.c2)OR(v0.c1)))AND(v0.c1))) AND (LIKELY(rt0.c1)))))) GROUP BY rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2 UNION SELECT rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((rt0.c0 COLLATE NOCASE) BETWEEN (((((v0.c2)OR(v0.c1)))AND(v0.c1))) AND (LIKELY(rt0.c1)))) ISNULL)) GROUP BY rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1;
SELECT ALL v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1 HAVING MIN('-1235492375') UNION ALL SELECT ALL v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1 HAVING (NOT (MIN('-1235492375'))) UNION ALL SELECT v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1 HAVING ((MIN('-1235492375')) ISNULL);
SELECT v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1;
SELECT ALL v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1 HAVING MIN('-1235492375') UNION ALL SELECT ALL v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1 HAVING (NOT (MIN('-1235492375'))) UNION ALL SELECT v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1 HAVING ((MIN('-1235492375')) ISNULL);
SELECT v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM t0 NOT INDEXED, rt0 WHERE (((((t0.c0)>(rt0.c1)))!=(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM t0, rt0 WHERE ((NOT (((((t0.c0)>(rt0.c1)))!=(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM t0, rt0 WHERE (((((((t0.c0)>(rt0.c1)))<>(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM t0, rt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((((((((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, NULL))))AND(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END)))OR(vt0.c0)))AND((- (x'435e')))))OR(TRIM(vt0.c1, vt0.c0))))AND((~ (vt0.c0)))))AND(((vt0.c1) NOT NULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((((((((((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, NULL))))AND(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END)))OR(vt0.c0)))AND((- (x'435e')))))OR(TRIM(vt0.c1, vt0.c0))))AND((~ (vt0.c0)))))AND(((vt0.c1) NOT NULL)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((((((((((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, NULL))))AND(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END)))OR(vt0.c0)))AND((- (x'435e')))))OR(TRIM(vt0.c1, vt0.c0))))AND((~ (vt0.c0)))))AND(((vt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4 FROM rt0, t0, v0 GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4 FROM rt0, t0, v0 WHERE (CAST(NULLIF(DISTINCT v0.c0, t0.c0) AS NUMERIC)) GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4 FROM rt0, t0, v0 WHERE ((NOT (CAST(NULLIF(DISTINCT v0.c0, t0.c0) AS NUMERIC)))) GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4 UNION SELECT rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4 FROM rt0, t0, v0 WHERE (((CAST(NULLIF(DISTINCT v0.c0, t0.c0) AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4 FROM rt0, t0, v0 GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1;
SELECT rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 HAVING COUNT(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1;
SELECT rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 HAVING COUNT(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1 FROM v0, rt0, t0 CROSS JOIN vt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) ISNULL) GROUP BY rt0.c0, rt0.c3, t0.c0, vt0.c1, v0.c2, rt0.c4, v0.c1;
SELECT * FROM v0, vt0, rt0;
SELECT * FROM v0, vt0, rt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)) WHEN rt0.c3 COLLATE BINARY THEN ((((((((rt0.c4)AND(vt0.c0)))OR(-396015256)))OR(rt0.c3)))AND(v0.c1)) WHEN (rt0.c3 IN ()) THEN ((x'')IS NOT(rt0.c1)) ELSE ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) END) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)) WHEN rt0.c3 COLLATE BINARY THEN ((((((((rt0.c4)AND(vt0.c0)))OR(-396015256)))OR(rt0.c3)))AND(v0.c1)) WHEN (rt0.c3 IN ()) THEN ((x'')IS NOT(rt0.c1)) ELSE ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) END))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)) WHEN rt0.c3 COLLATE BINARY THEN ((((((((rt0.c4)AND(vt0.c0)))OR(-396015256)))OR(rt0.c3)))AND(v0.c1)) WHEN (rt0.c3 IN ()) THEN ((x'')IS NOT(rt0.c1)) ELSE ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) END) ISNULL));
SELECT * FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((((((((x'4173')OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))AND(v0.c1)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND ('H_ᓟ')) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((((((((x'4173')OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))AND(v0.c1)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND ('H_ᓟ')) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN ((((((((x'4173')OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))AND(v0.c1)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND ('H_ᓟ')) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2;
SELECT v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 HAVING SUM(rt0.c2) COLLATE BINARY UNION ALL SELECT ALL v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 HAVING (NOT (SUM(rt0.c2) COLLATE BINARY)) UNION ALL SELECT v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 HAVING ((SUM(rt0.c2) COLLATE BINARY) ISNULL);
SELECT v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2;
SELECT v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 HAVING SUM(rt0.c2) COLLATE BINARY UNION ALL SELECT ALL v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 HAVING (NOT (SUM(rt0.c2) COLLATE BINARY)) UNION ALL SELECT v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 HAVING ((SUM(rt0.c2) COLLATE BINARY) ISNULL);
SELECT v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY v0.c1, vt0.c1, rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2, v0.c2;
SELECT ALL vt0.c1, rt0.c4 FROM vt0, rt0;
SELECT ALL vt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((~ ((NOT (rt0.c1))))) UNION ALL SELECT ALL vt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((NOT ((~ ((NOT (rt0.c1))))))) UNION ALL SELECT ALL vt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((((~ ((NOT (rt0.c1))))) ISNULL));
SELECT ALL vt0.c1, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT t0.c0, rt0.c0, vt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, t0, rt0, vt0;
SELECT DISTINCT t0.c0, rt0.c0, vt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, t0, rt0, vt0 WHERE (CAST('1489193619' AS INTEGER)) UNION SELECT DISTINCT t0.c0, rt0.c0, vt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, t0, rt0, vt0 WHERE ((NOT (CAST('1489193619' AS INTEGER)))) UNION SELECT DISTINCT t0.c0, rt0.c0, vt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, t0, rt0, vt0 WHERE (((CAST('1489193619' AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, vt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, t0, rt0, vt0;
SELECT rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0, t0, rt0 WHERE ((((rt0.c0 IN (v0.c2, rt0.c3)))&(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 END))) GROUP BY rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0, t0, rt0 WHERE ((NOT ((((rt0.c0 IN (v0.c2, rt0.c3)))&(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 END))))) GROUP BY rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0, t0, rt0 WHERE ((((((rt0.c0 IN (v0.c2, rt0.c3)))&(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c0, v0.c1, t0.c0, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT v0.c0, v0.c2, v0.c1, vt0.c0, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM rt0, v0, vt0 GROUP BY v0.c0, v0.c2, v0.c1, vt0.c0, rt0.c1, vt0.c1, rt0.c0, rt0.c4;
SELECT v0.c0, v0.c2, v0.c1, vt0.c0, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM rt0, v0, vt0 GROUP BY v0.c0, v0.c2, v0.c1, vt0.c0, rt0.c1, vt0.c1, rt0.c0, rt0.c4 HAVING MIN((SUM(rt0.c3) IN (vt0.c0))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1, vt0.c0, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM rt0, v0, vt0 GROUP BY v0.c0, v0.c2, v0.c1, vt0.c0, rt0.c1, vt0.c1, rt0.c0, rt0.c4 HAVING (NOT (MIN((SUM(rt0.c3) IN (vt0.c0))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1, vt0.c0, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM rt0, v0, vt0 GROUP BY v0.c0, v0.c2, v0.c1, vt0.c0, rt0.c1, vt0.c1, rt0.c0, rt0.c4 HAVING ((MIN((SUM(rt0.c3) IN (vt0.c0)))) ISNULL);
SELECT ALL rt0.c3, v0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c0 FROM vt0, rt0, v0;
SELECT rt0.c3, v0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c0 FROM vt0, rt0, v0 WHERE (IFNULL(DISTINCT v0.c1 COLLATE BINARY, rt0.c3 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, v0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (IFNULL(DISTINCT v0.c1 COLLATE BINARY, rt0.c3 COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c3, v0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c0 FROM vt0, rt0, v0 WHERE (((IFNULL(DISTINCT v0.c1 COLLATE BINARY, rt0.c3 COLLATE RTRIM)) ISNULL));
SELECT ALL rt0.c3, v0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((rt0.c3 COLLATE RTRIM IN (((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((rt0.c3 COLLATE RTRIM IN (((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((rt0.c3 COLLATE RTRIM IN (((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0, vt0, v0 WHERE (((((vt0.c1)|(rt0.c2)))>>(CASE WHEN v0.c0 THEN rt0.c4 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, rt0, vt0, v0 WHERE ((NOT (((((vt0.c1)|(rt0.c2)))>>(CASE WHEN v0.c0 THEN rt0.c4 END))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0, vt0, v0 WHERE (((((((vt0.c1)|(rt0.c2)))>>(CASE WHEN v0.c0 THEN rt0.c4 END))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1;
SELECT rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1 HAVING AVG(0.28350503361013835) COLLATE BINARY UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1 HAVING (NOT (AVG(0.28350503361013835) COLLATE BINARY)) UNION ALL SELECT rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1 HAVING ((AVG(0.28350503361013835) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1;
SELECT rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1 HAVING AVG(0.28350503361013835) COLLATE BINARY UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1 HAVING (NOT (AVG(0.28350503361013835) COLLATE BINARY)) UNION ALL SELECT rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1 HAVING ((AVG(0.28350503361013835) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c1;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, vt0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0, vt0 WHERE (((((((((x'')AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c2 END)))AND((NOT (v0.c0)))))OR(((((v0.c0)OR(v0.c1)))AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN vt0.c1 END))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, vt0 WHERE ((NOT (((((((((x'')AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c2 END)))AND((NOT (v0.c0)))))OR(((((v0.c0)OR(v0.c1)))AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN vt0.c1 END))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, vt0 WHERE (((((((((((x'')AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c2 END)))AND((NOT (v0.c0)))))OR(((((v0.c0)OR(v0.c1)))AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN vt0.c1 END))) ISNULL));
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((+ (NULL)))&(((t0.c0)|(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((+ (NULL)))&(((t0.c0)|(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((+ (NULL)))&(((t0.c0)|(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1;
SELECT rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0, v0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) GROUP BY rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1 UNION SELECT ALL rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0, v0 WHERE ((NOT (CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)))) GROUP BY rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1 UNION SELECT rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0, v0 WHERE (((CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1;
SELECT rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c0, vt0.c0, v0.c1, v0.c0, rt0.c4, vt0.c1;
SELECT ALL v0.c2, vt0.c1, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON (~ (((NULL)-(vt0.c0)))) GROUP BY v0.c2, vt0.c1, t0.c0;
SELECT v0.c2, vt0.c1, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON (~ (((NULL)-(vt0.c0)))) GROUP BY v0.c2, vt0.c1, t0.c0 HAVING TOTAL(SUM(COUNT(t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL v0.c2, vt0.c1, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON (~ (((NULL)-(vt0.c0)))) GROUP BY v0.c2, vt0.c1, t0.c0 HAVING (NOT (TOTAL(SUM(COUNT(t0.c0)) COLLATE BINARY))) UNION ALL SELECT v0.c2, vt0.c1, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON (~ (((NULL)-(vt0.c0)))) GROUP BY v0.c2, vt0.c1, t0.c0 HAVING ((TOTAL(SUM(COUNT(t0.c0)) COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0;
SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((vt0.c0 IN ()))LIKE(((vt0.c1) NOT BETWEEN (NULL) AND (t0.c0))))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c0 IN ()))LIKE(((vt0.c1) NOT BETWEEN (NULL) AND (t0.c0))))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))LIKE(((vt0.c1) NOT BETWEEN (NULL) AND (t0.c0))))) ISNULL));
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t0, v0, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((t0.c0))) COLLATE RTRIM) GROUP BY rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t0, v0, rt0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((t0.c0))) COLLATE RTRIM))) GROUP BY rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0 UNION SELECT rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t0, v0, rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((t0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*))IS NOT(vt0.c0)) COLLATE BINARY UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((COUNT(*))IS NOT(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((COUNT(*))IS NOT(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*))IS NOT(vt0.c0)) COLLATE BINARY UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((COUNT(*))IS NOT(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((COUNT(*))IS NOT(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c4, vt0.c1, v0.c0, rt0.c1, v0.c1, rt0.c3, v0.c2, t0.c0, vt0.c0, rt0.c2 FROM vt0, v0, t0, rt0;
SELECT ALL rt0.c4, vt0.c1, v0.c0, rt0.c1, v0.c1, rt0.c3, v0.c2, t0.c0, vt0.c0, rt0.c2 FROM vt0, v0, t0, rt0 WHERE ((~ (UNLIKELY(rt0.c1)))) UNION ALL SELECT ALL rt0.c4, vt0.c1, v0.c0, rt0.c1, v0.c1, rt0.c3, v0.c2, t0.c0, vt0.c0, rt0.c2 FROM vt0, v0, t0, rt0 WHERE ((NOT ((~ (UNLIKELY(rt0.c1)))))) UNION ALL SELECT rt0.c4, vt0.c1, v0.c0, rt0.c1, v0.c1, rt0.c3, v0.c2, t0.c0, vt0.c0, rt0.c2 FROM vt0, v0, t0, rt0 WHERE ((((~ (UNLIKELY(rt0.c1)))) ISNULL));
SELECT rt0.c4, vt0.c1, v0.c0, rt0.c1, v0.c1, rt0.c3, v0.c2, t0.c0, vt0.c0, rt0.c2 FROM vt0, v0, t0, rt0;
SELECT DISTINCT t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((((((((((((rt0.c2)<(rt0.c2)))OR((((t0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))OR(LIKELIHOOD(DISTINCT rt0.c3, 0.9969664916019693))))OR(((((t0.c0)AND(0.0825735850956848)))AND(rt0.c4)))))OR(rt0.c4 COLLATE NOCASE)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(CASE rt0.c3  WHEN rt0.c3 THEN '\re5	0?IX䝛' ELSE x'' END))) UNION SELECT DISTINCT t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((((((((((((rt0.c2)<(rt0.c2)))OR((((t0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))OR(LIKELIHOOD(DISTINCT rt0.c3, 0.9969664916019693))))OR(((((t0.c0)AND(0.0825735850956848)))AND(rt0.c4)))))OR(rt0.c4 COLLATE NOCASE)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(CASE rt0.c3  WHEN rt0.c3 THEN '\re5	0?IX䝛' ELSE x'' END))))) UNION SELECT DISTINCT t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((((((((((((((rt0.c2)<(rt0.c2)))OR((((t0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))OR(LIKELIHOOD(DISTINCT rt0.c3, 0.9969664916019693))))OR(((((t0.c0)AND(0.0825735850956848)))AND(rt0.c4)))))OR(rt0.c4 COLLATE NOCASE)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(CASE rt0.c3  WHEN rt0.c3 THEN '\re5	0?IX䝛' ELSE x'' END))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0;
SELECT ALL v0.c1, rt0.c0, vt0.c0, v0.c0, v0.c2, t0.c0 FROM vt0 CROSS JOIN t0 ON ((v0.c2 COLLATE RTRIM) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND ('\r')) FULL OUTER JOIN v0 ON 0.04414595718569536 CROSS JOIN rt0 ON ((((vt0.c1)>=(rt0.c2))) NOT NULL) GROUP BY v0.c1, rt0.c0, vt0.c0, v0.c0, v0.c2, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(SUM(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(SUM(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(SUM(t0.c0))) ISNULL);
SELECT ALL MAX(((HEX(DISTINCT t0.c0)) IS FALSE)) FROM t0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (vt0.c1))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (vt0.c1))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3)<=('836034976')) COLLATE NOCASE INNER JOIN v0 ON v0.c0 COLLATE NOCASE;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3)<=('836034976')) COLLATE NOCASE INNER JOIN v0 ON v0.c0 COLLATE NOCASE WHERE (TRIM(DISTINCT v0.c2) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3)<=('836034976')) COLLATE NOCASE INNER JOIN v0 ON v0.c0 COLLATE NOCASE WHERE ((NOT (TRIM(DISTINCT v0.c2) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3)<=('836034976')) COLLATE NOCASE INNER JOIN v0 ON v0.c0 COLLATE NOCASE WHERE (((TRIM(DISTINCT v0.c2) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3)<=('836034976')) COLLATE NOCASE INNER JOIN v0 ON v0.c0 COLLATE NOCASE;
SELECT ALL rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 GROUP BY rt0.c0, v0.c2, rt0.c1;
SELECT ALL rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 WHERE (CASE WHEN ((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN v0.c0 COLLATE BINARY ELSE ((((rt0.c3)OR(v0.c1)))OR(t0.c0)) END) GROUP BY rt0.c0, v0.c2, rt0.c1 UNION SELECT ALL rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN v0.c0 COLLATE BINARY ELSE ((((rt0.c3)OR(v0.c1)))OR(t0.c0)) END))) GROUP BY rt0.c0, v0.c2, rt0.c1 UNION SELECT rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 WHERE (((CASE WHEN ((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN v0.c0 COLLATE BINARY ELSE ((((rt0.c3)OR(v0.c1)))OR(t0.c0)) END) ISNULL)) GROUP BY rt0.c0, v0.c2, rt0.c1;
SELECT ALL rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 GROUP BY rt0.c0, v0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 HAVING MAX(rt0.c1) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 HAVING ((MAX(rt0.c1)) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 HAVING MAX(rt0.c1) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 HAVING ((MAX(rt0.c1)) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, vt0.c1;
SELECT ALL v0.c2, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c2, rt0.c0 FROM rt0, v0 WHERE (((JULIANDAY(x'', rt0.c1, v0.c2))>>(rt0.c2))) UNION ALL SELECT ALL v0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((JULIANDAY(x'', rt0.c1, v0.c2))>>(rt0.c2))))) UNION ALL SELECT ALL v0.c2, rt0.c0 FROM rt0, v0 WHERE (((((JULIANDAY(x'', rt0.c1, v0.c2))>>(rt0.c2))) ISNULL));
SELECT ALL v0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((((v0.c2) NOT BETWEEN (x'') AND (NULL))))>((CAST(v0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((((v0.c2) NOT BETWEEN (x'') AND (NULL))))>((CAST(v0.c0 AS REAL))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((((v0.c2) NOT BETWEEN (x'') AND (NULL))))>((CAST(v0.c0 AS REAL))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1 FROM t0, v0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1;
SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1 FROM t0, v0, vt0, rt0 WHERE ((~ (v0.c1)) COLLATE RTRIM) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1 UNION SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1 FROM t0, v0, vt0, rt0 WHERE ((NOT ((~ (v0.c1)) COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1 UNION SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1 FROM t0, v0, vt0, rt0 WHERE ((((~ (v0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1;
SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1 FROM t0, v0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1, v0.c1;
SELECT t0.c0, vt0.c0, v0.c0, vt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c1, rt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((~ (v0.c2))) NOT BETWEEN (((('''pH6Ta3')) BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((t0.c0 IN ()))) CROSS JOIN rt0 ON (- (x'4e41')) LEFT OUTER JOIN v0 ON ((((((rt0.c3)>=(v0.c1)))AND(CASE NULL  WHEN 0.011417713262301565 THEN t0.c0 END)))AND(((((x'ac1f356bb1bb')AND(vt0.c1)))AND(v0.c1)))) GROUP BY t0.c0, vt0.c0, v0.c0, vt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c1, rt0.c0;
SELECT * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE ((NOT ((CAST(rt0.c2 AS REAL) IN ())))) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE ((((CAST(rt0.c2 AS REAL) IN ())) ISNULL));
SELECT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM v0, t0, rt0 WHERE (PRINTF((+ (rt0.c0)), (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((t0.c0))), rt0.c2 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM v0, t0, rt0 WHERE ((NOT (PRINTF((+ (rt0.c0)), (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((t0.c0))), rt0.c2 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM v0, t0, rt0 WHERE (((PRINTF((+ (rt0.c0)), (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((t0.c0))), rt0.c2 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM v0, t0, rt0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)LIKE(t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)LIKE(t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)LIKE(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('10924657' AS REAL) FULL OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))>>(((((rt0.c2)AND(vt0.c0)))AND(v0.c2)))) RIGHT OUTER JOIN v0 ON ((((rt0.c1) IS TRUE)) NOT BETWEEN (CAST(0X40096020 AS INTEGER)) AND (CASE WHEN rt0.c2 THEN rt0.c4 END)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND((- (rt0.c0)))))AND(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND((- (rt0.c0)))))AND(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND((- (rt0.c0)))))AND(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, vt0, t0, rt0;
SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE ((- (LIKE(rt0.c1, rt0.c0, '7')))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE ((NOT ((- (LIKE(rt0.c1, rt0.c0, '7')))))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE ((((- (LIKE(rt0.c1, rt0.c0, '7')))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0, rt0;
SELECT rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0, v0 WHERE ('1147805028') GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 UNION SELECT ALL rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0, v0 WHERE ((NOT ('1147805028'))) GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 UNION SELECT ALL rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0, v0 WHERE ((('1147805028') ISNULL)) GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0;
SELECT rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0;
SELECT v0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, v0 CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE GROUP BY v0.c1, t0.c0, vt0.c1, vt0.c0;
SELECT v0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, v0 CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE GROUP BY v0.c1, t0.c0, vt0.c1, vt0.c0 HAVING CASE SUM(vt0.c1)  WHEN CHANGES() THEN GROUP_CONCAT(COUNT(AVG(TOTAL(COUNT(SUM(GROUP_CONCAT(v0.c1))))))) END UNION ALL SELECT v0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, v0 CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE GROUP BY v0.c1, t0.c0, vt0.c1, vt0.c0 HAVING (NOT (CASE SUM(vt0.c1)  WHEN CHANGES() THEN GROUP_CONCAT(COUNT(AVG(TOTAL(COUNT(SUM(GROUP_CONCAT(v0.c1))))))) END)) UNION ALL SELECT v0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, v0 CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (v0.c1) AND (v0.c2)) COLLATE NOCASE GROUP BY v0.c1, t0.c0, vt0.c1, vt0.c0 HAVING ((CASE SUM(vt0.c1)  WHEN CHANGES() THEN GROUP_CONCAT(COUNT(AVG(TOTAL(COUNT(SUM(GROUP_CONCAT(v0.c1))))))) END) ISNULL);
SELECT * FROM vt0, t0, rt0, v0;
SELECT ALL * FROM vt0, t0, rt0, v0 WHERE (((v0.c0)<=(rt0.c1)) COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0, t0, rt0, v0 WHERE ((NOT (((v0.c0)<=(rt0.c1)) COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, t0, rt0, v0 WHERE (((((v0.c0)<=(rt0.c1)) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, t0, rt0, v0;
SELECT DISTINCT * FROM v0, rt0, vt0, t0;
SELECT DISTINCT * FROM v0, rt0, vt0, t0 WHERE ((((vt0.c1, rt0.c2, v0.c1)) BETWEEN (((((rt0.c1, rt0.c1, vt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c2, v0.c0, rt0.c4)) AND ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, v0.c2))), json_array_length(v0.c1), ((rt0.c0) IS TRUE))) AND ((x'f2c6', rt0.c3 COLLATE RTRIM, ((((x'')AND(v0.c2)))OR(-2073052413)))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0, t0 WHERE ((NOT ((((vt0.c1, rt0.c2, v0.c1)) BETWEEN (((((rt0.c1, rt0.c1, vt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c2, v0.c0, rt0.c4)) AND ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, v0.c2))), json_array_length(v0.c1), ((rt0.c0) IS TRUE))) AND ((x'f2c6', rt0.c3 COLLATE RTRIM, ((((x'')AND(v0.c2)))OR(-2073052413)))))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0, t0 WHERE ((((((vt0.c1, rt0.c2, v0.c1)) BETWEEN (((((rt0.c1, rt0.c1, vt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c2, v0.c0, rt0.c4)) AND ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, v0.c2))), json_array_length(v0.c1), ((rt0.c0) IS TRUE))) AND ((x'f2c6', rt0.c3 COLLATE RTRIM, ((((x'')AND(v0.c2)))OR(-2073052413)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0, t0;
SELECT v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0;
SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 WHERE ((((((('')OR(vt0.c1)))AND(v0.c2))) NOTNULL)) GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0 UNION SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 WHERE ((NOT ((((((('')OR(vt0.c1)))AND(v0.c2))) NOTNULL)))) GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0 UNION SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0 FROM vt0 NOT INDEXED, v0, t0 WHERE ((((((((('')OR(vt0.c1)))AND(v0.c2))) NOTNULL)) ISNULL)) GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0;
SELECT v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON x'fa17' GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON x'fa17' GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING MIN(((TOTAL(rt0.c1)) NOT NULL)) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON x'fa17' GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (MIN(((TOTAL(rt0.c1)) NOT NULL)))) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON x'fa17' GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING ((MIN(((TOTAL(rt0.c1)) NOT NULL))) ISNULL);
SELECT rt0.c1 FROM t0, rt0;
SELECT rt0.c1 FROM t0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c2)))>>(rt0.c3))) UNION ALL SELECT rt0.c1 FROM t0, rt0 WHERE ((NOT (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c2)))>>(rt0.c3))))) UNION ALL SELECT ALL rt0.c1 FROM t0, rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c2)))>>(rt0.c3))) ISNULL));
SELECT rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((~ (rt0.c1)))>=(CAST(rt0.c1 AS INTEGER)));
SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((~ (rt0.c1)))>=(CAST(rt0.c1 AS INTEGER))) WHERE (((rt0.c3)OR(t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((~ (rt0.c1)))>=(CAST(rt0.c1 AS INTEGER))) WHERE ((NOT (((rt0.c3)OR(t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((~ (rt0.c1)))>=(CAST(rt0.c1 AS INTEGER))) WHERE (((((rt0.c3)OR(t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((~ (rt0.c1)))>=(CAST(rt0.c1 AS INTEGER)));
SELECT v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2;
SELECT ALL v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM v0, rt0, vt0 WHERE ((((rt0.c4))<>((rt0.c4))) COLLATE BINARY) GROUP BY v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2 UNION SELECT ALL v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM v0, rt0, vt0 WHERE ((NOT ((((rt0.c4))!=((rt0.c4))) COLLATE BINARY))) GROUP BY v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2 UNION SELECT ALL v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM v0, rt0, vt0 WHERE ((((((rt0.c4))<>((rt0.c4))) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2;
SELECT v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1, v0.c1, v0.c2;
SELECT v0.c1 FROM v0 INNER JOIN vt0 ON NULL GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 INNER JOIN vt0 ON NULL GROUP BY v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1 FROM v0 INNER JOIN vt0 ON NULL GROUP BY v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM v0 NOT INDEXED INNER JOIN vt0 ON NULL GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1 FROM v0 INNER JOIN vt0 ON NULL GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 INNER JOIN vt0 ON NULL GROUP BY v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1 FROM v0 INNER JOIN vt0 ON NULL GROUP BY v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM v0 NOT INDEXED INNER JOIN vt0 ON NULL GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1 FROM v0 INNER JOIN vt0 ON NULL GROUP BY v0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (TIME(CASE WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB), ((vt0.c0) IS TRUE))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (TIME(CASE WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB), ((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TIME(CASE WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB), ((vt0.c0) IS TRUE))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKE(vt0.c0, ((0.16008725715064442) ISNULL))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKE(vt0.c0, ((0.16008725715064442) ISNULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKE(vt0.c0, ((0.16008725715064442) ISNULL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((v0.c2) IS FALSE) COLLATE RTRIM GROUP BY rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((v0.c2) IS FALSE) COLLATE RTRIM WHERE ((NOT (rt0.c4)) COLLATE BINARY) GROUP BY rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((v0.c2) IS FALSE) COLLATE RTRIM WHERE ((NOT ((NOT (rt0.c4)) COLLATE BINARY))) GROUP BY rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((v0.c2) IS FALSE) COLLATE RTRIM WHERE ((((NOT (rt0.c4)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((v0.c2) IS FALSE) COLLATE RTRIM GROUP BY rt0.c4, v0.c1, rt0.c3, rt0.c2, vt0.c1, v0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT SUM(CASE WHEN ((rt0.c3) NOTNULL) THEN v0.c1 COLLATE RTRIM WHEN ((rt0.c0)OR(v0.c2)) THEN CAST(vt0.c0 AS REAL) WHEN (~ (v0.c2)) THEN v0.c2 COLLATE RTRIM ELSE (rt0.c4 IN ()) END) FROM rt0, v0, vt0, t0 ORDER BY CAST(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)) AS REAL) ASC  NULLS FIRST, 0xffffffffde0d5733  NULLS LAST;
SELECT v0.c1, v0.c2, v0.c0, vt0.c0 FROM vt0, v0, t0;
SELECT ALL v0.c1, v0.c2, v0.c0, vt0.c0 FROM vt0, v0, t0 WHERE (((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))AND(json_type(v0.c1)))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, vt0.c0 FROM vt0, v0, t0 WHERE ((NOT (((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))AND(json_type(v0.c1)))))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0, vt0.c0 FROM vt0, v0, t0 WHERE (((((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))AND(json_type(v0.c1)))) ISNULL));
SELECT v0.c1, v0.c2, v0.c0, vt0.c0 FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOTNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, rt0.c2, v0.c2, vt0.c1 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c3)))>>(((vt0.c1) IS FALSE))) GROUP BY v0.c0, rt0.c2, v0.c2, vt0.c1;
SELECT v0.c0, rt0.c2, v0.c2, vt0.c1 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c3)))>>(((vt0.c1) IS FALSE))) GROUP BY v0.c0, rt0.c2, v0.c2, vt0.c1 HAVING MIN(CASE WHEN 0.7963939311438343 THEN COUNT(COUNT(rt0.c1)) WHEN MIN(MIN(vt0.c0)) THEN SUM(MIN(rt0.c3)) WHEN AVG(MIN(vt0.c0)) THEN rt0.c0 ELSE MIN(MAX(v0.c0)) END) UNION ALL SELECT ALL v0.c0, rt0.c2, v0.c2, vt0.c1 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c3)))>>(((vt0.c1) IS FALSE))) GROUP BY v0.c0, rt0.c2, v0.c2, vt0.c1 HAVING (NOT (MIN(CASE WHEN 0.7963939311438343 THEN COUNT(COUNT(rt0.c1)) WHEN MIN(MIN(vt0.c0)) THEN SUM(MIN(rt0.c3)) WHEN AVG(MIN(vt0.c0)) THEN rt0.c0 ELSE MIN(MAX(v0.c0)) END))) UNION ALL SELECT ALL v0.c0, rt0.c2, v0.c2, vt0.c1 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c3)))>>(((vt0.c1) IS FALSE))) GROUP BY v0.c0, rt0.c2, v0.c2, vt0.c1 HAVING ((MIN(CASE WHEN 0.7963939311438343 THEN COUNT(COUNT(rt0.c1)) WHEN MIN(MIN(vt0.c0)) THEN SUM(MIN(rt0.c3)) WHEN AVG(MIN(vt0.c0)) THEN rt0.c0 ELSE MIN(MAX(v0.c0)) END)) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c1 FROM rt0 INNER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS NUMERIC);
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c1 FROM rt0 INNER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS NUMERIC) WHERE (CAST(CAST(v0.c2 AS INTEGER) AS TEXT)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c1 FROM rt0 INNER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS NUMERIC) WHERE ((NOT (CAST(CAST(v0.c2 AS INTEGER) AS TEXT)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c1 FROM rt0 INNER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS NUMERIC) WHERE (((CAST(CAST(v0.c2 AS INTEGER) AS TEXT)) ISNULL));
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c1 FROM rt0 INNER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS NUMERIC);
SELECT DISTINCT rt0.c3, v0.c0 FROM v0, t0, vt0, rt0;
SELECT DISTINCT rt0.c3, v0.c0 FROM v0, t0, vt0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c4 END))>(((('''pH6Ta3')GLOB(rt0.c4)))))) UNION SELECT DISTINCT rt0.c3, v0.c0 FROM v0, t0, vt0, rt0 WHERE ((NOT ((((CASE WHEN rt0.c2 THEN rt0.c4 END))>(((('''pH6Ta3')GLOB(rt0.c4)))))))) UNION SELECT DISTINCT rt0.c3, v0.c0 FROM v0, t0, vt0, rt0 WHERE ((((((CASE WHEN rt0.c2 THEN rt0.c4 END))>(((('''pH6Ta3')GLOB(rt0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0 FROM v0, t0, vt0, rt0;
SELECT t0.c0, vt0.c1, rt0.c2, v0.c2, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON CASE ((((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(NULL)))OR(rt0.c2)))OR(v0.c0)))OR(v0.c2))  WHEN HEX(DISTINCT v0.c1) THEN v0.c2 END RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) GROUP BY t0.c0, vt0.c1, rt0.c2, v0.c2, rt0.c1;
SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1;
SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 HAVING SUM(((t0.c0) ISNULL)) UNION ALL SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 HAVING (NOT (SUM(((t0.c0) ISNULL)))) UNION ALL SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 HAVING ((SUM(((t0.c0) ISNULL))) ISNULL);
SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1;
SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 HAVING SUM(((t0.c0) ISNULL)) UNION ALL SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 HAVING (NOT (SUM(((t0.c0) ISNULL)))) UNION ALL SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 HAVING ((SUM(((t0.c0) ISNULL))) ISNULL);
SELECT rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c2, vt0.c0, v0.c0, rt0.c4, rt0.c3, t0.c0, vt0.c1;
SELECT ALL rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (CHAR(((rt0.c3) NOT NULL), ((x'') BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS REAL))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (CHAR(((rt0.c3) NOT NULL), ((x'') BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS REAL))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 WHERE (((CHAR(((rt0.c3) NOT NULL), ((x'') BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS REAL))) ISNULL));
SELECT ALL rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS TRUE);
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS TRUE) WHERE ((((((((x''))>=((vt0.c0))))OR((vt0.c0 IN (t0.c0, t0.c0)))))AND(((t0.c0) ISNULL)))) UNION SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS TRUE) WHERE ((NOT ((((((((x''))>=((vt0.c0))))OR((vt0.c0 IN (t0.c0, t0.c0)))))AND(((t0.c0) ISNULL)))))) UNION SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS TRUE) WHERE ((((((((((x''))>=((vt0.c0))))OR((vt0.c0 IN (t0.c0, t0.c0)))))AND(((t0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS TRUE);
SELECT vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, t0 WHERE ((((v0.c0 IN (v0.c2))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1))) AND (((rt0.c4) NOT BETWEEN (t0.c0) AND (vt0.c0))))) GROUP BY vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0 UNION SELECT vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, t0 WHERE ((NOT ((((v0.c0 IN (v0.c2))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1))) AND (((rt0.c4) NOT BETWEEN (t0.c0) AND (vt0.c0))))))) GROUP BY vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0 UNION SELECT vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, t0 WHERE ((((((v0.c0 IN (v0.c2))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1))) AND (((rt0.c4) NOT BETWEEN (t0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY vt0.c1, v0.c0, t0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING SUM(AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (SUM(AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0))))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))))))) ISNULL);
SELECT ALL * FROM vt0, v0, rt0, t0;
SELECT * FROM vt0, v0, rt0, t0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN (0.04414595718569536))) UNION ALL SELECT * FROM vt0, v0, rt0, t0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c0 END IN (0.04414595718569536))))) UNION ALL SELECT * FROM vt0, v0, rt0, t0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 END IN (0.04414595718569536))) ISNULL));
SELECT ALL * FROM vt0, v0, rt0, t0;
SELECT DISTINCT * FROM rt0, t0, vt0, v0;
SELECT DISTINCT * FROM rt0, t0, vt0, v0 WHERE (((rt0.c3) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0, vt0, v0 WHERE ((NOT (((rt0.c3) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0, vt0, v0 WHERE (((((rt0.c3) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN ((0.42853942982928783)<(0.15408189856054233)) THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0)AND(t0.c0)) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE (t0.c0 IN ())  WHEN ((0.42853942982928783)<(0.15408189856054233)) THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0)AND(t0.c0)) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE (t0.c0 IN ())  WHEN ((0.42853942982928783)<(0.15408189856054233)) THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0)AND(t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX(AVG(COUNT(*)))) NOTNULL) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((MAX(AVG(COUNT(*)))) NOTNULL))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((MAX(AVG(COUNT(*)))) NOTNULL)) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((+ (v0.c2))) IS FALSE)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((+ (v0.c2))) IS FALSE)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((+ (v0.c2))) IS FALSE)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN (rt0.c0) AND (((rt0.c1) ISNULL)));
SELECT DISTINCT * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN (rt0.c0) AND (((rt0.c1) ISNULL))) WHERE (0.28350503361013835 COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN (rt0.c0) AND (((rt0.c1) ISNULL))) WHERE ((NOT (0.28350503361013835 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN (rt0.c0) AND (((rt0.c1) ISNULL))) WHERE (((0.28350503361013835 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) BETWEEN (rt0.c0) AND (((rt0.c1) ISNULL)));
SELECT ALL t0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT t0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, t0, rt0 WHERE (((((rt0.c4)IS NOT('2110960388'))) IS FALSE)) GROUP BY t0.c0, v0.c0, rt0.c2, rt0.c1 UNION SELECT ALL t0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, t0, rt0 WHERE ((NOT (((((rt0.c4)IS NOT('2110960388'))) IS FALSE)))) GROUP BY t0.c0, v0.c0, rt0.c2, rt0.c1 UNION SELECT ALL t0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, t0, rt0 WHERE (((((((rt0.c4)IS NOT('2110960388'))) IS FALSE)) ISNULL)) GROUP BY t0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2 HAVING MAX(((((v0.c2)AND(rt0.c4)))AND(vt0.c1))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2 HAVING (NOT (MAX(((((v0.c2)AND(rt0.c4)))AND(vt0.c1))))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2 HAVING ((MAX(((((v0.c2)AND(rt0.c4)))AND(vt0.c1)))) ISNULL);
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2 HAVING MAX(((((v0.c2)AND(rt0.c4)))AND(vt0.c1))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2 HAVING (NOT (MAX(((((v0.c2)AND(rt0.c4)))AND(vt0.c1))))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2 HAVING ((MAX(((((v0.c2)AND(rt0.c4)))AND(vt0.c1)))) ISNULL);
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c2;
SELECT ALL SUM(CAST((~ (rt0.c0)) AS NUMERIC)) FROM rt0 ORDER BY (((rt0.c3)LIKE(rt0.c4)) IN ((rt0.c3 IN (rt0.c2)), MIN(rt0.c1, rt0.c1)))  NULLS LAST, CAST((rt0.c4 IN ()) AS INTEGER);
SELECT * FROM t0, vt0, rt0, v0;
SELECT * FROM t0, vt0, rt0, v0 WHERE (((v0.c0)>=(json_patch(rt0.c3, rt0.c0)))) UNION ALL SELECT ALL * FROM t0, vt0, rt0, v0 WHERE ((NOT (((v0.c0)>=(json_patch(rt0.c3, rt0.c0)))))) UNION ALL SELECT * FROM t0, vt0, rt0, v0 WHERE (((((v0.c0)>=(json_patch(rt0.c3, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0 WHERE (CASE WHEN ((vt0.c0)<=(NULL)) THEN ((0.1786683565535384)%(v0.c1)) WHEN (+ (t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE IFNULL(v0.c0, vt0.c1) END) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)<=(NULL)) THEN ((0.1786683565535384)%(v0.c1)) WHEN (+ (t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE IFNULL(v0.c0, vt0.c1) END))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE (((CASE WHEN ((vt0.c0)<=(NULL)) THEN ((0.1786683565535384)%(v0.c1)) WHEN (+ (t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE IFNULL(v0.c0, vt0.c1) END) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT ALL v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON (~ (((v0.c0) BETWEEN (v0.c2) AND (t0.c0)))) FULL OUTER JOIN rt0 ON (((((- (rt0.c0)))AND((rt0.c0 IN ()))))OR((~ (rt0.c3)))) GROUP BY v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT ALL v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON (~ (((v0.c0) BETWEEN (v0.c2) AND (t0.c0)))) FULL OUTER JOIN rt0 ON (((((- (rt0.c0)))AND((rt0.c0 IN ()))))OR((~ (rt0.c3)))) WHERE (((((- (vt0.c0)), ((v0.c2)<=(t0.c0)), ((rt0.c0) IS FALSE), (((v0.c0, '931477372', rt0.c2))<((rt0.c1, rt0.c1, '[]'))), v0.c0))<>((((vt0.c1)-(vt0.c1)), ((rt0.c2)-(vt0.c1)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)), '', ((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))) GROUP BY v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0 UNION SELECT v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON (~ (((v0.c0) BETWEEN (v0.c2) AND (t0.c0)))) FULL OUTER JOIN rt0 ON (((((- (rt0.c0)))AND((rt0.c0 IN ()))))OR((~ (rt0.c3)))) WHERE ((NOT (((((- (vt0.c0)), ((v0.c2)<=(t0.c0)), ((rt0.c0) IS FALSE), (((v0.c0, '931477372', rt0.c2))<((rt0.c1, rt0.c1, '[]'))), v0.c0))!=((((vt0.c1)-(vt0.c1)), ((rt0.c2)-(vt0.c1)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)), '', ((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))))) GROUP BY v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0 UNION SELECT v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON (~ (((v0.c0) BETWEEN (v0.c2) AND (t0.c0)))) FULL OUTER JOIN rt0 ON (((((- (rt0.c0)))AND((rt0.c0 IN ()))))OR((~ (rt0.c3)))) WHERE (((((((- (vt0.c0)), ((v0.c2)<=(t0.c0)), ((rt0.c0) IS FALSE), (((v0.c0, '931477372', rt0.c2))<((rt0.c1, rt0.c1, '[]'))), v0.c0))<>((((vt0.c1)-(vt0.c1)), ((rt0.c2)-(vt0.c1)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)), '', ((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))) ISNULL)) GROUP BY v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT ALL v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON (~ (((v0.c0) BETWEEN (v0.c2) AND (t0.c0)))) FULL OUTER JOIN rt0 ON (((((- (rt0.c0)))AND((rt0.c0 IN ()))))OR((~ (rt0.c3)))) GROUP BY v0.c2, v0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING CASE WHEN ((COUNT(v0.c0))IS(v0.c1)) THEN ((((v0.c2)AND(v0.c0)))OR(AVG(v0.c1))) ELSE GROUP_CONCAT(COUNT(*)) END UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (CASE WHEN ((COUNT(v0.c0))IS(v0.c1)) THEN ((((v0.c2)AND(v0.c0)))OR(AVG(v0.c1))) ELSE GROUP_CONCAT(COUNT(*)) END)) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((CASE WHEN ((COUNT(v0.c0))IS(v0.c1)) THEN ((((v0.c2)AND(v0.c0)))OR(AVG(v0.c1))) ELSE GROUP_CONCAT(COUNT(*)) END) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c3, vt0.c0, v0.c1, rt0.c4, t0.c0 FROM t0, vt0, rt0, v0;
SELECT rt0.c2, vt0.c1, rt0.c3, vt0.c0, v0.c1, rt0.c4, t0.c0 FROM t0, vt0, rt0, v0 WHERE ('-1481652709') UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c3, vt0.c0, v0.c1, rt0.c4, t0.c0 FROM t0, vt0, rt0, v0 WHERE ((NOT ('-1481652709'))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c3, vt0.c0, v0.c1, rt0.c4, t0.c0 FROM t0, vt0, rt0, v0 WHERE ((('-1481652709') ISNULL));
SELECT rt0.c2, vt0.c1, rt0.c3, vt0.c0, v0.c1, rt0.c4, t0.c0 FROM t0, vt0, rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((rt0.c3 IN (0.2794641486662911, (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((NOT ((rt0.c3 IN (0.2794641486662911, (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((((rt0.c3 IN (0.2794641486662911, (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c1 FROM v0, rt0, t0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 NOT INDEXED, rt0, t0, vt0 WHERE ((+ (CASE v0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0, t0, vt0 WHERE ((NOT ((+ (CASE v0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0, t0, vt0 WHERE ((((+ (CASE v0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0, t0, vt0 GROUP BY rt0.c1;
SELECT v0.c2, vt0.c0 FROM rt0, v0, vt0, t0 GROUP BY v0.c2, vt0.c0;
SELECT ALL v0.c2, vt0.c0 FROM rt0, v0, vt0, t0 GROUP BY v0.c2, vt0.c0 HAVING ((SUM(GROUP_CONCAT(rt0.c0)))|(TOTAL(SUM(vt0.c0)))) UNION ALL SELECT ALL v0.c2, vt0.c0 FROM rt0, v0, vt0, t0 GROUP BY v0.c2, vt0.c0 HAVING (NOT (((SUM(GROUP_CONCAT(rt0.c0)))|(TOTAL(SUM(vt0.c0)))))) UNION ALL SELECT ALL v0.c2, vt0.c0 FROM rt0, v0, vt0, t0 GROUP BY v0.c2, vt0.c0 HAVING ((((SUM(GROUP_CONCAT(rt0.c0)))|(TOTAL(SUM(vt0.c0))))) ISNULL);
SELECT * FROM t0, v0, rt0, vt0;
SELECT * FROM t0, v0, rt0, vt0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM t0, v0, rt0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM t0, v0, rt0, vt0 WHERE (((v0.c0) ISNULL));
SELECT * FROM t0, v0, rt0, vt0;
SELECT DISTINCT rt0.c0, v0.c0, t0.c0, rt0.c1, v0.c2 FROM rt0, v0, t0;
SELECT DISTINCT rt0.c0, v0.c0, t0.c0, rt0.c1, v0.c2 FROM rt0, v0, t0 WHERE (((((x'')||(rt0.c0)))IS NOT(''))) UNION SELECT DISTINCT rt0.c0, v0.c0, t0.c0, rt0.c1, v0.c2 FROM rt0, v0, t0 WHERE ((NOT (((((x'')||(rt0.c0)))IS NOT(''))))) UNION SELECT DISTINCT rt0.c0, v0.c0, t0.c0, rt0.c1, v0.c2 FROM rt0, v0, t0 WHERE (((((((x'')||(rt0.c0)))IS NOT(''))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, t0.c0, rt0.c1, v0.c2 FROM rt0, v0, t0;
SELECT t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((v0.c1 COLLATE NOCASE)LIKE(((rt0.c0)!=(v0.c1)))) GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((v0.c1 COLLATE NOCASE)LIKE(((rt0.c0)<>(v0.c1)))) WHERE ((+ (((((rt0.c3)AND(v0.c2)))OR(rt0.c1))))) GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((v0.c1 COLLATE NOCASE)LIKE(((rt0.c0)<>(v0.c1)))) WHERE ((NOT ((+ (((((rt0.c3)AND(v0.c2)))OR(rt0.c1))))))) GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((v0.c1 COLLATE NOCASE)LIKE(((rt0.c0)!=(v0.c1)))) WHERE ((((+ (((((rt0.c3)AND(v0.c2)))OR(rt0.c1))))) ISNULL)) GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((v0.c1 COLLATE NOCASE)LIKE(((rt0.c0)!=(v0.c1)))) GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (UNLIKELY(v0.c2))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT ((NOT (UNLIKELY(v0.c2))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (((NOT (UNLIKELY(v0.c2)))) ISNULL);
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (UNLIKELY(v0.c2))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT ((NOT (UNLIKELY(v0.c2))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (((NOT (UNLIKELY(v0.c2)))) ISNULL);
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL MAX(((((v0.c1) NOT BETWEEN (t0.c0) AND (rt0.c4)))<<((vt0.c1 IN (rt0.c4))))) FROM t0, vt0, rt0, v0;
SELECT ALL v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE (vt0.c1) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c2, v0.c1, v0.c0, vt0.c1 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c2, v0.c1, v0.c0, vt0.c1 FROM v0, vt0 WHERE (CAST(((v0.c2) ISNULL) AS INTEGER)) UNION SELECT DISTINCT vt0.c0, v0.c2, v0.c1, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (CAST(((v0.c2) ISNULL) AS INTEGER)))) UNION SELECT DISTINCT vt0.c0, v0.c2, v0.c1, v0.c0, vt0.c1 FROM v0, vt0 WHERE (((CAST(((v0.c2) ISNULL) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c2, v0.c1, v0.c0, vt0.c1 FROM v0, vt0;
SELECT t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4 FROM t0, v0, vt0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4;
SELECT t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4 FROM t0, v0, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))))) GROUP BY t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4 UNION SELECT ALL t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4 FROM t0, v0, vt0, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))))))) GROUP BY t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4 UNION SELECT ALL t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4 FROM t0, v0, vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))))) ISNULL)) GROUP BY t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4;
SELECT t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4 FROM t0, v0, vt0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, rt0.c2, v0.c2, vt0.c0, v0.c1, vt0.c1, rt0.c4;
SELECT ALL vt0.c0, v0.c2, rt0.c2, v0.c0, t0.c0, v0.c1, rt0.c0, rt0.c4, vt0.c1, rt0.c1, rt0.c3 FROM vt0, rt0 FULL OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN ((UPPER(DISTINCT t0.c0))) AND (((((rt0.c4, x'', x'', rt0.c0, rt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, rt0.c4, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2)))))) RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY vt0.c0, v0.c2, rt0.c2, v0.c0, t0.c0, v0.c1, rt0.c0, rt0.c4, vt0.c1, rt0.c1, rt0.c3;
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS NUMERIC);
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN t0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS NUMERIC) WHERE (('-1822837699' IN ())) UNION ALL SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN t0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS NUMERIC) WHERE ((NOT (('-1822837699' IN ())))) UNION ALL SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN t0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS NUMERIC) WHERE (((('-1822837699' IN ())) ISNULL));
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS NUMERIC);
SELECT DISTINCT * FROM rt0, vt0 CROSS JOIN v0 ON LIKELY(DISTINCT ((v0.c2) NOT NULL)) FULL OUTER JOIN t0 ON ((rt0.c2 IN (v0.c2)) IN (v0.c1));
SELECT DISTINCT * FROM rt0, vt0 CROSS JOIN v0 ON LIKELY(DISTINCT ((v0.c2) NOT NULL)) FULL OUTER JOIN t0 ON ((rt0.c2 IN (v0.c2)) IN (v0.c1)) WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0)IS NOT(0.29477905122654247))) AND (TRIM(x'')))) UNION SELECT DISTINCT * FROM rt0, vt0 CROSS JOIN v0 ON LIKELY(DISTINCT ((v0.c2) NOT NULL)) FULL OUTER JOIN t0 ON ((rt0.c2 IN (v0.c2)) IN (v0.c1)) WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0)IS NOT(0.29477905122654247))) AND (TRIM(x'')))))) UNION SELECT DISTINCT * FROM rt0, vt0 CROSS JOIN v0 ON LIKELY(DISTINCT ((v0.c2) NOT NULL)) FULL OUTER JOIN t0 ON ((rt0.c2 IN (v0.c2)) IN (v0.c1)) WHERE (((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0)IS NOT(0.29477905122654247))) AND (TRIM(x'')))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 CROSS JOIN v0 ON LIKELY(DISTINCT ((v0.c2) NOT NULL)) FULL OUTER JOIN t0 ON ((rt0.c2 IN (v0.c2)) IN (v0.c1));
SELECT ALL vt0.c1, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, v0, t0 WHERE (CAST(TRIM(DISTINCT 0.9109196687157519) AS NUMERIC)) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM vt0, v0, t0 WHERE ((NOT (CAST(TRIM(DISTINCT 0.9109196687157519) AS NUMERIC)))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM vt0, v0, t0 WHERE (((CAST(TRIM(DISTINCT 0.9109196687157519) AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c1, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(MIN(AVG(MAX(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(MIN(AVG(MAX(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(MIN(AVG(MAX(t0.c0))))) ISNULL);
SELECT ALL * FROM vt0, t0, v0, rt0;
SELECT * FROM vt0, t0, v0, rt0 WHERE (t0.c0) UNION ALL SELECT * FROM vt0, t0, v0, rt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM vt0, t0, v0, rt0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, t0 CROSS JOIN v0 ON (NOT (NULL));
SELECT DISTINCT * FROM vt0, t0 CROSS JOIN v0 ON (NOT (NULL)) WHERE (CASE ((NULL) BETWEEN (v0.c2) AND (vt0.c0))  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM vt0, t0 CROSS JOIN v0 ON (NOT (NULL)) WHERE ((NOT (CASE ((NULL) BETWEEN (v0.c2) AND (vt0.c0))  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM vt0, t0 CROSS JOIN v0 ON (NOT (NULL)) WHERE (((CASE ((NULL) BETWEEN (v0.c2) AND (vt0.c0))  WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM vt0, t0 CROSS JOIN v0 ON (NOT (NULL));
SELECT ALL v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN '0.6614972690345352' THEN ((vt0.c1)LIKE(vt0.c1)) WHEN ((v0.c0) NOTNULL) THEN (- (v0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN json_quote(vt0.c1) ELSE UPPER(t0.c0) END CROSS JOIN t0 ON (((((((((vt0.c1 IN ()))OR(v0.c1)))AND((NOT (v0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((v0.c2) IS TRUE))) GROUP BY v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0;
SELECT v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN '0.6614972690345352' THEN ((vt0.c1)LIKE(vt0.c1)) WHEN ((v0.c0) NOTNULL) THEN (- (v0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN json_quote(vt0.c1) ELSE UPPER(t0.c0) END CROSS JOIN t0 ON (((((((((vt0.c1 IN ()))OR(v0.c1)))AND((NOT (v0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((v0.c2) IS TRUE))) WHERE ((- (STRFTIME(vt0.c0, t0.c0, vt0.c1, t0.c0, vt0.c0)))) GROUP BY v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0 UNION SELECT v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN '0.6614972690345352' THEN ((vt0.c1)LIKE(vt0.c1)) WHEN ((v0.c0) NOTNULL) THEN (- (v0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN json_quote(vt0.c1) ELSE UPPER(t0.c0) END CROSS JOIN t0 ON (((((((((vt0.c1 IN ()))OR(v0.c1)))AND((NOT (v0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((v0.c2) IS TRUE))) WHERE ((NOT ((- (STRFTIME(vt0.c0, t0.c0, vt0.c1, t0.c0, vt0.c0)))))) GROUP BY v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN '0.6614972690345352' THEN ((vt0.c1)LIKE(vt0.c1)) WHEN ((v0.c0) NOTNULL) THEN (- (v0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN json_quote(vt0.c1) ELSE UPPER(t0.c0) END CROSS JOIN t0 ON (((((((((vt0.c1 IN ()))OR(v0.c1)))AND((NOT (v0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((v0.c2) IS TRUE))) WHERE ((((- (STRFTIME(vt0.c0, t0.c0, vt0.c1, t0.c0, vt0.c0)))) ISNULL)) GROUP BY v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0;
SELECT ALL v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN '0.6614972690345352' THEN ((vt0.c1)LIKE(vt0.c1)) WHEN ((v0.c0) NOTNULL) THEN (- (v0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN json_quote(vt0.c1) ELSE UPPER(t0.c0) END CROSS JOIN t0 ON (((((((((vt0.c1 IN ()))OR(v0.c1)))AND((NOT (v0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((v0.c2) IS TRUE))) GROUP BY v0.c1, v0.c2, vt0.c1, vt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 HAVING ((((NULL)OR(GROUP_CONCAT(rt0.c4))))AND(((vt0.c0) IS TRUE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 HAVING (NOT (((((NULL)OR(GROUP_CONCAT(rt0.c4))))AND(((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 HAVING ((((((NULL)OR(GROUP_CONCAT(rt0.c4))))AND(((vt0.c0) IS TRUE)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 HAVING ((((NULL)OR(GROUP_CONCAT(rt0.c4))))AND(((vt0.c0) IS TRUE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 HAVING (NOT (((((NULL)OR(GROUP_CONCAT(rt0.c4))))AND(((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 HAVING ((((((NULL)OR(GROUP_CONCAT(rt0.c4))))AND(((vt0.c0) IS TRUE)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, vt0.c0, vt0.c1;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON 0.06478052808664314;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON 0.06478052808664314 WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))IS(0.04306580297067164))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON 0.06478052808664314 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))IS(0.04306580297067164))))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON 0.06478052808664314 WHERE (((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))IS(0.04306580297067164))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON 0.06478052808664314;
SELECT DISTINCT * FROM v0, vt0, rt0, t0;
SELECT DISTINCT * FROM v0, vt0, rt0, t0 WHERE ((('')GLOB(((rt0.c1)|(v0.c1))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0, t0 WHERE ((NOT ((('')GLOB(((rt0.c1)|(v0.c1))))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0, t0 WHERE ((((('')GLOB(((rt0.c1)|(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0, t0;
SELECT rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON UPPER(((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON UPPER(((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2))) WHERE (vt0.c1) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON UPPER(((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2))) WHERE ((NOT (vt0.c1))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON UPPER(((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2))) WHERE (((vt0.c1) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON UPPER(((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2))) GROUP BY rt0.c1;
SELECT ALL vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1;
SELECT vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1 HAVING ((((((v0.c1)OR(vt0.c0)))OR(vt0.c1)))||(MIN(v0.c0))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1 HAVING (NOT (((((((v0.c1)OR(vt0.c0)))OR(vt0.c1)))||(MIN(v0.c0))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1 HAVING ((((((((v0.c1)OR(vt0.c0)))OR(vt0.c1)))||(MIN(v0.c0)))) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1;
SELECT vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1 HAVING ((((((v0.c1)OR(vt0.c0)))OR(vt0.c1)))||(MIN(v0.c0))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1 HAVING (NOT (((((((v0.c1)OR(vt0.c0)))OR(vt0.c1)))||(MIN(v0.c0))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1 HAVING ((((((((v0.c1)OR(vt0.c0)))OR(vt0.c1)))||(MIN(v0.c0)))) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, v0.c1;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (- (v0.c0)) CROSS JOIN rt0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)IS(vt0.c1))) AND ((- (rt0.c1)))) INNER JOIN v0 ON (+ (NULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(((vt0.c1) BETWEEN (v0.c1) AND (v0.c2)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(((vt0.c1) BETWEEN (v0.c1) AND (v0.c2)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(((vt0.c1) BETWEEN (v0.c1) AND (v0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c2, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM t0, rt0 WHERE ((((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((x'', CAST(rt0.c4 AS REAL), (((rt0.c3))=((rt0.c1))))) AND ((TRIM(rt0.c2, rt0.c1), CASE t0.c0  WHEN x'' THEN rt0.c3 WHEN t0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM t0, rt0 WHERE ((NOT ((((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((x'', CAST(rt0.c4 AS REAL), (((rt0.c3))==((rt0.c1))))) AND ((TRIM(rt0.c2, rt0.c1), CASE t0.c0  WHEN x'' THEN rt0.c3 WHEN t0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))))) GROUP BY rt0.c2, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c4 FROM t0, rt0 WHERE ((((((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((x'', CAST(rt0.c4 AS REAL), (((rt0.c3))==((rt0.c1))))) AND ((TRIM(rt0.c2, rt0.c1), CASE t0.c0  WHEN x'' THEN rt0.c3 WHEN t0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c0, vt0.c0 FROM rt0, vt0, t0, v0 GROUP BY v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c0, vt0.c0;
SELECT ALL v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c0, vt0.c0 FROM rt0, vt0, t0, v0 GROUP BY v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c0, vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c0, vt0.c0 FROM rt0, vt0, t0, v0 GROUP BY v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c0, vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c0, vt0.c0 FROM rt0, vt0, t0, v0 GROUP BY v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c0, vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT v0.c2, v0.c0 FROM v0;
SELECT v0.c2, v0.c0 FROM v0 WHERE ((- ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT ((- ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((((- ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) ISNULL));
SELECT v0.c2, v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((((((vt0.c1))>((vt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT ((((((vt0.c1))>((vt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((((((((vt0.c1))>((vt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 WHERE ((((v0.c2)) BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((CASE WHEN v0.c2 THEN v0.c0 END)))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT ((((v0.c2)) BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((CASE WHEN v0.c2 THEN v0.c0 END)))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((((((v0.c2)) BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((CASE WHEN v0.c2 THEN v0.c0 END)))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 HAVING SUM(t0.c0) UNION ALL SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (SUM(t0.c0))) UNION ALL SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 HAVING ((SUM(t0.c0)) ISNULL);
SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 HAVING SUM(t0.c0) UNION ALL SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (SUM(t0.c0))) UNION ALL SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 HAVING ((SUM(t0.c0)) ISNULL);
SELECT rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4;
SELECT vt0.c1, rt0.c1, rt0.c0 FROM t0, rt0, v0 RIGHT OUTER JOIN vt0 ON load_extension(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)), ((t0.c0)|(v0.c0)));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ('9') UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT ('9'))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((('9') ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4 FROM t0, vt0, rt0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4;
SELECT ALL t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4 FROM t0, vt0, rt0, v0 WHERE (((((rt0.c3) IS FALSE))<>((~ (vt0.c1))))) GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4 UNION SELECT t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4 FROM t0, vt0, rt0, v0 WHERE ((NOT (((((rt0.c3) IS FALSE))<>((~ (vt0.c1))))))) GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4 UNION SELECT t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4 FROM t0, vt0, rt0, v0 WHERE (((((((rt0.c3) IS FALSE))!=((~ (vt0.c1))))) ISNULL)) GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4;
SELECT t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4 FROM t0, vt0, rt0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c2, rt0.c4;
SELECT ALL v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 NOT INDEXED GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 NOT INDEXED GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c1, rt0.c0, v0.c0, t0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT * FROM rt0 CROSS JOIN t0 ON ((CASE WHEN v0.c1 THEN v0.c2 ELSE NULL END)>=(ABS(DISTINCT '*C8hq7wY{'))) RIGHT OUTER JOIN v0 ON ((((rt0.c2) ISNULL)) IS TRUE);
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0 CROSS JOIN rt0 ON TRIM((((v0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), CASE WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END);
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0 CROSS JOIN rt0 ON TRIM((((v0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), CASE WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END) WHERE (((((v0.c0)*(rt0.c4)))OR(rt0.c4))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0 CROSS JOIN rt0 ON TRIM((((v0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), CASE WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END) WHERE ((NOT (((((v0.c0)*(rt0.c4)))OR(rt0.c4))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0 CROSS JOIN rt0 ON TRIM((((v0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), CASE WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END) WHERE (((((((v0.c0)*(rt0.c4)))OR(rt0.c4))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0 CROSS JOIN rt0 ON TRIM((((v0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), CASE WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END);
SELECT ALL v0.c2, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0;
SELECT ALL v0.c2, vt0.c0, v0.c0 FROM v0, vt0 WHERE (CASE TRIM(v0.c2)  WHEN (v0.c1 IN ()) THEN CASE WHEN '61F1R\nR&' THEN v0.c1 END ELSE vt0.c0 END) GROUP BY v0.c2, vt0.c0, v0.c0 UNION SELECT ALL v0.c2, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (CASE TRIM(v0.c2)  WHEN (v0.c1 IN ()) THEN CASE WHEN '61F1R\nR&' THEN v0.c1 END ELSE vt0.c0 END))) GROUP BY v0.c2, vt0.c0, v0.c0 UNION SELECT v0.c2, vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CASE TRIM(v0.c2)  WHEN (v0.c1 IN ()) THEN CASE WHEN '61F1R\nR&' THEN v0.c1 END ELSE vt0.c0 END) ISNULL)) GROUP BY v0.c2, vt0.c0, v0.c0;
SELECT ALL v0.c2, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0;
SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1, v0.c2, rt0.c4, rt0.c2, v0.c0, vt0.c0, rt0.c3, v0.c1 FROM vt0, rt0, v0 INNER JOIN t0 ON (((rt0.c4)) BETWEEN ((((((rt0.c1)OR(v0.c2)))OR(rt0.c4)))) AND (((((v0.c0, NULL, rt0.c0))<=((vt0.c0, v0.c1, 0.5615427227995409)))))) GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1, v0.c2, rt0.c4, rt0.c2, v0.c0, vt0.c0, rt0.c3, v0.c1;
SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1, v0.c2, rt0.c4, rt0.c2, v0.c0, vt0.c0, rt0.c3, v0.c1 FROM vt0, rt0, v0 INNER JOIN t0 ON (((rt0.c4)) BETWEEN ((((((rt0.c1)OR(v0.c2)))OR(rt0.c4)))) AND (((((v0.c0, NULL, rt0.c0))<=((vt0.c0, v0.c1, 0.5615427227995409)))))) GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1, v0.c2, rt0.c4, rt0.c2, v0.c0, vt0.c0, rt0.c3, v0.c1 HAVING COUNT(((MIN(TOTAL(SUM(COUNT(TOTAL(rt0.c0)))))) NOT NULL)) UNION ALL SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1, v0.c2, rt0.c4, rt0.c2, v0.c0, vt0.c0, rt0.c3, v0.c1 FROM vt0, rt0, v0 INNER JOIN t0 ON (((rt0.c4)) BETWEEN ((((((rt0.c1)OR(v0.c2)))OR(rt0.c4)))) AND (((((v0.c0, NULL, rt0.c0))<=((vt0.c0, v0.c1, 0.5615427227995409)))))) GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1, v0.c2, rt0.c4, rt0.c2, v0.c0, vt0.c0, rt0.c3, v0.c1 HAVING (NOT (COUNT(((MIN(TOTAL(SUM(COUNT(TOTAL(rt0.c0)))))) NOT NULL)))) UNION ALL SELECT ALL t0.c0, rt0.c0, vt0.c1, rt0.c1, v0.c2, rt0.c4, rt0.c2, v0.c0, vt0.c0, rt0.c3, v0.c1 FROM vt0, rt0, v0 INNER JOIN t0 ON (((rt0.c4)) BETWEEN ((((((rt0.c1)OR(v0.c2)))OR(rt0.c4)))) AND (((((v0.c0, NULL, rt0.c0))<=((vt0.c0, v0.c1, 0.5615427227995409)))))) GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1, v0.c2, rt0.c4, rt0.c2, v0.c0, vt0.c0, rt0.c3, v0.c1 HAVING ((COUNT(((MIN(TOTAL(SUM(COUNT(TOTAL(rt0.c0)))))) NOT NULL))) ISNULL);
SELECT ALL rt0.c4, v0.c2, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0 FROM v0, vt0 NATURAL JOIN rt0;
SELECT rt0.c4, v0.c2, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0 FROM v0, vt0 NATURAL JOIN rt0 WHERE (-6.87643237E8) UNION ALL SELECT ALL rt0.c4, v0.c2, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0 FROM v0, vt0 NATURAL JOIN rt0 WHERE ((NOT (-6.87643237E8))) UNION ALL SELECT rt0.c4, v0.c2, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0 FROM v0, vt0 NATURAL JOIN rt0 WHERE (((-6.87643237E8) ISNULL));
SELECT ALL rt0.c4, v0.c2, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0 FROM v0, vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(v0.c0))) IS FALSE);
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(v0.c0))) IS FALSE) WHERE ((~ (v0.c1))) UNION SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(v0.c0))) IS FALSE) WHERE ((NOT ((~ (v0.c1))))) UNION SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(v0.c0))) IS FALSE) WHERE ((((~ (v0.c1))) ISNULL));
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(v0.c0))) IS FALSE);
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1;
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 WHERE (v0.c2) GROUP BY t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1 UNION SELECT t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 WHERE ((NOT (v0.c2))) GROUP BY t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1 UNION SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 WHERE (((v0.c2) ISNULL)) GROUP BY t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1;
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM rt0, v0;
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM rt0, v0 WHERE (TYPEOF(CAST(v0.c1 AS REAL))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (TYPEOF(CAST(v0.c1 AS REAL))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM rt0, v0 WHERE (((TYPEOF(CAST(v0.c1 AS REAL))) ISNULL));
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 COLLATE RTRIM;
SELECT DISTINCT v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 COLLATE RTRIM WHERE (NULLIF(DISTINCT (~ (rt0.c2)), ((v0.c0) NOT BETWEEN (rt0.c3) AND (v0.c1)))) UNION SELECT DISTINCT v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 COLLATE RTRIM WHERE ((NOT (NULLIF(DISTINCT (~ (rt0.c2)), ((v0.c0) NOT BETWEEN (rt0.c3) AND (v0.c1)))))) UNION SELECT DISTINCT v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 COLLATE RTRIM WHERE (((NULLIF(DISTINCT (~ (rt0.c2)), ((v0.c0) NOT BETWEEN (rt0.c3) AND (v0.c1)))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 COLLATE RTRIM;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)) THEN CASE v0.c2  WHEN 0X46cbcd39 THEN v0.c1 ELSE v0.c1 END ELSE ((((v0.c1)OR('-482221650')))AND(v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)) THEN CASE v0.c2  WHEN 0x46cbcd39 THEN v0.c1 ELSE v0.c1 END ELSE ((((v0.c1)OR('-482221650')))AND(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)) THEN CASE v0.c2  WHEN 0x46cbcd39 THEN v0.c1 ELSE v0.c1 END ELSE ((((v0.c1)OR('-482221650')))AND(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1, rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT vt0.c1, rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING ((((AVG(rt0.c1))OR(MAX(SUM(MAX(MIN(rt0.c0)))))))AND(MAX(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT ALL vt0.c1, rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (((((AVG(rt0.c1))OR(MAX(SUM(MAX(MIN(rt0.c0)))))))AND(MAX(GROUP_CONCAT(rt0.c4)))))) UNION ALL SELECT ALL vt0.c1, rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING ((((((AVG(rt0.c1))OR(MAX(SUM(MAX(MIN(rt0.c0)))))))AND(MAX(GROUP_CONCAT(rt0.c4))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c2, v0.c1, v0.c2, t0.c0 FROM t0 NOT INDEXED, v0, vt0, rt0;
SELECT DISTINCT rt0.c2, v0.c1, v0.c2, t0.c0 FROM t0, v0, vt0, rt0 WHERE ((rt0.c3 COLLATE BINARY IN ())) UNION SELECT DISTINCT rt0.c2, v0.c1, v0.c2, t0.c0 FROM t0, v0, vt0, rt0 WHERE ((NOT ((rt0.c3 COLLATE BINARY IN ())))) UNION SELECT DISTINCT rt0.c2, v0.c1, v0.c2, t0.c0 FROM t0, v0, vt0, rt0 WHERE ((((rt0.c3 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT rt0.c2, v0.c1, v0.c2, t0.c0 FROM t0 NOT INDEXED, v0, vt0, rt0;
SELECT rt0.c3 FROM t0 CROSS JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('fQ(S,zXF'))))/(((t0.c0)<>(rt0.c3)))) FULL OUTER JOIN rt0 ON TYPEOF(((t0.c0)GLOB(rt0.c4))) GROUP BY rt0.c3;
SELECT vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON ((load_extension(vt0.c0, t0.c0))==((t0.c0 IN ()))) GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c3, v0.c1, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0, rt0.c0, rt0.c4)) BETWEEN ((CAST(rt0.c4 AS BLOB), (~ (vt0.c1)), (((rt0.c4)) NOT BETWEEN (('75415933')) AND ((v0.c2))))) AND ((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)), '-472876157' COLLATE BINARY, CAST(v0.c0 AS BLOB)))) RIGHT OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (v0.c0) AND (1356785576)))-(0xffffffffa36c052f));
SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((((rt0.c3 IN ())) ISNULL)) UNION SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((NOT ((((rt0.c3 IN ())) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((((((rt0.c3 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN t0;
SELECT ALL rt0.c4 FROM t0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM t0, rt0 WHERE (((CAST(rt0.c3 AS BLOB))AND(((t0.c0)<(rt0.c0))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM t0, rt0 WHERE ((NOT (((CAST(rt0.c3 AS BLOB))AND(((t0.c0)<(rt0.c0))))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM t0, rt0 WHERE (((((CAST(rt0.c3 AS BLOB))AND(((t0.c0)<(rt0.c0))))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM t0, rt0 GROUP BY rt0.c4;
SELECT ALL vt0.c0, vt0.c1, v0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c2;
SELECT ALL vt0.c0, vt0.c1, v0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c2 HAVING CAST(((COUNT(COUNT(v0.c1)))IS NOT(GROUP_CONCAT(SUM(vt0.c0)))) AS BLOB) UNION ALL SELECT vt0.c0, vt0.c1, v0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c2 HAVING (NOT (CAST(((COUNT(COUNT(v0.c1)))IS NOT(GROUP_CONCAT(SUM(vt0.c0)))) AS BLOB))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c2 HAVING ((CAST(((COUNT(COUNT(v0.c1)))IS NOT(GROUP_CONCAT(SUM(vt0.c0)))) AS BLOB)) ISNULL);
SELECT ALL * FROM rt0, t0, v0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0, t0, v0 NATURAL JOIN vt0 WHERE ((((((rt0.c3)) BETWEEN ((t0.c0)) AND ((rt0.c2))))&(NULL))) UNION ALL SELECT * FROM rt0, t0, v0 NATURAL JOIN vt0 WHERE ((NOT ((((((rt0.c3)) BETWEEN ((t0.c0)) AND ((rt0.c2))))&(NULL))))) UNION ALL SELECT * FROM rt0, t0, v0 NATURAL JOIN vt0 WHERE ((((((((rt0.c3)) BETWEEN ((t0.c0)) AND ((rt0.c2))))&(NULL))) ISNULL));
SELECT ALL * FROM rt0, t0, v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))OR(((rt0.c4)<(rt0.c3)))) LEFT OUTER JOIN v0 ON CAST((vt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON (NOT ((~ (v0.c0))));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))OR(((rt0.c4)<(rt0.c3)))) LEFT OUTER JOIN v0 ON CAST((vt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON (NOT ((~ (v0.c0)))) WHERE (((v0.c1 COLLATE NOCASE)<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c4))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))OR(((rt0.c4)<(rt0.c3)))) LEFT OUTER JOIN v0 ON CAST((vt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON (NOT ((~ (v0.c0)))) WHERE ((NOT (((v0.c1 COLLATE NOCASE)<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c4))))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))OR(((rt0.c4)<(rt0.c3)))) LEFT OUTER JOIN v0 ON CAST((vt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON (NOT ((~ (v0.c0)))) WHERE (((((v0.c1 COLLATE NOCASE)<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))OR(((rt0.c4)<(rt0.c3)))) LEFT OUTER JOIN v0 ON CAST((vt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON (NOT ((~ (v0.c0))));
SELECT ALL rt0.c1, rt0.c3, v0.c1, rt0.c0 FROM rt0, vt0, t0, v0 GROUP BY rt0.c1, rt0.c3, v0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, v0.c1, rt0.c0 FROM rt0, vt0, t0, v0 WHERE (0.5926113547644256) GROUP BY rt0.c1, rt0.c3, v0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c3, v0.c1, rt0.c0 FROM rt0, vt0, t0, v0 WHERE ((NOT (0.5926113547644256))) GROUP BY rt0.c1, rt0.c3, v0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, v0.c1, rt0.c0 FROM rt0, vt0, t0, v0 WHERE (((0.5926113547644256) ISNULL)) GROUP BY rt0.c1, rt0.c3, v0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, v0.c1, rt0.c0 FROM rt0, vt0, t0, v0 GROUP BY rt0.c1, rt0.c3, v0.c1, rt0.c0;
SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1;
SELECT rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 NOT INDEXED GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 HAVING TOTAL((~ (v0.c0))) UNION ALL SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 HAVING (NOT (TOTAL((~ (v0.c0))))) UNION ALL SELECT rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 HAVING ((TOTAL((~ (v0.c0)))) ISNULL);
SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1;
SELECT rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 NOT INDEXED GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 HAVING TOTAL((~ (v0.c0))) UNION ALL SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 HAVING (NOT (TOTAL((~ (v0.c0))))) UNION ALL SELECT rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 HAVING ((TOTAL((~ (v0.c0)))) ISNULL);
SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c1, v0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c1;
SELECT rt0.c1 FROM v0 FULL OUTER JOIN t0 ON HEX(DISTINCT CAST(rt0.c0 AS TEXT)) FULL OUTER JOIN vt0 ON LIKELY(CAST(v0.c1 AS INTEGER)) INNER JOIN rt0 ON NULL;
SELECT DISTINCT * FROM rt0 NOT INDEXED, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((x'6c35')OR((rt0.c2 IN ()))))AND(CAST(rt0.c2 AS REAL)))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (((((x'6c35')OR((rt0.c2 IN ()))))AND(CAST(rt0.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((((x'6c35')OR((rt0.c2 IN ()))))AND(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, v0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((NOT (t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((NOT (t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT ALL rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c3, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c3, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c3, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0;
SELECT ALL v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((((v0.c1))<=((v0.c1))) COLLATE BINARY) GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0 UNION SELECT v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((NOT ((((v0.c1))<=((v0.c1))) COLLATE BINARY))) GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0 UNION SELECT ALL v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((((((v0.c1))<=((v0.c1))) COLLATE BINARY) ISNULL)) GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0;
SELECT ALL v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, t0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT TOTAL((((v0.c0) BETWEEN (v0.c2) AND (146508962)) IN ())) FROM v0, t0 ORDER BY ((v0.c2 COLLATE NOCASE) ISNULL) ASC;
SELECT ALL t0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1, vt0.c0, vt0.c1, rt0.c3 FROM t0, v0, rt0 CROSS JOIN vt0 ON rt0.c2;
SELECT t0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1, vt0.c0, vt0.c1, rt0.c3 FROM t0, v0, rt0 CROSS JOIN vt0 ON rt0.c2 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))) AND (x''))) UNION ALL SELECT t0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1, vt0.c0, vt0.c1, rt0.c3 FROM t0, v0, rt0 CROSS JOIN vt0 ON rt0.c2 WHERE ((NOT (((CAST(rt0.c1 AS REAL)) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))) AND (x''))))) UNION ALL SELECT ALL t0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1, vt0.c0, vt0.c1, rt0.c3 FROM t0, v0, rt0 CROSS JOIN vt0 ON rt0.c2 WHERE (((((CAST(rt0.c1 AS REAL)) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))) AND (x''))) ISNULL));
SELECT ALL t0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1, vt0.c0, vt0.c1, rt0.c3 FROM t0, v0, rt0 CROSS JOIN vt0 ON rt0.c2;
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOTNULL);
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOTNULL) WHERE (HEX(((0X4d89e81f)<<(t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOTNULL) WHERE ((NOT (HEX(((0x4d89e81f)<<(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOTNULL) WHERE (((HEX(((0X4d89e81f)<<(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOTNULL);
SELECT vt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL vt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((vt0.c0)&(rt0.c2)) COLLATE NOCASE) GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT vt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (((vt0.c0)&(rt0.c2)) COLLATE NOCASE))) GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT vt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((vt0.c0)&(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT vt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c0, v0.c0, vt0.c0, rt0.c2, t0.c0, v0.c1 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, vt0.c0, rt0.c2, t0.c0, v0.c1;
SELECT ALL rt0.c0, v0.c0, vt0.c0, rt0.c2, t0.c0, v0.c1 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, vt0.c0, rt0.c2, t0.c0, v0.c1 HAVING MAX(GROUP_CONCAT(rt0.c4)) UNION ALL SELECT rt0.c0, v0.c0, vt0.c0, rt0.c2, t0.c0, v0.c1 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, vt0.c0, rt0.c2, t0.c0, v0.c1 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT rt0.c0, v0.c0, vt0.c0, rt0.c2, t0.c0, v0.c1 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, vt0.c0, rt0.c2, t0.c0, v0.c1 HAVING ((MAX(GROUP_CONCAT(rt0.c4))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0 WHERE ((+ (IFNULL(DISTINCT rt0.c2, rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0 WHERE ((NOT ((+ (IFNULL(DISTINCT rt0.c2, rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0 WHERE ((((+ (IFNULL(DISTINCT rt0.c2, rt0.c2)))) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0, t0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE (CHAR(CAST(rt0.c0 AS REAL))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((NOT (CHAR(CAST(rt0.c0 AS REAL))))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE (((CHAR(CAST(rt0.c0 AS REAL))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2 HAVING CAST(vt0.c1 AS REAL) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (CAST(vt0.c1 AS REAL))) UNION ALL SELECT v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2 HAVING ((CAST(vt0.c1 AS REAL)) ISNULL);
SELECT ALL v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2 HAVING CAST(vt0.c1 AS REAL) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (CAST(vt0.c1 AS REAL))) UNION ALL SELECT v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2 HAVING ((CAST(vt0.c1 AS REAL)) ISNULL);
SELECT ALL v0.c0, rt0.c2 FROM t0, rt0, v0, vt0 GROUP BY v0.c0, rt0.c2;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c1 THEN NULL ELSE v0.c1 END)OR('/3')))OR(v0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((CASE WHEN v0.c1 THEN NULL ELSE v0.c1 END)OR('/3')))OR(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0 WHERE (((((((CASE WHEN v0.c1 THEN NULL ELSE v0.c1 END)OR('/3')))OR(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c4, v0.c2, t0.c0, v0.c0, v0.c1, rt0.c0, vt0.c1 FROM t0, rt0, vt0, v0;
SELECT DISTINCT rt0.c2, rt0.c4, v0.c2, t0.c0, v0.c0, v0.c1, rt0.c0, vt0.c1 FROM t0, rt0, vt0, v0 WHERE (((((((((((((((NULL) IS FALSE))OR(((rt0.c4) NOT BETWEEN (t0.c0) AND (0.5549388875250701)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (v0.c2) AND (t0.c0)))))OR((~ (v0.c1)))))AND(CAST(rt0.c1 AS REAL))))OR(((vt0.c1) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c4, v0.c2, t0.c0, v0.c0, v0.c1, rt0.c0, vt0.c1 FROM t0, rt0, vt0, v0 WHERE ((NOT (((((((((((((((NULL) IS FALSE))OR(((rt0.c4) NOT BETWEEN (t0.c0) AND (0.5549388875250701)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (v0.c2) AND (t0.c0)))))OR((~ (v0.c1)))))AND(CAST(rt0.c1 AS REAL))))OR(((vt0.c1) NOT NULL)))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, v0.c2, t0.c0, v0.c0, v0.c1, rt0.c0, vt0.c1 FROM t0, rt0, vt0, v0 WHERE (((((((((((((((((NULL) IS FALSE))OR(((rt0.c4) NOT BETWEEN (t0.c0) AND (0.5549388875250701)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (v0.c2) AND (t0.c0)))))OR((~ (v0.c1)))))AND(CAST(rt0.c1 AS REAL))))OR(((vt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, v0.c2, t0.c0, v0.c0, v0.c1, rt0.c0, vt0.c1 FROM t0, rt0, vt0, v0;
SELECT ALL vt0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, t0, vt0 WHERE (((((v0.c0)LIKE(vt0.c0))) NOT BETWEEN (x'') AND ('0'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, t0, vt0 WHERE ((NOT (((((v0.c0)LIKE(vt0.c0))) NOT BETWEEN (x'') AND ('0'))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, t0, vt0 WHERE (((((((v0.c0)LIKE(vt0.c0))) NOT BETWEEN (x'') AND ('0'))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING CAST((+ (MIN(t0.c0))) AS INTEGER) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (CAST((+ (MIN(t0.c0))) AS INTEGER))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((CAST((+ (MIN(t0.c0))) AS INTEGER)) ISNULL);
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING CAST((+ (MIN(t0.c0))) AS INTEGER) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (CAST((+ (MIN(t0.c0))) AS INTEGER))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((CAST((+ (MIN(t0.c0))) AS INTEGER)) ISNULL);
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((- (t0.c0))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((- (t0.c0))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((- (t0.c0))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE ('-282297358') UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT ('-282297358'))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((('-282297358') ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((+ (vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((+ (vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0 HAVING '1104824754' UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0 HAVING (NOT ('1104824754')) UNION ALL SELECT rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0 HAVING (('1104824754') ISNULL);
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0 HAVING '1104824754' UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0 HAVING (NOT ('1104824754')) UNION ALL SELECT rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0 HAVING (('1104824754') ISNULL);
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (INSTR(vt0.c1, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c4)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (INSTR(vt0.c1, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c4)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((INSTR(vt0.c1, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c4)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((((NOT (rt0.c3))) NOTNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((((NOT (rt0.c3))) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((((((NOT (rt0.c3))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(t0.c0 AS NUMERIC) IN ()) INNER JOIN t0 ON (((('1355945183')<<(t0.c0)))>=(((rt0.c0) NOTNULL))) GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(t0.c0 AS NUMERIC) IN ()) INNER JOIN t0 ON (((('1355945183')<<(t0.c0)))>=(((rt0.c0) NOTNULL))) WHERE ((((((t0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0)))) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(-1662022004)))OR(0.24084922840464218)))AND(NULL))) AND (((rt0.c3)>(NULL))))) GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(t0.c0 AS NUMERIC) IN ()) INNER JOIN t0 ON (((('1355945183')<<(t0.c0)))>=(((rt0.c0) NOTNULL))) WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0)))) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(-1662022004)))OR(0.24084922840464218)))AND(NULL))) AND (((rt0.c3)>(NULL))))))) GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 UNION SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(t0.c0 AS NUMERIC) IN ()) INNER JOIN t0 ON (((('1355945183')<<(t0.c0)))>=(((rt0.c0) NOTNULL))) WHERE ((((((((t0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0)))) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(-1662022004)))OR(0.24084922840464218)))AND(NULL))) AND (((rt0.c3)>(NULL))))) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(t0.c0 AS NUMERIC) IN ()) INNER JOIN t0 ON (((('1355945183')<<(t0.c0)))>=(((rt0.c0) NOTNULL))) GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT MAX(0.5276306609556046) FROM rt0, v0, t0 ORDER BY ((v0.c0)%(highlight(rt0.c0, rt0.c0, v0.c0, rt0.c0))) ASC  NULLS LAST;
SELECT ALL vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0 FROM vt0, t0 CROSS JOIN v0 ON (NOT (CASE rt0.c0  WHEN v0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN v0.c1 THEN vt0.c0 ELSE rt0.c4 END)) FULL OUTER JOIN rt0 ON CAST(((((NULL)OR(x'')))AND(t0.c0)) AS NUMERIC);
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (v0.c1) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT rt0.c4, t0.c0 FROM t0, rt0 GROUP BY rt0.c4, t0.c0;
SELECT ALL rt0.c4, t0.c0 FROM t0, rt0 WHERE ((((+ (rt0.c0))) NOTNULL)) GROUP BY rt0.c4, t0.c0 UNION SELECT ALL rt0.c4, t0.c0 FROM t0, rt0 WHERE ((NOT ((((+ (rt0.c0))) NOTNULL)))) GROUP BY rt0.c4, t0.c0 UNION SELECT ALL rt0.c4, t0.c0 FROM t0, rt0 WHERE ((((((+ (rt0.c0))) NOTNULL)) ISNULL)) GROUP BY rt0.c4, t0.c0;
SELECT rt0.c4, t0.c0 FROM t0, rt0 GROUP BY rt0.c4, t0.c0;
SELECT ALL rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))=((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1;
SELECT ALL rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))=((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 HAVING vt0.c1 UNION ALL SELECT rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))=((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))==((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 HAVING ((vt0.c1) ISNULL);
SELECT ALL rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))=((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1;
SELECT ALL rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))=((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 HAVING vt0.c1 UNION ALL SELECT rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))=((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))==((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 HAVING ((vt0.c1) ISNULL);
SELECT ALL rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0))=((0.950130668909282))))OR((~ (rt0.c3)))))OR(rt0.c1)))OR(((vt0.c1) NOTNULL))))AND((rt0.c1 IN ()))) GROUP BY rt0.c4, v0.c2, v0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c3, rt0.c1, v0.c1;
SELECT ALL * FROM t0, rt0 NATURAL JOIN v0;
SELECT ALL * FROM t0, rt0 NATURAL JOIN v0 WHERE (0X4e3b7b7a) UNION ALL SELECT ALL * FROM t0, rt0 NATURAL JOIN v0 WHERE ((NOT (0X4e3b7b7a))) UNION ALL SELECT ALL * FROM t0, rt0 NATURAL JOIN v0 WHERE (((0X4e3b7b7a) ISNULL));
SELECT ALL * FROM t0, rt0 NATURAL JOIN v0;
SELECT DISTINCT vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 LEFT OUTER JOIN t0 ON '900515660';
SELECT DISTINCT vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 LEFT OUTER JOIN t0 ON '900515660' WHERE (CAST('-472876157' AS BLOB)) UNION SELECT DISTINCT vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 LEFT OUTER JOIN t0 ON '900515660' WHERE ((NOT (CAST('-472876157' AS BLOB)))) UNION SELECT DISTINCT vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 LEFT OUTER JOIN t0 ON '900515660' WHERE (((CAST('-472876157' AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 LEFT OUTER JOIN t0 ON '900515660';
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 WHERE (((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c1)))AND(x'ca6f'))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND ('0#'))) AND ((+ (t0.c0))))) GROUP BY rt0.c2, t0.c0 UNION SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c1)))AND(x'ca6f'))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND ('0#'))) AND ((+ (t0.c0))))))) GROUP BY rt0.c2, t0.c0 UNION SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c1)))AND(x'ca6f'))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND ('0#'))) AND ((+ (t0.c0))))) ISNULL)) GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING NULL UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((NULL) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING NULL UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((NULL) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (ROUND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END, CAST(rt0.c4 AS NUMERIC))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (ROUND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END, CAST(rt0.c4 AS NUMERIC))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((ROUND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END, CAST(rt0.c4 AS NUMERIC))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c1, rt0.c1, vt0.c0, t0.c0, vt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0, vt0, t0, rt0;
SELECT DISTINCT v0.c1, rt0.c1, vt0.c0, t0.c0, vt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0, vt0, t0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2)) BETWEEN (v0.c2) AND (json_type(vt0.c1)))) UNION SELECT DISTINCT v0.c1, rt0.c1, vt0.c0, t0.c0, vt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0, vt0, t0, rt0 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(rt0.c2)) BETWEEN (v0.c2) AND (json_type(vt0.c1)))))) UNION SELECT DISTINCT v0.c1, rt0.c1, vt0.c0, t0.c0, vt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0, vt0, t0, rt0 WHERE (((((SQLITE_COMPILEOPTION_GET(rt0.c2)) BETWEEN (v0.c2) AND (json_type(vt0.c1)))) ISNULL));
SELECT v0.c2, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c2;
SELECT v0.c2, rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c3)))OR('1936395659'))) BETWEEN ((rt0.c0 IN ())) AND ((NOT (v0.c2))))) GROUP BY v0.c2, rt0.c2 UNION SELECT v0.c2, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c3)))OR('1936395659'))) BETWEEN ((rt0.c0 IN ())) AND ((NOT (v0.c2))))))) GROUP BY v0.c2, rt0.c2 UNION SELECT ALL v0.c2, rt0.c2 FROM v0, rt0 WHERE (((((((((rt0.c0)AND(rt0.c3)))OR('1936395659'))) BETWEEN ((rt0.c0 IN ())) AND ((NOT (v0.c2))))) ISNULL)) GROUP BY v0.c2, rt0.c2;
SELECT v0.c2, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c2;
SELECT v0.c1, v0.c0, vt0.c0, vt0.c1, v0.c2, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, v0.c2, t0.c0;
SELECT v0.c1, v0.c0, vt0.c0, vt0.c1, v0.c2, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, v0.c2, t0.c0 HAVING ((GROUP_CONCAT(COUNT(MAX(GROUP_CONCAT(v0.c0))))) NOTNULL) UNION ALL SELECT v0.c1, v0.c0, vt0.c0, vt0.c1, v0.c2, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, v0.c2, t0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(MAX(GROUP_CONCAT(v0.c0))))) NOTNULL))) UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, vt0.c1, v0.c2, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, v0.c0, vt0.c0, vt0.c1, v0.c2, t0.c0 HAVING ((((GROUP_CONCAT(COUNT(MAX(GROUP_CONCAT(v0.c0))))) NOTNULL)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN '-778237533' ELSE vt0.c1 END) NOT NULL)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN '-778237533' ELSE vt0.c1 END) NOT NULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN '-778237533' ELSE vt0.c1 END) NOT NULL)) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((((vt0.c0, v0.c1, vt0.c1)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c1)) AND ((vt0.c1, v0.c2, v0.c0))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (v0.c1))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((((vt0.c0, v0.c1, vt0.c1)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c1)) AND ((vt0.c1, v0.c2, v0.c0))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (v0.c1))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((vt0.c0, v0.c1, vt0.c1)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c1)) AND ((vt0.c1, v0.c2, v0.c0))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0;
SELECT rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0 FROM v0, t0, rt0, vt0 WHERE (((((0X6ddbcb4c IN ())))<=((((v0.c2)LIKE(vt0.c0)))))) GROUP BY rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0 UNION SELECT ALL rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0 FROM v0, t0, rt0, vt0 WHERE ((NOT (((((0x6ddbcb4c IN ())))<=((((v0.c2)LIKE(vt0.c0)))))))) GROUP BY rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0 UNION SELECT ALL rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0 FROM v0, t0, rt0, vt0 WHERE (((((((0X6ddbcb4c IN ())))<=((((v0.c2)LIKE(vt0.c0)))))) ISNULL)) GROUP BY rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0;
SELECT ALL rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c4, t0.c0;
SELECT ALL rt0.c4, v0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c4, v0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2, v0.c0 HAVING ((((TOTAL(v0.c1))|(t0.c0))) NOT BETWEEN (((GROUP_CONCAT(0.4291300585255795))||(-537097825))) AND (GROUP_CONCAT(MIN(COUNT(*))))) UNION ALL SELECT ALL rt0.c4, v0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2, v0.c0 HAVING (NOT (((((TOTAL(v0.c1))|(t0.c0))) NOT BETWEEN (((GROUP_CONCAT(0.4291300585255795))||(-537097825))) AND (GROUP_CONCAT(MIN(COUNT(*))))))) UNION ALL SELECT rt0.c4, v0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2, v0.c0 HAVING ((((((TOTAL(v0.c1))|(t0.c0))) NOT BETWEEN (((GROUP_CONCAT(0.4291300585255795))||(-537097825))) AND (GROUP_CONCAT(MIN(COUNT(*)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(CASE WHEN v0.c2 THEN v0.c2 END AS BLOB)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(CASE WHEN v0.c2 THEN v0.c2 END AS BLOB)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(CASE WHEN v0.c2 THEN v0.c2 END AS BLOB)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0, v0, t0, rt0;
SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE (((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((rt0.c4)/(t0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE ((NOT (((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((rt0.c4)/(t0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE (((((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((rt0.c4)/(t0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0, rt0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 NOT INDEXED WHERE ((((1.143440886E9)-(v0.c0)) IN ((- (v0.c1))))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 WHERE ((NOT ((((1.143440886E9)-(v0.c0)) IN ((- (v0.c1))))))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 WHERE ((((((1.143440886E9)-(v0.c0)) IN ((- (v0.c1))))) ISNULL)) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, t0.c0, v0.c2, v0.c1 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c1, t0.c0, v0.c2, v0.c1;
SELECT v0.c0, vt0.c1, t0.c0, v0.c2, v0.c1 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c1, t0.c0, v0.c2, v0.c1 HAVING TOTAL(MIN(t0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c1, t0.c0, v0.c2, v0.c1 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c1, t0.c0, v0.c2, v0.c1 HAVING (NOT (TOTAL(MIN(t0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c1, t0.c0, v0.c2, v0.c1 FROM vt0, v0, t0 GROUP BY v0.c0, vt0.c1, t0.c0, v0.c2, v0.c1 HAVING ((TOTAL(MIN(t0.c0))) ISNULL);
SELECT ALL TOTAL(((rt0.c4)||(v0.c1)) COLLATE RTRIM COLLATE BINARY) FROM v0, rt0, vt0, t0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, v0.c2, vt0.c1, v0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c1 FROM vt0, v0, rt0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, v0.c2, vt0.c1, v0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c1 FROM vt0, v0, rt0 WHERE (2110960388) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, v0.c2, vt0.c1, v0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c1 FROM vt0, v0, rt0 WHERE ((NOT (2110960388))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c0, v0.c2, vt0.c1, v0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c1 FROM vt0, v0, rt0 WHERE (((2110960388) ISNULL));
SELECT ALL vt0.c0, rt0.c3, rt0.c0, v0.c2, vt0.c1, v0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, t0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, t0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))*((- (rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, t0, rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))*((- (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, t0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))*((- (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, t0, rt0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 WHERE (TRIM(((((((((x'')OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))OR(v0.c2)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0 WHERE ((NOT (TRIM(((((((((x'')OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))OR(v0.c2)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0 WHERE (((TRIM(((((((((x'')OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))OR(v0.c2)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((rt0.c0) IS TRUE))>=(CASE rt0.c2  WHEN MIN(MAX(MIN('180131470'))) THEN rt0.c1 END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((rt0.c0) IS TRUE))>=(CASE rt0.c2  WHEN MIN(MAX(MIN('180131470'))) THEN rt0.c1 END)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((rt0.c0) IS TRUE))>=(CASE rt0.c2  WHEN MIN(MAX(MIN('180131470'))) THEN rt0.c1 END))) ISNULL);
SELECT ALL * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE (((CAST(rt0.c2 AS BLOB))+((+ (rt0.c1))))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB))+((+ (rt0.c1))))))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE (((((CAST(rt0.c2 AS BLOB))+((+ (rt0.c1))))) ISNULL));
SELECT ALL * FROM t0, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL) COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2) ISNULL) COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) ISNULL) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1 FROM t0, v0, vt0, rt0 GROUP BY rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1;
SELECT rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1 FROM t0, v0, vt0, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))) GROUP BY rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1 UNION SELECT ALL rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1 FROM t0, v0, vt0, rt0 WHERE ((NOT ((NOT (((rt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))))) GROUP BY rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1 UNION SELECT ALL rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1 FROM t0, v0, vt0, rt0 WHERE ((((NOT (((rt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))) ISNULL)) GROUP BY rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1;
SELECT rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1 FROM t0, v0, vt0, rt0 GROUP BY rt0.c1, v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c1, v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(AVG(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(AVG(t0.c0))) ISNULL);
SELECT ALL * FROM v0, t0, rt0;
SELECT * FROM v0, t0, rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c2) AND (0.372009091496743)) AS NUMERIC)) UNION ALL SELECT * FROM v0, t0, rt0 WHERE ((NOT (CAST(((rt0.c4) NOT BETWEEN (rt0.c2) AND (0.372009091496743)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE (((CAST(((rt0.c4) NOT BETWEEN (rt0.c2) AND (0.372009091496743)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0, t0, rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0 FULL OUTER JOIN t0 ON (((rt0.c3 IN ())) NOT BETWEEN (CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END) AND (((((rt0.c2)AND(rt0.c3)))AND(vt0.c0)))) FULL OUTER JOIN v0 ON ((((CAST(t0.c0 AS INTEGER))AND(NULL)))AND((vt0.c1 IN (v0.c0, rt0.c1))));
SELECT t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 GROUP BY t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0;
SELECT t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE (CAST(0.8610081603591008 AS BLOB)) GROUP BY t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0 UNION SELECT ALL t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE ((NOT (CAST(0.8610081603591008 AS BLOB)))) GROUP BY t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0 UNION SELECT t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE (((CAST(0.8610081603591008 AS BLOB)) ISNULL)) GROUP BY t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0;
SELECT t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 GROUP BY t0.c0, v0.c0, rt0.c3, rt0.c1, v0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4 HAVING AVG(((v0.c1)<=(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4 HAVING (NOT (AVG(((v0.c1)<=(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4 HAVING ((AVG(((v0.c1)<=(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4 HAVING AVG(((v0.c1)<=(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4 HAVING (NOT (AVG(((v0.c1)<=(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4 HAVING ((AVG(((v0.c1)<=(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4;
SELECT * FROM rt0, t0, vt0, v0;
SELECT * FROM rt0, t0, vt0, v0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, t0, vt0, v0 WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, t0, vt0, v0 WHERE (((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ISNULL));
SELECT * FROM rt0, t0, vt0, v0;
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))>=((NOT (v0.c0)))) FULL OUTER JOIN vt0 ON CAST(LTRIM('D ') AS REAL) INNER JOIN v0 ON rt0.c1;
SELECT ALL vt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c0, rt0.c2, t0.c0, vt0.c1 FROM v0 CROSS JOIN t0 ON (((vt0.c0, rt0.c2, 'j묮ႎ')) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)), 'ercV', rt0.c3)) AND (((- (rt0.c1)), (v0.c0 IN (rt0.c2)), CASE WHEN NULL THEN rt0.c3 WHEN vt0.c0 THEN v0.c1 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c2 THEN t0.c0 ELSE v0.c2 END))) FULL OUTER JOIN rt0 ON ((((((rt0.c4) IS TRUE))AND((v0.c0 IN ()))))AND(t0.c0)) FULL OUTER JOIN vt0 ON UNLIKELY((NOT (rt0.c3))) GROUP BY vt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c0, rt0.c2, t0.c0, vt0.c1;
SELECT ALL v0.c2, rt0.c1, v0.c1 FROM v0, vt0, rt0, t0 GROUP BY v0.c2, rt0.c1, v0.c1;
SELECT ALL v0.c2, rt0.c1, v0.c1 FROM v0, vt0, rt0, t0 GROUP BY v0.c2, rt0.c1, v0.c1 HAVING (NOT (CASE WHEN AVG(SUM(v0.c2)) THEN rt0.c4 WHEN GROUP_CONCAT(x'') THEN vt0.c1 WHEN '1708792418' THEN TOTAL(v0.c1) WHEN MAX(COUNT(COUNT(MAX(rt0.c0)))) THEN TOTAL(SUM(rt0.c3)) WHEN v0.c2 THEN TOTAL(v0.c2) ELSE MIN(TOTAL(rt0.c0)) END)) UNION ALL SELECT v0.c2, rt0.c1, v0.c1 FROM v0, vt0, rt0, t0 GROUP BY v0.c2, rt0.c1, v0.c1 HAVING (NOT ((NOT (CASE WHEN AVG(SUM(v0.c2)) THEN rt0.c4 WHEN GROUP_CONCAT(x'') THEN vt0.c1 WHEN '1708792418' THEN TOTAL(v0.c1) WHEN MAX(COUNT(COUNT(MAX(rt0.c0)))) THEN TOTAL(SUM(rt0.c3)) WHEN v0.c2 THEN TOTAL(v0.c2) ELSE MIN(TOTAL(rt0.c0)) END)))) UNION ALL SELECT v0.c2, rt0.c1, v0.c1 FROM v0, vt0, rt0, t0 GROUP BY v0.c2, rt0.c1, v0.c1 HAVING (((NOT (CASE WHEN AVG(SUM(v0.c2)) THEN rt0.c4 WHEN GROUP_CONCAT(x'') THEN vt0.c1 WHEN '1708792418' THEN TOTAL(v0.c1) WHEN MAX(COUNT(COUNT(MAX(rt0.c0)))) THEN TOTAL(SUM(rt0.c3)) WHEN v0.c2 THEN TOTAL(v0.c2) ELSE MIN(TOTAL(rt0.c0)) END))) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM rt0, t0, vt0;
SELECT t0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER)) UNION ALL SELECT t0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS INTEGER)))) UNION ALL SELECT t0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE (((CAST((rt0.c2 IN ()) AS INTEGER)) ISNULL));
SELECT ALL t0.c0, vt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CASE WHEN CASE 7.5415933E7  WHEN v0.c2 THEN v0.c1 END THEN NULL WHEN 2.88442816E8 THEN ((v0.c1)>(v0.c2)) WHEN (NOT ('-249102651')) THEN v0.c2 COLLATE BINARY END) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CASE WHEN CASE 7.5415933E7  WHEN v0.c2 THEN v0.c1 END THEN NULL WHEN 2.88442816E8 THEN ((v0.c1)>(v0.c2)) WHEN (NOT ('-249102651')) THEN v0.c2 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CASE WHEN CASE 7.5415933E7  WHEN v0.c2 THEN v0.c1 END THEN NULL WHEN 2.88442816E8 THEN ((v0.c1)>(v0.c2)) WHEN (NOT ('-249102651')) THEN v0.c2 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 WHERE (v0.c1) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT (v0.c1))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE (((v0.c1) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL vt0.c0 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING TOTAL((((rt0.c4)) BETWEEN ((MAX(v0.c2))) AND ((v0.c0)))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((((rt0.c4)) BETWEEN ((MAX(v0.c2))) AND ((v0.c0)))))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING ((TOTAL((((rt0.c4)) BETWEEN ((MAX(v0.c2))) AND ((v0.c0))))) ISNULL);
SELECT * FROM t0, rt0, vt0;
SELECT * FROM t0, rt0, vt0 WHERE (rt0.c3) UNION ALL SELECT * FROM t0, rt0, vt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c3) ISNULL));
SELECT * FROM t0, rt0, vt0;
SELECT DISTINCT v0.c1, v0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT v0.c1, v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((~ (((t0.c0) ISNULL)))) UNION SELECT DISTINCT v0.c1, v0.c2, v0.c0, t0.c0 FROM v0, t0 NOT INDEXED WHERE ((NOT ((~ (((t0.c0) ISNULL)))))) UNION SELECT DISTINCT v0.c1, v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((((~ (((t0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT v0.c1, v0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 WHERE ((((('-1528364950')>=(v0.c0))) BETWEEN (TRIM(DISTINCT v0.c0, v0.c2)) AND (t0.c0 COLLATE NOCASE))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 UNION SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 WHERE ((NOT ((((('-1528364950')>=(v0.c0))) BETWEEN (TRIM(DISTINCT v0.c0, v0.c2)) AND (t0.c0 COLLATE NOCASE))))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 UNION SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 WHERE ((((((('-1528364950')>=(v0.c0))) BETWEEN (TRIM(DISTINCT v0.c0, v0.c2)) AND (t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY v0.c0, v0.c1 HAVING ((rt0.c2) BETWEEN (((GROUP_CONCAT(COUNT(*))) BETWEEN (rt0.c1) AND (GROUP_CONCAT(MIN(v0.c0))))) AND (LIKELIHOOD(TOTAL(v0.c0), 0.5406379353202466))) UNION ALL SELECT v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY v0.c0, v0.c1 HAVING (NOT (((rt0.c2) BETWEEN (((GROUP_CONCAT(COUNT(*))) BETWEEN (rt0.c1) AND (GROUP_CONCAT(MIN(v0.c0))))) AND (LIKELIHOOD(TOTAL(v0.c0), 0.5406379353202466))))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY v0.c0, v0.c1 HAVING ((((rt0.c2) BETWEEN (((GROUP_CONCAT(COUNT(*))) BETWEEN (rt0.c1) AND (GROUP_CONCAT(MIN(v0.c0))))) AND (LIKELIHOOD(TOTAL(v0.c0), 0.5406379353202466)))) ISNULL);
SELECT ALL vt0.c1, rt0.c4 FROM vt0, rt0, v0;
SELECT vt0.c1, rt0.c4 FROM vt0, rt0, v0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c1, rt0.c4 FROM vt0, rt0, v0 WHERE ((NOT (((vt0.c0) NOTNULL) COLLATE NOCASE))) UNION ALL SELECT vt0.c1, rt0.c4 FROM vt0, rt0, v0 WHERE (((((vt0.c0) NOTNULL) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c1, rt0.c4 FROM vt0, rt0, v0;
SELECT DISTINCT v0.c2 FROM v0;
SELECT DISTINCT v0.c2 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c2 FROM v0;
SELECT ALL vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON t0.c0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE (((((vt0.c0) NOTNULL))>(((vt0.c1) ISNULL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE ((NOT (((((vt0.c0) NOTNULL))>(((vt0.c1) ISNULL)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE (((((((vt0.c0) NOTNULL))>(((vt0.c1) ISNULL)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON t0.c0 GROUP BY vt0.c1;
SELECT v0.c2, vt0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((((rt0.c4) IS FALSE)) BETWEEN (LIKE(rt0.c2, rt0.c1, '1')) AND (((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))) GROUP BY v0.c2, vt0.c0;
SELECT ALL v0.c2, vt0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((((rt0.c4) IS FALSE)) BETWEEN (LIKE(rt0.c2, rt0.c1, '1')) AND (((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))) GROUP BY v0.c2, vt0.c0 HAVING GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT v0.c2, vt0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((((rt0.c4) IS FALSE)) BETWEEN (LIKE(rt0.c2, rt0.c1, '1')) AND (((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))) GROUP BY v0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT v0.c2, vt0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((((rt0.c4) IS FALSE)) BETWEEN (LIKE(rt0.c2, rt0.c1, '1')) AND (((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))) GROUP BY v0.c2, vt0.c0 HAVING ((GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))  WHEN (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CASE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))  WHEN (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CASE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))  WHEN (((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT v0.c2 FROM t0, v0;
SELECT DISTINCT v0.c2 FROM t0, v0 WHERE (PRINTF((((t0.c0))<>((v0.c2))))) UNION SELECT DISTINCT v0.c2 FROM t0, v0 WHERE ((NOT (PRINTF((((t0.c0))<>((v0.c2))))))) UNION SELECT DISTINCT v0.c2 FROM t0, v0 WHERE (((PRINTF((((t0.c0))<>((v0.c2))))) ISNULL));
SELECT DISTINCT v0.c2 FROM t0, v0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0;
SELECT rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM t0, rt0, vt0, v0 WHERE ((('l') BETWEEN ((- (rt0.c0))) AND ((rt0.c3 IN ())))) GROUP BY rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM t0, rt0, vt0, v0 WHERE ((NOT ((('l') BETWEEN ((- (rt0.c0))) AND ((rt0.c3 IN ())))))) GROUP BY rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM t0, rt0, vt0, v0 WHERE ((((('l') BETWEEN ((- (rt0.c0))) AND ((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c0, vt0.c0, rt0.c2, t0.c0, vt0.c1, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((((v0.c1)OR(v0.c0)))OR(MIN(v0.c1))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (((((v0.c1)OR(v0.c0)))OR(MIN(v0.c1))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((((((v0.c1)OR(v0.c0)))OR(MIN(v0.c1)))) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((((v0.c1)OR(v0.c0)))OR(MIN(v0.c1))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (((((v0.c1)OR(v0.c0)))OR(MIN(v0.c1))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((((((v0.c1)OR(v0.c0)))OR(MIN(v0.c1)))) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))>=('-2032118627'))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))>=('-2032118627'))))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))>=('-2032118627'))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c3, v0.c1, vt0.c1, t0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON (+ (((v0.c1)!=(rt0.c4)))) FULL OUTER JOIN rt0 ON (((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN (((((rt0.c2)OR(t0.c0)))OR(v0.c1)), ((vt0.c1)>(t0.c0))));
SELECT rt0.c3, rt0.c0, v0.c0, t0.c0, v0.c2, rt0.c2 FROM t0 CROSS JOIN v0 ON ((vt0.c1) NOTNULL) RIGHT OUTER JOIN vt0 ON ((((-1866988238) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT NULL) CROSS JOIN rt0 ON (~ (rt0.c3)) GROUP BY rt0.c3, rt0.c0, v0.c0, t0.c0, v0.c2, rt0.c2;
SELECT ALL rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2;
SELECT ALL rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2 HAVING ((CAST(rt0.c1 AS TEXT)) IS FALSE) UNION ALL SELECT rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2 HAVING (NOT (((CAST(rt0.c1 AS TEXT)) IS FALSE))) UNION ALL SELECT rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2 HAVING ((((CAST(rt0.c1 AS TEXT)) IS FALSE)) ISNULL);
SELECT ALL rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2;
SELECT ALL rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2 HAVING ((CAST(rt0.c1 AS TEXT)) IS FALSE) UNION ALL SELECT rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2 HAVING (NOT (((CAST(rt0.c1 AS TEXT)) IS FALSE))) UNION ALL SELECT rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2 HAVING ((((CAST(rt0.c1 AS TEXT)) IS FALSE)) ISNULL);
SELECT ALL rt0.c3, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c2;
SELECT ALL MAX((CAST(rt0.c2 AS REAL) IN (((rt0.c4) BETWEEN (NULL) AND (rt0.c0)), ((rt0.c4)OR('	'))))) FROM rt0;
SELECT ALL * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((CASE v0.c2  WHEN vt0.c1 THEN rt0.c0 END)>>(rt0.c3))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (((CASE v0.c2  WHEN vt0.c1 THEN rt0.c0 END)>>(rt0.c3))))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE (((((CASE v0.c2  WHEN vt0.c1 THEN rt0.c0 END)>>(rt0.c3))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT t0.c0, v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON 1652322217;
SELECT DISTINCT t0.c0, v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON 1652322217 WHERE (((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END) IS TRUE)) UNION SELECT DISTINCT t0.c0, v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON 1652322217 WHERE ((NOT (((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END) IS TRUE)))) UNION SELECT DISTINCT t0.c0, v0.c2, v0.c1 FROM t0 NOT INDEXED CROSS JOIN v0 ON 1652322217 WHERE (((((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0, v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON 1652322217;
SELECT v0.c1, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((v0.c2)>>(CAST(vt0.c0 AS BLOB))) GROUP BY v0.c1, vt0.c1;
SELECT v0.c1, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((v0.c2)>>(CAST(vt0.c0 AS BLOB))) WHERE (((x'')<=(v0.c2))) GROUP BY v0.c1, vt0.c1 UNION SELECT v0.c1, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((v0.c2)>>(CAST(vt0.c0 AS BLOB))) WHERE ((NOT (((x'')<=(v0.c2))))) GROUP BY v0.c1, vt0.c1 UNION SELECT v0.c1, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((v0.c2)>>(CAST(vt0.c0 AS BLOB))) WHERE (((((x'')<=(v0.c2))) ISNULL)) GROUP BY v0.c1, vt0.c1;
SELECT v0.c1, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((v0.c2)>>(CAST(vt0.c0 AS BLOB))) GROUP BY v0.c1, vt0.c1;
SELECT ALL v0.c2 FROM vt0, rt0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM vt0, rt0, v0 GROUP BY v0.c2 HAVING CASE WHEN MAX(COUNT(v0.c1)) THEN AVG('1263072158') END UNION ALL SELECT ALL v0.c2 FROM vt0, rt0, v0 GROUP BY v0.c2 HAVING (NOT (CASE WHEN MAX(COUNT(v0.c1)) THEN AVG('1263072158') END)) UNION ALL SELECT v0.c2 FROM vt0, rt0, v0 GROUP BY v0.c2 HAVING ((CASE WHEN MAX(COUNT(v0.c1)) THEN AVG('1263072158') END) ISNULL);
SELECT ALL * FROM rt0, v0, vt0, t0;
SELECT * FROM rt0, v0, vt0, t0 WHERE (CASE COALESCE(DISTINCT v0.c1, rt0.c3)  WHEN (NULL IN ()) THEN CAST('1109068635' AS INTEGER) END) UNION ALL SELECT ALL * FROM rt0, v0, vt0, t0 WHERE ((NOT (CASE COALESCE(DISTINCT v0.c1, rt0.c3)  WHEN (NULL IN ()) THEN CAST('1109068635' AS INTEGER) END))) UNION ALL SELECT ALL * FROM rt0, v0, vt0, t0 WHERE (((CASE COALESCE(DISTINCT v0.c1, rt0.c3)  WHEN (NULL IN ()) THEN CAST('1109068635' AS INTEGER) END) ISNULL));
SELECT ALL * FROM rt0, v0, vt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0;
SELECT v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))OR((((t0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c2, v0.c2, 954372307)) AND ((v0.c1, v0.c1, v0.c0))))))AND(v0.c2 COLLATE BINARY))) GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 UNION SELECT ALL v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (((((((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))OR((((t0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c2, v0.c2, 954372307)) AND ((v0.c1, v0.c1, v0.c0))))))AND(v0.c2 COLLATE BINARY))))) GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 UNION SELECT v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((((((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))OR((((t0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c2, v0.c2, 954372307)) AND ((v0.c1, v0.c1, v0.c0))))))AND(v0.c2 COLLATE BINARY))) ISNULL)) GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0;
SELECT v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2, vt0.c0, v0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CAST(((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c2)))AND(vt0.c1)))AND(rt0.c2)) AS BLOB)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c2)))AND(vt0.c1)))AND(rt0.c2)) AS BLOB)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CAST(((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c2)))AND(vt0.c1)))AND(rt0.c2)) AS BLOB)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (v0.c2) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL vt0.c1, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c1;
SELECT vt0.c1, v0.c1 FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c2)GLOB(vt0.c0)))))) GROUP BY vt0.c1, v0.c1 UNION SELECT ALL vt0.c1, v0.c1 FROM vt0, v0 WHERE ((NOT ((((v0.c1)) BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c2)GLOB(vt0.c0)))))))) GROUP BY vt0.c1, v0.c1 UNION SELECT vt0.c1, v0.c1 FROM vt0, v0 NOT INDEXED WHERE ((((((v0.c1)) BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c2)GLOB(vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, v0.c1;
SELECT ALL vt0.c1, v0.c1 FROM vt0, v0 GROUP BY vt0.c1, v0.c1;
SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG((+ (rt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG((+ (rt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG((+ (rt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG((+ (rt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG((+ (rt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG((+ (rt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT MAX(1991673983) FROM v0, vt0;
SELECT * FROM rt0, vt0, t0;
SELECT * FROM rt0, vt0, t0 WHERE (((vt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE ((NOT (((vt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE (((((vt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE ((NOT (((t0.c0) BETWEEN (v0.c2) AND (x'69a7d8df'))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE ((NOT ((NOT (((t0.c0) BETWEEN (v0.c2) AND (x'69a7d8df'))))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE ((((NOT (((t0.c0) BETWEEN (v0.c2) AND (x'69a7d8df'))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE ('0.4459938294123197') GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT ('0.4459938294123197'))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE ((('0.4459938294123197') ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0;
SELECT rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 HAVING MAX(rt0.c4) COLLATE NOCASE UNION ALL SELECT rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 HAVING (NOT (MAX(rt0.c4) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 HAVING ((MAX(rt0.c4) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0;
SELECT rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 HAVING MAX(rt0.c4) COLLATE NOCASE UNION ALL SELECT rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 HAVING (NOT (MAX(rt0.c4) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 HAVING ((MAX(rt0.c4) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c4, v0.c1, v0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((UPPER(v0.c1)) NOTNULL)) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (((UPPER(v0.c1)) NOTNULL)))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((UPPER(v0.c1)) NOTNULL)) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c2, t0.c0, v0.c1, vt0.c1 FROM v0 INNER JOIN t0 ON (((((((((((v0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((NOT (t0.c0)))))AND(((((v0.c0)OR(v0.c1)))OR(v0.c0)))))OR(((v0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN '1306851701' WHEN v0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 END)) LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END)&(((v0.c2)AND(t0.c0))));
SELECT DISTINCT vt0.c0, v0.c2, t0.c0, v0.c1, vt0.c1 FROM v0 INNER JOIN t0 ON (((((((((((v0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((NOT (t0.c0)))))AND(((((v0.c0)OR(v0.c1)))OR(v0.c0)))))OR(((v0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN '1306851701' WHEN v0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 END)) LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END)&(((v0.c2)AND(t0.c0)))) WHERE (x'') UNION SELECT DISTINCT vt0.c0, v0.c2, t0.c0, v0.c1, vt0.c1 FROM v0 INNER JOIN t0 ON (((((((((((v0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((NOT (t0.c0)))))AND(((((v0.c0)OR(v0.c1)))OR(v0.c0)))))OR(((v0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN '1306851701' WHEN v0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 END)) LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END)&(((v0.c2)AND(t0.c0)))) WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0, v0.c2, t0.c0, v0.c1, vt0.c1 FROM v0 INNER JOIN t0 ON (((((((((((v0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((NOT (t0.c0)))))AND(((((v0.c0)OR(v0.c1)))OR(v0.c0)))))OR(((v0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN '1306851701' WHEN v0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 END)) LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END)&(((v0.c2)AND(t0.c0)))) WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0, v0.c2, t0.c0, v0.c1, vt0.c1 FROM v0 INNER JOIN t0 ON (((((((((((v0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((NOT (t0.c0)))))AND(((((v0.c0)OR(v0.c1)))OR(v0.c0)))))OR(((v0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN '1306851701' WHEN v0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 END)) LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END)&(((v0.c2)AND(t0.c0))));
SELECT ALL vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0 FROM v0, vt0, t0 INNER JOIN rt0 ON (((rt0.c2 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN rt0.c3 WHEN 0.9229688579378689 THEN v0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c4 THEN 'fa+V' END, ((v0.c1)|(rt0.c1))))=((('-396218476' IN ()), ((t0.c0)AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c3)))))) GROUP BY vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0;
SELECT ALL vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0 FROM v0, vt0, t0 INNER JOIN rt0 ON (((rt0.c2 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN rt0.c3 WHEN 0.9229688579378689 THEN v0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c4 THEN 'fa+V' END, ((v0.c1)|(rt0.c1))))==((('-396218476' IN ()), ((t0.c0)AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c3)))))) WHERE (rt0.c2) GROUP BY vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0 UNION SELECT vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0 FROM v0, vt0, t0 INNER JOIN rt0 ON (((rt0.c2 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN rt0.c3 WHEN 0.9229688579378689 THEN v0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c4 THEN 'fa+V' END, ((v0.c1)|(rt0.c1))))==((('-396218476' IN ()), ((t0.c0)AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c3)))))) WHERE ((NOT (rt0.c2))) GROUP BY vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0 UNION SELECT vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0 FROM v0, vt0, t0 INNER JOIN rt0 ON (((rt0.c2 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN rt0.c3 WHEN 0.9229688579378689 THEN v0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c4 THEN 'fa+V' END, ((v0.c1)|(rt0.c1))))==((('-396218476' IN ()), ((t0.c0)AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c3)))))) WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0;
SELECT ALL vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0 FROM v0, vt0, t0 INNER JOIN rt0 ON (((rt0.c2 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN rt0.c3 WHEN 0.9229688579378689 THEN v0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c4 THEN 'fa+V' END, ((v0.c1)|(rt0.c1))))=((('-396218476' IN ()), ((t0.c0)AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c3)))))) GROUP BY vt0.c0, rt0.c0, vt0.c1, v0.c2, rt0.c3, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(MAX(MAX(SUM(AVG(MAX(COUNT('YY'))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(MAX(SUM(AVG(MAX(COUNT('YY'))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MAX(MAX(SUM(AVG(MAX(COUNT('YY')))))))) ISNULL);
SELECT ALL v0.c1, vt0.c1, t0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE NOCASE) IS TRUE) FULL OUTER JOIN t0 ON ((((rt0.c2)<<(v0.c0))) NOT BETWEEN ((('-797410671')IS NOT(rt0.c4))) AND (((((vt0.c1)AND(rt0.c2)))AND(vt0.c0)))) CROSS JOIN vt0 ON 0.7610664047361853;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((((((rt0.c1))<=((rt0.c3))))AND(((rt0.c2)>>(rt0.c2)))))AND(0.26694302732058095)))AND(t0.c0 COLLATE BINARY)))OR(CAST(rt0.c3 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((((((((((rt0.c1))<=((rt0.c3))))AND(((rt0.c2)>>(rt0.c2)))))AND(0.26694302732058095)))AND(t0.c0 COLLATE BINARY)))OR(CAST(rt0.c3 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((((((((rt0.c1))<=((rt0.c3))))AND(((rt0.c2)>>(rt0.c2)))))AND(0.26694302732058095)))AND(t0.c0 COLLATE BINARY)))OR(CAST(rt0.c3 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, t0, rt0 NOT INDEXED GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, t0, rt0 WHERE ((((NOT (v0.c0)))AND(LIKELY(DISTINCT t0.c0)))) GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, t0, rt0 WHERE ((NOT ((((NOT (v0.c0)))AND(LIKELY(DISTINCT t0.c0)))))) GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, t0, rt0 WHERE ((((((NOT (v0.c0)))AND(LIKELY(DISTINCT t0.c0)))) ISNULL)) GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, t0, rt0 NOT INDEXED GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING MAX(SUM(COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (MAX(SUM(COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((MAX(SUM(COUNT(COUNT(*))))) ISNULL);
SELECT SUM(((((NULL)/(v0.c1)))<(UNLIKELY(DISTINCT v0.c2)))) FROM v0, t0, rt0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)+(t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)+(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)+(t0.c0))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c1, vt0.c1, v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c1, vt0.c1, v0.c0 FROM v0, vt0 WHERE ((('YH')%((((vt0.c0, v0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((v0.c1, v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c1, vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT ((('YH')%((((vt0.c0, v0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((v0.c1, v0.c0, v0.c0)))))))) UNION SELECT DISTINCT v0.c1, vt0.c1, v0.c0 FROM v0, vt0 WHERE ((((('YH')%((((vt0.c0, v0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((v0.c1, v0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c1, vt0.c1, v0.c0 FROM v0, vt0;
SELECT ALL t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0 FROM t0, v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c1) AND ('vlt\r_n枆')))OR(((vt0.c1) ISNULL))) GROUP BY t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0;
SELECT ALL t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0 FROM t0, v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c1) AND ('vlt\r_n枆')))OR(((vt0.c1) ISNULL))) WHERE (TRIM(t0.c0) COLLATE NOCASE) GROUP BY t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0 UNION SELECT t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0 FROM t0, v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c1) AND ('vlt\r_n枆')))OR(((vt0.c1) ISNULL))) WHERE ((NOT (TRIM(t0.c0) COLLATE NOCASE))) GROUP BY t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0 UNION SELECT ALL t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0 FROM t0, v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c1) AND ('vlt\r_n枆')))OR(((vt0.c1) ISNULL))) WHERE (((TRIM(t0.c0) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0;
SELECT ALL t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0 FROM t0, v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c1) AND ('vlt\r_n枆')))OR(((vt0.c1) ISNULL))) GROUP BY t0.c0, rt0.c4, vt0.c1, rt0.c0, v0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, v0.c1, vt0.c0, rt0.c3, v0.c2, vt0.c1, t0.c0, rt0.c1 FROM rt0, v0, t0 NOT INDEXED, vt0 GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c3, v0.c2, vt0.c1, t0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c1, vt0.c0, rt0.c3, v0.c2, vt0.c1, t0.c0, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c3, v0.c2, vt0.c1, t0.c0, rt0.c1 HAVING MAX(((rt0.c2)IS(TOTAL(SUM(t0.c0))))) UNION ALL SELECT rt0.c2, v0.c1, vt0.c0, rt0.c3, v0.c2, vt0.c1, t0.c0, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c3, v0.c2, vt0.c1, t0.c0, rt0.c1 HAVING (NOT (MAX(((rt0.c2)IS(TOTAL(SUM(t0.c0))))))) UNION ALL SELECT ALL rt0.c2, v0.c1, vt0.c0, rt0.c3, v0.c2, vt0.c1, t0.c0, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c3, v0.c2, vt0.c1, t0.c0, rt0.c1 HAVING ((MAX(((rt0.c2)IS(TOTAL(SUM(t0.c0)))))) ISNULL);
SELECT ALL rt0.c1, v0.c2, v0.c0, vt0.c0, t0.c0 FROM v0, t0 CROSS JOIN rt0 ON CAST(((vt0.c0)<>(t0.c0)) AS TEXT) CROSS JOIN vt0 ON ((((rt0.c2)OR(vt0.c0))) IS TRUE);
SELECT rt0.c1, v0.c2, v0.c0, vt0.c0, t0.c0 FROM v0, t0 CROSS JOIN rt0 ON CAST(((vt0.c0)!=(t0.c0)) AS TEXT) CROSS JOIN vt0 ON ((((rt0.c2)OR(vt0.c0))) IS TRUE) WHERE ((((0.6677652746358951)+(rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c1, v0.c2, v0.c0, vt0.c0, t0.c0 FROM v0, t0 CROSS JOIN rt0 ON CAST(((vt0.c0)!=(t0.c0)) AS TEXT) CROSS JOIN vt0 ON ((((rt0.c2)OR(vt0.c0))) IS TRUE) WHERE ((NOT ((((0.6677652746358951)+(rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c1, v0.c2, v0.c0, vt0.c0, t0.c0 FROM v0, t0 NOT INDEXED CROSS JOIN rt0 ON CAST(((vt0.c0)<>(t0.c0)) AS TEXT) CROSS JOIN vt0 ON ((((rt0.c2)OR(vt0.c0))) IS TRUE) WHERE ((((((0.6677652746358951)+(rt0.c2)) IN ())) ISNULL));
SELECT ALL rt0.c1, v0.c2, v0.c0, vt0.c0, t0.c0 FROM v0, t0 CROSS JOIN rt0 ON CAST(((vt0.c0)<>(t0.c0)) AS TEXT) CROSS JOIN vt0 ON ((((rt0.c2)OR(vt0.c0))) IS TRUE);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1)||(x'')))AND(CAST(v0.c1 AS TEXT))))OR(((v0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c1)||(x'')))AND(CAST(v0.c1 AS TEXT))))OR(((v0.c1) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c1)||(x'')))AND(CAST(v0.c1 AS TEXT))))OR(((v0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((- (((rt0.c0)+(rt0.c1))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((- (((rt0.c0)+(rt0.c1))))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((((- (((rt0.c0)+(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM vt0, t0, v0 GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0, vt0.c1;
SELECT v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM vt0, t0, v0 GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0, vt0.c1 HAVING ((TOTAL(TOTAL(vt0.c1))) BETWEEN (MAX(AVG(t0.c0))) AND (TOTAL(COUNT(COUNT(AVG(v0.c0)))))) UNION ALL SELECT v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM vt0, t0, v0 GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0, vt0.c1 HAVING (NOT (((TOTAL(TOTAL(vt0.c1))) BETWEEN (MAX(AVG(t0.c0))) AND (TOTAL(COUNT(COUNT(AVG(v0.c0)))))))) UNION ALL SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM vt0, t0, v0 GROUP BY v0.c2, v0.c0, t0.c0, v0.c1, vt0.c0, vt0.c1 HAVING ((((TOTAL(TOTAL(vt0.c1))) BETWEEN (MAX(AVG(t0.c0))) AND (TOTAL(COUNT(COUNT(AVG(v0.c0))))))) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((t0.c0) NOTNULL)) IS FALSE) RIGHT OUTER JOIN t0 ON (((t0.c0)LIKE(vt0.c1)) IN ());
SELECT DISTINCT t0.c0, rt0.c2, v0.c0, vt0.c1, v0.c1, rt0.c0, rt0.c4 FROM t0, rt0, vt0, v0;
SELECT DISTINCT t0.c0, rt0.c2, v0.c0, vt0.c1, v0.c1, rt0.c0, rt0.c4 FROM t0, rt0, vt0, v0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2)OR(rt0.c1)))))AND((NOT (v0.c2)))))AND(SQLITE_SOURCE_ID())))OR(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, rt0.c2, v0.c0, vt0.c1, v0.c1, rt0.c0, rt0.c4 FROM t0, rt0, vt0, v0 WHERE ((NOT (((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2)OR(rt0.c1)))))AND((NOT (v0.c2)))))AND(SQLITE_SOURCE_ID())))OR(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c0, rt0.c2, v0.c0, vt0.c1, v0.c1, rt0.c0, rt0.c4 FROM t0, rt0, vt0, v0 WHERE (((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2)OR(rt0.c1)))))AND((NOT (v0.c2)))))AND(SQLITE_SOURCE_ID())))OR(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c2, v0.c0, vt0.c1, v0.c1, rt0.c0, rt0.c4 FROM t0, rt0, vt0, v0;
SELECT ALL v0.c1, v0.c0, t0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM vt0, rt0 INNER JOIN v0 ON ((((((((((v0.c1)OR(vt0.c1)))AND(t0.c0)))OR(v0.c0)))AND(rt0.c1))) NOT BETWEEN (LOWER(v0.c1)) AND (((rt0.c0)IS NOT(vt0.c0)))) RIGHT OUTER JOIN t0 ON 2.010541616E9 GROUP BY v0.c1, v0.c0, t0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1 HAVING (((t0.c0)%(GROUP_CONCAT(rt0.c0))) IN ()) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1 HAVING (NOT ((((t0.c0)%(GROUP_CONCAT(rt0.c0))) IN ()))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1 HAVING (((((t0.c0)%(GROUP_CONCAT(rt0.c0))) IN ())) ISNULL);
SELECT vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1 HAVING (((t0.c0)%(GROUP_CONCAT(rt0.c0))) IN ()) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1 HAVING (NOT ((((t0.c0)%(GROUP_CONCAT(rt0.c0))) IN ()))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1 HAVING (((((t0.c0)%(GROUP_CONCAT(rt0.c0))) IN ())) ISNULL);
SELECT vt0.c1, rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1;
SELECT * FROM t0, v0, rt0, vt0;
SELECT * FROM t0, v0, rt0, vt0 WHERE (((HEX(DISTINCT vt0.c0)) IS TRUE)) UNION ALL SELECT * FROM t0, v0, rt0, vt0 WHERE ((NOT (((HEX(DISTINCT vt0.c0)) IS TRUE)))) UNION ALL SELECT * FROM t0, v0, rt0, vt0 WHERE (((((HEX(DISTINCT vt0.c0)) IS TRUE)) ISNULL));
SELECT * FROM t0, v0, rt0, vt0;
SELECT DISTINCT vt0.c1, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, t0.c0 FROM vt0, t0 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND((NOT (t0.c0)))))OR((((vt0.c1, t0.c0, vt0.c1)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((('-1764015066')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (((((((((vt0.c0 COLLATE RTRIM)AND((NOT (t0.c0)))))OR((((vt0.c1, t0.c0, vt0.c1)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((('-1764015066')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM vt0, t0 WHERE (((((((((((vt0.c0 COLLATE RTRIM)AND((NOT (t0.c0)))))OR((((vt0.c1, t0.c0, vt0.c1)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((('-1764015066')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0 FROM vt0, t0;
SELECT ALL rt0.c1, vt0.c1, t0.c0, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, t0.c0, vt0.c0 FROM rt0, t0, vt0 WHERE ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)) IN ())) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c1, t0.c0, vt0.c0 FROM rt0, t0, vt0 WHERE ((NOT ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)) IN ())))) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0 UNION SELECT rt0.c1, vt0.c1, t0.c0, vt0.c0 FROM rt0, t0, vt0 WHERE ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)) IN ())) ISNULL)) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, t0.c0, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL * FROM t0 NOT INDEXED, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT * FROM t0, rt0, v0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT ALL * FROM t0 NOT INDEXED, rt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((('FALSE') BETWEEN ((((vt0.c0))=((vt0.c1)))) AND (((vt0.c0)||(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((('FALSE') BETWEEN ((((vt0.c0))==((vt0.c1)))) AND (((vt0.c0)||(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((('FALSE') BETWEEN ((((vt0.c0))==((vt0.c1)))) AND (((vt0.c0)||(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((- ((~ (rt0.c4))))) GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 UNION SELECT t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT ((- ((~ (rt0.c4))))))) GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 UNION SELECT t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM t0 NOT INDEXED FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((- ((~ (rt0.c4))))) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2 HAVING MAX(((((rt0.c2)AND(COUNT(*))))OR(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2 HAVING (NOT (MAX(((((rt0.c2)AND(COUNT(*))))OR(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2 HAVING ((MAX(((((rt0.c2)AND(COUNT(*))))OR(COUNT(*))))) ISNULL);
SELECT rt0.c0 FROM t0, v0, vt0, rt0;
SELECT rt0.c0 FROM t0, v0, vt0, rt0 WHERE ((0.24929871174912754 IN ('', 0.17070801955913628))) UNION ALL SELECT ALL rt0.c0 FROM t0, v0, vt0, rt0 WHERE ((NOT ((0.24929871174912754 IN ('', 0.17070801955913628))))) UNION ALL SELECT rt0.c0 FROM t0, v0, vt0, rt0 WHERE ((((0.24929871174912754 IN ('', 0.17070801955913628))) ISNULL));
SELECT rt0.c0 FROM t0, v0, vt0, rt0;
SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN rt0 ON (((((v0.c0 IN (v0.c0)))OR(v0.c2)))OR((+ (v0.c1))));
SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN rt0 ON (((((v0.c0 IN (v0.c0)))OR(v0.c2)))OR((+ (v0.c1)))) WHERE (CAST(x'' AS REAL)) UNION SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN rt0 ON (((((v0.c0 IN (v0.c0)))OR(v0.c2)))OR((+ (v0.c1)))) WHERE ((NOT (CAST(x'' AS REAL)))) UNION SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN rt0 ON (((((v0.c0 IN (v0.c0)))OR(v0.c2)))OR((+ (v0.c1)))) WHERE (((CAST(x'' AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN rt0 ON (((((v0.c0 IN (v0.c0)))OR(v0.c2)))OR((+ (v0.c1))));
SELECT t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS INTEGER) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS INTEGER) WHERE (IFNULL(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)), LENGTH(rt0.c1))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS INTEGER) WHERE ((NOT (IFNULL(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)), LENGTH(rt0.c1))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS INTEGER) WHERE (((IFNULL(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)), LENGTH(rt0.c1))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS INTEGER) GROUP BY t0.c0;
SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c2;
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((v0.c2)OR(((((((((v0.c0)AND(v0.c1)))AND(NULL)))OR(v0.c2)))OR(v0.c1)))))OR((((v0.c2, v0.c2, v0.c0))<=((v0.c1, v0.c2, v0.c2)))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((v0.c2)OR(((((((((v0.c0)AND(v0.c1)))AND(NULL)))OR(v0.c2)))OR(v0.c1)))))OR((((v0.c2, v0.c2, v0.c0))<=((v0.c1, v0.c2, v0.c2)))))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c2)OR(((((((((v0.c0)AND(v0.c1)))AND(NULL)))OR(v0.c2)))OR(v0.c1)))))OR((((v0.c2, v0.c2, v0.c0))<=((v0.c1, v0.c2, v0.c2)))))) ISNULL));
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c2, v0.c2;
SELECT ALL v0.c1, rt0.c2, v0.c2 FROM rt0, v0 WHERE (NULL) GROUP BY v0.c1, rt0.c2, v0.c2 UNION SELECT ALL v0.c1, rt0.c2, v0.c2 FROM rt0, v0 WHERE ((NOT (NULL))) GROUP BY v0.c1, rt0.c2, v0.c2 UNION SELECT ALL v0.c1, rt0.c2, v0.c2 FROM rt0, v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c1, rt0.c2, v0.c2;
SELECT ALL v0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c2, v0.c2;
SELECT v0.c2, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c2;
SELECT v0.c2, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c2 HAVING ((((((rt0.c2)&(rt0.c0)))AND(((v0.c0) BETWEEN (MIN(rt0.c4)) AND (rt0.c0)))))OR(TOTAL(COUNT(rt0.c0)))) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c2 HAVING (NOT (((((((rt0.c2)&(rt0.c0)))AND(((v0.c0) BETWEEN (MIN(rt0.c4)) AND (rt0.c0)))))OR(TOTAL(COUNT(rt0.c0)))))) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c2 HAVING ((((((((rt0.c2)&(rt0.c0)))AND(((v0.c0) BETWEEN (MIN(rt0.c4)) AND (rt0.c0)))))OR(TOTAL(COUNT(rt0.c0))))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM v0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM t0, vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM t0, vt0, rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ())) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM t0, vt0, rt0 WHERE ((NOT ((CAST(rt0.c1 AS BLOB) IN ())))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM t0, vt0, rt0 WHERE ((((CAST(rt0.c1 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM t0, vt0, rt0;
SELECT rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4 FROM v0, rt0, vt0 WHERE (HEX(DISTINCT vt0.c0) COLLATE BINARY) GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4 UNION SELECT ALL rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4 FROM v0, rt0, vt0 WHERE ((NOT (HEX(DISTINCT vt0.c0) COLLATE BINARY))) GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4 UNION SELECT rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4 FROM v0, rt0, vt0 WHERE (((HEX(DISTINCT vt0.c0) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, vt0.c1, vt0.c0, v0.c0, rt0.c4;
SELECT ALL rt0.c1, vt0.c1, v0.c2, rt0.c2, rt0.c4 FROM rt0 FULL OUTER JOIN t0 ON ((((vt0.c1, rt0.c0, rt0.c1)) BETWEEN ((v0.c1, x'', rt0.c2)) AND ((vt0.c0, v0.c0, rt0.c4))) IN (json_valid(t0.c0), (rt0.c4 IN (vt0.c0)))) LEFT OUTER JOIN vt0 ON ((v0.c2)!=(rt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON CASE WHEN UNLIKELY('P[ND8*') THEN ((rt0.c3)||(rt0.c3)) ELSE LIKELY(DISTINCT rt0.c4) END GROUP BY rt0.c1, vt0.c1, v0.c2, rt0.c2, rt0.c4;
SELECT ALL v0.c1, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c2 FROM v0 WHERE (((((NULL) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT NULL)) UNION ALL SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT (((((NULL) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT NULL)))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 WHERE (((((((NULL) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT NULL)) ISNULL));
SELECT ALL v0.c1, v0.c2 FROM v0;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (CASE ((t0.c0)<(x'd120'))  WHEN (rt0.c4 IN (v0.c0, v0.c1)) THEN ((rt0.c0) IS FALSE) WHEN CASE ''  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (((t0.c0, x'', rt0.c0)) BETWEEN ((v0.c0, v0.c1, rt0.c0)) AND ((v0.c1, rt0.c4, -1.56945807E8))) WHEN ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(v0.c2)) THEN v0.c2 COLLATE NOCASE ELSE CAST(rt0.c1 AS NUMERIC) END) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (CASE ((t0.c0)<(x'd120'))  WHEN (rt0.c4 IN (v0.c0, v0.c1)) THEN ((rt0.c0) IS FALSE) WHEN CASE ''  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (((t0.c0, x'', rt0.c0)) BETWEEN ((v0.c0, v0.c1, rt0.c0)) AND ((v0.c1, rt0.c4, -1.56945807E8))) WHEN ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(v0.c2)) THEN v0.c2 COLLATE NOCASE ELSE CAST(rt0.c1 AS NUMERIC) END))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((CASE ((t0.c0)<(x'd120'))  WHEN (rt0.c4 IN (v0.c0, v0.c1)) THEN ((rt0.c0) IS FALSE) WHEN CASE ''  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (((t0.c0, x'', rt0.c0)) BETWEEN ((v0.c0, v0.c1, rt0.c0)) AND ((v0.c1, rt0.c4, -1.56945807E8))) WHEN ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(v0.c2)) THEN v0.c2 COLLATE NOCASE ELSE CAST(rt0.c1 AS NUMERIC) END) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0))) AND (((t0.c0)!=(vt0.c0)))) GROUP BY rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1;
SELECT ALL rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0))) AND (((t0.c0)!=(vt0.c0)))) WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) GROUP BY rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1 UNION SELECT ALL rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0))) AND (((t0.c0)!=(vt0.c0)))) WHERE ((NOT ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) GROUP BY rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1 UNION SELECT rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0))) AND (((t0.c0)<>(vt0.c0)))) WHERE ((((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1;
SELECT rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0))) AND (((t0.c0)!=(vt0.c0)))) GROUP BY rt0.c3, vt0.c0, vt0.c1, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (COUNT(TOTAL(t0.c0)) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((COUNT(TOTAL(t0.c0)) IN ()))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(TOTAL(t0.c0)) IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (COUNT(TOTAL(t0.c0)) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((COUNT(TOTAL(t0.c0)) IN ()))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(TOTAL(t0.c0)) IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((((((((((((((((rt0.c2)AND(v0.c0)))AND(v0.c1)))OR(rt0.c4)))OR('')))AND(rt0.c4)))OR(vt0.c1)))OR(v0.c1)))AND(SUBSTR(-1211302000, rt0.c4))))OR(CHANGES())))OR(((x'')/(vt0.c1))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (((((((((((((((((((((rt0.c2)AND(v0.c0)))AND(v0.c1)))OR(rt0.c4)))OR('')))AND(rt0.c4)))OR(vt0.c1)))OR(v0.c1)))AND(SUBSTR(-1211302000, rt0.c4))))OR(CHANGES())))OR(((x'')/(vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((((((((((((((((((rt0.c2)AND(v0.c0)))AND(v0.c1)))OR(rt0.c4)))OR('')))AND(rt0.c4)))OR(vt0.c1)))OR(v0.c1)))AND(SUBSTR(-1211302000, rt0.c4))))OR(CHANGES())))OR(((x'')/(vt0.c1))))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, vt0 NOT INDEXED, v0;
SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE (((v0.c1)AND(CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE ((NOT (((v0.c1)AND(CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE (((((v0.c1)AND(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0 NOT INDEXED, v0;
SELECT ALL rt0.c4 FROM rt0, t0 LEFT OUTER JOIN v0 ON CAST(CASE v0.c0  WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN 8.36034976E8 END AS TEXT) INNER JOIN vt0 ON CAST(((((NULL)OR(vt0.c0)))OR(v0.c2)) AS INTEGER) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, t0 LEFT OUTER JOIN v0 ON CAST(CASE v0.c0  WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN 8.36034976E8 END AS TEXT) INNER JOIN vt0 ON CAST(((((NULL)OR(vt0.c0)))OR(v0.c2)) AS INTEGER) WHERE (((UPPER(DISTINCT rt0.c2))==(((rt0.c1) IS TRUE)))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, t0 LEFT OUTER JOIN v0 ON CAST(CASE v0.c0  WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN 8.36034976E8 END AS TEXT) INNER JOIN vt0 ON CAST(((((NULL)OR(vt0.c0)))OR(v0.c2)) AS INTEGER) WHERE ((NOT (((UPPER(DISTINCT rt0.c2))==(((rt0.c1) IS TRUE)))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, t0 LEFT OUTER JOIN v0 ON CAST(CASE v0.c0  WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN 8.36034976E8 END AS TEXT) INNER JOIN vt0 ON CAST(((((NULL)OR(vt0.c0)))OR(v0.c2)) AS INTEGER) WHERE (((((UPPER(DISTINCT rt0.c2))==(((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, t0 LEFT OUTER JOIN v0 ON CAST(CASE v0.c0  WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN 8.36034976E8 END AS TEXT) INNER JOIN vt0 ON CAST(((((NULL)OR(vt0.c0)))OR(v0.c2)) AS INTEGER) GROUP BY rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM v0, rt0, t0 INNER JOIN vt0 ON (- (UPPER(v0.c1))) GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, rt0.c3;
SELECT v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM v0, rt0, t0 INNER JOIN vt0 ON (- (UPPER(v0.c1))) GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, rt0.c3 HAVING MAX(GROUP_CONCAT(t0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM v0, rt0, t0 INNER JOIN vt0 ON (- (UPPER(v0.c1))) GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, rt0.c3 HAVING (NOT (MAX(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM v0, rt0, t0 INNER JOIN vt0 ON (- (UPPER(v0.c1))) GROUP BY v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, rt0.c3 HAVING ((MAX(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(MIN(t0.c0, '') AS INTEGER)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(MIN(t0.c0, '') AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(MIN(t0.c0, '') AS INTEGER)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 THEN NULL END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0) IS TRUE) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 THEN NULL END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN ((t0.c0) IS TRUE) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 THEN NULL END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE x'' COLLATE RTRIM  WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)OR(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE x'' COLLATE RTRIM  WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)OR(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE x'' COLLATE RTRIM  WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)OR(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c3 FROM rt0, t0 FULL OUTER JOIN vt0 ON '0.5858660258041177' GROUP BY rt0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c3 FROM rt0, t0 FULL OUTER JOIN vt0 ON '0.5858660258041177' GROUP BY rt0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c3 HAVING ((((AVG(MAX(rt0.c4)))OR(TOTAL(rt0.c3))))AND(((((GROUP_CONCAT(rt0.c1))AND(MIN(x''))))AND(rt0.c3)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c3 FROM rt0, t0 FULL OUTER JOIN vt0 ON '0.5858660258041177' GROUP BY rt0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c3 HAVING (NOT (((((AVG(MAX(rt0.c4)))OR(TOTAL(rt0.c3))))AND(((((GROUP_CONCAT(rt0.c1))AND(MIN(x''))))AND(rt0.c3)))))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c3 FROM rt0, t0 FULL OUTER JOIN vt0 ON '0.5858660258041177' GROUP BY rt0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c3 HAVING ((((((AVG(MAX(rt0.c4)))OR(TOTAL(rt0.c3))))AND(((((GROUP_CONCAT(rt0.c1))AND(MIN(x''))))AND(rt0.c3))))) ISNULL);
SELECT SUM(CASE WHEN (+ (t0.c0)) THEN (NOT (rt0.c3)) END) FROM v0, vt0, rt0, t0;
SELECT * FROM t0 INNER JOIN v0 ON ((((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))<(((((t0.c0)OR(v0.c1)))AND('1258599282'))));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))<(((((t0.c0)OR(v0.c1)))AND('1258599282')))) WHERE ((((v0.c1 IN ())) NOT NULL)) UNION ALL SELECT * FROM t0 INNER JOIN v0 ON ((((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))<(((((t0.c0)OR(v0.c1)))AND('1258599282')))) WHERE ((NOT ((((v0.c1 IN ())) NOT NULL)))) UNION ALL SELECT * FROM t0 INNER JOIN v0 ON ((((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))<(((((t0.c0)OR(v0.c1)))AND('1258599282')))) WHERE ((((((v0.c1 IN ())) NOT NULL)) ISNULL));
SELECT * FROM t0 INNER JOIN v0 ON ((((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))<(((((t0.c0)OR(v0.c1)))AND('1258599282'))));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (0x6f700b) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0x6f700b))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((0X6f700b) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING SUM(COUNT(rt0.c3)) UNION ALL SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING (NOT (SUM(COUNT(rt0.c3)))) UNION ALL SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING ((SUM(COUNT(rt0.c3))) ISNULL);
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 RIGHT OUTER JOIN rt0 ON ('|[' IN ());
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 RIGHT OUTER JOIN rt0 ON ('|[' IN ()) WHERE ((((((((((+ (v0.c1)))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((v0.c0)GLOB(rt0.c2)))))AND(x'0875'))) UNION ALL SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 RIGHT OUTER JOIN rt0 ON ('|[' IN ()) WHERE ((NOT ((((((((((+ (v0.c1)))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((v0.c0)GLOB(rt0.c2)))))AND(x'0875'))))) UNION ALL SELECT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 RIGHT OUTER JOIN rt0 ON ('|[' IN ()) WHERE ((((((((((((+ (v0.c1)))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((v0.c0)GLOB(rt0.c2)))))AND(x'0875'))) ISNULL));
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c2 RIGHT OUTER JOIN rt0 ON ('|[' IN ());
SELECT DISTINCT v0.c1, t0.c0, vt0.c1, rt0.c3, rt0.c4, vt0.c0, rt0.c0, v0.c2, rt0.c2 FROM t0, vt0 INNER JOIN v0 ON (+ (vt0.c1)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (rt0.c1) AND (((((((((x'')OR(v0.c2)))AND(v0.c0)))AND(vt0.c1)))AND(rt0.c3))));
SELECT DISTINCT v0.c1, t0.c0, vt0.c1, rt0.c3, rt0.c4, vt0.c0, rt0.c0, v0.c2, rt0.c2 FROM t0, vt0 INNER JOIN v0 ON (+ (vt0.c1)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (rt0.c1) AND (((((((((x'')OR(v0.c2)))AND(v0.c0)))AND(vt0.c1)))AND(rt0.c3)))) WHERE ((((((((vt0.c0, rt0.c3, rt0.c4, t0.c0, rt0.c4)) NOT BETWEEN ((v0.c1, v0.c2, rt0.c4, v0.c2, vt0.c1)) AND ((rt0.c0, NULL, rt0.c0, x'e358', rt0.c0))))OR(((rt0.c1)|(v0.c2)))))OR('' COLLATE NOCASE))) UNION SELECT DISTINCT v0.c1, t0.c0, vt0.c1, rt0.c3, rt0.c4, vt0.c0, rt0.c0, v0.c2, rt0.c2 FROM t0, vt0 INNER JOIN v0 ON (+ (vt0.c1)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (rt0.c1) AND (((((((((x'')OR(v0.c2)))AND(v0.c0)))AND(vt0.c1)))AND(rt0.c3)))) WHERE ((NOT ((((((((vt0.c0, rt0.c3, rt0.c4, t0.c0, rt0.c4)) NOT BETWEEN ((v0.c1, v0.c2, rt0.c4, v0.c2, vt0.c1)) AND ((rt0.c0, NULL, rt0.c0, x'e358', rt0.c0))))OR(((rt0.c1)|(v0.c2)))))OR('' COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c1, t0.c0, vt0.c1, rt0.c3, rt0.c4, vt0.c0, rt0.c0, v0.c2, rt0.c2 FROM t0, vt0 INNER JOIN v0 ON (+ (vt0.c1)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (rt0.c1) AND (((((((((x'')OR(v0.c2)))AND(v0.c0)))AND(vt0.c1)))AND(rt0.c3)))) WHERE ((((((((((vt0.c0, rt0.c3, rt0.c4, t0.c0, rt0.c4)) NOT BETWEEN ((v0.c1, v0.c2, rt0.c4, v0.c2, vt0.c1)) AND ((rt0.c0, NULL, rt0.c0, x'e358', rt0.c0))))OR(((rt0.c1)|(v0.c2)))))OR('' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c1, t0.c0, vt0.c1, rt0.c3, rt0.c4, vt0.c0, rt0.c0, v0.c2, rt0.c2 FROM t0, vt0 INNER JOIN v0 ON (+ (vt0.c1)) LEFT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (rt0.c1) AND (((((((((x'')OR(v0.c2)))AND(v0.c0)))AND(vt0.c1)))AND(rt0.c3))));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((- (t0.c0)))>(((0.6075721674448835)>>(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c0)))>(((0.6075721674448835)>>(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((- (t0.c0)))>(((0.6075721674448835)>>(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t0, vt0, v0, rt0;
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (((((vt0.c0)-(rt0.c3))) IS FALSE)) UNION ALL SELECT ALL * FROM t0, vt0, v0, rt0 WHERE ((NOT (((((vt0.c0)-(rt0.c3))) IS FALSE)))) UNION ALL SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (((((((vt0.c0)-(rt0.c3))) IS FALSE)) ISNULL));
SELECT * FROM t0, vt0, v0, rt0;
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ('0.0825735850956848') GROUP BY t0.c0, v0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ((NOT ('0.0825735850956848'))) GROUP BY t0.c0, v0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ((('0.0825735850956848') ISNULL)) GROUP BY t0.c0, v0.c0, v0.c2;
SELECT t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING MAX(COUNT(GROUP_CONCAT(TOTAL(AVG(MAX(MAX(NULL))))))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (MAX(COUNT(GROUP_CONCAT(TOTAL(AVG(MAX(MAX(NULL))))))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((MAX(COUNT(GROUP_CONCAT(TOTAL(AVG(MAX(MAX(NULL)))))))) ISNULL);
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c0 INNER JOIN v0 ON (((rt0.c3, rt0.c4, rt0.c3)) NOT BETWEEN (('', (rt0.c0 IN (t0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL, rt0.c4, vt0.c1 COLLATE BINARY))) CROSS JOIN t0 ON ((((((rt0.c4)AND(rt0.c3)))OR(v0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (v0.c1))));
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c0 INNER JOIN v0 ON (((rt0.c3, rt0.c4, rt0.c3)) NOT BETWEEN (('', (rt0.c0 IN (t0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL, rt0.c4, vt0.c1 COLLATE BINARY))) CROSS JOIN t0 ON ((((((rt0.c4)AND(rt0.c3)))OR(v0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (v0.c1)))) WHERE (LOWER(DISTINCT ((x'74fa') NOT BETWEEN (t0.c0) AND (v0.c0)))) UNION ALL SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c0 INNER JOIN v0 ON (((rt0.c3, rt0.c4, rt0.c3)) NOT BETWEEN (('', (rt0.c0 IN (t0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL, rt0.c4, vt0.c1 COLLATE BINARY))) CROSS JOIN t0 ON ((((((rt0.c4)AND(rt0.c3)))OR(v0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (v0.c1)))) WHERE ((NOT (LOWER(DISTINCT ((x'74fa') NOT BETWEEN (t0.c0) AND (v0.c0)))))) UNION ALL SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c0 INNER JOIN v0 ON (((rt0.c3, rt0.c4, rt0.c3)) NOT BETWEEN (('', (rt0.c0 IN (t0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL, rt0.c4, vt0.c1 COLLATE BINARY))) CROSS JOIN t0 ON ((((((rt0.c4)AND(rt0.c3)))OR(v0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (v0.c1)))) WHERE (((LOWER(DISTINCT ((x'74fa') NOT BETWEEN (t0.c0) AND (v0.c0)))) ISNULL));
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c0 INNER JOIN v0 ON (((rt0.c3, rt0.c4, rt0.c3)) NOT BETWEEN (('', (rt0.c0 IN (t0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL, rt0.c4, vt0.c1 COLLATE BINARY))) CROSS JOIN t0 ON ((((((rt0.c4)AND(rt0.c3)))OR(v0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (v0.c1))));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c1)>(CAST(vt0.c1 AS REAL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c1)>(CAST(vt0.c1 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c1)>(CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE (CAST(((x'') ISNULL) AS REAL)) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (CAST(((x'') ISNULL) AS REAL)))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE (((CAST(((x'') ISNULL) AS REAL)) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING AVG((rt0.c2 IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (AVG((rt0.c2 IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING ((AVG((rt0.c2 IN ()))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING AVG((rt0.c2 IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (AVG((rt0.c2 IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING ((AVG((rt0.c2 IN ()))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT MAX(CASE WHEN v0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN ((((0.9034996914922789)OR(rt0.c0)))OR(vt0.c0)) WHEN CAST(rt0.c4 AS INTEGER) THEN CAST(rt0.c1 AS BLOB) END) FROM v0, rt0, vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL), ((v0.c2 IN ()) IN (((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT * FROM vt0, v0, t0, rt0;
SELECT * FROM vt0, v0, t0, rt0 WHERE (((((((((((((((((rt0.c0)AND(rt0.c0)))OR('-2034292690')))AND(rt0.c2)))OR(v0.c1)))OR(v0.c2)))AND(rt0.c2)))AND(LAST_INSERT_ROWID())))OR(((NULL) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, v0, t0, rt0 WHERE ((NOT (((((((((((((((((rt0.c0)AND(rt0.c0)))OR('-2034292690')))AND(rt0.c2)))OR(v0.c1)))OR(v0.c2)))AND(rt0.c2)))AND(LAST_INSERT_ROWID())))OR(((NULL) ISNULL)))))) UNION ALL SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (((((((((((((((((((rt0.c0)AND(rt0.c0)))OR('-2034292690')))AND(rt0.c2)))OR(v0.c1)))OR(v0.c2)))AND(rt0.c2)))AND(LAST_INSERT_ROWID())))OR(((NULL) ISNULL)))) ISNULL));
SELECT * FROM vt0, v0, t0, rt0;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((((t0.c0)+(vt0.c0)))<=((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT (((((t0.c0)+(vt0.c0)))<=((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((((((t0.c0)+(vt0.c0)))<=((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT ALL rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0;
SELECT rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0 FROM t0, rt0, v0, vt0 WHERE (CASE (((v0.c0))=((rt0.c0)))  WHEN ABS(rt0.c3) THEN ((rt0.c2)-(rt0.c2)) WHEN PRINTF(v0.c1) THEN 1.41465213E9 WHEN 876610814 THEN (- (vt0.c0)) END) GROUP BY rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0 FROM t0, rt0, v0, vt0 WHERE ((NOT (CASE (((v0.c0))=((rt0.c0)))  WHEN ABS(rt0.c3) THEN ((rt0.c2)-(rt0.c2)) WHEN PRINTF(v0.c1) THEN 1.41465213E9 WHEN 876610814 THEN (- (vt0.c0)) END))) GROUP BY rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0 FROM t0, rt0, v0, vt0 WHERE (((CASE (((v0.c0))=((rt0.c0)))  WHEN ABS(rt0.c3) THEN ((rt0.c2)-(rt0.c2)) WHEN PRINTF(v0.c1) THEN 1.41465213E9 WHEN 876610814 THEN (- (vt0.c0)) END) ISNULL)) GROUP BY rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0 FROM t0, rt0, v0, vt0 GROUP BY rt0.c4, vt0.c1, v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL v0.c2, vt0.c1, rt0.c3, rt0.c4, rt0.c2, t0.c0, rt0.c0, vt0.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE) CROSS JOIN rt0 ON ((v0.c1 COLLATE NOCASE) BETWEEN ((((((((('-472876157')AND(x'')))OR(rt0.c1)))OR(v0.c1)))AND(rt0.c2))) AND (((rt0.c0)>>(rt0.c1)))) GROUP BY v0.c2, vt0.c1, rt0.c3, rt0.c4, rt0.c2, t0.c0, rt0.c0, vt0.c0, v0.c0;
SELECT ALL v0.c2, vt0.c1, rt0.c3, rt0.c4, rt0.c2, t0.c0, rt0.c0, vt0.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE) CROSS JOIN rt0 ON ((v0.c1 COLLATE NOCASE) BETWEEN ((((((((('-472876157')AND(x'')))OR(rt0.c1)))OR(v0.c1)))AND(rt0.c2))) AND (((rt0.c0)>>(rt0.c1)))) GROUP BY v0.c2, vt0.c1, rt0.c3, rt0.c4, rt0.c2, t0.c0, rt0.c0, vt0.c0, v0.c0 HAVING MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL v0.c2, vt0.c1, rt0.c3, rt0.c4, rt0.c2, t0.c0, rt0.c0, vt0.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE) CROSS JOIN rt0 ON ((v0.c1 COLLATE NOCASE) BETWEEN ((((((((('-472876157')AND(x'')))OR(rt0.c1)))OR(v0.c1)))AND(rt0.c2))) AND (((rt0.c0)>>(rt0.c1)))) GROUP BY v0.c2, vt0.c1, rt0.c3, rt0.c4, rt0.c2, t0.c0, rt0.c0, vt0.c0, v0.c0 HAVING (NOT (MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL v0.c2, vt0.c1, rt0.c3, rt0.c4, rt0.c2, t0.c0, rt0.c0, vt0.c0, v0.c0 FROM vt0, v0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE) CROSS JOIN rt0 ON ((v0.c1 COLLATE NOCASE) BETWEEN ((((((((('-472876157')AND(x'')))OR(rt0.c1)))OR(v0.c1)))AND(rt0.c2))) AND (((rt0.c0)>>(rt0.c1)))) GROUP BY v0.c2, vt0.c1, rt0.c3, rt0.c4, rt0.c2, t0.c0, rt0.c0, vt0.c0, v0.c0 HAVING ((MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT * FROM v0, vt0, t0, rt0;
SELECT * FROM v0, vt0, t0, rt0 WHERE (UNLIKELY(CASE v0.c0  WHEN v0.c2 THEN NULL ELSE x'0a83' END)) UNION ALL SELECT * FROM v0, vt0, t0, rt0 WHERE ((NOT (UNLIKELY(CASE v0.c0  WHEN v0.c2 THEN NULL ELSE x'0a83' END)))) UNION ALL SELECT ALL * FROM v0, vt0, t0, rt0 WHERE (((UNLIKELY(CASE v0.c0  WHEN v0.c2 THEN NULL ELSE x'0a83' END)) ISNULL));
SELECT * FROM v0, vt0, t0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3;
SELECT ALL t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 WHERE ((((v0.c1)) NOT BETWEEN ((((v0.c1) NOT BETWEEN (146508962) AND (rt0.c0)))) AND ((((rt0.c1)==(rt0.c4)))))) GROUP BY t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3 UNION SELECT ALL t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 WHERE ((NOT ((((v0.c1)) NOT BETWEEN ((((v0.c1) NOT BETWEEN (146508962) AND (rt0.c0)))) AND ((((rt0.c1)==(rt0.c4)))))))) GROUP BY t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3 UNION SELECT t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 WHERE ((((((v0.c1)) NOT BETWEEN ((((v0.c1) NOT BETWEEN (146508962) AND (rt0.c0)))) AND ((((rt0.c1)=(rt0.c4)))))) ISNULL)) GROUP BY t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3;
SELECT t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c1, v0.c2, rt0.c2, v0.c0, vt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING ((((NULL)-(rt0.c1)))IS NOT(rt0.c1 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING (NOT (((((NULL)-(rt0.c1)))IS NOT(rt0.c1 COLLATE RTRIM)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING ((((((NULL)-(rt0.c1)))IS NOT(rt0.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING ((((NULL)-(rt0.c1)))IS NOT(rt0.c1 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING (NOT (((((NULL)-(rt0.c1)))IS NOT(rt0.c1 COLLATE RTRIM)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING ((((((NULL)-(rt0.c1)))IS NOT(rt0.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL TOTAL((((~ (NULL)))/(CAST(rt0.c3 AS INTEGER)))) FROM t0, v0, vt0, rt0 ORDER BY ((((rt0.c0)GLOB(vt0.c1))) IS FALSE);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (-1100624921) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (-1100624921))) UNION ALL SELECT * FROM v0 WHERE (((-1100624921) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 WHERE (((((t0.c0)LIKE(vt0.c0)))||((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0)LIKE(vt0.c0)))||((vt0.c1 IN ())))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 WHERE (((((((t0.c0)LIKE(vt0.c0)))||((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0;
SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3 FROM vt0, t0, rt0, v0 WHERE (((((v0.c0) IS TRUE)) NOTNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3 FROM vt0, t0, rt0, v0 WHERE ((NOT (((((v0.c0) IS TRUE)) NOTNULL)))) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3 FROM vt0, t0, rt0, v0 WHERE (((((((v0.c0) IS TRUE)) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1, v0.c2, rt0.c0, t0.c0, rt0.c3;
SELECT ALL v0.c1, vt0.c1 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, vt0.c1;
SELECT ALL v0.c1, vt0.c1 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, vt0.c1 HAVING MAX((SUM(SUM(rt0.c3)) IN (COUNT(*), rt0.c3))) UNION ALL SELECT v0.c1, vt0.c1 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, vt0.c1 HAVING (NOT (MAX((SUM(SUM(rt0.c3)) IN (COUNT(*), rt0.c3))))) UNION ALL SELECT v0.c1, vt0.c1 FROM vt0, rt0, v0, t0 GROUP BY v0.c1, vt0.c1 HAVING ((MAX((SUM(SUM(rt0.c3)) IN (COUNT(*), rt0.c3)))) ISNULL);
SELECT ALL * FROM v0 CROSS JOIN t0 ON (NOT (LIKELY(t0.c0))) CROSS JOIN vt0 ON ((IFNULL(v0.c1, v0.c1))<(((((((((t0.c0)AND(vt0.c0)))OR(v0.c2)))OR(v0.c2)))AND(vt0.c0))));
SELECT * FROM v0 CROSS JOIN t0 ON (NOT (LIKELY(t0.c0))) CROSS JOIN vt0 ON ((IFNULL(v0.c1, v0.c1))<(((((((((t0.c0)AND(vt0.c0)))OR(v0.c2)))OR(v0.c2)))AND(vt0.c0)))) WHERE (UPPER((~ (vt0.c0)))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN t0 ON (NOT (LIKELY(t0.c0))) CROSS JOIN vt0 ON ((IFNULL(v0.c1, v0.c1))<(((((((((t0.c0)AND(vt0.c0)))OR(v0.c2)))OR(v0.c2)))AND(vt0.c0)))) WHERE ((NOT (UPPER((~ (vt0.c0)))))) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON (NOT (LIKELY(t0.c0))) CROSS JOIN vt0 ON ((IFNULL(v0.c1, v0.c1))<(((((((((t0.c0)AND(vt0.c0)))OR(v0.c2)))OR(v0.c2)))AND(vt0.c0)))) WHERE (((UPPER((~ (vt0.c0)))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN t0 ON (NOT (LIKELY(t0.c0))) CROSS JOIN vt0 ON ((IFNULL(v0.c1, v0.c1))<(((((((((t0.c0)AND(vt0.c0)))OR(v0.c2)))OR(v0.c2)))AND(vt0.c0))));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (CASE (((rt0.c1, '841945980', rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c0)) AND ((v0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c0)))  WHEN ((v0.c1)LIKE(rt0.c1)) THEN ((rt0.c2)<>(v0.c0)) WHEN CASE '-1992161609'  WHEN rt0.c2 THEN rt0.c1 END THEN ((v0.c2) NOT NULL) WHEN ((rt0.c2)/('')) THEN v0.c2 COLLATE NOCASE WHEN x'' THEN ((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c2)) WHEN x'221682d0' COLLATE BINARY THEN (rt0.c2 IN ()) END) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE (((rt0.c1, '841945980', rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c0)) AND ((v0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c0)))  WHEN ((v0.c1)LIKE(rt0.c1)) THEN ((rt0.c2)!=(v0.c0)) WHEN CASE '-1992161609'  WHEN rt0.c2 THEN rt0.c1 END THEN ((v0.c2) NOT NULL) WHEN ((rt0.c2)/('')) THEN v0.c2 COLLATE NOCASE WHEN x'' THEN ((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c2)) WHEN x'221682d0' COLLATE BINARY THEN (rt0.c2 IN ()) END))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (((CASE (((rt0.c1, '841945980', rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c0)) AND ((v0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c0)))  WHEN ((v0.c1)LIKE(rt0.c1)) THEN ((rt0.c2)!=(v0.c0)) WHEN CASE '-1992161609'  WHEN rt0.c2 THEN rt0.c1 END THEN ((v0.c2) NOT NULL) WHEN ((rt0.c2)/('')) THEN v0.c2 COLLATE NOCASE WHEN x'' THEN ((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c2)) WHEN x'221682d0' COLLATE BINARY THEN (rt0.c2 IN ()) END) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((((rt0.c3)AND(rt0.c2)))AND('U5Mq'))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((((rt0.c3)AND(rt0.c2)))AND('U5Mq'))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((((rt0.c3)AND(rt0.c2)))AND('U5Mq'))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING NULL UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((NULL) ISNULL);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING NULL UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((NULL) ISNULL);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c1, v0.c1, vt0.c1, rt0.c2, v0.c0, rt0.c3, v0.c2, vt0.c0, rt0.c4, rt0.c0 FROM t0, vt0, v0, rt0;
SELECT ALL rt0.c1, v0.c1, vt0.c1, rt0.c2, v0.c0, rt0.c3, v0.c2, vt0.c0, rt0.c4, rt0.c0 FROM t0, vt0, v0, rt0 WHERE (CAST(0.5562104629097059 AS NUMERIC)) UNION ALL SELECT rt0.c1, v0.c1, vt0.c1, rt0.c2, v0.c0, rt0.c3, v0.c2, vt0.c0, rt0.c4, rt0.c0 FROM t0, vt0, v0, rt0 WHERE ((NOT (CAST(0.5562104629097059 AS NUMERIC)))) UNION ALL SELECT rt0.c1, v0.c1, vt0.c1, rt0.c2, v0.c0, rt0.c3, v0.c2, vt0.c0, rt0.c4, rt0.c0 FROM t0, vt0, v0, rt0 WHERE (((CAST(0.5562104629097059 AS NUMERIC)) ISNULL));
SELECT rt0.c1, v0.c1, vt0.c1, rt0.c2, v0.c0, rt0.c3, v0.c2, vt0.c0, rt0.c4, rt0.c0 FROM t0, vt0, v0, rt0;
SELECT DISTINCT * FROM t0, rt0, v0, vt0;
SELECT DISTINCT * FROM t0, rt0, v0, vt0 WHERE ((((- (rt0.c3)))GLOB(((v0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM t0, rt0, v0, vt0 WHERE ((NOT ((((- (rt0.c3)))GLOB(((v0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM t0, rt0, v0, vt0 WHERE ((((((- (rt0.c3)))GLOB(((v0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0, vt0;
SELECT vt0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, t0 WHERE (CAST(((vt0.c1)<>(v0.c0)) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0, t0 WHERE ((NOT (CAST(((vt0.c1)!=(v0.c0)) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0, t0 WHERE (((CAST(((vt0.c1)<>(v0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0;
SELECT t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 NOT INDEXED GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 HAVING 0.32750702231286843 UNION ALL SELECT ALL t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 HAVING (NOT (0.32750702231286843)) UNION ALL SELECT t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 HAVING ((0.32750702231286843) ISNULL);
SELECT t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 NOT INDEXED GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 HAVING 0.32750702231286843 UNION ALL SELECT ALL t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 HAVING (NOT (0.32750702231286843)) UNION ALL SELECT t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 HAVING ((0.32750702231286843) ISNULL);
SELECT t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((0Xffffffffc97358f1 COLLATE RTRIM IN ((~ (rt0.c3))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((0Xffffffffc97358f1 COLLATE RTRIM IN ((~ (rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((0Xffffffffc97358f1 COLLATE RTRIM IN ((~ (rt0.c3))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (v0.c1))) NOTNULL) CROSS JOIN t0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) WHEN (v0.c1 IN (v0.c0)) THEN (('-163673660')<<(rt0.c1)) WHEN (+ (NULL)) THEN x'c666' END;
SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (v0.c1))) NOTNULL) CROSS JOIN t0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) WHEN (v0.c1 IN (v0.c0)) THEN (('-163673660')<<(rt0.c1)) WHEN (+ (NULL)) THEN x'c666' END WHERE (((v0.c0)<=(rt0.c3)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (v0.c1))) NOTNULL) CROSS JOIN t0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) WHEN (v0.c1 IN (v0.c0)) THEN (('-163673660')<<(rt0.c1)) WHEN (+ (NULL)) THEN x'c666' END WHERE ((NOT (((v0.c0)<=(rt0.c3)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (v0.c1))) NOTNULL) CROSS JOIN t0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) WHEN (v0.c1 IN (v0.c0)) THEN (('-163673660')<<(rt0.c1)) WHEN (+ (NULL)) THEN x'c666' END WHERE (((((v0.c0)<=(rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (v0.c1))) NOTNULL) CROSS JOIN t0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) WHEN (v0.c1 IN (v0.c0)) THEN (('-163673660')<<(rt0.c1)) WHEN (+ (NULL)) THEN x'c666' END;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, t0 WHERE ('-1240894009') GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT ('-1240894009'))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((('-1240894009') ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))=(COUNT(MAX(rt0.c1)))) UNION ALL SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING (NOT (((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))==(COUNT(MAX(rt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))=(COUNT(MAX(rt0.c1))))) ISNULL);
SELECT ALL * FROM vt0, t0, rt0;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((rt0.c1)||(rt0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, t0, rt0 WHERE ((NOT (((rt0.c1)||(rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c1)||(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0, t0, rt0;
SELECT DISTINCT t0.c0 FROM vt0, t0, rt0;
SELECT DISTINCT t0.c0 FROM vt0, t0, rt0 WHERE ((NOT (rt0.c4)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0 FROM vt0, t0, rt0 WHERE ((NOT ((NOT (rt0.c4)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0, rt0 WHERE ((((NOT (rt0.c4)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0, rt0;
SELECT rt0.c3, t0.c0, rt0.c0, vt0.c1 FROM rt0, t0, vt0, v0 GROUP BY rt0.c3, t0.c0, rt0.c0, vt0.c1;
SELECT rt0.c3, t0.c0, rt0.c0, vt0.c1 FROM rt0, t0, vt0, v0 WHERE (((((0Xffffffffc5b33031 IN ()), ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c1)), CAST(t0.c0 AS NUMERIC)))>=((CAST(t0.c0 AS NUMERIC), v0.c0 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))))) GROUP BY rt0.c3, t0.c0, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c3, t0.c0, rt0.c0, vt0.c1 FROM rt0, t0, vt0, v0 WHERE ((NOT (((((0xffffffffc5b33031 IN ()), ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c1)), CAST(t0.c0 AS NUMERIC)))>=((CAST(t0.c0 AS NUMERIC), v0.c0 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))))))) GROUP BY rt0.c3, t0.c0, rt0.c0, vt0.c1 UNION SELECT rt0.c3, t0.c0, rt0.c0, vt0.c1 FROM rt0, t0, vt0, v0 WHERE (((((((0Xffffffffc5b33031 IN ()), ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c1)), CAST(t0.c0 AS NUMERIC)))>=((CAST(t0.c0 AS NUMERIC), v0.c0 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))))) ISNULL)) GROUP BY rt0.c3, t0.c0, rt0.c0, vt0.c1;
SELECT rt0.c3, t0.c0, rt0.c0, vt0.c1 FROM rt0, t0, vt0, v0 GROUP BY rt0.c3, t0.c0, rt0.c0, vt0.c1;
SELECT rt0.c2 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON (+ (((('-1144817644')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON (+ (((('-1144817644')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) GROUP BY rt0.c2 HAVING MIN(COUNT(SUM(v0.c0))) UNION ALL SELECT ALL rt0.c2 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON (+ (((('-1144817644')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) GROUP BY rt0.c2 HAVING (NOT (MIN(COUNT(SUM(v0.c0))))) UNION ALL SELECT rt0.c2 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON (+ (((('-1144817644')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) GROUP BY rt0.c2 HAVING ((MIN(COUNT(SUM(v0.c0)))) ISNULL);
SELECT SUM(CASE (- (rt0.c0))  WHEN v0.c2 COLLATE BINARY THEN ((v0.c1)LIKE(v0.c2)) ELSE vt0.c1 COLLATE BINARY END) FROM rt0, v0, t0, vt0 ORDER BY (((((vt0.c0, t0.c0, rt0.c3))>((rt0.c3, rt0.c4, rt0.c1)))) BETWEEN ((vt0.c0 IN (rt0.c4, v0.c1))) AND (((rt0.c1)>=(v0.c0))));
SELECT ALL * FROM v0 NATURAL JOIN t0;
SELECT * FROM v0 NATURAL JOIN t0 WHERE (((v0.c1) NOT BETWEEN ((v0.c2 IN ())) AND ((v0.c2 IN ())))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((NOT (((v0.c1) NOT BETWEEN ((v0.c2 IN ())) AND ((v0.c2 IN ())))))) UNION ALL SELECT * FROM v0 NATURAL JOIN t0 WHERE (((((v0.c1) NOT BETWEEN ((v0.c2 IN ())) AND ((v0.c2 IN ())))) ISNULL));
SELECT ALL * FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c4)>=(vt0.c1))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c4)>=(vt0.c1))) ISNULL)))) GROUP BY rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c4)>=(vt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2, rt0.c2, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2, rt0.c2, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2, rt0.c2, v0.c0 HAVING CASE ((COUNT(AVG(rt0.c1)))*(v0.c1))  WHEN GROUP_CONCAT(COUNT(MIN(AVG(GROUP_CONCAT(MIN(rt0.c1)))))) THEN ((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c2)) ELSE ((((TOTAL(rt0.c1))OR(TOTAL(v0.c0))))AND('⡬1㊚]l8f9?')) END UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2, rt0.c2, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2, rt0.c2, v0.c0 HAVING (NOT (CASE ((COUNT(AVG(rt0.c1)))*(v0.c1))  WHEN GROUP_CONCAT(COUNT(MIN(AVG(GROUP_CONCAT(MIN(rt0.c1)))))) THEN ((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c2)) ELSE ((((TOTAL(rt0.c1))OR(TOTAL(v0.c0))))AND('⡬1㊚]l8f9?')) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2, rt0.c2, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c2, rt0.c2, v0.c0 HAVING ((CASE ((COUNT(AVG(rt0.c1)))*(v0.c1))  WHEN GROUP_CONCAT(COUNT(MIN(AVG(GROUP_CONCAT(MIN(rt0.c1)))))) THEN ((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c2)) ELSE ((((TOTAL(rt0.c1))OR(TOTAL(v0.c0))))AND('⡬1㊚]l8f9?')) END) ISNULL);
SELECT v0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1, v0.c2 FROM t0, vt0, rt0, v0;
SELECT ALL v0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1, v0.c2 FROM t0, vt0, rt0, v0 WHERE (CAST((((v0.c1))<((rt0.c0))) AS BLOB)) UNION ALL SELECT v0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1, v0.c2 FROM t0, vt0 NOT INDEXED, rt0, v0 WHERE ((NOT (CAST((((v0.c1))<((rt0.c0))) AS BLOB)))) UNION ALL SELECT ALL v0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1, v0.c2 FROM t0, vt0, rt0, v0 WHERE (((CAST((((v0.c1))<((rt0.c0))) AS BLOB)) ISNULL));
SELECT v0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1, v0.c2 FROM t0, vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((t0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((t0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL v0.c2, vt0.c0 FROM v0, vt0 GROUP BY v0.c2, vt0.c0;
SELECT ALL v0.c2, vt0.c0 FROM v0, vt0 WHERE (((LAST_INSERT_ROWID()) BETWEEN (v0.c2 COLLATE NOCASE) AND (CAST(vt0.c1 AS REAL)))) GROUP BY v0.c2, vt0.c0 UNION SELECT ALL v0.c2, vt0.c0 FROM v0, vt0 WHERE ((NOT (((LAST_INSERT_ROWID()) BETWEEN (v0.c2 COLLATE NOCASE) AND (CAST(vt0.c1 AS REAL)))))) GROUP BY v0.c2, vt0.c0 UNION SELECT v0.c2, vt0.c0 FROM v0, vt0 WHERE (((((LAST_INSERT_ROWID()) BETWEEN (v0.c2 COLLATE NOCASE) AND (CAST(vt0.c1 AS REAL)))) ISNULL)) GROUP BY v0.c2, vt0.c0;
SELECT ALL v0.c2, vt0.c0 FROM v0, vt0 GROUP BY v0.c2, vt0.c0;
SELECT rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 HAVING ((MIN(0.905903998909782)) NOTNULL) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 HAVING (NOT (((MIN(0.905903998909782)) NOTNULL))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 HAVING ((((MIN(0.905903998909782)) NOTNULL)) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 HAVING ((MIN(0.905903998909782)) NOTNULL) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 HAVING (NOT (((MIN(0.905903998909782)) NOTNULL))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 HAVING ((((MIN(0.905903998909782)) NOTNULL)) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt0.c0, 0.3808071661682869)) ISNULL) RIGHT OUTER JOIN v0 ON CAST(rt0.c0 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c3, t0.c0, v0.c1, rt0.c4, v0.c2, rt0.c1;
SELECT ALL * FROM vt0, rt0, t0, v0;
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (((LIKELY('-503546537'))<=((v0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, t0, v0 WHERE ((NOT (((LIKELY('-503546537'))<=((v0.c0 IN ())))))) UNION ALL SELECT * FROM vt0, rt0, t0, v0 WHERE (((((LIKELY('-503546537'))<=((v0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0, rt0, t0, v0;
SELECT DISTINCT * FROM v0, vt0, rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0, vt0, rt0 NATURAL JOIN t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1))) NOTNULL)) UNION SELECT DISTINCT * FROM v0, vt0, rt0 NATURAL JOIN t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 NATURAL JOIN t0 WHERE (((((((t0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0 NATURAL JOIN t0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((((('-688168305')GLOB(rt0.c4))) NOTNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((('-688168305')GLOB(rt0.c4))) NOTNULL)))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((('-688168305')GLOB(rt0.c4))) NOTNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING CASE WHEN -698031484 THEN rt0.c2 WHEN rt0.c3 THEN '-1362633510' WHEN rt0.c3 THEN rt0.c1 END COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (CASE WHEN -698031484 THEN rt0.c2 WHEN rt0.c3 THEN '-1362633510' WHEN rt0.c3 THEN rt0.c1 END COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING ((CASE WHEN -698031484 THEN rt0.c2 WHEN rt0.c3 THEN '-1362633510' WHEN rt0.c3 THEN rt0.c1 END COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING CASE WHEN -698031484 THEN rt0.c2 WHEN rt0.c3 THEN '-1362633510' WHEN rt0.c3 THEN rt0.c1 END COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (CASE WHEN -698031484 THEN rt0.c2 WHEN rt0.c3 THEN '-1362633510' WHEN rt0.c3 THEN rt0.c1 END COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING ((CASE WHEN -698031484 THEN rt0.c2 WHEN rt0.c3 THEN '-1362633510' WHEN rt0.c3 THEN rt0.c1 END COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c2, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ());
SELECT ALL v0.c2, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE ((- (v0.c2))) UNION ALL SELECT ALL v0.c2, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE ((NOT ((- (v0.c2))))) UNION ALL SELECT ALL v0.c2, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE ((((- (v0.c2))) ISNULL));
SELECT ALL v0.c2, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ());
SELECT DISTINCT * FROM rt0, vt0, t0, v0;
SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0, t0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0, v0;
SELECT rt0.c0, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((NOT (rt0.c3))))<=((((rt0.c3)>>(rt0.c3))))) GROUP BY rt0.c0, v0.c1;
SELECT ALL rt0.c0, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((NOT (rt0.c3))))<=((((rt0.c3)>>(rt0.c3))))) WHERE (UNLIKELY('.(W')) GROUP BY rt0.c0, v0.c1 UNION SELECT ALL rt0.c0, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((NOT (rt0.c3))))<=((((rt0.c3)>>(rt0.c3))))) WHERE ((NOT (UNLIKELY('.(W')))) GROUP BY rt0.c0, v0.c1 UNION SELECT ALL rt0.c0, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((NOT (rt0.c3))))<=((((rt0.c3)>>(rt0.c3))))) WHERE (((UNLIKELY('.(W')) ISNULL)) GROUP BY rt0.c0, v0.c1;
SELECT rt0.c0, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((NOT (rt0.c3))))<=((((rt0.c3)>>(rt0.c3))))) GROUP BY rt0.c0, v0.c1;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, t0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, t0 GROUP BY rt0.c3, rt0.c4 HAVING AVG(MIN(AVG(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, t0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (AVG(MIN(AVG(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, t0 GROUP BY rt0.c3, rt0.c4 HAVING ((AVG(MIN(AVG(rt0.c2)) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (TRIM(CAST('u' AS NUMERIC), ((vt0.c1)>=(v0.c2)))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (TRIM(CAST('u' AS NUMERIC), ((vt0.c1)>=(v0.c2)))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((TRIM(CAST('u' AS NUMERIC), ((vt0.c1)>=(v0.c2)))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((2017845247)OR(rt0.c0)))AND(rt0.c0)))OR((((x'27b6'))<=((rt0.c0)))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((2017845247)OR(rt0.c0)))AND(rt0.c0)))OR((((x'27b6'))<=((rt0.c0))))) WHERE (UNLIKELY(DISTINCT CASE 0.4586174222025724  WHEN rt0.c0 THEN rt0.c4 END)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((2017845247)OR(rt0.c0)))AND(rt0.c0)))OR((((x'27b6'))<=((rt0.c0))))) WHERE ((NOT (UNLIKELY(DISTINCT CASE 0.4586174222025724  WHEN rt0.c0 THEN rt0.c4 END)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((2017845247)OR(rt0.c0)))AND(rt0.c0)))OR((((x'27b6'))<=((rt0.c0))))) WHERE (((UNLIKELY(DISTINCT CASE 0.4586174222025724  WHEN rt0.c0 THEN rt0.c4 END)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((2017845247)OR(rt0.c0)))AND(rt0.c0)))OR((((x'27b6'))<=((rt0.c0)))));
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (v0.c1) AND ((+ (v0.c1))))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT ((((- (v0.c0))) NOT BETWEEN (v0.c1) AND ((+ (v0.c1))))))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((((((- (v0.c0))) NOT BETWEEN (v0.c1) AND ((+ (v0.c1))))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL * FROM rt0, vt0, v0, t0;
SELECT * FROM rt0, vt0, v0, t0 WHERE (CAST('0.9463665163732902' AS INTEGER)) UNION ALL SELECT ALL * FROM rt0, vt0, v0, t0 WHERE ((NOT (CAST('0.9463665163732902' AS INTEGER)))) UNION ALL SELECT * FROM rt0, vt0, v0, t0 WHERE (((CAST('0.9463665163732902' AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0, vt0, v0, t0;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON LOWER(0.9399199884426763);
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON LOWER(0.9399199884426763) WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((((((((NULL)OR(v0.c2)))AND(rt0.c1)))AND(v0.c2)))AND(v0.c2)) THEN CAST(rt0.c1 AS BLOB) END) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON LOWER(0.9399199884426763) WHERE ((NOT (CASE v0.c0 COLLATE NOCASE  WHEN ((((((((NULL)OR(v0.c2)))AND(rt0.c1)))AND(v0.c2)))AND(v0.c2)) THEN CAST(rt0.c1 AS BLOB) END))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON LOWER(0.9399199884426763) WHERE (((CASE v0.c0 COLLATE NOCASE  WHEN ((((((((NULL)OR(v0.c2)))AND(rt0.c1)))AND(v0.c2)))AND(v0.c2)) THEN CAST(rt0.c1 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON LOWER(0.9399199884426763);
SELECT ALL v0.c1, v0.c2, rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c3, t0.c0, rt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((v0.c1)&(rt0.c4)))AND(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)) RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY v0.c1, v0.c2, rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c3, t0.c0, rt0.c0;
SELECT ALL v0.c1 FROM v0, t0, rt0, vt0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, t0, rt0, vt0 GROUP BY v0.c1 HAVING GROUP_CONCAT(((((((((v0.c0)OR(rt0.c1)))OR(AVG(TOTAL(AVG(SUM('')))))))OR(AVG(v0.c1))))OR(rt0.c4))) UNION ALL SELECT ALL v0.c1 FROM v0, t0, rt0, vt0 GROUP BY v0.c1 HAVING (NOT (GROUP_CONCAT(((((((((v0.c0)OR(rt0.c1)))OR(AVG(TOTAL(AVG(SUM('')))))))OR(AVG(v0.c1))))OR(rt0.c4))))) UNION ALL SELECT ALL v0.c1 FROM v0, t0, rt0, vt0 GROUP BY v0.c1 HAVING ((GROUP_CONCAT(((((((((v0.c0)OR(rt0.c1)))OR(AVG(TOTAL(AVG(SUM('')))))))OR(AVG(v0.c1))))OR(rt0.c4)))) ISNULL);
SELECT ALL * FROM t0, v0, rt0, vt0;
SELECT * FROM t0, v0, rt0, vt0 WHERE (((((((vt0.c1)<=(v0.c1)))AND(0.06292175706604286)))OR(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM t0, v0, rt0, vt0 WHERE ((NOT (((((((vt0.c1)<=(v0.c1)))AND(0.06292175706604286)))OR(((vt0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM t0, v0, rt0, vt0 NOT INDEXED WHERE (((((((((vt0.c1)<=(v0.c1)))AND(0.06292175706604286)))OR(((vt0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM t0, v0, rt0, vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM CROSS JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON vt0.c1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM CROSS JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON vt0.c1 WHERE (((((rt0.c0)<=(rt0.c3)))-(UNLIKELY(t0.c0)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM CROSS JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON vt0.c1 WHERE ((NOT (((((rt0.c0)<=(rt0.c3)))-(UNLIKELY(t0.c0)))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM CROSS JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON vt0.c1 WHERE (((((((rt0.c0)<=(rt0.c3)))-(UNLIKELY(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM CROSS JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON vt0.c1;
SELECT ALL v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0, rt0, v0 WHERE ((((rt0.c2))==((7.63321489E8)))) GROUP BY v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0, rt0, v0 WHERE ((NOT ((((rt0.c2))=((7.63321489E8)))))) GROUP BY v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3 UNION SELECT v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0, rt0, v0 WHERE ((((((rt0.c2))=((7.63321489E8)))) ISNULL)) GROUP BY v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT ALL v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING CASE SUM(rt0.c0)  WHEN COUNT(*) THEN SUM(rt0.c4) WHEN GROUP_CONCAT(COUNT(*)) THEN ((rt0.c4)||(COUNT(MIN(rt0.c4)))) WHEN CAST(rt0.c2 AS TEXT) THEN MAX(rt0.c3) ELSE MAX(rt0.c4) END UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (CASE SUM(rt0.c0)  WHEN COUNT(*) THEN SUM(rt0.c4) WHEN GROUP_CONCAT(COUNT(*)) THEN ((rt0.c4)||(COUNT(MIN(rt0.c4)))) WHEN CAST(rt0.c2 AS TEXT) THEN MAX(rt0.c3) ELSE MAX(rt0.c4) END)) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING ((CASE SUM(rt0.c0)  WHEN COUNT(*) THEN SUM(rt0.c4) WHEN GROUP_CONCAT(COUNT(*)) THEN ((rt0.c4)||(COUNT(MIN(rt0.c4)))) WHEN CAST(rt0.c2 AS TEXT) THEN MAX(rt0.c3) ELSE MAX(rt0.c4) END) ISNULL);
SELECT ALL * FROM v0, t0 FULL OUTER JOIN rt0 ON (((v0.c0, t0.c0, t0.c0))>((rt0.c0, vt0.c1, rt0.c4))) COLLATE BINARY FULL OUTER JOIN vt0 ON rt0.c0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c2)OR(v0.c2)))OR(v0.c0)))) AND ((((v0.c0)LIKE(v0.c2)))));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c2)OR(v0.c2)))OR(v0.c0)))) AND ((((v0.c0)LIKE(v0.c2))))) WHERE (CAST((- (t0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c2)OR(v0.c2)))OR(v0.c0)))) AND ((((v0.c0)LIKE(v0.c2))))) WHERE ((NOT (CAST((- (t0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c2)OR(v0.c2)))OR(v0.c0)))) AND ((((v0.c0)LIKE(v0.c2))))) WHERE (((CAST((- (t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((v0.c2)OR(v0.c2)))OR(v0.c0)))) AND ((((v0.c0)LIKE(v0.c2)))));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))<((CAST(t0.c0 AS BLOB))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))<((CAST(t0.c0 AS BLOB))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))<((CAST(t0.c0 AS BLOB))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(GROUP_CONCAT(MAX(vt0.c1)) AS TEXT) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(MAX(vt0.c1)) AS TEXT))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(GROUP_CONCAT(MAX(vt0.c1)) AS TEXT)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((+ (((v0.c1)>(v0.c1))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((+ (((v0.c1)>(v0.c1))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((+ (((v0.c1)>(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c2 FROM rt0, t0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, t0, v0 WHERE (((rt0.c0 COLLATE BINARY)<((rt0.c0 IN ())))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM rt0, t0, v0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)<((rt0.c0 IN ())))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM rt0, t0, v0 WHERE (((((rt0.c0 COLLATE BINARY)<((rt0.c0 IN ())))) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, t0, v0 GROUP BY v0.c2;
SELECT ALL v0.c1 FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)==(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt0 NOT INDEXED CROSS JOIN v0 ON CASE ((vt0.c1)=(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c1 FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)==(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)=(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1 FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)==(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt0 NOT INDEXED CROSS JOIN v0 ON CASE ((vt0.c1)=(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c1 FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)==(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)=(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1 FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)==(NULL))  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c2)))OR(vt0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END THEN ((v0.c1) NOTNULL) WHEN ((v0.c2) IS FALSE) THEN ((v0.c0)<(vt0.c1)) END GROUP BY v0.c1;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS TRUE)) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1) IS TRUE)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE)) NOT NULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((rt0.c4) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN 0.06539289429431472 END) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((v0.c2)))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c4) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN 0.06539289429431472 END) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((v0.c2)))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((rt0.c4) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN 0.06539289429431472 END) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((v0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, rt0, v0 WHERE (rt0.c3) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2 UNION SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, rt0, v0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2 UNION SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, rt0, v0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2;
SELECT t0.c0, v0.c2, rt0.c2, v0.c1 FROM t0, v0 CROSS JOIN rt0 ON ((((v0.c1 COLLATE RTRIM)OR((((rt0.c4, rt0.c2, v0.c1, v0.c2, v0.c1))>=((v0.c1, t0.c0, v0.c0, v0.c2, rt0.c1))))))OR(v0.c2)) GROUP BY t0.c0, v0.c2, rt0.c2, v0.c1;
SELECT t0.c0, v0.c2, rt0.c2, v0.c1 FROM t0, v0 CROSS JOIN rt0 ON ((((v0.c1 COLLATE RTRIM)OR((((rt0.c4, rt0.c2, v0.c1, v0.c2, v0.c1))>=((v0.c1, t0.c0, v0.c0, v0.c2, rt0.c1))))))OR(v0.c2)) GROUP BY t0.c0, v0.c2, rt0.c2, v0.c1 HAVING MIN(AVG(rt0.c1)) UNION ALL SELECT t0.c0, v0.c2, rt0.c2, v0.c1 FROM t0, v0 CROSS JOIN rt0 ON ((((v0.c1 COLLATE RTRIM)OR((((rt0.c4, rt0.c2, v0.c1, v0.c2, v0.c1))>=((v0.c1, t0.c0, v0.c0, v0.c2, rt0.c1))))))OR(v0.c2)) GROUP BY t0.c0, v0.c2, rt0.c2, v0.c1 HAVING (NOT (MIN(AVG(rt0.c1)))) UNION ALL SELECT t0.c0, v0.c2, rt0.c2, v0.c1 FROM t0, v0 CROSS JOIN rt0 ON ((((v0.c1 COLLATE RTRIM)OR((((rt0.c4, rt0.c2, v0.c1, v0.c2, v0.c1))>=((v0.c1, t0.c0, v0.c0, v0.c2, rt0.c1))))))OR(v0.c2)) GROUP BY t0.c0, v0.c2, rt0.c2, v0.c1 HAVING ((MIN(AVG(rt0.c1))) ISNULL);
SELECT ALL MAX(HEX(DISTINCT ((((rt0.c2)OR(rt0.c4)))OR(v0.c1)))) FROM vt0, t0, v0, rt0 ORDER BY ((v0.c0 COLLATE RTRIM)IS(((vt0.c1)<(v0.c1))))  NULLS LAST;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c2) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c2))) UNION ALL SELECT * FROM v0 WHERE (((v0.c2) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c2, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((((v0.c1)*(rt0.c2)))OR((vt0.c1 IN (t0.c0)))))AND(((rt0.c0)IS NOT(rt0.c0)))))AND(v0.c1)))OR('1338559614')) CROSS JOIN t0 ON (~ (rt0.c0));
SELECT vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 GROUP BY vt0.c1, v0.c2;
SELECT vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 WHERE ('2076240368') GROUP BY vt0.c1, v0.c2 UNION SELECT ALL vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 WHERE ((NOT ('2076240368'))) GROUP BY vt0.c1, v0.c2 UNION SELECT ALL vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 WHERE ((('2076240368') ISNULL)) GROUP BY vt0.c1, v0.c2;
SELECT vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 GROUP BY vt0.c1, v0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(t0.c0)) NOT BETWEEN (MAX(SUM(MIN(SUM(NULL))))) AND (GROUP_CONCAT(MIN(TOTAL(AVG(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(t0.c0)) NOT BETWEEN (MAX(SUM(MIN(SUM(NULL))))) AND (GROUP_CONCAT(MIN(TOTAL(AVG(GROUP_CONCAT(COUNT(*)))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TOTAL(t0.c0)) NOT BETWEEN (MAX(SUM(MIN(SUM(NULL))))) AND (GROUP_CONCAT(MIN(TOTAL(AVG(GROUP_CONCAT(COUNT(*))))))))) ISNULL);
SELECT ALL SUM(((CAST(vt0.c1 AS TEXT)) BETWEEN (((v0.c0)GLOB(vt0.c1))) AND (((v0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) FROM rt0, vt0, t0, v0;
SELECT rt0.c1, rt0.c4, v0.c1, v0.c0 FROM vt0, v0, rt0;
SELECT rt0.c1, rt0.c4, v0.c1, v0.c0 FROM vt0, v0, rt0 WHERE ('') UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c1, v0.c0 FROM vt0, v0, rt0 WHERE ((NOT (''))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c1, v0.c0 FROM vt0, v0, rt0 WHERE ((('') ISNULL));
SELECT rt0.c1, rt0.c4, v0.c1, v0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT vt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c1, (vt0.c1 IN ()), ((t0.c0) NOTNULL), CAST(t0.c0 AS BLOB), (vt0.c1 IN ()))) AND (((+ (vt0.c0)), vt0.c0 COLLATE BINARY, (((t0.c0))>=((vt0.c1))), ((vt0.c0) ISNULL), ((t0.c0) NOT NULL))));
SELECT DISTINCT vt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c1, (vt0.c1 IN ()), ((t0.c0) NOTNULL), CAST(t0.c0 AS BLOB), (vt0.c1 IN ()))) AND (((+ (vt0.c0)), vt0.c0 COLLATE BINARY, (((t0.c0))>=((vt0.c1))), ((vt0.c0) ISNULL), ((t0.c0) NOT NULL)))) WHERE (0.4705625438718609) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c1, (vt0.c1 IN ()), ((t0.c0) NOTNULL), CAST(t0.c0 AS BLOB), (vt0.c1 IN ()))) AND (((+ (vt0.c0)), vt0.c0 COLLATE BINARY, (((t0.c0))>=((vt0.c1))), ((vt0.c0) ISNULL), ((t0.c0) NOT NULL)))) WHERE ((NOT (0.4705625438718609))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c1, (vt0.c1 IN ()), ((t0.c0) NOTNULL), CAST(t0.c0 AS BLOB), (vt0.c1 IN ()))) AND (((+ (vt0.c0)), vt0.c0 COLLATE BINARY, (((t0.c0))>=((vt0.c1))), ((vt0.c0) ISNULL), ((t0.c0) NOT NULL)))) WHERE (((0.4705625438718609) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c1, (vt0.c1 IN ()), ((t0.c0) NOTNULL), CAST(t0.c0 AS BLOB), (vt0.c1 IN ()))) AND (((+ (vt0.c0)), vt0.c0 COLLATE BINARY, (((t0.c0))>=((vt0.c1))), ((vt0.c0) ISNULL), ((t0.c0) NOT NULL))));
SELECT ALL rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((((NULL)<=(rt0.c2)), CASE WHEN rt0.c2 THEN 0.7802189001432638 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))>(((vt0.c1 IN (x'')), ((((rt0.c1)OR(rt0.c4)))AND(vt0.c1)), CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((((NULL)<=(rt0.c2)), CASE WHEN rt0.c2 THEN 0.7802189001432638 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))>(((vt0.c1 IN (x'')), ((((rt0.c1)OR(rt0.c4)))AND(vt0.c1)), CAST(rt0.c0 AS INTEGER)))) WHERE (((rt0.c3)<=((rt0.c1 IN ())))) GROUP BY rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3 UNION SELECT rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((((NULL)<=(rt0.c2)), CASE WHEN rt0.c2 THEN 0.7802189001432638 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))>(((vt0.c1 IN (x'')), ((((rt0.c1)OR(rt0.c4)))AND(vt0.c1)), CAST(rt0.c0 AS INTEGER)))) WHERE ((NOT (((rt0.c3)<=((rt0.c1 IN ())))))) GROUP BY rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((((NULL)<=(rt0.c2)), CASE WHEN rt0.c2 THEN 0.7802189001432638 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))>(((vt0.c1 IN (x'')), ((((rt0.c1)OR(rt0.c4)))AND(vt0.c1)), CAST(rt0.c0 AS INTEGER)))) WHERE (((((rt0.c3)<=((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((((NULL)<=(rt0.c2)), CASE WHEN rt0.c2 THEN 0.7802189001432638 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))>(((vt0.c1 IN (x'')), ((((rt0.c1)OR(rt0.c4)))AND(vt0.c1)), CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c0, t0.c0, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0 HAVING MIN(COUNT(COUNT(TOTAL(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0 HAVING (NOT (MIN(COUNT(COUNT(TOTAL(SUM(vt0.c0))))))) UNION ALL SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0 HAVING ((MIN(COUNT(COUNT(TOTAL(SUM(vt0.c0)))))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c1)))AND(t0.c0)))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c1)))AND(t0.c0)))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c1)))AND(t0.c0)))) ISNULL));
SELECT t0.c0, vt0.c0 FROM t0, vt0;
