-- Time: 2024/06/09 21:11:29
-- Database: database70
-- Database version: 3.40.0
-- seed value: 490637770
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 TEXT ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (0x16881ee, NULL, '23626222', 0x16881ee); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c2) VALUES ('1351879121', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c3) VALUES (0.9361357329945135); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7443209114188118); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'62c3'), (1351879121), ('-1251196223'), (0.8168202943120447), (x'd01f'), ('-1464229785'), (x''); -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA mmap_size = -2252835097196042208; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='~V覭H' WHERE ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('1328398034', '-1163412316', -240141300, x'b2ac'); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(x'', NULL, x''); -- 0ms;
ANALYZE; -- 4ms;
PRAGMA cache_spill; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.soft_heap_limit = 23626222; -- 0ms;
UPDATE vt1 SET c0=x'' WHERE 0.29800649896098885; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.29800649896098885), (0.1366214944663755), (x'14f1'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.cache_spill = -4926754488796532846; -- 0ms;
REINDEX; -- 0ms;
REINDEX  vt1; -- 0ms;
UPDATE vt1 SET (c0)=(-2.401413E8) WHERE ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM; -- 0ms;
PRAGMA incremental_vacuum(-1713282166); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0Xffffffffb42f1e4b), (0X5d0ac697), (0.20639682357501876); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.9918710974017104); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('#c>HV', x''); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 1ms;
UPDATE vt1 SET (c0)=(x'') WHERE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, ((vt1.c0) IS FALSE), (vt1.c0 IN ()))) AND ((NULL, ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)), STRFTIME(vt1.c0, vt1.c0, x'', vt1.c0, vt1.c0)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(NULL) WHERE x''; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'9b1c'); -- 0ms;
UPDATE vt1 SET (c0, c0, c0)=(0x479228d1, x'', '-1464229785') WHERE ((vt1.c0 COLLATE RTRIM)|(((vt1.c0)<=(vt1.c0)))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c3=x''; -- 1ms;
UPDATE OR ROLLBACK vt1 SET c0='680364461' WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(CAST(vt1.c0 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (1.200761041E9); -- 2ms;
INSERT OR FAIL INTO vt1(c0) VALUES (1560987287); -- 1ms;
REINDEX  vt1; -- 0ms;
UPDATE vt1 SET c0='-1389570277', c0='-1163412316'; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('#c>HV'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), ('2030343303'), ('w욗'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE ((((((((((vt1.c0) NOTNULL))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC))))OR(vt1.c0)); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c3) VALUES (x'', NULL); -- 0ms;
ANALYZE; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c2)=('*Zc', 0X16881ee) WHERE LIKE(rt0.c0, rt0.c1, 'a') COLLATE NOCASE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (x'e3a6', 0.9649679678081063, '-1163412316'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('g/C)'); -- 0ms;
UPDATE rt0 SET c0=x''; -- 0ms;
UPDATE rt0 SET (c0)=(x'deae') WHERE (((rt0.c1 IN ()))<<(((rt0.c2) ISNULL))); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (''); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 1ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('-240141300'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0, c0)=(1.7976931348623157E308, '	RO4*/'); -- 0ms;
UPDATE vt0 SET (c0, c0)=(NULL, -1.271980469E9) WHERE (((~ (vt0.c0)))<(vt0.c0)); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('1490602516'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (rt0.c0 IN ()) COLLATE RTRIM FROM rt0; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET (c0)=(0.9918710974017104); -- 1ms;
UPDATE vt1 SET (c0)=(x''); -- 1ms;
UPDATE OR IGNORE rt0 SET c2='1341959647' WHERE (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) IN ()); -- 0ms;
UPDATE OR ABORT rt0 SET c2=x'fe92'; -- 0ms;
ANALYZE; -- 1ms;
UPDATE vt1 SET (c0)=('996731985'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-693456287')<=(0.5754561280095697)))>(CASE WHEN NULL THEN NULL ELSE '' END)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c3, c2) VALUES (x'', '1281478791', x'e2dc865e', '1539009360'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c0=x''; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ABORT rt0 SET c3=NULL, c2=-1.271980469E9 WHERE ((rt0.c1 COLLATE NOCASE)AND(((rt0.c1) NOTNULL))); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0x4c61d087; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR ROLLBACK t1 SET (c0, c0)=(NULL, NULL) WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)) IN (x'', ((((t1.c0)OR(t1.c0)))OR(t1.c0)))); -- 0ms;
UPDATE OR REPLACE vt1 SET c0=NULL WHERE 0x2f1a2d0d; -- 1ms;
ANALYZE; -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (7.90244621E8, 0xffffffffb56c42c1, x'c2fc', x''), (NULL, 0.04338738921996099, NULL, 0.27590355586240345), ('', '1341959647', '()', NULL); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-2014292889'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'1bff', c0='D_x0MSeR!' WHERE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, vt0.c0, ((vt0.c0)|(vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)), vt0.c0))); -- 0ms;
END; -- 0ms;
ANALYZE v0; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c2, c1, c0) VALUES ('Infinity', '', NULL, x''); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1, v0, t1;
SELECT ALL * FROM vt1, v0 NOT INDEXED, t1 WHERE (((CAST(v0.c0 AS INTEGER))-(CAST(t1.c0 AS REAL)))) UNION ALL SELECT ALL * FROM vt1, v0, t1 WHERE ((NOT (((CAST(v0.c0 AS INTEGER))-(CAST(t1.c0 AS REAL)))))) UNION ALL SELECT * FROM vt1, v0, t1 WHERE (((((CAST(v0.c0 AS INTEGER))-(CAST(t1.c0 AS REAL)))) ISNULL));
SELECT * FROM vt1, v0, t1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON x'' FULL OUTER JOIN vt1 ON (((((rt0.c0))>((vt0.c0)))) BETWEEN (x'') AND ((((0.8700519264625118))==((vt0.c0)))));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON x'' FULL OUTER JOIN vt1 ON (((((rt0.c0))>((vt0.c0)))) BETWEEN (x'') AND ((((0.8700519264625118))==((vt0.c0))))) WHERE (RTRIM(NULL)) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON x'' FULL OUTER JOIN vt1 ON (((((rt0.c0))>((vt0.c0)))) BETWEEN (x'') AND ((((0.8700519264625118))=((vt0.c0))))) WHERE ((NOT (RTRIM(NULL)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON x'' FULL OUTER JOIN vt1 ON (((((rt0.c0))>((vt0.c0)))) BETWEEN (x'') AND ((((0.8700519264625118))==((vt0.c0))))) WHERE (((RTRIM(NULL)) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON x'' FULL OUTER JOIN vt1 ON (((((rt0.c0))>((vt0.c0)))) BETWEEN (x'') AND ((((0.8700519264625118))==((vt0.c0)))));
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, vt1 WHERE ((+ (v0.c0)) COLLATE RTRIM COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((+ (v0.c0)) COLLATE RTRIM COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0, vt1 WHERE ((((+ (v0.c0)) COLLATE RTRIM COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING MIN(SUM(TOTAL(rt0.c1))) COLLATE NOCASE UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (MIN(SUM(TOTAL(rt0.c1))) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING ((MIN(SUM(TOTAL(rt0.c1))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM t1, v0, vt1, rt0, vt0;
SELECT ALL * FROM t1, v0, vt1, rt0, vt0 WHERE (CAST(vt0.c0 AS REAL)) UNION ALL SELECT * FROM t1, v0, vt1, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT * FROM t1, v0, vt1, rt0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT ALL * FROM t1, v0, vt1, rt0, vt0;
SELECT DISTINCT * FROM rt0, t1 LEFT OUTER JOIN v0 ON '1341959647' INNER JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM rt0, t1 LEFT OUTER JOIN v0 ON '1341959647' INNER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, t1 LEFT OUTER JOIN v0 ON '1341959647' INNER JOIN vt0 ON vt0.c0 WHERE ((NOT (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, t1 LEFT OUTER JOIN v0 ON '1341959647' INNER JOIN vt0 ON vt0.c0 WHERE (((((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, t1 LEFT OUTER JOIN v0 ON '1341959647' INNER JOIN vt0 ON vt0.c0;
SELECT ALL vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, vt0, t1 LEFT OUTER JOIN v0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR('H*JHtt')) AS REAL) LEFT OUTER JOIN vt1 ON (- (((rt0.c0)<>(t1.c0)))) GROUP BY vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, vt0, t1 LEFT OUTER JOIN v0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR('H*JHtt')) AS REAL) LEFT OUTER JOIN vt1 ON (- (((rt0.c0)<>(t1.c0)))) WHERE ('-1389570277') GROUP BY vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, vt0, t1 LEFT OUTER JOIN v0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR('H*JHtt')) AS REAL) LEFT OUTER JOIN vt1 ON (- (((rt0.c0)!=(t1.c0)))) WHERE ((NOT ('-1389570277'))) GROUP BY vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, vt0, t1 LEFT OUTER JOIN v0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR('H*JHtt')) AS REAL) LEFT OUTER JOIN vt1 ON (- (((rt0.c0)!=(t1.c0)))) WHERE ((('-1389570277') ISNULL)) GROUP BY vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, vt0, t1 LEFT OUTER JOIN v0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR('H*JHtt')) AS REAL) LEFT OUTER JOIN vt1 ON (- (((rt0.c0)<>(t1.c0)))) GROUP BY vt1.c0, rt0.c1, t1.c0, rt0.c3, v0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM rt0, t1 LEFT OUTER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON 0xffffffffc8c5dea9 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT ((rt0.c3)-(vt0.c0))) GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0, t1.c0, v0.c0;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (-1.464229785E9) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (-1.464229785E9))) UNION ALL SELECT * FROM t1 WHERE (((-1.464229785E9) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM v0, rt0, vt1, t1;
SELECT DISTINCT * FROM v0, rt0, vt1, t1 WHERE ((((((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) NOT NULL)) UNION SELECT DISTINCT * FROM v0, rt0, vt1, t1 WHERE ((NOT ((((((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, rt0, vt1, t1 WHERE ((((((((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt1, t1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 WHERE (LIKELY(DISTINCT rt0.c0 COLLATE BINARY)) GROUP BY rt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT (LIKELY(DISTINCT rt0.c0 COLLATE BINARY)))) GROUP BY rt0.c0, rt0.c2, vt1.c0 UNION SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 WHERE (((LIKELY(DISTINCT rt0.c0 COLLATE BINARY)) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*), MAX(v0.c0), CAST(COUNT(*) AS NUMERIC)))>=((((MAX(v0.c0)) NOT NULL), ((GROUP_CONCAT(COUNT(*)))+(v0.c0)), ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(TOTAL(x''))))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(*), MAX(v0.c0), CAST(COUNT(*) AS NUMERIC)))>=((((MAX(v0.c0)) NOT NULL), ((GROUP_CONCAT(COUNT(*)))+(v0.c0)), ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(TOTAL(x''))))AND(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(*), MAX(v0.c0), CAST(COUNT(*) AS NUMERIC)))>=((((MAX(v0.c0)) NOT NULL), ((GROUP_CONCAT(COUNT(*)))+(v0.c0)), ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(TOTAL(x''))))AND(v0.c0)))))) ISNULL);
SELECT ALL * FROM vt1, vt0, t1;
SELECT * FROM vt1, vt0, t1 WHERE (t1.c0) UNION ALL SELECT * FROM vt1, vt0, t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM vt1, vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM vt1, vt0, t1;
SELECT DISTINCT * FROM vt1, v0 INNER JOIN rt0 ON STRFTIME(TOTAL_CHANGES(), ((((NULL)OR(rt0.c2)))OR(t1.c0)), (rt0.c2 IN ()), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)), CASE WHEN v0.c0 THEN rt0.c3 ELSE t1.c0 END) INNER JOIN t1 ON t1.c0;
SELECT DISTINCT * FROM vt1, v0 INNER JOIN rt0 ON STRFTIME(TOTAL_CHANGES(), ((((NULL)OR(rt0.c2)))OR(t1.c0)), (rt0.c2 IN ()), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)), CASE WHEN v0.c0 THEN rt0.c3 ELSE t1.c0 END) INNER JOIN t1 ON t1.c0 WHERE (CASE ((vt1.c0) ISNULL)  WHEN ((NULL) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt0.c3 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM vt1, v0 INNER JOIN rt0 ON STRFTIME(TOTAL_CHANGES(), ((((NULL)OR(rt0.c2)))OR(t1.c0)), (rt0.c2 IN ()), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)), CASE WHEN v0.c0 THEN rt0.c3 ELSE t1.c0 END) INNER JOIN t1 ON t1.c0 WHERE ((NOT (CASE ((vt1.c0) ISNULL)  WHEN ((NULL) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt0.c3 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM vt1, v0 INNER JOIN rt0 ON STRFTIME(TOTAL_CHANGES(), ((((NULL)OR(rt0.c2)))OR(t1.c0)), (rt0.c2 IN ()), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)), CASE WHEN v0.c0 THEN rt0.c3 ELSE t1.c0 END) INNER JOIN t1 ON t1.c0 WHERE (((CASE ((vt1.c0) ISNULL)  WHEN ((NULL) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt0.c3 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM vt1, v0 INNER JOIN rt0 ON STRFTIME(TOTAL_CHANGES(), ((((NULL)OR(rt0.c2)))OR(t1.c0)), (rt0.c2 IN ()), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)), CASE WHEN v0.c0 THEN rt0.c3 ELSE t1.c0 END) INNER JOIN t1 ON t1.c0;
SELECT v0.c0, t1.c0 FROM vt0, t1, vt1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM vt0, t1, vt1, v0 WHERE (((((vt0.c0)<>('1624621625')))+(CAST(vt0.c0 AS TEXT)))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM vt0, t1, vt1, v0 WHERE ((NOT (((((vt0.c0)<>('1624621625')))+(CAST(vt0.c0 AS TEXT)))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM vt0, t1, vt1, v0 WHERE (((((((vt0.c0)<>('1624621625')))+(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM vt0, t1, vt1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, t1.c0, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, t1.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, t1.c0, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, t1.c0, vt1.c0 HAVING ((TRIM(DISTINCT COUNT(TOTAL(rt0.c1)))) BETWEEN (((TOTAL(vt0.c0))/(TOTAL(rt0.c3)))) AND (((vt1.c0) NOT BETWEEN (rt0.c2) AND (MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, t1.c0, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, t1.c0, vt1.c0 HAVING (NOT (((TRIM(DISTINCT COUNT(TOTAL(rt0.c1)))) BETWEEN (((TOTAL(vt0.c0))/(TOTAL(rt0.c3)))) AND (((vt1.c0) NOT BETWEEN (rt0.c2) AND (MIN(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, t1.c0, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, t1.c0, vt1.c0 HAVING ((((TRIM(DISTINCT COUNT(TOTAL(rt0.c1)))) BETWEEN (((TOTAL(vt0.c0))/(TOTAL(rt0.c3)))) AND (((vt1.c0) NOT BETWEEN (rt0.c2) AND (MIN(rt0.c2)))))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), CAST(rt0.c0 AS REAL), rt0.c1))<>((ROUND(vt1.c0, rt0.c3), vt1.c0, ((rt0.c1) NOT NULL)))) INNER JOIN vt1 ON (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) IN ());
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), CAST(rt0.c0 AS REAL), rt0.c1))!=((ROUND(vt1.c0, rt0.c3), vt1.c0, ((rt0.c1) NOT NULL)))) INNER JOIN vt1 ON (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) IN ()) WHERE (json_remove(CAST(rt0.c2 AS BLOB), (- (vt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), CAST(rt0.c0 AS REAL), rt0.c1))!=((ROUND(vt1.c0, rt0.c3), vt1.c0, ((rt0.c1) NOT NULL)))) INNER JOIN vt1 ON (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) IN ()) WHERE ((NOT (json_remove(CAST(rt0.c2 AS BLOB), (- (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), CAST(rt0.c0 AS REAL), rt0.c1))<>((ROUND(vt1.c0, rt0.c3), vt1.c0, ((rt0.c1) NOT NULL)))) INNER JOIN vt1 ON (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) IN ()) WHERE (((json_remove(CAST(rt0.c2 AS BLOB), (- (vt0.c0)))) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), CAST(rt0.c0 AS REAL), rt0.c1))<>((ROUND(vt1.c0, rt0.c3), vt1.c0, ((rt0.c1) NOT NULL)))) INNER JOIN vt1 ON (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) IN ());
SELECT DISTINCT * FROM t1, vt0, v0;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (HEX((t1.c0 IN ()))) UNION SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((NOT (HEX((t1.c0 IN ()))))) UNION SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((HEX((t1.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM t1, vt0, v0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((vt1.c0 IN ()) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((NOT ((vt1.c0 IN ()) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, v0 WHERE ((((vt1.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3;
SELECT v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3 HAVING CAST(CAST(MAX(COUNT(rt0.c3)) AS INTEGER) AS REAL) UNION ALL SELECT v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3 HAVING (NOT (CAST(CAST(MAX(COUNT(rt0.c3)) AS INTEGER) AS REAL))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3 HAVING ((CAST(CAST(MAX(COUNT(rt0.c3)) AS INTEGER) AS REAL)) ISNULL);
SELECT * FROM t1, vt0;
SELECT * FROM t1, vt0 WHERE ((NOT (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((NOT ((NOT (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((((NOT (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM t1, vt0;
SELECT DISTINCT rt0.c0, rt0.c3, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON CASE 0.9918710974017104  WHEN ((rt0.c1)%(x'')) THEN (NOT ('23626222')) END LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS INTEGER);
SELECT DISTINCT rt0.c0, rt0.c3, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON CASE 0.9918710974017104  WHEN ((rt0.c1)%(x'')) THEN (NOT ('23626222')) END LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS INTEGER) WHERE ((x'9578' IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c3, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON CASE 0.9918710974017104  WHEN ((rt0.c1)%(x'')) THEN (NOT ('23626222')) END LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS INTEGER) WHERE ((NOT ((x'9578' IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c3, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON CASE 0.9918710974017104  WHEN ((rt0.c1)%(x'')) THEN (NOT ('23626222')) END LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS INTEGER) WHERE ((((x'9578' IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON CASE 0.9918710974017104  WHEN ((rt0.c1)%(x'')) THEN (NOT ('23626222')) END LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS INTEGER);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN 0X3b68ec51 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) ISNULL)  WHEN 0x3b68ec51 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((v0.c0) ISNULL)  WHEN 0X3b68ec51 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING CAST(((COUNT(vt1.c0)) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) AS NUMERIC) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CAST(((COUNT(vt1.c0)) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(((COUNT(vt1.c0)) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) AS NUMERIC)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING CAST(((COUNT(vt1.c0)) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) AS NUMERIC) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CAST(((COUNT(vt1.c0)) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(((COUNT(vt1.c0)) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) AS NUMERIC)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT t1.c0, vt1.c0 FROM t1, vt1;
SELECT t1.c0, vt1.c0 FROM t1, vt1 WHERE ((((x'bff0' IN ())) IS TRUE)) UNION ALL SELECT t1.c0, vt1.c0 FROM t1, vt1 WHERE ((NOT ((((x'bff0' IN ())) IS TRUE)))) UNION ALL SELECT t1.c0, vt1.c0 FROM t1, vt1 WHERE ((((((x'bff0' IN ())) IS TRUE)) ISNULL));
SELECT t1.c0, vt1.c0 FROM t1, vt1;
SELECT DISTINCT t1.c0 FROM t1, vt1, vt0, v0;
SELECT DISTINCT t1.c0 FROM t1, vt1, vt0, v0 WHERE (((t1.c0)<(((vt1.c0) IS FALSE)))) UNION SELECT DISTINCT t1.c0 FROM t1, vt1, vt0, v0 WHERE ((NOT (((t1.c0)<(((vt1.c0) IS FALSE)))))) UNION SELECT DISTINCT t1.c0 FROM t1, vt1, vt0, v0 WHERE (((((t1.c0)<(((vt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, vt1, vt0, v0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, t1, rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, v0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, t1, rt0, vt0, vt1 WHERE (((CAST('-0.0' AS TEXT)) NOT NULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, t1, rt0, vt0, vt1 WHERE ((NOT (((CAST('-0.0' AS TEXT)) NOT NULL)))) GROUP BY vt1.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, t1, rt0, vt0, vt1 WHERE (((((CAST('-0.0' AS TEXT)) NOT NULL)) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, t1, rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0 FROM v0, vt1, vt0, rt0, t1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1, v0.c0;
SELECT ALL MIN((~ (v0.c0))) FROM t1, vt0, v0 ORDER BY 0.2703163527089475  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))  WHEN CAST(t1.c0 AS TEXT) THEN (('-35007481')-(t1.c0)) WHEN IFNULL(t1.c0, vt0.c0) THEN vt0.c0 WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS BLOB) END  NULLS FIRST;
SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (t1.c0 COLLATE BINARY)) INNER JOIN t1 ON ((((((vt1.c0)LIKE(vt0.c0)))OR(CASE t1.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN '1' END)))OR(vt1.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (- ('1934631132'));
SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (t1.c0 COLLATE BINARY)) INNER JOIN t1 ON ((((((vt1.c0)LIKE(vt0.c0)))OR(CASE t1.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN '1' END)))OR(vt1.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (- ('1934631132')) WHERE (CAST((((x'')) NOT BETWEEN ((x'')) AND ((rt0.c3))) AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (t1.c0 COLLATE BINARY)) INNER JOIN t1 ON ((((((vt1.c0)LIKE(vt0.c0)))OR(CASE t1.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN '1' END)))OR(vt1.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (- ('1934631132')) WHERE ((NOT (CAST((((x'')) NOT BETWEEN ((x'')) AND ((rt0.c3))) AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (t1.c0 COLLATE BINARY)) INNER JOIN t1 ON ((((((vt1.c0)LIKE(vt0.c0)))OR(CASE t1.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN '1' END)))OR(vt1.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (- ('1934631132')) WHERE (((CAST((((x'')) NOT BETWEEN ((x'')) AND ((rt0.c3))) AS TEXT)) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (NOT (t1.c0 COLLATE BINARY)) INNER JOIN t1 ON ((((((vt1.c0)LIKE(vt0.c0)))OR(CASE t1.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN '1' END)))OR(vt1.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (- ('1934631132'));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((~ (t1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((~ (t1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))GLOB(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))GLOB(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))GLOB(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING 0.9918710974017104 UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (0.9918710974017104)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((0.9918710974017104) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING 0.9918710974017104 UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (0.9918710974017104)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((0.9918710974017104) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)==(vt1.c0)))+((((vt1.c0, '-1163412316', vt1.c0))>((vt1.c0, '', vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)=(vt1.c0)))+((((vt1.c0, '-1163412316', vt1.c0))>((vt1.c0, '', vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)=(vt1.c0)))+((((vt1.c0, '-1163412316', vt1.c0))>((vt1.c0, '', vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, vt1.c0, t1.c0, rt0.c3 FROM vt1 FULL OUTER JOIN t1 ON (((rt0.c3)) BETWEEN (((((t1.c0, vt0.c0, vt1.c0)) BETWEEN ((rt0.c3, vt0.c0, t1.c0)) AND ((vt1.c0, 0.20639682357501876, vt0.c0))))) AND ((CASE WHEN t1.c0 THEN NULL WHEN rt0.c1 THEN 0.8656272452200316 WHEN rt0.c0 THEN NULL ELSE t1.c0 END))) CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN t1.c0 ELSE vt1.c0 END)) FULL OUTER JOIN vt0 ON ((rt0.c1) NOTNULL) COLLATE RTRIM;
SELECT ALL rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0 FROM rt0, v0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0 FROM rt0, v0, vt1, vt0 WHERE (vt0.c0) GROUP BY rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0 FROM rt0, v0, vt1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0 FROM rt0, v0, vt1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0 FROM rt0, v0, vt1, vt0 GROUP BY rt0.c2, vt0.c0, v0.c0, vt1.c0, rt0.c0;
SELECT rt0.c2 FROM t1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2 HAVING SUM(COUNT(NULL)) UNION ALL SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(COUNT(NULL)))) UNION ALL SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2 HAVING ((SUM(COUNT(NULL))) ISNULL);
SELECT ALL * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (((((((v0.c0)AND(vt1.c0)))AND(v0.c0))) BETWEEN (v0.c0) AND (''))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (((((((v0.c0)AND(vt1.c0)))AND(v0.c0))) BETWEEN (v0.c0) AND (''))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((((((((v0.c0)AND(vt1.c0)))AND(v0.c0))) BETWEEN (v0.c0) AND (''))) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()))IS(((((((((((((NULL)AND(0.9290621972222033)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))IS(((((((((((((NULL)AND(0.9290621972222033)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ()))IS(((((((((((((NULL)AND(0.9290621972222033)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM rt0, vt1, v0, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1, v0, vt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1, v0, vt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS INTEGER) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1, v0, vt0 WHERE (((CAST(CAST(rt0.c3 AS INTEGER) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, v0, vt0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING AVG(((SUM(vt0.c0)) NOT BETWEEN (vt0.c0) AND (COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((SUM(vt0.c0)) NOT BETWEEN (vt0.c0) AND (COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((SUM(vt0.c0)) NOT BETWEEN (vt0.c0) AND (COUNT(vt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)OR(CAST('M8' AS REAL))))AND((rt0.c2 IN (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c3)OR(CAST('M8' AS REAL))))AND((rt0.c2 IN (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)OR(CAST('M8' AS REAL))))AND((rt0.c2 IN (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t1, v0 NOT INDEXED, rt0, vt0;
SELECT DISTINCT * FROM t1, v0, rt0, vt0 WHERE (x'0b6f' COLLATE RTRIM) UNION SELECT DISTINCT * FROM t1, v0, rt0, vt0 WHERE ((NOT (x'0b6f' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, v0, rt0, vt0 WHERE (((x'0b6f' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t1, v0 NOT INDEXED, rt0, vt0;
SELECT vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt1, vt0, v0 GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt1, vt0, v0 WHERE (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END) NOT NULL)) GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt1, vt0, v0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END) NOT NULL)))) GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0 UNION SELECT vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt1, vt0, v0 WHERE (((((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END) NOT NULL)) ISNULL)) GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt1, vt0, v0 GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 HAVING SUM(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 HAVING SUM(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0 FROM v0, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c0, v0.c0;
SELECT ALL * FROM vt0, t1 INNER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(vt0.c0 COLLATE RTRIM));
SELECT * FROM vt0, t1 INNER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(vt0.c0 COLLATE RTRIM)) WHERE (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (t1.c0 IN (t1.c0)))) UNION ALL SELECT * FROM vt0, t1 INNER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(vt0.c0 COLLATE RTRIM)) WHERE ((NOT (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (t1.c0 IN (t1.c0)))))) UNION ALL SELECT * FROM vt0, t1 INNER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(vt0.c0 COLLATE RTRIM)) WHERE (((TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (t1.c0 IN (t1.c0)))) ISNULL));
SELECT ALL * FROM vt0, t1 INNER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(vt0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (~ (v0.c0)), CAST(v0.c0 AS NUMERIC))) AND ((json_quote(v0.c0), ((v0.c0)==(v0.c0)), ((v0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (~ (v0.c0)), CAST(v0.c0 AS NUMERIC))) AND ((json_quote(v0.c0), ((v0.c0)=(v0.c0)), ((v0.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (~ (v0.c0)), CAST(v0.c0 AS NUMERIC))) AND ((json_quote(v0.c0), ((v0.c0)=(v0.c0)), ((v0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2 FROM vt1 NOT INDEXED, rt0, v0, t1, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0, v0, t1, vt0 WHERE (((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>(((vt1.c0)!=(rt0.c3))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0, v0, t1, vt0 WHERE ((NOT (((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>(((vt1.c0)<>(rt0.c3))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0, v0, t1, vt0 WHERE (((((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))>(((vt1.c0)!=(rt0.c3))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1 NOT INDEXED, rt0, v0, t1, vt0 GROUP BY rt0.c2;
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT t1.c0, vt0.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING ((SUM(MIN(SUM(vt0.c0))) COLLATE BINARY) IS TRUE) UNION ALL SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING (NOT (((SUM(MIN(SUM(vt0.c0))) COLLATE BINARY) IS TRUE))) UNION ALL SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING ((((SUM(MIN(SUM(vt0.c0))) COLLATE BINARY) IS TRUE)) ISNULL);
SELECT SUM(CAST(((vt0.c0)-(vt1.c0)) AS NUMERIC)) FROM rt0, vt1, vt0, v0, t1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt1, vt0, t1, rt0, v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt1, vt0, t1, rt0, v0 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((0.02314557108013726)=(rt0.c1))) AND (((vt0.c0)|(vt1.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt1, vt0, t1, rt0, v0 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((0.02314557108013726)==(rt0.c1))) AND (((vt0.c0)|(vt1.c0))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt1, vt0, t1, rt0, v0 WHERE (((((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((0.02314557108013726)=(rt0.c1))) AND (((vt0.c0)|(vt1.c0))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt1, vt0, t1, rt0, v0;
SELECT DISTINCT * FROM t1, v0 INNER JOIN rt0 ON (CAST(rt0.c3 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (((rt0.c0, rt0.c0, 1351879121, t1.c0, v0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL), rt0.c2, (~ (rt0.c0)), '', '' COLLATE BINARY)) AND ((((rt0.c1)<(x'')), ((NULL) IS TRUE), LIKELIHOOD(v0.c0, 0.302836978630286), (NOT (vt1.c0)), (t1.c0 IN (v0.c0)))));
SELECT DISTINCT * FROM t1, v0 INNER JOIN rt0 ON (CAST(rt0.c3 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (((rt0.c0, rt0.c0, 1351879121, t1.c0, v0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL), rt0.c2, (~ (rt0.c0)), '', '' COLLATE BINARY)) AND ((((rt0.c1)<(x'')), ((NULL) IS TRUE), LIKELIHOOD(v0.c0, 0.302836978630286), (NOT (vt1.c0)), (t1.c0 IN (v0.c0))))) WHERE (((CAST(rt0.c3 AS INTEGER)) BETWEEN (((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))) AND (rt0.c1))) UNION SELECT DISTINCT * FROM t1, v0 INNER JOIN rt0 ON (CAST(rt0.c3 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (((rt0.c0, rt0.c0, 1351879121, t1.c0, v0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL), rt0.c2, (~ (rt0.c0)), '', '' COLLATE BINARY)) AND ((((rt0.c1)<(x'')), ((NULL) IS TRUE), LIKELIHOOD(v0.c0, 0.302836978630286), (NOT (vt1.c0)), (t1.c0 IN (v0.c0))))) WHERE ((NOT (((CAST(rt0.c3 AS INTEGER)) BETWEEN (((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM t1, v0 INNER JOIN rt0 ON (CAST(rt0.c3 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (((rt0.c0, rt0.c0, 1351879121, t1.c0, v0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL), rt0.c2, (~ (rt0.c0)), '', '' COLLATE BINARY)) AND ((((rt0.c1)<(x'')), ((NULL) IS TRUE), LIKELIHOOD(v0.c0, 0.302836978630286), (NOT (vt1.c0)), (t1.c0 IN (v0.c0))))) WHERE (((((CAST(rt0.c3 AS INTEGER)) BETWEEN (((((vt1.c0)AND(rt0.c1)))OR(rt0.c0))) AND (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM t1, v0 INNER JOIN rt0 ON (CAST(rt0.c3 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (((rt0.c0, rt0.c0, 1351879121, t1.c0, v0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL), rt0.c2, (~ (rt0.c0)), '', '' COLLATE BINARY)) AND ((((rt0.c1)<(x'')), ((NULL) IS TRUE), LIKELIHOOD(v0.c0, 0.302836978630286), (NOT (vt1.c0)), (t1.c0 IN (v0.c0)))));
SELECT rt0.c3 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) NOT NULL) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) NOT NULL) WHERE (((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))LIKE(((((rt0.c2)OR(v0.c0)))AND(rt0.c0))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) NOT NULL) WHERE ((NOT (((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))LIKE(((((rt0.c2)OR(v0.c0)))AND(rt0.c0))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) NOT NULL) WHERE (((((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))LIKE(((((rt0.c2)OR(v0.c0)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) NOT NULL) GROUP BY rt0.c3;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(GROUP_CONCAT(vt1.c0)))<=(((MAX(GROUP_CONCAT(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((SUM(GROUP_CONCAT(vt1.c0)))<=(((MAX(GROUP_CONCAT(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((SUM(GROUP_CONCAT(vt1.c0)))<=(((MAX(GROUP_CONCAT(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL);
SELECT MIN(((0.04338738921996099) NOT BETWEEN (((rt0.c1) ISNULL)) AND ((NOT (0.5836521343659797))))) FROM rt0, vt1;
SELECT * FROM v0, vt0, t1, vt1;
SELECT ALL * FROM v0, vt0, t1, vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM v0, vt0, t1, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM v0, vt0, t1, vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM v0, vt0, t1, vt1;
SELECT DISTINCT vt0.c0, rt0.c3 FROM rt0, t1, vt1, vt0;
SELECT DISTINCT vt0.c0, rt0.c3 FROM rt0, t1, vt1, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((NOT (rt0.c3))))) UNION SELECT DISTINCT vt0.c0, rt0.c3 FROM rt0, t1, vt1, vt0 WHERE ((NOT (((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((NOT (rt0.c3))))))) UNION SELECT DISTINCT vt0.c0, rt0.c3 FROM rt0, t1, vt1, vt0 WHERE (((((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((NOT (rt0.c3))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c3 FROM rt0, t1, vt1, vt0;
SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0 FROM rt0, v0, vt1, t1, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0 FROM rt0, v0, vt1, t1, vt0 WHERE (0X553cfd21) GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0 UNION SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0 FROM rt0, v0, vt1, t1, vt0 WHERE ((NOT (0X553cfd21))) GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0 UNION SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0 FROM rt0, v0, vt1, t1, vt0 WHERE (((0x553cfd21) ISNULL)) GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0;
SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0 FROM rt0, v0, vt1, t1, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0, t1.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t1, vt0 INNER JOIN vt1 ON ((CAST(x'' AS NUMERIC))LIKE((NOT (vt1.c0))));
SELECT DISTINCT * FROM t1, vt0 INNER JOIN vt1 ON ((CAST(x'' AS NUMERIC))LIKE((NOT (vt1.c0)))) WHERE ((~ (((vt0.c0)>=(vt1.c0))))) UNION SELECT DISTINCT * FROM t1, vt0 INNER JOIN vt1 ON ((CAST(x'' AS NUMERIC))LIKE((NOT (vt1.c0)))) WHERE ((NOT ((~ (((vt0.c0)>=(vt1.c0))))))) UNION SELECT DISTINCT * FROM t1, vt0 INNER JOIN vt1 ON ((CAST(x'' AS NUMERIC))LIKE((NOT (vt1.c0)))) WHERE ((((~ (((vt0.c0)>=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, vt0 INNER JOIN vt1 ON ((CAST(x'' AS NUMERIC))LIKE((NOT (vt1.c0))));
SELECT ALL rt0.c0, vt1.c0, t1.c0, rt0.c1 FROM vt1, v0, rt0, t1 GROUP BY rt0.c0, vt1.c0, t1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, t1.c0, rt0.c1 FROM vt1, v0, rt0, t1 WHERE (((((((((((((v0.c0)OR(x'6dc3')))OR(rt0.c2)))OR((- (vt1.c0)))))AND(((rt0.c0)*(t1.c0)))))OR(((vt1.c0) IS TRUE))))AND(LOWER(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, t1.c0, rt0.c1 UNION SELECT rt0.c0, vt1.c0, t1.c0, rt0.c1 FROM vt1, v0, rt0, t1 WHERE ((NOT (((((((((((((v0.c0)OR(x'6dc3')))OR(rt0.c2)))OR((- (vt1.c0)))))AND(((rt0.c0)*(t1.c0)))))OR(((vt1.c0) IS TRUE))))AND(LOWER(rt0.c1)))))) GROUP BY rt0.c0, vt1.c0, t1.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, t1.c0, rt0.c1 FROM vt1, v0, rt0, t1 WHERE (((((((((((((((v0.c0)OR(x'6dc3')))OR(rt0.c2)))OR((- (vt1.c0)))))AND(((rt0.c0)*(t1.c0)))))OR(((vt1.c0) IS TRUE))))AND(LOWER(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, vt1.c0, t1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, t1.c0, rt0.c1 FROM vt1, v0, rt0, t1 GROUP BY rt0.c0, vt1.c0, t1.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(MIN(MIN(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(MIN(MIN(AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(MIN(MIN(AVG(vt1.c0))))) ISNULL);
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM v0, vt1, t1, vt0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM v0, vt1, t1, vt0 WHERE ((((vt1.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt1.c0)<(v0.c0)))))) UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM v0, vt1, t1, vt0 WHERE ((NOT ((((vt1.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt1.c0)<(v0.c0)))))))) UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM v0, vt1, t1, vt0 WHERE ((((((vt1.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt1.c0)<(v0.c0)))))) ISNULL));
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM v0, vt1, t1, vt0;
SELECT DISTINCT * FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'2c86';
SELECT DISTINCT * FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'2c86' WHERE (CASE ((vt1.c0)<=(vt1.c0))  WHEN CAST(0.7523083359014933 AS INTEGER) THEN vt1.c0 END) UNION SELECT DISTINCT * FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'2c86' WHERE ((NOT (CASE ((vt1.c0)<=(vt1.c0))  WHEN CAST(0.7523083359014933 AS INTEGER) THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'2c86' WHERE (((CASE ((vt1.c0)<=(vt1.c0))  WHEN CAST(0.7523083359014933 AS INTEGER) THEN vt1.c0 END) ISNULL));
SELECT DISTINCT * FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'2c86';
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (TOTAL(COUNT(*)) IN (CASE TOTAL(MAX(MAX(t1.c0)))  WHEN COUNT(t1.c0) THEN AVG(TOTAL(-2044494470)) WHEN SUM(AVG(COUNT(t1.c0))) THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((TOTAL(COUNT(*)) IN (CASE TOTAL(MAX(MAX(t1.c0)))  WHEN COUNT(t1.c0) THEN AVG(TOTAL(-2044494470)) WHEN SUM(AVG(COUNT(t1.c0))) THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((TOTAL(COUNT(*)) IN (CASE TOTAL(MAX(MAX(t1.c0)))  WHEN COUNT(t1.c0) THEN AVG(TOTAL(-2044494470)) WHEN SUM(AVG(COUNT(t1.c0))) THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))) ISNULL);
SELECT t1.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM rt0, t1, vt1, vt0;
SELECT ALL t1.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM rt0, t1, vt1, vt0 WHERE (((0.4953209809520024) IS FALSE)) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM rt0, t1, vt1, vt0 WHERE ((NOT (((0.4953209809520024) IS FALSE)))) UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM rt0, t1, vt1, vt0 WHERE (((((0.4953209809520024) IS FALSE)) ISNULL));
SELECT t1.c0, rt0.c2, rt0.c1, vt0.c0, vt1.c0 FROM rt0, t1, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, rt0, vt0, t1;
SELECT DISTINCT * FROM v0, vt1, rt0, vt0, t1 WHERE (0.9874453835345075 COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, vt1, rt0, vt0, t1 WHERE ((NOT (0.9874453835345075 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, vt1, rt0, vt0, t1 WHERE (((0.9874453835345075 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, vt1, rt0, vt0, t1;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c1, rt0.c0, rt0.c0)))) BETWEEN ((+ (rt0.c0))) AND (0.5939649258210682))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c1, rt0.c0, rt0.c0)))) BETWEEN ((+ (rt0.c0))) AND (0.5939649258210682))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((((((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c1, rt0.c0, rt0.c0)))) BETWEEN ((+ (rt0.c0))) AND (0.5939649258210682))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0;
SELECT v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 HAVING 0xffffffffcc20c5ce UNION ALL SELECT ALL v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 HAVING (NOT (0Xffffffffcc20c5ce)) UNION ALL SELECT v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 HAVING ((0xffffffffcc20c5ce) ISNULL);
SELECT ALL v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0;
SELECT v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 HAVING 0xffffffffcc20c5ce UNION ALL SELECT ALL v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 HAVING (NOT (0Xffffffffcc20c5ce)) UNION ALL SELECT v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 HAVING ((0xffffffffcc20c5ce) ISNULL);
SELECT ALL v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0 FROM vt1, rt0, t1, vt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, vt1.c0, t1.c0, rt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((IFNULL(v0.c0, vt0.c0))OR('0.20639682357501876')))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((IFNULL(v0.c0, vt0.c0))OR('0.20639682357501876')))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((IFNULL(v0.c0, vt0.c0))OR('0.20639682357501876')))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0, vt1, t1;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0, vt1, t1 WHERE (((NOT (rt0.c2)) IN (rt0.c3 COLLATE NOCASE, COALESCE(DISTINCT rt0.c1, rt0.c2, t1.c0, t1.c0)))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0, vt1, t1 WHERE ((NOT (((NOT (rt0.c2)) IN (rt0.c3 COLLATE NOCASE, COALESCE(DISTINCT rt0.c1, rt0.c2, t1.c0, t1.c0)))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0, vt1, t1 WHERE (((((NOT (rt0.c2)) IN (rt0.c3 COLLATE NOCASE, COALESCE(DISTINCT rt0.c1, rt0.c2, t1.c0, t1.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0, vt1, t1;
SELECT vt0.c0 FROM vt1, t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, t1, vt0 WHERE (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))))>((((vt1.c0)==(vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, t1, vt0 WHERE ((NOT (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))))>((((vt1.c0)==(vt1.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, t1, vt0 WHERE (((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))))>((((vt1.c0)==(vt1.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(MAX(vt0.c0)))<<(v0.c0)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(MAX(vt0.c0)))<<(v0.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(MAX(vt0.c0)))<<(v0.c0)) COLLATE BINARY) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END) NOT BETWEEN ((rt0.c2 IN ())) AND (0.15932888502238152))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END) NOT BETWEEN ((rt0.c2 IN ())) AND (0.15932888502238152))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END) NOT BETWEEN ((rt0.c2 IN ())) AND (0.15932888502238152))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0, t1, vt0;
SELECT DISTINCT * FROM v0, rt0, t1, vt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) IS TRUE)) UNION SELECT DISTINCT * FROM v0, rt0, t1, vt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, rt0, t1, vt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t1, vt0;
SELECT ALL t1.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((('aTxte')) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (vt1.c0) AND (((vt1.c0)||(t1.c0)))) GROUP BY t1.c0, vt1.c0;
SELECT ALL t1.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((('aTxte')) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (vt1.c0) AND (((vt1.c0)||(t1.c0)))) WHERE ((((((vt0.c0 IN (t1.c0)))OR(((vt1.c0)>>(vt0.c0)))))AND((~ (vt1.c0))))) GROUP BY t1.c0, vt1.c0 UNION SELECT ALL t1.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((('aTxte')) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (vt1.c0) AND (((vt1.c0)||(t1.c0)))) WHERE ((NOT ((((((vt0.c0 IN (t1.c0)))OR(((vt1.c0)>>(vt0.c0)))))AND((~ (vt1.c0))))))) GROUP BY t1.c0, vt1.c0 UNION SELECT t1.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((('aTxte')) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (vt1.c0) AND (((vt1.c0)||(t1.c0)))) WHERE ((((((((vt0.c0 IN (t1.c0)))OR(((vt1.c0)>>(vt0.c0)))))AND((~ (vt1.c0))))) ISNULL)) GROUP BY t1.c0, vt1.c0;
SELECT ALL t1.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((('aTxte')) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (vt1.c0) AND (((vt1.c0)||(t1.c0)))) GROUP BY t1.c0, vt1.c0;
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0 HAVING (((t1.c0 IN (MAX(vt0.c0)))) NOT BETWEEN (COUNT(*)) AND (MIN(vt0.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0 HAVING (NOT ((((t1.c0 IN (MAX(vt0.c0)))) NOT BETWEEN (COUNT(*)) AND (MIN(vt0.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0 HAVING (((((t1.c0 IN (MAX(vt0.c0)))) NOT BETWEEN (COUNT(*)) AND (MIN(vt0.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0 HAVING (((t1.c0 IN (MAX(vt0.c0)))) NOT BETWEEN (COUNT(*)) AND (MIN(vt0.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0 HAVING (NOT ((((t1.c0 IN (MAX(vt0.c0)))) NOT BETWEEN (COUNT(*)) AND (MIN(vt0.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0 HAVING (((((t1.c0 IN (MAX(vt0.c0)))) NOT BETWEEN (COUNT(*)) AND (MIN(vt0.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN vt0 ON 261057997 GROUP BY t1.c0;
SELECT * FROM t1, vt0;
SELECT * FROM t1, vt0 WHERE ((NULL IN ())) UNION ALL SELECT * FROM t1, vt0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((((NULL IN ())) ISNULL));
SELECT * FROM t1, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((((((((((rt0.c1) IS TRUE))AND((- (rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END)))OR(rt0.c2)))AND(rt0.c3 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((((((((rt0.c1) IS TRUE))AND((- (rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END)))OR(rt0.c2)))AND(rt0.c3 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((((((((((((rt0.c1) IS TRUE))AND((- (rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END)))OR(rt0.c2)))AND(rt0.c3 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0 NOT INDEXED, rt0;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (0.5145917072477614) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (0.5145917072477614))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (((0.5145917072477614) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)+(vt0.c0 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)+(vt0.c0 COLLATE BINARY)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)+(vt0.c0 COLLATE BINARY))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)+(vt0.c0 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)+(vt0.c0 COLLATE BINARY)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)+(vt0.c0 COLLATE BINARY))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((CAST(v0.c0 AS TEXT) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT) IN ())) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((NOT (rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((NOT (rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((NOT (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1 WHERE (CAST(json_extract('.g	E><', t1.c0, t1.c0, t1.c0) AS INTEGER)) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM v0, t1 WHERE ((NOT (CAST(json_extract('.g	E><', t1.c0, t1.c0, t1.c0) AS INTEGER)))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0, t1 WHERE (((CAST(json_extract('.g	E><', t1.c0, t1.c0, t1.c0) AS INTEGER)) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(AVG(vt1.c0))) ISNULL);
SELECT ALL v0.c0, t1.c0, rt0.c1, rt0.c3 FROM vt1, t1, rt0, v0;
SELECT ALL v0.c0, t1.c0, rt0.c1, rt0.c3 FROM vt1, t1, rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN t1.c0 END)|((v0.c0 IN (rt0.c2, rt0.c1))))) UNION ALL SELECT ALL v0.c0, t1.c0, rt0.c1, rt0.c3 FROM vt1, t1, rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN t1.c0 END)|((v0.c0 IN (rt0.c2, rt0.c1))))))) UNION ALL SELECT v0.c0, t1.c0, rt0.c1, rt0.c3 FROM vt1, t1, rt0, v0 WHERE (((((CASE WHEN rt0.c3 THEN t1.c0 END)|((v0.c0 IN (rt0.c2, rt0.c1))))) ISNULL));
SELECT ALL v0.c0, t1.c0, rt0.c1, rt0.c3 FROM vt1, t1, rt0, v0;
SELECT DISTINCT * FROM t1, vt0, vt1, rt0;
SELECT DISTINCT * FROM t1, vt0, vt1, rt0 WHERE (((((vt1.c0)>=(rt0.c0)))LIKE(rt0.c2))) UNION SELECT DISTINCT * FROM t1, vt0, vt1, rt0 WHERE ((NOT (((((vt1.c0)>=(rt0.c0)))LIKE(rt0.c2))))) UNION SELECT DISTINCT * FROM t1, vt0, vt1, rt0 WHERE (((((((vt1.c0)>=(rt0.c0)))LIKE(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM t1, vt0, vt1, rt0;
SELECT rt0.c2, v0.c0 FROM t1, vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN '*\rD%' THEN vt0.c0 END) BETWEEN (((0.8975184940816822) NOT BETWEEN (t1.c0) AND (rt0.c0))) AND ('1424458473')) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM t1, vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN '*\rD%' THEN vt0.c0 END) BETWEEN (((0.8975184940816822) NOT BETWEEN (t1.c0) AND (rt0.c0))) AND ('1424458473')) WHERE ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) IN (((v0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)), json_valid(rt0.c3), (rt0.c2 IN (rt0.c1, t1.c0))))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM t1, vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN '*\rD%' THEN vt0.c0 END) BETWEEN (((0.8975184940816822) NOT BETWEEN (t1.c0) AND (rt0.c0))) AND ('1424458473')) WHERE ((NOT ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) IN (((v0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)), json_valid(rt0.c3), (rt0.c2 IN (rt0.c1, t1.c0))))))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM t1, vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN '*\rD%' THEN vt0.c0 END) BETWEEN (((0.8975184940816822) NOT BETWEEN (t1.c0) AND (rt0.c0))) AND ('1424458473')) WHERE ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) IN (((v0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)), json_valid(rt0.c3), (rt0.c2 IN (rt0.c1, t1.c0))))) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM t1, vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN '*\rD%' THEN vt0.c0 END) BETWEEN (((0.8975184940816822) NOT BETWEEN (t1.c0) AND (rt0.c0))) AND ('1424458473')) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c1 HAVING MIN(AVG(COUNT(rt0.c1))) UNION ALL SELECT rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c1 HAVING (NOT (MIN(AVG(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c1 HAVING ((MIN(AVG(COUNT(rt0.c1)))) ISNULL);
SELECT vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0;
SELECT vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0))) IS TRUE)) UNION ALL SELECT vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0))) IS TRUE)))) UNION ALL SELECT vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0))) IS TRUE)) ISNULL));
SELECT vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0;
SELECT DISTINCT * FROM v0, t1, vt1;
SELECT DISTINCT * FROM v0, t1, vt1 WHERE ((((v0.c0 IN (t1.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (''))) UNION SELECT DISTINCT * FROM v0, t1, vt1 WHERE ((NOT ((((v0.c0 IN (t1.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (''))))) UNION SELECT DISTINCT * FROM v0, t1, vt1 WHERE ((((((v0.c0 IN (t1.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (''))) ISNULL));
SELECT DISTINCT * FROM v0, t1, vt1;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM t1, vt0 FULL OUTER JOIN v0 ON CASE WHEN ((NULL)GLOB('-1163412316')) THEN '-939247386' ELSE ((rt0.c3)+(rt0.c3)) END LEFT OUTER JOIN vt1 ON ((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON CASE (~ (t1.c0))  WHEN (rt0.c3 IN ()) THEN x'' WHEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)) THEN (rt0.c0 IN ()) WHEN json_array_length(rt0.c1) THEN ((vt1.c0)>>(vt0.c0)) ELSE ((rt0.c1) NOT NULL) END GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c3, vt1.c0 FROM vt1, rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, vt1.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c3, vt1.c0 FROM vt1, rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, vt1.c0 HAVING SUM(SUM(MAX(COUNT(*)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c3, vt1.c0 FROM vt1, rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, vt1.c0 HAVING (NOT (SUM(SUM(MAX(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c3, vt1.c0 FROM vt1, rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, vt1.c0 HAVING ((SUM(SUM(MAX(COUNT(*))))) ISNULL);
SELECT * FROM t1, rt0, vt0, vt1, v0;
SELECT ALL * FROM t1, rt0, vt0, vt1, v0 WHERE (CAST((((-1.251196223E9)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) AS TEXT)) UNION ALL SELECT * FROM t1, rt0, vt0, vt1, v0 WHERE ((NOT (CAST((((-1.251196223E9)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) AS TEXT)))) UNION ALL SELECT * FROM t1, rt0, vt0, vt1, v0 WHERE (((CAST((((-1.251196223E9)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) AS TEXT)) ISNULL));
SELECT * FROM t1, rt0, vt0, vt1, v0;
SELECT DISTINCT t1.c0, v0.c0, vt0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN v0 ON vt1.c0 FULL OUTER JOIN vt0 ON rt0.c2 CROSS JOIN t1 ON ((((((rt0.c2) NOTNULL))OR(CAST(t1.c0 AS BLOB))))OR(((rt0.c1)IS(vt0.c0)))) CROSS JOIN rt0 ON ((((rt0.c2)OR(rt0.c3)))OR(vt1.c0)) COLLATE NOCASE;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))IS NOT((((vt1.c0))<((x'')))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))IS NOT((((vt1.c0))<((x'')))))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))IS NOT((((vt1.c0))<((x'')))))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING COUNT(SUM(AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (NOT (COUNT(SUM(AVG(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING ((COUNT(SUM(AVG(rt0.c0)))) ISNULL);
SELECT ALL rt0.c3, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (((((~ (rt0.c2)))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))))AND(((t1.c0)<<(t1.c0))));
SELECT rt0.c3, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (((((~ (rt0.c2)))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))))AND(((t1.c0)<<(t1.c0)))) WHERE (CASE WHEN rt0.c2 THEN CAST(rt0.c2 AS BLOB) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE x'' END THEN x'3c696fab' WHEN 0.7879738738800648 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (((((~ (rt0.c2)))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))))AND(((t1.c0)<<(t1.c0)))) WHERE ((NOT (CASE WHEN rt0.c2 THEN CAST(rt0.c2 AS BLOB) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE x'' END THEN x'3c696fab' WHEN 0.7879738738800648 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (((((~ (rt0.c2)))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))))AND(((t1.c0)<<(t1.c0)))) WHERE (((CASE WHEN rt0.c2 THEN CAST(rt0.c2 AS BLOB) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE x'' END THEN x'3c696fab' WHEN 0.7879738738800648 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) ISNULL));
SELECT ALL rt0.c3, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (((((~ (rt0.c2)))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))))AND(((t1.c0)<<(t1.c0))));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((- (v0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((- (v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((- (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0 FROM vt1, rt0, t1, vt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0 FROM vt1, rt0, t1, vt0 NATURAL JOIN v0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0 FROM vt1, rt0, t1, vt0 NATURAL JOIN v0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0))) ISNULL)))) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0 FROM vt1, rt0, t1, vt0 NATURAL JOIN v0 WHERE (((((((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0 FROM vt1, rt0, t1, vt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN ())) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN ())))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN ())) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN 'Hﴡf뉡\rBj##' WHEN v0.c0 THEN rt0.c1 END)*((rt0.c1 IN (rt0.c2))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN 'Hﴡf뉡\rBj##' WHEN v0.c0 THEN rt0.c1 END)*((rt0.c1 IN (rt0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN 'Hﴡf뉡\rBj##' WHEN v0.c0 THEN rt0.c1 END)*((rt0.c1 IN (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT vt1.c0 FROM t1, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t1, vt1 WHERE (0xfffffffff68dd165) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t1, vt1 WHERE ((NOT (0Xfffffffff68dd165))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t1, vt1 WHERE (((0xfffffffff68dd165) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t1, vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM t1, v0 NATURAL JOIN vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 NATURAL JOIN vt1 GROUP BY v0.c0 HAVING COUNT(MIN(vt1.c0)) UNION ALL SELECT ALL v0.c0 FROM t1, v0 NATURAL JOIN vt1 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(vt1.c0)))) UNION ALL SELECT v0.c0 FROM t1, v0 NATURAL JOIN vt1 GROUP BY v0.c0 HAVING ((COUNT(MIN(vt1.c0))) ISNULL);
SELECT ALL * FROM v0, rt0 NOT INDEXED;
SELECT * FROM v0, rt0 WHERE ((((NULL)) BETWEEN ((CASE rt0.c1  WHEN rt0.c3 THEN 0.9395527481980305 ELSE v0.c0 END)) AND ((x'')))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((NULL)) BETWEEN ((CASE rt0.c1  WHEN rt0.c3 THEN 0.9395527481980305 ELSE v0.c0 END)) AND ((x'')))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((((NULL)) BETWEEN ((CASE rt0.c1  WHEN rt0.c3 THEN 0.9395527481980305 ELSE v0.c0 END)) AND ((x'')))) ISNULL));
SELECT ALL * FROM v0, rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM)LIKE(t1.c0)) LEFT OUTER JOIN vt1 ON (rt0.c3 IN ()) COLLATE NOCASE COLLATE BINARY;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM)LIKE(t1.c0)) LEFT OUTER JOIN vt1 ON (rt0.c3 IN ()) COLLATE NOCASE COLLATE BINARY WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM)LIKE(t1.c0)) LEFT OUTER JOIN vt1 ON (rt0.c3 IN ()) COLLATE NOCASE COLLATE BINARY WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM)LIKE(t1.c0)) LEFT OUTER JOIN vt1 ON (rt0.c3 IN ()) COLLATE NOCASE COLLATE BINARY WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM)LIKE(t1.c0)) LEFT OUTER JOIN vt1 ON (rt0.c3 IN ()) COLLATE NOCASE COLLATE BINARY;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)||(vt1.c0))))<>((0.921133039624945 COLLATE BINARY)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)||(vt1.c0))))<>((0.921133039624945 COLLATE BINARY)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)||(vt1.c0))))<>((0.921133039624945 COLLATE BINARY)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 NOT INDEXED, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING AVG(rt0.c1) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 NOT INDEXED, rt0 NOT INDEXED GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING ((AVG(rt0.c1)) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 NOT INDEXED, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING AVG(rt0.c1) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 NOT INDEXED, rt0 NOT INDEXED GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING ((AVG(rt0.c1)) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (173162175) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (173162175))) UNION ALL SELECT ALL * FROM v0 WHERE (((173162175) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t1, rt0, v0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c0 AS TEXT)))<>((CAST(rt0.c0 AS INTEGER)))) CROSS JOIN vt1 ON (+ ('iZ'));
SELECT DISTINCT * FROM t1, rt0, v0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c0 AS TEXT)))<>((CAST(rt0.c0 AS INTEGER)))) CROSS JOIN vt1 ON (+ ('iZ')) WHERE ('-1724687986') UNION SELECT DISTINCT * FROM t1, rt0, v0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c0 AS TEXT)))<>((CAST(rt0.c0 AS INTEGER)))) CROSS JOIN vt1 ON (+ ('iZ')) WHERE ((NOT ('-1724687986'))) UNION SELECT DISTINCT * FROM t1, rt0, v0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c0 AS TEXT)))!=((CAST(rt0.c0 AS INTEGER)))) CROSS JOIN vt1 ON (+ ('iZ')) WHERE ((('-1724687986') ISNULL));
SELECT DISTINCT * FROM t1, rt0, v0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c0 AS TEXT)))<>((CAST(rt0.c0 AS INTEGER)))) CROSS JOIN vt1 ON (+ ('iZ'));
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((vt0.c0))<((vt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c0 COLLATE NOCASE)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0))<((vt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c3, rt0.c1, vt1.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c3, rt0.c1, vt1.c0, vt0.c0, rt0.c2 HAVING (((COUNT(TOTAL(rt0.c1)), ((v0.c0) ISNULL), ((x'')LIKE(rt0.c3))))=((((SUM(MIN(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (rt0.c0) AND (v0.c0)), TOTAL(COUNT('ⴍ%')), GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT rt0.c3, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c3, rt0.c1, vt1.c0, vt0.c0, rt0.c2 HAVING (NOT ((((COUNT(TOTAL(rt0.c1)), ((v0.c0) ISNULL), ((x'')LIKE(rt0.c3))))=((((SUM(MIN(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (rt0.c0) AND (v0.c0)), TOTAL(COUNT('ⴍ%')), GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c3, rt0.c1, vt1.c0, vt0.c0, rt0.c2 HAVING (((((COUNT(TOTAL(rt0.c1)), ((v0.c0) ISNULL), ((x'')LIKE(rt0.c3))))=((((SUM(MIN(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (rt0.c0) AND (v0.c0)), TOTAL(COUNT('ⴍ%')), GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT ALL * FROM t1, vt0, vt1, rt0, v0;
SELECT ALL * FROM t1, vt0, vt1, rt0, v0 WHERE ((((((+ (t1.c0)))OR((~ (vt0.c0)))))AND(((x'') NOTNULL)))) UNION ALL SELECT * FROM t1, vt0, vt1, rt0, v0 WHERE ((NOT ((((((+ (t1.c0)))OR((~ (vt0.c0)))))AND(((x'') NOTNULL)))))) UNION ALL SELECT ALL * FROM t1, vt0, vt1, rt0, v0 WHERE ((((((((+ (t1.c0)))OR((~ (vt0.c0)))))AND(((x'') NOTNULL)))) ISNULL));
SELECT ALL * FROM t1, vt0, vt1, rt0, v0;
SELECT DISTINCT * FROM v0, rt0, t1, vt0;
SELECT DISTINCT * FROM v0, rt0, t1, vt0 WHERE ((('')IS NOT(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM v0, rt0, t1, vt0 WHERE ((NOT ((('')IS NOT(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM v0, rt0, t1, vt0 WHERE ((((('')IS NOT(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t1, vt0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 WHERE (((((vt1.c0)<=(v0.c0)))IS NOT((((v0.c0))<>((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c0)<=(v0.c0)))IS NOT((((v0.c0))!=((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE (((((((vt1.c0)<=(v0.c0)))IS NOT((((v0.c0))<>((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM v0, t1, vt1, vt0;
SELECT * FROM v0, t1, vt1, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM) UNION ALL SELECT * FROM v0, t1, vt1, vt0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, t1, vt1, vt0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0, t1, vt1, vt0;
SELECT DISTINCT t1.c0, vt1.c0, rt0.c2 FROM rt0, v0, t1, vt1;
SELECT DISTINCT t1.c0, vt1.c0, rt0.c2 FROM rt0, v0, t1, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0)))) BETWEEN ((rt0.c0 IN ())) AND ((rt0.c3 IN (NULL))))) UNION SELECT DISTINCT t1.c0, vt1.c0, rt0.c2 FROM rt0, v0, t1, vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0)))) BETWEEN ((rt0.c0 IN ())) AND ((rt0.c3 IN (NULL))))))) UNION SELECT DISTINCT t1.c0, vt1.c0, rt0.c2 FROM rt0, v0, t1, vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0)))) BETWEEN ((rt0.c0 IN ())) AND ((rt0.c3 IN (NULL))))) ISNULL));
SELECT DISTINCT t1.c0, vt1.c0, rt0.c2 FROM rt0, v0, t1, vt1;
SELECT ALL t1.c0 FROM rt0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM rt0, t1 WHERE (0.14830370503546297 COLLATE BINARY) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM rt0, t1 WHERE ((NOT (0.14830370503546297 COLLATE BINARY))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM rt0, t1 WHERE (((0.14830370503546297 COLLATE BINARY) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM rt0, t1 GROUP BY t1.c0;
SELECT rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0, t1, vt1, v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, vt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0, t1, vt1, v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, vt0.c0, v0.c0 HAVING COUNT(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0, t1, vt1, v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, vt0.c0, v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0, t1, vt1, v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, vt0.c0, v0.c0 HAVING ((COUNT(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM vt0, rt0, v0;
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM vt0, rt0, v0 WHERE (TRIM((+ (rt0.c0)), rt0.c2 COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM vt0, rt0, v0 WHERE ((NOT (TRIM((+ (rt0.c0)), rt0.c2 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM vt0, rt0, v0 WHERE (((TRIM((+ (rt0.c0)), rt0.c2 COLLATE NOCASE)) ISNULL));
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0, t1;
SELECT DISTINCT vt0.c0 FROM vt0, v0, t1 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0, t1 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0, t1 WHERE ((((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER))AND((~ (t1.c0)))))OR(t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((CAST(t1.c0 AS INTEGER))AND((~ (t1.c0)))))OR(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((CAST(t1.c0 AS INTEGER))AND((~ (t1.c0)))))OR(t1.c0))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c3, t1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, t1.c0;
SELECT rt0.c3, t1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, t1.c0 HAVING GROUP_CONCAT(((((COUNT(SUM(MIN(AVG(rt0.c0)))))AND(rt0.c3)))OR(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT rt0.c3, t1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, t1.c0 HAVING (NOT (GROUP_CONCAT(((((COUNT(SUM(MIN(AVG(rt0.c0)))))AND(rt0.c3)))OR(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL rt0.c3, t1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, t1.c0 HAVING ((GROUP_CONCAT(((((COUNT(SUM(MIN(AVG(rt0.c0)))))AND(rt0.c3)))OR(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT * FROM rt0, t1, vt1;
SELECT * FROM rt0, t1, vt1 WHERE ((+ (rt0.c3))) UNION ALL SELECT ALL * FROM rt0, t1, vt1 WHERE ((NOT ((+ (rt0.c3))))) UNION ALL SELECT * FROM rt0, t1, vt1 WHERE ((((+ (rt0.c3))) ISNULL));
SELECT * FROM rt0, t1, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(rtreenode(vt0.c0, vt0.c0) AS TEXT)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(rtreenode(vt0.c0, vt0.c0) AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(rtreenode(vt0.c0, vt0.c0) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM vt1, rt0, t1, v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, rt0, t1, v0, vt0 WHERE (((((vt0.c0)<(vt1.c0))) ISNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, rt0, t1, v0, vt0 WHERE ((NOT (((((vt0.c0)<(vt1.c0))) ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1 NOT INDEXED, rt0, t1, v0, vt0 WHERE (((((((vt0.c0)<(vt1.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, rt0, t1, v0, vt0 GROUP BY v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING SUM(((GROUP_CONCAT(TOTAL(t1.c0))) NOT NULL)) UNION ALL SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING (NOT (SUM(((GROUP_CONCAT(TOTAL(t1.c0))) NOT NULL)))) UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING ((SUM(((GROUP_CONCAT(TOTAL(t1.c0))) NOT NULL))) ISNULL);
SELECT * FROM vt0, rt0, vt1, v0;
SELECT * FROM vt0, rt0, vt1, v0 WHERE ((((v0.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN ())) UNION ALL SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN ())))) UNION ALL SELECT * FROM vt0, rt0, vt1, v0 WHERE ((((((v0.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN ())) ISNULL));
SELECT * FROM vt0, rt0, vt1, v0;
SELECT DISTINCT * FROM vt0, v0, t1;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ('790244621' COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((NOT ('790244621' COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((('790244621' COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t1;
SELECT rt0.c2, vt0.c0, rt0.c3, v0.c0, t1.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1)%(rt0.c2)) THEN v0.c0 END RIGHT OUTER JOIN v0 ON (((((v0.c0)OR(vt0.c0)))AND(rt0.c1)) IN (((rt0.c1) IS FALSE), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) RIGHT OUTER JOIN t1 ON ((((rt0.c3) NOTNULL))<=(CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END)) GROUP BY rt0.c2, vt0.c0, rt0.c3, v0.c0, t1.c0;
SELECT v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT v0.c0 FROM vt0, t1, v0, vt1, rt0 GROUP BY v0.c0;
SELECT vt1.c0 FROM rt0, vt1 CROSS JOIN t1 ON ((((t1.c0)OR(vt1.c0)))OR(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON CAST(((rt0.c0)LIKE(vt1.c0)) AS BLOB);
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE (rtreenode(CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (rtreenode(CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((rtreenode(CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION() GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION() WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION() WHERE ((NOT ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION() WHERE ((((~ (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION() GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL MIN(((0.5754561280095697) ISNULL)) FROM rt0, t1 ORDER BY (((((rt0.c1)*(t1.c0))))>((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1))))) DESC;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0 IN ()) IN ((v0.c0 IN ()), (vt1.c0 IN ()))) INNER JOIN vt0 ON (((vt1.c0 IN (0.2614598527954476)))AND(((v0.c0)>=(v0.c0))));
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0 IN ()) IN ((v0.c0 IN ()), (vt1.c0 IN ()))) INNER JOIN vt0 ON (((vt1.c0 IN (0.2614598527954476)))AND(((v0.c0)>=(v0.c0)))) WHERE (CASE '' COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END THEN CHANGES() WHEN CASE WHEN 1955880276 THEN vt1.c0 END THEN ((vt0.c0)>(v0.c0)) WHEN (- (v0.c0)) THEN (~ (vt1.c0)) ELSE vt0.c0 END) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0 IN ()) IN ((v0.c0 IN ()), (vt1.c0 IN ()))) INNER JOIN vt0 ON (((vt1.c0 IN (0.2614598527954476)))AND(((v0.c0)>=(v0.c0)))) WHERE ((NOT (CASE '' COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END THEN CHANGES() WHEN CASE WHEN 1955880276 THEN vt1.c0 END THEN ((vt0.c0)>(v0.c0)) WHEN (- (v0.c0)) THEN (~ (vt1.c0)) ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0 IN ()) IN ((v0.c0 IN ()), (vt1.c0 IN ()))) INNER JOIN vt0 ON (((vt1.c0 IN (0.2614598527954476)))AND(((v0.c0)>=(v0.c0)))) WHERE (((CASE '' COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END THEN CHANGES() WHEN CASE WHEN 1955880276 THEN vt1.c0 END THEN ((vt0.c0)>(v0.c0)) WHEN (- (v0.c0)) THEN (~ (vt1.c0)) ELSE vt0.c0 END) ISNULL));
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0 IN ()) IN ((v0.c0 IN ()), (vt1.c0 IN ()))) INNER JOIN vt0 ON (((vt1.c0 IN (0.2614598527954476)))AND(((v0.c0)>=(v0.c0))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)>(0Xffffffffa1c36f9d)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)>(0Xffffffffa1c36f9d)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)>(0Xffffffffa1c36f9d)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM v0, vt0, t1, rt0, vt1 GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0;
SELECT vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM v0, vt0, t1, rt0, vt1 WHERE ((((t1.c0) IS TRUE) IN ())) GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0 UNION SELECT vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM v0, vt0, t1, rt0, vt1 WHERE ((NOT ((((t1.c0) IS TRUE) IN ())))) GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM v0, vt0, t1, rt0, vt1 WHERE ((((((t1.c0) IS TRUE) IN ())) ISNULL)) GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0;
SELECT vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM v0, vt0, t1, rt0, vt1 GROUP BY vt1.c0, rt0.c1, v0.c0, rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t1, vt0, v0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t1, vt0, v0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING AVG(COUNT(COUNT(SUM(NULL)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t1, vt0, v0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (AVG(COUNT(COUNT(SUM(NULL)))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t1, vt0, v0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((AVG(COUNT(COUNT(SUM(NULL))))) ISNULL);
SELECT ALL MAX((((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN 0xffffffffa2eefc16 ELSE vt1.c0 END))<((((t1.c0) IS FALSE))))) FROM t1, vt0, rt0, v0, vt1;
SELECT ALL * FROM t1, v0, vt0;
SELECT ALL * FROM t1, v0, vt0 WHERE (t1.c0) UNION ALL SELECT * FROM t1, v0, vt0 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t1, v0, vt0 WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM t1, v0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE (json_remove(((rt0.c1) NOT NULL), ((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE ((NOT (json_remove(((rt0.c1) NOT NULL), ((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE (((json_remove(((rt0.c1) NOT NULL), ((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)))) ISNULL));
SELECT ALL rt0.c3 FROM vt1, vt0, rt0 FULL OUTER JOIN v0 ON ((((((((0.009398060989547097)AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))OR(((((v0.c0)OR(rt0.c2)))AND(v0.c0)))))OR('790244621')))AND((((vt1.c0))>=((rt0.c0))))) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt1, vt0, rt0 FULL OUTER JOIN v0 ON ((((((((0.009398060989547097)AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))OR(((((v0.c0)OR(rt0.c2)))AND(v0.c0)))))OR('790244621')))AND((((vt1.c0))>=((rt0.c0))))) WHERE (-1.271980469E9 COLLATE RTRIM) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt1, vt0, rt0 FULL OUTER JOIN v0 ON ((((((((0.009398060989547097)AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))OR(((((v0.c0)OR(rt0.c2)))AND(v0.c0)))))OR('790244621')))AND((((vt1.c0))>=((rt0.c0))))) WHERE ((NOT (-1.271980469E9 COLLATE RTRIM))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt1, vt0, rt0 FULL OUTER JOIN v0 ON ((((((((0.009398060989547097)AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))OR(((((v0.c0)OR(rt0.c2)))AND(v0.c0)))))OR('790244621')))AND((((vt1.c0))>=((rt0.c0))))) WHERE (((-1.271980469E9 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt1, vt0, rt0 FULL OUTER JOIN v0 ON ((((((((0.009398060989547097)AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))OR(((((v0.c0)OR(rt0.c2)))AND(v0.c0)))))OR('790244621')))AND((((vt1.c0))>=((rt0.c0))))) GROUP BY rt0.c3;
SELECT rt0.c0, t1.c0, rt0.c3, rt0.c2, vt1.c0 FROM vt1, rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c3, rt0.c2, vt1.c0;
SELECT rt0.c0, t1.c0, rt0.c3, rt0.c2, vt1.c0 FROM vt1, rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c3, rt0.c2, vt1.c0 HAVING SUM(GROUP_CONCAT(TOTAL(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, t1.c0, rt0.c3, rt0.c2, vt1.c0 FROM vt1, rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c3, rt0.c2, vt1.c0 HAVING (NOT (SUM(GROUP_CONCAT(TOTAL(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c0, t1.c0, rt0.c3, rt0.c2, vt1.c0 FROM vt1, rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c3, rt0.c2, vt1.c0 HAVING ((SUM(GROUP_CONCAT(TOTAL(TOTAL(rt0.c0))))) ISNULL);
SELECT * FROM t1 INNER JOIN rt0 ON (((((((((~ (rt0.c3)))AND(ABS(rt0.c3))))OR(rt0.c0)))OR(((((rt0.c1)OR(t1.c0)))OR(rt0.c2)))))OR(((0.7469504023510689)|(rt0.c2)))) FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(rt0.c3)))AND(vt0.c0))) BETWEEN (((rt0.c2)||(t1.c0))) AND (((((NULL)OR(rt0.c2)))AND(rt0.c0))));
SELECT * FROM t1 INNER JOIN rt0 ON (((((((((~ (rt0.c3)))AND(ABS(rt0.c3))))OR(rt0.c0)))OR(((((rt0.c1)OR(t1.c0)))OR(rt0.c2)))))OR(((0.7469504023510689)|(rt0.c2)))) FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(rt0.c3)))AND(vt0.c0))) BETWEEN (((rt0.c2)||(t1.c0))) AND (((((NULL)OR(rt0.c2)))AND(rt0.c0)))) WHERE ((((t1.c0)) NOT BETWEEN ((((vt0.c0)LIKE(t1.c0)))) AND (((NOT (rt0.c2)))))) UNION ALL SELECT ALL * FROM t1 INNER JOIN rt0 ON (((((((((~ (rt0.c3)))AND(ABS(rt0.c3))))OR(rt0.c0)))OR(((((rt0.c1)OR(t1.c0)))OR(rt0.c2)))))OR(((0.7469504023510689)|(rt0.c2)))) FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(rt0.c3)))AND(vt0.c0))) BETWEEN (((rt0.c2)||(t1.c0))) AND (((((NULL)OR(rt0.c2)))AND(rt0.c0)))) WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((((vt0.c0)LIKE(t1.c0)))) AND (((NOT (rt0.c2)))))))) UNION ALL SELECT ALL * FROM t1 NOT INDEXED INNER JOIN rt0 ON (((((((((~ (rt0.c3)))AND(ABS(rt0.c3))))OR(rt0.c0)))OR(((((rt0.c1)OR(t1.c0)))OR(rt0.c2)))))OR(((0.7469504023510689)|(rt0.c2)))) FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(rt0.c3)))AND(vt0.c0))) BETWEEN (((rt0.c2)||(t1.c0))) AND (((((NULL)OR(rt0.c2)))AND(rt0.c0)))) WHERE ((((((t1.c0)) NOT BETWEEN ((((vt0.c0)LIKE(t1.c0)))) AND (((NOT (rt0.c2)))))) ISNULL));
SELECT * FROM t1 INNER JOIN rt0 ON (((((((((~ (rt0.c3)))AND(ABS(rt0.c3))))OR(rt0.c0)))OR(((((rt0.c1)OR(t1.c0)))OR(rt0.c2)))))OR(((0.7469504023510689)|(rt0.c2)))) FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(rt0.c3)))AND(vt0.c0))) BETWEEN (((rt0.c2)||(t1.c0))) AND (((((NULL)OR(rt0.c2)))AND(rt0.c0))));
SELECT DISTINCT * FROM vt1 INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER)) IS TRUE) INNER JOIN rt0 ON ((CAST(t1.c0 AS REAL)) ISNULL) INNER JOIN vt0 ON x'' CROSS JOIN v0 ON CAST(CASE vt0.c0  WHEN rt0.c1 THEN t1.c0 END AS NUMERIC);
SELECT DISTINCT * FROM vt1 INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER)) IS TRUE) INNER JOIN rt0 ON ((CAST(t1.c0 AS REAL)) ISNULL) INNER JOIN vt0 ON x'' CROSS JOIN v0 ON CAST(CASE vt0.c0  WHEN rt0.c1 THEN t1.c0 END AS NUMERIC) WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((NULL) NOTNULL) END) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER)) IS TRUE) INNER JOIN rt0 ON ((CAST(t1.c0 AS REAL)) ISNULL) INNER JOIN vt0 ON x'' CROSS JOIN v0 ON CAST(CASE vt0.c0  WHEN rt0.c1 THEN t1.c0 END AS NUMERIC) WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((NULL) NOTNULL) END))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER)) IS TRUE) INNER JOIN rt0 ON ((CAST(t1.c0 AS REAL)) ISNULL) INNER JOIN vt0 ON x'' CROSS JOIN v0 ON CAST(CASE vt0.c0  WHEN rt0.c1 THEN t1.c0 END AS NUMERIC) WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((NULL) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER)) IS TRUE) INNER JOIN rt0 ON ((CAST(t1.c0 AS REAL)) ISNULL) INNER JOIN vt0 ON x'' CROSS JOIN v0 ON CAST(CASE vt0.c0  WHEN rt0.c1 THEN t1.c0 END AS NUMERIC);
SELECT rt0.c1, v0.c0 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (rt0.c3) AND (v0.c0))) AND ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) FULL OUTER JOIN vt0 ON CASE ((vt0.c0)<=(v0.c0))  WHEN ((rt0.c0)%(rt0.c1)) THEN x'' WHEN (v0.c0 IN ()) THEN CHAR(vt1.c0) WHEN ((rt0.c0)IS NOT(rt0.c2)) THEN ((vt1.c0)/(vt1.c0)) ELSE ((rt0.c2)OR(vt1.c0)) END GROUP BY rt0.c1, v0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON '' GROUP BY vt0.c0;
SELECT SUM(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND((~ (rt0.c0)))))AND((- (v0.c0))))) FROM v0, rt0 ORDER BY CAST(((((rt0.c2)AND(0.8730527946945643)))AND(rt0.c2)) AS INTEGER) ASC;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0) IS TRUE)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, t1, rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, t1, rt0, vt0 WHERE ((((+ (v0.c0)))<(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, t1, rt0, vt0 WHERE ((NOT ((((+ (v0.c0)))<(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, t1, rt0, vt0 WHERE ((((((+ (v0.c0)))<(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, t1, rt0, vt0;
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t1 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM vt0, t1 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM vt0, t1 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(MIN(TOTAL(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(MIN(TOTAL(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(MIN(TOTAL(t1.c0)))) ISNULL);
SELECT rt0.c1, t1.c0, v0.c0, vt1.c0, vt0.c0 FROM t1, vt1, rt0, vt0, v0;
SELECT ALL rt0.c1, t1.c0, v0.c0, vt1.c0, vt0.c0 FROM t1, vt1, rt0, vt0, v0 WHERE (((t1.c0)<>(((v0.c0)&(rt0.c1))))) UNION ALL SELECT rt0.c1, t1.c0, v0.c0, vt1.c0, vt0.c0 FROM t1, vt1, rt0, vt0, v0 WHERE ((NOT (((t1.c0)!=(((v0.c0)&(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, t1.c0, v0.c0, vt1.c0, vt0.c0 FROM t1, vt1, rt0, vt0, v0 WHERE (((((t1.c0)<>(((v0.c0)&(rt0.c1))))) ISNULL));
SELECT rt0.c1, t1.c0, v0.c0, vt1.c0, vt0.c0 FROM t1, vt1, rt0, vt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((v0.c0))!=((rt0.c1))) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((((v0.c0))<>((rt0.c1))) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((((v0.c0))<>((rt0.c1))) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM rt0, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c3 FROM rt0, vt1, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c3;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c3 FROM rt0, vt1, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c3 HAVING AVG(MAX(COUNT(*))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c3 FROM rt0, vt1, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c3 HAVING (NOT (AVG(MAX(COUNT(*))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c3 FROM rt0, vt1, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c3 HAVING ((AVG(MAX(COUNT(*)))) ISNULL);
SELECT t1.c0, vt0.c0 FROM vt0, t1;
SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE (((t1.c0) NOTNULL)) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT (((t1.c0) NOTNULL)))) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE (((((t1.c0) NOTNULL)) ISNULL));
SELECT t1.c0, vt0.c0 FROM vt0, t1;
SELECT DISTINCT rt0.c2 FROM rt0, vt0, t1 INNER JOIN v0 ON (((((v0.c0) NOT NULL), CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END, '~>B'))>((t1.c0, vt0.c0, rt0.c3)));
SELECT DISTINCT rt0.c2 FROM rt0, vt0, t1 INNER JOIN v0 ON (((((v0.c0) NOT NULL), CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END, '~>B'))>((t1.c0, vt0.c0, rt0.c3))) WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER)) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0, t1 INNER JOIN v0 ON (((((v0.c0) NOT NULL), CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END, '~>B'))>((t1.c0, vt0.c0, rt0.c3))) WHERE ((NOT (CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0, t1 INNER JOIN v0 ON (((((v0.c0) NOT NULL), CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END, '~>B'))>((t1.c0, vt0.c0, rt0.c3))) WHERE (((CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt0, t1 INNER JOIN v0 ON (((((v0.c0) NOT NULL), CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END, '~>B'))>((t1.c0, vt0.c0, rt0.c3)));
SELECT v0.c0, t1.c0 FROM v0, t1, vt1 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1, vt1 WHERE (CAST(QUOTE(vt1.c0) AS NUMERIC)) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM v0, t1, vt1 WHERE ((NOT (CAST(QUOTE(vt1.c0) AS NUMERIC)))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0, t1, vt1 WHERE (((CAST(QUOTE(vt1.c0) AS NUMERIC)) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0, t1, vt1 GROUP BY v0.c0, t1.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON '109848828' GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON '109848828' GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c3 HAVING ((((COUNT(*))AND(((TOTAL(rt0.c3))+(vt1.c0)))))AND((~ (AVG(TOTAL(t1.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON '109848828' GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c3 HAVING (NOT (((((COUNT(*))AND(((TOTAL(rt0.c3))+(vt1.c0)))))AND((~ (AVG(TOTAL(t1.c0)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt0, vt1 FULL OUTER JOIN t1 ON '109848828' GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c3 HAVING ((((((COUNT(*))AND(((TOTAL(rt0.c3))+(vt1.c0)))))AND((~ (AVG(TOTAL(t1.c0))))))) ISNULL);
SELECT * FROM t1, vt0, v0, rt0;
SELECT * FROM t1, vt0, v0, rt0 WHERE (((CAST(NULL AS INTEGER)) BETWEEN ((- (vt0.c0))) AND (CAST(NULL AS TEXT)))) UNION ALL SELECT ALL * FROM t1, vt0, v0, rt0 WHERE ((NOT (((CAST(NULL AS INTEGER)) BETWEEN ((- (vt0.c0))) AND (CAST(NULL AS TEXT)))))) UNION ALL SELECT * FROM t1, vt0, v0, rt0 WHERE (((((CAST(NULL AS INTEGER)) BETWEEN ((- (vt0.c0))) AND (CAST(NULL AS TEXT)))) ISNULL));
SELECT * FROM t1, vt0, v0, rt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL WHERE ((((v0.c0 IN (v0.c0, vt1.c0)))=(0.44761208730560587))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL WHERE ((NOT ((((v0.c0 IN (v0.c0, vt1.c0)))=(0.44761208730560587))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL WHERE ((((((v0.c0 IN (v0.c0, vt1.c0)))==(0.44761208730560587))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (LOWER(DISTINCT COALESCE(DISTINCT v0.c0, v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (LOWER(DISTINCT COALESCE(DISTINCT v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((LOWER(DISTINCT COALESCE(DISTINCT v0.c0, v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, t1.c0, vt1.c0, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, t1, vt1, vt0 GROUP BY rt0.c0, rt0.c3, t1.c0, vt1.c0, vt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, t1.c0, vt1.c0, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, t1, vt1, vt0 GROUP BY rt0.c0, rt0.c3, t1.c0, vt1.c0, vt0.c0, v0.c0, rt0.c2 HAVING MAX(AVG(t1.c0)) UNION ALL SELECT rt0.c0, rt0.c3, t1.c0, vt1.c0, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, t1, vt1, vt0 GROUP BY rt0.c0, rt0.c3, t1.c0, vt1.c0, vt0.c0, v0.c0, rt0.c2 HAVING (NOT (MAX(AVG(t1.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, t1.c0, vt1.c0, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, t1, vt1, vt0 GROUP BY rt0.c0, rt0.c3, t1.c0, vt1.c0, vt0.c0, v0.c0, rt0.c2 HAVING ((MAX(AVG(t1.c0))) ISNULL);
SELECT ALL * FROM rt0, vt1, vt0, t1, v0;
SELECT ALL * FROM rt0, vt1, vt0, t1, v0 WHERE (((((((vt1.c0) NOTNULL))AND(SUBSTR(vt0.c0, rt0.c2))))AND(((((((((v0.c0)OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0, t1, v0 WHERE ((NOT (((((((vt1.c0) NOTNULL))AND(SUBSTR(vt0.c0, rt0.c2))))AND(((((((((v0.c0)OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0, t1, v0 WHERE (((((((((vt1.c0) NOTNULL))AND(SUBSTR(vt0.c0, rt0.c2))))AND(((((((((v0.c0)OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0, t1, v0;
SELECT DISTINCT t1.c0, vt1.c0 FROM t1, vt0 NATURAL JOIN vt1;
SELECT DISTINCT t1.c0, vt1.c0 FROM t1, vt0 NATURAL JOIN vt1 WHERE (vt1.c0) UNION SELECT DISTINCT t1.c0, vt1.c0 FROM t1, vt0 NATURAL JOIN vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT t1.c0, vt1.c0 FROM t1, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT t1.c0, vt1.c0 FROM t1, vt0 NATURAL JOIN vt1;
SELECT ALL v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, t1, v0, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, t1, v0, rt0 WHERE (NULLIF(DISTINCT (rt0.c3 IN (rt0.c2)), (((t1.c0))==((rt0.c0))))) GROUP BY v0.c0, vt0.c0, rt0.c0 UNION SELECT ALL v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, t1, v0, rt0 WHERE ((NOT (NULLIF(DISTINCT (rt0.c3 IN (rt0.c2)), (((t1.c0))==((rt0.c0))))))) GROUP BY v0.c0, vt0.c0, rt0.c0 UNION SELECT ALL v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, t1, v0, rt0 WHERE (((NULLIF(DISTINCT (rt0.c3 IN (rt0.c2)), (((t1.c0))=((rt0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0, rt0.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, t1, v0, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0;
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT * FROM v0, t1, vt0, vt1;
SELECT * FROM v0, t1, vt0, vt1 WHERE (((((vt1.c0) ISNULL))<<(((((0.6391065882068283)AND(vt1.c0)))AND(t1.c0))))) UNION ALL SELECT * FROM v0, t1, vt0, vt1 WHERE ((NOT (((((vt1.c0) ISNULL))<<(((((0.6391065882068283)AND(vt1.c0)))AND(t1.c0))))))) UNION ALL SELECT * FROM v0, t1, vt0, vt1 WHERE (((((((vt1.c0) ISNULL))<<(((((0.6391065882068283)AND(vt1.c0)))AND(t1.c0))))) ISNULL));
SELECT * FROM v0, t1, vt0, vt1;
SELECT DISTINCT * FROM t1, vt0, v0;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (0.200962799536462) UNION SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((NOT (0.200962799536462))) UNION SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((0.200962799536462) ISNULL));
SELECT DISTINCT * FROM t1, vt0, v0;
SELECT rt0.c2, v0.c0, rt0.c0, vt1.c0, t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON CAST(((rt0.c1) NOT NULL) AS REAL) CROSS JOIN rt0 ON ((((rt0.c0)%(t1.c0))) IS TRUE) INNER JOIN vt1 ON UPPER(LIKELIHOOD('1210083046', 0.3193401864651959)) CROSS JOIN vt0 ON (((NOT (vt1.c0)))IS((t1.c0 IN ()))) GROUP BY rt0.c2, v0.c0, rt0.c0, vt1.c0, t1.c0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING TOTAL(AVG(SUM(vt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(AVG(SUM(vt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((TOTAL(AVG(SUM(vt0.c0)))) ISNULL);
SELECT MAX((((((rt0.c1))<>((rt0.c2))))AND((rt0.c2 IN ())))) FROM v0, rt0 ORDER BY x'ffb4' DESC  NULLS FIRST;
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt1 ON (((0.8380093011744885)) BETWEEN (((NOT (rt0.c3)))) AND (((rt0.c2 IN ())))) CROSS JOIN vt0 ON (- (((rt0.c1) ISNULL))) RIGHT OUTER JOIN rt0 ON 0Xffffffffe1cb77ee;
SELECT DISTINCT * FROM t1, vt0, rt0 INNER JOIN vt1 ON (((rt0.c0, '1434253269', rt0.c1)) NOT BETWEEN (((((1.424458473E9, v0.c0, '554681332')) NOT BETWEEN ((v0.c0, vt0.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1))), ((rt0.c1)*(v0.c0)), CAST(rt0.c2 AS INTEGER))) AND (((rt0.c1 IN ()), LIKELIHOOD(DISTINCT rt0.c0, 0.10314849318904284), ((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))))) RIGHT OUTER JOIN v0 ON TYPEOF(((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)));
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((json_array_length(rt0.c1, NULL))<<((rt0.c1 IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((json_array_length(rt0.c1, NULL))<<((rt0.c1 IN ())))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((json_array_length(rt0.c1, NULL))<<((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT ALL t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT ALL t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM vt0, rt0, v0, vt1, t1;
SELECT ALL * FROM vt0, rt0, v0, vt1, t1 WHERE (((((rt0.c2 COLLATE BINARY)AND(((t1.c0)|(x'')))))AND(0.37305980336450584))) UNION ALL SELECT ALL * FROM vt0, rt0, v0, vt1, t1 WHERE ((NOT (((((rt0.c2 COLLATE BINARY)AND(((t1.c0)|(x'')))))AND(0.37305980336450584))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0, vt1, t1 WHERE (((((((rt0.c2 COLLATE BINARY)AND(((t1.c0)|(x'')))))AND(0.37305980336450584))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0, vt1, t1;
SELECT DISTINCT * FROM vt1, t1, vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1, t1, vt0 NATURAL JOIN rt0 WHERE ((~ (((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND(t1.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))))) UNION SELECT DISTINCT * FROM vt1, t1, vt0 NATURAL JOIN rt0 WHERE ((NOT ((~ (((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND(t1.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))))))) UNION SELECT DISTINCT * FROM vt1, t1, vt0 NATURAL JOIN rt0 WHERE ((((~ (((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND(t1.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM vt1, t1, vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1 WHERE (((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))AND((((rt0.c2))<=((t1.c0))))))OR(rt0.c0))) GROUP BY rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1 WHERE ((NOT (((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))AND((((rt0.c2))<=((t1.c0))))))OR(rt0.c0))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1 WHERE (((((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))AND((((rt0.c2))<=((t1.c0))))))OR(rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING MAX(rt0.c3) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (MAX(rt0.c3))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING ((MAX(rt0.c3)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING MAX(rt0.c3) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (MAX(rt0.c3))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING ((MAX(rt0.c3)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL * FROM vt1, vt0, t1;
SELECT ALL * FROM vt1, vt0, t1 WHERE (((vt0.c0 COLLATE NOCASE)-(((vt0.c0)==(t1.c0))))) UNION ALL SELECT ALL * FROM vt1, vt0, t1 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)-(((vt0.c0)=(t1.c0))))))) UNION ALL SELECT * FROM vt1, vt0, t1 WHERE (((((vt0.c0 COLLATE NOCASE)-(((vt0.c0)==(t1.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0, t1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1 WHERE (0.1914648364251399) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1 WHERE ((NOT (0.1914648364251399))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1 WHERE (((0.1914648364251399) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1;
SELECT rt0.c1, rt0.c2, t1.c0 FROM vt1, v0 LEFT OUTER JOIN rt0 ON x'' INNER JOIN vt0 ON -220870605 LEFT OUTER JOIN t1 ON CAST(0.7879738738800648 AS REAL) GROUP BY rt0.c1, rt0.c2, t1.c0;
SELECT ALL rt0.c1, rt0.c2, t1.c0 FROM vt1, v0 LEFT OUTER JOIN rt0 ON x'' INNER JOIN vt0 ON -220870605 LEFT OUTER JOIN t1 ON CAST(0.7879738738800648 AS REAL) WHERE (((((((((((vt0.c0)OR(rt0.c0)))AND(x'')))OR(v0.c0)))AND(vt0.c0))) BETWEEN (((rt0.c2)-('-2014292889'))) AND (((rt0.c1) NOTNULL)))) GROUP BY rt0.c1, rt0.c2, t1.c0 UNION SELECT ALL rt0.c1, rt0.c2, t1.c0 FROM vt1, v0 LEFT OUTER JOIN rt0 ON x'' INNER JOIN vt0 ON -220870605 LEFT OUTER JOIN t1 ON CAST(0.7879738738800648 AS REAL) WHERE ((NOT (((((((((((vt0.c0)OR(rt0.c0)))AND(x'')))OR(v0.c0)))AND(vt0.c0))) BETWEEN (((rt0.c2)-('-2014292889'))) AND (((rt0.c1) NOTNULL)))))) GROUP BY rt0.c1, rt0.c2, t1.c0 UNION SELECT ALL rt0.c1, rt0.c2, t1.c0 FROM vt1, v0 LEFT OUTER JOIN rt0 ON x'' INNER JOIN vt0 ON -220870605 LEFT OUTER JOIN t1 ON CAST(0.7879738738800648 AS REAL) WHERE (((((((((((((vt0.c0)OR(rt0.c0)))AND(x'')))OR(v0.c0)))AND(vt0.c0))) BETWEEN (((rt0.c2)-('-2014292889'))) AND (((rt0.c1) NOTNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, t1.c0;
SELECT rt0.c1, rt0.c2, t1.c0 FROM vt1, v0 LEFT OUTER JOIN rt0 ON x'' INNER JOIN vt0 ON -220870605 LEFT OUTER JOIN t1 ON CAST(0.7879738738800648 AS REAL) GROUP BY rt0.c1, rt0.c2, t1.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0, vt1.c0, rt0.c2 FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE) RIGHT OUTER JOIN vt1 ON (NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0, vt1.c0, rt0.c2;
SELECT ALL * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((0.2125113391921889)%('㓧XXi&f'))) IS FALSE)) UNION ALL SELECT * FROM vt1 NOT INDEXED, vt0, rt0 WHERE ((NOT (((((0.2125113391921889)%('㓧XXi&f'))) IS FALSE)))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE (((((((0.2125113391921889)%('㓧XXi&f'))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON 0.5754561280095697 FULL OUTER JOIN v0 ON rt0.c3 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CAST(vt1.c0 AS BLOB)));
SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON 0.5754561280095697 FULL OUTER JOIN v0 ON rt0.c3 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CAST(vt1.c0 AS BLOB))) WHERE (((((vt1.c0)%(v0.c0))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON 0.5754561280095697 FULL OUTER JOIN v0 ON rt0.c3 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CAST(vt1.c0 AS BLOB))) WHERE ((NOT (((((vt1.c0)%(v0.c0))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON 0.5754561280095697 FULL OUTER JOIN v0 ON rt0.c3 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CAST(vt1.c0 AS BLOB))) WHERE (((((((vt1.c0)%(v0.c0))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON 0.5754561280095697 FULL OUTER JOIN v0 ON rt0.c3 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CAST(vt1.c0 AS BLOB)));
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((NULL IN ())) NOT BETWEEN (((t1.c0)LIKE(t1.c0))) AND (UNLIKELY(0.11622832358349733)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((NULL IN ())) NOT BETWEEN (((t1.c0)LIKE(t1.c0))) AND (UNLIKELY(0.11622832358349733)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((NULL IN ())) NOT BETWEEN (((t1.c0)LIKE(t1.c0))) AND (UNLIKELY(0.11622832358349733)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0, t1, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0, t1, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING ((((((((TOTAL(TOTAL(t1.c0)))OR(0.9330564637711395)))AND(rt0.c2)))AND(MAX(COUNT(*)))))AND(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM v0, rt0, t1, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING (NOT (((((((((TOTAL(TOTAL(t1.c0)))OR(0.9330564637711395)))AND(rt0.c2)))AND(MAX(COUNT(*)))))AND(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM v0, rt0, t1, vt1 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING ((((((((((TOTAL(TOTAL(t1.c0)))OR(0.9330564637711395)))AND(rt0.c2)))AND(MAX(COUNT(*)))))AND(COUNT(rt0.c1)))) ISNULL);
SELECT SUM(CASE CASE 0.5058688292939858  WHEN t1.c0 THEN rt0.c3 ELSE v0.c0 END  WHEN TRIM(NULL, rt0.c2) THEN 0.4844257161120634 COLLATE NOCASE END) FROM rt0, v0, vt1, vt0, t1;
SELECT * FROM v0, t1;
SELECT * FROM v0, t1 WHERE (((((t1.c0 COLLATE NOCASE)OR(LIKELY(v0.c0))))OR(t1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM v0, t1 WHERE ((NOT (((((t1.c0 COLLATE NOCASE)OR(LIKELY(v0.c0))))OR(t1.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0, t1 WHERE (((((((t1.c0 COLLATE NOCASE)OR(LIKELY(v0.c0))))OR(t1.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM v0, t1;
SELECT DISTINCT rt0.c3, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((vt0.c0)<>(rt0.c1))) NOTNULL);
SELECT DISTINCT rt0.c3, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((vt0.c0)!=(rt0.c1))) NOTNULL) WHERE (LIKELY(DISTINCT 0xfffffffffba0ec20)) UNION SELECT DISTINCT rt0.c3, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((vt0.c0)<>(rt0.c1))) NOTNULL) WHERE ((NOT (LIKELY(DISTINCT 0Xfffffffffba0ec20)))) UNION SELECT DISTINCT rt0.c3, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((vt0.c0)!=(rt0.c1))) NOTNULL) WHERE (((LIKELY(DISTINCT 0Xfffffffffba0ec20)) ISNULL));
SELECT DISTINCT rt0.c3, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((vt0.c0)<>(rt0.c1))) NOTNULL);
SELECT v0.c0 FROM v0, vt1, t1 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1, t1 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE ((((t1.c0 IN (vt1.c0, v0.c0))) NOTNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1, t1 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE ((NOT ((((t1.c0 IN (vt1.c0, v0.c0))) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1, t1 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE ((((((t1.c0 IN (vt1.c0, v0.c0))) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1, t1 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0;
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))) IN ());
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))) IN ()) WHERE (json_remove(((rt0.c2)<>(rt0.c1)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))) UNION ALL SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))) IN ()) WHERE ((NOT (json_remove(((rt0.c2)<>(rt0.c1)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))) UNION ALL SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))) IN ()) WHERE (((json_remove(((rt0.c2)!=(rt0.c1)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, t1, v0;
SELECT DISTINCT * FROM vt1, rt0, t1, v0 WHERE (((rt0.c3) NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, rt0, t1, v0 WHERE ((NOT (((rt0.c3) NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, rt0, t1, v0 WHERE (((((rt0.c3) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, t1, v0;
SELECT ALL rt0.c1, vt1.c0 FROM v0, vt0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT ((vt1.c0)>(vt0.c0))) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT ((vt1.c0)>(vt0.c0))) WHERE (((((vt1.c0)OR(rt0.c0)))<((rt0.c2 IN ())))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT ((vt1.c0)>(vt0.c0))) WHERE ((NOT (((((vt1.c0)OR(rt0.c0)))<((rt0.c2 IN ())))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT ((vt1.c0)>(vt0.c0))) WHERE (((((((vt1.c0)OR(rt0.c0)))<((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM v0, vt0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT ((vt1.c0)>(vt0.c0))) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt1.c0, rt0.c0 FROM t1, rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, vt1.c0, rt0.c0 FROM t1, rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt1.c0, rt0.c0 HAVING AVG((NOT (SUM(vt1.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, vt1.c0, rt0.c0 FROM t1, rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt1.c0, rt0.c0 HAVING (NOT (AVG((NOT (SUM(vt1.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt1.c0, rt0.c0 FROM t1, rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt1.c0, rt0.c0 HAVING ((AVG((NOT (SUM(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON (((+ (vt0.c0)))*(CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON json_object((+ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))) CROSS JOIN v0 ON vt0.c0;
SELECT DISTINCT * FROM rt0, vt0, t1;
SELECT DISTINCT * FROM rt0, vt0, t1 WHERE (((CAST(rt0.c1 AS REAL))LIKE(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, t1 WHERE ((NOT (((CAST(rt0.c1 AS REAL))LIKE(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0, t1 WHERE (((((CAST(rt0.c1 AS REAL))LIKE(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) IS TRUE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>=(vt0.c0))) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2 HAVING ((MIN(vt1.c0))||(CASE SUM(rt0.c2)  WHEN rt0.c1 THEN COUNT(rt0.c0) END)) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2 HAVING (NOT (((MIN(vt1.c0))||(CASE SUM(rt0.c2)  WHEN rt0.c1 THEN COUNT(rt0.c0) END)))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2 HAVING ((((MIN(vt1.c0))||(CASE SUM(rt0.c2)  WHEN rt0.c1 THEN COUNT(rt0.c0) END))) ISNULL);
SELECT rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2 HAVING ((MIN(vt1.c0))||(CASE SUM(rt0.c2)  WHEN rt0.c1 THEN COUNT(rt0.c0) END)) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2 HAVING (NOT (((MIN(vt1.c0))||(CASE SUM(rt0.c2)  WHEN rt0.c1 THEN COUNT(rt0.c0) END)))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2 HAVING ((((MIN(vt1.c0))||(CASE SUM(rt0.c2)  WHEN rt0.c1 THEN COUNT(rt0.c0) END))) ISNULL);
SELECT rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (+ ((~ ('*')))) RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS FALSE);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (+ ((~ ('*')))) RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS FALSE) WHERE (((rt0.c1)>>(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (+ ((~ ('*')))) RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS FALSE) WHERE ((NOT (((rt0.c1)>>(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED FULL OUTER JOIN vt1 ON (+ ((~ ('*')))) RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS FALSE) WHERE (((((rt0.c1)>>(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (+ ((~ ('*')))) RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS FALSE);
SELECT DISTINCT rt0.c3, rt0.c0 FROM v0, t1, rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM v0, t1, rt0 WHERE ('1210083046') UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM v0, t1, rt0 WHERE ((NOT ('1210083046'))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM v0, t1, rt0 WHERE ((('1210083046') ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM v0, t1, rt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt0.c0)))OR((NOT (vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt0.c0)))OR((NOT (vt1.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt0.c0)))OR((NOT (vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, rt0.c3, v0.c0, t1.c0, rt0.c2, vt1.c0 FROM t1 RIGHT OUTER JOIN vt1 ON json_insert(((rt0.c0)IS NOT(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND ('\r㒖妎p')), TYPEOF(DISTINCT rt0.c0)) INNER JOIN rt0 ON (((((rt0.c2) NOT NULL)))=((CASE v0.c0  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END))) LEFT OUTER JOIN v0 ON (DATE(t1.c0, rt0.c2, vt0.c0) IN (vt0.c0, '1806122356')) RIGHT OUTER JOIN vt0 ON ((((rt0.c3)||(rt0.c2))) NOT BETWEEN ((+ (vt1.c0))) AND (CASE rt0.c3  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.7611652673621113 WHEN t1.c0 THEN rt0.c3 ELSE vt0.c0 END)) GROUP BY vt0.c0, rt0.c3, v0.c0, t1.c0, rt0.c2, vt1.c0;
SELECT rt0.c3, t1.c0, vt0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0, rt0.c3, v0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)), x'', CAST(rt0.c3 AS REAL))) AND ((((vt1.c0)GLOB(rt0.c3)), (~ (vt1.c0)), (rt0.c1 IN ()))));
SELECT ALL rt0.c3, t1.c0, vt0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0, rt0.c3, v0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)), x'', CAST(rt0.c3 AS REAL))) AND ((((vt1.c0)GLOB(rt0.c3)), (~ (vt1.c0)), (rt0.c1 IN ())))) WHERE (((((rt0.c1) ISNULL))OR(NULL))) UNION ALL SELECT rt0.c3, t1.c0, vt0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0, rt0.c3, v0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)), x'', CAST(rt0.c3 AS REAL))) AND ((((vt1.c0)GLOB(rt0.c3)), (~ (vt1.c0)), (rt0.c1 IN ())))) WHERE ((NOT (((((rt0.c1) ISNULL))OR(NULL))))) UNION ALL SELECT ALL rt0.c3, t1.c0, vt0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0, rt0.c3, v0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)), x'', CAST(rt0.c3 AS REAL))) AND ((((vt1.c0)GLOB(rt0.c3)), (~ (vt1.c0)), (rt0.c1 IN ())))) WHERE (((((((rt0.c1) ISNULL))OR(NULL))) ISNULL));
SELECT rt0.c3, t1.c0, vt0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0, rt0.c3, v0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)), x'', CAST(rt0.c3 AS REAL))) AND ((((vt1.c0)GLOB(rt0.c3)), (~ (vt1.c0)), (rt0.c1 IN ()))));
SELECT DISTINCT * FROM rt0, t1 INNER JOIN v0 ON (~ (LENGTH(v0.c0)));
SELECT DISTINCT * FROM rt0, t1 INNER JOIN v0 ON (~ (LENGTH(v0.c0))) WHERE (CAST(rt0.c1 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, t1 INNER JOIN v0 ON (~ (LENGTH(v0.c0))) WHERE ((NOT (CAST(rt0.c1 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, t1 INNER JOIN v0 ON (~ (LENGTH(v0.c0))) WHERE (((CAST(rt0.c1 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, t1 INNER JOIN v0 ON (~ (LENGTH(v0.c0)));
SELECT rt0.c1 FROM vt1, vt0, rt0, v0, t1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, vt0, rt0, v0, t1 WHERE ((+ ((((rt0.c2))>((vt1.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, vt0, rt0, v0, t1 WHERE ((NOT ((+ ((((rt0.c2))>((vt1.c0)))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, vt0, rt0, v0, t1 WHERE ((((+ ((((rt0.c2))>((vt1.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, vt0, rt0, v0, t1 GROUP BY rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING INSTR((- (v0.c0)), (v0.c0 IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (INSTR((- (v0.c0)), (v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((INSTR((- (v0.c0)), (v0.c0 IN ()))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING INSTR((- (v0.c0)), (v0.c0 IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (INSTR((- (v0.c0)), (v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((INSTR((- (v0.c0)), (v0.c0 IN ()))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(SQLITE_SOURCE_ID() AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(SQLITE_SOURCE_ID() AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(SQLITE_SOURCE_ID() AS BLOB)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0) NOT NULL), vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0) NOT NULL), vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0) NOT NULL), vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0, vt1, vt0 WHERE (IFNULL(NULLIF(rt0.c1, vt0.c0), LAST_INSERT_ROWID())) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0, vt1, vt0 WHERE ((NOT (IFNULL(NULLIF(rt0.c1, vt0.c0), LAST_INSERT_ROWID())))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0, vt1, vt0 WHERE (((IFNULL(NULLIF(rt0.c1, vt0.c0), LAST_INSERT_ROWID())) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((TOTAL(SUM(v0.c0)))%(CASE TOTAL(TOTAL(MAX(v0.c0)))  WHEN MIN(v0.c0) THEN GROUP_CONCAT(MAX(COUNT(t1.c0))) END)) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (((TOTAL(SUM(v0.c0)))%(CASE TOTAL(TOTAL(MAX(v0.c0)))  WHEN MIN(v0.c0) THEN GROUP_CONCAT(MAX(COUNT(t1.c0))) END)))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((((TOTAL(SUM(v0.c0)))%(CASE TOTAL(TOTAL(MAX(v0.c0)))  WHEN MIN(v0.c0) THEN GROUP_CONCAT(MAX(COUNT(t1.c0))) END))) ISNULL);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN t1;
SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB)) UNION ALL SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE ((NOT (CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB)))) UNION ALL SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE (((CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB)) ISNULL));
SELECT ALL * FROM vt1, rt0 NATURAL JOIN t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.4356540873423731) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0.4356540873423731))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.4356540873423731) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, t1.c0 FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0))<=((vt0.c0)))) BETWEEN (CHANGES()) AND ((NOT (vt0.c0)))) RIGHT OUTER JOIN t1 ON (NOT ((vt1.c0 IN ()))) INNER JOIN vt0 ON (((v0.c0)) NOT BETWEEN ((((rt0.c0)||(vt0.c0)))) AND ((((rt0.c3)<=(v0.c0))))) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (GROUP_CONCAT(COUNT(*)) IN ((~ (AVG(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((GROUP_CONCAT(COUNT(*)) IN ((~ (AVG(COUNT(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((GROUP_CONCAT(COUNT(*)) IN ((~ (AVG(COUNT(vt0.c0))))))) ISNULL);
SELECT ALL MIN(CAST(rt0.c1 COLLATE RTRIM AS TEXT)) FROM rt0, vt1, v0 ORDER BY 'B?d u!{o' ASC  NULLS FIRST;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM t1, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM t1, vt0, vt1 WHERE (CAST(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))AND(t1.c0)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM t1, vt0, vt1 WHERE ((NOT (CAST(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))AND(t1.c0)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM t1, vt0, vt1 WHERE (((CAST(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))AND(t1.c0)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM t1, vt0, vt1;
SELECT rt0.c1, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((~ (vt1.c0))) BETWEEN ((rt0.c3 IN (rt0.c3))) AND ('-0.0')) GROUP BY rt0.c1, rt0.c3, vt1.c0;
SELECT ALL rt0.c1, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((~ (vt1.c0))) BETWEEN ((rt0.c3 IN (rt0.c3))) AND ('-0.0')) WHERE (((((rt0.c1)OR(rt0.c3))) IS FALSE)) GROUP BY rt0.c1, rt0.c3, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((~ (vt1.c0))) BETWEEN ((rt0.c3 IN (rt0.c3))) AND ('-0.0')) WHERE ((NOT (((((rt0.c1)OR(rt0.c3))) IS FALSE)))) GROUP BY rt0.c1, rt0.c3, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((~ (vt1.c0))) BETWEEN ((rt0.c3 IN (rt0.c3))) AND ('-0.0')) WHERE (((((((rt0.c1)OR(rt0.c3))) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c3, vt1.c0;
SELECT rt0.c1, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((~ (vt1.c0))) BETWEEN ((rt0.c3 IN (rt0.c3))) AND ('-0.0')) GROUP BY rt0.c1, rt0.c3, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(((((((((vt1.c0)OR(vt0.c0)))AND('')))AND(GROUP_CONCAT(vt0.c0))))OR(MIN(TOTAL(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((((((((vt1.c0)OR(vt0.c0)))AND('')))AND(GROUP_CONCAT(vt0.c0))))OR(MIN(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(((((((((vt1.c0)OR(vt0.c0)))AND('')))AND(GROUP_CONCAT(vt0.c0))))OR(MIN(TOTAL(vt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (ABS(DISTINCT (((rt0.c1))>=((rt0.c3))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (ABS(DISTINCT (((rt0.c1))>=((rt0.c3))))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((ABS(DISTINCT (((rt0.c1))>=((rt0.c3))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c1) NOT NULL), (((rt0.c1, rt0.c3, rt0.c3))<>((rt0.c2, vt0.c0, rt0.c1))), rt0.c1 COLLATE BINARY)) AND (('H*JHtt', rt0.c0, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c1) NOT NULL), (((rt0.c1, rt0.c3, rt0.c3))<>((rt0.c2, vt0.c0, rt0.c1))), rt0.c1 COLLATE BINARY)) AND (('H*JHtt', rt0.c0, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((~ (rt0.c1))) AND (((('HﴡF뉡\rBJ##', rt0.c0, vt0.c0, rt0.c1, rt0.c3))>((rt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c1) NOT NULL), (((rt0.c1, rt0.c3, rt0.c3))!=((rt0.c2, vt0.c0, rt0.c1))), rt0.c1 COLLATE BINARY)) AND (('H*JHtt', rt0.c0, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN ((~ (rt0.c1))) AND (((('HﴡF뉡\rBJ##', rt0.c0, vt0.c0, rt0.c1, rt0.c3))>((rt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c1) NOT NULL), (((rt0.c1, rt0.c3, rt0.c3))<>((rt0.c2, vt0.c0, rt0.c1))), rt0.c1 COLLATE BINARY)) AND (('H*JHtt', rt0.c0, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) WHERE ((((((vt0.c0 IN ())) NOT BETWEEN ((~ (rt0.c1))) AND (((('HﴡF뉡\rBJ##', rt0.c0, vt0.c0, rt0.c1, rt0.c3))>((rt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c1) NOT NULL), (((rt0.c1, rt0.c3, rt0.c3))<>((rt0.c2, vt0.c0, rt0.c1))), rt0.c1 COLLATE BINARY)) AND (('H*JHtt', rt0.c0, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((+ (IFNULL(v0.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (IFNULL(v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((+ (IFNULL(v0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0 FROM t1, vt1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt1 GROUP BY t1.c0 HAVING AVG(MAX(vt1.c0)) UNION ALL SELECT t1.c0 FROM t1, vt1 GROUP BY t1.c0 HAVING (NOT (AVG(MAX(vt1.c0)))) UNION ALL SELECT t1.c0 FROM t1, vt1 GROUP BY t1.c0 HAVING ((AVG(MAX(vt1.c0))) ISNULL);
SELECT ALL t1.c0, vt1.c0 FROM vt1, v0 CROSS JOIN t1 ON LOWER(((t1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)));
SELECT t1.c0, vt1.c0 FROM vt1, v0 CROSS JOIN t1 ON LOWER(((t1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) WHERE (LIKELY(DISTINCT ((vt1.c0)!=(t1.c0)))) UNION ALL SELECT ALL t1.c0, vt1.c0 FROM vt1, v0 CROSS JOIN t1 ON LOWER(((t1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) WHERE ((NOT (LIKELY(DISTINCT ((vt1.c0)<>(t1.c0)))))) UNION ALL SELECT t1.c0, vt1.c0 FROM vt1, v0 CROSS JOIN t1 ON LOWER(((t1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) WHERE (((LIKELY(DISTINCT ((vt1.c0)<>(t1.c0)))) ISNULL));
SELECT ALL t1.c0, vt1.c0 FROM vt1, v0 CROSS JOIN t1 ON LOWER(((t1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE (CAST(rt0.c2 AS BLOB)) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(CASE WHEN rt0.c0 THEN '1824781900' WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN NULL END)))OR(((rt0.c3) IS FALSE))))OR(0.3019972950031379 COLLATE NOCASE)))AND(((NULL) IS TRUE)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(CASE WHEN rt0.c0 THEN '1824781900' WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN NULL END)))OR(((rt0.c3) IS FALSE))))OR(0.3019972950031379 COLLATE NOCASE)))AND(((NULL) IS TRUE)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE (((((((((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(CASE WHEN rt0.c0 THEN '1824781900' WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN NULL END)))OR(((rt0.c3) IS FALSE))))OR(0.3019972950031379 COLLATE NOCASE)))AND(((NULL) IS TRUE)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING LTRIM(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (LTRIM(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((LTRIM(COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING LTRIM(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (LTRIM(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((LTRIM(COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM v0, vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c3 FROM t1 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ());
SELECT ALL rt0.c3 FROM t1 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()) WHERE ((UNLIKELY(DISTINCT t1.c0) IN (rt0.c0))) UNION ALL SELECT ALL rt0.c3 FROM t1 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()) WHERE ((NOT ((UNLIKELY(DISTINCT t1.c0) IN (rt0.c0))))) UNION ALL SELECT rt0.c3 FROM t1 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()) WHERE ((((UNLIKELY(DISTINCT t1.c0) IN (rt0.c0))) ISNULL));
SELECT rt0.c3 FROM t1 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ());
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM t1 NOT INDEXED, v0, vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM t1, v0, vt0, rt0 WHERE (CAST((~ (rt0.c1)) AS INTEGER)) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM t1, v0, vt0, rt0 WHERE ((NOT (CAST((~ (rt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM t1, v0, vt0, rt0 WHERE (((CAST((~ (rt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM t1 NOT INDEXED, v0, vt0, rt0;
SELECT rt0.c2, t1.c0, rt0.c0 FROM vt0, t1, rt0, v0, vt1 GROUP BY rt0.c2, t1.c0, rt0.c0;
SELECT ALL rt0.c2, t1.c0, rt0.c0 FROM vt0, t1, rt0, v0, vt1 WHERE (((rt0.c2 COLLATE BINARY) NOT NULL)) GROUP BY rt0.c2, t1.c0, rt0.c0 UNION SELECT rt0.c2, t1.c0, rt0.c0 FROM vt0, t1, rt0, v0, vt1 WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOT NULL)))) GROUP BY rt0.c2, t1.c0, rt0.c0 UNION SELECT rt0.c2, t1.c0, rt0.c0 FROM vt0, t1, rt0, v0, vt1 WHERE (((((rt0.c2 COLLATE BINARY) NOT NULL)) ISNULL)) GROUP BY rt0.c2, t1.c0, rt0.c0;
SELECT rt0.c2, t1.c0, rt0.c0 FROM vt0, t1, rt0, v0, vt1 GROUP BY rt0.c2, t1.c0, rt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((CAST(rt0.c3 AS TEXT)) IS TRUE)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((CAST(rt0.c3 AS TEXT)) IS TRUE)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((CAST(rt0.c3 AS TEXT)) IS TRUE)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((x'', 0x46d2214a, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT NULL), (0.6710473862873318 IN (NULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((x'', 0x46d2214a, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT NULL), (0.6710473862873318 IN (NULL)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((x'', 0x46d2214a, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT NULL), (0.6710473862873318 IN (NULL)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((rt0.c3 IN ())) BETWEEN (((rt0.c1)||(rt0.c0))) AND ((((((((('')OR(rt0.c0)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c2))))) GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c3 IN ())) BETWEEN (((rt0.c1)||(rt0.c0))) AND ((((((((('')OR(rt0.c0)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c2))))))) GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c3 IN ())) BETWEEN (((rt0.c1)||(rt0.c0))) AND ((((((((('')OR(rt0.c0)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3, t1.c0, rt0.c2 FROM t1, v0, vt1 NOT INDEXED NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, t1.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3, t1.c0, rt0.c2 FROM t1, v0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, t1.c0, rt0.c2 HAVING COUNT(MAX(TOTAL(vt1.c0))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, t1.c0, rt0.c2 FROM t1, v0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, t1.c0, rt0.c2 HAVING (NOT (COUNT(MAX(TOTAL(vt1.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3, t1.c0, rt0.c2 FROM t1, v0, vt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, t1.c0, rt0.c2 HAVING ((COUNT(MAX(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))>>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((NOT (vt1.c0)))>>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((NOT (vt1.c0)))>>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt1 ON (((~ (vt1.c0)))LIKE((vt1.c0 IN ())));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt1 ON (((~ (vt1.c0)))LIKE((vt1.c0 IN ()))) WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt1 ON (((~ (vt1.c0)))LIKE((vt1.c0 IN ()))) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt1 ON (((~ (vt1.c0)))LIKE((vt1.c0 IN ()))) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt1 ON (((~ (vt1.c0)))LIKE((vt1.c0 IN ())));
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN (v0.c0 IN ()) THEN (+ (NULL)) WHEN ((NULL)+(x'')) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN '.g	E><' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END WHEN ((x'') NOTNULL) THEN ((vt0.c0)AND(x'9881')) WHEN (+ (vt0.c0)) THEN (((v0.c0))<=(('109848828'))) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN (v0.c0 IN ()) THEN (+ (NULL)) WHEN ((NULL)+(x'')) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN '.g	E><' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END WHEN ((x'') NOTNULL) THEN ((vt0.c0)AND(x'9881')) WHEN (+ (vt0.c0)) THEN (((v0.c0))<=(('109848828'))) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END WHERE ((((v0.c0)+(v0.c0)) IN ())) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN (v0.c0 IN ()) THEN (+ (NULL)) WHEN ((NULL)+(x'')) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN '.g	E><' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END WHEN ((x'') NOTNULL) THEN ((vt0.c0)AND(x'9881')) WHEN (+ (vt0.c0)) THEN (((v0.c0))<=(('109848828'))) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END WHERE ((NOT ((((v0.c0)+(v0.c0)) IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN (v0.c0 IN ()) THEN (+ (NULL)) WHEN ((NULL)+(x'')) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN '.g	E><' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END WHEN ((x'') NOTNULL) THEN ((vt0.c0)AND(x'9881')) WHEN (+ (vt0.c0)) THEN (((v0.c0))<=(('109848828'))) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END WHERE ((((((v0.c0)+(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN (v0.c0 IN ()) THEN (+ (NULL)) WHEN ((NULL)+(x'')) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN '.g	E><' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END WHEN ((x'') NOTNULL) THEN ((vt0.c0)AND(x'9881')) WHEN (+ (vt0.c0)) THEN (((v0.c0))<=(('109848828'))) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END GROUP BY v0.c0, vt0.c0;
SELECT ALL vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, t1 GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, t1 GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2 HAVING SUM(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, t1 GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, t1 GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2 HAVING ((SUM(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c0)>(rt0.c1)))AND(((rt0.c0) IS FALSE))))OR(x''))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((((rt0.c0)>(rt0.c1)))AND(((rt0.c0) IS FALSE))))OR(x''))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((((((rt0.c0)>(rt0.c1)))AND(((rt0.c0) IS FALSE))))OR(x''))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT t1.c0, vt0.c0 FROM t1, v0, vt0, vt1;
SELECT DISTINCT t1.c0, vt0.c0 FROM t1, v0, vt0, vt1 WHERE (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))), ((vt1.c0)IS NOT(t1.c0)), v0.c0 COLLATE RTRIM, (vt1.c0 IN ()), (t1.c0 IN ())))<((((v0.c0) NOTNULL), CAST(t1.c0 AS INTEGER), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN x'' THEN t1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 END, CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END, ((vt0.c0)>=(vt1.c0)))))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM t1, v0, vt0, vt1 WHERE ((NOT (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))), ((vt1.c0)IS NOT(t1.c0)), v0.c0 COLLATE RTRIM, (vt1.c0 IN ()), (t1.c0 IN ())))<((((v0.c0) NOTNULL), CAST(t1.c0 AS INTEGER), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN x'' THEN t1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 END, CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END, ((vt0.c0)>=(vt1.c0)))))))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM t1, v0, vt0, vt1 WHERE (((((((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))), ((vt1.c0)IS NOT(t1.c0)), v0.c0 COLLATE RTRIM, (vt1.c0 IN ()), (t1.c0 IN ())))<((((v0.c0) NOTNULL), CAST(t1.c0 AS INTEGER), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN x'' THEN t1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 END, CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END, ((vt0.c0)>=(vt1.c0)))))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM t1, v0, vt0, vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0 FROM vt0, rt0, t1, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0 FROM vt0, rt0, t1, vt1 WHERE ((((((NULL)OR(NULL)))OR(t1.c0)) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0 FROM vt0, rt0, t1, vt1 WHERE ((NOT ((((((NULL)OR(NULL)))OR(t1.c0)) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0 FROM vt0, rt0, t1, vt1 WHERE ((((((((NULL)OR(NULL)))OR(t1.c0)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0 FROM vt0, rt0, t1, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0, vt1.c0, vt0.c0;
SELECT rt0.c1, rt0.c3 FROM t1, rt0, vt1, vt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM t1, rt0 NOT INDEXED, vt1, vt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING GROUP_CONCAT(rt0.c3 COLLATE RTRIM) UNION ALL SELECT rt0.c1, rt0.c3 FROM t1, rt0, vt1, vt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c3 FROM t1, rt0, vt1, vt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c3 COLLATE RTRIM)) ISNULL);
SELECT rt0.c1, rt0.c3 FROM t1, rt0, vt1, vt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM t1, rt0 NOT INDEXED, vt1, vt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING GROUP_CONCAT(rt0.c3 COLLATE RTRIM) UNION ALL SELECT rt0.c1, rt0.c3 FROM t1, rt0, vt1, vt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c3 FROM t1, rt0, vt1, vt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c3 COLLATE RTRIM)) ISNULL);
SELECT rt0.c1, rt0.c3 FROM t1, rt0, vt1, vt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c3;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (t1.c0) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0;
SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS REAL)) UNION SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0 WHERE ((NOT (CAST(CAST(vt1.c0 AS TEXT) AS REAL)))) UNION SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0 WHERE (((CAST(CAST(vt1.c0 AS TEXT) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0 INNER JOIN vt0 ON CAST((((0.11622832358349733))>=((rt0.c1))) AS TEXT) LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0 INNER JOIN vt0 ON CAST((((0.11622832358349733))>=((rt0.c1))) AS TEXT) LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()) WHERE ((~ (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 ELSE v0.c0 END))) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0 INNER JOIN vt0 ON CAST((((0.11622832358349733))>=((rt0.c1))) AS TEXT) LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()) WHERE ((NOT ((~ (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 ELSE v0.c0 END))))) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0 INNER JOIN vt0 ON CAST((((0.11622832358349733))>=((rt0.c1))) AS TEXT) LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()) WHERE ((((~ (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0 INNER JOIN vt0 ON CAST((((0.11622832358349733))>=((rt0.c1))) AS TEXT) LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT v0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 FULL OUTER JOIN vt1 ON CAST(rt0.c3 AS BLOB) COLLATE NOCASE GROUP BY v0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT v0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 FULL OUTER JOIN vt1 ON CAST(rt0.c3 AS BLOB) COLLATE NOCASE GROUP BY v0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c3 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c3)) UNION ALL SELECT v0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 FULL OUTER JOIN vt1 ON CAST(rt0.c3 AS BLOB) COLLATE NOCASE GROUP BY v0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0 FULL OUTER JOIN vt1 ON CAST(rt0.c3 AS BLOB) COLLATE NOCASE GROUP BY v0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c3))) ISNULL);
SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t1, vt0, vt1;
SELECT ALL vt1.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t1, vt0, vt1 WHERE (MIN(')#d餏', ((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) UNION ALL SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t1, vt0, vt1 WHERE ((NOT (MIN(')#d餏', ((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))))) UNION ALL SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t1, vt0, vt1 WHERE (((MIN(')#d餏', ((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ISNULL));
SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t1, vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (CAST((+ (t1.c0)) AS BLOB)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CAST((+ (t1.c0)) AS BLOB)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CAST((+ (t1.c0)) AS BLOB)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 HAVING (((t1.c0) BETWEEN (AVG(TOTAL(rt0.c3))) AND (GROUP_CONCAT(AVG(COUNT(t1.c0))))) IN ()) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 HAVING (NOT ((((t1.c0) BETWEEN (AVG(TOTAL(rt0.c3))) AND (GROUP_CONCAT(AVG(COUNT(t1.c0))))) IN ()))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 HAVING (((((t1.c0) BETWEEN (AVG(TOTAL(rt0.c3))) AND (GROUP_CONCAT(AVG(COUNT(t1.c0))))) IN ())) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 HAVING (((t1.c0) BETWEEN (AVG(TOTAL(rt0.c3))) AND (GROUP_CONCAT(AVG(COUNT(t1.c0))))) IN ()) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 HAVING (NOT ((((t1.c0) BETWEEN (AVG(TOTAL(rt0.c3))) AND (GROUP_CONCAT(AVG(COUNT(t1.c0))))) IN ()))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 HAVING (((((t1.c0) BETWEEN (AVG(TOTAL(rt0.c3))) AND (GROUP_CONCAT(AVG(COUNT(t1.c0))))) IN ())) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1;
SELECT * FROM t1, rt0, v0;
SELECT ALL * FROM t1, rt0, v0 WHERE (CASE CAST(t1.c0 AS NUMERIC)  WHEN ((rt0.c0) BETWEEN (t1.c0) AND (v0.c0)) THEN ((rt0.c0)IS(rt0.c2)) END) UNION ALL SELECT * FROM t1, rt0, v0 WHERE ((NOT (CASE CAST(t1.c0 AS NUMERIC)  WHEN ((rt0.c0) BETWEEN (t1.c0) AND (v0.c0)) THEN ((rt0.c0)IS(rt0.c2)) END))) UNION ALL SELECT * FROM t1, rt0, v0 WHERE (((CASE CAST(t1.c0 AS NUMERIC)  WHEN ((rt0.c0) BETWEEN (t1.c0) AND (v0.c0)) THEN ((rt0.c0)IS(rt0.c2)) END) ISNULL));
SELECT * FROM t1, rt0, v0;
SELECT DISTINCT t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON 'Ⴍ%' RIGHT OUTER JOIN rt0 ON ((((((rt0.c1))!=((rt0.c2)))))>=(('-1456432881'))) CROSS JOIN t1 ON ((((IFNULL(t1.c0, rt0.c1))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(v0.c0));
SELECT DISTINCT t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON 'Ⴍ%' RIGHT OUTER JOIN rt0 ON ((((((rt0.c1))!=((rt0.c2)))))>=(('-1456432881'))) CROSS JOIN t1 ON ((((IFNULL(t1.c0, rt0.c1))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(v0.c0)) WHERE (0.4159165242449663) UNION SELECT DISTINCT t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON 'Ⴍ%' RIGHT OUTER JOIN rt0 ON ((((((rt0.c1))<>((rt0.c2)))))>=(('-1456432881'))) CROSS JOIN t1 ON ((((IFNULL(t1.c0, rt0.c1))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(v0.c0)) WHERE ((NOT (0.4159165242449663))) UNION SELECT DISTINCT t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON 'Ⴍ%' RIGHT OUTER JOIN rt0 ON ((((((rt0.c1))<>((rt0.c2)))))>=(('-1456432881'))) CROSS JOIN t1 ON ((((IFNULL(t1.c0, rt0.c1))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(v0.c0)) WHERE (((0.4159165242449663) ISNULL));
SELECT DISTINCT t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON 'Ⴍ%' RIGHT OUTER JOIN rt0 ON ((((((rt0.c1))!=((rt0.c2)))))>=(('-1456432881'))) CROSS JOIN t1 ON ((((IFNULL(t1.c0, rt0.c1))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(v0.c0));
SELECT rt0.c3 FROM vt0, t1, vt1, rt0 CROSS JOIN v0 ON ((CAST(0.9361357329945135 AS BLOB)) IS TRUE) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, t1, vt1, rt0 CROSS JOIN v0 ON ((CAST(0.9361357329945135 AS BLOB)) IS TRUE) WHERE (ABS(DISTINCT ((((vt0.c0)AND(0.5525714693583971)))AND(rt0.c0)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0, t1, vt1, rt0 CROSS JOIN v0 ON ((CAST(0.9361357329945135 AS BLOB)) IS TRUE) WHERE ((NOT (ABS(DISTINCT ((((vt0.c0)AND(0.5525714693583971)))AND(rt0.c0)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt0, t1, vt1, rt0 CROSS JOIN v0 ON ((CAST(0.9361357329945135 AS BLOB)) IS TRUE) WHERE (((ABS(DISTINCT ((((vt0.c0)AND(0.5525714693583971)))AND(rt0.c0)))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, t1, vt1, rt0 CROSS JOIN v0 ON ((CAST(0.9361357329945135 AS BLOB)) IS TRUE) GROUP BY rt0.c3;
SELECT vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON '-80719680' LEFT OUTER JOIN t1 ON rt0.c1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)AND(vt0.c0)))OR(rt0.c3))) IS TRUE) GROUP BY vt1.c0, rt0.c2, rt0.c0, vt0.c0;
SELECT * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t1.c0, rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c3, rt0.c2 FROM v0, vt1, t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c3, rt0.c2;
SELECT ALL t1.c0, rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c3, rt0.c2 FROM v0, vt1, t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c3, rt0.c2 HAVING (((CAST(SUM(rt0.c0) AS TEXT), LIKELY(MIN(MIN(rt0.c0))), MIN(rt0.c2)))<((MAX(AVG(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))))), COUNT(*), NULL))) UNION ALL SELECT t1.c0, rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c3, rt0.c2 FROM v0, vt1, t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c3, rt0.c2 HAVING (NOT ((((CAST(SUM(rt0.c0) AS TEXT), LIKELY(MIN(MIN(rt0.c0))), MIN(rt0.c2)))<((MAX(AVG(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))))), COUNT(*), NULL))))) UNION ALL SELECT ALL t1.c0, rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c3, rt0.c2 FROM v0, vt1, t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c3, rt0.c2 HAVING (((((CAST(SUM(rt0.c0) AS TEXT), LIKELY(MIN(MIN(rt0.c0))), MIN(rt0.c2)))<((MAX(AVG(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))))), COUNT(*), NULL)))) ISNULL);
SELECT rt0.c3, vt1.c0 FROM t1, vt1, v0, rt0;
SELECT ALL rt0.c3, vt1.c0 FROM t1, vt1, v0, rt0 WHERE (load_extension(((rt0.c2)!=(rt0.c0)), (v0.c0 IN ()))) UNION ALL SELECT ALL rt0.c3, vt1.c0 FROM t1, vt1, v0, rt0 WHERE ((NOT (load_extension(((rt0.c2)<>(rt0.c0)), (v0.c0 IN ()))))) UNION ALL SELECT rt0.c3, vt1.c0 FROM t1, vt1, v0, rt0 WHERE (((load_extension(((rt0.c2)<>(rt0.c0)), (v0.c0 IN ()))) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c0 FROM t1, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t1, vt1 WHERE ((((((((((vt1.c0 IN ('G')))AND((t1.c0 IN ()))))AND(((NULL) NOT BETWEEN (t1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ()))))AND(COALESCE(DISTINCT vt1.c0, 0.6526125896652514)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t1, vt1 WHERE ((NOT ((((((((((vt1.c0 IN ('G')))AND((t1.c0 IN ()))))AND(((NULL) NOT BETWEEN (t1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ()))))AND(COALESCE(DISTINCT vt1.c0, 0.6526125896652514)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t1, vt1 WHERE ((((((((((((vt1.c0 IN ('G')))AND((t1.c0 IN ()))))AND(((NULL) NOT BETWEEN (t1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ()))))AND(COALESCE(DISTINCT vt1.c0, 0.6526125896652514)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t1, vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c0, v0.c0, rt0.c2, t1.c0, rt0.c3 FROM rt0, vt0, vt1, t1, v0 GROUP BY vt1.c0, rt0.c0, v0.c0, rt0.c2, t1.c0, rt0.c3;
SELECT vt1.c0, rt0.c0, v0.c0, rt0.c2, t1.c0, rt0.c3 FROM rt0, vt0, vt1, t1, v0 GROUP BY vt1.c0, rt0.c0, v0.c0, rt0.c2, t1.c0, rt0.c3 HAVING (t1.c0 IN (AVG(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, rt0.c0, v0.c0, rt0.c2, t1.c0, rt0.c3 FROM rt0, vt0, vt1, t1, v0 GROUP BY vt1.c0, rt0.c0, v0.c0, rt0.c2, t1.c0, rt0.c3 HAVING (NOT ((t1.c0 IN (AVG(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, v0.c0, rt0.c2, t1.c0, rt0.c3 FROM rt0, vt0, vt1, t1, v0 GROUP BY vt1.c0, rt0.c0, v0.c0, rt0.c2, t1.c0, rt0.c3 HAVING (((t1.c0 IN (AVG(COUNT(*))))) ISNULL);
SELECT * FROM vt0, rt0 NOT INDEXED, t1, v0, vt1;
SELECT ALL * FROM vt0, rt0, t1, v0, vt1 WHERE ((x'ea57' IN ())) UNION ALL SELECT * FROM vt0, rt0, t1, v0, vt1 WHERE ((NOT ((x'ea57' IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, t1, v0, vt1 WHERE ((((x'ea57' IN ())) ISNULL));
SELECT * FROM vt0, rt0 NOT INDEXED, t1, v0, vt1;
SELECT DISTINCT * FROM rt0, t1 CROSS JOIN vt0 ON (((((rt0.c0)|(rt0.c3)), (((vt0.c0, '#Hhoỉ꾃*', t1.c0))>=((rt0.c2, rt0.c1, vt0.c0))), (v0.c0 IN ())))<=(((- (rt0.c2)), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN v0 ON (((((('-1713282166') IS FALSE))AND(((rt0.c1)+(rt0.c3)))))OR(TRIM(rt0.c0, rt0.c3)));
SELECT DISTINCT * FROM rt0, t1 CROSS JOIN vt0 ON (((((rt0.c0)|(rt0.c3)), (((vt0.c0, '#Hhoỉ꾃*', t1.c0))>=((rt0.c2, rt0.c1, vt0.c0))), (v0.c0 IN ())))<=(((- (rt0.c2)), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN v0 ON (((((('-1713282166') IS FALSE))AND(((rt0.c1)+(rt0.c3)))))OR(TRIM(rt0.c0, rt0.c3))) WHERE ((v0.c0 COLLATE RTRIM IN ())) UNION SELECT DISTINCT * FROM rt0, t1 CROSS JOIN vt0 ON (((((rt0.c0)|(rt0.c3)), (((vt0.c0, '#Hhoỉ꾃*', t1.c0))>=((rt0.c2, rt0.c1, vt0.c0))), (v0.c0 IN ())))<=(((- (rt0.c2)), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN v0 ON (((((('-1713282166') IS FALSE))AND(((rt0.c1)+(rt0.c3)))))OR(TRIM(rt0.c0, rt0.c3))) WHERE ((NOT ((v0.c0 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT * FROM rt0, t1 CROSS JOIN vt0 ON (((((rt0.c0)|(rt0.c3)), (((vt0.c0, '#Hhoỉ꾃*', t1.c0))>=((rt0.c2, rt0.c1, vt0.c0))), (v0.c0 IN ())))<=(((- (rt0.c2)), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN v0 ON (((((('-1713282166') IS FALSE))AND(((rt0.c1)+(rt0.c3)))))OR(TRIM(rt0.c0, rt0.c3))) WHERE ((((v0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, t1 CROSS JOIN vt0 ON (((((rt0.c0)|(rt0.c3)), (((vt0.c0, '#Hhoỉ꾃*', t1.c0))>=((rt0.c2, rt0.c1, vt0.c0))), (v0.c0 IN ())))<=(((- (rt0.c2)), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN v0 ON (((((('-1713282166') IS FALSE))AND(((rt0.c1)+(rt0.c3)))))OR(TRIM(rt0.c0, rt0.c3)));
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (CASE ((vt0.c0)-(vt0.c0))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE ((vt0.c0)-(vt0.c0))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CASE ((vt0.c0)-(vt0.c0))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c1 HAVING MAX(SUM(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (MAX(SUM(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, rt0.c1 HAVING ((MAX(SUM(TOTAL(vt0.c0)))) ISNULL);
SELECT t1.c0, rt0.c2, vt1.c0, v0.c0 FROM vt0, t1, rt0, v0, vt1;
SELECT ALL t1.c0, rt0.c2, vt1.c0, v0.c0 FROM vt0, t1, rt0, v0, vt1 WHERE (((((vt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))+((((vt0.c0))<((rt0.c1)))))) ORDER BY 0Xffffffffcf5f67b4  NULLS FIRST;
SELECT t1.c0, rt0.c2, vt1.c0, v0.c0 FROM vt0, t1, rt0, v0, vt1 WHERE ((NOT (((((vt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))+((((vt0.c0))<((rt0.c1)))))))) ORDER BY 0Xffffffffcf5f67b4  NULLS FIRST;
SELECT ALL t1.c0, rt0.c2, vt1.c0, v0.c0 FROM vt0, t1, rt0, v0, vt1 WHERE (((((((vt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))+((((vt0.c0))<((rt0.c1)))))) ISNULL)) ORDER BY 0Xffffffffcf5f67b4  NULLS FIRST;
SELECT t1.c0, rt0.c2, vt1.c0, v0.c0 FROM vt0, t1, rt0, v0, vt1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0) BETWEEN (NULL) AND (t1.c0)))OR('-1389570277')))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(t1.c0 COLLATE BINARY)))OR((+ (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((((((t1.c0) BETWEEN (NULL) AND (t1.c0)))OR('-1389570277')))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(t1.c0 COLLATE BINARY)))OR((+ (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c0) BETWEEN (NULL) AND (t1.c0)))OR('-1389570277')))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(t1.c0 COLLATE BINARY)))OR((+ (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c0, rt0.c1 FROM vt0, t1, rt0 RIGHT OUTER JOIN vt1 ON CAST((NOT (v0.c0)) AS INTEGER) FULL OUTER JOIN v0 ON (((x'')) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN '' THEN rt0.c2 END))) GROUP BY t1.c0, rt0.c1;
SELECT v0.c0, vt1.c0, t1.c0 FROM v0, t1, vt1 GROUP BY v0.c0, vt1.c0, t1.c0;
SELECT v0.c0, vt1.c0, t1.c0 FROM v0, t1, vt1 GROUP BY v0.c0, vt1.c0, t1.c0 HAVING CASE COUNT(*)  WHEN ((((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))AND(TOTAL(GROUP_CONCAT(SUM(MAX(GROUP_CONCAT(t1.c0))))))))OR(COUNT(*))) THEN LOWER(COUNT(t1.c0)) END UNION ALL SELECT v0.c0, vt1.c0, t1.c0 FROM v0, t1, vt1 GROUP BY v0.c0, vt1.c0, t1.c0 HAVING (NOT (CASE COUNT(*)  WHEN ((((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))AND(TOTAL(GROUP_CONCAT(SUM(MAX(GROUP_CONCAT(t1.c0))))))))OR(COUNT(*))) THEN LOWER(COUNT(t1.c0)) END)) UNION ALL SELECT v0.c0, vt1.c0, t1.c0 FROM v0, t1, vt1 GROUP BY v0.c0, vt1.c0, t1.c0 HAVING ((CASE COUNT(*)  WHEN ((((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))AND(TOTAL(GROUP_CONCAT(SUM(MAX(GROUP_CONCAT(t1.c0))))))))OR(COUNT(*))) THEN LOWER(COUNT(t1.c0)) END) ISNULL);
SELECT ALL rt0.c1, t1.c0, vt0.c0, rt0.c3, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt0, t1, v0, vt1 NOT INDEXED;
SELECT rt0.c1, t1.c0, vt0.c0, rt0.c3, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt0, t1, v0, vt1 WHERE (NULL) UNION ALL SELECT ALL rt0.c1, t1.c0, vt0.c0, rt0.c3, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt0, t1, v0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c1, t1.c0, vt0.c0, rt0.c3, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt0, t1, v0, vt1 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c1, t1.c0, vt0.c0, rt0.c3, vt1.c0, rt0.c2, v0.c0 FROM rt0, vt0, t1, v0, vt1 NOT INDEXED;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))<(CAST(rt0.c1 AS INTEGER)));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))<(CAST(rt0.c1 AS INTEGER))) WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))<(CAST(rt0.c1 AS INTEGER))) WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))<(CAST(rt0.c1 AS INTEGER))) WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))<(CAST(rt0.c1 AS INTEGER)));
SELECT vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, t1, vt1, rt0 GROUP BY vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, t1, vt1, rt0 WHERE ((((vt1.c0 IN ()))IS NOT(((((rt0.c2)AND(t1.c0)))AND(rt0.c0))))) GROUP BY vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, t1, vt1, rt0 WHERE ((NOT ((((vt1.c0 IN ()))IS NOT(((((rt0.c2)AND(t1.c0)))AND(rt0.c0))))))) GROUP BY vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, t1, vt1, rt0 WHERE ((((((vt1.c0 IN ()))IS NOT(((((rt0.c2)AND(t1.c0)))AND(rt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, t1, vt1, rt0 GROUP BY vt1.c0, vt0.c0, t1.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN v0 ON ((((v0.c0)IS NOT(v0.c0))) BETWEEN ((('-220870605') ISNULL)) AND ((rt0.c0 IN ()))) CROSS JOIN vt0 ON vt0.c0 FULL OUTER JOIN t1 ON (NOT (CAST(rt0.c3 AS BLOB))) CROSS JOIN rt0 ON ((((- (t1.c0))))<=((x''))) GROUP BY v0.c0, rt0.c3;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)+('1955880276')))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0))<=((vt1.c0)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt1.c0)+('1955880276')))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0))<=((vt1.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((((vt1.c0)+('1955880276')))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0))<=((vt1.c0)))))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0, vt1, v0, t1, vt0;
SELECT DISTINCT v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0, vt1, v0, t1, vt0 WHERE ((((vt1.c0)) BETWEEN (((('|D') NOT BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((((rt0.c1)<(rt0.c1)))))) UNION SELECT DISTINCT v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0, vt1, v0, t1, vt0 WHERE ((NOT ((((vt1.c0)) BETWEEN (((('|D') NOT BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((((rt0.c1)<(rt0.c1)))))))) UNION SELECT DISTINCT v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0, vt1, v0, t1, vt0 WHERE ((((((vt1.c0)) BETWEEN (((('|D') NOT BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((((rt0.c1)<(rt0.c1)))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0, vt1, v0, t1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, t1, vt0, rt0, v0 GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, t1, vt0, rt0, v0 GROUP BY rt0.c1, vt1.c0 HAVING (((COUNT(MAX(AVG(GROUP_CONCAT(vt1.c0))))) BETWEEN (v0.c0) AND (AVG(v0.c0))) IN (((((0.10461338980773294)OR(COUNT(rt0.c0))))AND(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1, t1, vt0, rt0, v0 GROUP BY rt0.c1, vt1.c0 HAVING (NOT ((((COUNT(MAX(AVG(GROUP_CONCAT(vt1.c0))))) BETWEEN (v0.c0) AND (AVG(v0.c0))) IN (((((0.10461338980773294)OR(COUNT(rt0.c0))))AND(COUNT(*))))))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1, t1, vt0, rt0, v0 GROUP BY rt0.c1, vt1.c0 HAVING (((((COUNT(MAX(AVG(GROUP_CONCAT(vt1.c0))))) BETWEEN (v0.c0) AND (AVG(v0.c0))) IN (((((0.10461338980773294)OR(COUNT(rt0.c0))))AND(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0, t1, vt1, rt0, v0;
SELECT * FROM vt0, t1, vt1, rt0, v0 WHERE (COALESCE((+ (rt0.c0)), ((((((((v0.c0)OR(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c0)), -506759186, NULL COLLATE NOCASE)) UNION ALL SELECT ALL * FROM vt0, t1, vt1, rt0, v0 WHERE ((NOT (COALESCE((+ (rt0.c0)), ((((((((v0.c0)OR(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c0)), -506759186, NULL COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM vt0, t1, vt1, rt0, v0 WHERE (((COALESCE((+ (rt0.c0)), ((((((((v0.c0)OR(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c0)), -506759186, NULL COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM vt0, t1, vt1, rt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0, t1;
SELECT DISTINCT v0.c0 FROM vt0, v0, t1 WHERE (((x'') NOT BETWEEN (t1.c0) AND (((((vt0.c0)AND(t1.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 NOT INDEXED, t1 WHERE ((NOT (((x'') NOT BETWEEN (t1.c0) AND (((((vt0.c0)AND(t1.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, t1 WHERE (((((x'') NOT BETWEEN (t1.c0) AND (((((vt0.c0)AND(t1.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0, t1;
SELECT rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0 FROM rt0, t1, vt1 CROSS JOIN vt0 ON ((((t1.c0) NOT NULL)) BETWEEN ((((vt0.c0))<=((t1.c0)))) AND (((((((((((((vt1.c0)AND(rt0.c1)))AND(t1.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(x'')))) CROSS JOIN v0 ON ((0xffffffffaa750771) NOTNULL) COLLATE RTRIM GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0;
SELECT rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0 FROM rt0, t1, vt1 CROSS JOIN vt0 ON ((((t1.c0) NOT NULL)) BETWEEN ((((vt0.c0))<=((t1.c0)))) AND (((((((((((((vt1.c0)AND(rt0.c1)))AND(t1.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(x'')))) CROSS JOIN v0 ON ((0xffffffffaa750771) NOTNULL) COLLATE RTRIM WHERE (LIKELIHOOD((- (vt1.c0)), 0.7463110818931884)) GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0 UNION SELECT rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0 FROM rt0, t1, vt1 CROSS JOIN vt0 ON ((((t1.c0) NOT NULL)) BETWEEN ((((vt0.c0))<=((t1.c0)))) AND (((((((((((((vt1.c0)AND(rt0.c1)))AND(t1.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(x'')))) CROSS JOIN v0 ON ((0Xffffffffaa750771) NOTNULL) COLLATE RTRIM WHERE ((NOT (LIKELIHOOD((- (vt1.c0)), 0.7463110818931884)))) GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0 UNION SELECT ALL rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0 FROM rt0, t1, vt1 CROSS JOIN vt0 ON ((((t1.c0) NOT NULL)) BETWEEN ((((vt0.c0))<=((t1.c0)))) AND (((((((((((((vt1.c0)AND(rt0.c1)))AND(t1.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(x'')))) CROSS JOIN v0 ON ((0xffffffffaa750771) NOTNULL) COLLATE RTRIM WHERE (((LIKELIHOOD((- (vt1.c0)), 0.7463110818931884)) ISNULL)) GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0;
SELECT rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0 FROM rt0, t1, vt1 CROSS JOIN vt0 ON ((((t1.c0) NOT NULL)) BETWEEN ((((vt0.c0))<=((t1.c0)))) AND (((((((((((((vt1.c0)AND(rt0.c1)))AND(t1.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(x'')))) CROSS JOIN v0 ON ((0xffffffffaa750771) NOTNULL) COLLATE RTRIM GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c1, v0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN (NOT (vt0.c0)) THEN (NOT (vt1.c0)) END INNER JOIN t1 ON UNLIKELY((0.4432668856015194 IN (v0.c0, vt1.c0))) GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN (NOT (vt0.c0)) THEN (NOT (vt1.c0)) END INNER JOIN t1 ON UNLIKELY((0.4432668856015194 IN (v0.c0, vt1.c0))) GROUP BY vt0.c0, t1.c0 HAVING MAX(SUM(AVG(SUM(x'')))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN (NOT (vt0.c0)) THEN (NOT (vt1.c0)) END INNER JOIN t1 ON UNLIKELY((0.4432668856015194 IN (v0.c0, vt1.c0))) GROUP BY vt0.c0, t1.c0 HAVING (NOT (MAX(SUM(AVG(SUM(x'')))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN (NOT (vt0.c0)) THEN (NOT (vt1.c0)) END INNER JOIN t1 ON UNLIKELY((0.4432668856015194 IN (v0.c0, vt1.c0))) GROUP BY vt0.c0, t1.c0 HAVING ((MAX(SUM(AVG(SUM(x''))))) ISNULL);
SELECT * FROM vt0, vt1, t1, rt0;
SELECT ALL * FROM vt0, vt1, t1, rt0 WHERE ('') UNION ALL SELECT * FROM vt0, vt1, t1 NOT INDEXED, rt0 WHERE ((NOT (''))) UNION ALL SELECT * FROM vt0, vt1, t1, rt0 WHERE ((('') ISNULL));
SELECT * FROM vt0, vt1, t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, t1, vt0, vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, t1, vt0, vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, t1, vt0, vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, t1, vt0, vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, t1, vt0, vt1, rt0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE ('0.7523083359014933') GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT ('0.7523083359014933'))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((('0.7523083359014933') ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))>>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))>>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))>>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt0, t1, rt0 FULL OUTER JOIN vt1 ON (+ (vt1.c0));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt0, t1, rt0 FULL OUTER JOIN vt1 ON (+ (vt1.c0)) WHERE (rt0.c2) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt0, t1, rt0 FULL OUTER JOIN vt1 ON (+ (vt1.c0)) WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt0, t1, rt0 FULL OUTER JOIN vt1 ON (+ (vt1.c0)) WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt0, t1, rt0 FULL OUTER JOIN vt1 ON (+ (vt1.c0));
SELECT ALL vt1.c0 FROM t1, vt0 CROSS JOIN vt1 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END) IS TRUE) FULL OUTER JOIN v0 ON CAST((vt1.c0 IN ()) AS INTEGER) GROUP BY vt1.c0;
SELECT ALL v0.c0, rt0.c2 FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((ROUND(vt1.c0, vt1.c0))>(((t1.c0) IS FALSE))) CROSS JOIN v0 ON CAST(((rt0.c1)<=(vt0.c0)) AS REAL) LEFT OUTER JOIN rt0 ON CAST(x'282c' AS REAL) GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((ROUND(vt1.c0, vt1.c0))>(((t1.c0) IS FALSE))) CROSS JOIN v0 ON CAST(((rt0.c1)<=(vt0.c0)) AS REAL) LEFT OUTER JOIN rt0 ON CAST(x'282c' AS REAL) GROUP BY v0.c0, rt0.c2 HAVING SUM(CASE t1.c0  WHEN vt0.c0 THEN GROUP_CONCAT(COUNT(t1.c0)) WHEN vt1.c0 THEN rt0.c1 WHEN SUM(v0.c0) THEN vt1.c0 WHEN MAX(COUNT(AVG(MAX(MIN(TOTAL(MIN(COUNT(vt0.c0)))))))) THEN GROUP_CONCAT(rt0.c2) WHEN SUM(NULL) THEN NULL ELSE MAX(MAX(SUM(TOTAL(AVG(v0.c0))))) END) UNION ALL SELECT v0.c0, rt0.c2 FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((ROUND(vt1.c0, vt1.c0))>(((t1.c0) IS FALSE))) CROSS JOIN v0 ON CAST(((rt0.c1)<=(vt0.c0)) AS REAL) LEFT OUTER JOIN rt0 ON CAST(x'282c' AS REAL) GROUP BY v0.c0, rt0.c2 HAVING (NOT (SUM(CASE t1.c0  WHEN vt0.c0 THEN GROUP_CONCAT(COUNT(t1.c0)) WHEN vt1.c0 THEN rt0.c1 WHEN SUM(v0.c0) THEN vt1.c0 WHEN MAX(COUNT(AVG(MAX(MIN(TOTAL(MIN(COUNT(vt0.c0)))))))) THEN GROUP_CONCAT(rt0.c2) WHEN SUM(NULL) THEN NULL ELSE MAX(MAX(SUM(TOTAL(AVG(v0.c0))))) END))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((ROUND(vt1.c0, vt1.c0))>(((t1.c0) IS FALSE))) CROSS JOIN v0 ON CAST(((rt0.c1)<=(vt0.c0)) AS REAL) LEFT OUTER JOIN rt0 ON CAST(x'282c' AS REAL) GROUP BY v0.c0, rt0.c2 HAVING ((SUM(CASE t1.c0  WHEN vt0.c0 THEN GROUP_CONCAT(COUNT(t1.c0)) WHEN vt1.c0 THEN rt0.c1 WHEN SUM(v0.c0) THEN vt1.c0 WHEN MAX(COUNT(AVG(MAX(MIN(TOTAL(MIN(COUNT(vt0.c0)))))))) THEN GROUP_CONCAT(rt0.c2) WHEN SUM(NULL) THEN NULL ELSE MAX(MAX(SUM(TOTAL(AVG(v0.c0))))) END)) ISNULL);
SELECT ALL t1.c0, rt0.c2, rt0.c3, vt1.c0, vt0.c0 FROM vt0, v0, t1, rt0, vt1;
SELECT ALL t1.c0, rt0.c2, rt0.c3, vt1.c0, vt0.c0 FROM vt0, v0, t1, rt0, vt1 WHERE (CAST(((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) AS INTEGER)) UNION ALL SELECT t1.c0, rt0.c2, rt0.c3, vt1.c0, vt0.c0 FROM vt0, v0, t1, rt0, vt1 WHERE ((NOT (CAST(((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) AS INTEGER)))) UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c3, vt1.c0, vt0.c0 FROM vt0, v0, t1, rt0, vt1 WHERE (((CAST(((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) AS INTEGER)) ISNULL));
SELECT ALL t1.c0, rt0.c2, rt0.c3, vt1.c0, vt0.c0 FROM vt0, v0, t1, rt0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN NULL THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)AND(v0.c0)) THEN (('') IS TRUE) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('-339758997')) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE (+ (v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN NULL THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)AND(v0.c0)) THEN (('') IS TRUE) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('-339758997')) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE (+ (v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN NULL THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)AND(v0.c0)) THEN (('') IS TRUE) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('-339758997')) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE (+ (v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (CASE ((rt0.c3)IS NOT(rt0.c3))  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE NOCASE END) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT (CASE ((rt0.c3)IS NOT(rt0.c3))  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE NOCASE END))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((CASE ((rt0.c3)IS NOT(rt0.c3))  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((0.8370892514026407)>(t1.c0)))) AND ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((((0.8370892514026407)>(t1.c0)))) AND ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((((0.8370892514026407)>(t1.c0)))) AND ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (x'')))))OR((~ (rt0.c1)))) INNER JOIN t1 ON (NOT (NULL)) INNER JOIN rt0 ON (NOT (rt0.c1 COLLATE RTRIM));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((ABS(DISTINCT vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((ABS(DISTINCT vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((ABS(DISTINCT vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(0.33706757259364406)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0)!=(vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(0.33706757259364406)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0)<>(vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((vt1.c0)OR(0.33706757259364406)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0)<>(vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((~ (vt1.c0)))AND((((vt0.c0))<=((vt1.c0))))))OR((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((((((~ (vt1.c0)))AND((((vt0.c0))<=((vt1.c0))))))OR((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((((~ (vt1.c0)))AND((((vt0.c0))<=((vt1.c0))))))OR((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((- (vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- (vt1.c0 COLLATE RTRIM))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((- (vt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (~ (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)) CROSS JOIN v0 ON ((LIKELY(DISTINCT vt0.c0))|(((v0.c0)%(t1.c0)))) RIGHT OUTER JOIN vt1 ON ROUND(vt0.c0, ((v0.c0) BETWEEN (v0.c0) AND (t1.c0))) GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((CAST(v0.c0 AS TEXT))IS(json_extract(rt0.c3, rt0.c3, rt0.c0, rt0.c3)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((CAST(v0.c0 AS TEXT))IS(json_extract(rt0.c3, rt0.c3, rt0.c0, rt0.c3)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((CAST(v0.c0 AS TEXT))IS(json_extract(rt0.c3, rt0.c3, rt0.c0, rt0.c3)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t1, v0, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM t1, v0, vt1, vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c0 FROM t1, v0, vt1, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0 FROM t1, v0, vt1, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0 FROM t1, v0, vt1, vt0;
SELECT rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, vt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, t1.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))>((t1.c0 COLLATE NOCASE)))) GROUP BY rt0.c1, rt0.c3, rt0.c0, t1.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE))>((t1.c0 COLLATE NOCASE)))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, t1.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, vt0 WHERE ((((((vt0.c0 COLLATE NOCASE))>((t1.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, t1.c0;
SELECT rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, vt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, t1.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t1.c0 FROM rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN t1 ON x'b11e' FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2))) IS FALSE) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t1.c0 FROM rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN t1 ON x'b11e' FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2))) IS FALSE) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t1.c0 HAVING COUNT(TOTAL(rt0.c1)) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t1.c0 FROM rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN t1 ON x'b11e' FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2))) IS FALSE) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t1.c0 HAVING (NOT (COUNT(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t1.c0 FROM rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN t1 ON x'b11e' FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2))) IS FALSE) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t1.c0 HAVING ((COUNT(TOTAL(rt0.c1))) ISNULL);
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c0)AND(vt0.c0)) IN ()) CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c0)AND(vt0.c0)) IN ()) CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY WHERE (0.24557786249361202) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c0)AND(vt0.c0)) IN ()) CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY WHERE ((NOT (0.24557786249361202))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c0)AND(vt0.c0)) IN ()) CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY WHERE (((0.24557786249361202) ISNULL));
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c0)AND(vt0.c0)) IN ()) CROSS JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (CAST(((vt0.c0)-(rt0.c3)) AS REAL)) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (CAST(((vt0.c0)-(rt0.c3)) AS REAL)))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((CAST(((vt0.c0)-(rt0.c3)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT ALL vt1.c0 FROM t1 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((((t1.c0)AND(t1.c0)))AND(vt1.c0)) ELSE ((t1.c0)+(t1.c0)) END GROUP BY vt1.c0;
SELECT vt1.c0 FROM t1 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((((t1.c0)AND(t1.c0)))AND(vt1.c0)) ELSE ((t1.c0)+(t1.c0)) END WHERE ((~ (vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t1 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((((t1.c0)AND(t1.c0)))AND(vt1.c0)) ELSE ((t1.c0)+(t1.c0)) END WHERE ((NOT ((~ (vt1.c0 COLLATE RTRIM))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t1 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((((t1.c0)AND(t1.c0)))AND(vt1.c0)) ELSE ((t1.c0)+(t1.c0)) END WHERE ((((~ (vt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t1 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((((t1.c0)AND(t1.c0)))AND(vt1.c0)) ELSE ((t1.c0)+(t1.c0)) END GROUP BY vt1.c0;
SELECT ALL vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0 HAVING ((AVG(vt1.c0)) ISNULL) UNION ALL SELECT ALL vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0 HAVING (NOT (((AVG(vt1.c0)) ISNULL))) UNION ALL SELECT ALL vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0 HAVING ((((AVG(vt1.c0)) ISNULL)) ISNULL);
SELECT ALL vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0 HAVING ((AVG(vt1.c0)) ISNULL) UNION ALL SELECT ALL vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0 HAVING (NOT (((AVG(vt1.c0)) ISNULL))) UNION ALL SELECT ALL vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0 HAVING ((((AVG(vt1.c0)) ISNULL)) ISNULL);
SELECT ALL vt1.c0, t1.c0 FROM t1, vt1 GROUP BY vt1.c0, t1.c0;
SELECT ALL rt0.c2, rt0.c3, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, vt1, rt0;
SELECT rt0.c2, rt0.c3, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, vt1, rt0 WHERE (((LAST_INSERT_ROWID()) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c3, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, vt1, rt0 WHERE ((NOT (((LAST_INSERT_ROWID()) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, vt1, rt0 WHERE (((((LAST_INSERT_ROWID()) NOT NULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c3, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, vt1, rt0;
SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0;
SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB(rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)GLOB(rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0 WHERE (((((vt0.c0 COLLATE RTRIM)GLOB(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0;
SELECT ALL t1.c0, vt0.c0, rt0.c1, vt1.c0, v0.c0 FROM v0, t1 FULL OUTER JOIN rt0 ON ((((v0.c0) BETWEEN (NULL) AND (vt0.c0)))||(vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON (((((rt0.c1, t1.c0, rt0.c2, x'', rt0.c1))>=((t1.c0, vt0.c0, v0.c0, rt0.c1, rt0.c1))))<(UNLIKELY(rt0.c1))) FULL OUTER JOIN vt1 ON ((((t1.c0) BETWEEN (t1.c0) AND (rt0.c2)))&(rt0.c3 COLLATE BINARY)) GROUP BY t1.c0, vt0.c0, rt0.c1, vt1.c0, v0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, t1, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, t1, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING MAX(MAX(GROUP_CONCAT(COUNT(t1.c0)))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, t1, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(MAX(GROUP_CONCAT(COUNT(t1.c0)))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, t1, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((MAX(MAX(GROUP_CONCAT(COUNT(t1.c0))))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c3)IS NOT(((rt0.c0)|(rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c3)IS NOT(((rt0.c0)|(rt0.c1))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c3)IS NOT(((rt0.c0)|(rt0.c1))))) ISNULL));
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) COLLATE RTRIM;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) COLLATE RTRIM WHERE (((((((((((((((vt0.c0) NOT BETWEEN (0.18996515522901714) AND (vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))OR(((vt0.c0)>>(vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) COLLATE RTRIM WHERE ((NOT (((((((((((((((vt0.c0) NOT BETWEEN (0.18996515522901714) AND (vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))OR(((vt0.c0)>>(vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) COLLATE RTRIM WHERE (((((((((((((((((vt0.c0) NOT BETWEEN (0.18996515522901714) AND (vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))OR(((vt0.c0)>>(vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) COLLATE RTRIM;
SELECT ALL t1.c0, v0.c0 FROM v0, t1, rt0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1, rt0 WHERE (HEX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0, t1, rt0 WHERE ((NOT (HEX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM v0, t1, rt0 WHERE (((HEX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1, rt0 GROUP BY t1.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c0 FROM vt1, v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c2, v0.c0 FROM vt1, v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0 HAVING MAX(TOTAL(COUNT(TOTAL(rt0.c3)))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0 FROM vt1, v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0 HAVING (NOT (MAX(TOTAL(COUNT(TOTAL(rt0.c3)))))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0 FROM vt1, v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0 HAVING ((MAX(TOTAL(COUNT(TOTAL(rt0.c3))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ('261057997') UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ('261057997'))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((('261057997') ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))|(((vt0.c0)IS NOT('#Hhoỉ꾃*'))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))|(((vt0.c0)IS NOT('#Hhoỉ꾃*'))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))|(((vt0.c0)IS NOT('#Hhoỉ꾃*'))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0 FROM v0, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE v0.c0  WHEN t1.c0 THEN rt0.c0 ELSE v0.c0 END)AND(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0 FROM v0, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE v0.c0  WHEN t1.c0 THEN rt0.c0 ELSE v0.c0 END)AND(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE ((- (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0 FROM v0, t1, rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((((CASE v0.c0  WHEN t1.c0 THEN rt0.c0 ELSE v0.c0 END)AND(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE ((NOT ((- (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0 FROM v0, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE v0.c0  WHEN t1.c0 THEN rt0.c0 ELSE v0.c0 END)AND(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE ((((- (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0 FROM v0, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE v0.c0  WHEN t1.c0 THEN rt0.c0 ELSE v0.c0 END)AND(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, t1.c0, vt0.c0;
SELECT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT ((((t1.c0)AND(t1.c0)))AND(vt0.c0)), ((t1.c0)AND(vt0.c0)), CAST('1210083046' AS REAL), (vt0.c0 IN (vt0.c0, vt0.c0))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT ((((t1.c0)AND(t1.c0)))AND(vt0.c0)), ((t1.c0)AND(vt0.c0)), CAST('1210083046' AS REAL), (vt0.c0 IN (vt0.c0, vt0.c0))) GROUP BY vt0.c0 HAVING CASE MAX(MAX(SUM(vt0.c0)))  WHEN AVG(COUNT(t1.c0)) THEN TOTAL(NULL) ELSE TOTAL(GROUP_CONCAT(AVG(vt0.c0))) END COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT ((((t1.c0)AND(t1.c0)))AND(vt0.c0)), ((t1.c0)AND(vt0.c0)), CAST('1210083046' AS REAL), (vt0.c0 IN (vt0.c0, vt0.c0))) GROUP BY vt0.c0 HAVING (NOT (CASE MAX(MAX(SUM(vt0.c0)))  WHEN AVG(COUNT(t1.c0)) THEN TOTAL(NULL) ELSE TOTAL(GROUP_CONCAT(AVG(vt0.c0))) END COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT ((((t1.c0)AND(t1.c0)))AND(vt0.c0)), ((t1.c0)AND(vt0.c0)), CAST('1210083046' AS REAL), (vt0.c0 IN (vt0.c0, vt0.c0))) GROUP BY vt0.c0 HAVING ((CASE MAX(MAX(SUM(vt0.c0)))  WHEN AVG(COUNT(t1.c0)) THEN TOTAL(NULL) ELSE TOTAL(GROUP_CONCAT(AVG(vt0.c0))) END COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (- (((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)))) CROSS JOIN v0 ON (((- (vt1.c0)))IS NOT(((t1.c0)%(vt1.c0)))) INNER JOIN vt1 ON (v0.c0 IN ()) COLLATE NOCASE RIGHT OUTER JOIN t1 ON ((rt0.c1 COLLATE NOCASE)%(((vt0.c0)*(rt0.c2))));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (('' IN ())) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (('' IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((('' IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))==((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))==((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))==((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 HAVING INSTR(((rt0.c3) NOT NULL), NULLIF(DISTINCT t1.c0, rt0.c0)) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 HAVING (NOT (INSTR(((rt0.c3) NOT NULL), NULLIF(DISTINCT t1.c0, rt0.c0)))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 HAVING ((INSTR(((rt0.c3) NOT NULL), NULLIF(DISTINCT t1.c0, rt0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 HAVING INSTR(((rt0.c3) NOT NULL), NULLIF(DISTINCT t1.c0, rt0.c0)) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 HAVING (NOT (INSTR(((rt0.c3) NOT NULL), NULLIF(DISTINCT t1.c0, rt0.c0)))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 HAVING ((INSTR(((rt0.c3) NOT NULL), NULLIF(DISTINCT t1.c0, rt0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0 FROM v0, t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) ISNULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, v0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE BINARY))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (((((vt0.c0) ISNULL) COLLATE BINARY) ISNULL));
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON 'dH' RIGHT OUTER JOIN t1 ON ((CASE rt0.c1  WHEN rt0.c2 THEN 'dR' ELSE vt1.c0 END) NOT BETWEEN (((rt0.c2) NOT BETWEEN (t1.c0) AND (vt0.c0))) AND (((((t1.c0)AND(rt0.c1)))AND(t1.c0)))) CROSS JOIN vt0 ON ((((((rt0.c3) NOT NULL))AND(((rt0.c2)|(vt1.c0)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END));
SELECT ALL vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1 FROM vt1, v0, rt0, t1, vt0 GROUP BY vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1 FROM vt1, v0, rt0, t1, vt0 WHERE ((((rt0.c1)%(t1.c0)) IN ())) GROUP BY vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1 FROM vt1, v0, rt0, t1, vt0 WHERE ((NOT ((((rt0.c1)%(t1.c0)) IN ())))) GROUP BY vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1 FROM vt1, v0, rt0, t1, vt0 WHERE ((((((rt0.c1)%(t1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1 FROM vt1, v0, rt0, t1, vt0 GROUP BY vt1.c0, rt0.c0, t1.c0, rt0.c3, v0.c0, vt0.c0, rt0.c1;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING AVG(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (AVG(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((AVG(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT TOTAL(((((((rt0.c2)AND(NULL)))AND(rt0.c2))) IS FALSE)) FROM rt0 ORDER BY (((((NOT (rt0.c1)))AND(((x'dc2c')OR(rt0.c0)))))OR((('-1635232744')%(rt0.c0)))) ASC  NULLS LAST;
SELECT rt0.c0 FROM vt0, vt1, rt0;
SELECT ALL rt0.c0 FROM vt0, vt1, rt0 NOT INDEXED WHERE ((vt0.c0 IN ())) UNION ALL SELECT rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT rt0.c0 FROM vt0, vt1, rt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT rt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0 FROM t1, vt0;
SELECT DISTINCT vt0.c0 FROM t1, vt0 WHERE (CASE WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM t1, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM t1, vt0 WHERE (((CASE WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM t1, vt0;
SELECT vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((vt1.c0)OR(((rt0.c2)<<(rt0.c3))))) GROUP BY vt1.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((vt1.c0)OR(((rt0.c2)<<(rt0.c3))))))) GROUP BY vt1.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0)OR(((rt0.c2)<<(rt0.c3))))) ISNULL)) GROUP BY vt1.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0 HAVING TOTAL(((rt0.c1) NOT NULL)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0 HAVING (NOT (TOTAL(((rt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0 HAVING ((TOTAL(((rt0.c1) NOT NULL))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0 HAVING TOTAL(((rt0.c1) NOT NULL)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0 HAVING (NOT (TOTAL(((rt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0 HAVING ((TOTAL(((rt0.c1) NOT NULL))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT ALL * FROM rt0, vt1, v0, t1, vt0;
SELECT * FROM rt0, vt1, v0, t1, vt0 WHERE (((NULL) ISNULL)) UNION ALL SELECT ALL * FROM rt0, vt1, v0, t1, vt0 WHERE ((NOT (((NULL) ISNULL)))) UNION ALL SELECT ALL * FROM rt0, vt1, v0, t1, vt0 WHERE (((((NULL) ISNULL)) ISNULL));
SELECT ALL * FROM rt0, vt1, v0, t1, vt0;
SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (0.0707578689850561) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON CASE (0.14830370503546297 IN (vt0.c0))  WHEN rt0.c2 THEN NULL END;
SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (0.0707578689850561) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON CASE (0.14830370503546297 IN (vt0.c0))  WHEN rt0.c2 THEN NULL END WHERE (CASE NULL  WHEN '0.4356540873423731' COLLATE BINARY THEN t1.c0 ELSE CAST(v0.c0 AS BLOB) END) UNION SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (0.0707578689850561) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON CASE (0.14830370503546297 IN (vt0.c0))  WHEN rt0.c2 THEN NULL END WHERE ((NOT (CASE NULL  WHEN '0.4356540873423731' COLLATE BINARY THEN t1.c0 ELSE CAST(v0.c0 AS BLOB) END))) UNION SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (0.0707578689850561) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON CASE (0.14830370503546297 IN (vt0.c0))  WHEN rt0.c2 THEN NULL END WHERE (((CASE NULL  WHEN '0.4356540873423731' COLLATE BINARY THEN t1.c0 ELSE CAST(v0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM vt0, t1 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (0.0707578689850561) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON CASE (0.14830370503546297 IN (vt0.c0))  WHEN rt0.c2 THEN NULL END;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE WHEN CASE NULL  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c0 COLLATE NOCASE END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN CASE NULL  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c0 COLLATE NOCASE END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CASE WHEN CASE NULL  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c0 COLLATE NOCASE END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, t1, rt0 GROUP BY t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0;
SELECT t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, t1, rt0 GROUP BY t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(vt0.c0)))) UNION ALL SELECT ALL t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, t1, rt0 GROUP BY t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(vt0.c0)))))) UNION ALL SELECT ALL t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, t1, rt0 GROUP BY t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(vt0.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((~ (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN 0.07959288914585483 END)=(((vt1.c0)>>('806434460'))));
SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN 0.07959288914585483 END)==(((vt1.c0)>>('806434460')))) WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN 0.07959288914585483 END)=(((vt1.c0)>>('806434460')))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN 0.07959288914585483 END)=(((vt1.c0)>>('806434460')))) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN 0.07959288914585483 END)=(((vt1.c0)>>('806434460'))));
SELECT rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0, vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0, vt0 WHERE ((NOT (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0, vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c3;
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((SUM(SUM(AVG(rt0.c0)))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (MAX(COUNT(*)))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (((SUM(SUM(AVG(rt0.c0)))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (MAX(COUNT(*)))))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((((SUM(SUM(AVG(rt0.c0)))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (MAX(COUNT(*))))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, vt1.c0, v0.c0, rt0.c3, t1.c0 FROM t1, rt0, vt0, vt1, v0;
SELECT ALL rt0.c1, vt0.c0, vt1.c0, v0.c0, rt0.c3, t1.c0 FROM t1, rt0, vt0, vt1, v0 WHERE (IFNULL(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), v0.c0)) UNION ALL SELECT rt0.c1, vt0.c0, vt1.c0, v0.c0, rt0.c3, t1.c0 FROM t1, rt0, vt0, vt1, v0 WHERE ((NOT (IFNULL(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), v0.c0)))) UNION ALL SELECT rt0.c1, vt0.c0, vt1.c0, v0.c0, rt0.c3, t1.c0 FROM t1, rt0, vt0, vt1, v0 WHERE (((IFNULL(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), v0.c0)) ISNULL));
SELECT ALL rt0.c1, vt0.c0, vt1.c0, v0.c0, rt0.c3, t1.c0 FROM t1, rt0, vt0, vt1, v0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE t1.c0 END)<>(CAST(rt0.c3 AS REAL)));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE t1.c0 END)!=(CAST(rt0.c3 AS REAL))) WHERE (((((vt1.c0)<=(vt0.c0)))||(CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE t1.c0 END)!=(CAST(rt0.c3 AS REAL))) WHERE ((NOT (((((vt1.c0)<=(vt0.c0)))||(CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c2 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE t1.c0 END)<>(CAST(rt0.c3 AS REAL))) WHERE (((((((vt1.c0)<=(vt0.c0)))||(CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE t1.c0 END)<>(CAST(rt0.c3 AS REAL)));
SELECT ALL rt0.c1, t1.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t1 ON CASE WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN SQLITE_SOURCE_ID() END FULL OUTER JOIN rt0 ON ((0.6475587140574952)-((rt0.c3 IN (vt0.c0, rt0.c0)))) GROUP BY rt0.c1, t1.c0, vt1.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM vt0, vt1, rt0, t1 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM vt0, vt1, rt0, t1 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING MAX(MIN(MAX(AVG(GROUP_CONCAT(MIN(rt0.c0)))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM vt0, vt1, rt0, t1 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (MAX(MIN(MAX(AVG(GROUP_CONCAT(MIN(rt0.c0)))))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM vt0, vt1, rt0, t1 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING ((MAX(MIN(MAX(AVG(GROUP_CONCAT(MIN(rt0.c0))))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((((vt1.c0)<=(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c0)<=(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((vt1.c0)<=(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0, t1 LEFT OUTER JOIN v0 ON ((CASE vt1.c0  WHEN v0.c0 THEN NULL ELSE rt0.c1 END) NOT BETWEEN ((((v0.c0)) BETWEEN ((vt0.c0)) AND (('-1650214438')))) AND (((rt0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON TIME('-1367143355', TYPEOF(rt0.c2), UPPER(v0.c0)) CROSS JOIN vt1 ON ((((x'') IS TRUE)) BETWEEN (UPPER(DISTINCT NULL)) AND ((v0.c0 IN ())));
SELECT ALL rt0.c3, vt1.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM vt1, v0 FULL OUTER JOIN t1 ON (((v0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((UNICODE(rt0.c0)))) LEFT OUTER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0)))) IS FALSE) GROUP BY rt0.c3, vt1.c0, rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt1.c0 FROM t1, vt1 FULL OUTER JOIN rt0 ON (+ (UPPER(v0.c0))) INNER JOIN v0 ON (((rt0.c3 IN ())) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) AND (v0.c0)) RIGHT OUTER JOIN vt0 ON ((((((rt0.c3) NOT NULL))OR(CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 WHEN t1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(load_extension(vt0.c0, rt0.c3))) GROUP BY vt0.c0, rt0.c0, rt0.c1, vt1.c0;
SELECT MAX(CAST((v0.c0 IN ()) AS INTEGER)) FROM rt0, vt1, vt0, t1, v0 ORDER BY CASE WHEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) THEN rt0.c3 END  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((((v0.c0) IS TRUE))) AND ((((((((((rt0.c0)OR(t1.c0)))AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0))))) ASC;
SELECT rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c0, v0.c0 FROM t1, vt1, rt0 LEFT OUTER JOIN v0 ON (((((((((((((v0.c0)AND(t1.c0)))OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))OR(t1.c0)))AND(rt0.c2)) IN ());
SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c0, v0.c0 FROM t1, vt1, rt0 LEFT OUTER JOIN v0 ON (((((((((((((v0.c0)AND(t1.c0)))OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))OR(t1.c0)))AND(rt0.c2)) IN ()) WHERE (UNLIKELY(t1.c0) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c0, v0.c0 FROM t1, vt1, rt0 LEFT OUTER JOIN v0 ON (((((((((((((v0.c0)AND(t1.c0)))OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))OR(t1.c0)))AND(rt0.c2)) IN ()) WHERE ((NOT (UNLIKELY(t1.c0) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c0, v0.c0 FROM t1, vt1, rt0 LEFT OUTER JOIN v0 ON (((((((((((((v0.c0)AND(t1.c0)))OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))OR(t1.c0)))AND(rt0.c2)) IN ()) WHERE (((UNLIKELY(t1.c0) COLLATE NOCASE) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c0, v0.c0 FROM t1, vt1, rt0 LEFT OUTER JOIN v0 ON (((((((((((((v0.c0)AND(t1.c0)))OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))OR(t1.c0)))AND(rt0.c2)) IN ());
SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST('-642106847' AS INTEGER)))) RIGHT OUTER JOIN vt1 ON t1.c0;
SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST('-642106847' AS INTEGER)))) RIGHT OUTER JOIN vt1 ON t1.c0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST('-642106847' AS INTEGER)))) RIGHT OUTER JOIN vt1 ON t1.c0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST('-642106847' AS INTEGER)))) RIGHT OUTER JOIN vt1 ON t1.c0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST('-642106847' AS INTEGER)))) RIGHT OUTER JOIN vt1 ON t1.c0;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON CAST(((vt1.c0) ISNULL) AS REAL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON CAST(((vt1.c0) ISNULL) AS REAL) WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON CAST(((vt1.c0) ISNULL) AS REAL) WHERE ((NOT (CAST(vt1.c0 AS BLOB) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON CAST(((vt1.c0) ISNULL) AS REAL) WHERE (((CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON CAST(((vt1.c0) ISNULL) AS REAL) GROUP BY vt0.c0;
SELECT t1.c0, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM t1, vt1, v0, rt0, vt0 GROUP BY t1.c0, rt0.c1, vt1.c0, rt0.c0, vt0.c0;
SELECT ALL t1.c0, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM t1, vt1, v0, rt0, vt0 GROUP BY t1.c0, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING MAX(SUM(x'')) UNION ALL SELECT t1.c0, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM t1, vt1, v0, rt0, vt0 GROUP BY t1.c0, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING (NOT (MAX(SUM(x'')))) UNION ALL SELECT ALL t1.c0, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM t1, vt1, v0, rt0, vt0 GROUP BY t1.c0, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING ((MAX(SUM(x''))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT t1.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, t1, rt0;
SELECT DISTINCT t1.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, t1, rt0 WHERE (((json_quote(vt0.c0)) ISNULL)) UNION SELECT DISTINCT t1.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, t1, rt0 WHERE ((NOT (((json_quote(vt0.c0)) ISNULL)))) UNION SELECT DISTINCT t1.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, t1, rt0 WHERE (((((json_quote(vt0.c0)) ISNULL)) ISNULL));
SELECT DISTINCT t1.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, t1, rt0;
SELECT t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, vt1, rt0, t1 RIGHT OUTER JOIN v0 ON ((((x'') ISNULL))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0)))) GROUP BY t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, vt1, rt0, t1 RIGHT OUTER JOIN v0 ON ((((x'') ISNULL))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0)))) WHERE (v0.c0) GROUP BY t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, vt1, rt0, t1 RIGHT OUTER JOIN v0 ON ((((x'') ISNULL))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0)))) WHERE ((NOT (v0.c0))) GROUP BY t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, vt1, rt0, t1 RIGHT OUTER JOIN v0 ON ((((x'') ISNULL))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0)))) WHERE (((v0.c0) ISNULL)) GROUP BY t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, vt1, rt0, t1 RIGHT OUTER JOIN v0 ON ((((x'') ISNULL))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0)))) GROUP BY t1.c0, vt1.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL t1.c0, rt0.c3, vt1.c0 FROM t1, vt1, rt0, v0 GROUP BY t1.c0, rt0.c3, vt1.c0;
SELECT ALL t1.c0, rt0.c3, vt1.c0 FROM t1, vt1, rt0, v0 GROUP BY t1.c0, rt0.c3, vt1.c0 HAVING COUNT(MAX(vt1.c0)) UNION ALL SELECT ALL t1.c0, rt0.c3, vt1.c0 FROM t1 NOT INDEXED, vt1, rt0, v0 GROUP BY t1.c0, rt0.c3, vt1.c0 HAVING (NOT (COUNT(MAX(vt1.c0)))) UNION ALL SELECT ALL t1.c0, rt0.c3, vt1.c0 FROM t1, vt1, rt0, v0 GROUP BY t1.c0, rt0.c3, vt1.c0 HAVING ((COUNT(MAX(vt1.c0))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((((NOT (rt0.c2))) ISNULL)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((NOT (rt0.c2))) ISNULL)))) UNION ALL SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((((NOT (rt0.c2))) ISNULL)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('㓧xxi&f')))AND(v0.c0)))OR('#''L(qA')))AND(v0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('㓧xxi&f')))AND(v0.c0)))OR('#''L(qA')))AND(v0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('㓧xxi&f')))AND(v0.c0)))OR('#''L(qA')))AND(v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ ((NOT (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ ((NOT (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ ((NOT (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((CAST(AVG(vt0.c0) AS BLOB)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((CAST(AVG(vt0.c0) AS BLOB)) IS TRUE))) UNION ALL SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((((CAST(AVG(vt0.c0) AS BLOB)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((CAST(AVG(vt0.c0) AS BLOB)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((CAST(AVG(vt0.c0) AS BLOB)) IS TRUE))) UNION ALL SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((((CAST(AVG(vt0.c0) AS BLOB)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (highlight(CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS INTEGER), CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.9376278227815226 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (highlight(CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS INTEGER), CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.9376278227815226 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((highlight(CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS INTEGER), CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.9376278227815226 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE))) ISNULL));
SELECT DISTINCT t1.c0, rt0.c2, v0.c0, vt1.c0, rt0.c3, rt0.c1 FROM rt0, v0 CROSS JOIN vt1 ON CASE WHEN ((NULL)IS(rt0.c2)) THEN CASE WHEN rt0.c2 THEN v0.c0 END ELSE ((((0Xffffffffba1728f2)OR(rt0.c2)))AND(rt0.c0)) END LEFT OUTER JOIN t1 ON ((((0.01314806176964467) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE);
SELECT DISTINCT t1.c0, rt0.c2, v0.c0, vt1.c0, rt0.c3, rt0.c1 FROM rt0, v0 CROSS JOIN vt1 ON CASE WHEN ((NULL)IS(rt0.c2)) THEN CASE WHEN rt0.c2 THEN v0.c0 END ELSE ((((0Xffffffffba1728f2)OR(rt0.c2)))AND(rt0.c0)) END LEFT OUTER JOIN t1 ON ((((0.01314806176964467) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE) WHERE (x'8145b857') UNION SELECT DISTINCT t1.c0, rt0.c2, v0.c0, vt1.c0, rt0.c3, rt0.c1 FROM rt0, v0 CROSS JOIN vt1 ON CASE WHEN ((NULL)IS(rt0.c2)) THEN CASE WHEN rt0.c2 THEN v0.c0 END ELSE ((((0xffffffffba1728f2)OR(rt0.c2)))AND(rt0.c0)) END LEFT OUTER JOIN t1 ON ((((0.01314806176964467) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE) WHERE ((NOT (x'8145b857'))) UNION SELECT DISTINCT t1.c0, rt0.c2, v0.c0, vt1.c0, rt0.c3, rt0.c1 FROM rt0, v0 CROSS JOIN vt1 ON CASE WHEN ((NULL)IS(rt0.c2)) THEN CASE WHEN rt0.c2 THEN v0.c0 END ELSE ((((0Xffffffffba1728f2)OR(rt0.c2)))AND(rt0.c0)) END LEFT OUTER JOIN t1 ON ((((0.01314806176964467) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE) WHERE (((x'8145b857') ISNULL));
SELECT DISTINCT t1.c0, rt0.c2, v0.c0, vt1.c0, rt0.c3, rt0.c1 FROM rt0, v0 CROSS JOIN vt1 ON CASE WHEN ((NULL)IS(rt0.c2)) THEN CASE WHEN rt0.c2 THEN v0.c0 END ELSE ((((0Xffffffffba1728f2)OR(rt0.c2)))AND(rt0.c0)) END LEFT OUTER JOIN t1 ON ((((0.01314806176964467) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE);
SELECT ALL vt1.c0, rt0.c0, rt0.c3, vt0.c0 FROM vt0, vt1, rt0, v0, t1 GROUP BY vt1.c0, rt0.c0, rt0.c3, vt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c3, vt0.c0 FROM vt0, vt1, rt0, v0, t1 WHERE (((~ (v0.c0)) IN ())) GROUP BY vt1.c0, rt0.c0, rt0.c3, vt0.c0 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c3, vt0.c0 FROM vt0, vt1, rt0, v0, t1 WHERE ((NOT (((~ (v0.c0)) IN ())))) GROUP BY vt1.c0, rt0.c0, rt0.c3, vt0.c0 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c3, vt0.c0 FROM vt0, vt1, rt0, v0 NOT INDEXED, t1 WHERE (((((~ (v0.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c3, vt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c3, vt0.c0 FROM vt0, vt1, rt0, v0, t1 GROUP BY vt1.c0, rt0.c0, rt0.c3, vt0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0, t1, vt1 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0, t1, vt1 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING SUM(TOTAL(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0, t1, vt1 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING (NOT (SUM(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0, t1, vt1 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING ((SUM(TOTAL(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0, vt0, v0;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (NULL))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE ((NOT ((- (NULL))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((((- (NULL))) ISNULL));
SELECT ALL * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))LIKE((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))LIKE((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))LIKE((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN json_remove(vt1.c0, vt0.c0) THEN vt1.c0 COLLATE RTRIM END) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN json_remove(vt1.c0, vt0.c0) THEN vt1.c0 COLLATE RTRIM END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE (vt0.c0 IN ())  WHEN json_remove(vt1.c0, vt0.c0) THEN vt1.c0 COLLATE RTRIM END) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1 HAVING NULL UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0Xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1 HAVING ((NULL) ISNULL);
SELECT v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1 HAVING NULL UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0Xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1 HAVING ((NULL) ISNULL);
SELECT v0.c0, vt1.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON rt0.c1 INNER JOIN vt1 ON 0xffffffffa1f6afff GROUP BY v0.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN rt0.c2 END AS TEXT) FULL OUTER JOIN rt0 ON (((v0.c0, rt0.c1, 0X4075b563)) BETWEEN (((rt0.c3 IN ()), ((rt0.c0)*(vt1.c0)), CAST(rt0.c0 AS TEXT))) AND (((vt0.c0 IN (vt1.c0, rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0))), CAST(rt0.c0 AS TEXT)))) CROSS JOIN vt1 ON (((((((((v0.c0 IN (rt0.c2, vt1.c0)))AND((+ (rt0.c1)))))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND('Xg')))OR(rt0.c2)))))OR(CASE WHEN vt1.c0 THEN 'uH' ELSE vt1.c0 END)))OR(((rt0.c3)<<(rt0.c2))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<=(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<=(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED NATURAL JOIN t1 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1 NOT INDEXED, v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1 NOT INDEXED, v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN v0 ON (((((rt0.c1)OR(rt0.c0))))<>((((rt0.c3)LIKE(-274038781))))) RIGHT OUTER JOIN rt0 ON ((((rt0.c2))>((rt0.c0))) IN (((rt0.c3)+(rt0.c3))));
SELECT DISTINCT * FROM vt1, v0, vt0, rt0;
SELECT DISTINCT * FROM vt1, v0, vt0, rt0 WHERE ('-1328751912') UNION SELECT DISTINCT * FROM vt1, v0, vt0, rt0 WHERE ((NOT ('-1328751912'))) UNION SELECT DISTINCT * FROM vt1, v0, vt0, rt0 WHERE ((('-1328751912') ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0, rt0;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ((~ (rt0.c1))) AND (((rt0.c3)IS NOT(vt0.c0))))) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ((~ (rt0.c1))) AND (((rt0.c3)IS NOT(vt0.c0))))))) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ((~ (rt0.c1))) AND (((rt0.c3)IS NOT(vt0.c0))))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c2, vt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (MAX(SUM(MIN(rt0.c2))) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ((MAX(SUM(MIN(rt0.c2))) IN ()))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (((MAX(SUM(MIN(rt0.c2))) IN ())) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (MAX(SUM(MIN(rt0.c2))) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ((MAX(SUM(MIN(rt0.c2))) IN ()))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (((MAX(SUM(MIN(rt0.c2))) IN ())) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))IS NOT(((rt0.c0) IS FALSE))) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT * FROM t1, vt1, v0 CROSS JOIN rt0 ON (((((((((((('0.07959288914585483')AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))AND((rt0.c3 IN ()))))OR(CASE rt0.c0  WHEN v0.c0 THEN 0.7207982231304968 END)))OR(CAST(vt1.c0 AS REAL))))AND(((rt0.c0)>>(rt0.c0)))))AND(((NULL)<<(rt0.c3))));
SELECT ALL * FROM t1, vt1, v0 CROSS JOIN rt0 ON (((((((((((('0.07959288914585483')AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))AND((rt0.c3 IN ()))))OR(CASE rt0.c0  WHEN v0.c0 THEN 0.7207982231304968 END)))OR(CAST(vt1.c0 AS REAL))))AND(((rt0.c0)>>(rt0.c0)))))AND(((NULL)<<(rt0.c3)))) WHERE (((((((((t1.c0 COLLATE RTRIM)OR(((v0.c0)>(v0.c0)))))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))AND(v0.c0)))OR(COALESCE(DISTINCT rt0.c2, rt0.c2)))) UNION ALL SELECT ALL * FROM t1, vt1, v0 CROSS JOIN rt0 ON (((((((((((('0.07959288914585483')AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))AND((rt0.c3 IN ()))))OR(CASE rt0.c0  WHEN v0.c0 THEN 0.7207982231304968 END)))OR(CAST(vt1.c0 AS REAL))))AND(((rt0.c0)>>(rt0.c0)))))AND(((NULL)<<(rt0.c3)))) WHERE ((NOT (((((((((t1.c0 COLLATE RTRIM)OR(((v0.c0)>(v0.c0)))))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))AND(v0.c0)))OR(COALESCE(DISTINCT rt0.c2, rt0.c2)))))) UNION ALL SELECT ALL * FROM t1, vt1, v0 CROSS JOIN rt0 ON (((((((((((('0.07959288914585483')AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))AND((rt0.c3 IN ()))))OR(CASE rt0.c0  WHEN v0.c0 THEN 0.7207982231304968 END)))OR(CAST(vt1.c0 AS REAL))))AND(((rt0.c0)>>(rt0.c0)))))AND(((NULL)<<(rt0.c3)))) WHERE (((((((((((t1.c0 COLLATE RTRIM)OR(((v0.c0)>(v0.c0)))))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))AND(v0.c0)))OR(COALESCE(DISTINCT rt0.c2, rt0.c2)))) ISNULL));
SELECT * FROM t1, vt1, v0 CROSS JOIN rt0 ON (((((((((((('0.07959288914585483')AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))AND((rt0.c3 IN ()))))OR(CASE rt0.c0  WHEN v0.c0 THEN 0.7207982231304968 END)))OR(CAST(vt1.c0 AS REAL))))AND(((rt0.c0)>>(rt0.c0)))))AND(((NULL)<<(rt0.c3))));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)>=(vt1.c0 COLLATE RTRIM));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)>=(vt1.c0 COLLATE RTRIM)) WHERE ((CAST(rt0.c1 AS NUMERIC) IN (((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)>=(vt1.c0 COLLATE RTRIM)) WHERE ((NOT ((CAST(rt0.c1 AS NUMERIC) IN (((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)>=(vt1.c0 COLLATE RTRIM)) WHERE ((((CAST(rt0.c1 AS NUMERIC) IN (((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 FULL OUTER JOIN vt1 ON ((rt0.c3)>=(vt1.c0 COLLATE RTRIM));
SELECT ALL v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0 FROM vt0, rt0, vt1, t1, v0 GROUP BY v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0 FROM vt0, rt0 NOT INDEXED, vt1, t1, v0 WHERE (CAST(((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))AND(t1.c0)))AND(rt0.c2)) AS NUMERIC)) GROUP BY v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0 UNION SELECT v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0 FROM vt0, rt0, vt1, t1, v0 WHERE ((NOT (CAST(((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))AND(t1.c0)))AND(rt0.c2)) AS NUMERIC)))) GROUP BY v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0 FROM vt0, rt0, vt1, t1, v0 WHERE (((CAST(((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))AND(t1.c0)))AND(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0 FROM vt0, rt0, vt1, t1, v0 GROUP BY v0.c0, rt0.c2, rt0.c3, t1.c0, vt0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c2, t1.c0 FROM rt0, v0, vt1, vt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c2, t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c2, t1.c0 FROM rt0, v0, vt1, vt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c2, t1.c0 HAVING CASE vt0.c0  WHEN MIN(vt0.c0) THEN MIN(TOTAL(MIN(SUM(v0.c0)))) WHEN COUNT(*) THEN ((MAX(vt1.c0)) IS FALSE) WHEN GROUP_CONCAT(MIN(TOTAL(vt1.c0))) THEN AVG(SUM(rt0.c0)) END UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c2, t1.c0 FROM rt0, v0, vt1, vt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c2, t1.c0 HAVING (NOT (CASE vt0.c0  WHEN MIN(vt0.c0) THEN MIN(TOTAL(MIN(SUM(v0.c0)))) WHEN COUNT(*) THEN ((MAX(vt1.c0)) IS FALSE) WHEN GROUP_CONCAT(MIN(TOTAL(vt1.c0))) THEN AVG(SUM(rt0.c0)) END)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c2, t1.c0 FROM rt0, v0, vt1, vt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c2, t1.c0 HAVING ((CASE vt0.c0  WHEN MIN(vt0.c0) THEN MIN(TOTAL(MIN(SUM(v0.c0)))) WHEN COUNT(*) THEN ((MAX(vt1.c0)) IS FALSE) WHEN GROUP_CONCAT(MIN(TOTAL(vt1.c0))) THEN AVG(SUM(rt0.c0)) END) ISNULL);
SELECT ALL vt1.c0, t1.c0, vt0.c0 FROM vt0, t1, vt1;
SELECT vt1.c0, t1.c0, vt0.c0 FROM vt0, t1, vt1 WHERE (((x'2be95401') ISNULL)) UNION ALL SELECT ALL vt1.c0, t1.c0, vt0.c0 FROM vt0, t1, vt1 WHERE ((NOT (((x'2be95401') ISNULL)))) UNION ALL SELECT ALL vt1.c0, t1.c0, vt0.c0 FROM vt0, t1, vt1 WHERE (((((x'2be95401') ISNULL)) ISNULL));
SELECT ALL vt1.c0, t1.c0, vt0.c0 FROM vt0, t1, vt1;
SELECT DISTINCT * FROM t1, v0, vt0;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY) UNION SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((NOT (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, v0, vt0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 WHERE (((((vt1.c0)LIKE(vt1.c0)))*(((NULL)*(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c0)LIKE(vt1.c0)))*(((NULL)*(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE (((((((vt1.c0)LIKE(vt1.c0)))*(((NULL)*(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (~ (((GROUP_CONCAT(vt1.c0))GLOB(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((~ (((GROUP_CONCAT(vt1.c0))GLOB(MIN(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (((GROUP_CONCAT(vt1.c0))GLOB(MIN(vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (~ (((GROUP_CONCAT(vt1.c0))GLOB(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((~ (((GROUP_CONCAT(vt1.c0))GLOB(MIN(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (((GROUP_CONCAT(vt1.c0))GLOB(MIN(vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0 FROM t1, rt0;
SELECT ALL rt0.c0 FROM t1, rt0 WHERE (((rt0.c1)IS(rt0.c3))) UNION ALL SELECT ALL rt0.c0 FROM t1, rt0 WHERE ((NOT (((rt0.c1)IS(rt0.c3))))) UNION ALL SELECT rt0.c0 FROM t1, rt0 WHERE (((((rt0.c1)IS(rt0.c3))) ISNULL));
SELECT rt0.c0 FROM t1, rt0;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE t1.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (((((t1.c0)AND(rt0.c0)))AND(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER)));
SELECT DISTINCT * FROM t1 NOT INDEXED LEFT OUTER JOIN rt0 ON ((CASE t1.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (((((t1.c0)AND(rt0.c0)))AND(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER))) WHERE (((((rt0.c1)GLOB(rt0.c1)))-(((rt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE t1.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (((((t1.c0)AND(rt0.c0)))AND(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER))) WHERE ((NOT (((((rt0.c1)GLOB(rt0.c1)))-(((rt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE t1.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (((((t1.c0)AND(rt0.c0)))AND(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER))) WHERE (((((((rt0.c1)GLOB(rt0.c1)))-(((rt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE t1.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (((((t1.c0)AND(rt0.c0)))AND(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER)));
SELECT v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON ((((v0.c0))<((v0.c0))) IN ((t1.c0 IN ()), ((t1.c0)*(t1.c0)))) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON ((((v0.c0))<((v0.c0))) IN ((t1.c0 IN ()), ((t1.c0)*(t1.c0)))) WHERE (NULL COLLATE RTRIM) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON ((((v0.c0))<((v0.c0))) IN ((t1.c0 IN ()), ((t1.c0)*(t1.c0)))) WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON ((((v0.c0))<((v0.c0))) IN ((t1.c0 IN ()), ((t1.c0)*(t1.c0)))) WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON ((((v0.c0))<((v0.c0))) IN ((t1.c0 IN ()), ((t1.c0)*(t1.c0)))) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(GROUP_CONCAT(TOTAL(COUNT(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(TOTAL(COUNT(TOTAL(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(GROUP_CONCAT(TOTAL(COUNT(TOTAL(v0.c0)))))) ISNULL);
SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, t1.c0 FROM vt1, vt0, t1, rt0, v0;
SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, t1.c0 FROM vt1, vt0, t1, rt0, v0 WHERE (json_quote(((vt1.c0)||(v0.c0)))) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, t1.c0 FROM vt1, vt0, t1, rt0, v0 WHERE ((NOT (json_quote(((vt1.c0)||(v0.c0)))))) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, t1.c0 FROM vt1, vt0, t1, rt0, v0 WHERE (((json_quote(((vt1.c0)||(v0.c0)))) ISNULL));
SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, t1.c0 FROM vt1, vt0, t1, rt0, v0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (LOWER(CAST('G\rSlqV%N' AS BLOB))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (LOWER(CAST('G\rSlqV%N' AS BLOB))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((LOWER(CAST('G\rSlqV%N' AS BLOB))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((NULL IN (t1.c0, t1.c0)))&(t1.c0 COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((NULL IN (t1.c0, t1.c0)))&(t1.c0 COLLATE RTRIM))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((NULL IN (t1.c0, t1.c0)))&(t1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0;
SELECT t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0;
SELECT t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))GLOB(CAST('|Y' AS BLOB))) RIGHT OUTER JOIN t1 ON NULL GROUP BY t1.c0;
SELECT * FROM vt0, t1 NATURAL JOIN vt1;
SELECT ALL * FROM vt0, t1 NATURAL JOIN vt1 WHERE (NULL) UNION ALL SELECT * FROM vt0, t1 NATURAL JOIN vt1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0, t1 NATURAL JOIN vt1 WHERE (((NULL) ISNULL));
SELECT * FROM vt0, t1 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (('') NOT BETWEEN (vt0.c0) AND (vt1.c0)) END GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (('') NOT BETWEEN (vt0.c0) AND (vt1.c0)) END WHERE ((NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (('') NOT BETWEEN (vt0.c0) AND (vt1.c0)) END WHERE ((NOT ((NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (('') NOT BETWEEN (vt0.c0) AND (vt1.c0)) END WHERE ((((NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (('') NOT BETWEEN (vt0.c0) AND (vt1.c0)) END GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX((MIN(vt1.c0) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((MIN(vt1.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX((MIN(vt1.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX((MIN(vt1.c0) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((MIN(vt1.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX((MIN(vt1.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL TOTAL(((((((0.5149718883658849) BETWEEN (t1.c0) AND (rt0.c3)))AND(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((vt1.c0)-(vt1.c0))))) FROM rt0, v0, t1, vt1 ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT t1.c0, vt1.c0 FROM vt1, t1, vt0;
SELECT ALL t1.c0, vt1.c0 FROM vt1, t1, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL t1.c0, vt1.c0 FROM vt1, t1, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL t1.c0, vt1.c0 FROM vt1, t1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT t1.c0, vt1.c0 FROM vt1, t1, vt0;
SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0;
SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0 WHERE (CAST(rt0.c1 AS REAL)) UNION SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0 WHERE ((NOT (CAST(rt0.c1 AS REAL)))) UNION SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0 WHERE (((CAST(rt0.c1 AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t1, rt0, v0;
SELECT ALL t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON (((IFNULL(NULL, t1.c0)))>((((t1.c0)LIKE(t1.c0))))) GROUP BY t1.c0;
SELECT t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON (((IFNULL(NULL, t1.c0)))>((((t1.c0)LIKE(t1.c0))))) WHERE (((((((((((-542497613)OR(t1.c0)))OR(t1.c0)))OR(v0.c0)))AND(v0.c0))) BETWEEN ((((t1.c0))>=((t1.c0)))) AND ((t1.c0 IN (v0.c0, t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON (((IFNULL(NULL, t1.c0)))>((((t1.c0)LIKE(t1.c0))))) WHERE ((NOT (((((((((((-542497613)OR(t1.c0)))OR(t1.c0)))OR(v0.c0)))AND(v0.c0))) BETWEEN ((((t1.c0))>=((t1.c0)))) AND ((t1.c0 IN (v0.c0, t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON (((IFNULL(NULL, t1.c0)))>((((t1.c0)LIKE(t1.c0))))) WHERE (((((((((((((-542497613)OR(t1.c0)))OR(t1.c0)))OR(v0.c0)))AND(v0.c0))) BETWEEN ((((t1.c0))>=((t1.c0)))) AND ((t1.c0 IN (v0.c0, t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON (((IFNULL(NULL, t1.c0)))>((((t1.c0)LIKE(t1.c0))))) GROUP BY t1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT MIN((((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) IN ((NOT (rt0.c0)), ((rt0.c3)IS(rt0.c2))))) FROM v0, rt0, vt0, t1 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((NULL)OR('dR')))OR(rt0.c1))) AND ((((vt0.c0)) BETWEEN (('#c>HV')) AND ((t1.c0))))) DESC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN vt1 ON ((((vt0.c0))>((rt0.c2))) IN (((v0.c0)<<(0X7264d2b9)))) LEFT OUTER JOIN v0 ON (((vt1.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (NULL))))) CROSS JOIN vt0 ON CASE (+ (rt0.c3))  WHEN ((rt0.c0)<(rt0.c3)) THEN ((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2)) ELSE NULL COLLATE RTRIM END;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CAST(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL vt1.c0, t1.c0 FROM t1 NATURAL JOIN vt1 GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, t1.c0 FROM t1 NATURAL JOIN vt1 WHERE (((vt1.c0)OR(vt1.c0)) COLLATE BINARY) GROUP BY vt1.c0, t1.c0 UNION SELECT ALL vt1.c0, t1.c0 FROM t1 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0)OR(vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c0, t1.c0 UNION SELECT ALL vt1.c0, t1.c0 FROM t1 NATURAL JOIN vt1 WHERE (((((vt1.c0)OR(vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, t1.c0;
SELECT ALL vt1.c0, t1.c0 FROM t1 NATURAL JOIN vt1 GROUP BY vt1.c0, t1.c0;
SELECT ALL t1.c0, rt0.c3 FROM vt0, rt0, t1 GROUP BY t1.c0, rt0.c3;
SELECT t1.c0, rt0.c3 FROM vt0, rt0, t1 GROUP BY t1.c0, rt0.c3 HAVING MAX(TOTAL(COUNT(*))) UNION ALL SELECT t1.c0, rt0.c3 FROM vt0, rt0, t1 GROUP BY t1.c0, rt0.c3 HAVING (NOT (MAX(TOTAL(COUNT(*))))) UNION ALL SELECT ALL t1.c0, rt0.c3 FROM vt0, rt0, t1 GROUP BY t1.c0, rt0.c3 HAVING ((MAX(TOTAL(COUNT(*)))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((~ (t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((~ (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((~ (t1.c0))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON t1.c0 RIGHT OUTER JOIN t1 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))OR((~ (vt1.c0)))) RIGHT OUTER JOIN vt0 ON vt1.c0;
SELECT ALL v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((- (vt1.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((- (vt1.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, vt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((- (vt1.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0;
SELECT vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0;
SELECT vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 HAVING CASE WHEN ((((COUNT(*))OR(rt0.c3)))OR(rt0.c3)) THEN AVG('P9꣨\벤(V䂤.') COLLATE BINARY END UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 HAVING (NOT (CASE WHEN ((((COUNT(*))OR(rt0.c3)))OR(rt0.c3)) THEN AVG('P9꣨\벤(V䂤.') COLLATE BINARY END)) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 HAVING ((CASE WHEN ((((COUNT(*))OR(rt0.c3)))OR(rt0.c3)) THEN AVG('P9꣨\벤(V䂤.') COLLATE BINARY END) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0;
SELECT vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 HAVING CASE WHEN ((((COUNT(*))OR(rt0.c3)))OR(rt0.c3)) THEN AVG('P9꣨\벤(V䂤.') COLLATE BINARY END UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 HAVING (NOT (CASE WHEN ((((COUNT(*))OR(rt0.c3)))OR(rt0.c3)) THEN AVG('P9꣨\벤(V䂤.') COLLATE BINARY END)) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 HAVING ((CASE WHEN ((((COUNT(*))OR(rt0.c3)))OR(rt0.c3)) THEN AVG('P9꣨\벤(V䂤.') COLLATE BINARY END) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0 FROM t1, vt0, rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE)) ISNULL) GROUP BY vt0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1, t1.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)=(v0.c0)), ((v0.c0)IS NOT('1058488014')))) AND ((JULIANDAY(v0.c0, v0.c0, v0.c0), ((-6.93456287E8) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)==(v0.c0)), ((v0.c0)IS NOT('1058488014')))) AND ((JULIANDAY(v0.c0, v0.c0, v0.c0), ((-6.93456287E8) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)=(v0.c0)), ((v0.c0)IS NOT('1058488014')))) AND ((JULIANDAY(v0.c0, v0.c0, v0.c0), ((-6.93456287E8) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt1, t1;
SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt1, t1 WHERE (CASE WHEN (- (t1.c0)) THEN ((NULL) NOT BETWEEN (t1.c0) AND (vt1.c0)) ELSE ((v0.c0)<(NULL)) END) UNION SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt1, t1 WHERE ((NOT (CASE WHEN (- (t1.c0)) THEN ((NULL) NOT BETWEEN (t1.c0) AND (vt1.c0)) ELSE ((v0.c0)<(NULL)) END))) UNION SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt1, t1 WHERE (((CASE WHEN (- (t1.c0)) THEN ((NULL) NOT BETWEEN (t1.c0) AND (vt1.c0)) ELSE ((v0.c0)<(NULL)) END) ISNULL));
SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt1, t1;
SELECT rt0.c2 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, vt1, rt0, t1 WHERE (0.31887771214087846) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, vt1, rt0, t1 WHERE ((NOT (0.31887771214087846))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, vt1, rt0, t1 WHERE (((0.31887771214087846) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(TOTAL(0.7650264108861579)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(TOTAL(0.7650264108861579)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(TOTAL(0.7650264108861579))) ISNULL);
SELECT ALL * FROM rt0, vt0, v0, vt1, t1;
SELECT ALL * FROM rt0, vt0, v0, vt1, t1 NOT INDEXED WHERE (((((((rt0.c3)AND(rt0.c3)))AND(v0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, vt0, v0, vt1, t1 WHERE ((NOT (((((((rt0.c3)AND(rt0.c3)))AND(v0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, vt0, v0, vt1, t1 WHERE (((((((((rt0.c3)AND(rt0.c3)))AND(v0.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, vt0, v0, vt1, t1;
SELECT DISTINCT * FROM t1, v0, vt1, rt0;
SELECT DISTINCT * FROM t1, v0, vt1, rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS BLOB)) UNION SELECT DISTINCT * FROM t1, v0, vt1, rt0 WHERE ((NOT (CAST(((rt0.c3) NOTNULL) AS BLOB)))) UNION SELECT DISTINCT * FROM t1, v0, vt1, rt0 WHERE (((CAST(((rt0.c3) NOTNULL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t1, v0, vt1, rt0;
SELECT ALL rt0.c2, v0.c0, vt1.c0 FROM vt1, t1, rt0, v0 GROUP BY rt0.c2, v0.c0, vt1.c0;
SELECT ALL rt0.c2, v0.c0, vt1.c0 FROM vt1, t1, rt0, v0 WHERE (((rt0.c1)<(v0.c0)) COLLATE RTRIM) GROUP BY rt0.c2, v0.c0, vt1.c0 UNION SELECT ALL rt0.c2, v0.c0, vt1.c0 FROM vt1, t1, rt0, v0 WHERE ((NOT (((rt0.c1)<(v0.c0)) COLLATE RTRIM))) GROUP BY rt0.c2, v0.c0, vt1.c0 UNION SELECT rt0.c2, v0.c0, vt1.c0 FROM vt1, t1, rt0, v0 WHERE (((((rt0.c1)<(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, v0.c0, vt1.c0;
SELECT ALL rt0.c2, v0.c0, vt1.c0 FROM vt1, t1, rt0, v0 GROUP BY rt0.c2, v0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (NULL) AND (((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN (NULL) AND (((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN (NULL) AND (((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT vt0.c0, v0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT vt0.c0, v0.c0, t1.c0 FROM v0, t1, vt0 WHERE ((+ ('-88092964')) COLLATE NOCASE) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT ALL vt0.c0, v0.c0, t1.c0 FROM v0, t1, vt0 WHERE ((NOT ((+ ('-88092964')) COLLATE NOCASE))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT ALL vt0.c0, v0.c0, t1.c0 FROM v0, t1, vt0 WHERE ((((+ ('-88092964')) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT vt0.c0, v0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL rt0.c3, rt0.c0, t1.c0, v0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((t1.c0)AND(rt0.c3)))LIKE(((rt0.c3)-(t1.c0)))) FULL OUTER JOIN v0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL) LEFT OUTER JOIN t1 ON v0.c0 GROUP BY rt0.c3, rt0.c0, t1.c0, v0.c0;
SELECT ALL * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((TRIM(DISTINCT rt0.c3, vt0.c0)) BETWEEN ((NOT (rt0.c1))) AND (NULL));
SELECT ALL * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((TRIM(DISTINCT rt0.c3, vt0.c0)) BETWEEN ((NOT (rt0.c1))) AND (NULL)) WHERE (CASE WHEN CAST(rt0.c2 AS REAL) THEN (((x'1c78'))>((vt0.c0))) END) UNION ALL SELECT ALL * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((TRIM(DISTINCT rt0.c3, vt0.c0)) BETWEEN ((NOT (rt0.c1))) AND (NULL)) WHERE ((NOT (CASE WHEN CAST(rt0.c2 AS REAL) THEN (((x'1c78'))>((vt0.c0))) END))) UNION ALL SELECT ALL * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((TRIM(DISTINCT rt0.c3, vt0.c0)) BETWEEN ((NOT (rt0.c1))) AND (NULL)) WHERE (((CASE WHEN CAST(rt0.c2 AS REAL) THEN (((x'1c78'))>((vt0.c0))) END) ISNULL));
SELECT ALL * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((TRIM(DISTINCT rt0.c3, vt0.c0)) BETWEEN ((NOT (rt0.c1))) AND (NULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM t1, vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM t1, vt0, vt1 WHERE (((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM t1, vt0, vt1 WHERE ((NOT (((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM t1, vt0, vt1 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM t1, vt0, vt1;
SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, vt0, rt0, t1 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, vt0, rt0, t1 WHERE (vt0.c0) GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 UNION SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, vt0, rt0, t1 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 UNION SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM vt1 NOT INDEXED, v0, vt0, rt0, t1 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, vt0, rt0, t1 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3 HAVING CAST(1.117114379E9 AS NUMERIC) UNION ALL SELECT rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3 HAVING (NOT (CAST(1.117114379E9 AS NUMERIC))) UNION ALL SELECT ALL rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3 HAVING ((CAST(1.117114379E9 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3 HAVING CAST(1.117114379E9 AS NUMERIC) UNION ALL SELECT rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3 HAVING (NOT (CAST(1.117114379E9 AS NUMERIC))) UNION ALL SELECT ALL rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3 HAVING ((CAST(1.117114379E9 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c3 FROM rt0, vt1, vt0, t1, v0 GROUP BY rt0.c3;
SELECT SUM(((0.6022774368680048) IS FALSE)) FROM v0, vt0, rt0;
SELECT ALL * FROM t1, v0;
SELECT * FROM t1, v0 WHERE (NULL) UNION ALL SELECT * FROM t1, v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM t1, v0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM t1, v0;
SELECT DISTINCT * FROM t1, vt0, rt0, vt1;
SELECT DISTINCT * FROM t1, vt0, rt0, vt1 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM t1, vt0, rt0, vt1 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM t1, vt0, rt0, vt1 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM t1, vt0, rt0, vt1;
SELECT ALL rt0.c3, t1.c0 FROM rt0, t1, vt1, v0 GROUP BY rt0.c3, t1.c0;
SELECT ALL rt0.c3, t1.c0 FROM rt0, t1, vt1, v0 WHERE (v0.c0) GROUP BY rt0.c3, t1.c0 UNION SELECT rt0.c3, t1.c0 FROM rt0, t1, vt1, v0 WHERE ((NOT (v0.c0))) GROUP BY rt0.c3, t1.c0 UNION SELECT rt0.c3, t1.c0 FROM rt0 NOT INDEXED, t1, vt1, v0 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c3, t1.c0;
SELECT ALL rt0.c3, t1.c0 FROM rt0, t1, vt1, v0 GROUP BY rt0.c3, t1.c0;
SELECT v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0 HAVING AVG(CAST(vt1.c0 AS INTEGER)) UNION ALL SELECT ALL v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0 HAVING (NOT (AVG(CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0 HAVING ((AVG(CAST(vt1.c0 AS INTEGER))) ISNULL);
SELECT v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0 HAVING AVG(CAST(vt1.c0 AS INTEGER)) UNION ALL SELECT ALL v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0 HAVING (NOT (AVG(CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0 HAVING ((AVG(CAST(vt1.c0 AS INTEGER))) ISNULL);
SELECT v0.c0 FROM vt1, v0, t1 GROUP BY v0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3, t1.c0 FROM vt0, rt0 LEFT OUTER JOIN t1 ON CAST((rt0.c1 IN ()) AS REAL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3, t1.c0 FROM vt0 NOT INDEXED, rt0 LEFT OUTER JOIN t1 ON CAST((rt0.c1 IN ()) AS REAL) WHERE (CASE ((t1.c0)||(vt0.c0))  WHEN (((('-593275813')OR(rt0.c2)))AND(rt0.c2)) THEN TYPEOF(DISTINCT rt0.c2) ELSE ((rt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)) END) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3, t1.c0 FROM vt0, rt0 LEFT OUTER JOIN t1 ON CAST((rt0.c1 IN ()) AS REAL) WHERE ((NOT (CASE ((t1.c0)||(vt0.c0))  WHEN (((('-593275813')OR(rt0.c2)))AND(rt0.c2)) THEN TYPEOF(DISTINCT rt0.c2) ELSE ((rt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)) END))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3, t1.c0 FROM vt0, rt0 LEFT OUTER JOIN t1 ON CAST((rt0.c1 IN ()) AS REAL) WHERE (((CASE ((t1.c0)||(vt0.c0))  WHEN (((('-593275813')OR(rt0.c2)))AND(rt0.c2)) THEN TYPEOF(DISTINCT rt0.c2) ELSE ((rt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)) END) ISNULL));
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3, t1.c0 FROM vt0, rt0 LEFT OUTER JOIN t1 ON CAST((rt0.c1 IN ()) AS REAL);
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((~ (((v0.c0)<<(vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((~ (((v0.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((~ (((v0.c0)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON (((((vt0.c0, vt0.c0, vt1.c0))=((vt1.c0, rt0.c0, rt0.c1))))%((((rt0.c1))>((rt0.c1))))) CROSS JOIN vt1 ON ((((x'766c') BETWEEN ('630480519') AND (rt0.c1)))<<((v0.c0 IN ()))) LEFT OUTER JOIN t1 ON (((NOT (vt0.c0)))<=(rt0.c2)) INNER JOIN vt0 ON v0.c0 GROUP BY rt0.c3, rt0.c1, t1.c0, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(MIN(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(MIN(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(MIN(COUNT(*)))) ISNULL);
SELECT * FROM t1, vt0, vt1, v0;
SELECT * FROM t1, vt0, vt1, v0 WHERE (((((v0.c0)IS NOT(vt1.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM t1, vt0, vt1, v0 WHERE ((NOT (((((v0.c0)IS NOT(vt1.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM t1, vt0, vt1, v0 WHERE (((((((v0.c0)IS NOT(vt1.c0))) NOT NULL)) ISNULL));
SELECT * FROM t1, vt0, vt1, v0;
SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0;
SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0 WHERE (((((CAST('-126087788' AS TEXT))AND(TYPEOF(rt0.c3))))OR(rt0.c0))) UNION SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0 WHERE ((NOT (((((CAST('-126087788' AS TEXT))AND(TYPEOF(rt0.c3))))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0 WHERE (((((((CAST('-126087788' AS TEXT))AND(TYPEOF(rt0.c3))))OR(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM t1, vt1, rt0, v0, vt0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, t1, vt0, v0, vt1 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, t1, vt0, v0, vt1 WHERE (((((((v0.c0)AND(vt0.c0)))OR(vt1.c0))) IS TRUE)) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, t1, vt0, v0, vt1 WHERE ((NOT (((((((v0.c0)AND(vt0.c0)))OR(vt1.c0))) IS TRUE)))) GROUP BY rt0.c0, v0.c0 UNION SELECT ALL rt0.c0, v0.c0 FROM rt0, t1, vt0, v0, vt1 WHERE (((((((((v0.c0)AND(vt0.c0)))OR(vt1.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, t1, vt0, v0, vt1 GROUP BY rt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING AVG((NOT (t1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING (NOT (AVG((NOT (t1.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING ((AVG((NOT (t1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING AVG((NOT (t1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING (NOT (AVG((NOT (t1.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING ((AVG((NOT (t1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 NATURAL JOIN t1 GROUP BY vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0)>>(vt1.c0))) AND (LIKELIHOOD(vt1.c0, 0.21403962026063805)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0)>>(vt1.c0))) AND (LIKELIHOOD(vt1.c0, 0.21403962026063805)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0)>>(vt1.c0))) AND (LIKELIHOOD(vt1.c0, 0.21403962026063805)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt1, t1, vt0;
SELECT DISTINCT * FROM rt0, vt1, t1, vt0 WHERE (((((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END)AND(((rt0.c1) ISNULL))))AND((vt1.c0 IN (t1.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1, t1, vt0 NOT INDEXED WHERE ((NOT (((((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END)AND(((rt0.c1) ISNULL))))AND((vt1.c0 IN (t1.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt1, t1, vt0 WHERE (((((((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END)AND(((rt0.c1) ISNULL))))AND((vt1.c0 IN (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt1, t1, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c3 FROM v0, t1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c3;
SELECT vt0.c0, rt0.c0, rt0.c3 FROM v0, t1, rt0, vt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c2)<<(vt0.c0)))))OR('173162175'))) GROUP BY vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c3 FROM v0, t1, rt0, vt0 WHERE ((NOT ((((((rt0.c0 IN ()))AND(((rt0.c2)<<(vt0.c0)))))OR('173162175'))))) GROUP BY vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c3 FROM v0, t1, rt0, vt0 WHERE ((((((((rt0.c0 IN ()))AND(((rt0.c2)<<(vt0.c0)))))OR('173162175'))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c0, rt0.c3 FROM v0, t1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c3;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING ((- (rt0.c3)) IN ()) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING (NOT (((- (rt0.c3)) IN ()))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING ((((- (rt0.c3)) IN ())) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING ((- (rt0.c3)) IN ()) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING (NOT (((- (rt0.c3)) IN ()))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING ((((- (rt0.c3)) IN ())) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, vt0, t1, rt0, vt1 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT * FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON ((CASE NULL  WHEN 0.012794178423191083 THEN rt0.c0 END)+(UNLIKELY(DISTINCT rt0.c1)));
SELECT ALL * FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON ((CASE NULL  WHEN 0.012794178423191083 THEN rt0.c0 END)+(UNLIKELY(DISTINCT rt0.c1))) WHERE (((((rt0.c2) BETWEEN (v0.c0) AND (0xffffffffe0fb5704)))!=(CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN 0.2406619276393911 THEN vt1.c0 END))) UNION ALL SELECT * FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON ((CASE NULL  WHEN 0.012794178423191083 THEN rt0.c0 END)+(UNLIKELY(DISTINCT rt0.c1))) WHERE ((NOT (((((rt0.c2) BETWEEN (v0.c0) AND (0xffffffffe0fb5704)))!=(CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN 0.2406619276393911 THEN vt1.c0 END))))) UNION ALL SELECT ALL * FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON ((CASE NULL  WHEN 0.012794178423191083 THEN rt0.c0 END)+(UNLIKELY(DISTINCT rt0.c1))) WHERE (((((((rt0.c2) BETWEEN (v0.c0) AND (0xffffffffe0fb5704)))!=(CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN 0.2406619276393911 THEN vt1.c0 END))) ISNULL));
SELECT * FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON ((CASE NULL  WHEN 0.012794178423191083 THEN rt0.c0 END)+(UNLIKELY(DISTINCT rt0.c1)));
SELECT DISTINCT * FROM t1, v0, rt0;
SELECT DISTINCT * FROM t1, v0, rt0 WHERE (((+ (v0.c0)) IN (((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))OR(rt0.c3)))AND(rt0.c3))))) UNION SELECT DISTINCT * FROM t1, v0, rt0 WHERE ((NOT (((+ (v0.c0)) IN (((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))OR(rt0.c3)))AND(rt0.c3))))))) UNION SELECT DISTINCT * FROM t1, v0, rt0 WHERE (((((+ (v0.c0)) IN (((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))OR(rt0.c3)))AND(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM t1, v0, rt0;
SELECT vt1.c0, t1.c0 FROM v0, vt1, vt0, t1 GROUP BY vt1.c0, t1.c0;
SELECT ALL vt1.c0, t1.c0 FROM v0, vt1, vt0, t1 WHERE (t1.c0) GROUP BY vt1.c0, t1.c0 UNION SELECT vt1.c0, t1.c0 FROM v0, vt1, vt0, t1 WHERE ((NOT (t1.c0))) GROUP BY vt1.c0, t1.c0 UNION SELECT vt1.c0, t1.c0 FROM v0, vt1, vt0, t1 WHERE (((t1.c0) ISNULL)) GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, t1.c0 FROM v0, vt1, vt0, t1 GROUP BY vt1.c0, t1.c0;
SELECT v0.c0, vt1.c0 FROM t1, rt0, v0, vt1, vt0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM t1, rt0, v0, vt1, vt0 GROUP BY v0.c0, vt1.c0 HAVING MAX(((COUNT(*)) NOT BETWEEN (COUNT(COUNT(*))) AND (vt0.c0))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM t1, rt0, v0, vt1, vt0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (MAX(((COUNT(*)) NOT BETWEEN (COUNT(COUNT(*))) AND (vt0.c0))))) UNION ALL SELECT v0.c0, vt1.c0 FROM t1, rt0 NOT INDEXED, v0, vt1, vt0 GROUP BY v0.c0, vt1.c0 HAVING ((MAX(((COUNT(*)) NOT BETWEEN (COUNT(COUNT(*))) AND (vt0.c0)))) ISNULL);
SELECT * FROM v0, vt0, vt1, rt0, t1;
SELECT ALL * FROM v0, vt0, vt1, rt0, t1 WHERE (CAST(((0.03234378921851777)>=(rt0.c2)) AS NUMERIC)) UNION ALL SELECT ALL * FROM v0, vt0, vt1, rt0, t1 WHERE ((NOT (CAST(((0.03234378921851777)>=(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, vt0, vt1, rt0, t1 WHERE (((CAST(((0.03234378921851777)>=(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT * FROM v0, vt0, vt1, rt0, t1;
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE WHEN (rt0.c3 IN (vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN x'7392' END THEN (- (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)) THEN rt0.c0 ELSE (((rt0.c2))<((vt0.c0))) END;
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE WHEN (rt0.c3 IN (vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN x'7392' END THEN (- (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)) THEN rt0.c0 ELSE (((rt0.c2))<((vt0.c0))) END WHERE (COALESCE(DISTINCT rt0.c1, json_valid(rt0.c3))) UNION SELECT DISTINCT vt0.c0, vt1.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE WHEN (rt0.c3 IN (vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN x'7392' END THEN (- (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)) THEN rt0.c0 ELSE (((rt0.c2))<((vt0.c0))) END WHERE ((NOT (COALESCE(DISTINCT rt0.c1, json_valid(rt0.c3))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE WHEN (rt0.c3 IN (vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN x'7392' END THEN (- (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)) THEN rt0.c0 ELSE (((rt0.c2))<((vt0.c0))) END WHERE (((COALESCE(DISTINCT rt0.c1, json_valid(rt0.c3))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE WHEN (rt0.c3 IN (vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN x'7392' END THEN (- (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)) THEN rt0.c0 ELSE (((rt0.c2))<((vt0.c0))) END;
SELECT ALL t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN t1 ON (- (((((vt0.c0)OR(rt0.c3)))OR(rt0.c1)))) INNER JOIN vt0 ON (CAST(vt1.c0 AS REAL) IN ((NULL IN ()), ((t1.c0)-(rt0.c0)))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0)/(t1.c0))) NOTNULL) GROUP BY t1.c0, rt0.c1, vt0.c0, v0.c0, rt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(MIN(t1.c0)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(MIN(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(MIN(t1.c0))) ISNULL);
SELECT ALL TOTAL(CASE WHEN ((t1.c0)!=(rt0.c3)) THEN (- (vt0.c0)) END) FROM rt0, vt1, v0, vt0, t1;
SELECT ALL * FROM v0 NOT INDEXED, rt0, vt0 FULL OUTER JOIN t1 ON CAST((((v0.c0))<=((rt0.c2))) AS INTEGER);
SELECT ALL * FROM v0, rt0, vt0 FULL OUTER JOIN t1 ON CAST((((v0.c0))<=((rt0.c2))) AS INTEGER) WHERE ((((((rt0.c3, rt0.c0, rt0.c3))>=(('', rt0.c1, vt0.c0)))) BETWEEN (((((((((t1.c0)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c0))) AND (PRINTF(rt0.c2, rt0.c3, v0.c0)))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 FULL OUTER JOIN t1 ON CAST((((v0.c0))<=((rt0.c2))) AS INTEGER) WHERE ((NOT ((((((rt0.c3, rt0.c0, rt0.c3))>=(('', rt0.c1, vt0.c0)))) BETWEEN (((((((((t1.c0)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c0))) AND (PRINTF(rt0.c2, rt0.c3, v0.c0)))))) UNION ALL SELECT * FROM v0, rt0, vt0 FULL OUTER JOIN t1 ON CAST((((v0.c0))<=((rt0.c2))) AS INTEGER) WHERE ((((((((rt0.c3, rt0.c0, rt0.c3))>=(('', rt0.c1, vt0.c0)))) BETWEEN (((((((((t1.c0)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c0))) AND (PRINTF(rt0.c2, rt0.c3, v0.c0)))) ISNULL));
SELECT ALL * FROM v0 NOT INDEXED, rt0, vt0 FULL OUTER JOIN t1 ON CAST((((v0.c0))<=((rt0.c2))) AS INTEGER);
SELECT DISTINCT vt1.c0 FROM vt1, t1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, t1, vt0 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1, t1, vt0 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1, t1, vt0 NOT INDEXED WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, t1, vt0;
SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1, vt0, vt1 WHERE ((+ (((rt0.c1)|(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1, vt0, vt1 WHERE ((NOT ((+ (((rt0.c1)|(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1, vt0, vt1 WHERE ((((+ (((rt0.c1)|(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1, vt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, t1.c0, rt0.c2, rt0.c3;
SELECT rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((NULL)>=(((((rt0.c3)OR(NULL)))OR(rt0.c3)))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((NULL)>=(((((rt0.c3)OR(NULL)))OR(rt0.c3)))) GROUP BY rt0.c1 HAVING SUM(AVG(GROUP_CONCAT(COUNT(MAX(rt0.c3))))) UNION ALL SELECT rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((NULL)>=(((((rt0.c3)OR(NULL)))OR(rt0.c3)))) GROUP BY rt0.c1 HAVING (NOT (SUM(AVG(GROUP_CONCAT(COUNT(MAX(rt0.c3))))))) UNION ALL SELECT rt0.c1 FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((NULL)>=(((((rt0.c3)OR(NULL)))OR(rt0.c3)))) GROUP BY rt0.c1 HAVING ((SUM(AVG(GROUP_CONCAT(COUNT(MAX(rt0.c3)))))) ISNULL);
SELECT ALL * FROM v0, t1;
SELECT * FROM v0, t1 WHERE (CASE ((((t1.c0)AND(t1.c0)))AND(t1.c0))  WHEN CAST(t1.c0 AS NUMERIC) THEN (~ (t1.c0)) WHEN ((v0.c0) ISNULL) THEN 1.490602516E9 WHEN (+ (NULL)) THEN (+ (t1.c0)) END) UNION ALL SELECT * FROM v0, t1 WHERE ((NOT (CASE ((((t1.c0)AND(t1.c0)))AND(t1.c0))  WHEN CAST(t1.c0 AS NUMERIC) THEN (~ (t1.c0)) WHEN ((v0.c0) ISNULL) THEN 1.490602516E9 WHEN (+ (NULL)) THEN (+ (t1.c0)) END))) UNION ALL SELECT * FROM v0, t1 WHERE (((CASE ((((t1.c0)AND(t1.c0)))AND(t1.c0))  WHEN CAST(t1.c0 AS NUMERIC) THEN (~ (t1.c0)) WHEN ((v0.c0) ISNULL) THEN 1.490602516E9 WHEN (+ (NULL)) THEN (+ (t1.c0)) END) ISNULL));
SELECT ALL * FROM v0, t1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('iZ') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('iZ'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('iZ') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)LIKE(t1.c0)))>(((t1.c0) NOT NULL)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)LIKE(t1.c0)))>(((t1.c0) NOT NULL)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)LIKE(t1.c0)))>(((t1.c0) NOT NULL)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (((rt0.c0)) NOT BETWEEN ((SUM(MIN(vt1.c0)))) AND (((((AVG(vt1.c0), COUNT(*), COUNT(vt1.c0)))<((rt0.c3, rt0.c0, rt0.c1)))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c0)) NOT BETWEEN ((SUM(MIN(vt1.c0)))) AND (((((AVG(vt1.c0), COUNT(*), COUNT(vt1.c0)))<((rt0.c3, rt0.c0, rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (((((rt0.c0)) NOT BETWEEN ((SUM(MIN(vt1.c0)))) AND (((((AVG(vt1.c0), COUNT(*), COUNT(vt1.c0)))<((rt0.c3, rt0.c0, rt0.c1))))))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CAST(CAST(vt1.c0 AS REAL) AS REAL)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((CAST(CAST(vt1.c0 AS REAL) AS REAL)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, t1, vt0, rt0;
SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE ((((rt0.c1, x'', rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), ((rt0.c3)IS(rt0.c1)), (((rt0.c1))<((rt0.c2))))) AND ((((((((((rt0.c0)OR(rt0.c0)))AND('')))AND(rt0.c2)))OR(rt0.c2)), '1796070180', NULL)))) UNION SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE ((NOT ((((rt0.c1, x'', rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), ((rt0.c3)IS(rt0.c1)), (((rt0.c1))<((rt0.c2))))) AND ((((((((((rt0.c0)OR(rt0.c0)))AND('')))AND(rt0.c2)))OR(rt0.c2)), '1796070180', NULL)))))) UNION SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE ((((((rt0.c1, x'', rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), ((rt0.c3)IS(rt0.c1)), (((rt0.c1))<((rt0.c2))))) AND ((((((((((rt0.c0)OR(rt0.c0)))AND('')))AND(rt0.c2)))OR(rt0.c2)), '1796070180', NULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, t1, vt0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((v0.c0) NOTNULL))&((rt0.c0 IN ()))) CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN ((vt1.c0) IS FALSE) THEN ((v0.c0)+(rt0.c1)) ELSE CAST(rt0.c2 AS REAL) END RIGHT OUTER JOIN v0 ON (((('a')OR(((((((((rt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(NULL)))OR(rt0.c0)))))AND(NULLIF(NULL, rt0.c0))) GROUP BY vt1.c0, rt0.c0;
SELECT ALL t1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, t1;
SELECT t1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, t1 WHERE ((((((((((((rt0.c3, rt0.c0, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c3, t1.c0, '-1610700602', 0.008780350976845153)) AND ((rt0.c2, rt0.c1, rt0.c3, x'a7dc', rt0.c1))))OR(((rt0.c0) ISNULL))))AND(t1.c0)))OR(((rt0.c1)/(rt0.c3)))))OR(TRIM(DISTINCT rt0.c2, rt0.c2)))) UNION ALL SELECT t1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, t1 WHERE ((NOT ((((((((((((rt0.c3, rt0.c0, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c3, t1.c0, '-1610700602', 0.008780350976845153)) AND ((rt0.c2, rt0.c1, rt0.c3, x'a7dc', rt0.c1))))OR(((rt0.c0) ISNULL))))AND(t1.c0)))OR(((rt0.c1)/(rt0.c3)))))OR(TRIM(DISTINCT rt0.c2, rt0.c2)))))) UNION ALL SELECT t1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, t1 WHERE ((((((((((((((rt0.c3, rt0.c0, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c3, t1.c0, '-1610700602', 0.008780350976845153)) AND ((rt0.c2, rt0.c1, rt0.c3, x'a7dc', rt0.c1))))OR(((rt0.c0) ISNULL))))AND(t1.c0)))OR(((rt0.c1)/(rt0.c3)))))OR(TRIM(DISTINCT rt0.c2, rt0.c2)))) ISNULL));
SELECT ALL t1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, t1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((- (rt0.c0)) IN (((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((- (rt0.c0)) IN (((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((- (rt0.c0)) IN (((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((LOWER(vt1.c0))OR(CASE WHEN vt1.c0 THEN 'Dwz부' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((~ (vt1.c0)))))AND(((vt1.c0) ISNULL))))OR(vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((LOWER(vt1.c0))OR(CASE WHEN vt1.c0 THEN 'Dwz부' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((~ (vt1.c0)))))AND(((vt1.c0) ISNULL))))OR(vt1.c0 COLLATE RTRIM))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((LOWER(vt1.c0))OR(CASE WHEN vt1.c0 THEN 'Dwz부' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((~ (vt1.c0)))))AND(((vt1.c0) ISNULL))))OR(vt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY rt0.c0, rt0.c2 HAVING SUM(((COUNT(*)) NOT BETWEEN (v0.c0) AND (v0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SUM(((COUNT(*)) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(((COUNT(*)) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL);
SELECT * FROM rt0, t1, vt1, vt0, v0;
SELECT * FROM rt0, t1, vt1, vt0, v0 WHERE (0.15712705945737382 COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, t1, vt1, vt0, v0 WHERE ((NOT (0.15712705945737382 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, t1, vt1, vt0, v0 WHERE (((0.15712705945737382 COLLATE RTRIM) ISNULL));
SELECT * FROM rt0, t1, vt1, vt0, v0;
SELECT DISTINCT * FROM v0, t1, vt1, rt0;
SELECT DISTINCT * FROM v0, t1, vt1, rt0 WHERE (((t1.c0)-(((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0, t1, vt1, rt0 WHERE ((NOT (((t1.c0)-(((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t1, vt1, rt0 WHERE (((((t1.c0)-(((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t1, vt1, rt0;
SELECT vt0.c0, v0.c0, t1.c0, vt1.c0 FROM vt1, vt0 INNER JOIN t1 ON CAST((- (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN t1.c0 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END THEN SQLITE_COMPILEOPTION_USED(vt1.c0) WHEN ((t1.c0)>=(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(t1.c0 AS REAL) END GROUP BY vt0.c0, v0.c0, t1.c0, vt1.c0;
SELECT vt0.c0, v0.c0, t1.c0, vt1.c0 FROM vt1, vt0 INNER JOIN t1 ON CAST((- (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN t1.c0 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END THEN SQLITE_COMPILEOPTION_USED(vt1.c0) WHEN ((t1.c0)>=(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(t1.c0 AS REAL) END WHERE ((((vt0.c0 IN (vt0.c0)))IS(0.0126104231311025))) GROUP BY vt0.c0, v0.c0, t1.c0, vt1.c0 UNION SELECT vt0.c0, v0.c0, t1.c0, vt1.c0 FROM vt1, vt0 INNER JOIN t1 ON CAST((- (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN t1.c0 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END THEN SQLITE_COMPILEOPTION_USED(vt1.c0) WHEN ((t1.c0)>=(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(t1.c0 AS REAL) END WHERE ((NOT ((((vt0.c0 IN (vt0.c0)))IS(0.0126104231311025))))) GROUP BY vt0.c0, v0.c0, t1.c0, vt1.c0 UNION SELECT vt0.c0, v0.c0, t1.c0, vt1.c0 FROM vt1, vt0 INNER JOIN t1 ON CAST((- (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN t1.c0 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END THEN SQLITE_COMPILEOPTION_USED(vt1.c0) WHEN ((t1.c0)>=(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(t1.c0 AS REAL) END WHERE ((((((vt0.c0 IN (vt0.c0)))IS(0.0126104231311025))) ISNULL)) GROUP BY vt0.c0, v0.c0, t1.c0, vt1.c0;
SELECT vt0.c0, v0.c0, t1.c0, vt1.c0 FROM vt1, vt0 INNER JOIN t1 ON CAST((- (vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN t1.c0 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END THEN SQLITE_COMPILEOPTION_USED(vt1.c0) WHEN ((t1.c0)>=(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(t1.c0 AS REAL) END GROUP BY vt0.c0, v0.c0, t1.c0, vt1.c0;
SELECT rt0.c0, t1.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0, v0, t1 GROUP BY rt0.c0, t1.c0, vt1.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, t1.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0, v0, t1 GROUP BY rt0.c0, t1.c0, vt1.c0, rt0.c3, rt0.c1 HAVING SUM(COUNT(COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, t1.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0, v0, t1 GROUP BY rt0.c0, t1.c0, vt1.c0, rt0.c3, rt0.c1 HAVING (NOT (SUM(COUNT(COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, t1.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0, v0, t1 GROUP BY rt0.c0, t1.c0, vt1.c0, rt0.c3, rt0.c1 HAVING ((SUM(COUNT(COUNT(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0, rt0 NOT INDEXED, vt0;
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c0) NOTNULL)) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE ((NOT (((rt0.c0) NOTNULL)))) UNION ALL SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c0) NOTNULL)) ISNULL));
SELECT ALL * FROM v0, rt0 NOT INDEXED, vt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (CASE CASE WHEN x'c14e' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END  WHEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)) THEN (((rt0.c1, rt0.c2, vt0.c0, vt0.c0, rt0.c3))<=((rt0.c1, rt0.c3, NULL, rt0.c1, rt0.c0))) END) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE CASE WHEN x'c14e' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END  WHEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)) THEN (((rt0.c1, rt0.c2, vt0.c0, vt0.c0, rt0.c3))<=((rt0.c1, rt0.c3, NULL, rt0.c1, rt0.c0))) END))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((CASE CASE WHEN x'c14e' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END  WHEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)) THEN (((rt0.c1, rt0.c2, vt0.c0, vt0.c0, rt0.c3))<=((rt0.c1, rt0.c3, NULL, rt0.c1, rt0.c0))) END) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT vt1.c0, t1.c0 FROM vt0, t1, vt1 GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, t1.c0 FROM vt0, t1, vt1 WHERE ((t1.c0 COLLATE RTRIM IN ())) GROUP BY vt1.c0, t1.c0 UNION SELECT vt1.c0, t1.c0 FROM vt0, t1, vt1 WHERE ((NOT ((t1.c0 COLLATE RTRIM IN ())))) GROUP BY vt1.c0, t1.c0 UNION SELECT vt1.c0, t1.c0 FROM vt0, t1, vt1 WHERE ((((t1.c0 COLLATE RTRIM IN ())) ISNULL)) GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, t1.c0 FROM vt0, t1, vt1 GROUP BY vt1.c0, t1.c0;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (json_quote(v0.c0))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (json_quote(v0.c0))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1 HAVING (((('680364461')*(AVG(SUM(AVG(COUNT(*)))))))LIKE((((rt0.c3)) NOT BETWEEN ((TOTAL(SUM(AVG(rt0.c1))))) AND ((MIN(AVG(rt0.c0))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (json_quote(v0.c0))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1 HAVING (NOT ((((('680364461')*(AVG(SUM(AVG(COUNT(*)))))))LIKE((((rt0.c3)) NOT BETWEEN ((TOTAL(SUM(AVG(rt0.c1))))) AND ((MIN(AVG(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (json_quote(v0.c0))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1 HAVING (((((('680364461')*(AVG(SUM(AVG(COUNT(*)))))))LIKE((((rt0.c3)) NOT BETWEEN ((TOTAL(SUM(AVG(rt0.c1))))) AND ((MIN(AVG(rt0.c0)))))))) ISNULL);
SELECT rt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt0, rt0 CROSS JOIN vt1 ON ((((((((t1.c0)OR(LIKE(v0.c0, v0.c0, '0'))))OR((~ (v0.c0)))))AND(json_insert('1911927644', rt0.c3, rt0.c2, rt0.c1, t1.c0))))OR(((t1.c0)*(rt0.c0)))) FULL OUTER JOIN t1 ON CASE WHEN rt0.c0 THEN ((rt0.c0)<(rt0.c0)) ELSE t1.c0 END CROSS JOIN v0 ON (((vt0.c0)<>(rt0.c0)) IN ((((vt0.c0))>=((vt1.c0)))));
SELECT DISTINCT t1.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, v0, t1;
SELECT DISTINCT t1.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, v0, t1 WHERE (((rt0.c1) NOT NULL)) UNION SELECT DISTINCT t1.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, v0, t1 WHERE ((NOT (((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT t1.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, v0, t1 WHERE (((((rt0.c1) NOT NULL)) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, v0, t1;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 WHERE (((((x'')AND(v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (CAST(vt1.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1 WHERE ((NOT (((((x'')AND(v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (CAST(vt1.c0 AS TEXT)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE (((((((x'')AND(v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL rt0.c3, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c3) NOTNULL) COLLATE NOCASE GROUP BY rt0.c3, vt0.c0;
SELECT ALL rt0.c3, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c3) NOTNULL) COLLATE NOCASE GROUP BY rt0.c3, vt0.c0 HAVING AVG(COALESCE(DISTINCT TOTAL(rt0.c0), rt0.c3, COUNT(*), AVG(rt0.c0), SUM(COUNT(AVG(COUNT(GROUP_CONCAT(rt0.c1))))), rt0.c0, vt0.c0, rt0.c2)) UNION ALL SELECT ALL rt0.c3, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c3) NOTNULL) COLLATE NOCASE GROUP BY rt0.c3, vt0.c0 HAVING (NOT (AVG(COALESCE(DISTINCT TOTAL(rt0.c0), rt0.c3, COUNT(*), AVG(rt0.c0), SUM(COUNT(AVG(COUNT(GROUP_CONCAT(rt0.c1))))), rt0.c0, vt0.c0, rt0.c2)))) UNION ALL SELECT ALL rt0.c3, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c3) NOTNULL) COLLATE NOCASE GROUP BY rt0.c3, vt0.c0 HAVING ((AVG(COALESCE(DISTINCT TOTAL(rt0.c0), rt0.c3, COUNT(*), AVG(rt0.c0), SUM(COUNT(AVG(COUNT(GROUP_CONCAT(rt0.c1))))), rt0.c0, vt0.c0, rt0.c2))) ISNULL);
SELECT ALL MAX(SUBSTR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), ((((rt0.c2)OR(x'8497')))AND(rt0.c3)))) FROM t1, vt0, rt0 ORDER BY (((((rt0.c3) BETWEEN (vt0.c0) AND (-1203719768))))<((rt0.c3 COLLATE BINARY)))  NULLS FIRST;
SELECT ALL vt1.c0, v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN vt1 ON 0.6994357337781177 INNER JOIN t1 ON (+ ((((t1.c0))=((t1.c0)))));
SELECT vt1.c0, v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN vt1 ON 0.6994357337781177 INNER JOIN t1 ON (+ ((((t1.c0))=((t1.c0))))) WHERE (((CAST(v0.c0 AS NUMERIC))==((+ (t1.c0))))) UNION ALL SELECT vt1.c0, v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN vt1 ON 0.6994357337781177 INNER JOIN t1 ON (+ ((((t1.c0))==((t1.c0))))) WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))==((+ (t1.c0))))))) UNION ALL SELECT vt1.c0, v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN vt1 ON 0.6994357337781177 INNER JOIN t1 ON (+ ((((t1.c0))=((t1.c0))))) WHERE (((((CAST(v0.c0 AS NUMERIC))==((+ (t1.c0))))) ISNULL));
SELECT ALL vt1.c0, v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN vt1 ON 0.6994357337781177 INNER JOIN t1 ON (+ ((((t1.c0))=((t1.c0)))));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt1, vt0 CROSS JOIN t1 ON (((+ (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (NULLIF(t1.c0, t1.c0)));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt1, vt0 CROSS JOIN t1 ON (((+ (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (NULLIF(t1.c0, t1.c0))) WHERE (CAST(((((vt1.c0)AND(t1.c0)))AND(vt1.c0)) AS BLOB)) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt1, vt0 CROSS JOIN t1 ON (((+ (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (NULLIF(t1.c0, t1.c0))) WHERE ((NOT (CAST(((((vt1.c0)AND(t1.c0)))AND(vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt1, vt0 CROSS JOIN t1 ON (((+ (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (NULLIF(t1.c0, t1.c0))) WHERE (((CAST(((((vt1.c0)AND(t1.c0)))AND(vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt1, vt0 CROSS JOIN t1 ON (((+ (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (NULLIF(t1.c0, t1.c0)));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((103943976)==(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((103943976)==(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((103943976)=(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT TOTAL(((rt0.c3)%(CASE v0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN 0.46555440839994944 WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END))) FROM vt1, v0, t1, vt0, rt0;
SELECT ALL * FROM rt0, vt0, t1, v0, vt1;
SELECT ALL * FROM rt0 NOT INDEXED, vt0, t1, v0, vt1 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0, vt0, t1, v0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0, vt0, t1, v0, vt1 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0, vt0, t1, v0, vt1;
SELECT DISTINCT * FROM t1, vt0 NOT INDEXED, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT(CASE WHEN vt1.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)) CROSS JOIN rt0 ON NULL;
SELECT ALL rt0.c0 FROM vt1, v0, vt0, rt0, t1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, v0, vt0, rt0, t1 WHERE (CASE LIKELIHOOD(v0.c0, 0.40355273583520945)  WHEN ((rt0.c0)<(v0.c0)) THEN '32556355' ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, v0 NOT INDEXED, vt0, rt0, t1 WHERE ((NOT (CASE LIKELIHOOD(v0.c0, 0.40355273583520945)  WHEN ((rt0.c0)<(v0.c0)) THEN '32556355' ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, v0, vt0, rt0, t1 WHERE (((CASE LIKELIHOOD(v0.c0, 0.40355273583520945)  WHEN ((rt0.c0)<(v0.c0)) THEN '32556355' ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, v0, vt0, rt0, t1 GROUP BY rt0.c0;
SELECT ALL t1.c0 FROM vt1, t1, rt0, vt0 GROUP BY t1.c0;
SELECT t1.c0 FROM vt1, t1, rt0, vt0 GROUP BY t1.c0 HAVING CASE WHEN MIN(t1.c0) THEN MAX(MAX(GROUP_CONCAT(rt0.c0))) ELSE MAX(TOTAL(rt0.c0)) END COLLATE BINARY UNION ALL SELECT t1.c0 FROM vt1, t1, rt0, vt0 GROUP BY t1.c0 HAVING (NOT (CASE WHEN MIN(t1.c0) THEN MAX(MAX(GROUP_CONCAT(rt0.c0))) ELSE MAX(TOTAL(rt0.c0)) END COLLATE BINARY)) UNION ALL SELECT t1.c0 FROM vt1, t1, rt0, vt0 GROUP BY t1.c0 HAVING ((CASE WHEN MIN(t1.c0) THEN MAX(MAX(GROUP_CONCAT(rt0.c0))) ELSE MAX(TOTAL(rt0.c0)) END COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt1, v0, rt0, vt0;
SELECT ALL * FROM vt1, v0, rt0, vt0 WHERE (((((rt0.c2)IS(rt0.c2)))|(((vt1.c0)&(rt0.c2))))) UNION ALL SELECT * FROM vt1, v0, rt0, vt0 WHERE ((NOT (((((rt0.c2)IS(rt0.c2)))|(((vt1.c0)&(rt0.c2))))))) UNION ALL SELECT * FROM vt1, v0, rt0, vt0 WHERE (((((((rt0.c2)IS(rt0.c2)))|(((vt1.c0)&(rt0.c2))))) ISNULL));
SELECT ALL * FROM vt1, v0, rt0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (IFNULL(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0)%(vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (IFNULL(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0)%(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((IFNULL(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0)%(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((('1624621625', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((('1624621625', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((vt0.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((('1624621625', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((vt0.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)IS NOT(SUM(COUNT(vt0.c0))))) NOT NULL) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)IS NOT(SUM(COUNT(vt0.c0))))) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)IS NOT(SUM(COUNT(vt0.c0))))) NOT NULL)) ISNULL);
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c0));
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c0)) WHERE (((((rt0.c3 IN (rt0.c1)), ((rt0.c1)!=('1858091393')), ((rt0.c3) IS FALSE)))=((rt0.c2, CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL))))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c0)) WHERE ((NOT (((((rt0.c3 IN (rt0.c1)), ((rt0.c1)<>('1858091393')), ((rt0.c3) IS FALSE)))=((rt0.c2, CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c0)) WHERE (((((((rt0.c3 IN (rt0.c1)), ((rt0.c1)<>('1858091393')), ((rt0.c3) IS FALSE)))=((rt0.c2, CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL))))) ISNULL));
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c0));
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0 COLLATE RTRIM))<=((vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt1.c0 COLLATE RTRIM))<=((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c0 COLLATE RTRIM))<=((vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (x'') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((x'') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0;
SELECT t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0;
SELECT t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0 FROM v0, t1, vt0, rt0, vt1 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0, v0, t1;
SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0, v0, t1 WHERE (CASE WHEN ((rt0.c0)-(rt0.c1)) THEN LIKELIHOOD(vt1.c0, 0.09324621822594881) ELSE ((((v0.c0)AND(rt0.c1)))AND(rt0.c1)) END) UNION ALL SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0, v0, t1 WHERE ((NOT (CASE WHEN ((rt0.c0)-(rt0.c1)) THEN LIKELIHOOD(vt1.c0, 0.09324621822594881) ELSE ((((v0.c0)AND(rt0.c1)))AND(rt0.c1)) END))) UNION ALL SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0, v0, t1 WHERE (((CASE WHEN ((rt0.c0)-(rt0.c1)) THEN LIKELIHOOD(vt1.c0, 0.09324621822594881) ELSE ((((v0.c0)AND(rt0.c1)))AND(rt0.c1)) END) ISNULL));
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0, v0, t1;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t1 ON ((NULLIF(1879036428, t1.c0))|(((v0.c0)AND(vt0.c0)))) CROSS JOIN vt0 ON CAST(((v0.c0)*('nveG')) AS BLOB);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (((t1.c0)<=(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (((t1.c0)<=(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (((t1.c0)<=(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING AVG(AVG(t1.c0)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (AVG(AVG(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG(AVG(t1.c0))) ISNULL);
SELECT MIN(vt1.c0) FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) ISNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((('␂QJ86v')AND((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((('␂QJ86v')AND((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((('␂QJ86v')AND((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t1, vt1;
SELECT DISTINCT * FROM t1, vt1 WHERE (((0xffffffffb42f1e4b) IS FALSE)) UNION SELECT DISTINCT * FROM t1, vt1 WHERE ((NOT (((0Xffffffffb42f1e4b) IS FALSE)))) UNION SELECT DISTINCT * FROM t1, vt1 WHERE (((((0xffffffffb42f1e4b) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t1, vt1;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((CAST(rt0.c3 AS TEXT) IN ())) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((CAST(rt0.c3 AS TEXT) IN ())))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c3 AS TEXT) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT MIN(0.1366214944663755) FROM rt0, v0, vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((NOT (vt0.c0)) IN ((- (vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((NOT (vt0.c0)) IN ((- (vt1.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((NOT (vt0.c0)) IN ((- (vt1.c0))))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM t1, vt0;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((t1.c0) IS FALSE) IN ('-1397058582', ((x'8fa5') BETWEEN (vt0.c0) AND ('-1445018251'))))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((NOT ((((t1.c0) IS FALSE) IN ('-1397058582', ((x'8fa5') BETWEEN (vt0.c0) AND ('-1445018251'))))))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((((((t1.c0) IS FALSE) IN ('-1397058582', ((x'8fa5') BETWEEN (vt0.c0) AND ('-1445018251'))))) ISNULL));
SELECT DISTINCT * FROM t1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>=(vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>=(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>=(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (~ (SUM(rt0.c3))) UNION ALL SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 NOT INDEXED GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((~ (SUM(rt0.c3))))) UNION ALL SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (((~ (SUM(rt0.c3)))) ISNULL);
SELECT ALL vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (~ (SUM(rt0.c3))) UNION ALL SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 NOT INDEXED GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((~ (SUM(rt0.c3))))) UNION ALL SELECT vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (((~ (SUM(rt0.c3)))) ISNULL);
SELECT ALL vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1, v0, t1 GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0, vt0;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0, vt0 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN ((((rt0.c0))<>((rt0.c1)))) AND (CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0, vt0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) BETWEEN ((((rt0.c0))!=((rt0.c1)))) AND (CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END))))) UNION ALL SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0, vt0 WHERE (((((CAST(v0.c0 AS REAL)) BETWEEN ((((rt0.c0))!=((rt0.c1)))) AND (CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END))) ISNULL));
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt1, v0, rt0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt1, vt0;
SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt1, vt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM t1, rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM t1, rt0, vt0, v0, vt1 WHERE ((((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2) BETWEEN (t1.c0) AND (t1.c0))) AND (((((rt0.c2)AND(t1.c0)))OR(t1.c0))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM t1, rt0, vt0, v0 NOT INDEXED, vt1 WHERE ((NOT ((((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2) BETWEEN (t1.c0) AND (t1.c0))) AND (((((rt0.c2)AND(t1.c0)))OR(t1.c0))))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM t1, rt0, vt0, v0, vt1 WHERE ((((((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2) BETWEEN (t1.c0) AND (t1.c0))) AND (((((rt0.c2)AND(t1.c0)))OR(t1.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0 FROM t1, rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM v0 CROSS JOIN t1 ON (((vt1.c0) NOT NULL) IN (0.3940065361275431)) CROSS JOIN vt1 ON ((((((t1.c0)+(rt0.c1)))OR(CASE rt0.c1  WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((((rt0.c2)AND(vt1.c0)))AND('-1652562642')))) FULL OUTER JOIN vt0 ON (NOT (rt0.c1)) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((((((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((x'a43a', v0.c0, rt0.c2)) AND ((rt0.c0, t1.c0, 0x58dfd49c))))AND((NOT (t1.c0)))))AND((rt0.c1 IN ()))))AND(((v0.c0)/(rt0.c1)))))OR(((t1.c0) IS TRUE))) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)==(rt0.c0)) AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)=(rt0.c0)) AS REAL)))) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE (((CAST(((rt0.c2)==(rt0.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM v0, vt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0)>(vt1.c0))));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM v0, vt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0)>(vt1.c0)))) WHERE (((((rt0.c3) NOT NULL))-(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM v0, vt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0)>(vt1.c0)))) WHERE ((NOT (((((rt0.c3) NOT NULL))-(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM v0, vt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0)>(vt1.c0)))) WHERE (((((((rt0.c3) NOT NULL))-(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM v0, vt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0)>(vt1.c0))));
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c0, ((vt0.c0)>=(vt1.c0)), (vt1.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<<(NULL))))<>((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)), CAST('Z?h' AS REAL), ((vt0.c0)>(vt1.c0)), vt0.c0, x'34d0')))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0, ((vt0.c0)>=(vt1.c0)), (vt1.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<<(NULL))))<>((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)), CAST('Z?h' AS REAL), ((vt0.c0)>(vt1.c0)), vt0.c0, x'34d0')))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c0, ((vt0.c0)>=(vt1.c0)), (vt1.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<<(NULL))))!=((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)), CAST('Z?h' AS REAL), ((vt0.c0)>(vt1.c0)), vt0.c0, x'34d0')))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt0.c1, t1.c0, rt0.c3, vt0.c0, rt0.c0 FROM t1 FULL OUTER JOIN vt0 ON CASE ((rt0.c2) IS TRUE)  WHEN ((rt0.c3) IS FALSE) THEN ((((((((v0.c0)AND(v0.c0)))OR(t1.c0)))OR(rt0.c2)))OR(t1.c0)) WHEN (~ (vt0.c0)) THEN (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN TYPEOF(DISTINCT rt0.c2) THEN ((rt0.c3)IS NOT(rt0.c1)) WHEN ((vt1.c0) NOT BETWEEN ('	ro4*/') AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (x'2ef3')) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END INNER JOIN v0 ON x'' RIGHT OUTER JOIN vt1 ON (((((rt0.c3))!=((t1.c0)))) ISNULL) CROSS JOIN rt0 ON NULL GROUP BY rt0.c1, t1.c0, rt0.c3, vt0.c0, rt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0)>>(v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)>>(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0)>>(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0, v0, t1;
SELECT DISTINCT rt0.c1 FROM vt1, rt0, v0, t1 WHERE (CASE rt0.c0  WHEN t1.c0 THEN rt0.c3 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE t1.c0 END COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0, v0, t1 WHERE ((NOT (CASE rt0.c0  WHEN t1.c0 THEN rt0.c3 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE t1.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0, v0, t1 WHERE (((CASE rt0.c0  WHEN t1.c0 THEN rt0.c3 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE t1.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0, v0, t1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((NULL)AND(v0.c0 COLLATE RTRIM)))AND(x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((NULL)AND(v0.c0 COLLATE RTRIM)))AND(x''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((NULL)AND(v0.c0 COLLATE RTRIM)))AND(x''))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((('ⴍ%' IN ()), v0.c0 COLLATE NOCASE, v0.c0)) AND (((((v0.c0))<(('1820403041'))), CAST(v0.c0 AS TEXT), (('-2044494470')AND(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((('ⴍ%' IN ()), v0.c0 COLLATE NOCASE, v0.c0)) AND (((((v0.c0))<(('1820403041'))), CAST(v0.c0 AS TEXT), (('-2044494470')AND(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((('ⴍ%' IN ()), v0.c0 COLLATE NOCASE, v0.c0)) AND (((((v0.c0))<(('1820403041'))), CAST(v0.c0 AS TEXT), (('-2044494470')AND(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ('磧gH|\rS') UNION SELECT DISTINCT * FROM vt0, vt1 NOT INDEXED WHERE ((NOT ('磧gH|\rS'))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((('磧gH|\rS') ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT v0.c0, rt0.c1, vt0.c0, t1.c0 FROM vt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE NOCASE) ISNULL) FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ABS(((((((((rt0.c0)OR(t1.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(x''))) INNER JOIN vt1 ON CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER) GROUP BY v0.c0, rt0.c1, vt0.c0, t1.c0;
SELECT ALL vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt1, v0, rt0, vt0, t1 GROUP BY vt0.c0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((- (v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((- (v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((- (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (~ (CAST(t1.c0 AS NUMERIC))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) COLLATE NOCASE;
SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (~ (CAST(t1.c0 AS NUMERIC))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) COLLATE NOCASE WHERE ((((rt0.c0)) NOT BETWEEN ((0.5032245805477883)) AND ((CAST(rt0.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (~ (CAST(t1.c0 AS NUMERIC))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) COLLATE NOCASE WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((0.5032245805477883)) AND ((CAST(rt0.c0 AS TEXT))))))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (~ (CAST(t1.c0 AS NUMERIC))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) COLLATE NOCASE WHERE ((((((rt0.c0)) NOT BETWEEN ((0.5032245805477883)) AND ((CAST(rt0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (~ (CAST(t1.c0 AS NUMERIC))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) COLLATE NOCASE;
SELECT ALL v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((vt0.c0 COLLATE NOCASE))) INNER JOIN vt0 ON (LIKELY(DISTINCT rt0.c3) IN ()) CROSS JOIN rt0 ON CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0;
SELECT v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((vt0.c0 COLLATE NOCASE))) INNER JOIN vt0 ON (LIKELY(DISTINCT rt0.c3) IN ()) CROSS JOIN rt0 ON CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM WHERE ((TYPEOF(v0.c0) IN (((rt0.c1)+(vt1.c0))))) GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0 UNION SELECT ALL v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((vt0.c0 COLLATE NOCASE))) INNER JOIN vt0 ON (LIKELY(DISTINCT rt0.c3) IN ()) CROSS JOIN rt0 ON CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM WHERE ((NOT ((TYPEOF(v0.c0) IN (((rt0.c1)+(vt1.c0))))))) GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0 UNION SELECT v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((vt0.c0 COLLATE NOCASE))) INNER JOIN vt0 ON (LIKELY(DISTINCT rt0.c3) IN ()) CROSS JOIN rt0 ON CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM WHERE ((((TYPEOF(v0.c0) IN (((rt0.c1)+(vt1.c0))))) ISNULL)) GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((vt0.c0 COLLATE NOCASE))) INNER JOIN vt0 ON (LIKELY(DISTINCT rt0.c3) IN ()) CROSS JOIN rt0 ON CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, t1.c0, vt1.c0, v0.c0, rt0.c1 FROM v0, rt0, vt1 INNER JOIN vt0 ON ((json_valid(rt0.c1)) IS FALSE) LEFT OUTER JOIN t1 ON CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 0xffffffffa2a3572b END COLLATE NOCASE GROUP BY rt0.c0, vt0.c0, rt0.c3, t1.c0, vt1.c0, v0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c3, t1.c0, vt1.c0, v0.c0, rt0.c1 FROM v0, rt0, vt1 INNER JOIN vt0 ON ((json_valid(rt0.c1)) IS FALSE) LEFT OUTER JOIN t1 ON CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 0Xffffffffa2a3572b END COLLATE NOCASE GROUP BY rt0.c0, vt0.c0, rt0.c3, t1.c0, vt1.c0, v0.c0, rt0.c1 HAVING SUM(((COUNT(*))OR('-1447787205'))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, t1.c0, vt1.c0, v0.c0, rt0.c1 FROM v0, rt0, vt1 INNER JOIN vt0 ON ((json_valid(rt0.c1)) IS FALSE) LEFT OUTER JOIN t1 ON CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 0Xffffffffa2a3572b END COLLATE NOCASE GROUP BY rt0.c0, vt0.c0, rt0.c3, t1.c0, vt1.c0, v0.c0, rt0.c1 HAVING (NOT (SUM(((COUNT(*))OR('-1447787205'))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, t1.c0, vt1.c0, v0.c0, rt0.c1 FROM v0, rt0, vt1 INNER JOIN vt0 ON ((json_valid(rt0.c1)) IS FALSE) LEFT OUTER JOIN t1 ON CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 0xffffffffa2a3572b END COLLATE NOCASE GROUP BY rt0.c0, vt0.c0, rt0.c3, t1.c0, vt1.c0, v0.c0, rt0.c1 HAVING ((SUM(((COUNT(*))OR('-1447787205')))) ISNULL);
SELECT * FROM vt1, rt0, vt0, v0;
SELECT ALL * FROM vt1, rt0, vt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))<(rt0.c3))) UNION ALL SELECT * FROM vt1, rt0, vt0, v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER))<(rt0.c3))))) UNION ALL SELECT * FROM vt1, rt0, vt0, v0 WHERE (((((CAST(v0.c0 AS INTEGER))<(rt0.c3))) ISNULL));
SELECT * FROM vt1, rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((vt0.c0)%(vt0.c0)))!=(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((vt0.c0)%(vt0.c0)))<>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((vt0.c0)%(vt0.c0)))<>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, t1.c0, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN t1 ON ((('1887876422' IN (rt0.c1))) NOT BETWEEN ((((rt0.c0))>=((vt1.c0)))) AND ((- (vt1.c0)))) INNER JOIN rt0 ON CASE CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c2) ISNULL) ELSE vt1.c0 COLLATE RTRIM END GROUP BY rt0.c1, t1.c0, vt1.c0, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((v0.c0) NOT BETWEEN (v0.c0) AND (SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0) NOT BETWEEN (v0.c0) AND (SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((v0.c0) NOT BETWEEN (v0.c0) AND (SUM(v0.c0))))) ISNULL);
SELECT vt0.c0, rt0.c3, vt1.c0, t1.c0, rt0.c1, rt0.c0 FROM t1, rt0, vt1, vt0;
SELECT vt0.c0, rt0.c3, vt1.c0, t1.c0, rt0.c1, rt0.c0 FROM t1, rt0, vt1, vt0 WHERE (rt0.c3) UNION ALL SELECT vt0.c0, rt0.c3, vt1.c0, t1.c0, rt0.c1, rt0.c0 FROM t1, rt0, vt1, vt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL vt0.c0, rt0.c3, vt1.c0, t1.c0, rt0.c1, rt0.c0 FROM t1, rt0, vt1, vt0 WHERE (((rt0.c3) ISNULL));
SELECT vt0.c0, rt0.c3, vt1.c0, t1.c0, rt0.c1, rt0.c0 FROM t1, rt0, vt1, vt0;
SELECT DISTINCT rt0.c0, vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt0, rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c0, vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt0, rt0 NATURAL JOIN vt1 WHERE ((((((rt0.c3)) BETWEEN ((x'')) AND (('KK')))) NOT BETWEEN (((rt0.c2)+(rt0.c3))) AND (DATETIME(vt0.c0, vt1.c0, 0.7351358966910359)))) UNION SELECT DISTINCT rt0.c0, vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt0, rt0 NATURAL JOIN vt1 WHERE ((NOT ((((((rt0.c3)) BETWEEN ((x'')) AND (('KK')))) NOT BETWEEN (((rt0.c2)+(rt0.c3))) AND (DATETIME(vt0.c0, vt1.c0, 0.7351358966910359)))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt0, rt0 NATURAL JOIN vt1 WHERE ((((((((rt0.c3)) BETWEEN ((x'')) AND (('KK')))) NOT BETWEEN (((rt0.c2)+(rt0.c3))) AND (DATETIME(vt0.c0, vt1.c0, 0.7351358966910359)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt0, rt0 NATURAL JOIN vt1;
SELECT rt0.c0, rt0.c1 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0, vt1, v0, rt0 WHERE ((((((vt0.c0, rt0.c1, 'm6l7\nbA쑪n', vt1.c0, 0xffffffffdf4b8f6c)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, rt0.c0, vt0.c0)))) BETWEEN (((vt1.c0)&(rt0.c2))) AND (((rt0.c2)||(vt1.c0))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt0, vt1, v0, rt0 WHERE ((NOT ((((((vt0.c0, rt0.c1, 'm6l7\nbA쑪n', vt1.c0, 0xffffffffdf4b8f6c)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, rt0.c0, vt0.c0)))) BETWEEN (((vt1.c0)&(rt0.c2))) AND (((rt0.c2)||(vt1.c0))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt0, vt1, v0, rt0 WHERE ((((((((vt0.c0, rt0.c1, 'm6l7\nbA쑪n', vt1.c0, 0Xffffffffdf4b8f6c)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, rt0.c0, vt0.c0)))) BETWEEN (((vt1.c0)&(rt0.c2))) AND (((rt0.c2)||(vt1.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((((((COUNT(MIN(TOTAL(COUNT(vt0.c0)))))GLOB(vt0.c0)))OR((((MAX(MIN(SUM(vt0.c0))), COUNT(*), COUNT(*), vt1.c0, MAX(MIN(NULL)))) BETWEEN ((COUNT(GROUP_CONCAT(vt1.c0)), vt0.c0, vt1.c0, GROUP_CONCAT(COUNT(SUM(vt0.c0))), vt0.c0)) AND ((0.6130649191036848, MAX(SUM(vt0.c0)), COUNT(MIN(MIN(vt1.c0))), vt1.c0, MAX(vt1.c0)))))))OR((~ (MAX(-572919277))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((((((COUNT(MIN(TOTAL(COUNT(vt0.c0)))))GLOB(vt0.c0)))OR((((MAX(MIN(SUM(vt0.c0))), COUNT(*), COUNT(*), vt1.c0, MAX(MIN(NULL)))) BETWEEN ((COUNT(GROUP_CONCAT(vt1.c0)), vt0.c0, vt1.c0, GROUP_CONCAT(COUNT(SUM(vt0.c0))), vt0.c0)) AND ((0.6130649191036848, MAX(SUM(vt0.c0)), COUNT(MIN(MIN(vt1.c0))), vt1.c0, MAX(vt1.c0)))))))OR((~ (MAX(-572919277))))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((((((((COUNT(MIN(TOTAL(COUNT(vt0.c0)))))GLOB(vt0.c0)))OR((((MAX(MIN(SUM(vt0.c0))), COUNT(*), COUNT(*), vt1.c0, MAX(MIN(NULL)))) BETWEEN ((COUNT(GROUP_CONCAT(vt1.c0)), vt0.c0, vt1.c0, GROUP_CONCAT(COUNT(SUM(vt0.c0))), vt0.c0)) AND ((0.6130649191036848, MAX(SUM(vt0.c0)), COUNT(MIN(MIN(vt1.c0))), vt1.c0, MAX(vt1.c0)))))))OR((~ (MAX(-572919277)))))) ISNULL);
SELECT v0.c0 FROM v0, t1;
SELECT v0.c0 FROM v0, t1 WHERE (x'2367') UNION ALL SELECT ALL v0.c0 FROM v0, t1 WHERE ((NOT (x'2367'))) UNION ALL SELECT ALL v0.c0 FROM v0, t1 WHERE (((x'2367') ISNULL));
SELECT v0.c0 FROM v0, t1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (TYPEOF(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (TYPEOF(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT * FROM v0 WHERE (((TYPEOF(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))>(-1.17288731E9))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))>(-1.17288731E9))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))>(-1.17288731E9))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING MIN(GROUP_CONCAT(MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (MIN(GROUP_CONCAT(MAX(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((MIN(GROUP_CONCAT(MAX(v0.c0)))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS REAL)) UNION ALL SELECT * FROM t1 WHERE ((NOT (CAST(t1.c0 AS REAL)))) UNION ALL SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON (~ (CAST('-926556503' AS REAL))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)/(vt1.c0)))+(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt1 ON CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER);
SELECT ALL rt0.c0, rt0.c1, rt0.c3, t1.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0 COLLATE NOCASE)LIKE((((vt0.c0, rt0.c2, NULL, rt0.c0, rt0.c2))>=((vt1.c0, rt0.c3, 0.4432668856015194, rt0.c3, t1.c0))))) FULL OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE)||(((rt0.c3)GLOB(vt0.c0)))) FULL OUTER JOIN t1 ON '㚜5yT_7cᢢ' GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c0, vt0.c0;
SELECT t1.c0 FROM rt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM rt0, t1 NOT INDEXED GROUP BY t1.c0 HAVING COUNT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) UNION ALL SELECT t1.c0 FROM rt0, t1 GROUP BY t1.c0 HAVING (NOT (COUNT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT ALL t1.c0 FROM rt0, t1 GROUP BY t1.c0 HAVING ((COUNT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL);
SELECT t1.c0 FROM rt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM rt0, t1 NOT INDEXED GROUP BY t1.c0 HAVING COUNT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) UNION ALL SELECT t1.c0 FROM rt0, t1 GROUP BY t1.c0 HAVING (NOT (COUNT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT ALL t1.c0 FROM rt0, t1 GROUP BY t1.c0 HAVING ((COUNT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL);
SELECT t1.c0 FROM rt0, t1 GROUP BY t1.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t1, rt0, v0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t1, rt0, v0 WHERE ((+ (CAST(0xffffffffcf5f67b4 AS NUMERIC)))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t1, rt0, v0 WHERE ((NOT ((+ (CAST(0Xffffffffcf5f67b4 AS NUMERIC)))))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t1, rt0, v0 WHERE ((((+ (CAST(0Xffffffffcf5f67b4 AS NUMERIC)))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t1, rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((rt0.c2)IS NOT(rt0.c3))))>=((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c2)IS NOT(rt0.c3))))>=((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((((rt0.c2)IS NOT(rt0.c3))))>=((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, vt0 WHERE ((((((vt0.c0, rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND (('261057997', rt0.c0, rt0.c2))))>>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0, rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND (('261057997', rt0.c0, rt0.c2))))>>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, vt0 WHERE ((((((((vt0.c0, rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND (('261057997', rt0.c0, rt0.c2))))>>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, vt1.c0, v0.c0;
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, vt1.c0, v0.c0 HAVING MIN(TOTAL(MIN(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, vt1.c0, v0.c0 HAVING (NOT (MIN(TOTAL(MIN(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, vt1.c0, v0.c0 HAVING ((MIN(TOTAL(MIN(MAX(vt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0, v0;
SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))OR(((rt0.c3) BETWEEN (x'') AND (rt0.c0)))))AND(vt0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))OR(((rt0.c3) BETWEEN (x'') AND (rt0.c0)))))AND(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE ((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))OR(((rt0.c3) BETWEEN (x'') AND (rt0.c0)))))AND(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c0, rt0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0, v0, vt0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE (LIKELY(DISTINCT rt0.c0 COLLATE BINARY)) UNION SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE ((NOT (LIKELY(DISTINCT rt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE (((LIKELY(DISTINCT rt0.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CAST((NOT (vt0.c0)) AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST((NOT (vt0.c0)) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CAST((NOT (vt0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0;
SELECT t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0 HAVING '-878891654' UNION ALL SELECT t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0 HAVING (NOT ('-878891654')) UNION ALL SELECT ALL t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0 HAVING (('-878891654') ISNULL);
SELECT ALL t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0;
SELECT t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0 HAVING '-878891654' UNION ALL SELECT t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0 HAVING (NOT ('-878891654')) UNION ALL SELECT ALL t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0 HAVING (('-878891654') ISNULL);
SELECT ALL t1.c0, vt1.c0, vt0.c0 FROM vt0, t1, vt1 GROUP BY t1.c0, vt1.c0, vt0.c0;
SELECT ALL vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt1;
SELECT ALL vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS REAL)))))) UNION ALL SELECT vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt1 WHERE (((((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS REAL)))) ISNULL));
SELECT ALL vt1.c0, t1.c0, v0.c0 FROM v0, t1, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((v0.c0))<>(((+ (v0.c0)))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT ((((v0.c0))!=(((+ (v0.c0)))))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((((v0.c0))<>(((+ (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0, v0 LEFT OUTER JOIN vt1 ON (((v0.c0, rt0.c2, vt1.c0))>=((rt0.c2, vt0.c0, vt1.c0))) COLLATE BINARY GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0, v0 LEFT OUTER JOIN vt1 ON (((v0.c0, rt0.c2, vt1.c0))>=((rt0.c2, vt0.c0, vt1.c0))) COLLATE BINARY WHERE (rt0.c2) GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0, v0 LEFT OUTER JOIN vt1 ON (((v0.c0, rt0.c2, vt1.c0))>=((rt0.c2, vt0.c0, vt1.c0))) COLLATE BINARY WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3 UNION SELECT rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0, v0 LEFT OUTER JOIN vt1 ON (((v0.c0, rt0.c2, vt1.c0))>=((rt0.c2, vt0.c0, vt1.c0))) COLLATE BINARY WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0, v0 LEFT OUTER JOIN vt1 ON (((v0.c0, rt0.c2, vt1.c0))>=((rt0.c2, vt0.c0, vt1.c0))) COLLATE BINARY GROUP BY rt0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM v0, rt0, vt1, t1, vt0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM v0, rt0, vt1, t1, vt0 GROUP BY vt0.c0, v0.c0, t1.c0 HAVING GROUP_CONCAT(((rt0.c0)GLOB(TOTAL(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, v0.c0, t1.c0 FROM v0, rt0, vt1, t1, vt0 GROUP BY vt0.c0, v0.c0, t1.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c0)GLOB(TOTAL(COUNT(*))))))) UNION ALL SELECT vt0.c0, v0.c0, t1.c0 FROM v0, rt0, vt1, t1, vt0 GROUP BY vt0.c0, v0.c0, t1.c0 HAVING ((GROUP_CONCAT(((rt0.c0)GLOB(TOTAL(COUNT(*)))))) ISNULL);
SELECT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c3)) NOT BETWEEN (ABS(DISTINCT rt0.c3)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))));
SELECT ALL rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c3)) NOT BETWEEN (ABS(DISTINCT rt0.c3)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN (((rt0.c0))==(('R删f?+u165'))) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END WHEN ((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)) THEN 0.8217861249481883 WHEN '0.0707578689850561' THEN ((rt0.c2)||(vt0.c0)) WHEN UPPER(x'8d64') THEN ((((rt0.c0)AND(rt0.c2)))AND(NULL)) END) UNION ALL SELECT ALL rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c3)) NOT BETWEEN (ABS(DISTINCT rt0.c3)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE ((NOT (CASE WHEN v0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN (((rt0.c0))=(('R删f?+u165'))) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END WHEN ((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)) THEN 0.8217861249481883 WHEN '0.0707578689850561' THEN ((rt0.c2)||(vt0.c0)) WHEN UPPER(x'8d64') THEN ((((rt0.c0)AND(rt0.c2)))AND(NULL)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c3)) NOT BETWEEN (ABS(DISTINCT rt0.c3)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (((CASE WHEN v0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN (((rt0.c0))=(('R删f?+u165'))) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END WHEN ((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)) THEN 0.8217861249481883 WHEN '0.0707578689850561' THEN ((rt0.c2)||(vt0.c0)) WHEN UPPER(x'8d64') THEN ((((rt0.c0)AND(rt0.c2)))AND(NULL)) END) ISNULL));
SELECT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c3)) NOT BETWEEN (ABS(DISTINCT rt0.c3)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN t1 ON CASE WHEN CASE WHEN vt1.c0 THEN t1.c0 WHEN x'' THEN v0.c0 WHEN t1.c0 THEN x'ec16' END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)) END INNER JOIN rt0 ON ((((vt1.c0)|('-73339872'))) NOT BETWEEN (NULL) AND (v0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON 0.879987062658868 COLLATE NOCASE COLLATE RTRIM;
SELECT rt0.c0, rt0.c2 FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(vt0.c0)))AND(x'aa93e7e3')))AND(((rt0.c0)>(rt0.c3)))) INNER JOIN t1 ON (((- (vt0.c0))) BETWEEN (MAX(t1.c0, rt0.c2)) AND ((((vt0.c0))=((v0.c0))))) INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(vt0.c0)))AND(x'aa93e7e3')))AND(((rt0.c0)>(rt0.c3)))) INNER JOIN t1 ON (((- (vt0.c0))) BETWEEN (MAX(t1.c0, rt0.c2)) AND ((((vt0.c0))==((v0.c0))))) INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (((((rt0.c2)OR((rt0.c3 IN ()))))AND((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(vt0.c0)))AND(x'aa93e7e3')))AND(((rt0.c0)>(rt0.c3)))) INNER JOIN t1 ON (((- (vt0.c0))) BETWEEN (MAX(t1.c0, rt0.c2)) AND ((((vt0.c0))==((v0.c0))))) INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE ((NOT (((((rt0.c2)OR((rt0.c3 IN ()))))AND((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(vt0.c0)))AND(x'aa93e7e3')))AND(((rt0.c0)>(rt0.c3)))) INNER JOIN t1 ON (((- (vt0.c0))) BETWEEN (MAX(t1.c0, rt0.c2)) AND ((((vt0.c0))==((v0.c0))))) INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (((((((rt0.c2)OR((rt0.c3 IN ()))))AND((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, vt0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(vt0.c0)))AND(x'aa93e7e3')))AND(((rt0.c0)>(rt0.c3)))) INNER JOIN t1 ON (((- (vt0.c0))) BETWEEN (MAX(t1.c0, rt0.c2)) AND ((((vt0.c0))=((v0.c0))))) INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM vt1, vt0, rt0, t1, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, vt0, rt0, t1 NOT INDEXED, v0 GROUP BY rt0.c1 HAVING ((COUNT(v0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN GROUP_CONCAT(rt0.c0) THEN v0.c0 WHEN v0.c0 THEN NULL END)) UNION ALL SELECT rt0.c1 FROM vt1, vt0, rt0, t1, v0 GROUP BY rt0.c1 HAVING (NOT (((COUNT(v0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN GROUP_CONCAT(rt0.c0) THEN v0.c0 WHEN v0.c0 THEN NULL END)))) UNION ALL SELECT ALL rt0.c1 FROM vt1, vt0, rt0, t1, v0 GROUP BY rt0.c1 HAVING ((((COUNT(v0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN GROUP_CONCAT(rt0.c0) THEN v0.c0 WHEN v0.c0 THEN NULL END))) ISNULL);
SELECT ALL rt0.c1 FROM vt1, vt0, rt0, t1, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, vt0, rt0, t1 NOT INDEXED, v0 GROUP BY rt0.c1 HAVING ((COUNT(v0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN GROUP_CONCAT(rt0.c0) THEN v0.c0 WHEN v0.c0 THEN NULL END)) UNION ALL SELECT rt0.c1 FROM vt1, vt0, rt0, t1, v0 GROUP BY rt0.c1 HAVING (NOT (((COUNT(v0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN GROUP_CONCAT(rt0.c0) THEN v0.c0 WHEN v0.c0 THEN NULL END)))) UNION ALL SELECT ALL rt0.c1 FROM vt1, vt0, rt0, t1, v0 GROUP BY rt0.c1 HAVING ((((COUNT(v0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN GROUP_CONCAT(rt0.c0) THEN v0.c0 WHEN v0.c0 THEN NULL END))) ISNULL);
SELECT ALL rt0.c1 FROM vt1, vt0, rt0, t1, v0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, t1.c0, v0.c0, vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE NULL  WHEN v0.c0 THEN t1.c0 END) AND (TRIM(DISTINCT t1.c0))) FULL OUTER JOIN t1 ON 0xffffffffce83ea4a;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE WHEN x'' THEN ((((((((((((rt0.c3)AND(vt0.c0)))OR(0.9304076554101535)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c3)) ELSE ((rt0.c2)|(rt0.c0)) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE WHEN x'' THEN ((((((((((((rt0.c3)AND(vt0.c0)))OR(0.9304076554101535)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c3)) ELSE ((rt0.c2)|(rt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE WHEN x'' THEN ((((((((((((rt0.c3)AND(vt0.c0)))OR(0.9304076554101535)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c3)) ELSE ((rt0.c2)|(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0, t1, vt0 WHERE (vt0.c0) GROUP BY vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0, t1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0, t1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(SUM(COUNT(t1.c0)) AS BLOB) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(SUM(COUNT(t1.c0)) AS BLOB))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(SUM(COUNT(t1.c0)) AS BLOB)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((((v0.c0 COLLATE RTRIM, CAST(v0.c0 AS TEXT), ((NULL)>=(vt1.c0)), LIKELIHOOD(DISTINCT vt0.c0, 0.11119784428636292), v0.c0 COLLATE RTRIM))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), vt1.c0 COLLATE BINARY, ((((vt1.c0)AND(vt0.c0)))AND(v0.c0)), CAST(vt0.c0 AS TEXT))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((v0.c0 COLLATE RTRIM, CAST(v0.c0 AS TEXT), ((NULL)>=(vt1.c0)), LIKELIHOOD(DISTINCT vt0.c0, 0.11119784428636292), v0.c0 COLLATE RTRIM))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), vt1.c0 COLLATE BINARY, ((((vt1.c0)AND(vt0.c0)))AND(v0.c0)), CAST(vt0.c0 AS TEXT))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((((((v0.c0 COLLATE RTRIM, CAST(v0.c0 AS TEXT), ((NULL)>=(vt1.c0)), LIKELIHOOD(DISTINCT vt0.c0, 0.11119784428636292), v0.c0 COLLATE RTRIM))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), vt1.c0 COLLATE BINARY, ((((vt1.c0)AND(vt0.c0)))AND(v0.c0)), CAST(vt0.c0 AS TEXT))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0, t1.c0, rt0.c2 FROM rt0, t1, vt1, vt0 GROUP BY vt0.c0, t1.c0, rt0.c2;
SELECT ALL vt0.c0, t1.c0, rt0.c2 FROM rt0, t1, vt1, vt0 GROUP BY vt0.c0, t1.c0, rt0.c2 HAVING ((((AVG(MAX(vt0.c0)) IN (vt1.c0))))>((rt0.c2))) UNION ALL SELECT vt0.c0, t1.c0, rt0.c2 FROM rt0, t1, vt1, vt0 GROUP BY vt0.c0, t1.c0, rt0.c2 HAVING (NOT (((((AVG(MAX(vt0.c0)) IN (vt1.c0))))>((rt0.c2))))) UNION ALL SELECT vt0.c0, t1.c0, rt0.c2 FROM rt0, t1, vt1, vt0 GROUP BY vt0.c0, t1.c0, rt0.c2 HAVING ((((((AVG(MAX(vt0.c0)) IN (vt1.c0))))>((rt0.c2)))) ISNULL);
SELECT * FROM rt0, vt0, t1, v0;
SELECT * FROM rt0, vt0, t1, v0 WHERE (((((rt0.c2)IS NOT(t1.c0)))LIKE(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, vt0, t1, v0 WHERE ((NOT (((((rt0.c2)IS NOT(t1.c0)))LIKE(CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT ALL * FROM rt0, vt0, t1, v0 WHERE (((((((rt0.c2)IS NOT(t1.c0)))LIKE(CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT * FROM rt0, vt0, t1, v0;
SELECT DISTINCT vt0.c0, rt0.c3, v0.c0, t1.c0, vt1.c0, rt0.c2 FROM rt0, v0 NOT INDEXED, vt0, t1, vt1;
SELECT DISTINCT vt0.c0, rt0.c3, v0.c0, t1.c0, vt1.c0, rt0.c2 FROM rt0, v0, vt0, t1, vt1 WHERE ((((vt0.c0 IN ())) NOTNULL)) UNION SELECT DISTINCT vt0.c0, rt0.c3, v0.c0, t1.c0, vt1.c0, rt0.c2 FROM rt0, v0, vt0, t1, vt1 WHERE ((NOT ((((vt0.c0 IN ())) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c3, v0.c0, t1.c0, vt1.c0, rt0.c2 FROM rt0, v0 NOT INDEXED, vt0, t1, vt1 WHERE ((((((vt0.c0 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c3, v0.c0, t1.c0, vt1.c0, rt0.c2 FROM rt0, v0 NOT INDEXED, vt0, t1, vt1;
SELECT vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, t1 GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, t1 WHERE ((((0xffffffffc532d864, rt0.c2, '1709296637')) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c0 END, '-1800057234', LTRIM(rt0.c0))) AND (((rt0.c0 IN ()), vt1.c0, json_extract(NULL, rt0.c3, rt0.c0, rt0.c0))))) GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt1, t1 WHERE ((NOT ((((0xffffffffc532d864, rt0.c2, '1709296637')) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c0 END, '-1800057234', LTRIM(rt0.c0))) AND (((rt0.c0 IN ()), vt1.c0, json_extract(NULL, rt0.c3, rt0.c0, rt0.c0))))))) GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, t1 WHERE ((((((0xffffffffc532d864, rt0.c2, '1709296637')) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c0 END, '-1800057234', LTRIM(rt0.c0))) AND (((rt0.c0 IN ()), vt1.c0, json_extract(NULL, rt0.c3, rt0.c0, rt0.c0))))) ISNULL)) GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, t1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, t1 GROUP BY vt1.c0, t1.c0, rt0.c0, rt0.c2;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE WHEN COUNT(COUNT(TOTAL(t1.c0))) THEN TOTAL(COUNT(t1.c0)) WHEN TOTAL(t1.c0) THEN COUNT(*) WHEN (~ (MAX(AVG(t1.c0)))) THEN (((t1.c0)) BETWEEN ((SUM(SUM(TOTAL(t1.c0))))) AND ((MIN(MIN(t1.c0))))) ELSE '^(B7xd럆Y%' END UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE WHEN COUNT(COUNT(TOTAL(t1.c0))) THEN TOTAL(COUNT(t1.c0)) WHEN TOTAL(t1.c0) THEN COUNT(*) WHEN (~ (MAX(AVG(t1.c0)))) THEN (((t1.c0)) BETWEEN ((SUM(SUM(TOTAL(t1.c0))))) AND ((MIN(MIN(t1.c0))))) ELSE '^(B7xd럆Y%' END)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE WHEN COUNT(COUNT(TOTAL(t1.c0))) THEN TOTAL(COUNT(t1.c0)) WHEN TOTAL(t1.c0) THEN COUNT(*) WHEN (~ (MAX(AVG(t1.c0)))) THEN (((t1.c0)) BETWEEN ((SUM(SUM(TOTAL(t1.c0))))) AND ((MIN(MIN(t1.c0))))) ELSE '^(B7xd럆Y%' END) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (-1251196223) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (-1251196223))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((-1251196223) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT t1.c0 FROM vt1, rt0, v0, vt0, t1;
SELECT DISTINCT t1.c0 FROM vt1, rt0, v0, vt0, t1 WHERE (((vt0.c0)>=(-3.91356597E8)) COLLATE NOCASE) UNION SELECT DISTINCT t1.c0 FROM vt1, rt0, v0, vt0, t1 WHERE ((NOT (((vt0.c0)>=(-3.91356597E8)) COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0 FROM vt1, rt0, v0, vt0, t1 WHERE (((((vt0.c0)>=(-3.91356597E8)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0 FROM vt1, rt0, v0, vt0, t1;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (json_array(vt0.c0, '') IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7646892559667592 THEN vt0.c0 WHEN 0.8700519264625118 THEN '1341959647' WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4187643667686848 END)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (json_array(vt0.c0, '') IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7646892559667592 THEN vt0.c0 WHEN 0.8700519264625118 THEN '1341959647' WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4187643667686848 END)) WHERE (0Xffffffffbfaf1a47) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (json_array(vt0.c0, '') IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7646892559667592 THEN vt0.c0 WHEN 0.8700519264625118 THEN '1341959647' WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4187643667686848 END)) WHERE ((NOT (0xffffffffbfaf1a47))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (json_array(vt0.c0, '') IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7646892559667592 THEN vt0.c0 WHEN 0.8700519264625118 THEN '1341959647' WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4187643667686848 END)) WHERE (((0xffffffffbfaf1a47) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (json_array(vt0.c0, '') IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7646892559667592 THEN vt0.c0 WHEN 0.8700519264625118 THEN '1341959647' WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4187643667686848 END)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0;
SELECT ALL rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0;
SELECT ALL rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c3, rt0.c0, vt1.c0 FROM rt0, t1, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0;
SELECT ALL rt0.c0 FROM t1, rt0, vt1, v0, vt0;
SELECT rt0.c0 FROM t1, rt0, vt1, v0, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) AND (CAST(rt0.c3 AS TEXT)))) UNION ALL SELECT ALL rt0.c0 FROM t1, rt0, vt1, v0, vt0 WHERE ((NOT ((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) AND (CAST(rt0.c3 AS TEXT)))))) UNION ALL SELECT rt0.c0 FROM t1, rt0, vt1, v0, vt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) AND (CAST(rt0.c3 AS TEXT)))) ISNULL));
SELECT ALL rt0.c0 FROM t1, rt0, vt1, v0, vt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c0)-(vt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (((((vt0.c0)-(vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((((((vt0.c0)-(vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT ALL vt1.c0, rt0.c3, vt0.c0, rt0.c1, v0.c0, rt0.c0, t1.c0, rt0.c2 FROM vt1, vt0 FULL OUTER JOIN v0 ON (((vt1.c0) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON ((t1.c0) NOT NULL) INNER JOIN t1 ON (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)) IN (((t1.c0) IS TRUE), 1341959647 COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c3, vt0.c0, rt0.c1, v0.c0, rt0.c0, t1.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 HAVING 0.4844257161120634 UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 HAVING (NOT (0.4844257161120634)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 HAVING ((0.4844257161120634) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 HAVING 0.4844257161120634 UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 HAVING (NOT (0.4844257161120634)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 HAVING ((0.4844257161120634) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((rt0.c1) BETWEEN ('') AND (rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c1) BETWEEN ('') AND (rt0.c1)) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c1) BETWEEN ('') AND (rt0.c1)) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0)) NOT NULL);
SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0)) NOT NULL) WHERE (LOWER(DISTINCT ((vt0.c0) IS TRUE))) UNION SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0)) NOT NULL) WHERE ((NOT (LOWER(DISTINCT ((vt0.c0) IS TRUE))))) UNION SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0)) NOT NULL) WHERE (((LOWER(DISTINCT ((vt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0)) NOT NULL);
SELECT ALL rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM v0, t1, rt0, vt1, vt0 GROUP BY rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM v0, t1, rt0, vt1, vt0 WHERE (((((rt0.c2) NOT NULL))||(CAST(t1.c0 AS REAL)))) GROUP BY rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 UNION SELECT rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM v0, t1, rt0, vt1, vt0 WHERE ((NOT (((((rt0.c2) NOT NULL))||(CAST(t1.c0 AS REAL)))))) GROUP BY rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM v0, t1, rt0, vt1, vt0 WHERE (((((((rt0.c2) NOT NULL))||(CAST(t1.c0 AS REAL)))) ISNULL)) GROUP BY rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM v0, t1, rt0, vt1, vt0 GROUP BY rt0.c1, t1.c0, rt0.c0, v0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT vt0.c0, t1.c0 FROM rt0, v0, t1 RIGHT OUTER JOIN vt0 ON (((((rt0.c1, rt0.c3, rt0.c0))<((x'b50b', t1.c0, rt0.c0)))) NOT BETWEEN ((~ (t1.c0))) AND ((- (v0.c0)))) GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM rt0, v0, t1 RIGHT OUTER JOIN vt0 ON (((((rt0.c1, rt0.c3, rt0.c0))<((x'b50b', t1.c0, rt0.c0)))) NOT BETWEEN ((~ (t1.c0))) AND ((- (v0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING TOTAL(((((((((t1.c0)OR(MAX(t1.c0))))AND(MIN(rt0.c0))))OR(v0.c0)))OR(MAX(AVG(rt0.c1))))) UNION ALL SELECT vt0.c0, t1.c0 FROM rt0, v0, t1 RIGHT OUTER JOIN vt0 ON (((((rt0.c1, rt0.c3, rt0.c0))<((x'b50b', t1.c0, rt0.c0)))) NOT BETWEEN ((~ (t1.c0))) AND ((- (v0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING (NOT (TOTAL(((((((((t1.c0)OR(MAX(t1.c0))))AND(MIN(rt0.c0))))OR(v0.c0)))OR(MAX(AVG(rt0.c1))))))) UNION ALL SELECT vt0.c0, t1.c0 FROM rt0, v0, t1 RIGHT OUTER JOIN vt0 ON (((((rt0.c1, rt0.c3, rt0.c0))<((x'b50b', t1.c0, rt0.c0)))) NOT BETWEEN ((~ (t1.c0))) AND ((- (v0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING ((TOTAL(((((((((t1.c0)OR(MAX(t1.c0))))AND(MIN(rt0.c0))))OR(v0.c0)))OR(MAX(AVG(rt0.c1)))))) ISNULL);
SELECT t1.c0, rt0.c1, rt0.c3, vt1.c0, v0.c0 FROM v0, rt0, vt1, t1;
SELECT ALL t1.c0, rt0.c1, rt0.c3, vt1.c0, v0.c0 FROM v0, rt0, vt1, t1 WHERE (CASE (rt0.c1 IN ())  WHEN ((v0.c0)LIKE(t1.c0)) THEN (+ ('0.04338738921996099')) ELSE LIKELY(vt1.c0) END) UNION ALL SELECT t1.c0, rt0.c1, rt0.c3, vt1.c0, v0.c0 FROM v0, rt0, vt1, t1 WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN ((v0.c0)LIKE(t1.c0)) THEN (+ ('0.04338738921996099')) ELSE LIKELY(vt1.c0) END))) UNION ALL SELECT t1.c0, rt0.c1, rt0.c3, vt1.c0, v0.c0 FROM v0, rt0, vt1, t1 WHERE (((CASE (rt0.c1 IN ())  WHEN ((v0.c0)LIKE(t1.c0)) THEN (+ ('0.04338738921996099')) ELSE LIKELY(vt1.c0) END) ISNULL));
SELECT t1.c0, rt0.c1, rt0.c3, vt1.c0, v0.c0 FROM v0, rt0, vt1, t1;
SELECT DISTINCT * FROM t1 INNER JOIN vt1 ON ((('')) BETWEEN ((vt1.c0)) AND ((v0.c0))) COLLATE RTRIM RIGHT OUTER JOIN v0 ON CASE CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN NULL THEN t1.c0 WHEN v0.c0 THEN t1.c0 WHEN 'W0' THEN t1.c0 END  WHEN CASE WHEN vt1.c0 THEN v0.c0 ELSE t1.c0 END THEN CAST(1440656196 AS NUMERIC) END;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3;
SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3 HAVING CASE WHEN rt0.c2 THEN ((((TOTAL(v0.c0))OR(rt0.c2)))OR(t1.c0)) ELSE ((COUNT(*)) NOT BETWEEN (MIN(rt0.c3)) AND (vt0.c0)) END UNION ALL SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3 HAVING (NOT (CASE WHEN rt0.c2 THEN ((((TOTAL(v0.c0))OR(rt0.c2)))OR(t1.c0)) ELSE ((COUNT(*)) NOT BETWEEN (MIN(rt0.c3)) AND (vt0.c0)) END)) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3 HAVING ((CASE WHEN rt0.c2 THEN ((((TOTAL(v0.c0))OR(rt0.c2)))OR(t1.c0)) ELSE ((COUNT(*)) NOT BETWEEN (MIN(rt0.c3)) AND (vt0.c0)) END) ISNULL);
SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3;
SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3 HAVING CASE WHEN rt0.c2 THEN ((((TOTAL(v0.c0))OR(rt0.c2)))OR(t1.c0)) ELSE ((COUNT(*)) NOT BETWEEN (MIN(rt0.c3)) AND (vt0.c0)) END UNION ALL SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3 HAVING (NOT (CASE WHEN rt0.c2 THEN ((((TOTAL(v0.c0))OR(rt0.c2)))OR(t1.c0)) ELSE ((COUNT(*)) NOT BETWEEN (MIN(rt0.c3)) AND (vt0.c0)) END)) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3 HAVING ((CASE WHEN rt0.c2 THEN ((((TOTAL(v0.c0))OR(rt0.c2)))OR(t1.c0)) ELSE ((COUNT(*)) NOT BETWEEN (MIN(rt0.c3)) AND (vt0.c0)) END) ISNULL);
SELECT vt0.c0, vt1.c0, rt0.c3 FROM v0, rt0, vt0, t1, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c3;
SELECT vt0.c0, t1.c0 FROM t1, vt1, vt0;
SELECT vt0.c0, t1.c0 FROM t1, vt1, vt0 WHERE (((NOT (t1.c0)) IN ())) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, vt1, vt0 WHERE ((NOT (((NOT (t1.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, vt1, vt0 WHERE (((((NOT (t1.c0)) IN ())) ISNULL));
SELECT vt0.c0, t1.c0 FROM t1, vt1, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, t1.c0, rt0.c3 FROM vt0, rt0, vt1, v0, t1;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, t1.c0, rt0.c3 FROM vt0, rt0, vt1, v0, t1 WHERE ((~ (((vt1.c0)=(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, t1.c0, rt0.c3 FROM vt0, rt0, vt1, v0, t1 WHERE ((NOT ((~ (((vt1.c0)==(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, t1.c0, rt0.c3 FROM vt0, rt0, vt1, v0, t1 WHERE ((((~ (((vt1.c0)=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, t1.c0, rt0.c3 FROM vt0, rt0, vt1, v0, t1;
SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, vt1, t1 GROUP BY rt0.c2, rt0.c3, t1.c0;
SELECT rt0.c2, rt0.c3, t1.c0 FROM rt0, vt1, t1 WHERE (t1.c0) GROUP BY rt0.c2, rt0.c3, t1.c0 UNION SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, vt1, t1 WHERE ((NOT (t1.c0))) GROUP BY rt0.c2, rt0.c3, t1.c0 UNION SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, vt1, t1 WHERE (((t1.c0) ISNULL)) GROUP BY rt0.c2, rt0.c3, t1.c0;
SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, vt1, t1 GROUP BY rt0.c2, rt0.c3, t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM vt1, rt0, t1, vt0, v0;
SELECT ALL * FROM vt1, rt0, t1, vt0, v0 WHERE ((+ (rt0.c2)) COLLATE NOCASE) UNION ALL SELECT * FROM vt1, rt0, t1, vt0, v0 WHERE ((NOT ((+ (rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, rt0, t1, vt0, v0 WHERE ((((+ (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, rt0, t1, vt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, vt1, vt0, t1 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM)AND((~ (vt1.c0)))) GROUP BY rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, vt1, vt0, t1 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM)AND((~ (vt1.c0)))) WHERE (((((CAST(rt0.c3 AS INTEGER))OR(IFNULL(NULL, t1.c0))))AND((rt0.c0 IN ())))) GROUP BY rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, vt1, vt0, t1 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM)AND((~ (vt1.c0)))) WHERE ((NOT (((((CAST(rt0.c3 AS INTEGER))OR(IFNULL(NULL, t1.c0))))AND((rt0.c0 IN ())))))) GROUP BY rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, vt1, vt0, t1 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM)AND((~ (vt1.c0)))) WHERE (((((((CAST(rt0.c3 AS INTEGER))OR(IFNULL(NULL, t1.c0))))AND((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2 FROM v0, vt1, vt0, t1 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM)AND((~ (vt1.c0)))) GROUP BY rt0.c1, t1.c0, vt1.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c3, rt0.c0, t1.c0, rt0.c1, vt1.c0 FROM rt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)>(x'a363')))LIKE((((rt0.c0))<((vt1.c0)))));
SELECT rt0.c2, rt0.c3, rt0.c0, t1.c0, rt0.c1, vt1.c0 FROM rt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)>(x'a363')))LIKE((((rt0.c0))<((vt1.c0))))) WHERE (NULL) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, t1.c0, rt0.c1, vt1.c0 FROM rt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)>(x'a363')))LIKE((((rt0.c0))<((vt1.c0))))) WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, t1.c0, rt0.c1, vt1.c0 FROM rt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)>(x'a363')))LIKE((((rt0.c0))<((vt1.c0))))) WHERE (((NULL) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c0, t1.c0, rt0.c1, vt1.c0 FROM rt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)>(x'a363')))LIKE((((rt0.c0))<((vt1.c0)))));
SELECT DISTINCT * FROM v0, vt1, rt0, vt0;
SELECT DISTINCT * FROM v0, vt1, rt0, vt0 WHERE (((((((((rt0.c2)AND(rt0.c3 COLLATE NOCASE)))AND(0xf8f6dcd COLLATE RTRIM)))AND(rt0.c0)))OR(((0.0936693014443637)<<(x''))))) UNION SELECT DISTINCT * FROM v0, vt1, rt0, vt0 WHERE ((NOT (((((((((rt0.c2)AND(rt0.c3 COLLATE NOCASE)))AND(0Xf8f6dcd COLLATE RTRIM)))AND(rt0.c0)))OR(((0.0936693014443637)<<(x''))))))) UNION SELECT DISTINCT * FROM v0, vt1, rt0, vt0 WHERE (((((((((((rt0.c2)AND(rt0.c3 COLLATE NOCASE)))AND(0xf8f6dcd COLLATE RTRIM)))AND(rt0.c0)))OR(((0.0936693014443637)<<(x''))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, rt0, vt0;
SELECT ALL rt0.c1 FROM vt0, t1, v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, t1, v0, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR((- (rt0.c1)))))AND(((vt0.c0)!=(rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, t1, v0, rt0 WHERE ((NOT (((((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR((- (rt0.c1)))))AND(((vt0.c0)!=(rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, t1, v0, rt0 WHERE (((((((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR((- (rt0.c1)))))AND(((vt0.c0)!=(rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, t1, v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2, t1.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, t1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2, t1.c0, vt0.c0, vt1.c0;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2, t1.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, t1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2, t1.c0, vt0.c0, vt1.c0 HAVING TOTAL(MAX(rt0.c3)) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2, t1.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, t1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2, t1.c0, vt0.c0, vt1.c0 HAVING (NOT (TOTAL(MAX(rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2, t1.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, t1, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2, t1.c0, vt0.c0, vt1.c0 HAVING ((TOTAL(MAX(rt0.c3))) ISNULL);
SELECT ALL vt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1, rt0, v0;
SELECT vt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1, rt0, v0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS BLOB)) UNION ALL SELECT vt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1, rt0, v0 NOT INDEXED WHERE ((NOT (CAST(rt0.c3 COLLATE RTRIM AS BLOB)))) UNION ALL SELECT vt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1, rt0, v0 WHERE (((CAST(rt0.c3 COLLATE RTRIM AS BLOB)) ISNULL));
SELECT ALL vt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1, rt0, v0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM t1, rt0, vt0, vt1, v0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM t1, rt0, vt0, vt1, v0 WHERE (CASE WHEN (vt1.c0 IN (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) WHEN ((((v0.c0)AND(rt0.c0)))OR(t1.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN (NOT (vt1.c0)) THEN (((rt0.c3))<((vt1.c0))) ELSE NULL END) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM t1, rt0, vt0, vt1, v0 WHERE ((NOT (CASE WHEN (vt1.c0 IN (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) WHEN ((((v0.c0)AND(rt0.c0)))OR(t1.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN (NOT (vt1.c0)) THEN (((rt0.c3))<((vt1.c0))) ELSE NULL END))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM t1, rt0, vt0, vt1, v0 WHERE (((CASE WHEN (vt1.c0 IN (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) WHEN ((((v0.c0)AND(rt0.c0)))OR(t1.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN (NOT (vt1.c0)) THEN (((rt0.c3))<((vt1.c0))) ELSE NULL END) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2 FROM t1, rt0, vt0, vt1, v0;
SELECT rt0.c2, rt0.c0 FROM t1, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t1, vt1 NATURAL JOIN rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM t1, vt1 NATURAL JOIN rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM t1, vt1 NATURAL JOIN rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t1, vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CAST(v0.c0 AS BLOB)) IS TRUE) RIGHT OUTER JOIN v0 ON ((((rt0.c2)OR(v0.c0)))OR(rt0.c3)) COLLATE RTRIM GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1;
SELECT ALL * FROM t1, rt0, vt0, v0;
SELECT ALL * FROM t1, rt0, vt0, v0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c1) NOT NULL) END) UNION ALL SELECT * FROM t1, rt0, vt0, v0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c1) NOT NULL) END))) UNION ALL SELECT * FROM t1, rt0, vt0, v0 WHERE (((CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c1) NOT NULL) END) ISNULL));
SELECT ALL * FROM t1, rt0, vt0, v0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.8411699108741615 END END FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c0)||(rt0.c3)) THEN rt0.c1 WHEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN TRIM(rt0.c2) WHEN (vt1.c0 IN (rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c3)LIKE(NULL)) END;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.8411699108741615 END END FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c0)||(rt0.c3)) THEN rt0.c1 WHEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN TRIM(rt0.c2) WHEN (vt1.c0 IN (rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c3)LIKE(NULL)) END WHERE (1.955880276E9) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.8411699108741615 END END FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c0)||(rt0.c3)) THEN rt0.c1 WHEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN TRIM(rt0.c2) WHEN (vt1.c0 IN (rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c3)LIKE(NULL)) END WHERE ((NOT (1.955880276E9))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.8411699108741615 END END FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c0)||(rt0.c3)) THEN rt0.c1 WHEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN TRIM(rt0.c2) WHEN (vt1.c0 IN (rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c3)LIKE(NULL)) END WHERE (((1.955880276E9) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.8411699108741615 END END FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c0)||(rt0.c3)) THEN rt0.c1 WHEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN TRIM(rt0.c2) WHEN (vt1.c0 IN (rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c3)LIKE(NULL)) END;
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)>(v0.c0))))<(((((vt1.c0))>((v0.c0)))))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)>(v0.c0))))<(((((vt1.c0))>((v0.c0)))))) WHERE ('늈UA⋩8R') GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)>(v0.c0))))<(((((vt1.c0))>((v0.c0)))))) WHERE ((NOT ('늈UA⋩8R'))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)>(v0.c0))))<(((((vt1.c0))>((v0.c0)))))) WHERE ((('늈UA⋩8R') ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)>(v0.c0))))<(((((vt1.c0))>((v0.c0)))))) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE ((- (''))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((NOT ((- (''))))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((((- (''))) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM t1, vt0, v0, vt1, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM t1, vt0, v0, vt1, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 END IN ())) UNION SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM t1, vt0, v0, vt1, rt0 WHERE ((NOT ((CASE WHEN rt0.c0 THEN rt0.c0 END IN ())))) UNION SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM t1, vt0, v0, vt1, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM t1, vt0, v0, vt1, rt0;
SELECT rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, rt0, v0 GROUP BY rt0.c1, rt0.c0, vt1.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, rt0, v0 WHERE ((((((v0.c0, rt0.c2, rt0.c2))<((rt0.c0, v0.c0, NULL)))) IS FALSE)) GROUP BY rt0.c1, rt0.c0, vt1.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, rt0, v0 WHERE ((NOT ((((((v0.c0, rt0.c2, rt0.c2))<((rt0.c0, v0.c0, NULL)))) IS FALSE)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, v0.c0 UNION SELECT rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, rt0, v0 WHERE ((((((((v0.c0, rt0.c2, rt0.c2))<((rt0.c0, v0.c0, NULL)))) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, v0.c0;
SELECT rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, rt0, v0 GROUP BY rt0.c1, rt0.c0, vt1.c0, v0.c0;
SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c2 FROM t1, vt0 NOT INDEXED, rt0, vt1, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c2 FROM t1, vt0, rt0, vt1, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c2 HAVING (+ (MAX(TOTAL(MAX(TOTAL(SUM(t1.c0))))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c2 FROM t1, vt0, rt0, vt1, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c2 HAVING (NOT ((+ (MAX(TOTAL(MAX(TOTAL(SUM(t1.c0))))))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c2 FROM t1, vt0, rt0, vt1, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c2 HAVING (((+ (MAX(TOTAL(MAX(TOTAL(SUM(t1.c0)))))))) ISNULL);
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND ('')))) LEFT OUTER JOIN v0 ON ((((((rt0.c0)OR(0.3813266942308944)))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (x'')) CROSS JOIN vt0 ON ((((rt0.c3) IS TRUE))*(((v0.c0)>=(rt0.c2))));
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND ('')))) LEFT OUTER JOIN v0 ON ((((((rt0.c0)OR(0.3813266942308944)))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (x'')) CROSS JOIN vt0 ON ((((rt0.c3) IS TRUE))*(((v0.c0)>=(rt0.c2)))) WHERE (0xffffffffad714c92) ORDER BY (NOT (json_quote(vt1.c0)));
SELECT * FROM vt1, t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND ('')))) LEFT OUTER JOIN v0 ON ((((((rt0.c0)OR(0.3813266942308944)))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (x'')) CROSS JOIN vt0 ON ((((rt0.c3) IS TRUE))*(((v0.c0)>=(rt0.c2)))) WHERE ((NOT (0xffffffffad714c92))) ORDER BY (NOT (json_quote(vt1.c0)));
SELECT * FROM vt1, t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND ('')))) LEFT OUTER JOIN v0 ON ((((((rt0.c0)OR(0.3813266942308944)))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (x'')) CROSS JOIN vt0 ON ((((rt0.c3) IS TRUE))*(((v0.c0)>=(rt0.c2)))) WHERE (((0xffffffffad714c92) ISNULL)) ORDER BY (NOT (json_quote(vt1.c0)));
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c3) BETWEEN (rt0.c1) AND ('')))) LEFT OUTER JOIN v0 ON ((((((rt0.c0)OR(0.3813266942308944)))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (x'')) CROSS JOIN vt0 ON ((((rt0.c3) IS TRUE))*(((v0.c0)>=(rt0.c2))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, t1.c0 FROM vt0, v0, vt1 NOT INDEXED, t1 GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, t1.c0 FROM vt0, v0, vt1, t1 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) GROUP BY vt1.c0, t1.c0 UNION SELECT ALL vt1.c0, t1.c0 FROM vt0, v0, vt1, t1 WHERE ((NOT ((CAST(vt0.c0 AS BLOB) IN ())))) GROUP BY vt1.c0, t1.c0 UNION SELECT ALL vt1.c0, t1.c0 FROM vt0, v0, vt1, t1 WHERE ((((CAST(vt0.c0 AS BLOB) IN ())) ISNULL)) GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, t1.c0 FROM vt0, v0, vt1 NOT INDEXED, t1 GROUP BY vt1.c0, t1.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((SUM(MAX(vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (MAX(v0.c0))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (((SUM(MAX(vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (MAX(v0.c0))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((((SUM(MAX(vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (MAX(v0.c0)))) ISNULL);
SELECT * FROM v0, vt0, rt0, t1;
SELECT * FROM v0, vt0, rt0, t1 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM v0, vt0, rt0, t1 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM v0, vt0, rt0, t1 WHERE (((rt0.c0) ISNULL));
SELECT * FROM v0, vt0, rt0, t1;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0, rt0.c0, vt0.c0 FROM vt0, rt0, t1, vt1 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY) IS TRUE);
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0, rt0.c0, vt0.c0 FROM vt0, rt0, t1, vt1 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY) IS TRUE) WHERE (json_array(((((t1.c0)OR(rt0.c3)))AND(t1.c0)), ((vt1.c0) ISNULL))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0, rt0.c0, vt0.c0 FROM vt0, rt0, t1, vt1 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY) IS TRUE) WHERE ((NOT (json_array(((((t1.c0)OR(rt0.c3)))AND(t1.c0)), ((vt1.c0) ISNULL))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0, rt0.c0, vt0.c0 FROM vt0, rt0, t1, vt1 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY) IS TRUE) WHERE (((json_array(((((t1.c0)OR(rt0.c3)))AND(t1.c0)), ((vt1.c0) ISNULL))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0, rt0.c0, vt0.c0 FROM vt0, rt0, t1, vt1 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY) IS TRUE);
SELECT vt0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, v0 NOT INDEXED, t1 WHERE (((((vt0.c0)&(v0.c0))) NOT BETWEEN (((((t1.c0)AND(v0.c0)))OR(t1.c0))) AND (((v0.c0)<=(t1.c0))))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM vt0, v0, t1 WHERE ((NOT (((((vt0.c0)&(v0.c0))) NOT BETWEEN (((((t1.c0)AND(v0.c0)))OR(t1.c0))) AND (((v0.c0)<=(t1.c0))))))) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM vt0, v0, t1 WHERE (((((((vt0.c0)&(v0.c0))) NOT BETWEEN (((((t1.c0)AND(v0.c0)))OR(t1.c0))) AND (((v0.c0)<=(t1.c0))))) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY vt0.c0, t1.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (AVG(rt0.c3)) AND ((TOTAL(GROUP_CONCAT(MIN(MIN(rt0.c0)))) IN (rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (AVG(rt0.c3)) AND ((TOTAL(GROUP_CONCAT(MIN(MIN(rt0.c0)))) IN (rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (AVG(rt0.c3)) AND ((TOTAL(GROUP_CONCAT(MIN(MIN(rt0.c0)))) IN (rt0.c1))))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS INTEGER))|(((((vt0.c0)AND(vt0.c0)))OR(v0.c0))));
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS INTEGER))|(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))) WHERE (0.5355469856555779) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS INTEGER))|(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))) WHERE ((NOT (0.5355469856555779))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS INTEGER))|(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))) WHERE (((0.5355469856555779) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS INTEGER))|(((((vt0.c0)AND(vt0.c0)))OR(v0.c0))));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON 'PR嵣-䂇e>U';
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON 'PR嵣-䂇e>U' WHERE (((((rt0.c1)AND(rt0.c0)))IS NOT(vt1.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON 'PR嵣-䂇e>U' WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))IS NOT(vt1.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON 'PR嵣-䂇e>U' WHERE (((((((rt0.c1)AND(rt0.c0)))IS NOT(vt1.c0))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0 INNER JOIN vt1 ON 'PR嵣-䂇e>U';
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT v0.c0, rt0.c0 FROM v0, t1, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0, t1, rt0 GROUP BY v0.c0, rt0.c0 HAVING MAX(((MIN(MIN(rt0.c0)))%(v0.c0))) UNION ALL SELECT v0.c0, rt0.c0 FROM v0, t1, rt0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (MAX(((MIN(MIN(rt0.c0)))%(v0.c0))))) UNION ALL SELECT v0.c0, rt0.c0 FROM v0, t1, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((MAX(((MIN(MIN(rt0.c0)))%(v0.c0)))) ISNULL);
SELECT ALL MAX((((rt0.c3, t1.c0, 0x54e782e9)) NOT BETWEEN ((CAST(t1.c0 AS NUMERIC), (v0.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END)) AND ((x'c102', json_array(t1.c0, rt0.c3, '-437760972', vt1.c0, vt0.c0, vt0.c0), t1.c0 COLLATE BINARY)))) FROM t1, vt1, v0, rt0, vt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt1, v0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt1, v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(rt0.c1 COLLATE NOCASE)))OR((rt0.c1 IN ())))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt1, v0 WHERE ((NOT (((((CAST(v0.c0 AS INTEGER))OR(rt0.c1 COLLATE NOCASE)))OR((rt0.c1 IN ())))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt1, v0 WHERE (((((((CAST(v0.c0 AS INTEGER))OR(rt0.c1 COLLATE NOCASE)))OR((rt0.c1 IN ())))) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt1, v0;
