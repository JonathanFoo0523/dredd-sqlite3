-- Time: 2024/06/09 16:09:25
-- Database: database24
-- Database version: 3.40.0
-- seed value: 4240188324
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
CREATE TABLE t1 (c0 BLOB , c1 REAL , c2 INTEGER ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1745127805,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES ('-1745127805', '-1745127805', '-489409215'), (NULL, 0.8904621201975564, '-1745127805'), (0X61afe99b, 0.9736082115664735, x''); -- 0ms;
INSERT OR IGNORE INTO t1(c2) VALUES (0.8904621201975564); -- 1ms;
INSERT OR REPLACE INTO t1(c1) VALUES (-1608922287), (x''), (x''); -- 0ms;
REINDEX  vt0; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT  CHECK ( (((c0)) NOT BETWEEN ((((c0)GLOB(c0)))) AND ((CAST(NULL AS TEXT)))))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29616'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'a6c7'); -- 0ms;
INSERT OR REPLACE INTO t1(c2) VALUES (1.638918555E9); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO t1(c1, c0) VALUES (0X7fffffffffffffff, 0.7092157591880001); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('-1745127805'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
PRAGMA default_cache_size = 1307848106; -- 1ms;
CREATE INDEX i95 ON t1(((((c1)AND(0.8904621201975564)))OR((('1946965010') NOT BETWEEN (c0) AND (c1)))) ASC,LIKELY((((c1, c2, c0)) NOT BETWEEN ((c1, c1, c1)) AND ((c0, c2, c2)))) COLLATE RTRIM DESC,((((((c2) IS TRUE))AND(c1)))OR(CASE WHEN c1 THEN c2 ELSE c2 END)) ASC); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 1ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
CREATE UNIQUE INDEX i8 ON t1(CASE WHEN (+ (c0)) THEN '{A)î¦›' ELSE LIKELIHOOD(DISTINCT c2, 0.3406400026519487) END COLLATE NOCASE DESC,(((c1)*('-1745127805')) IN ()) COLLATE BINARY,((c0) ISNULL) COLLATE RTRIM COLLATE BINARY) WHERE c1; -- 1ms;
CREATE INDEX i15 ON t0(((((c0)) BETWEEN ((c0)) AND ((c0))) IN ()) COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c2) VALUES (0.28813557008114066, 0.7634410733308065); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'4a28'); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
CREATE UNIQUE INDEX i32 ON t0((c0 COLLATE NOCASE IN ()) COLLATE RTRIM ASC) WHERE (((c0 COLLATE RTRIM))=((QUOTE(x'')))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX RTRIM; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.0518109298203181), (-198505820), ('#M&R2'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 158787191); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t1(c2) VALUES (''), (0.9556088633432507), ('-353597992'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('eF'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '709'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 732343299); -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1924517741 unordered noskipscan'); -- 1ms;
REINDEX i32; -- 0ms;
REINDEX; -- 1ms;
ANALYZE main; -- 3ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.3668167535258646); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x'3fb9'); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES ('1946965010'); -- 0ms;
COMMIT; -- 0ms;
ANALYZE i15; -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 AFTER UPDATE OF c1 ON t1 BEGIN UPDATE OR FAIL vt0 SET (c0)=('1924517741') WHERE vt0.c0;END; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO t1(c0, c2) VALUES (0.3188034086864855, x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i89 ON t1(((((c0 COLLATE RTRIM)AND(((x'') NOT NULL))))OR((((c2))<((c2))))) COLLATE RTRIM,c1 COLLATE BINARY ASC,((((((((((((c2)AND(c0)))OR(c1)))AND(CASE 0.49477773584577855  WHEN c2 THEN c0 END)))AND('lX' COLLATE NOCASE)))AND(NULLIF(c1, c1))))AND(((x'') BETWEEN (c1) AND (c1)))) DESC); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18732'); -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1 UNINDEXED); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'', NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL), (0.0518109298203181), ('bHUXL,!~)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (0X16721b24, x''); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ((((NULL)*(t0.c0))) NOT BETWEEN (0.6367383599973282) AND ('-489409215')) RIGHT OUTER JOIN t0 ON TRIM(DISTINCT ((t1.c2)GLOB(t1.c1)));
SELECT DISTINCT vt0.c0, vt1.c1 FROM t1, vt1, t0, vt0;
SELECT DISTINCT vt0.c0, vt1.c1 FROM t1, vt1, t0, vt0 WHERE (vt1.c1) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM t1, vt1, t0, vt0 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM t1, vt1, t0, vt0 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c1 FROM t1, vt1, t0, vt0;
SELECT ALL t1.c1, vt0.c0, t1.c0 FROM t1, vt1, t0, vt0 GROUP BY t1.c1, vt0.c0, t1.c0;
SELECT t1.c1, vt0.c0, t1.c0 FROM t1, vt1, t0, vt0 WHERE (COALESCE(DISTINCT json_array_length(t0.c0, 0x22b2fcb7), LIKELY(DISTINCT t1.c0), (t1.c1 IN ()), (t1.c1 IN ()), t0.c0, ((NULL)==(t0.c0)))) GROUP BY t1.c1, vt0.c0, t1.c0 UNION SELECT ALL t1.c1, vt0.c0, t1.c0 FROM t1, vt1, t0, vt0 WHERE ((NOT (COALESCE(DISTINCT json_array_length(t0.c0, 0X22b2fcb7), LIKELY(DISTINCT t1.c0), (t1.c1 IN ()), (t1.c1 IN ()), t0.c0, ((NULL)=(t0.c0)))))) GROUP BY t1.c1, vt0.c0, t1.c0 UNION SELECT ALL t1.c1, vt0.c0, t1.c0 FROM t1, vt1, t0, vt0 WHERE (((COALESCE(DISTINCT json_array_length(t0.c0, 0X22b2fcb7), LIKELY(DISTINCT t1.c0), (t1.c1 IN ()), (t1.c1 IN ()), t0.c0, ((NULL)==(t0.c0)))) ISNULL)) GROUP BY t1.c1, vt0.c0, t1.c0;
SELECT ALL t1.c1, vt0.c0, t1.c0 FROM t1, vt1, t0, vt0 GROUP BY t1.c1, vt0.c0, t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(MIN(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MIN(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MIN(t0.c0))) ISNULL);
SELECT ALL * FROM t1, vt1 INNER JOIN t0 ON ((t1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON ((((vt0.c0)&(t0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c2))) AND (COALESCE(t1.c2, t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c2)));
SELECT ALL * FROM t1, vt1 INNER JOIN t0 ON ((t1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON ((((vt0.c0)&(t0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c2))) AND (COALESCE(t1.c2, t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c2))) WHERE (t1.c0) UNION ALL SELECT ALL * FROM t1, vt1 INNER JOIN t0 ON ((t1.c0)<>(vt0.c0)) COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON ((((vt0.c0)&(t0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c2))) AND (COALESCE(t1.c2, t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c2))) WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t1, vt1 INNER JOIN t0 ON ((t1.c0)<>(vt0.c0)) COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON ((((vt0.c0)&(t0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c2))) AND (COALESCE(t1.c2, t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c2))) WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM t1, vt1 INNER JOIN t0 ON ((t1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON ((((vt0.c0)&(t0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c2))) AND (COALESCE(t1.c2, t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c2)));
SELECT DISTINCT * FROM t0, t1, vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0, t1, vt1 NATURAL JOIN vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM t0, t1, vt1 NATURAL JOIN vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM t0, t1, vt1 NATURAL JOIN vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt1 NATURAL JOIN vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LIKELIHOOD((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.4412497949123311)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.4412497949123311)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELIHOOD((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.4412497949123311)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING 0xfffffffff765b89d COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (0xfffffffff765b89d COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((0Xfffffffff765b89d COLLATE NOCASE) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING 0xfffffffff765b89d COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (0xfffffffff765b89d COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((0Xfffffffff765b89d COLLATE NOCASE) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0, t1.c2, t1.c1 FROM t1, vt1, t0;
SELECT ALL vt1.c0, t1.c2, t1.c1 FROM t1, vt1, t0 WHERE ('') UNION ALL SELECT ALL vt1.c0, t1.c2, t1.c1 FROM t1, vt1, t0 WHERE ((NOT (''))) UNION ALL SELECT vt1.c0, t1.c2, t1.c1 FROM t1, vt1, t0 WHERE ((('') ISNULL));
SELECT vt1.c0, t1.c2, t1.c1 FROM t1, vt1, t0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c1)||(vt1.c1)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(vt1.c1 AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt1.c1)||(vt1.c1)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(vt1.c1 AS REAL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((((((vt1.c1)||(vt1.c1)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(vt1.c1 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL t1.c2, t1.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t1.c2, t1.c1, vt0.c0, t1.c0;
SELECT ALL t1.c2, t1.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 WHERE (((((t1.c2) BETWEEN (t1.c0) AND (t1.c1))) IS TRUE)) GROUP BY t1.c2, t1.c1, vt0.c0, t1.c0 UNION SELECT ALL t1.c2, t1.c1, vt0.c0, t1.c0 FROM t0 NOT INDEXED, vt0, t1 WHERE ((NOT (((((t1.c2) BETWEEN (t1.c0) AND (t1.c1))) IS TRUE)))) GROUP BY t1.c2, t1.c1, vt0.c0, t1.c0 UNION SELECT ALL t1.c2, t1.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 WHERE (((((((t1.c2) BETWEEN (t1.c0) AND (t1.c1))) IS TRUE)) ISNULL)) GROUP BY t1.c2, t1.c1, vt0.c0, t1.c0;
SELECT ALL t1.c2, t1.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t1.c2, t1.c1, vt0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(CAST(COUNT(*) AS NUMERIC)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(CAST(COUNT(*) AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(CAST(COUNT(*) AS NUMERIC))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, ((vt0.c0) IS FALSE), vt0.c0)) AND ((UPPER(vt0.c0), t0.c0, (- (t0.c0)))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, ((vt0.c0) IS FALSE), vt0.c0)) AND ((UPPER(vt0.c0), t0.c0, (- (t0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, ((vt0.c0) IS FALSE), vt0.c0)) AND ((UPPER(vt0.c0), t0.c0, (- (t0.c0)))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((('-2124875957')OR(('-2076255633' IN (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((('-2124875957')OR(('-2076255633' IN (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((('-2124875957')OR(('-2076255633' IN (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) IS TRUE)) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) IS TRUE)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) IS TRUE)) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0 HAVING (((t1.c2)) NOT BETWEEN (((SUM(NULL) IN ()))) AND (((COUNT(t1.c0) IN ())))) UNION ALL SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0 HAVING (NOT ((((t1.c2)) NOT BETWEEN (((SUM(NULL) IN ()))) AND (((COUNT(t1.c0) IN ())))))) UNION ALL SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0 HAVING (((((t1.c2)) NOT BETWEEN (((SUM(NULL) IN ()))) AND (((COUNT(t1.c0) IN ()))))) ISNULL);
SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0 HAVING (((t1.c2)) NOT BETWEEN (((SUM(NULL) IN ()))) AND (((COUNT(t1.c0) IN ())))) UNION ALL SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0 HAVING (NOT ((((t1.c2)) NOT BETWEEN (((SUM(NULL) IN ()))) AND (((COUNT(t1.c0) IN ())))))) UNION ALL SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0 HAVING (((((t1.c2)) NOT BETWEEN (((SUM(NULL) IN ()))) AND (((COUNT(t1.c0) IN ()))))) ISNULL);
SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t1.c0) IS TRUE)) NOTNULL) GROUP BY t0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t1, t0, vt1;
SELECT DISTINCT * FROM t1, t0, vt1 WHERE (vt1.c1) UNION SELECT DISTINCT * FROM t1, t0, vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT * FROM t1, t0, vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT * FROM t1, t0, vt1;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NULL COLLATE RTRIM IN ())) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((NULL COLLATE RTRIM IN ())))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((NULL COLLATE RTRIM IN ())) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0 HAVING LOWER(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0 HAVING (NOT (LOWER(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0 HAVING ((LOWER(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0 HAVING LOWER(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0 HAVING (NOT (LOWER(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0 HAVING ((LOWER(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON TYPEOF(CAST(NULL AS INTEGER)) GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON '-657021485';
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON '-657021485' WHERE (((x'bb3a')IS((vt1.c0 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON '-657021485' WHERE ((NOT (((x'bb3a')IS((vt1.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON '-657021485' WHERE (((((x'bb3a')IS((vt1.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON '-657021485';
SELECT vt0.c0, t0.c0, t1.c2 FROM vt1, t1, vt0, t0 GROUP BY vt0.c0, t0.c0, t1.c2;
SELECT ALL vt0.c0, t0.c0, t1.c2 FROM vt1 NOT INDEXED, t1, vt0, t0 WHERE (((((((((TRIM('i%'))OR(CASE WHEN t1.c1 THEN vt1.c0 END)))AND((vt1.c1 IN ()))))OR(CASE WHEN t1.c1 THEN vt1.c1 ELSE t1.c1 END)))OR(x''))) GROUP BY vt0.c0, t0.c0, t1.c2 UNION SELECT vt0.c0, t0.c0, t1.c2 FROM vt1, t1, vt0, t0 WHERE ((NOT (((((((((TRIM('i%'))OR(CASE WHEN t1.c1 THEN vt1.c0 END)))AND((vt1.c1 IN ()))))OR(CASE WHEN t1.c1 THEN vt1.c1 ELSE t1.c1 END)))OR(x''))))) GROUP BY vt0.c0, t0.c0, t1.c2 UNION SELECT ALL vt0.c0, t0.c0, t1.c2 FROM vt1, t1, vt0, t0 WHERE (((((((((((TRIM('i%'))OR(CASE WHEN t1.c1 THEN vt1.c0 END)))AND((vt1.c1 IN ()))))OR(CASE WHEN t1.c1 THEN vt1.c1 ELSE t1.c1 END)))OR(x''))) ISNULL)) GROUP BY vt0.c0, t0.c0, t1.c2;
SELECT vt0.c0, t0.c0, t1.c2 FROM vt1, t1, vt0, t0 GROUP BY vt0.c0, t0.c0, t1.c2;
SELECT ALL t1.c0, vt1.c1, t1.c1, t1.c2, vt1.c0, t0.c0 FROM t0, vt1, t1 INDEXED BY i89 GROUP BY t1.c0, vt1.c1, t1.c1, t1.c2, vt1.c0, t0.c0;
SELECT ALL t1.c0, vt1.c1, t1.c1, t1.c2, vt1.c0, t0.c0 FROM t0, vt1, t1 INDEXED BY i89 GROUP BY t1.c0, vt1.c1, t1.c1, t1.c2, vt1.c0, t0.c0 HAVING SUM(MAX(t0.c0)) COLLATE NOCASE UNION ALL SELECT ALL t1.c0, vt1.c1, t1.c1, t1.c2, vt1.c0, t0.c0 FROM t0, vt1, t1 INDEXED BY i89 GROUP BY t1.c0, vt1.c1, t1.c1, t1.c2, vt1.c0, t0.c0 HAVING (NOT (SUM(MAX(t0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL t1.c0, vt1.c1, t1.c1, t1.c2, vt1.c0, t0.c0 FROM t0, vt1, t1 INDEXED BY i89 GROUP BY t1.c0, vt1.c1, t1.c1, t1.c2, vt1.c0, t0.c0 HAVING ((SUM(MAX(t0.c0)) COLLATE NOCASE) ISNULL);
SELECT vt1.c1 FROM vt1, vt0;
SELECT ALL vt1.c1 FROM vt1, vt0 WHERE (-828757789) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((NOT (-828757789))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 WHERE (((-828757789) ISNULL));
SELECT vt1.c1 FROM vt1, vt0;
SELECT DISTINCT t0.c0, vt1.c0, t1.c1, t1.c0 FROM vt0 CROSS JOIN vt1 ON (((vt1.c1 IN ())) NOTNULL) RIGHT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) CROSS JOIN t0 ON IFNULL(((vt0.c0)LIKE(vt1.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN 0.26596197793948484 THEN x'd047' WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END);
SELECT DISTINCT t0.c0, vt1.c0, t1.c1, t1.c0 FROM vt0 CROSS JOIN vt1 ON (((vt1.c1 IN ())) NOTNULL) RIGHT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) CROSS JOIN t0 ON IFNULL(((vt0.c0)LIKE(vt1.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN 0.26596197793948484 THEN x'd047' WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END) WHERE (t1.c1) UNION SELECT DISTINCT t0.c0, vt1.c0, t1.c1, t1.c0 FROM vt0 CROSS JOIN vt1 ON (((vt1.c1 IN ())) NOTNULL) RIGHT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) CROSS JOIN t0 ON IFNULL(((vt0.c0)LIKE(vt1.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN 0.26596197793948484 THEN x'd047' WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END) WHERE ((NOT (t1.c1))) UNION SELECT DISTINCT t0.c0, vt1.c0, t1.c1, t1.c0 FROM vt0 CROSS JOIN vt1 ON (((vt1.c1 IN ())) NOTNULL) RIGHT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) CROSS JOIN t0 ON IFNULL(((vt0.c0)LIKE(vt1.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN 0.26596197793948484 THEN x'd047' WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END) WHERE (((t1.c1) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0, t1.c1, t1.c0 FROM vt0 CROSS JOIN vt1 ON (((vt1.c1 IN ())) NOTNULL) RIGHT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) CROSS JOIN t0 ON IFNULL(((vt0.c0)LIKE(vt1.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN 0.26596197793948484 THEN x'd047' WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t1.c0, t0.c0, t1.c2 FROM vt0, t0, t1 NATURAL JOIN vt1 GROUP BY vt0.c0, t1.c0, t0.c0, t1.c2;
SELECT ALL vt0.c0, t1.c0, t0.c0, t1.c2 FROM vt0, t0, t1 NATURAL JOIN vt1 GROUP BY vt0.c0, t1.c0, t0.c0, t1.c2 HAVING TOTAL(TOTAL(MAX(AVG('bHUXL,!~)')))) UNION ALL SELECT vt0.c0, t1.c0, t0.c0, t1.c2 FROM vt0, t0, t1 NATURAL JOIN vt1 GROUP BY vt0.c0, t1.c0, t0.c0, t1.c2 HAVING (NOT (TOTAL(TOTAL(MAX(AVG('bHUXL,!~)')))))) UNION ALL SELECT vt0.c0, t1.c0, t0.c0, t1.c2 FROM vt0, t0, t1 NATURAL JOIN vt1 GROUP BY vt0.c0, t1.c0, t0.c0, t1.c2 HAVING ((TOTAL(TOTAL(MAX(AVG('bHUXL,!~)'))))) ISNULL);
SELECT * FROM vt1, t1;
SELECT ALL * FROM vt1, t1 WHERE (((CAST(vt1.c1 AS BLOB)) BETWEEN (((t1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))) UNION ALL SELECT ALL * FROM vt1, t1 WHERE ((NOT (((CAST(vt1.c1 AS BLOB)) BETWEEN (((t1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))))) UNION ALL SELECT * FROM vt1, t1 WHERE (((((CAST(vt1.c1 AS BLOB)) BETWEEN (((t1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))) ISNULL));
SELECT * FROM vt1, t1;
SELECT DISTINCT t1.c2 FROM vt1, t1;
SELECT DISTINCT t1.c2 FROM vt1, t1 WHERE (((CASE WHEN vt1.c0 THEN t1.c2 ELSE vt1.c1 END) NOT BETWEEN ((t1.c1 IN ())) AND ((NOT (x''))))) UNION SELECT DISTINCT t1.c2 FROM vt1, t1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN t1.c2 ELSE vt1.c1 END) NOT BETWEEN ((t1.c1 IN ())) AND ((NOT (x''))))))) UNION SELECT DISTINCT t1.c2 FROM vt1, t1 WHERE (((((CASE WHEN vt1.c0 THEN t1.c2 ELSE vt1.c1 END) NOT BETWEEN ((t1.c1 IN ())) AND ((NOT (x''))))) ISNULL));
SELECT DISTINCT t1.c2 FROM vt1, t1;
SELECT t1.c1, t1.c0 FROM vt0, t0, t1 INDEXED BY i89 GROUP BY t1.c1, t1.c0;
SELECT ALL t1.c1, t1.c0 FROM vt0, t0, t1 INDEXED BY i89 WHERE (((((t1.c2)<(t1.c2)))|(t1.c0))) GROUP BY t1.c1, t1.c0 UNION SELECT t1.c1, t1.c0 FROM vt0, t0, t1 INDEXED BY i89 WHERE ((NOT (((((t1.c2)<(t1.c2)))|(t1.c0))))) GROUP BY t1.c1, t1.c0 UNION SELECT t1.c1, t1.c0 FROM vt0, t0, t1 INDEXED BY i89 WHERE (((((((t1.c2)<(t1.c2)))|(t1.c0))) ISNULL)) GROUP BY t1.c1, t1.c0;
SELECT t1.c1, t1.c0 FROM vt0, t0, t1 INDEXED BY i89 GROUP BY t1.c1, t1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LOWER(DISTINCT vt0.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LOWER(DISTINCT vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LOWER(DISTINCT vt0.c0) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LOWER(DISTINCT vt0.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LOWER(DISTINCT vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LOWER(DISTINCT vt0.c0) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((('582155447') IS TRUE)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((('582155447') IS TRUE)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((('582155447') IS TRUE)) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, t1, vt0;
SELECT DISTINCT * FROM vt1, t1, vt0 WHERE (CASE WHEN ((vt1.c0)>>(vt0.c0)) THEN t1.c2 COLLATE RTRIM WHEN ((t1.c2) BETWEEN (vt0.c0) AND (t1.c2)) THEN NULL WHEN -198505820 THEN t1.c1 COLLATE BINARY END) UNION SELECT DISTINCT * FROM vt1, t1, vt0 WHERE ((NOT (CASE WHEN ((vt1.c0)>>(vt0.c0)) THEN t1.c2 COLLATE RTRIM WHEN ((t1.c2) BETWEEN (vt0.c0) AND (t1.c2)) THEN NULL WHEN -198505820 THEN t1.c1 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM vt1, t1, vt0 WHERE (((CASE WHEN ((vt1.c0)>>(vt0.c0)) THEN t1.c2 COLLATE RTRIM WHEN ((t1.c2) BETWEEN (vt0.c0) AND (t1.c2)) THEN NULL WHEN -198505820 THEN t1.c1 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM vt1, t1, vt0;
SELECT ALL t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON t1.c2 RIGHT OUTER JOIN vt0 ON CASE 0xffffffff9d359679  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c2 END COLLATE RTRIM GROUP BY t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1;
SELECT t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON t1.c2 RIGHT OUTER JOIN vt0 ON CASE 0xffffffff9d359679  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c2 END COLLATE RTRIM WHERE ((~ (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1 UNION SELECT ALL t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON t1.c2 RIGHT OUTER JOIN vt0 ON CASE 0Xffffffff9d359679  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c2 END COLLATE RTRIM WHERE ((NOT ((~ (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1 UNION SELECT ALL t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON t1.c2 RIGHT OUTER JOIN vt0 ON CASE 0xffffffff9d359679  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c2 END COLLATE RTRIM WHERE ((((~ (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1;
SELECT ALL t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON t1.c2 RIGHT OUTER JOIN vt0 ON CASE 0xffffffff9d359679  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c2 END COLLATE RTRIM GROUP BY t1.c0, vt0.c0, t1.c2, vt1.c0, t1.c1, t0.c0, vt1.c1;
SELECT ALL t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0;
SELECT ALL t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0 HAVING AVG(((((t0.c0)AND(vt1.c0)))OR(vt1.c0))) UNION ALL SELECT t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0 HAVING (NOT (AVG(((((t0.c0)AND(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0 HAVING ((AVG(((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))) ISNULL);
SELECT ALL t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0;
SELECT ALL t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0 HAVING AVG(((((t0.c0)AND(vt1.c0)))OR(vt1.c0))) UNION ALL SELECT t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0 HAVING (NOT (AVG(((((t0.c0)AND(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0 HAVING ((AVG(((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))) ISNULL);
SELECT ALL t1.c2, t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c2, t1.c0;
SELECT t1.c1, t0.c0, vt0.c0 FROM t1, t0, vt0;
SELECT t1.c1, t0.c0, vt0.c0 FROM t1, t0, vt0 WHERE ((((t1.c0 IN ()))OR(x''))) UNION ALL SELECT t1.c1, t0.c0, vt0.c0 FROM t1, t0, vt0 WHERE ((NOT ((((t1.c0 IN ()))OR(x''))))) UNION ALL SELECT t1.c1, t0.c0, vt0.c0 FROM t1, t0, vt0 WHERE ((((((t1.c0 IN ()))OR(x''))) ISNULL));
SELECT t1.c1, t0.c0, vt0.c0 FROM t1, t0, vt0;
SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t1 ON CAST((t1.c0 IN (NULL)) AS BLOB) RIGHT OUTER JOIN t0 ON vt1.c1;
SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t1 ON CAST((t1.c0 IN (NULL)) AS BLOB) RIGHT OUTER JOIN t0 ON vt1.c1 WHERE (((((t1.c0)*(vt1.c1))) BETWEEN ((((((((('745191769')OR(t0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(t1.c2))) AND (NULL))) UNION SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t1 ON CAST((t1.c0 IN (NULL)) AS BLOB) RIGHT OUTER JOIN t0 ON vt1.c1 WHERE ((NOT (((((t1.c0)*(vt1.c1))) BETWEEN ((((((((('745191769')OR(t0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(t1.c2))) AND (NULL))))) UNION SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t1 ON CAST((t1.c0 IN (NULL)) AS BLOB) RIGHT OUTER JOIN t0 ON vt1.c1 WHERE (((((((t1.c0)*(vt1.c1))) BETWEEN ((((((((('745191769')OR(t0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(t1.c2))) AND (NULL))) ISNULL));
SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t1 ON CAST((t1.c0 IN (NULL)) AS BLOB) RIGHT OUTER JOIN t0 ON vt1.c1;
SELECT ALL vt1.c1, t1.c0, vt1.c0 FROM t0, t1, vt1 GROUP BY vt1.c1, t1.c0, vt1.c0;
SELECT ALL vt1.c1, t1.c0, vt1.c0 FROM t0, t1, vt1 WHERE (0.5535209731965595) GROUP BY vt1.c1, t1.c0, vt1.c0 UNION SELECT vt1.c1, t1.c0, vt1.c0 FROM t0, t1, vt1 WHERE ((NOT (0.5535209731965595))) GROUP BY vt1.c1, t1.c0, vt1.c0 UNION SELECT ALL vt1.c1, t1.c0, vt1.c0 FROM t0, t1, vt1 WHERE (((0.5535209731965595) ISNULL)) GROUP BY vt1.c1, t1.c0, vt1.c0;
SELECT ALL vt1.c1, t1.c0, vt1.c0 FROM t0, t1, vt1 GROUP BY vt1.c1, t1.c0, vt1.c0;
SELECT vt1.c1, t1.c2, t0.c0, vt1.c0 FROM vt1, t1, t0 GROUP BY vt1.c1, t1.c2, t0.c0, vt1.c0;
SELECT vt1.c1, t1.c2, t0.c0, vt1.c0 FROM vt1, t1, t0 GROUP BY vt1.c1, t1.c2, t0.c0, vt1.c0 HAVING GROUP_CONCAT(((SUM(SUM(t0.c0))) ISNULL)) UNION ALL SELECT ALL vt1.c1, t1.c2, t0.c0, vt1.c0 FROM vt1, t1, t0 GROUP BY vt1.c1, t1.c2, t0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(((SUM(SUM(t0.c0))) ISNULL)))) UNION ALL SELECT vt1.c1, t1.c2, t0.c0, vt1.c0 FROM vt1, t1, t0 GROUP BY vt1.c1, t1.c2, t0.c0, vt1.c0 HAVING ((GROUP_CONCAT(((SUM(SUM(t0.c0))) ISNULL))) ISNULL);
SELECT t1.c2, t1.c1, vt0.c0, vt1.c1, vt1.c0, t0.c0, t1.c0 FROM t1 CROSS JOIN t0 ON CASE LOWER(t0.c0)  WHEN (((t1.c2)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((vt0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN ((t0.c0)<=(vt0.c0)) WHEN x'' THEN CASE 1.453890096E9  WHEN vt0.c0 THEN t0.c0 END ELSE INSTR(t1.c1, vt1.c1) END INNER JOIN vt0 ON CAST(TYPEOF(t1.c1) AS REAL) CROSS JOIN vt1 ON ((+ (vt1.c0)) IN ());
SELECT ALL t1.c2, t1.c1, vt0.c0, vt1.c1, vt1.c0, t0.c0, t1.c0 FROM t1 CROSS JOIN t0 ON CASE LOWER(t0.c0)  WHEN (((t1.c2)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((vt0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN ((t0.c0)<=(vt0.c0)) WHEN x'' THEN CASE 1.453890096E9  WHEN vt0.c0 THEN t0.c0 END ELSE INSTR(t1.c1, vt1.c1) END INNER JOIN vt0 ON CAST(TYPEOF(t1.c1) AS REAL) CROSS JOIN vt1 ON ((+ (vt1.c0)) IN ()) WHERE (CAST(((t1.c1)%(t1.c1)) AS TEXT)) UNION ALL SELECT ALL t1.c2, t1.c1, vt0.c0, vt1.c1, vt1.c0, t0.c0, t1.c0 FROM t1 CROSS JOIN t0 ON CASE LOWER(t0.c0)  WHEN (((t1.c2)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((vt0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN ((t0.c0)<=(vt0.c0)) WHEN x'' THEN CASE 1.453890096E9  WHEN vt0.c0 THEN t0.c0 END ELSE INSTR(t1.c1, vt1.c1) END INNER JOIN vt0 ON CAST(TYPEOF(t1.c1) AS REAL) CROSS JOIN vt1 ON ((+ (vt1.c0)) IN ()) WHERE ((NOT (CAST(((t1.c1)%(t1.c1)) AS TEXT)))) UNION ALL SELECT ALL t1.c2, t1.c1, vt0.c0, vt1.c1, vt1.c0, t0.c0, t1.c0 FROM t1 CROSS JOIN t0 ON CASE LOWER(t0.c0)  WHEN (((t1.c2)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((vt0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN ((t0.c0)<=(vt0.c0)) WHEN x'' THEN CASE 1.453890096E9  WHEN vt0.c0 THEN t0.c0 END ELSE INSTR(t1.c1, vt1.c1) END INNER JOIN vt0 ON CAST(TYPEOF(t1.c1) AS REAL) CROSS JOIN vt1 ON ((+ (vt1.c0)) IN ()) WHERE (((CAST(((t1.c1)%(t1.c1)) AS TEXT)) ISNULL));
SELECT t1.c2, t1.c1, vt0.c0, vt1.c1, vt1.c0, t0.c0, t1.c0 FROM t1 CROSS JOIN t0 ON CASE LOWER(t0.c0)  WHEN (((t1.c2)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((vt0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN ((t0.c0)<=(vt0.c0)) WHEN x'' THEN CASE 1.453890096E9  WHEN vt0.c0 THEN t0.c0 END ELSE INSTR(t1.c1, vt1.c1) END INNER JOIN vt0 ON CAST(TYPEOF(t1.c1) AS REAL) CROSS JOIN vt1 ON ((+ (vt1.c0)) IN ());
SELECT DISTINCT * FROM t0, t1, vt0, vt1;
SELECT DISTINCT * FROM t0, t1, vt0, vt1 WHERE ((((t1.c1 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM t0, t1, vt0, vt1 WHERE ((NOT ((((t1.c1 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, t1, vt0, vt1 WHERE ((((((t1.c1 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0, vt1;
SELECT ALL t1.c1, t1.c2, vt1.c1 FROM vt0, t0, vt1, t1 GROUP BY t1.c1, t1.c2, vt1.c1;
SELECT ALL t1.c1, t1.c2, vt1.c1 FROM vt0, t0, vt1, t1 WHERE (INSTR(TYPEOF(t1.c1), (+ (vt1.c1)))) GROUP BY t1.c1, t1.c2, vt1.c1 UNION SELECT t1.c1, t1.c2, vt1.c1 FROM vt0, t0, vt1, t1 WHERE ((NOT (INSTR(TYPEOF(t1.c1), (+ (vt1.c1)))))) GROUP BY t1.c1, t1.c2, vt1.c1 UNION SELECT t1.c1, t1.c2, vt1.c1 FROM vt0, t0 NOT INDEXED, vt1, t1 WHERE (((INSTR(TYPEOF(t1.c1), (+ (vt1.c1)))) ISNULL)) GROUP BY t1.c1, t1.c2, vt1.c1;
SELECT ALL t1.c1, t1.c2, vt1.c1 FROM vt0, t0, vt1, t1 GROUP BY t1.c1, t1.c2, vt1.c1;
SELECT t0.c0, vt1.c0, vt0.c0 FROM t0, t1, vt1, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, t1, vt1, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING SUM(TRIM(SUM(MIN(vt0.c0)))) UNION ALL SELECT t0.c0, vt1.c0, vt0.c0 FROM t0, t1, vt1, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (SUM(TRIM(SUM(MIN(vt0.c0)))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, t1, vt1, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((SUM(TRIM(SUM(MIN(vt0.c0))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0)OR(t0.c0)) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0)OR(t0.c0)) IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt1.c1 FROM vt0, vt1, t0, t1;
SELECT DISTINCT vt1.c1 FROM vt0, vt1, t0, t1 WHERE ((((((x'')) NOT BETWEEN ((t1.c1)) AND ((vt1.c1))))IS(((vt1.c1)<=(0xffffffffea9c52bd))))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1, t0, t1 WHERE ((NOT ((((((x'')) NOT BETWEEN ((t1.c1)) AND ((vt1.c1))))IS(((vt1.c1)<=(0xffffffffea9c52bd))))))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1, t0, t1 WHERE ((((((((x'')) NOT BETWEEN ((t1.c1)) AND ((vt1.c1))))IS(((vt1.c1)<=(0Xffffffffea9c52bd))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt0, vt1, t0, t1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT NULL) ELSE (~ (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT NULL) ELSE (~ (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT NULL) ELSE (~ (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0;
SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING TYPEOF(((vt1.c0)<<(TOTAL(COUNT(SUM(vt1.c0)))))) UNION ALL SELECT vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING (NOT (TYPEOF(((vt1.c0)<<(TOTAL(COUNT(SUM(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING ((TYPEOF(((vt1.c0)<<(TOTAL(COUNT(SUM(vt1.c0))))))) ISNULL);
SELECT * FROM t0, t1, vt0;
SELECT * FROM t0, t1, vt0 WHERE ((- (t1.c1)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, t1, vt0 WHERE ((NOT ((- (t1.c1)) COLLATE BINARY))) UNION ALL SELECT * FROM t0, t1, vt0 WHERE ((((- (t1.c1)) COLLATE BINARY) ISNULL));
SELECT * FROM t0, t1, vt0;
SELECT DISTINCT t1.c2, vt1.c0 FROM vt1, t1;
SELECT DISTINCT t1.c2, vt1.c0 FROM vt1, t1 WHERE (LIKELY(DISTINCT t1.c2) COLLATE BINARY) UNION SELECT DISTINCT t1.c2, vt1.c0 FROM vt1, t1 WHERE ((NOT (LIKELY(DISTINCT t1.c2) COLLATE BINARY))) UNION SELECT DISTINCT t1.c2, vt1.c0 FROM vt1, t1 WHERE (((LIKELY(DISTINCT t1.c2) COLLATE BINARY) ISNULL));
SELECT DISTINCT t1.c2, vt1.c0 FROM vt1, t1;
SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t0, t1 WHERE (vt0.c0) GROUP BY t1.c0 UNION SELECT t1.c0 FROM vt0, t0, t1 WHERE ((NOT (vt0.c0))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM vt0, t0, t1 WHERE (((vt0.c0) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t0, t1 GROUP BY t1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING (((t0.c0, MAX(t0.c0), COUNT(vt1.c0))) BETWEEN ((SUM(t0.c0), MAX(vt1.c1), ('1228005504' IN (TOTAL(TOTAL(t0.c0)))))) AND ((x'', MAX(AVG(t0.c0)), CASE WHEN COUNT(vt1.c0) THEN vt1.c0 ELSE GROUP_CONCAT(TOTAL(SUM(TOTAL(vt1.c1)))) END))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((((t0.c0, MAX(t0.c0), COUNT(vt1.c0))) BETWEEN ((SUM(t0.c0), MAX(vt1.c1), ('1228005504' IN (TOTAL(TOTAL(t0.c0)))))) AND ((x'', MAX(AVG(t0.c0)), CASE WHEN COUNT(vt1.c0) THEN vt1.c0 ELSE GROUP_CONCAT(TOTAL(SUM(TOTAL(vt1.c1)))) END))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING (((((t0.c0, MAX(t0.c0), COUNT(vt1.c0))) BETWEEN ((SUM(t0.c0), MAX(vt1.c1), ('1228005504' IN (TOTAL(TOTAL(t0.c0)))))) AND ((x'', MAX(AVG(t0.c0)), CASE WHEN COUNT(vt1.c0) THEN vt1.c0 ELSE GROUP_CONCAT(TOTAL(SUM(TOTAL(vt1.c1)))) END)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM t0, vt1;
SELECT vt1.c1, vt1.c0 FROM t0, vt1 WHERE (ABS(vt1.c0) COLLATE RTRIM) UNION ALL SELECT vt1.c1, vt1.c0 FROM t0, vt1 WHERE ((NOT (ABS(vt1.c0) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM t0, vt1 WHERE (((ABS(vt1.c0) COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)+(vt0.c0)), (((vt0.c0))>=((0.13652591614935783)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)+(vt0.c0)), (((vt0.c0))>=((0.13652591614935783)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)+(vt0.c0)), (((vt0.c0))>=((0.13652591614935783)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t1.c1, vt1.c1, t1.c0 FROM t1 INNER JOIN vt1 ON CAST(((t1.c1)OR(vt1.c0)) AS REAL) INNER JOIN vt0 ON ((TRIM(DISTINCT vt1.c1))>(0.17034186799573947)) GROUP BY t1.c1, vt1.c1, t1.c0;
SELECT ALL t1.c1, vt1.c1, t1.c0 FROM t1 INNER JOIN vt1 ON CAST(((t1.c1)OR(vt1.c0)) AS REAL) INNER JOIN vt0 ON ((TRIM(DISTINCT vt1.c1))>(0.17034186799573947)) WHERE (((((vt1.c1) IS TRUE)) ISNULL)) GROUP BY t1.c1, vt1.c1, t1.c0 UNION SELECT t1.c1, vt1.c1, t1.c0 FROM t1 INNER JOIN vt1 ON CAST(((t1.c1)OR(vt1.c0)) AS REAL) INNER JOIN vt0 ON ((TRIM(DISTINCT vt1.c1))>(0.17034186799573947)) WHERE ((NOT (((((vt1.c1) IS TRUE)) ISNULL)))) GROUP BY t1.c1, vt1.c1, t1.c0 UNION SELECT t1.c1, vt1.c1, t1.c0 FROM t1 INNER JOIN vt1 ON CAST(((t1.c1)OR(vt1.c0)) AS REAL) INNER JOIN vt0 ON ((TRIM(DISTINCT vt1.c1))>(0.17034186799573947)) WHERE (((((((vt1.c1) IS TRUE)) ISNULL)) ISNULL)) GROUP BY t1.c1, vt1.c1, t1.c0;
SELECT ALL t1.c1, vt1.c1, t1.c0 FROM t1 INNER JOIN vt1 ON CAST(((t1.c1)OR(vt1.c0)) AS REAL) INNER JOIN vt0 ON ((TRIM(DISTINCT vt1.c1))>(0.17034186799573947)) GROUP BY t1.c1, vt1.c1, t1.c0;
SELECT ALL t0.c0, t1.c0, t1.c1 FROM vt0 LEFT OUTER JOIN t0 ON 0Xffffffff843eda6f CROSS JOIN t1 ON 0.4248279476711917 GROUP BY t0.c0, t1.c0, t1.c1;
SELECT ALL t0.c0, t1.c0, t1.c1 FROM vt0 LEFT OUTER JOIN t0 ON 0Xffffffff843eda6f CROSS JOIN t1 ON 0.4248279476711917 GROUP BY t0.c0, t1.c0, t1.c1 HAVING SUM(CASE COUNT(*)  WHEN vt0.c0 THEN GROUP_CONCAT(SUM(GROUP_CONCAT(t1.c2))) ELSE vt0.c0 END) UNION ALL SELECT t0.c0, t1.c0, t1.c1 FROM vt0 LEFT OUTER JOIN t0 ON 0Xffffffff843eda6f CROSS JOIN t1 ON 0.4248279476711917 GROUP BY t0.c0, t1.c0, t1.c1 HAVING (NOT (SUM(CASE COUNT(*)  WHEN vt0.c0 THEN GROUP_CONCAT(SUM(GROUP_CONCAT(t1.c2))) ELSE vt0.c0 END))) UNION ALL SELECT ALL t0.c0, t1.c0, t1.c1 FROM vt0 LEFT OUTER JOIN t0 ON 0Xffffffff843eda6f CROSS JOIN t1 ON 0.4248279476711917 GROUP BY t0.c0, t1.c0, t1.c1 HAVING ((SUM(CASE COUNT(*)  WHEN vt0.c0 THEN GROUP_CONCAT(SUM(GROUP_CONCAT(t1.c2))) ELSE vt0.c0 END)) ISNULL);
SELECT MIN((NOT (CAST(t1.c2 AS INTEGER)))) FROM vt1, t0, t1;
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE ((- (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT ((- (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))))))) UNION ALL SELECT * FROM t1, t0 WHERE ((((- (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))))) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT vt1.c1, t0.c0, vt1.c0, vt0.c0, t1.c0, t1.c1 FROM vt1, t0, vt0, t1;
SELECT DISTINCT vt1.c1, t0.c0, vt1.c0, vt0.c0, t1.c0, t1.c1 FROM vt1, t0, vt0, t1 WHERE ((- ((t1.c2 IN ())))) UNION SELECT DISTINCT vt1.c1, t0.c0, vt1.c0, vt0.c0, t1.c0, t1.c1 FROM vt1, t0, vt0, t1 WHERE ((NOT ((- ((t1.c2 IN ())))))) UNION SELECT DISTINCT vt1.c1, t0.c0, vt1.c0, vt0.c0, t1.c0, t1.c1 FROM vt1, t0, vt0, t1 WHERE ((((- ((t1.c2 IN ())))) ISNULL));
SELECT DISTINCT vt1.c1, t0.c0, vt1.c0, vt0.c0, t1.c0, t1.c1 FROM vt1, t0, vt0, t1;
SELECT ALL t0.c0 FROM t0, t1, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1, vt1 WHERE (((((t0.c0)OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((t1.c2) BETWEEN (t1.c0) AND (t1.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1, vt1 WHERE ((NOT (((((t0.c0)OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((t1.c2) BETWEEN (t1.c0) AND (t1.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1, vt1 WHERE (((((((t0.c0)OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((t1.c2) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1, vt1 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t1, vt0;
SELECT * FROM t1, vt0 WHERE ((((t1.c1)OR(t1.c2)) IN ())) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((NOT ((((t1.c1)OR(t1.c2)) IN ())))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((((((t1.c1)OR(t1.c2)) IN ())) ISNULL));
SELECT ALL * FROM t1, vt0;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((vt0.c0, t1.c0, t1.c0)) BETWEEN (('-2076255633', vt0.c0, t1.c1)) AND ((vt0.c0, t1.c2, t1.c0))))AND(t1.c2))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT ((((((vt0.c0, t1.c0, t1.c0)) BETWEEN (('-2076255633', vt0.c0, t1.c1)) AND ((vt0.c0, t1.c2, t1.c0))))AND(t1.c2))))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((vt0.c0, t1.c0, t1.c0)) BETWEEN (('-2076255633', vt0.c0, t1.c1)) AND ((vt0.c0, t1.c2, t1.c0))))AND(t1.c2))) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1 FROM t1, vt0, vt1 CROSS JOIN t0 ON (t1.c1 IN ()) GROUP BY t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1;
SELECT t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1 FROM t1, vt0, vt1 CROSS JOIN t0 ON (t1.c1 IN ()) WHERE (CASE WHEN t1.c1 COLLATE RTRIM THEN (- (t0.c0)) END) GROUP BY t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1 UNION SELECT t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1 FROM t1, vt0, vt1 CROSS JOIN t0 ON (t1.c1 IN ()) WHERE ((NOT (CASE WHEN t1.c1 COLLATE RTRIM THEN (- (t0.c0)) END))) GROUP BY t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1 UNION SELECT t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1 FROM t1, vt0, vt1 CROSS JOIN t0 ON (t1.c1 IN ()) WHERE (((CASE WHEN t1.c1 COLLATE RTRIM THEN (- (t0.c0)) END) ISNULL)) GROUP BY t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1;
SELECT t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1 FROM t1, vt0, vt1 CROSS JOIN t0 ON (t1.c1 IN ()) GROUP BY t1.c0, t0.c0, vt1.c1, vt1.c0, t1.c2, vt0.c0, t1.c1;
SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING TOTAL((((t1.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) UNION ALL SELECT vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING (NOT (TOTAL((((t1.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((TOTAL((((t1.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING TOTAL((((t1.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) UNION ALL SELECT vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING (NOT (TOTAL((((t1.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((TOTAL((((t1.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t1.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t1.c2 FROM t0, t1;
SELECT DISTINCT t1.c2 FROM t0, t1 WHERE (CASE (t1.c0 IN (t0.c0, NULL))  WHEN (t0.c0 IN (t1.c1)) THEN x'' END) UNION SELECT DISTINCT t1.c2 FROM t0, t1 WHERE ((NOT (CASE (t1.c0 IN (t0.c0, NULL))  WHEN (t0.c0 IN (t1.c1)) THEN x'' END))) UNION SELECT DISTINCT t1.c2 FROM t0, t1 WHERE (((CASE (t1.c0 IN (t0.c0, NULL))  WHEN (t0.c0 IN (t1.c1)) THEN x'' END) ISNULL));
SELECT DISTINCT t1.c2 FROM t0, t1;
SELECT ALL vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)AND(t0.c0)))OR('*')))OR(((((NULL)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (0Xfffffffff765b89d) AND (vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)AND(t0.c0)))OR('*')))OR(((((NULL)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (0Xfffffffff765b89d) AND (vt0.c0)))) WHERE (((((t0.c0)OR(t0.c0)))AND(((vt0.c0)OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)AND(t0.c0)))OR('*')))OR(((((NULL)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (0Xfffffffff765b89d) AND (vt0.c0)))) WHERE ((NOT (((((t0.c0)OR(t0.c0)))AND(((vt0.c0)OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)AND(t0.c0)))OR('*')))OR(((((NULL)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (0xfffffffff765b89d) AND (vt0.c0)))) WHERE (((((((t0.c0)OR(t0.c0)))AND(((vt0.c0)OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)AND(t0.c0)))OR('*')))OR(((((NULL)AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (0Xfffffffff765b89d) AND (vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0 HAVING CAST(((COUNT(TOTAL(t0.c0)))-(t1.c2)) AS TEXT) UNION ALL SELECT ALL t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0 HAVING (NOT (CAST(((COUNT(TOTAL(t0.c0)))-(t1.c2)) AS TEXT))) UNION ALL SELECT t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0 HAVING ((CAST(((COUNT(TOTAL(t0.c0)))-(t1.c2)) AS TEXT)) ISNULL);
SELECT t1.c1 FROM t1, t0;
SELECT ALL t1.c1 FROM t1, t0 WHERE (((((t1.c1) NOT NULL)) NOTNULL)) UNION ALL SELECT t1.c1 FROM t1, t0 WHERE ((NOT (((((t1.c1) NOT NULL)) NOTNULL)))) UNION ALL SELECT ALL t1.c1 FROM t1, t0 WHERE (((((((t1.c1) NOT NULL)) NOTNULL)) ISNULL));
SELECT t1.c1 FROM t1, t0;
SELECT DISTINCT vt0.c0, t0.c0, t1.c1, vt1.c1, vt1.c0 FROM t1, t0, vt1, vt0;
SELECT DISTINCT vt0.c0, t0.c0, t1.c1, vt1.c1, vt1.c0 FROM t1, t0, vt1, vt0 WHERE ((~ (((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) UNION SELECT DISTINCT vt0.c0, t0.c0, t1.c1, vt1.c1, vt1.c0 FROM t1, t0, vt1, vt0 WHERE ((NOT ((~ (((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))))) UNION SELECT DISTINCT vt0.c0, t0.c0, t1.c1, vt1.c1, vt1.c0 FROM t1, t0, vt1, vt0 WHERE ((((~ (((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, t1.c1, vt1.c1, vt1.c0 FROM t1, t0, vt1, vt0;
SELECT t1.c1, t1.c2, vt0.c0 FROM t0, vt0, t1 GROUP BY t1.c1, t1.c2, vt0.c0;
SELECT ALL t1.c1, t1.c2, vt0.c0 FROM t0, vt0, t1 WHERE (x'8a11') GROUP BY t1.c1, t1.c2, vt0.c0 UNION SELECT t1.c1, t1.c2, vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (x'8a11'))) GROUP BY t1.c1, t1.c2, vt0.c0 UNION SELECT ALL t1.c1, t1.c2, vt0.c0 FROM t0, vt0, t1 WHERE (((x'8a11') ISNULL)) GROUP BY t1.c1, t1.c2, vt0.c0;
SELECT t1.c1, t1.c2, vt0.c0 FROM t0, vt0, t1 GROUP BY t1.c1, t1.c2, vt0.c0;
SELECT ALL t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1;
SELECT ALL t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 HAVING (((t1.c2)) NOT BETWEEN ((MIN(t0.c0))) AND ((MIN(vt1.c0)))) UNION ALL SELECT t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 HAVING (NOT ((((t1.c2)) NOT BETWEEN ((MIN(t0.c0))) AND ((MIN(vt1.c0)))))) UNION ALL SELECT ALL t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 HAVING (((((t1.c2)) NOT BETWEEN ((MIN(t0.c0))) AND ((MIN(vt1.c0))))) ISNULL);
SELECT ALL t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1;
SELECT ALL t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 HAVING (((t1.c2)) NOT BETWEEN ((MIN(t0.c0))) AND ((MIN(vt1.c0)))) UNION ALL SELECT t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 HAVING (NOT ((((t1.c2)) NOT BETWEEN ((MIN(t0.c0))) AND ((MIN(vt1.c0)))))) UNION ALL SELECT ALL t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 HAVING (((((t1.c2)) NOT BETWEEN ((MIN(t0.c0))) AND ((MIN(vt1.c0))))) ISNULL);
SELECT ALL t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1 FROM t1, t0, vt1 GROUP BY t1.c2, t0.c0, t1.c0, vt1.c0, vt1.c1, t1.c1;
SELECT ALL * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0, vt1 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN ('-657021485' IN ()) THEN TRIM(vt0.c0) ELSE TOTAL_CHANGES() END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE WHEN ('-657021485' IN ()) THEN TRIM(vt0.c0) ELSE TOTAL_CHANGES() END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN ('-657021485' IN ()) THEN TRIM(vt0.c0) ELSE TOTAL_CHANGES() END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, t0 WHERE (((vt1.c1)>(t0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT (((vt1.c1)>(t0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, t0 WHERE (((((vt1.c1)>(t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL t1.c0, t0.c0 FROM vt1, t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM vt1, t1, t0 GROUP BY t1.c0, t0.c0 HAVING TOTAL(((vt1.c0) NOT BETWEEN (AVG(SUM(AVG(t1.c0)))) AND (vt1.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM vt1, t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (TOTAL(((vt1.c0) NOT BETWEEN (AVG(SUM(AVG(t1.c0)))) AND (vt1.c0))))) UNION ALL SELECT t1.c0, t0.c0 FROM vt1, t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((TOTAL(((vt1.c0) NOT BETWEEN (AVG(SUM(AVG(t1.c0)))) AND (vt1.c0)))) ISNULL);
SELECT ALL MAX(((((vt1.c0) NOTNULL)) IS TRUE)) FROM vt1, t0;
SELECT * FROM vt0 INNER JOIN t1 ON ((((t1.c1)||(t1.c1)))GLOB(t1.c2));
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((((t1.c1)||(t1.c1)))GLOB(t1.c2)) WHERE (((0.4581133470109102) NOT BETWEEN (0X48ed52ff) AND (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END))) ORDER BY ((((((((t1.c0 COLLATE RTRIM)AND((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c2))))))AND(x'')))OR(((vt0.c0)!=(t1.c1)))))AND(((t1.c0) BETWEEN (vt0.c0) AND (NULL))))  NULLS FIRST, CASE WHEN CAST(t1.c0 AS NUMERIC) THEN ((t1.c2)+(t1.c0)) ELSE (vt0.c0 IN ()) END ASC  NULLS FIRST, t1.c0 DESC;
SELECT * FROM vt0 INNER JOIN t1 ON ((((t1.c1)||(t1.c1)))GLOB(t1.c2)) WHERE ((NOT (((0.4581133470109102) NOT BETWEEN (0x48ed52ff) AND (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END))))) ORDER BY ((((((((t1.c0 COLLATE RTRIM)AND((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c2))))))AND(x'')))OR(((vt0.c0)!=(t1.c1)))))AND(((t1.c0) BETWEEN (vt0.c0) AND (NULL))))  NULLS FIRST, CASE WHEN CAST(t1.c0 AS NUMERIC) THEN ((t1.c2)+(t1.c0)) ELSE (vt0.c0 IN ()) END ASC  NULLS FIRST, t1.c0 DESC;
SELECT * FROM vt0 INNER JOIN t1 ON ((((t1.c1)||(t1.c1)))GLOB(t1.c2)) WHERE (((((0.4581133470109102) NOT BETWEEN (0x48ed52ff) AND (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END))) ISNULL)) ORDER BY ((((((((t1.c0 COLLATE RTRIM)AND((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c2))))))AND(x'')))OR(((vt0.c0)!=(t1.c1)))))AND(((t1.c0) BETWEEN (vt0.c0) AND (NULL))))  NULLS FIRST, CASE WHEN CAST(t1.c0 AS NUMERIC) THEN ((t1.c2)+(t1.c0)) ELSE (vt0.c0 IN ()) END ASC  NULLS FIRST, t1.c0 DESC;
SELECT * FROM vt0 INNER JOIN t1 ON ((((t1.c1)||(t1.c1)))GLOB(t1.c2));
SELECT DISTINCT vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM t0, vt0, vt1, t1;
SELECT DISTINCT vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM t0, vt0, vt1, t1 WHERE (0.9938268488735265 COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM t0, vt0, vt1, t1 WHERE ((NOT (0.9938268488735265 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM t0, vt0, vt1, t1 WHERE (((0.9938268488735265 COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM t0, vt0, vt1, t1;
SELECT vt1.c1, t1.c0, t1.c2, t0.c0, vt0.c0 FROM vt1 FULL OUTER JOIN t0 ON CASE ((t1.c0)<=(t0.c0))  WHEN LIKELIHOOD(DISTINCT vt1.c1, 0.6359340860760979) THEN ((vt1.c0)LIKE(t1.c2)) END LEFT OUTER JOIN vt0 ON CAST(vt1.c1 AS TEXT) COLLATE BINARY RIGHT OUTER JOIN t1 ON CAST(((vt1.c1) BETWEEN (t1.c1) AND (t1.c2)) AS BLOB) GROUP BY vt1.c1, t1.c0, t1.c2, t0.c0, vt0.c0;
SELECT t1.c0, vt1.c0, t0.c0, t1.c2, vt1.c1, t1.c1 FROM vt1, t1 NATURAL JOIN t0 GROUP BY t1.c0, vt1.c0, t0.c0, t1.c2, vt1.c1, t1.c1;
SELECT t1.c0, vt1.c0, t0.c0, t1.c2, vt1.c1, t1.c1 FROM vt1, t1 NATURAL JOIN t0 GROUP BY t1.c0, vt1.c0, t0.c0, t1.c2, vt1.c1, t1.c1 HAVING (((((((vt1.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(LIKELIHOOD(DISTINCT t1.c2, 0.029954642623335137))))OR(GROUP_CONCAT(COUNT(MIN(COUNT(*)))))) UNION ALL SELECT t1.c0, vt1.c0, t0.c0, t1.c2, vt1.c1, t1.c1 FROM vt1, t1 NATURAL JOIN t0 GROUP BY t1.c0, vt1.c0, t0.c0, t1.c2, vt1.c1, t1.c1 HAVING (NOT ((((((((vt1.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(LIKELIHOOD(DISTINCT t1.c2, 0.029954642623335137))))OR(GROUP_CONCAT(COUNT(MIN(COUNT(*)))))))) UNION ALL SELECT t1.c0, vt1.c0, t0.c0, t1.c2, vt1.c1, t1.c1 FROM vt1, t1 NATURAL JOIN t0 GROUP BY t1.c0, vt1.c0, t0.c0, t1.c2, vt1.c1, t1.c1 HAVING (((((((((vt1.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(LIKELIHOOD(DISTINCT t1.c2, 0.029954642623335137))))OR(GROUP_CONCAT(COUNT(MIN(COUNT(*))))))) ISNULL);
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (((vt0.c0 COLLATE RTRIM)>(CASE WHEN vt1.c1 THEN vt1.c0 WHEN '-369164589' THEN vt1.c0 WHEN 0xffffffffab9ae0ae THEN x'' ELSE vt1.c0 END))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)>(CASE WHEN vt1.c1 THEN vt1.c0 WHEN '-369164589' THEN vt1.c0 WHEN 0Xffffffffab9ae0ae THEN x'' ELSE vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (((((vt0.c0 COLLATE RTRIM)>(CASE WHEN vt1.c1 THEN vt1.c0 WHEN '-369164589' THEN vt1.c0 WHEN 0xffffffffab9ae0ae THEN x'' ELSE vt1.c0 END))) ISNULL));
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0;
SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER);
SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER) WHERE ((((((+ (vt1.c0)))OR(((t1.c0)=(0.3273142837706835)))))OR(((vt1.c0)>(vt1.c1))))) UNION SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER) WHERE ((NOT ((((((+ (vt1.c0)))OR(((t1.c0)==(0.3273142837706835)))))OR(((vt1.c0)>(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER) WHERE ((((((((+ (vt1.c0)))OR(((t1.c0)=(0.3273142837706835)))))OR(((vt1.c0)>(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER);
SELECT ALL t1.c2 FROM t1 GROUP BY t1.c2;
SELECT ALL t1.c2 FROM t1 WHERE ((('1J50 ')!=((t1.c1 IN (t1.c2))))) GROUP BY t1.c2 UNION SELECT t1.c2 FROM t1 WHERE ((NOT ((('1J50 ')!=((t1.c1 IN (t1.c2))))))) GROUP BY t1.c2 UNION SELECT ALL t1.c2 FROM t1 WHERE ((((('1J50 ')<>((t1.c1 IN (t1.c2))))) ISNULL)) GROUP BY t1.c2;
SELECT ALL t1.c2 FROM t1 GROUP BY t1.c2;
SELECT t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0;
SELECT t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 HAVING ((COUNT(*)) NOT BETWEEN (AVG(t0.c0)) AND (UNLIKELY(MAX(NULL)))) UNION ALL SELECT t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (AVG(t0.c0)) AND (UNLIKELY(MAX(NULL)))))) UNION ALL SELECT ALL t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 HAVING ((((COUNT(*)) NOT BETWEEN (AVG(t0.c0)) AND (UNLIKELY(MAX(NULL))))) ISNULL);
SELECT t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0;
SELECT t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 HAVING ((COUNT(*)) NOT BETWEEN (AVG(t0.c0)) AND (UNLIKELY(MAX(NULL)))) UNION ALL SELECT t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (AVG(t0.c0)) AND (UNLIKELY(MAX(NULL)))))) UNION ALL SELECT ALL t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 HAVING ((((COUNT(*)) NOT BETWEEN (AVG(t0.c0)) AND (UNLIKELY(MAX(NULL))))) ISNULL);
SELECT t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt1.c0)LIKE(NULL))) IS FALSE) LEFT OUTER JOIN t1 ON ((((1065278377, t0.c0, vt1.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))) IN ()) GROUP BY t0.c0, vt1.c0, t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0;
SELECT ALL SUM(CASE WHEN t1.c2 COLLATE RTRIM THEN (t1.c1 IN ()) END) FROM t0, t1, vt0 ORDER BY (+ (t0.c0)) COLLATE BINARY DESC  NULLS LAST, CASE (NOT ('K'))  WHEN (- (t1.c0)) THEN ((t0.c0) IS TRUE) WHEN ((((((((((((t0.c0)AND('0.4248279476711917')))AND(vt0.c0)))OR(t1.c0)))OR(t0.c0)))AND(t1.c2)))AND(t1.c1)) THEN ((t1.c1)>=(vt0.c0)) WHEN t1.c0 COLLATE NOCASE THEN x'6e80' ELSE ((t0.c0)GLOB(vt0.c0)) END DESC;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(x'3c8b' AS NUMERIC))) AND (((t0.c0 IN ()))))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST(x'3c8b' AS NUMERIC))) AND (((t0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST(x'3c8b' AS NUMERIC))) AND (((t0.c0 IN ()))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON '1453890096' INNER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c1)))AND(t1.c1)))AND(vt1.c1)))OR(t1.c2)) COLLATE NOCASE;
SELECT DISTINCT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON '1453890096' INNER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c1)))AND(t1.c1)))AND(vt1.c1)))OR(t1.c2)) COLLATE NOCASE WHERE (((NULL) ISNULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON '1453890096' INNER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c1)))AND(t1.c1)))AND(vt1.c1)))OR(t1.c2)) COLLATE NOCASE WHERE ((NOT (((NULL) ISNULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON '1453890096' INNER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c1)))AND(t1.c1)))AND(vt1.c1)))OR(t1.c2)) COLLATE NOCASE WHERE (((((NULL) ISNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON '1453890096' INNER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c1)))AND(t1.c1)))AND(vt1.c1)))OR(t1.c2)) COLLATE NOCASE;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0, t0.c0;
SELECT vt1.c1, vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0, t0.c0 HAVING MIN(MAX(vt1.c1)) UNION ALL SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0, t0.c0 HAVING (NOT (MIN(MAX(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0, t0.c0 HAVING ((MIN(MAX(vt1.c1))) ISNULL);
SELECT t1.c0, vt1.c1 FROM vt1, t1;
SELECT ALL t1.c0, vt1.c1 FROM vt1, t1 WHERE ('1673403500') UNION ALL SELECT t1.c0, vt1.c1 FROM vt1, t1 WHERE ((NOT ('1673403500'))) UNION ALL SELECT ALL t1.c0, vt1.c1 FROM vt1, t1 WHERE ((('1673403500') ISNULL));
SELECT t1.c0, vt1.c1 FROM vt1, t1;
SELECT DISTINCT t0.c0, t1.c1, vt1.c1, vt1.c0, t1.c0, vt0.c0, t1.c2 FROM t1, vt0 INNER JOIN t0 ON CASE WHEN t1.c1 THEN ((t1.c0)LIKE(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN (((vt1.c1, vt1.c0, t1.c1))<>((vt0.c0, t1.c0, vt1.c0))) WHEN ((t1.c0)*(vt0.c0)) THEN (((t1.c0, t1.c2, t1.c2))>=((t1.c0, vt1.c0, t1.c2))) END LEFT OUTER JOIN vt1 ON (- (t1.c0));
SELECT DISTINCT t0.c0, t1.c1, vt1.c1, vt1.c0, t1.c0, vt0.c0, t1.c2 FROM t1, vt0 INNER JOIN t0 ON CASE WHEN t1.c1 THEN ((t1.c0)LIKE(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN (((vt1.c1, vt1.c0, t1.c1))!=((vt0.c0, t1.c0, vt1.c0))) WHEN ((t1.c0)*(vt0.c0)) THEN (((t1.c0, t1.c2, t1.c2))>=((t1.c0, vt1.c0, t1.c2))) END LEFT OUTER JOIN vt1 ON (- (t1.c0)) WHERE (x'6a05') UNION SELECT DISTINCT t0.c0, t1.c1, vt1.c1, vt1.c0, t1.c0, vt0.c0, t1.c2 FROM t1, vt0 INNER JOIN t0 ON CASE WHEN t1.c1 THEN ((t1.c0)LIKE(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN (((vt1.c1, vt1.c0, t1.c1))!=((vt0.c0, t1.c0, vt1.c0))) WHEN ((t1.c0)*(vt0.c0)) THEN (((t1.c0, t1.c2, t1.c2))>=((t1.c0, vt1.c0, t1.c2))) END LEFT OUTER JOIN vt1 ON (- (t1.c0)) WHERE ((NOT (x'6a05'))) UNION SELECT DISTINCT t0.c0, t1.c1, vt1.c1, vt1.c0, t1.c0, vt0.c0, t1.c2 FROM t1, vt0 INNER JOIN t0 ON CASE WHEN t1.c1 THEN ((t1.c0)LIKE(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN (((vt1.c1, vt1.c0, t1.c1))<>((vt0.c0, t1.c0, vt1.c0))) WHEN ((t1.c0)*(vt0.c0)) THEN (((t1.c0, t1.c2, t1.c2))>=((t1.c0, vt1.c0, t1.c2))) END LEFT OUTER JOIN vt1 ON (- (t1.c0)) WHERE (((x'6a05') ISNULL));
SELECT DISTINCT t0.c0, t1.c1, vt1.c1, vt1.c0, t1.c0, vt0.c0, t1.c2 FROM t1, vt0 INNER JOIN t0 ON CASE WHEN t1.c1 THEN ((t1.c0)LIKE(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN (((vt1.c1, vt1.c0, t1.c1))<>((vt0.c0, t1.c0, vt1.c0))) WHEN ((t1.c0)*(vt0.c0)) THEN (((t1.c0, t1.c2, t1.c2))>=((t1.c0, vt1.c0, t1.c2))) END LEFT OUTER JOIN vt1 ON (- (t1.c0));
SELECT ALL vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, t0.c0, vt1.c0;
SELECT vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (t0.c0) GROUP BY vt0.c0, vt1.c1, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (t0.c0))) GROUP BY vt0.c0, vt1.c1, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c0, vt1.c1, t0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, t0.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TYPEOF(DISTINCT TOTAL(SUM(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TYPEOF(DISTINCT TOTAL(SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TYPEOF(DISTINCT TOTAL(SUM(t0.c0)))) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((x'')OR(((((vt1.c0)OR(vt1.c1)))OR(-8.28757789E8)))))OR(CHANGES()))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((x'')OR(((((vt1.c0)OR(vt1.c1)))OR(-8.28757789E8)))))OR(CHANGES()))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((x'')OR(((((vt1.c0)OR(vt1.c1)))OR(-8.28757789E8)))))OR(CHANGES()))) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)AND(vt1.c0)))OR(CASE '-144328547'  WHEN vt1.c0 THEN vt1.c1 END))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)AND(vt1.c0)))OR(CASE '-144328547'  WHEN vt1.c0 THEN vt1.c1 END))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)AND(vt1.c0)))OR(CASE '-144328547'  WHEN vt1.c0 THEN vt1.c1 END))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (LIKELIHOOD((~ (t0.c0)), 0.8683679121665855)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (LIKELIHOOD((~ (t0.c0)), 0.8683679121665855)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((LIKELIHOOD((~ (t0.c0)), 0.8683679121665855)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS TEXT) CROSS JOIN t0 ON ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((- (vt0.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS TEXT) CROSS JOIN t0 ON ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((- (vt0.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING CASE WHEN SUBSTR(vt0.c0, t0.c0) THEN CAST(vt1.c1 AS TEXT) ELSE GROUP_CONCAT(MIN(vt1.c0)) END UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS TEXT) CROSS JOIN t0 ON ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((- (vt0.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CASE WHEN SUBSTR(vt0.c0, t0.c0) THEN CAST(vt1.c1 AS TEXT) ELSE GROUP_CONCAT(MIN(vt1.c0)) END)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS TEXT) CROSS JOIN t0 ON ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((- (vt0.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING ((CASE WHEN SUBSTR(vt0.c0, t0.c0) THEN CAST(vt1.c1 AS TEXT) ELSE GROUP_CONCAT(MIN(vt1.c0)) END) ISNULL);
SELECT t1.c2, t1.c0 FROM t1;
SELECT ALL t1.c2, t1.c0 FROM t1 WHERE (CAST((t1.c1 IN ()) AS REAL)) UNION ALL SELECT ALL t1.c2, t1.c0 FROM t1 WHERE ((NOT (CAST((t1.c1 IN ()) AS REAL)))) UNION ALL SELECT ALL t1.c2, t1.c0 FROM t1 WHERE (((CAST((t1.c1 IN ()) AS REAL)) ISNULL));
SELECT t1.c2, t1.c0 FROM t1;
SELECT DISTINCT t1.c1, vt1.c1, t1.c0, vt1.c0, t1.c2, vt0.c0 FROM vt0, t1, t0, vt1;
SELECT DISTINCT t1.c1, vt1.c1, t1.c0, vt1.c0, t1.c2, vt0.c0 FROM vt0, t1, t0, vt1 WHERE ((- (((vt1.c1)>>(t1.c2))))) UNION SELECT DISTINCT t1.c1, vt1.c1, t1.c0, vt1.c0, t1.c2, vt0.c0 FROM vt0, t1, t0, vt1 WHERE ((NOT ((- (((vt1.c1)>>(t1.c2))))))) UNION SELECT DISTINCT t1.c1, vt1.c1, t1.c0, vt1.c0, t1.c2, vt0.c0 FROM vt0, t1, t0, vt1 WHERE ((((- (((vt1.c1)>>(t1.c2))))) ISNULL));
SELECT DISTINCT t1.c1, vt1.c1, t1.c0, vt1.c0, t1.c2, vt0.c0 FROM vt0, t1, t0, vt1;
SELECT ALL vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2 FROM vt0, vt1, t1 GROUP BY vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2;
SELECT ALL vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2 FROM vt0, vt1, t1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (((vt1.c1) IS TRUE)))) GROUP BY vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2 UNION SELECT ALL vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2 FROM vt0, vt1, t1 WHERE ((NOT (((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (((vt1.c1) IS TRUE)))))) GROUP BY vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2 UNION SELECT vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2 FROM vt0, vt1, t1 WHERE (((((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (((vt1.c1) IS TRUE)))) ISNULL)) GROUP BY vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2;
SELECT ALL vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2 FROM vt0, vt1, t1 GROUP BY vt1.c1, vt1.c0, t1.c0, t1.c1, t1.c2;
SELECT t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c0 HAVING 1.223512831E9 UNION ALL SELECT ALL t1.c0 FROM vt0, t0, vt1 NOT INDEXED, t1 GROUP BY t1.c0 HAVING (NOT (1.223512831E9)) UNION ALL SELECT ALL t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c0 HAVING ((1.223512831E9) ISNULL);
SELECT t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c0 HAVING 1.223512831E9 UNION ALL SELECT ALL t1.c0 FROM vt0, t0, vt1 NOT INDEXED, t1 GROUP BY t1.c0 HAVING (NOT (1.223512831E9)) UNION ALL SELECT ALL t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c0 HAVING ((1.223512831E9) ISNULL);
SELECT t1.c0 FROM vt0, t0, vt1, t1 GROUP BY t1.c0;
SELECT vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT ALL vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((('iFF0î¦›E')+(((vt0.c0)&(x''))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT ((('iFF0î¦›E')+(((vt0.c0)&(x''))))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((((('iFF0î¦›E')+(((vt0.c0)&(x''))))) ISNULL));
SELECT vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt1, t1, t0;
SELECT DISTINCT * FROM vt1, t1, t0 WHERE (((t1.c0 COLLATE RTRIM) NOT BETWEEN ((- (t0.c0))) AND (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN NULL END))) UNION SELECT DISTINCT * FROM vt1, t1, t0 WHERE ((NOT (((t1.c0 COLLATE RTRIM) NOT BETWEEN ((- (t0.c0))) AND (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN NULL END))))) UNION SELECT DISTINCT * FROM vt1, t1, t0 WHERE (((((t1.c0 COLLATE RTRIM) NOT BETWEEN ((- (t0.c0))) AND (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN NULL END))) ISNULL));
SELECT DISTINCT * FROM vt1, t1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (NULLIF((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) NOTNULL))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (NULLIF((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) NOTNULL))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((NULLIF((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) NOTNULL))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt0, vt1, t0 CROSS JOIN t1 ON ((t0.c0 COLLATE RTRIM)*(((t1.c2)AND(vt1.c0))));
SELECT ALL * FROM vt0, vt1, t0 NOT INDEXED CROSS JOIN t1 ON ((t0.c0 COLLATE RTRIM)*(((t1.c2)AND(vt1.c0)))) WHERE ((+ (((((t1.c1)OR('H#ScAp')))OR(vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1, t0 CROSS JOIN t1 ON ((t0.c0 COLLATE RTRIM)*(((t1.c2)AND(vt1.c0)))) WHERE ((NOT ((+ (((((t1.c1)OR('H#ScAp')))OR(vt1.c0))))))) UNION ALL SELECT * FROM vt0, vt1, t0 CROSS JOIN t1 ON ((t0.c0 COLLATE RTRIM)*(((t1.c2)AND(vt1.c0)))) WHERE ((((+ (((((t1.c1)OR('H#ScAp')))OR(vt1.c0))))) ISNULL));
SELECT * FROM vt0, vt1, t0 CROSS JOIN t1 ON ((t0.c0 COLLATE RTRIM)*(((t1.c2)AND(vt1.c0))));
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON (~ (json_type(t1.c0))) RIGHT OUTER JOIN vt0 ON 0.26596197793948484 FULL OUTER JOIN t1 ON ((vt1.c1 COLLATE BINARY)<>('-1585716402'));
SELECT ALL vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN t0 ON ((NOT (t1.c0)) IN (CAST(t1.c1 AS NUMERIC), ((((t1.c0)AND('-2124875957')))OR(t1.c1)))) INNER JOIN vt1 ON ((((1686746716)AND('s'',\n')))AND(((vt1.c1) NOTNULL))) CROSS JOIN vt0 ON ((vt1.c1)=(t0.c0)) GROUP BY vt0.c0, t1.c1, t1.c0;
SELECT vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN t0 ON ((NOT (t1.c0)) IN (CAST(t1.c1 AS NUMERIC), ((((t1.c0)AND('-2124875957')))OR(t1.c1)))) INNER JOIN vt1 ON ((((1686746716)AND('s'',\n')))AND(((vt1.c1) NOTNULL))) CROSS JOIN vt0 ON ((vt1.c1)==(t0.c0)) WHERE ((CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c2 THEN t1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE t1.c0 END IN ())) GROUP BY vt0.c0, t1.c1, t1.c0 UNION SELECT vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN t0 ON ((NOT (t1.c0)) IN (CAST(t1.c1 AS NUMERIC), ((((t1.c0)AND('-2124875957')))OR(t1.c1)))) INNER JOIN vt1 ON ((((1686746716)AND('s'',\n')))AND(((vt1.c1) NOTNULL))) CROSS JOIN vt0 ON ((vt1.c1)=(t0.c0)) WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c2 THEN t1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE t1.c0 END IN ())))) GROUP BY vt0.c0, t1.c1, t1.c0 UNION SELECT ALL vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN t0 ON ((NOT (t1.c0)) IN (CAST(t1.c1 AS NUMERIC), ((((t1.c0)AND('-2124875957')))OR(t1.c1)))) INNER JOIN vt1 ON ((((1686746716)AND('s'',\n')))AND(((vt1.c1) NOTNULL))) CROSS JOIN vt0 ON ((vt1.c1)==(t0.c0)) WHERE ((((CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c2 THEN t1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE t1.c0 END IN ())) ISNULL)) GROUP BY vt0.c0, t1.c1, t1.c0;
SELECT ALL vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN t0 ON ((NOT (t1.c0)) IN (CAST(t1.c1 AS NUMERIC), ((((t1.c0)AND('-2124875957')))OR(t1.c1)))) INNER JOIN vt1 ON ((((1686746716)AND('s'',\n')))AND(((vt1.c1) NOTNULL))) CROSS JOIN vt0 ON ((vt1.c1)=(t0.c0)) GROUP BY vt0.c0, t1.c1, t1.c0;
SELECT vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1 HAVING ((((TRIM(vt1.c1, vt1.c1))AND(((((COUNT(*))OR(MIN(t0.c0))))OR(vt1.c1)))))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1 HAVING (NOT (((((TRIM(vt1.c1, vt1.c1))AND(((((COUNT(*))OR(MIN(t0.c0))))OR(vt1.c1)))))OR(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1 HAVING ((((((TRIM(vt1.c1, vt1.c1))AND(((((COUNT(*))OR(MIN(t0.c0))))OR(vt1.c1)))))OR(COUNT(*)))) ISNULL);
SELECT vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1 HAVING ((((TRIM(vt1.c1, vt1.c1))AND(((((COUNT(*))OR(MIN(t0.c0))))OR(vt1.c1)))))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1 HAVING (NOT (((((TRIM(vt1.c1, vt1.c1))AND(((((COUNT(*))OR(MIN(t0.c0))))OR(vt1.c1)))))OR(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1 HAVING ((((((TRIM(vt1.c1, vt1.c1))AND(((((COUNT(*))OR(MIN(t0.c0))))OR(vt1.c1)))))OR(COUNT(*)))) ISNULL);
SELECT vt0.c0, t0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0, vt1.c1;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))AND(CAST(vt0.c0 AS INTEGER))))AND(((-1.608922287E9)>(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((((((((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))AND(CAST(vt0.c0 AS INTEGER))))AND(((-1.608922287E9)>(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((((((((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))AND(CAST(vt0.c0 AS INTEGER))))AND(((-1.608922287E9)>(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((t1.c2) NOT BETWEEN ((((t1.c2, t1.c2, t1.c2, t1.c1, t1.c1))!=((t0.c0, t1.c2, t0.c0, t0.c0, t0.c0)))) AND ((+ (t0.c0))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((t1.c2) NOT BETWEEN ((((t1.c2, t1.c2, t1.c2, t1.c1, t1.c1))<>((t0.c0, t1.c2, t0.c0, t0.c0, t0.c0)))) AND ((+ (t0.c0))))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((t1.c2) NOT BETWEEN ((((t1.c2, t1.c2, t1.c2, t1.c1, t1.c1))<>((t0.c0, t1.c2, t0.c0, t0.c0, t0.c0)))) AND ((+ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((IFNULL(t0.c0, t0.c0))/(t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((IFNULL(t0.c0, t0.c0))/(t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((IFNULL(t0.c0, t0.c0))/(t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MIN((SUM(TOTAL(vt1.c0)) IN ())) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MIN((SUM(TOTAL(vt1.c0)) IN ())))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MIN((SUM(TOTAL(vt1.c0)) IN ()))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MIN((SUM(TOTAL(vt1.c0)) IN ())) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MIN((SUM(TOTAL(vt1.c0)) IN ())))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MIN((SUM(TOTAL(vt1.c0)) IN ()))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((((((t1.c2)AND(t1.c2)))OR(vt0.c0))) NOT BETWEEN ((NOT (t1.c2))) AND (t1.c0 COLLATE RTRIM));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((((((t1.c2)AND(t1.c2)))OR(vt0.c0))) NOT BETWEEN ((NOT (t1.c2))) AND (t1.c0 COLLATE RTRIM)) WHERE (((UPPER(t1.c1)) BETWEEN ((- (t1.c1))) AND (''')ãˆ´g<ODz'))) UNION ALL SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((((((t1.c2)AND(t1.c2)))OR(vt0.c0))) NOT BETWEEN ((NOT (t1.c2))) AND (t1.c0 COLLATE RTRIM)) WHERE ((NOT (((UPPER(t1.c1)) BETWEEN ((- (t1.c1))) AND (''')ãˆ´g<ODz'))))) UNION ALL SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((((((t1.c2)AND(t1.c2)))OR(vt0.c0))) NOT BETWEEN ((NOT (t1.c2))) AND (t1.c0 COLLATE RTRIM)) WHERE (((((UPPER(t1.c1)) BETWEEN ((- (t1.c1))) AND (''')ãˆ´g<ODz'))) ISNULL));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((((((t1.c2)AND(t1.c2)))OR(vt0.c0))) NOT BETWEEN ((NOT (t1.c2))) AND (t1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM t0, t1, vt1;
SELECT DISTINCT * FROM t0, t1, vt1 WHERE ((~ (CAST(t1.c1 AS REAL)))) UNION SELECT DISTINCT * FROM t0, t1, vt1 WHERE ((NOT ((~ (CAST(t1.c1 AS REAL)))))) UNION SELECT DISTINCT * FROM t0, t1, vt1 WHERE ((((~ (CAST(t1.c1 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt1;
SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN t0 ON NULL GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 LEFT OUTER JOIN t0 ON NULL WHERE (((CAST(vt1.c1 AS INTEGER))LIKE((('''p/5ë›Š') BETWEEN (vt1.c0) AND (vt1.c1))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN t0 ON NULL WHERE ((NOT (((CAST(vt1.c1 AS INTEGER))LIKE((('''p/5ë›Š') BETWEEN (vt1.c0) AND (vt1.c1))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN t0 ON NULL WHERE (((((CAST(vt1.c1 AS INTEGER))LIKE((('''p/5ë›Š') BETWEEN (vt1.c0) AND (vt1.c1))))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN t0 ON NULL GROUP BY vt1.c1;
SELECT t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2;
SELECT ALL t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2 HAVING ((TRIM(DISTINCT MAX(t1.c1), TOTAL(t1.c0)))!=(GROUP_CONCAT(t1.c0))) UNION ALL SELECT t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2 HAVING (NOT (((TRIM(DISTINCT MAX(t1.c1), TOTAL(t1.c0)))!=(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2 HAVING ((((TRIM(DISTINCT MAX(t1.c1), TOTAL(t1.c0)))!=(GROUP_CONCAT(t1.c0)))) ISNULL);
SELECT t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2;
SELECT ALL t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2 HAVING ((TRIM(DISTINCT MAX(t1.c1), TOTAL(t1.c0)))!=(GROUP_CONCAT(t1.c0))) UNION ALL SELECT t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2 HAVING (NOT (((TRIM(DISTINCT MAX(t1.c1), TOTAL(t1.c0)))!=(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2 HAVING ((((TRIM(DISTINCT MAX(t1.c1), TOTAL(t1.c0)))!=(GROUP_CONCAT(t1.c0)))) ISNULL);
SELECT t1.c0, t1.c2 FROM t1, vt1 GROUP BY t1.c0, t1.c2;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt1, t1;
SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt1, t1 WHERE (CASE ((0X6286eb61) NOT NULL)  WHEN UNLIKELY(DISTINCT vt1.c0) THEN (t1.c2 IN (t1.c0, vt1.c1)) END) UNION SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt1, t1 WHERE ((NOT (CASE ((0X6286eb61) NOT NULL)  WHEN UNLIKELY(DISTINCT vt1.c0) THEN (t1.c2 IN (t1.c0, vt1.c1)) END))) UNION SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt1, t1 WHERE (((CASE ((0x6286eb61) NOT NULL)  WHEN UNLIKELY(DISTINCT vt1.c0) THEN (t1.c2 IN (t1.c0, vt1.c1)) END) ISNULL));
SELECT DISTINCT t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt1, t1;
SELECT t0.c0, t1.c2, t1.c0, t1.c1 FROM t1, t0 GROUP BY t0.c0, t1.c2, t1.c0, t1.c1;
SELECT ALL t0.c0, t1.c2, t1.c0, t1.c1 FROM t1, t0 WHERE (t1.c1) GROUP BY t0.c0, t1.c2, t1.c0, t1.c1 UNION SELECT t0.c0, t1.c2, t1.c0, t1.c1 FROM t1, t0 WHERE ((NOT (t1.c1))) GROUP BY t0.c0, t1.c2, t1.c0, t1.c1 UNION SELECT t0.c0, t1.c2, t1.c0, t1.c1 FROM t1, t0 WHERE (((t1.c1) ISNULL)) GROUP BY t0.c0, t1.c2, t1.c0, t1.c1;
SELECT t0.c0, t1.c2, t1.c0, t1.c1 FROM t1, t0 GROUP BY t0.c0, t1.c2, t1.c0, t1.c1;
SELECT t1.c0, t1.c1, t0.c0, t1.c2 FROM t0, t1 GROUP BY t1.c0, t1.c1, t0.c0, t1.c2;
SELECT ALL t1.c0, t1.c1, t0.c0, t1.c2 FROM t0, t1 GROUP BY t1.c0, t1.c1, t0.c0, t1.c2 HAVING TOTAL(AVG(COUNT(*))) UNION ALL SELECT ALL t1.c0, t1.c1, t0.c0, t1.c2 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0, t1.c1, t0.c0, t1.c2 HAVING (NOT (TOTAL(AVG(COUNT(*))))) UNION ALL SELECT ALL t1.c0, t1.c1, t0.c0, t1.c2 FROM t0, t1 GROUP BY t1.c0, t1.c1, t0.c0, t1.c2 HAVING ((TOTAL(AVG(COUNT(*)))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0, t0.c0 COLLATE RTRIM))>((t0.c0, ((t0.c0) ISNULL), ((t0.c0) BETWEEN (-1767724464) AND (t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0, t0.c0 COLLATE RTRIM))>((t0.c0, ((t0.c0) ISNULL), ((t0.c0) BETWEEN (-1767724464) AND (t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0, t0.c0 COLLATE RTRIM))>((t0.c0, ((t0.c0) ISNULL), ((t0.c0) BETWEEN (-1767724464) AND (t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c1, t1.c1, vt1.c0 FROM vt1, vt0, t1 CROSS JOIN t0 ON (((NOT (t1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) AND (((((((((vt1.c0)OR(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(vt1.c0))));
SELECT DISTINCT vt0.c0, t0.c0, vt1.c1, t1.c1, vt1.c0 FROM vt1, vt0, t1 CROSS JOIN t0 ON (((NOT (t1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) AND (((((((((vt1.c0)OR(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(vt1.c0)))) WHERE (((CASE vt1.c1  WHEN '' THEN t1.c2 WHEN NULL THEN t1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE t0.c0 END) ISNULL)) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c1, t1.c1, vt1.c0 FROM vt1, vt0, t1 CROSS JOIN t0 ON (((NOT (t1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) AND (((((((((vt1.c0)OR(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(vt1.c0)))) WHERE ((NOT (((CASE vt1.c1  WHEN '' THEN t1.c2 WHEN NULL THEN t1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE t0.c0 END) ISNULL)))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c1, t1.c1, vt1.c0 FROM vt1, vt0, t1 CROSS JOIN t0 ON (((NOT (t1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) AND (((((((((vt1.c0)OR(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(vt1.c0)))) WHERE (((((CASE vt1.c1  WHEN '' THEN t1.c2 WHEN NULL THEN t1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE t0.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt1.c1, t1.c1, vt1.c0 FROM vt1, vt0, t1 CROSS JOIN t0 ON (((NOT (t1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) AND (((((((((vt1.c0)OR(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(vt1.c0))));
SELECT t0.c0, vt1.c1, vt0.c0, t1.c2 FROM t0 INNER JOIN vt1 ON ((((((((((((t1.c2)OR(t0.c0)))OR(vt1.c0)))OR(t1.c0)))AND(NULL)))OR(((((vt0.c0)OR(vt0.c0)))OR(t1.c2)))))OR(((t1.c1)>=(vt0.c0)))) FULL OUTER JOIN vt0 ON (t1.c1 IN (((vt1.c1)>(t1.c1)))) RIGHT OUTER JOIN t1 ON (((((((t0.c0)AND(vt1.c1)))OR(vt1.c1))))>=(((vt0.c0 IN ())))) GROUP BY t0.c0, vt1.c1, vt0.c0, t1.c2;
SELECT vt1.c1, t1.c0, vt1.c0 FROM vt1, t1 GROUP BY vt1.c1, t1.c0, vt1.c0;
SELECT ALL vt1.c1, t1.c0, vt1.c0 FROM vt1, t1 GROUP BY vt1.c1, t1.c0, vt1.c0 HAVING ((GROUP_CONCAT(MIN(t1.c0))) BETWEEN (MIN(COUNT(*))) AND (((AVG(AVG(TOTAL(t1.c1))))>=(MAX(COUNT(t1.c1)))))) UNION ALL SELECT ALL vt1.c1, t1.c0, vt1.c0 FROM vt1, t1 GROUP BY vt1.c1, t1.c0, vt1.c0 HAVING (NOT (((GROUP_CONCAT(MIN(t1.c0))) BETWEEN (MIN(COUNT(*))) AND (((AVG(AVG(TOTAL(t1.c1))))>=(MAX(COUNT(t1.c1)))))))) UNION ALL SELECT ALL vt1.c1, t1.c0, vt1.c0 FROM vt1, t1 GROUP BY vt1.c1, t1.c0, vt1.c0 HAVING ((((GROUP_CONCAT(MIN(t1.c0))) BETWEEN (MIN(COUNT(*))) AND (((AVG(AVG(TOTAL(t1.c1))))>=(MAX(COUNT(t1.c1))))))) ISNULL);
SELECT ALL t1.c2, t1.c0, t0.c0, vt0.c0, t1.c1, vt1.c1 FROM t0, t1, vt0, vt1;
SELECT ALL t1.c2, t1.c0, t0.c0, vt0.c0, t1.c1, vt1.c1 FROM t0, t1, vt0, vt1 WHERE (IFNULL('ND<3''A2t', ((t1.c2)<(t1.c0)))) UNION ALL SELECT ALL t1.c2, t1.c0, t0.c0, vt0.c0, t1.c1, vt1.c1 FROM t0, t1, vt0, vt1 WHERE ((NOT (IFNULL('ND<3''A2t', ((t1.c2)<(t1.c0)))))) UNION ALL SELECT t1.c2, t1.c0, t0.c0, vt0.c0, t1.c1, vt1.c1 FROM t0, t1, vt0, vt1 WHERE (((IFNULL('ND<3''A2t', ((t1.c2)<(t1.c0)))) ISNULL));
SELECT ALL t1.c2, t1.c0, t0.c0, vt0.c0, t1.c1, vt1.c1 FROM t0, t1, vt0, vt1;
SELECT DISTINCT vt0.c0, t1.c1, t1.c0, t1.c2 FROM t1, t0 RIGHT OUTER JOIN vt0 ON t1.c2;
SELECT DISTINCT vt0.c0, t1.c1, t1.c0, t1.c2 FROM t1, t0 RIGHT OUTER JOIN vt0 ON t1.c2 WHERE (((((((((((((SUBSTR(t1.c2, t1.c1))OR(((NULL)+(t1.c0)))))AND(((t1.c1)!=(t0.c0)))))OR(CASE t1.c1  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)))OR(CAST(vt0.c0 AS REAL))))AND(CAST(t1.c0 AS BLOB))))AND(TYPEOF(DISTINCT t1.c2)))) UNION SELECT DISTINCT vt0.c0, t1.c1, t1.c0, t1.c2 FROM t1, t0 RIGHT OUTER JOIN vt0 ON t1.c2 WHERE ((NOT (((((((((((((SUBSTR(t1.c2, t1.c1))OR(((NULL)+(t1.c0)))))AND(((t1.c1)!=(t0.c0)))))OR(CASE t1.c1  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)))OR(CAST(vt0.c0 AS REAL))))AND(CAST(t1.c0 AS BLOB))))AND(TYPEOF(DISTINCT t1.c2)))))) UNION SELECT DISTINCT vt0.c0, t1.c1, t1.c0, t1.c2 FROM t1, t0 RIGHT OUTER JOIN vt0 ON t1.c2 WHERE (((((((((((((((SUBSTR(t1.c2, t1.c1))OR(((NULL)+(t1.c0)))))AND(((t1.c1)!=(t0.c0)))))OR(CASE t1.c1  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)))OR(CAST(vt0.c0 AS REAL))))AND(CAST(t1.c0 AS BLOB))))AND(TYPEOF(DISTINCT t1.c2)))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c1, t1.c0, t1.c2 FROM t1, t0 RIGHT OUTER JOIN vt0 ON t1.c2;
SELECT ALL t1.c2, t0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR(t0.c0)))AND(t1.c1)))OR(t1.c0)) IN ()) GROUP BY t1.c2, t0.c0;
SELECT ALL t1.c2, t0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR(t0.c0)))AND(t1.c1)))OR(t1.c0)) IN ()) WHERE (DATETIME((((t0.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), NULL, 0.25141033498496157)) GROUP BY t1.c2, t0.c0 UNION SELECT t1.c2, t0.c0 FROM vt1 NOT INDEXED, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR(t0.c0)))AND(t1.c1)))OR(t1.c0)) IN ()) WHERE ((NOT (DATETIME((((t0.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), NULL, 0.25141033498496157)))) GROUP BY t1.c2, t0.c0 UNION SELECT ALL t1.c2, t0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR(t0.c0)))AND(t1.c1)))OR(t1.c0)) IN ()) WHERE (((DATETIME((((t0.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), NULL, 0.25141033498496157)) ISNULL)) GROUP BY t1.c2, t0.c0;
SELECT ALL t1.c2, t0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR(t0.c0)))AND(t1.c1)))OR(t1.c0)) IN ()) GROUP BY t1.c2, t0.c0;
SELECT ALL vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1;
SELECT ALL vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1 HAVING ((TRIM(vt0.c0, t1.c0)) ISNULL) UNION ALL SELECT vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1 HAVING (NOT (((TRIM(vt0.c0, t1.c0)) ISNULL))) UNION ALL SELECT ALL vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1 HAVING ((((TRIM(vt0.c0, t1.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1;
SELECT ALL vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1 HAVING ((TRIM(vt0.c0, t1.c0)) ISNULL) UNION ALL SELECT vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1 HAVING (NOT (((TRIM(vt0.c0, t1.c0)) ISNULL))) UNION ALL SELECT ALL vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1 HAVING ((((TRIM(vt0.c0, t1.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0, t1.c1, t1.c2, vt1.c1 FROM t0, vt0, vt1, t1 GROUP BY vt0.c0, t1.c1, t1.c2, vt1.c1;
SELECT MIN(((vt1.c0) IS FALSE)) FROM t1, vt1, t0 ORDER BY CASE CAST(t1.c0 AS REAL)  WHEN ((vt1.c1)=(x'')) THEN ((t1.c1) BETWEEN (t1.c1) AND (t0.c0)) ELSE t1.c2 END  NULLS FIRST, CAST((t1.c1 IN (vt1.c0)) AS REAL) ASC, ABS(CAST(t1.c0 AS TEXT));
SELECT ALL * FROM vt1, t0, vt0;
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(((((vt1.c1)OR(NULL)))OR(vt1.c0)))))AND(vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE ((NOT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(((((vt1.c1)OR(NULL)))OR(vt1.c0)))))AND(vt1.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(((((vt1.c1)OR(NULL)))OR(vt1.c0)))))AND(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt1, t0, vt0;
SELECT DISTINCT t1.c1 FROM t1 NOT INDEXED, t0;
SELECT DISTINCT t1.c1 FROM t1, t0 WHERE (json_array_length(t0.c0, t1.c1) COLLATE RTRIM) UNION SELECT DISTINCT t1.c1 FROM t1, t0 WHERE ((NOT (json_array_length(t0.c0, t1.c1) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c1 FROM t1, t0 WHERE (((json_array_length(t0.c0, t1.c1) COLLATE RTRIM) ISNULL));
SELECT ALL t1.c1, vt1.c0, t1.c0, vt1.c1 FROM t0 CROSS JOIN t1 ON 0.7425518831596032 INNER JOIN vt1 ON CASE WHEN CAST(0.29500176790732724 AS BLOB) THEN vt1.c1 COLLATE NOCASE WHEN ((((((((vt1.c1)OR(vt1.c0)))AND(t1.c2)))AND(vt1.c1)))AND(t1.c0)) THEN CAST(t0.c0 AS TEXT) WHEN ((t0.c0)GLOB(x'')) THEN (((vt0.c0))==((vt1.c0))) END RIGHT OUTER JOIN vt0 ON (+ ((vt1.c1 IN ()))) GROUP BY t1.c1, vt1.c0, t1.c0, vt1.c1;
SELECT vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1;
SELECT ALL vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1 HAVING CAST(TOTAL(vt1.c1) AS INTEGER) UNION ALL SELECT ALL vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1 HAVING (NOT (CAST(TOTAL(vt1.c1) AS INTEGER))) UNION ALL SELECT vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1 HAVING ((CAST(TOTAL(vt1.c1) AS INTEGER)) ISNULL);
SELECT vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1;
SELECT ALL vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1 HAVING CAST(TOTAL(vt1.c1) AS INTEGER) UNION ALL SELECT ALL vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1 HAVING (NOT (CAST(TOTAL(vt1.c1) AS INTEGER))) UNION ALL SELECT vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1 HAVING ((CAST(TOTAL(vt1.c1) AS INTEGER)) ISNULL);
SELECT vt1.c1, t1.c2, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, vt1.c0, t1.c1;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=(((vt0.c0)||(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=(((vt0.c0)||(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=(((vt0.c0)||(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))OR((~ (vt1.c1)))))AND((- (x'5efa'))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))OR((~ (vt1.c1)))))AND((- (x'5efa'))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))OR((~ (vt1.c1)))))AND((- (x'5efa'))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING MAX(COUNT('1238435428')) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING (NOT (MAX(COUNT('1238435428')) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING ((MAX(COUNT('1238435428')) COLLATE NOCASE) ISNULL);
SELECT t1.c0, vt1.c1 FROM vt0, vt1, t0, t1;
SELECT t1.c0, vt1.c1 FROM vt0, vt1, t0, t1 WHERE (LIKELIHOOD(t1.c1 COLLATE NOCASE, 0.5771376321152737)) UNION ALL SELECT t1.c0, vt1.c1 FROM vt0, vt1, t0, t1 WHERE ((NOT (LIKELIHOOD(t1.c1 COLLATE NOCASE, 0.5771376321152737)))) UNION ALL SELECT ALL t1.c0, vt1.c1 FROM vt0, vt1, t0, t1 WHERE (((LIKELIHOOD(t1.c1 COLLATE NOCASE, 0.5771376321152737)) ISNULL));
SELECT t1.c0, vt1.c1 FROM vt0, vt1, t0, t1;
SELECT DISTINCT t1.c0, t0.c0, vt1.c0, vt1.c1, t1.c1, vt0.c0, t1.c2 FROM t0, t1, vt1, vt0;
SELECT DISTINCT t1.c0, t0.c0, vt1.c0, vt1.c1, t1.c1, vt0.c0, t1.c2 FROM t0, t1, vt1, vt0 WHERE (CAST(LIKELY(t1.c2) AS REAL)) UNION SELECT DISTINCT t1.c0, t0.c0, vt1.c0, vt1.c1, t1.c1, vt0.c0, t1.c2 FROM t0, t1, vt1, vt0 WHERE ((NOT (CAST(LIKELY(t1.c2) AS REAL)))) UNION SELECT DISTINCT t1.c0, t0.c0, vt1.c0, vt1.c1, t1.c1, vt0.c0, t1.c2 FROM t0, t1, vt1, vt0 WHERE (((CAST(LIKELY(t1.c2) AS REAL)) ISNULL));
SELECT DISTINCT t1.c0, t0.c0, vt1.c0, vt1.c1, t1.c1, vt0.c0, t1.c2 FROM t0, t1, vt1, vt0;
SELECT t1.c0 FROM vt0, t0, t1, vt1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t0, t1, vt1 WHERE (CAST(vt1.c1 AS NUMERIC)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM vt0, t0 NOT INDEXED, t1, vt1 WHERE ((NOT (CAST(vt1.c1 AS NUMERIC)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM vt0, t0, t1, vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t0, t1, vt1 GROUP BY t1.c0;
SELECT t1.c1 FROM vt0, t0, vt1, t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM vt0, t0, vt1, t1 GROUP BY t1.c1 HAVING CAST(SUM(AVG(t1.c1)) AS BLOB) UNION ALL SELECT t1.c1 FROM vt0, t0, vt1, t1 GROUP BY t1.c1 HAVING (NOT (CAST(SUM(AVG(t1.c1)) AS BLOB))) UNION ALL SELECT ALL t1.c1 FROM vt0, t0, vt1, t1 GROUP BY t1.c1 HAVING ((CAST(SUM(AVG(t1.c1)) AS BLOB)) ISNULL);
SELECT TOTAL(((((((vt1.c1)OR(0.13017759101118576)))AND(t1.c2)))+((- (vt0.c0))))) FROM vt0, t1, vt1;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CHANGES()) UNION ALL SELECT * FROM t0 WHERE ((NOT (CHANGES()))) UNION ALL SELECT ALL * FROM t0 WHERE (((CHANGES()) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0, ((t0.c0)>(t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))), t0.c0 COLLATE RTRIM, 'C')))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0, ((t0.c0)>(t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))), t0.c0 COLLATE RTRIM, 'C')))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0, ((t0.c0)>(t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))), t0.c0 COLLATE RTRIM, 'C')))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 WHERE ((- ((('-682216908') BETWEEN (vt0.c0) AND (t1.c2))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, vt0 WHERE ((NOT ((- ((('-682216908') BETWEEN (vt0.c0) AND (t1.c2))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, vt0 WHERE ((((- ((('-682216908') BETWEEN (vt0.c0) AND (t1.c2))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c2, vt0.c0, t1.c0, t1.c1 FROM vt0, t1, t0 GROUP BY t1.c2, vt0.c0, t1.c0, t1.c1;
SELECT ALL t1.c2, vt0.c0, t1.c0, t1.c1 FROM vt0, t1, t0 GROUP BY t1.c2, vt0.c0, t1.c0, t1.c1 HAVING AVG(MAX(MAX(t1.c0))) UNION ALL SELECT ALL t1.c2, vt0.c0, t1.c0, t1.c1 FROM vt0, t1, t0 GROUP BY t1.c2, vt0.c0, t1.c0, t1.c1 HAVING (NOT (AVG(MAX(MAX(t1.c0))))) UNION ALL SELECT ALL t1.c2, vt0.c0, t1.c0, t1.c1 FROM vt0, t1, t0 GROUP BY t1.c2, vt0.c0, t1.c0, t1.c1 HAVING ((AVG(MAX(MAX(t1.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM t0, vt0 WHERE (CAST(CASE WHEN 0.16203930674846145 THEN '13800276' END AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (CAST(CASE WHEN 0.16203930674846145 THEN '13800276' END AS TEXT)))) UNION ALL SELECT vt0.c0 FROM t0, vt0 WHERE (((CAST(CASE WHEN 0.16203930674846145 THEN '13800276' END AS TEXT)) ISNULL));
SELECT ALL vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt1, t1, t0;
SELECT DISTINCT * FROM vt1, t1, t0 WHERE (((t0.c0 COLLATE BINARY)<=(UNLIKELY('-186614165')))) UNION SELECT DISTINCT * FROM vt1, t1, t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)<=(UNLIKELY('-186614165')))))) UNION SELECT DISTINCT * FROM vt1, t1, t0 NOT INDEXED WHERE (((((t0.c0 COLLATE BINARY)<=(UNLIKELY('-186614165')))) ISNULL));
SELECT DISTINCT * FROM vt1, t1, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1;
SELECT ALL t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1 HAVING '-870009142' UNION ALL SELECT t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1 HAVING (NOT ('-870009142')) UNION ALL SELECT ALL t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1 HAVING (('-870009142') ISNULL);
SELECT t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1;
SELECT ALL t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1 HAVING '-870009142' UNION ALL SELECT t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1 HAVING (NOT ('-870009142')) UNION ALL SELECT ALL t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1 HAVING (('-870009142') ISNULL);
SELECT t1.c0, vt0.c0, t1.c2, t1.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c0, t1.c2, t1.c1;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)||(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)||(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)||(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t1, vt0, t0, vt1;
SELECT DISTINCT * FROM t1, vt0, t0, vt1 WHERE ((((((vt1.c0)||(t1.c2))))=((((x'')&(NULL)))))) UNION SELECT DISTINCT * FROM t1, vt0, t0, vt1 WHERE ((NOT ((((((vt1.c0)||(t1.c2))))=((((x'')&(NULL)))))))) UNION SELECT DISTINCT * FROM t1, vt0, t0, vt1 WHERE ((((((((vt1.c0)||(t1.c2))))=((((x'')&(NULL)))))) ISNULL));
SELECT DISTINCT * FROM t1, vt0, t0, vt1;
SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))<=(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c0)&(t0.c0))) IS TRUE) GROUP BY vt1.c1, vt1.c0, t0.c0;
SELECT vt1.c1, vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))<=(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c0)&(t0.c0))) IS TRUE) WHERE (vt1.c0) GROUP BY vt1.c1, vt1.c0, t0.c0 UNION SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))<=(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c0)&(t0.c0))) IS TRUE) WHERE ((NOT (vt1.c0))) GROUP BY vt1.c1, vt1.c0, t0.c0 UNION SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))<=(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c0)&(t0.c0))) IS TRUE) WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c1, vt1.c0, t0.c0;
SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))<=(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c0)&(t0.c0))) IS TRUE) GROUP BY vt1.c1, vt1.c0, t0.c0;
SELECT t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2;
SELECT t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2 HAVING (HEX(t1.c0) IN ()) UNION ALL SELECT t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2 HAVING (NOT ((HEX(t1.c0) IN ()))) UNION ALL SELECT ALL t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2 HAVING (((HEX(t1.c0) IN ())) ISNULL);
SELECT t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2;
SELECT t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2 HAVING (HEX(t1.c0) IN ()) UNION ALL SELECT t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2 HAVING (NOT ((HEX(t1.c0) IN ()))) UNION ALL SELECT ALL t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2 HAVING (((HEX(t1.c0) IN ())) ISNULL);
SELECT t1.c1, t1.c2 FROM t1, t0 GROUP BY t1.c1, t1.c2;
SELECT t1.c1, vt1.c0, t1.c2 FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((CASE x'b756'  WHEN t1.c1 THEN t1.c2 ELSE t0.c0 END) BETWEEN ((- (vt1.c1))) AND ((vt1.c0 IN (t1.c2)))) FULL OUTER JOIN t1 ON 0.35687400235202693;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(t1.c0)))<<(CASE t1.c0  WHEN vt0.c0 THEN t1.c1 WHEN '1946965010' THEN t1.c1 WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON (((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ());
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(t1.c0)))<<(CASE t1.c0  WHEN vt0.c0 THEN t1.c1 WHEN '1946965010' THEN t1.c1 WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON (((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ()) WHERE (CAST((+ (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(t1.c0)))<<(CASE t1.c0  WHEN vt0.c0 THEN t1.c1 WHEN '1946965010' THEN t1.c1 WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON (((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ()) WHERE ((NOT (CAST((+ (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(t1.c0)))<<(CASE t1.c0  WHEN vt0.c0 THEN t1.c1 WHEN '1946965010' THEN t1.c1 WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON (((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ()) WHERE (((CAST((+ (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(t1.c0)))<<(CASE t1.c0  WHEN vt0.c0 THEN t1.c1 WHEN '1946965010' THEN t1.c1 WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON (((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ());
SELECT t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2 FROM t1, vt1 FULL OUTER JOIN vt0 ON ABS(DISTINCT vt0.c0) COLLATE RTRIM GROUP BY t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2;
SELECT t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2 FROM t1, vt1 FULL OUTER JOIN vt0 ON ABS(DISTINCT vt0.c0) COLLATE RTRIM WHERE ((- (((((vt1.c1)OR(t1.c2)))AND(t1.c0))))) GROUP BY t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2 UNION SELECT ALL t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2 FROM t1, vt1 FULL OUTER JOIN vt0 ON ABS(DISTINCT vt0.c0) COLLATE RTRIM WHERE ((NOT ((- (((((vt1.c1)OR(t1.c2)))AND(t1.c0))))))) GROUP BY t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2 UNION SELECT ALL t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2 FROM t1, vt1 FULL OUTER JOIN vt0 ON ABS(DISTINCT vt0.c0) COLLATE RTRIM WHERE ((((- (((((vt1.c1)OR(t1.c2)))AND(t1.c0))))) ISNULL)) GROUP BY t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2;
SELECT t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2 FROM t1, vt1 FULL OUTER JOIN vt0 ON ABS(DISTINCT vt0.c0) COLLATE RTRIM GROUP BY t1.c1, vt0.c0, t1.c0, vt1.c1, vt1.c0, t1.c2;
SELECT ALL t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2;
SELECT t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2 HAVING vt1.c1 UNION ALL SELECT ALL t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2 HAVING ((vt1.c1) ISNULL);
SELECT ALL t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2;
SELECT t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2 HAVING vt1.c1 UNION ALL SELECT ALL t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2 HAVING ((vt1.c1) ISNULL);
SELECT ALL t1.c2 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c2;
SELECT * FROM vt0 INDEXED BY i32 FULL OUTER JOIN t1 ON CASE CAST(vt0.c0 AS TEXT)  WHEN (((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN (t1.c0 IN (vt0.c0)) WHEN (- (t1.c2)) THEN ABS(t1.c0) WHEN ((((((((t1.c2)AND(x'7430')))OR(t1.c2)))OR(t1.c1)))OR(t1.c2)) THEN LTRIM(t1.c0) END;
SELECT DISTINCT t1.c2, t1.c1, vt0.c0, vt1.c0, t1.c0 FROM vt1, vt0, t1;
SELECT DISTINCT t1.c2, t1.c1, vt0.c0, vt1.c0, t1.c0 FROM vt1, vt0, t1 WHERE (HEX(((t1.c2)<<(vt0.c0)))) UNION SELECT DISTINCT t1.c2, t1.c1, vt0.c0, vt1.c0, t1.c0 FROM vt1, vt0, t1 WHERE ((NOT (HEX(((t1.c2)<<(vt0.c0)))))) UNION SELECT DISTINCT t1.c2, t1.c1, vt0.c0, vt1.c0, t1.c0 FROM vt1, vt0, t1 WHERE (((HEX(((t1.c2)<<(vt0.c0)))) ISNULL));
SELECT DISTINCT t1.c2, t1.c1, vt0.c0, vt1.c0, t1.c0 FROM vt1, vt0, t1;
SELECT t1.c1, t1.c2, t1.c0 FROM t1, t0 GROUP BY t1.c1, t1.c2, t1.c0;
SELECT t1.c1, t1.c2, t1.c0 FROM t1, t0 WHERE ((((x''))!=((((t1.c0)/(t1.c0)))))) GROUP BY t1.c1, t1.c2, t1.c0 UNION SELECT ALL t1.c1, t1.c2, t1.c0 FROM t1, t0 WHERE ((NOT ((((x''))!=((((t1.c0)/(t1.c0)))))))) GROUP BY t1.c1, t1.c2, t1.c0 UNION SELECT t1.c1, t1.c2, t1.c0 FROM t1, t0 WHERE ((((((x''))!=((((t1.c0)/(t1.c0)))))) ISNULL)) GROUP BY t1.c1, t1.c2, t1.c0;
SELECT t1.c1, t1.c2, t1.c0 FROM t1, t0 GROUP BY t1.c1, t1.c2, t1.c0;
SELECT ALL t1.c2 FROM vt0, t1 GROUP BY t1.c2;
SELECT t1.c2 FROM vt0, t1 GROUP BY t1.c2 HAVING t1.c2 UNION ALL SELECT t1.c2 FROM vt0, t1 GROUP BY t1.c2 HAVING (NOT (t1.c2)) UNION ALL SELECT t1.c2 FROM vt0, t1 GROUP BY t1.c2 HAVING ((t1.c2) ISNULL);
SELECT ALL t1.c2 FROM vt0, t1 GROUP BY t1.c2;
SELECT t1.c2 FROM vt0, t1 GROUP BY t1.c2 HAVING t1.c2 UNION ALL SELECT t1.c2 FROM vt0, t1 GROUP BY t1.c2 HAVING (NOT (t1.c2)) UNION ALL SELECT t1.c2 FROM vt0, t1 GROUP BY t1.c2 HAVING ((t1.c2) ISNULL);
SELECT ALL t1.c2 FROM vt0, t1 GROUP BY t1.c2;
SELECT MIN((((((t0.c0) BETWEEN (x'') AND (t1.c1)), STRFTIME(vt1.c1, vt1.c1, t1.c2, NULL, t0.c0), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t1.c0))))>((t0.c0 COLLATE NOCASE, vt1.c1, (((vt1.c0, t1.c2, '\é§¦')) NOT BETWEEN ((t1.c2, vt1.c1, vt1.c1)) AND ((vt1.c0, t1.c1, vt1.c0))))))) FROM vt1, t0, t1;
SELECT ALL t1.c1, vt1.c0, vt0.c0 FROM vt1, t1 LEFT OUTER JOIN vt0 ON vt1.c1 INNER JOIN t0 ON vt0.c0 COLLATE RTRIM;
SELECT t1.c1, vt1.c0, vt0.c0 FROM vt1, t1 LEFT OUTER JOIN vt0 ON vt1.c1 INNER JOIN t0 ON vt0.c0 COLLATE RTRIM WHERE (vt0.c0) UNION ALL SELECT t1.c1, vt1.c0, vt0.c0 FROM vt1, t1 LEFT OUTER JOIN vt0 ON vt1.c1 INNER JOIN t0 ON vt0.c0 COLLATE RTRIM WHERE ((NOT (vt0.c0))) UNION ALL SELECT t1.c1, vt1.c0, vt0.c0 FROM vt1, t1 LEFT OUTER JOIN vt0 ON vt1.c1 INNER JOIN t0 ON vt0.c0 COLLATE RTRIM WHERE (((vt0.c0) ISNULL));
SELECT ALL t1.c1, vt1.c0, vt0.c0 FROM vt1, t1 LEFT OUTER JOIN vt0 ON vt1.c1 INNER JOIN t0 ON vt0.c0 COLLATE RTRIM;
SELECT DISTINCT * FROM vt1, t0, vt0 NATURAL JOIN t1;
SELECT DISTINCT * FROM vt1, t0, vt0 NATURAL JOIN t1 WHERE (((((NULL) NOTNULL)) NOT BETWEEN ((- (vt1.c1))) AND (UNLIKELY(vt1.c1)))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 NATURAL JOIN t1 WHERE ((NOT (((((NULL) NOTNULL)) NOT BETWEEN ((- (vt1.c1))) AND (UNLIKELY(vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 NATURAL JOIN t1 WHERE (((((((NULL) NOTNULL)) NOT BETWEEN ((- (vt1.c1))) AND (UNLIKELY(vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0 NATURAL JOIN t1;
SELECT ALL t1.c2, t1.c1, t1.c0 FROM vt0, vt1, t1 GROUP BY t1.c2, t1.c1, t1.c0;
SELECT t1.c2, t1.c1, t1.c0 FROM vt0, vt1, t1 WHERE (((t1.c1 COLLATE NOCASE) IS FALSE)) GROUP BY t1.c2, t1.c1, t1.c0 UNION SELECT t1.c2, t1.c1, t1.c0 FROM vt0, vt1, t1 WHERE ((NOT (((t1.c1 COLLATE NOCASE) IS FALSE)))) GROUP BY t1.c2, t1.c1, t1.c0 UNION SELECT ALL t1.c2, t1.c1, t1.c0 FROM vt0, vt1, t1 WHERE (((((t1.c1 COLLATE NOCASE) IS FALSE)) ISNULL)) GROUP BY t1.c2, t1.c1, t1.c0;
SELECT ALL t1.c2, t1.c1, t1.c0 FROM vt0, vt1, t1 GROUP BY t1.c2, t1.c1, t1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING CASE (COUNT(*) IN ())  WHEN (((t0.c0, COUNT(*), MAX(vt1.c0)))==((t0.c0, vt1.c0, SUM(MAX(SUM(AVG(vt1.c1))))))) THEN COUNT(t0.c0) END UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (CASE (COUNT(*) IN ())  WHEN (((t0.c0, COUNT(*), MAX(vt1.c0)))==((t0.c0, vt1.c0, SUM(MAX(SUM(AVG(vt1.c1))))))) THEN COUNT(t0.c0) END)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((CASE (COUNT(*) IN ())  WHEN (((t0.c0, COUNT(*), MAX(vt1.c0)))=((t0.c0, vt1.c0, SUM(MAX(SUM(AVG(vt1.c1))))))) THEN COUNT(t0.c0) END) ISNULL);
SELECT ALL * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE (json_array_length(t1.c2, vt0.c0) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((NOT (json_array_length(t1.c2, vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE (((json_array_length(t1.c2, vt0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0, t0.c0 FROM t0, vt1, vt0, t1;
SELECT DISTINCT t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0, t0.c0 FROM t0, vt1, vt0, t1 WHERE ((((((NULL)||(t1.c1))))>(((((t1.c2))>((t1.c0))))))) UNION SELECT DISTINCT t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0, t0.c0 FROM t0, vt1, vt0, t1 WHERE ((NOT ((((((NULL)||(t1.c1))))>(((((t1.c2))>((t1.c0))))))))) UNION SELECT DISTINCT t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0, t0.c0 FROM t0 NOT INDEXED, vt1, vt0, t1 WHERE ((((((((NULL)||(t1.c1))))>(((((t1.c2))>((t1.c0))))))) ISNULL));
SELECT DISTINCT t1.c1, vt1.c1, t1.c2, vt0.c0, t1.c0, t0.c0 FROM t0, vt1, vt0, t1;
SELECT ALL vt1.c1 FROM t1, vt1, t0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t1, vt1, t0 WHERE ((~ ((~ (t1.c2))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM t1, vt1, t0 WHERE ((NOT ((~ ((~ (t1.c2))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM t1, vt1, t0 WHERE ((((~ ((~ (t1.c2))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t1, vt1, t0 GROUP BY vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE)) BETWEEN ((((-2124875957, '-353597992', t1.c2)) BETWEEN ((t1.c2, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, 0.3544077561239123)))) AND ((((t1.c2))>((t1.c1)))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((t1.c0) IS FALSE)) BETWEEN ((((-2124875957, '-353597992', t1.c2)) BETWEEN ((t1.c2, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, 0.3544077561239123)))) AND ((((t1.c2))>((t1.c1)))))))) UNION ALL SELECT * FROM t1 WHERE (((((((t1.c0) IS FALSE)) BETWEEN ((((-2124875957, '-353597992', t1.c2)) BETWEEN ((t1.c2, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, 0.3544077561239123)))) AND ((((t1.c2))>((t1.c1)))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt1 WHERE (json_valid(((((((((((((t0.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c0)))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt1 WHERE ((NOT (json_valid(((((((((((((t0.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt1 WHERE (((json_valid(((((((((((((t0.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN vt1;
SELECT ALL t1.c2, t1.c1 FROM t0, t1 GROUP BY t1.c2, t1.c1;
SELECT t1.c2, t1.c1 FROM t0, t1 WHERE ((((((((((t0.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t0.c0)) IN ())) GROUP BY t1.c2, t1.c1 UNION SELECT t1.c2, t1.c1 FROM t0, t1 WHERE ((NOT ((((((((((t0.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t0.c0)) IN ())))) GROUP BY t1.c2, t1.c1 UNION SELECT t1.c2, t1.c1 FROM t0, t1 WHERE ((((((((((((t0.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t0.c0)) IN ())) ISNULL)) GROUP BY t1.c2, t1.c1;
SELECT ALL t1.c2, t1.c1 FROM t0, t1 GROUP BY t1.c2, t1.c1;
SELECT ALL vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1 HAVING (AVG(COUNT(vt0.c0)) IN ()) UNION ALL SELECT ALL vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1 HAVING (NOT ((AVG(COUNT(vt0.c0)) IN ()))) UNION ALL SELECT vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1 HAVING (((AVG(COUNT(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1 HAVING (AVG(COUNT(vt0.c0)) IN ()) UNION ALL SELECT ALL vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1 HAVING (NOT ((AVG(COUNT(vt0.c0)) IN ()))) UNION ALL SELECT vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1 HAVING (((AVG(COUNT(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0, vt0.c0, t1.c0, vt1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t1.c0, vt1.c1;
SELECT ALL * FROM vt1, vt0, t1 CROSS JOIN t0 ON (((vt1.c0, t1.c1, t1.c1)) BETWEEN (((((t1.c0))>=((t0.c0))), (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))), (vt0.c0 IN ()))) AND ((((vt1.c1)>(t0.c0)), (((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), LIKELY(t0.c0))));
SELECT * FROM vt1, vt0, t1 CROSS JOIN t0 ON (((vt1.c0, t1.c1, t1.c1)) BETWEEN (((((t1.c0))>=((t0.c0))), (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))), (vt0.c0 IN ()))) AND ((((vt1.c1)>(t0.c0)), (((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), LIKELY(t0.c0)))) WHERE (((((vt1.c1) IS FALSE)) BETWEEN (LOWER(t1.c0)) AND (((vt1.c0) ISNULL)))) UNION ALL SELECT * FROM vt1, vt0, t1 CROSS JOIN t0 ON (((vt1.c0, t1.c1, t1.c1)) BETWEEN (((((t1.c0))>=((t0.c0))), (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))), (vt0.c0 IN ()))) AND ((((vt1.c1)>(t0.c0)), (((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), LIKELY(t0.c0)))) WHERE ((NOT (((((vt1.c1) IS FALSE)) BETWEEN (LOWER(t1.c0)) AND (((vt1.c0) ISNULL)))))) UNION ALL SELECT ALL * FROM vt1, vt0, t1 CROSS JOIN t0 ON (((vt1.c0, t1.c1, t1.c1)) BETWEEN (((((t1.c0))>=((t0.c0))), (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))), (vt0.c0 IN ()))) AND ((((vt1.c1)>(t0.c0)), (((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), LIKELY(t0.c0)))) WHERE (((((((vt1.c1) IS FALSE)) BETWEEN (LOWER(t1.c0)) AND (((vt1.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM vt1, vt0, t1 CROSS JOIN t0 ON (((vt1.c0, t1.c1, t1.c1)) BETWEEN (((((t1.c0))>=((t0.c0))), (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))), (vt0.c0 IN ()))) AND ((((vt1.c1)>(t0.c0)), (((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), LIKELY(t0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (~ ((t0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (((((vt1.c1)OR(vt0.c0)))AND(t0.c0))) AND ((vt1.c1 IN ('-1154981175', vt1.c1)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (~ ((t0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (((((vt1.c1)OR(vt0.c0)))AND(t0.c0))) AND ((vt1.c1 IN ('-1154981175', vt1.c1)))) WHERE (INSTR(((vt1.c1)OR(vt1.c0)), vt1.c1)) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (~ ((t0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (((((vt1.c1)OR(vt0.c0)))AND(t0.c0))) AND ((vt1.c1 IN ('-1154981175', vt1.c1)))) WHERE ((NOT (INSTR(((vt1.c1)OR(vt1.c0)), vt1.c1)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (~ ((t0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (((((vt1.c1)OR(vt0.c0)))AND(t0.c0))) AND ((vt1.c1 IN ('-1154981175', vt1.c1)))) WHERE (((INSTR(((vt1.c1)OR(vt1.c0)), vt1.c1)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (~ ((t0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (((((vt1.c1)OR(vt0.c0)))AND(t0.c0))) AND ((vt1.c1 IN ('-1154981175', vt1.c1)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0, t1.c1, t1.c2, t1.c0 FROM t0, vt0 INDEXED BY i32, t1 GROUP BY vt0.c0, t1.c1, t1.c2, t1.c0;
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE ((~ ((('	x')-(t0.c0))))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT ((~ ((('	x')-(t0.c0))))))) UNION ALL SELECT * FROM t1, t0 WHERE ((((~ ((('	x')-(t0.c0))))) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) AND ((CAST(vt1.c1 AS NUMERIC))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt1.c1)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) AND ((CAST(vt1.c1 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c1)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) AND ((CAST(vt1.c1 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE (vt0.c0) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING TOTAL(TOTAL(t1.c1)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (TOTAL(TOTAL(t1.c1)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((TOTAL(TOTAL(t1.c1))) ISNULL);
SELECT ALL vt1.c1, t1.c1, vt0.c0, t1.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 NATURAL JOIN t1;
SELECT ALL vt1.c1, t1.c1, vt0.c0, t1.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 NATURAL JOIN t1 WHERE (((((t1.c2)&(vt1.c0))) NOTNULL)) UNION ALL SELECT ALL vt1.c1, t1.c1, vt0.c0, t1.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 NATURAL JOIN t1 WHERE ((NOT (((((t1.c2)&(vt1.c0))) NOTNULL)))) UNION ALL SELECT vt1.c1, t1.c1, vt0.c0, t1.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 NATURAL JOIN t1 WHERE (((((((t1.c2)&(vt1.c0))) NOTNULL)) ISNULL));
SELECT ALL vt1.c1, t1.c1, vt0.c0, t1.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 NATURAL JOIN t1;
SELECT DISTINCT * FROM vt0, t0 INDEXED BY i32, t1, vt1;
SELECT ALL t1.c2, t1.c0, t1.c1, t0.c0 FROM t0, t1 GROUP BY t1.c2, t1.c0, t1.c1, t0.c0;
SELECT ALL t1.c2, t1.c0, t1.c1, t0.c0 FROM t0, t1 WHERE (((((t1.c2) ISNULL))=(t1.c1))) GROUP BY t1.c2, t1.c0, t1.c1, t0.c0 UNION SELECT ALL t1.c2, t1.c0, t1.c1, t0.c0 FROM t0, t1 WHERE ((NOT (((((t1.c2) ISNULL))=(t1.c1))))) GROUP BY t1.c2, t1.c0, t1.c1, t0.c0 UNION SELECT ALL t1.c2, t1.c0, t1.c1, t0.c0 FROM t0, t1 WHERE (((((((t1.c2) ISNULL))=(t1.c1))) ISNULL)) GROUP BY t1.c2, t1.c0, t1.c1, t0.c0;
SELECT ALL t1.c2, t1.c0, t1.c1, t0.c0 FROM t0, t1 GROUP BY t1.c2, t1.c0, t1.c1, t0.c0;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING LIKELIHOOD(((vt0.c0) NOTNULL), 0.18643562245240175) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT (LIKELIHOOD(((vt0.c0) NOTNULL), 0.18643562245240175))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING ((LIKELIHOOD(((vt0.c0) NOTNULL), 0.18643562245240175)) ISNULL);
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING LIKELIHOOD(((vt0.c0) NOTNULL), 0.18643562245240175) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT (LIKELIHOOD(((vt0.c0) NOTNULL), 0.18643562245240175))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING ((LIKELIHOOD(((vt0.c0) NOTNULL), 0.18643562245240175)) ISNULL);
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0, vt1.c0, t1.c1 FROM vt0, vt1, t1;
SELECT t1.c0, vt1.c0, t1.c1 FROM vt0, vt1, t1 WHERE (((((t1.c2)+(vt1.c0)))%(t1.c2))) UNION ALL SELECT t1.c0, vt1.c0, t1.c1 FROM vt0, vt1, t1 WHERE ((NOT (((((t1.c2)+(vt1.c0)))%(t1.c2))))) UNION ALL SELECT ALL t1.c0, vt1.c0, t1.c1 FROM vt0, vt1, t1 WHERE (((((((t1.c2)+(vt1.c0)))%(t1.c2))) ISNULL));
SELECT ALL t1.c0, vt1.c0, t1.c1 FROM vt0, vt1, t1;
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1, vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c1 AS BLOB) END) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c1 AS BLOB) END))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE (((CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c1 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT ALL t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2;
SELECT t1.c1, t1.c2 FROM t1 WHERE ((((t1.c2 COLLATE RTRIM))==(((t1.c2 IN (t1.c1)))))) GROUP BY t1.c1, t1.c2 UNION SELECT t1.c1, t1.c2 FROM t1 WHERE ((NOT ((((t1.c2 COLLATE RTRIM))=(((t1.c2 IN (t1.c1)))))))) GROUP BY t1.c1, t1.c2 UNION SELECT ALL t1.c1, t1.c2 FROM t1 WHERE ((((((t1.c2 COLLATE RTRIM))=(((t1.c2 IN (t1.c1)))))) ISNULL)) GROUP BY t1.c1, t1.c2;
SELECT ALL t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 WHERE ((((vt1.c1)) BETWEEN (((t0.c0 IN ()))) AND ((CAST(vt1.c1 AS TEXT))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 WHERE ((NOT ((((vt1.c1)) BETWEEN (((t0.c0 IN ()))) AND ((CAST(vt1.c1 AS TEXT))))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, t0 WHERE ((((((vt1.c1)) BETWEEN (((t0.c0 IN ()))) AND ((CAST(vt1.c1 AS TEXT))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((((NOT (t0.c0)))AND(vt0.c0)))OR(LIKE(vt0.c0, vt1.c0, '1')))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT ((((((NOT (t0.c0)))AND(vt0.c0)))OR(LIKE(vt0.c0, vt1.c0, '1')))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((((((NOT (t0.c0)))AND(vt0.c0)))OR(LIKE(vt0.c0, vt1.c0, '1')))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT vt0.c0, t1.c2, t1.c1 FROM t1 FULL OUTER JOIN vt0 ON CASE WHEN json_quote(vt0.c0) THEN ((('BeYQ21oS')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (+ (vt0.c0)) END GROUP BY vt0.c0, t1.c2, t1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(COUNT(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(COUNT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(COUNT(t0.c0))) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (t1.c1) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (t1.c1))) UNION ALL SELECT ALL * FROM t0, t1 WHERE (((t1.c1) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT vt1.c0, vt0.c0, t1.c2, t1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, t1.c2, t1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0 WHERE (((((vt1.c0))>((vt0.c0))) IN ())) UNION SELECT DISTINCT vt1.c0, vt0.c0, t1.c2, t1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0 WHERE ((NOT (((((vt1.c0))>((vt0.c0))) IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c0, t1.c2, t1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0 WHERE (((((((vt1.c0))>((vt0.c0))) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, t1.c2, t1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (CHAR((~ (vt1.c1)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (CHAR((~ (vt1.c1)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((CHAR((~ (vt1.c1)))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1, t1.c0, t1.c2, t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY vt1.c1, t1.c0, t1.c2, t1.c1;
SELECT ALL vt1.c1, t1.c0, t1.c2, t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY vt1.c1, t1.c0, t1.c2, t1.c1 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT vt1.c1, t1.c0, t1.c2, t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY vt1.c1, t1.c0, t1.c2, t1.c1 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT vt1.c1, t1.c0, t1.c2, t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY vt1.c1, t1.c0, t1.c2, t1.c1 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT vt1.c0, t1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, t1;
SELECT vt1.c0, t1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, t1 WHERE (CAST(((t1.c2) IS FALSE) AS REAL)) UNION ALL SELECT ALL vt1.c0, t1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, t1 WHERE ((NOT (CAST(((t1.c2) IS FALSE) AS REAL)))) UNION ALL SELECT vt1.c0, t1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, t1 WHERE (((CAST(((t1.c2) IS FALSE) AS REAL)) ISNULL));
SELECT vt1.c0, t1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, t1;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((~ (((((NULL)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT ((~ (((((NULL)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 NOT INDEXED WHERE ((((~ (((((NULL)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) IS TRUE) ELSE -2078062351 END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE (t0.c0 IN ())  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) IS TRUE) ELSE -2078062351 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE (t0.c0 IN ())  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) IS TRUE) ELSE -2078062351 END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0;
SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0;
SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c1, t1.c0 FROM t0, t1 GROUP BY t1.c1, t1.c0;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(t0.c0)))AND(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN t0.c0 WHEN ((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((t0.c0)+(vt0.c0)) WHEN CASE WHEN 0xffffffffe8288a9f THEN vt0.c0 END THEN TYPEOF(t0.c0) END) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (CASE ((((vt0.c0)OR(t0.c0)))AND(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN t0.c0 WHEN ((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((t0.c0)+(vt0.c0)) WHEN CASE WHEN 0Xffffffffe8288a9f THEN vt0.c0 END THEN TYPEOF(t0.c0) END))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((CASE ((((vt0.c0)OR(t0.c0)))AND(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN t0.c0 WHEN ((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((t0.c0)+(vt0.c0)) WHEN CASE WHEN 0xffffffffe8288a9f THEN vt0.c0 END THEN TYPEOF(t0.c0) END) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ('650318960') UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT ('650318960'))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((('650318960') ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (ABS(DISTINCT ((vt1.c0) IS TRUE))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (ABS(DISTINCT ((vt1.c0) IS TRUE))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((ABS(DISTINCT ((vt1.c0) IS TRUE))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, t1.c1, vt1.c1, t1.c0, t1.c2 FROM t1, vt1 GROUP BY vt1.c0, t1.c1, vt1.c1, t1.c0, t1.c2;
SELECT ALL vt1.c0, t1.c1, vt1.c1, t1.c0, t1.c2 FROM t1, vt1 GROUP BY vt1.c0, t1.c1, vt1.c1, t1.c0, t1.c2 HAVING MIN(((((COUNT(t1.c2))OR(t1.c1)))AND('-186614165'))) UNION ALL SELECT vt1.c0, t1.c1, vt1.c1, t1.c0, t1.c2 FROM t1, vt1 GROUP BY vt1.c0, t1.c1, vt1.c1, t1.c0, t1.c2 HAVING (NOT (MIN(((((COUNT(t1.c2))OR(t1.c1)))AND('-186614165'))))) UNION ALL SELECT ALL vt1.c0, t1.c1, vt1.c1, t1.c0, t1.c2 FROM t1, vt1 GROUP BY vt1.c0, t1.c1, vt1.c1, t1.c0, t1.c2 HAVING ((MIN(((((COUNT(t1.c2))OR(t1.c1)))AND('-186614165')))) ISNULL);
SELECT * FROM vt1, t0, vt0;
SELECT ALL * FROM vt1, t0, vt0 NOT INDEXED WHERE ('-740610204') UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((NOT ('-740610204'))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((('-740610204') ISNULL));
SELECT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM t0, vt1, t1, vt0;
SELECT DISTINCT * FROM t0, vt1, t1, vt0 WHERE (CAST(((((t1.c0)OR(vt0.c0)))AND(t1.c2)) AS INTEGER)) UNION SELECT DISTINCT * FROM t0, vt1, t1, vt0 WHERE ((NOT (CAST(((((t1.c0)OR(vt0.c0)))AND(t1.c2)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, vt1, t1, vt0 WHERE (((CAST(((((t1.c0)OR(vt0.c0)))AND(t1.c2)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0, vt1, t1, vt0;
SELECT t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2 FROM vt1, t0, t1, vt0 GROUP BY t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2;
SELECT ALL t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2 FROM vt1, t0, t1, vt0 WHERE (CASE (- (t1.c1))  WHEN (t1.c0 IN (t1.c1)) THEN (((t1.c0))>=((vt1.c0))) ELSE (((t1.c2, vt1.c0, vt1.c0)) NOT BETWEEN ((t1.c1, t0.c0, vt1.c0)) AND ((t0.c0, vt0.c0, t1.c1))) END) GROUP BY t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2 UNION SELECT t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2 FROM vt1, t0, t1, vt0 WHERE ((NOT (CASE (- (t1.c1))  WHEN (t1.c0 IN (t1.c1)) THEN (((t1.c0))>=((vt1.c0))) ELSE (((t1.c2, vt1.c0, vt1.c0)) NOT BETWEEN ((t1.c1, t0.c0, vt1.c0)) AND ((t0.c0, vt0.c0, t1.c1))) END))) GROUP BY t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2 UNION SELECT ALL t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2 FROM vt1, t0, t1, vt0 WHERE (((CASE (- (t1.c1))  WHEN (t1.c0 IN (t1.c1)) THEN (((t1.c0))>=((vt1.c0))) ELSE (((t1.c2, vt1.c0, vt1.c0)) NOT BETWEEN ((t1.c1, t0.c0, vt1.c0)) AND ((t0.c0, vt0.c0, t1.c1))) END) ISNULL)) GROUP BY t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2;
SELECT t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2 FROM vt1, t0, t1, vt0 GROUP BY t1.c1, vt1.c1, vt1.c0, vt0.c0, t1.c0, t1.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) BETWEEN ((CAST(TOTAL(vt0.c0) AS INTEGER))) AND ((((SUM(COUNT(vt0.c0))) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) BETWEEN ((CAST(TOTAL(vt0.c0) AS INTEGER))) AND ((((SUM(COUNT(vt0.c0))) ISNULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) BETWEEN ((CAST(TOTAL(vt0.c0) AS INTEGER))) AND ((((SUM(COUNT(vt0.c0))) ISNULL))))) ISNULL);
SELECT ALL t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt1, vt0;
SELECT ALL t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt1, vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN (((vt1.c0)*(vt1.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt1, vt0 WHERE ((NOT ((NULLIF(vt0.c0, vt0.c0) IN (((vt1.c0)*(vt1.c0))))))) UNION ALL SELECT t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt1, vt0 WHERE ((((NULLIF(vt0.c0, vt0.c0) IN (((vt1.c0)*(vt1.c0))))) ISNULL));
SELECT ALL t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1, t0, t1;
SELECT DISTINCT * FROM vt0, vt1, t0, t1 WHERE (((((vt0.c0)GLOB(t1.c1))) BETWEEN (x'') AND (((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0, t1 WHERE ((NOT (((((vt0.c0)GLOB(t1.c1))) BETWEEN (x'') AND (((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0, t1 WHERE (((((((vt0.c0)GLOB(t1.c1))) BETWEEN (x'') AND (((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0, t1;
SELECT ALL t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1 FROM t0, t1, vt0, vt1 GROUP BY t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1;
SELECT ALL t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1 FROM t0, t1, vt0, vt1 WHERE (LIKELIHOOD(vt0.c0, 0.9759491633363726)) GROUP BY t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1 UNION SELECT t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1 FROM t0, t1, vt0, vt1 WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.9759491633363726)))) GROUP BY t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1 UNION SELECT ALL t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1 FROM t0, t1, vt0, vt1 WHERE (((LIKELIHOOD(vt0.c0, 0.9759491633363726)) ISNULL)) GROUP BY t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1;
SELECT ALL t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1 FROM t0, t1, vt0, vt1 GROUP BY t1.c0, t0.c0, vt0.c0, vt1.c1, t1.c2, t1.c1;
SELECT t0.c0, t1.c1, vt1.c0, t1.c0, vt1.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (('0.3273142837706835') NOT NULL) FULL OUTER JOIN t1 ON (((~ (t1.c0))) IS TRUE) GROUP BY t0.c0, t1.c1, vt1.c0, t1.c0, vt1.c1;
SELECT ALL t0.c0, t1.c1, vt1.c0, t1.c0, vt1.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (('0.3273142837706835') NOT NULL) FULL OUTER JOIN t1 ON (((~ (t1.c0))) IS TRUE) GROUP BY t0.c0, t1.c1, vt1.c0, t1.c0, vt1.c1 HAVING CASE WHEN '''NE' THEN t1.c1 WHEN SUM(AVG(COUNT(x''))) THEN GROUP_CONCAT(vt0.c0) WHEN ((vt1.c1)>=(vt0.c0)) THEN (((COUNT(MIN(GROUP_CONCAT(COUNT(*)))), COUNT(*), AVG(TOTAL(GROUP_CONCAT(COUNT(*)))), vt0.c0, t1.c1)) BETWEEN ((x'', AVG(t1.c1), AVG(vt1.c1), COUNT(COUNT(TOTAL(MAX(t1.c1)))), t1.c0)) AND ((SUM(AVG(SUM(SUM(AVG(COUNT(*)))))), MAX(GROUP_CONCAT(MIN(t1.c0))), t1.c0, COUNT(*), TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(t0.c0)))))))) END UNION ALL SELECT t0.c0, t1.c1, vt1.c0, t1.c0, vt1.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (('0.3273142837706835') NOT NULL) FULL OUTER JOIN t1 ON (((~ (t1.c0))) IS TRUE) GROUP BY t0.c0, t1.c1, vt1.c0, t1.c0, vt1.c1 HAVING (NOT (CASE WHEN '''NE' THEN t1.c1 WHEN SUM(AVG(COUNT(x''))) THEN GROUP_CONCAT(vt0.c0) WHEN ((vt1.c1)>=(vt0.c0)) THEN (((COUNT(MIN(GROUP_CONCAT(COUNT(*)))), COUNT(*), AVG(TOTAL(GROUP_CONCAT(COUNT(*)))), vt0.c0, t1.c1)) BETWEEN ((x'', AVG(t1.c1), AVG(vt1.c1), COUNT(COUNT(TOTAL(MAX(t1.c1)))), t1.c0)) AND ((SUM(AVG(SUM(SUM(AVG(COUNT(*)))))), MAX(GROUP_CONCAT(MIN(t1.c0))), t1.c0, COUNT(*), TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(t0.c0)))))))) END)) UNION ALL SELECT ALL t0.c0, t1.c1, vt1.c0, t1.c0, vt1.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (('0.3273142837706835') NOT NULL) FULL OUTER JOIN t1 ON (((~ (t1.c0))) IS TRUE) GROUP BY t0.c0, t1.c1, vt1.c0, t1.c0, vt1.c1 HAVING ((CASE WHEN '''NE' THEN t1.c1 WHEN SUM(AVG(COUNT(x''))) THEN GROUP_CONCAT(vt0.c0) WHEN ((vt1.c1)>=(vt0.c0)) THEN (((COUNT(MIN(GROUP_CONCAT(COUNT(*)))), COUNT(*), AVG(TOTAL(GROUP_CONCAT(COUNT(*)))), vt0.c0, t1.c1)) BETWEEN ((x'', AVG(t1.c1), AVG(vt1.c1), COUNT(COUNT(TOTAL(MAX(t1.c1)))), t1.c0)) AND ((SUM(AVG(SUM(SUM(AVG(COUNT(*)))))), MAX(GROUP_CONCAT(MIN(t1.c0))), t1.c0, COUNT(*), TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(t0.c0)))))))) END) ISNULL);
SELECT ALL vt1.c1 FROM vt1, vt0;
SELECT ALL vt1.c1 FROM vt1, vt0 WHERE (((((((0.4858870806627328) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c1)+(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((NOT (((((((0.4858870806627328) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c1)+(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 WHERE (((((((((0.4858870806627328) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c1)+(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ISNULL));
SELECT ALL vt1.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(CAST(vt1.c1 AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(CAST(vt1.c1 AS REAL)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(CAST(vt1.c1 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t1.c1 FROM vt0, t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM vt0, t1 WHERE (x'75f6') GROUP BY t1.c1 UNION SELECT t1.c1 FROM vt0, t1 WHERE ((NOT (x'75f6'))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM vt0, t1 WHERE (((x'75f6') ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM vt0, t1 GROUP BY t1.c1;
SELECT t1.c2 FROM t0, t1 GROUP BY t1.c2;
SELECT ALL t1.c2 FROM t0, t1 GROUP BY t1.c2 HAVING ((COUNT(GROUP_CONCAT(GROUP_CONCAT(SUM(t1.c1))))) IS TRUE) UNION ALL SELECT t1.c2 FROM t0, t1 GROUP BY t1.c2 HAVING (NOT (((COUNT(GROUP_CONCAT(GROUP_CONCAT(SUM(t1.c1))))) IS TRUE))) UNION ALL SELECT ALL t1.c2 FROM t0, t1 GROUP BY t1.c2 HAVING ((((COUNT(GROUP_CONCAT(GROUP_CONCAT(SUM(t1.c1))))) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM t1, vt0, t0;
SELECT ALL vt0.c0 FROM t1, vt0, t0 WHERE (CASE 'á¬¤+>vT03#'  WHEN ((t0.c0) NOTNULL) THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c0))) ELSE 0.9863427548418711 END) UNION ALL SELECT vt0.c0 FROM t1, vt0, t0 WHERE ((NOT (CASE 'á¬¤+>vT03#'  WHEN ((t0.c0) NOTNULL) THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c0))) ELSE 0.9863427548418711 END))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0, t0 WHERE (((CASE 'á¬¤+>vT03#'  WHEN ((t0.c0) NOTNULL) THEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c0))) ELSE 0.9863427548418711 END) ISNULL));
SELECT ALL vt0.c0 FROM t1, vt0, t0;
SELECT DISTINCT vt1.c0, t1.c0, vt1.c1, t1.c2, t0.c0 FROM vt1, t1, t0;
SELECT DISTINCT vt1.c0, t1.c0, vt1.c1, t1.c2, t0.c0 FROM vt1, t1, t0 WHERE ((((((+ (x'e8ca7fcf')))OR(NULL COLLATE RTRIM)))AND((((t0.c0))=((t1.c0)))))) UNION SELECT DISTINCT vt1.c0, t1.c0, vt1.c1, t1.c2, t0.c0 FROM vt1, t1, t0 WHERE ((NOT ((((((+ (x'e8ca7fcf')))OR(NULL COLLATE RTRIM)))AND((((t0.c0))==((t1.c0)))))))) UNION SELECT DISTINCT vt1.c0, t1.c0, vt1.c1, t1.c2, t0.c0 FROM vt1 NOT INDEXED, t1, t0 WHERE ((((((((+ (x'e8ca7fcf')))OR(NULL COLLATE RTRIM)))AND((((t0.c0))=((t1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, t1.c0, vt1.c1, t1.c2, t0.c0 FROM vt1, t1, t0;
SELECT vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) RIGHT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))OR(vt1.c1))) BETWEEN (((((NULL)OR(vt1.c0)))AND(t1.c2))) AND (((((((((vt1.c0)AND(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)))) GROUP BY vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) RIGHT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))OR(vt1.c1))) BETWEEN (((((NULL)OR(vt1.c0)))AND(t1.c2))) AND (((((((((vt1.c0)AND(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)))) WHERE (((CAST(vt1.c0 AS NUMERIC))IS NOT(((t1.c2) ISNULL)))) GROUP BY vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1 UNION SELECT vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) RIGHT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))OR(vt1.c1))) BETWEEN (((((NULL)OR(vt1.c0)))AND(t1.c2))) AND (((((((((vt1.c0)AND(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)))) WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))IS NOT(((t1.c2) ISNULL)))))) GROUP BY vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1 UNION SELECT vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) RIGHT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))OR(vt1.c1))) BETWEEN (((((NULL)OR(vt1.c0)))AND(t1.c2))) AND (((((((((vt1.c0)AND(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)))) WHERE (((((CAST(vt1.c0 AS NUMERIC))IS NOT(((t1.c2) ISNULL)))) ISNULL)) GROUP BY vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) RIGHT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))OR(vt1.c1))) BETWEEN (((((NULL)OR(vt1.c0)))AND(t1.c2))) AND (((((((((vt1.c0)AND(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)))) GROUP BY vt1.c0, t1.c2, t1.c1, t1.c0, t0.c0, vt1.c1;
SELECT ALL t1.c2, t1.c1, vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t1, vt0, vt1, t0 GROUP BY t1.c2, t1.c1, vt1.c0, vt1.c1, vt0.c0, t0.c0;
SELECT ALL t1.c2, t1.c1, vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t1, vt0, vt1, t0 GROUP BY t1.c2, t1.c1, vt1.c0, vt1.c1, vt0.c0, t0.c0 HAVING SUM((TOTAL(COUNT(MIN(TOTAL(MAX(GROUP_CONCAT(TOTAL(t1.c2))))))) IN (COUNT(*)))) UNION ALL SELECT ALL t1.c2, t1.c1, vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t1, vt0, vt1, t0 GROUP BY t1.c2, t1.c1, vt1.c0, vt1.c1, vt0.c0, t0.c0 HAVING (NOT (SUM((TOTAL(COUNT(MIN(TOTAL(MAX(GROUP_CONCAT(TOTAL(t1.c2))))))) IN (COUNT(*)))))) UNION ALL SELECT ALL t1.c2, t1.c1, vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t1, vt0, vt1, t0 GROUP BY t1.c2, t1.c1, vt1.c0, vt1.c1, vt0.c0, t0.c0 HAVING ((SUM((TOTAL(COUNT(MIN(TOTAL(MAX(GROUP_CONCAT(TOTAL(t1.c2))))))) IN (COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT ((((vt0.c0, vt1.c1, vt1.c0))>((vt1.c1, vt1.c1, vt1.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT ((NOT ((((vt0.c0, vt1.c1, vt1.c0))>((vt1.c1, vt1.c1, vt1.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM t0 NOT INDEXED, vt0, vt1 WHERE ((((NOT ((((vt0.c0, vt1.c1, vt1.c0))>((vt1.c1, vt1.c1, vt1.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0, vt1;
SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (CAST(NULLIF(vt1.c1, vt1.c0) AS INTEGER)) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (CAST(NULLIF(vt1.c1, vt1.c0) AS INTEGER)))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((CAST(NULLIF(vt1.c1, vt1.c0) AS INTEGER)) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MAX(MAX(vt1.c1)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MAX(MAX(vt1.c1)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MAX(MAX(vt1.c1))) ISNULL);
SELECT * FROM vt0, t1, t0;
SELECT * FROM vt0, t1, t0 WHERE (((((HEX(t1.c0))AND((vt0.c0 IN ()))))OR((((t1.c0)) BETWEEN ((t0.c0)) AND (('1889638886')))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE ((NOT (((((HEX(t1.c0))AND((vt0.c0 IN ()))))OR((((t1.c0)) BETWEEN ((t0.c0)) AND (('1889638886')))))))) UNION ALL SELECT * FROM vt0, t1, t0 WHERE (((((((HEX(t1.c0))AND((vt0.c0 IN ()))))OR((((t1.c0)) BETWEEN ((t0.c0)) AND (('1889638886')))))) ISNULL));
SELECT * FROM vt0, t1, t0;
SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t1.c2, vt1.c0 FROM t1, vt0, t0, vt1;
SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t1.c2, vt1.c0 FROM t1, vt0, t0, vt1 WHERE ((((CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END))==((vt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t1.c2, vt1.c0 FROM t1, vt0, t0, vt1 WHERE ((NOT ((((CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END))==((vt0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t1.c2, vt1.c0 FROM t1, vt0, t0, vt1 WHERE ((((((CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END))=((vt0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t1.c2, vt1.c0 FROM t1, vt0, t0, vt1;
SELECT vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM vt1, t1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2;
SELECT ALL vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM vt1, t1, t0, vt0 WHERE (TRIM((('nh')-(t1.c2)))) GROUP BY vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 UNION SELECT ALL vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM vt1, t1, t0, vt0 WHERE ((NOT (TRIM((('nh')-(t1.c2)))))) GROUP BY vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 UNION SELECT vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM vt1, t1, t0, vt0 WHERE (((TRIM((('nh')-(t1.c2)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2;
SELECT vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2 FROM vt1, t1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(GROUP_CONCAT(AVG(COUNT(*))))) NOT BETWEEN ((((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((vt1.c1)))) AND (((((((((vt1.c1)OR(MIN(GROUP_CONCAT(vt1.c1)))))AND(MIN(COUNT(*)))))OR(vt1.c1)))AND(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(GROUP_CONCAT(AVG(COUNT(*))))) NOT BETWEEN ((((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((vt1.c1)))) AND (((((((((vt1.c1)OR(MIN(GROUP_CONCAT(vt1.c1)))))AND(MIN(COUNT(*)))))OR(vt1.c1)))AND(COUNT(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(GROUP_CONCAT(AVG(COUNT(*))))) NOT BETWEEN ((((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((vt1.c1)))) AND (((((((((vt1.c1)OR(MIN(GROUP_CONCAT(vt1.c1)))))AND(MIN(COUNT(*)))))OR(vt1.c1)))AND(COUNT(vt1.c0)))))) ISNULL);
SELECT vt1.c1, t0.c0, t1.c2, t1.c0 FROM t0, vt0, vt1, t1;
SELECT vt1.c1, t0.c0, t1.c2, t1.c0 FROM t0, vt0, vt1, t1 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) UNION ALL SELECT vt1.c1, t0.c0, t1.c2, t1.c0 FROM t0, vt0, vt1, t1 WHERE ((NOT ((CAST(t1.c0 AS INTEGER) IN ())))) UNION ALL SELECT ALL vt1.c1, t0.c0, t1.c2, t1.c0 FROM t0, vt0, vt1, t1 WHERE ((((CAST(t1.c0 AS INTEGER) IN ())) ISNULL));
SELECT vt1.c1, t0.c0, t1.c2, t1.c0 FROM t0, vt0, vt1, t1;
SELECT DISTINCT * FROM vt1, t1;
SELECT DISTINCT * FROM vt1, t1 WHERE ((+ ((NOT (t1.c1))))) UNION SELECT DISTINCT * FROM vt1, t1 WHERE ((NOT ((+ ((NOT (t1.c1))))))) UNION SELECT DISTINCT * FROM vt1, t1 WHERE ((((+ ((NOT (t1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, t1;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1 HAVING ((SUM(vt0.c0))>=(((SUM(t1.c0))!=(t1.c0)))) UNION ALL SELECT t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1 HAVING (NOT (((SUM(vt0.c0))>=(((SUM(t1.c0))!=(t1.c0)))))) UNION ALL SELECT t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1 HAVING ((((SUM(vt0.c0))>=(((SUM(t1.c0))!=(t1.c0))))) ISNULL);
SELECT ALL t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1 HAVING ((SUM(vt0.c0))>=(((SUM(t1.c0))!=(t1.c0)))) UNION ALL SELECT t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1 HAVING (NOT (((SUM(vt0.c0))>=(((SUM(t1.c0))!=(t1.c0)))))) UNION ALL SELECT t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1 HAVING ((((SUM(vt0.c0))>=(((SUM(t1.c0))!=(t1.c0))))) ISNULL);
SELECT ALL t1.c1 FROM t1 FULL OUTER JOIN vt0 ON (- (x'')) RIGHT OUTER JOIN t0 ON (((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1)))) BETWEEN (vt0.c0) AND (UPPER(vt0.c0))) GROUP BY t1.c1;
SELECT ALL t0.c0, t1.c1, vt1.c0, t1.c0, t1.c2, vt0.c0, vt1.c1 FROM vt0, t1, t0, vt1;
SELECT ALL t0.c0, t1.c1, vt1.c0, t1.c0, t1.c2, vt0.c0, vt1.c1 FROM vt0, t1, t0, vt1 WHERE ((+ (t1.c2)) COLLATE NOCASE) UNION ALL SELECT t0.c0, t1.c1, vt1.c0, t1.c0, t1.c2, vt0.c0, vt1.c1 FROM vt0, t1, t0, vt1 WHERE ((NOT ((+ (t1.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0, t1.c1, vt1.c0, t1.c0, t1.c2, vt0.c0, vt1.c1 FROM vt0, t1, t0, vt1 WHERE ((((+ (t1.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c0, t1.c1, vt1.c0, t1.c0, t1.c2, vt0.c0, vt1.c1 FROM vt0, t1, t0, vt1;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((NOT (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((NOT (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((NOT (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(AVG(AVG(COUNT(TOTAL(COUNT(t0.c0))))) AS BLOB) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(AVG(AVG(COUNT(TOTAL(COUNT(t0.c0))))) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(AVG(AVG(COUNT(TOTAL(COUNT(t0.c0))))) AS BLOB)) ISNULL);
SELECT ALL * FROM t0, t1, vt1, vt0;
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE (((CASE t1.c2  WHEN vt1.c1 THEN t1.c0 ELSE t1.c1 END) NOT NULL)) UNION ALL SELECT * FROM t0, t1, vt1, vt0 WHERE ((NOT (((CASE t1.c2  WHEN vt1.c1 THEN t1.c0 ELSE t1.c1 END) NOT NULL)))) UNION ALL SELECT ALL * FROM t0, t1, vt1, vt0 WHERE (((((CASE t1.c2  WHEN vt1.c1 THEN t1.c0 ELSE t1.c1 END) NOT NULL)) ISNULL));
SELECT ALL * FROM t0, t1, vt1, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)<(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(NULL))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)<(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(NULL))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((t0.c0)<(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(NULL))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt1.c0 FROM vt1, t1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t1 WHERE ((((((((NULL))<=((vt1.c1))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(t1.c1))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t1 WHERE ((NOT ((((((((NULL))<=((vt1.c1))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(t1.c1))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t1 WHERE ((((((((((NULL))<=((vt1.c1))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(t1.c1))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t1 GROUP BY vt1.c0;
SELECT t1.c2 FROM vt0, vt1 INNER JOIN t1 ON '-2076255633' RIGHT OUTER JOIN t0 ON ((x'' COLLATE NOCASE) IS TRUE) GROUP BY t1.c2;
SELECT ALL t1.c2 FROM vt0, vt1 INNER JOIN t1 ON '-2076255633' RIGHT OUTER JOIN t0 ON ((x'' COLLATE NOCASE) IS TRUE) GROUP BY t1.c2 HAVING SUM(GROUP_CONCAT(MIN(MAX(MAX(t0.c0))))) UNION ALL SELECT ALL t1.c2 FROM vt0, vt1 INNER JOIN t1 ON '-2076255633' RIGHT OUTER JOIN t0 ON ((x'' COLLATE NOCASE) IS TRUE) GROUP BY t1.c2 HAVING (NOT (SUM(GROUP_CONCAT(MIN(MAX(MAX(t0.c0))))))) UNION ALL SELECT t1.c2 FROM vt0, vt1 INNER JOIN t1 ON '-2076255633' RIGHT OUTER JOIN t0 ON ((x'' COLLATE NOCASE) IS TRUE) GROUP BY t1.c2 HAVING ((SUM(GROUP_CONCAT(MIN(MAX(MAX(t0.c0)))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t1.c1, t1.c2 FROM t1, t0, vt0;
SELECT DISTINCT t1.c1, t1.c2 FROM t1, t0, vt0 WHERE ((((NOT (x'')))<<(((((vt0.c0)OR(t1.c2)))OR(x''))))) UNION SELECT DISTINCT t1.c1, t1.c2 FROM t1, t0, vt0 WHERE ((NOT ((((NOT (x'')))<<(((((vt0.c0)OR(t1.c2)))OR(x''))))))) UNION SELECT DISTINCT t1.c1, t1.c2 FROM t1, t0, vt0 WHERE ((((((NOT (x'')))<<(((((vt0.c0)OR(t1.c2)))OR(x''))))) ISNULL));
SELECT DISTINCT t1.c1, t1.c2 FROM t1, t0, vt0;
SELECT ALL vt1.c0, vt1.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) GROUP BY vt1.c0, vt1.c1, t0.c0;
SELECT vt1.c0, vt1.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c0)<=(vt1.c1)) THEN (vt1.c1 IN ()) ELSE vt1.c0 COLLATE NOCASE END) GROUP BY vt1.c0, vt1.c1, t0.c0 UNION SELECT vt1.c0, vt1.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) WHERE ((NOT (CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c0)<=(vt1.c1)) THEN (vt1.c1 IN ()) ELSE vt1.c0 COLLATE NOCASE END))) GROUP BY vt1.c0, vt1.c1, t0.c0 UNION SELECT vt1.c0, vt1.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) WHERE (((CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c0)<=(vt1.c1)) THEN (vt1.c1 IN ()) ELSE vt1.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt1.c0, vt1.c1, t0.c0;
SELECT ALL vt1.c0, vt1.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) GROUP BY vt1.c0, vt1.c1, t0.c0;
SELECT t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0;
SELECT ALL t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 HAVING COUNT(((vt0.c0) NOTNULL)) UNION ALL SELECT t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 HAVING (NOT (COUNT(((vt0.c0) NOTNULL)))) UNION ALL SELECT t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 HAVING ((COUNT(((vt0.c0) NOTNULL))) ISNULL);
SELECT t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0;
SELECT ALL t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 HAVING COUNT(((vt0.c0) NOTNULL)) UNION ALL SELECT t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 HAVING (NOT (COUNT(((vt0.c0) NOTNULL)))) UNION ALL SELECT t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 HAVING ((COUNT(((vt0.c0) NOTNULL))) ISNULL);
SELECT t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0 FROM vt1, vt0, t1 LEFT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (vt1.c1))) GROUP BY t1.c1, vt1.c1, t0.c0, t1.c2, vt1.c0;
SELECT * FROM t0, vt0 LEFT OUTER JOIN t1 ON (((NULL IN ()))LIKE(((((t1.c2)OR(vt0.c0)))AND(t1.c0)))) INNER JOIN vt1 ON LIKELIHOOD(((vt1.c0)OR(t1.c0)), 0.770378330018067);
SELECT * FROM t0, vt0 LEFT OUTER JOIN t1 ON (((NULL IN ()))LIKE(((((t1.c2)OR(vt0.c0)))AND(t1.c0)))) INNER JOIN vt1 ON LIKELIHOOD(((vt1.c0)OR(t1.c0)), 0.770378330018067) WHERE ((- (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN t1 ON (((NULL IN ()))LIKE(((((t1.c2)OR(vt0.c0)))AND(t1.c0)))) INNER JOIN vt1 ON LIKELIHOOD(((vt1.c0)OR(t1.c0)), 0.770378330018067) WHERE ((NOT ((- (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM t0 NOT INDEXED, vt0 LEFT OUTER JOIN t1 ON (((NULL IN ()))LIKE(((((t1.c2)OR(vt0.c0)))AND(t1.c0)))) INNER JOIN vt1 ON LIKELIHOOD(((vt1.c0)OR(t1.c0)), 0.770378330018067) WHERE ((((- (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM t0, vt0 LEFT OUTER JOIN t1 ON (((NULL IN ()))LIKE(((((t1.c2)OR(vt0.c0)))AND(t1.c0)))) INNER JOIN vt1 ON LIKELIHOOD(((vt1.c0)OR(t1.c0)), 0.770378330018067);
SELECT DISTINCT vt1.c1, t0.c0, vt1.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt1.c1, t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE (((UNLIKELY(DISTINCT t0.c0)) IS TRUE)) UNION SELECT DISTINCT vt1.c1, t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT (((UNLIKELY(DISTINCT t0.c0)) IS TRUE)))) UNION SELECT DISTINCT vt1.c1, t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE (((((UNLIKELY(DISTINCT t0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c1, t0.c0, vt1.c0 FROM vt1, vt0, t0;
SELECT ALL t1.c2, t1.c1, t0.c0 FROM t0, vt0 INDEXED BY i15, t1, vt1 GROUP BY t1.c2, t1.c1, t0.c0;
SELECT ALL t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0;
SELECT t1.c1, vt1.c0, vt1.c1 FROM t1 RIGHT OUTER JOIN vt1 ON (((((t1.c2) ISNULL)))!=((((NULL)>>(vt1.c1))))) RIGHT OUTER JOIN vt0 ON (NOT (((((((((t1.c1)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))OR(t1.c1))));
SELECT ALL t1.c1, vt1.c0, vt1.c1 FROM t1 RIGHT OUTER JOIN vt1 ON (((((t1.c2) ISNULL)))<>((((NULL)>>(vt1.c1))))) RIGHT OUTER JOIN vt0 ON (NOT (((((((((t1.c1)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))OR(t1.c1)))) WHERE (((vt1.c0)GLOB(x''))) UNION ALL SELECT ALL t1.c1, vt1.c0, vt1.c1 FROM t1 RIGHT OUTER JOIN vt1 ON (((((t1.c2) ISNULL)))<>((((NULL)>>(vt1.c1))))) RIGHT OUTER JOIN vt0 ON (NOT (((((((((t1.c1)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))OR(t1.c1)))) WHERE ((NOT (((vt1.c0)GLOB(x''))))) UNION ALL SELECT t1.c1, vt1.c0, vt1.c1 FROM t1 RIGHT OUTER JOIN vt1 ON (((((t1.c2) ISNULL)))<>((((NULL)>>(vt1.c1))))) RIGHT OUTER JOIN vt0 ON (NOT (((((((((t1.c1)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))OR(t1.c1)))) WHERE (((((vt1.c0)GLOB(x''))) ISNULL));
SELECT t1.c1, vt1.c0, vt1.c1 FROM t1 RIGHT OUTER JOIN vt1 ON (((((t1.c2) ISNULL)))!=((((NULL)>>(vt1.c1))))) RIGHT OUTER JOIN vt0 ON (NOT (((((((((t1.c1)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))OR(t1.c1))));
SELECT DISTINCT * FROM t1, vt1, t0, vt0;
SELECT DISTINCT * FROM t1, vt1, t0, vt0 WHERE (((((t1.c1)>(vt0.c0)))*(t0.c0))) UNION SELECT DISTINCT * FROM t1, vt1, t0, vt0 WHERE ((NOT (((((t1.c1)>(vt0.c0)))*(t0.c0))))) UNION SELECT DISTINCT * FROM t1, vt1, t0, vt0 WHERE (((((((t1.c1)>(vt0.c0)))*(t0.c0))) ISNULL));
SELECT DISTINCT * FROM t1, vt1, t0, vt0;
SELECT t1.c1, vt1.c1, t1.c2 FROM vt1, t1 GROUP BY t1.c1, vt1.c1, t1.c2;
SELECT t1.c1, vt1.c1, t1.c2 FROM vt1 NOT INDEXED, t1 WHERE ((- ((t1.c1 IN ())))) GROUP BY t1.c1, vt1.c1, t1.c2 UNION SELECT ALL t1.c1, vt1.c1, t1.c2 FROM vt1, t1 WHERE ((NOT ((- ((t1.c1 IN ())))))) GROUP BY t1.c1, vt1.c1, t1.c2 UNION SELECT t1.c1, vt1.c1, t1.c2 FROM vt1, t1 WHERE ((((- ((t1.c1 IN ())))) ISNULL)) GROUP BY t1.c1, vt1.c1, t1.c2;
SELECT t1.c1, vt1.c1, t1.c2 FROM vt1, t1 GROUP BY t1.c1, vt1.c1, t1.c2;
SELECT t1.c2, t1.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t1.c2, t1.c1, t1.c0;
SELECT t1.c2, t1.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING GROUP_CONCAT(MIN(GROUP_CONCAT(t1.c1))) UNION ALL SELECT ALL t1.c2, t1.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING (NOT (GROUP_CONCAT(MIN(GROUP_CONCAT(t1.c1))))) UNION ALL SELECT t1.c2, t1.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING ((GROUP_CONCAT(MIN(GROUP_CONCAT(t1.c1)))) ISNULL);
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL) INNER JOIN t0 ON ((((vt0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY RIGHT OUTER JOIN vt1 ON t1.c0;
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((NOT (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((NOT ((NOT (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((((NOT (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT ALL vt1.c0 FROM t0, vt1, vt0, t1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1, vt0, t1 WHERE ((((x'a57d') NOT NULL) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1, vt0, t1 WHERE ((NOT ((((x'a57d') NOT NULL) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1, vt0, t1 WHERE ((((((x'a57d') NOT NULL) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1, vt0, t1 GROUP BY vt1.c0;
SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 GROUP BY t1.c0, t0.c0, t1.c1;
SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 GROUP BY t1.c0, t0.c0, t1.c1 HAVING (CASE GROUP_CONCAT(t1.c0)  WHEN t1.c0 THEN COUNT(t1.c2) END IN (t1.c0)) UNION ALL SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 NOT INDEXED GROUP BY t1.c0, t0.c0, t1.c1 HAVING (NOT ((CASE GROUP_CONCAT(t1.c0)  WHEN t1.c0 THEN COUNT(t1.c2) END IN (t1.c0)))) UNION ALL SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 GROUP BY t1.c0, t0.c0, t1.c1 HAVING (((CASE GROUP_CONCAT(t1.c0)  WHEN t1.c0 THEN COUNT(t1.c2) END IN (t1.c0))) ISNULL);
SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 GROUP BY t1.c0, t0.c0, t1.c1;
SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 GROUP BY t1.c0, t0.c0, t1.c1 HAVING (CASE GROUP_CONCAT(t1.c0)  WHEN t1.c0 THEN COUNT(t1.c2) END IN (t1.c0)) UNION ALL SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 NOT INDEXED GROUP BY t1.c0, t0.c0, t1.c1 HAVING (NOT ((CASE GROUP_CONCAT(t1.c0)  WHEN t1.c0 THEN COUNT(t1.c2) END IN (t1.c0)))) UNION ALL SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 GROUP BY t1.c0, t0.c0, t1.c1 HAVING (((CASE GROUP_CONCAT(t1.c0)  WHEN t1.c0 THEN COUNT(t1.c2) END IN (t1.c0))) ISNULL);
SELECT t1.c0, t0.c0, t1.c1 FROM t0, t1 GROUP BY t1.c0, t0.c0, t1.c1;
SELECT ALL * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c2)) IN ())) UNION ALL SELECT * FROM vt0, t1 WHERE ((NOT ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c2)) IN ())))) UNION ALL SELECT * FROM vt0, t1 WHERE ((((((vt0.c0) BETWEEN (t1.c0) AND (t1.c2)) IN ())) ISNULL));
SELECT ALL * FROM vt0, t1;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (x'') UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1;
SELECT ALL t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1 FROM t1, t0, vt1, vt0 WHERE (((CASE vt1.c1  WHEN t1.c0 THEN t0.c0 WHEN vt1.c0 THEN 0.3229560830108674 WHEN t1.c2 THEN t1.c2 WHEN 0X6286eb61 THEN vt0.c0 WHEN vt1.c1 THEN t1.c0 END)||(TIME(t1.c0, vt0.c0, t0.c0)))) GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1 UNION SELECT ALL t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1 FROM t1, t0, vt1, vt0 WHERE ((NOT (((CASE vt1.c1  WHEN t1.c0 THEN t0.c0 WHEN vt1.c0 THEN 0.3229560830108674 WHEN t1.c2 THEN t1.c2 WHEN 0X6286eb61 THEN vt0.c0 WHEN vt1.c1 THEN t1.c0 END)||(TIME(t1.c0, vt0.c0, t0.c0)))))) GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1 UNION SELECT t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1 FROM t1, t0, vt1, vt0 WHERE (((((CASE vt1.c1  WHEN t1.c0 THEN t0.c0 WHEN vt1.c0 THEN 0.3229560830108674 WHEN t1.c2 THEN t1.c2 WHEN 0X6286eb61 THEN vt0.c0 WHEN vt1.c1 THEN t1.c0 END)||(TIME(t1.c0, vt0.c0, t0.c0)))) ISNULL)) GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1;
SELECT t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, t0.c0, vt0.c0, vt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((COUNT(*))AND((((GROUP_CONCAT(t0.c0)))>((t0.c0))))))AND(((((((((COUNT(t0.c0))OR(COUNT(AVG(COUNT(*))))))OR(SUM(t0.c0))))OR(TOTAL(TOTAL(AVG(COUNT(t0.c0)))))))OR(GROUP_CONCAT(COUNT(t0.c0)))))))AND(SUM(t0.c0))))AND(SUM(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((((((COUNT(*))AND((((GROUP_CONCAT(t0.c0)))>((t0.c0))))))AND(((((((((COUNT(t0.c0))OR(COUNT(AVG(COUNT(*))))))OR(SUM(t0.c0))))OR(TOTAL(TOTAL(AVG(COUNT(t0.c0)))))))OR(GROUP_CONCAT(COUNT(t0.c0)))))))AND(SUM(t0.c0))))AND(SUM(SUM(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((((COUNT(*))AND((((GROUP_CONCAT(t0.c0)))>((t0.c0))))))AND(((((((((COUNT(t0.c0))OR(COUNT(AVG(COUNT(*))))))OR(SUM(t0.c0))))OR(TOTAL(TOTAL(AVG(COUNT(t0.c0)))))))OR(GROUP_CONCAT(COUNT(t0.c0)))))))AND(SUM(t0.c0))))AND(SUM(SUM(t0.c0))))) ISNULL);
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((((((t0.c0) NOT NULL))OR(t0.c0 COLLATE RTRIM)))AND(LIKE(vt1.c0, NULL)))) UNION ALL SELECT * FROM vt1, t0 WHERE ((NOT (((((((t0.c0) NOT NULL))OR(t0.c0 COLLATE RTRIM)))AND(LIKE(vt1.c0, NULL)))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE (((((((((t0.c0) NOT NULL))OR(t0.c0 COLLATE RTRIM)))AND(LIKE(vt1.c0, NULL)))) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 INDEXED BY i89 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt1.c0 END) BETWEEN ((- (vt0.c0))) AND (UPPER(vt0.c0)));
SELECT ALL t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1 FROM t0 INNER JOIN t1 ON (+ ((((vt1.c0))>((0.4562861367764003))))) LEFT OUTER JOIN vt1 ON ((((vt1.c1)OR(t0.c0)))OR(t1.c1)) COLLATE RTRIM GROUP BY t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1;
SELECT t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1 FROM t0 INNER JOIN t1 ON (+ ((((vt1.c0))>((0.4562861367764003))))) LEFT OUTER JOIN vt1 ON ((((vt1.c1)OR(t0.c0)))OR(t1.c1)) COLLATE RTRIM WHERE (LIKELY((t1.c0 IN ('xh&m+î­¡')))) GROUP BY t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1 UNION SELECT t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1 FROM t0 INNER JOIN t1 ON (+ ((((vt1.c0))>((0.4562861367764003))))) LEFT OUTER JOIN vt1 ON ((((vt1.c1)OR(t0.c0)))OR(t1.c1)) COLLATE RTRIM WHERE ((NOT (LIKELY((t1.c0 IN ('xh&m+î­¡')))))) GROUP BY t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1 UNION SELECT ALL t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1 FROM t0 INNER JOIN t1 ON (+ ((((vt1.c0))>((0.4562861367764003))))) LEFT OUTER JOIN vt1 ON ((((vt1.c1)OR(t0.c0)))OR(t1.c1)) COLLATE RTRIM WHERE (((LIKELY((t1.c0 IN ('xh&m+î­¡')))) ISNULL)) GROUP BY t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1;
SELECT ALL t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1 FROM t0 INNER JOIN t1 ON (+ ((((vt1.c0))>((0.4562861367764003))))) LEFT OUTER JOIN vt1 ON ((((vt1.c1)OR(t0.c0)))OR(t1.c1)) COLLATE RTRIM GROUP BY t0.c0, t1.c0, t1.c1, vt1.c0, vt1.c1;
SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN t1 ON CASE ((t1.c2) NOT NULL)  WHEN ((vt1.c1) NOT BETWEEN (0.689109311729612) AND (t1.c0)) THEN t1.c1 ELSE (+ (t1.c2)) END GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 LEFT OUTER JOIN t1 ON CASE ((t1.c2) NOT NULL)  WHEN ((vt1.c1) NOT BETWEEN (0.689109311729612) AND (t1.c0)) THEN t1.c1 ELSE (+ (t1.c2)) END GROUP BY vt1.c1 HAVING ((((vt1.c1)-(SUM(COUNT(*)))))<(COUNT(COUNT(GROUP_CONCAT(MAX(t1.c1)))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 LEFT OUTER JOIN t1 ON CASE ((t1.c2) NOT NULL)  WHEN ((vt1.c1) NOT BETWEEN (0.689109311729612) AND (t1.c0)) THEN t1.c1 ELSE (+ (t1.c2)) END GROUP BY vt1.c1 HAVING (NOT (((((vt1.c1)-(SUM(COUNT(*)))))<(COUNT(COUNT(GROUP_CONCAT(MAX(t1.c1)))))))) UNION ALL SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN t1 ON CASE ((t1.c2) NOT NULL)  WHEN ((vt1.c1) NOT BETWEEN (0.689109311729612) AND (t1.c0)) THEN t1.c1 ELSE (+ (t1.c2)) END GROUP BY vt1.c1 HAVING ((((((vt1.c1)-(SUM(COUNT(*)))))<(COUNT(COUNT(GROUP_CONCAT(MAX(t1.c1))))))) ISNULL);
SELECT ALL * FROM t0 CROSS JOIN t1 ON ((+ (t0.c0)) IN ());
SELECT ALL * FROM t0 CROSS JOIN t1 ON ((+ (t0.c0)) IN ()) WHERE ((((((t1.c1))<>((t1.c0)))) NOT BETWEEN ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))) AND ((NOT (t1.c2))))) UNION ALL SELECT * FROM t0 CROSS JOIN t1 ON ((+ (t0.c0)) IN ()) WHERE ((NOT ((((((t1.c1))!=((t1.c0)))) NOT BETWEEN ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))) AND ((NOT (t1.c2))))))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN t1 ON ((+ (t0.c0)) IN ()) WHERE ((((((((t1.c1))!=((t1.c0)))) NOT BETWEEN ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))) AND ((NOT (t1.c2))))) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN t1 ON ((+ (t0.c0)) IN ());
SELECT DISTINCT * FROM vt1, vt0, t0, t1;
SELECT DISTINCT * FROM vt1, vt0, t0, t1 WHERE ((NOT (t1.c1))) UNION SELECT DISTINCT * FROM vt1, vt0, t0, t1 WHERE ((NOT ((NOT (t1.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0, t1 WHERE ((((NOT (t1.c1))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0, t1;
SELECT ALL vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0 FROM vt0, t0, vt1, t1 GROUP BY vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0 FROM vt0, t0, vt1, t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN (~ (t1.c1)) THEN HEX(t0.c0) ELSE ((((t1.c0)OR(t1.c2)))AND(vt0.c0)) END) GROUP BY vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0 FROM vt0, t0, vt1, t1 WHERE ((NOT (CASE ((t1.c0) ISNULL)  WHEN (~ (t1.c1)) THEN HEX(t0.c0) ELSE ((((t1.c0)OR(t1.c2)))AND(vt0.c0)) END))) GROUP BY vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0 UNION SELECT vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0 FROM vt0, t0, vt1, t1 WHERE (((CASE ((t1.c0) ISNULL)  WHEN (~ (t1.c1)) THEN HEX(t0.c0) ELSE ((((t1.c0)OR(t1.c2)))AND(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0 FROM vt0, t0, vt1, t1 GROUP BY vt0.c0, vt1.c0, t1.c2, vt1.c1, t1.c1, t0.c0;
SELECT t1.c2, vt1.c1, vt1.c0, t1.c1, t0.c0, t1.c0 FROM t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (432100685)) GROUP BY t1.c2, vt1.c1, vt1.c0, t1.c1, t0.c0, t1.c0;
SELECT ALL t1.c2, vt1.c1, vt1.c0, t1.c1, t0.c0, t1.c0 FROM t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (432100685)) GROUP BY t1.c2, vt1.c1, vt1.c0, t1.c1, t0.c0, t1.c0 HAVING TOTAL((((t1.c1)) BETWEEN ((SUM(vt1.c1))) AND ((COUNT(*))))) UNION ALL SELECT ALL t1.c2, vt1.c1, vt1.c0, t1.c1, t0.c0, t1.c0 FROM t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (432100685)) GROUP BY t1.c2, vt1.c1, vt1.c0, t1.c1, t0.c0, t1.c0 HAVING (NOT (TOTAL((((t1.c1)) BETWEEN ((SUM(vt1.c1))) AND ((COUNT(*))))))) UNION ALL SELECT ALL t1.c2, vt1.c1, vt1.c0, t1.c1, t0.c0, t1.c0 FROM t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (432100685)) GROUP BY t1.c2, vt1.c1, vt1.c0, t1.c1, t0.c0, t1.c0 HAVING ((TOTAL((((t1.c1)) BETWEEN ((SUM(vt1.c1))) AND ((COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c1)OR(vt1.c1)), CAST(vt1.c0 AS INTEGER))) AND ((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)), x'', CAST(vt1.c1 AS NUMERIC))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c1)OR(vt1.c1)), CAST(vt1.c0 AS INTEGER))) AND ((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)), x'', CAST(vt1.c1 AS NUMERIC))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c1)OR(vt1.c1)), CAST(vt1.c0 AS INTEGER))) AND ((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)), x'', CAST(vt1.c1 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((('') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((('') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((('') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON 'o,()' GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON 'o,()' WHERE (RTRIM(((vt0.c0)||(vt0.c0)))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON 'o,()' WHERE ((NOT (RTRIM(((vt0.c0)||(vt0.c0)))))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON 'o,()' WHERE (((RTRIM(((vt0.c0)||(vt0.c0)))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON 'o,()' GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2;
SELECT t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2 HAVING COUNT(((((((((t1.c0)AND(GROUP_CONCAT(t1.c2))))OR(TOTAL(t1.c2))))OR(SUM(GROUP_CONCAT(TOTAL(AVG(COUNT(t1.c1))))))))AND(t1.c0))) UNION ALL SELECT ALL t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2 HAVING (NOT (COUNT(((((((((t1.c0)AND(GROUP_CONCAT(t1.c2))))OR(TOTAL(t1.c2))))OR(SUM(GROUP_CONCAT(TOTAL(AVG(COUNT(t1.c1))))))))AND(t1.c0))))) UNION ALL SELECT t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2 HAVING ((COUNT(((((((((t1.c0)AND(GROUP_CONCAT(t1.c2))))OR(TOTAL(t1.c2))))OR(SUM(GROUP_CONCAT(TOTAL(AVG(COUNT(t1.c1))))))))AND(t1.c0)))) ISNULL);
SELECT ALL * FROM vt1, t0;
SELECT * FROM vt1, t0 WHERE (CAST('' AS NUMERIC)) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (CAST('' AS NUMERIC)))) UNION ALL SELECT * FROM vt1, t0 WHERE (((CAST('' AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) IN ())) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) IN ())))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) IN ())) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c1 COLLATE BINARY)-(((vt1.c0)OR(vt1.c1))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c1 COLLATE BINARY)-(((vt1.c0)OR(vt1.c1))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c1 COLLATE BINARY)-(((vt1.c0)OR(vt1.c1))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON ((((((((((((vt1.c1)AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)) COLLATE BINARY GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON ((((((((((((vt1.c1)AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)) COLLATE BINARY GROUP BY t0.c0 HAVING CAST(LTRIM(MAX(0.11903047344055884), MIN(MAX(SUM(vt1.c1)))) AS REAL) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON ((((((((((((vt1.c1)AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)) COLLATE BINARY GROUP BY t0.c0 HAVING (NOT (CAST(LTRIM(MAX(0.11903047344055884), MIN(MAX(SUM(vt1.c1)))) AS REAL))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN vt1 ON ((((((((((((vt1.c1)AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt1.c1)) COLLATE BINARY GROUP BY t0.c0 HAVING ((CAST(LTRIM(MAX(0.11903047344055884), MIN(MAX(SUM(vt1.c1)))) AS REAL)) ISNULL);
SELECT ALL t1.c0, t1.c2 FROM vt0, t1, t0;
SELECT t1.c0, t1.c2 FROM vt0, t1, t0 WHERE (CASE WHEN (+ (t1.c1)) THEN (((t1.c1))=((t1.c0))) WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t0.c0 THEN t1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t1.c2 THEN t0.c0 ELSE vt0.c0 END WHEN (((t1.c1, t1.c2, vt0.c0)) NOT BETWEEN ((NULL, t1.c1, t0.c0)) AND ((t1.c1, t1.c1, t0.c0))) THEN ((((t0.c0)AND(t0.c0)))AND(t1.c2)) END) UNION ALL SELECT ALL t1.c0, t1.c2 FROM vt0, t1, t0 WHERE ((NOT (CASE WHEN (+ (t1.c1)) THEN (((t1.c1))=((t1.c0))) WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t0.c0 THEN t1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t1.c2 THEN t0.c0 ELSE vt0.c0 END WHEN (((t1.c1, t1.c2, vt0.c0)) NOT BETWEEN ((NULL, t1.c1, t0.c0)) AND ((t1.c1, t1.c1, t0.c0))) THEN ((((t0.c0)AND(t0.c0)))AND(t1.c2)) END))) UNION ALL SELECT t1.c0, t1.c2 FROM vt0, t1, t0 WHERE (((CASE WHEN (+ (t1.c1)) THEN (((t1.c1))=((t1.c0))) WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t0.c0 THEN t1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t1.c2 THEN t0.c0 ELSE vt0.c0 END WHEN (((t1.c1, t1.c2, vt0.c0)) NOT BETWEEN ((NULL, t1.c1, t0.c0)) AND ((t1.c1, t1.c1, t0.c0))) THEN ((((t0.c0)AND(t0.c0)))AND(t1.c2)) END) ISNULL));
SELECT ALL t1.c0, t1.c2 FROM vt0, t1, t0;
SELECT DISTINCT * FROM vt1, t1, vt0;
SELECT DISTINCT * FROM vt1, t1, vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) UNION SELECT DISTINCT * FROM vt1, t1, vt0 WHERE ((NOT ((((vt0.c0) NOT NULL) IN ())))) UNION SELECT DISTINCT * FROM vt1, t1, vt0 WHERE ((((((vt0.c0) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, t1, vt0;
SELECT t1.c2, vt0.c0, t1.c1, vt1.c1 FROM vt1, t0 CROSS JOIN vt0 ON (('1462509063')&(((t1.c1)&(t1.c1)))) LEFT OUTER JOIN t1 ON MAX(((((t1.c2)AND(vt1.c0)))OR(vt0.c0)), (((t1.c1))<>((NULL)))) GROUP BY t1.c2, vt0.c0, t1.c1, vt1.c1;
SELECT ALL t1.c2, vt0.c0, t1.c1, vt1.c1 FROM vt1, t0 CROSS JOIN vt0 ON (('1462509063')&(((t1.c1)&(t1.c1)))) LEFT OUTER JOIN t1 ON MAX(((((t1.c2)AND(vt1.c0)))OR(vt0.c0)), (((t1.c1))!=((NULL)))) WHERE (CASE (vt1.c0 IN ())  WHEN ((t0.c0)>=(vt0.c0)) THEN ((((t1.c2)AND(vt0.c0)))AND(vt0.c0)) WHEN (t1.c0 IN ()) THEN ((((((((((((-1.745127805E9)AND(vt1.c0)))AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))OR(t1.c2)))OR(vt1.c0)) WHEN ((t1.c0) BETWEEN (t1.c2) AND (t1.c1)) THEN ((t1.c0) IS TRUE) END) GROUP BY t1.c2, vt0.c0, t1.c1, vt1.c1 UNION SELECT t1.c2, vt0.c0, t1.c1, vt1.c1 FROM vt1, t0 CROSS JOIN vt0 ON (('1462509063')&(((t1.c1)&(t1.c1)))) LEFT OUTER JOIN t1 ON MAX(((((t1.c2)AND(vt1.c0)))OR(vt0.c0)), (((t1.c1))!=((NULL)))) WHERE ((NOT (CASE (vt1.c0 IN ())  WHEN ((t0.c0)>=(vt0.c0)) THEN ((((t1.c2)AND(vt0.c0)))AND(vt0.c0)) WHEN (t1.c0 IN ()) THEN ((((((((((((-1.745127805E9)AND(vt1.c0)))AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))OR(t1.c2)))OR(vt1.c0)) WHEN ((t1.c0) BETWEEN (t1.c2) AND (t1.c1)) THEN ((t1.c0) IS TRUE) END))) GROUP BY t1.c2, vt0.c0, t1.c1, vt1.c1 UNION SELECT ALL t1.c2, vt0.c0, t1.c1, vt1.c1 FROM vt1, t0 CROSS JOIN vt0 ON (('1462509063')&(((t1.c1)&(t1.c1)))) LEFT OUTER JOIN t1 ON MAX(((((t1.c2)AND(vt1.c0)))OR(vt0.c0)), (((t1.c1))!=((NULL)))) WHERE (((CASE (vt1.c0 IN ())  WHEN ((t0.c0)>=(vt0.c0)) THEN ((((t1.c2)AND(vt0.c0)))AND(vt0.c0)) WHEN (t1.c0 IN ()) THEN ((((((((((((-1.745127805E9)AND(vt1.c0)))AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))OR(t1.c2)))OR(vt1.c0)) WHEN ((t1.c0) BETWEEN (t1.c2) AND (t1.c1)) THEN ((t1.c0) IS TRUE) END) ISNULL)) GROUP BY t1.c2, vt0.c0, t1.c1, vt1.c1;
SELECT t1.c2, vt0.c0, t1.c1, vt1.c1 FROM vt1, t0 CROSS JOIN vt0 ON (('1462509063')&(((t1.c1)&(t1.c1)))) LEFT OUTER JOIN t1 ON MAX(((((t1.c2)AND(vt1.c0)))OR(vt0.c0)), (((t1.c1))<>((NULL)))) GROUP BY t1.c2, vt0.c0, t1.c1, vt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (MIN(MIN(t0.c0)))) AS REAL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (MIN(MIN(t0.c0)))) AS REAL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (MIN(MIN(t0.c0)))) AS REAL)) ISNULL);
SELECT t1.c1, vt0.c0, t1.c2 FROM t1, vt0;
SELECT ALL t1.c1, vt0.c0, t1.c2 FROM t1, vt0 WHERE ((((((t1.c2))<=((0.828620959093155))))||((((vt0.c0))>=((t1.c0)))))) UNION ALL SELECT ALL t1.c1, vt0.c0, t1.c2 FROM t1, vt0 WHERE ((NOT ((((((t1.c2))<=((0.828620959093155))))||((((vt0.c0))>=((t1.c0)))))))) UNION ALL SELECT ALL t1.c1, vt0.c0, t1.c2 FROM t1, vt0 WHERE ((((((((t1.c2))<=((0.828620959093155))))||((((vt0.c0))>=((t1.c0)))))) ISNULL));
SELECT t1.c1, vt0.c0, t1.c2 FROM t1, vt0;
SELECT DISTINCT * FROM vt1, t1;
SELECT DISTINCT * FROM vt1, t1 WHERE ((((CHANGES(), ((t1.c0)>>(t1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t1.c1 END))!=((CASE WHEN t1.c0 THEN t1.c1 WHEN x'' THEN t1.c0 WHEN t1.c2 THEN vt1.c1 END, ((vt1.c0)<(t1.c1)), ((vt1.c1)%(t1.c1)))))) UNION SELECT DISTINCT * FROM vt1, t1 WHERE ((NOT ((((CHANGES(), ((t1.c0)>>(t1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t1.c1 END))!=((CASE WHEN t1.c0 THEN t1.c1 WHEN x'' THEN t1.c0 WHEN t1.c2 THEN vt1.c1 END, ((vt1.c0)<(t1.c1)), ((vt1.c1)%(t1.c1)))))))) UNION SELECT DISTINCT * FROM vt1, t1 WHERE ((((((CHANGES(), ((t1.c0)>>(t1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t1.c1 END))!=((CASE WHEN t1.c0 THEN t1.c1 WHEN x'' THEN t1.c0 WHEN t1.c2 THEN vt1.c1 END, ((vt1.c0)<(t1.c1)), ((vt1.c1)%(t1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, t1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c1 END)+(x'6f39'))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c1 END)+(x'6f39'))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c1 END)+(x'6f39'))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (SUM(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (SUM(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0, t1, vt1;
SELECT * FROM t0, t1, vt1 WHERE (((CASE WHEN t1.c0 THEN vt1.c1 ELSE t1.c2 END) IS TRUE)) UNION ALL SELECT ALL * FROM t0, t1, vt1 WHERE ((NOT (((CASE WHEN t1.c0 THEN vt1.c1 ELSE t1.c2 END) IS TRUE)))) UNION ALL SELECT ALL * FROM t0, t1, vt1 WHERE (((((CASE WHEN t1.c0 THEN vt1.c1 ELSE t1.c2 END) IS TRUE)) ISNULL));
SELECT ALL * FROM t0, t1, vt1;
SELECT DISTINCT * FROM vt1 CROSS JOIN t0 ON (((t0.c0)) BETWEEN ((HEX(0.6147292215390842))) AND ((((t1.c1)IS(t1.c0))))) RIGHT OUTER JOIN t1 ON CASE vt1.c1 COLLATE BINARY  WHEN ((0.8344099264943154) IS TRUE) THEN LOWER(DISTINCT t1.c1) ELSE NULL END;
SELECT ALL vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM t0, vt0, vt1 WHERE ((((x'')) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) COLLATE BINARY) GROUP BY vt1.c0, vt0.c0, t0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM t0, vt0, vt1 WHERE ((NOT ((((x'')) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) COLLATE BINARY))) GROUP BY vt1.c0, vt0.c0, t0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM t0, vt0, vt1 WHERE ((((((x'')) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0, vt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TRIM(DISTINCT COUNT(COUNT(vt1.c1))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TRIM(DISTINCT COUNT(COUNT(vt1.c1))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TRIM(DISTINCT COUNT(COUNT(vt1.c1)))) ISNULL);
SELECT ALL * FROM t1, vt1;
SELECT ALL * FROM t1, vt1 WHERE (((ROUND(t1.c2, vt1.c0))LIKE(t1.c0))) UNION ALL SELECT * FROM t1, vt1 WHERE ((NOT (((ROUND(t1.c2, vt1.c0))LIKE(t1.c0))))) UNION ALL SELECT * FROM t1, vt1 WHERE (((((ROUND(t1.c2, vt1.c0))LIKE(t1.c0))) ISNULL));
SELECT ALL * FROM t1, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 NATURAL JOIN t0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 NATURAL JOIN t0 WHERE (((TYPEOF(DISTINCT vt1.c0)) NOTNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 NATURAL JOIN t0 WHERE ((NOT (((TYPEOF(DISTINCT vt1.c0)) NOTNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 NATURAL JOIN t0 WHERE (((((TYPEOF(DISTINCT vt1.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1 NATURAL JOIN t0;
SELECT ALL vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM t0 NOT INDEXED, vt1 WHERE (x'') GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM t0, vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM t0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, t0, t1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, t0, t1, vt0 GROUP BY vt1.c0, vt1.c1 HAVING GROUP_CONCAT(AVG(t1.c1)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1, t0, t1, vt0 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(AVG(t1.c1)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1, t0, t1, vt0 GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(AVG(t1.c1))) ISNULL);
SELECT ALL * FROM t0, t1, vt0, vt1;
SELECT ALL * FROM t0, t1, vt0, vt1 WHERE (CAST(CASE t1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) UNION ALL SELECT * FROM t0, t1, vt0, vt1 WHERE ((NOT (CAST(CASE t1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)))) UNION ALL SELECT ALL * FROM t0, t1, vt0, vt1 WHERE (((CAST(CASE t1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ISNULL));
SELECT ALL * FROM t0, t1, vt0, vt1;
SELECT DISTINCT t1.c2, t1.c0 FROM vt0, t0, vt1, t1;
SELECT DISTINCT t1.c2, t1.c0 FROM vt0, t0, vt1, t1 WHERE (0.6716136978778255) UNION SELECT DISTINCT t1.c2, t1.c0 FROM vt0, t0, vt1, t1 WHERE ((NOT (0.6716136978778255))) UNION SELECT DISTINCT t1.c2, t1.c0 FROM vt0, t0, vt1, t1 WHERE (((0.6716136978778255) ISNULL));
SELECT DISTINCT t1.c2, t1.c0 FROM vt0, t0, vt1, t1;
SELECT ALL t1.c2, t1.c0 FROM t1 GROUP BY t1.c2, t1.c0;
SELECT t1.c2, t1.c0 FROM t1 WHERE (0Xffffffffa90a99e7) GROUP BY t1.c2, t1.c0 UNION SELECT ALL t1.c2, t1.c0 FROM t1 WHERE ((NOT (0xffffffffa90a99e7))) GROUP BY t1.c2, t1.c0 UNION SELECT ALL t1.c2, t1.c0 FROM t1 WHERE (((0Xffffffffa90a99e7) ISNULL)) GROUP BY t1.c2, t1.c0;
SELECT ALL t1.c2, t1.c0 FROM t1 GROUP BY t1.c2, t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((((((((COUNT(*))OR(t0.c0)))AND(MIN(COUNT(*)))))AND(SUM(MIN(TOTAL(-2.076255633E9))))))OR(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((((((((COUNT(*))OR(t0.c0)))AND(MIN(COUNT(*)))))AND(SUM(MIN(TOTAL(-2.076255633E9))))))OR(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((((((((COUNT(*))OR(t0.c0)))AND(MIN(COUNT(*)))))AND(SUM(MIN(TOTAL(-2.076255633E9))))))OR(t0.c0)))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((-1.585716402E9)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((vt1.c1)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((-1.585716402E9)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((vt1.c1)))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((((-1.585716402E9)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((vt1.c1)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN DATETIME(t0.c0, t0.c0, 0.689109311729612) THEN ((t0.c0) NOTNULL) WHEN UNLIKELY(t0.c0) THEN 3.52991743E8 WHEN (((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)<=(t0.c0)) ELSE ((t0.c0)|(t0.c0)) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN DATETIME(t0.c0, t0.c0, 0.689109311729612) THEN ((t0.c0) NOTNULL) WHEN UNLIKELY(t0.c0) THEN 3.52991743E8 WHEN (((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)<=(t0.c0)) ELSE ((t0.c0)|(t0.c0)) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN DATETIME(t0.c0, t0.c0, 0.689109311729612) THEN ((t0.c0) NOTNULL) WHEN UNLIKELY(t0.c0) THEN 3.52991743E8 WHEN (((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)<=(t0.c0)) ELSE ((t0.c0)|(t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0;
SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0 HAVING (~ (((NULL) NOT BETWEEN (t1.c2) AND (TOTAL('1552643325'))))) UNION ALL SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0 HAVING (NOT ((~ (((NULL) NOT BETWEEN (t1.c2) AND (TOTAL('1552643325'))))))) UNION ALL SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0 HAVING (((~ (((NULL) NOT BETWEEN (t1.c2) AND (TOTAL('1552643325')))))) ISNULL);
SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0;
SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0 HAVING (~ (((NULL) NOT BETWEEN (t1.c2) AND (TOTAL('1552643325'))))) UNION ALL SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0 HAVING (NOT ((~ (((NULL) NOT BETWEEN (t1.c2) AND (TOTAL('1552643325'))))))) UNION ALL SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0 HAVING (((~ (((NULL) NOT BETWEEN (t1.c2) AND (TOTAL('1552643325')))))) ISNULL);
SELECT t1.c2, t0.c0, t1.c0 FROM t0, t1 GROUP BY t1.c2, t0.c0, t1.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)AND(vt0.c0)))) AND (('1wt<X{é½Ÿ')))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0)AND(vt0.c0)))) AND (('1wt<X{é½Ÿ')))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0)AND(vt0.c0)))) AND (('1wt<X{é½Ÿ')))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((((((((((((vt0.c0)OR(t1.c2)))OR(vt0.c0)))AND(t1.c1)))OR(t1.c2)))AND((~ (t1.c1)))))AND(((((t1.c2)AND(t0.c0)))OR('1812535558'))))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE ((NOT (((((((((((((vt0.c0)OR(t1.c2)))OR(vt0.c0)))AND(t1.c1)))OR(t1.c2)))AND((~ (t1.c1)))))AND(((((t1.c2)AND(t0.c0)))OR('1812535558'))))))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((((((((((((((vt0.c0)OR(t1.c2)))OR(vt0.c0)))AND(t1.c1)))OR(t1.c2)))AND((~ (t1.c1)))))AND(((((t1.c2)AND(t0.c0)))OR('1812535558'))))) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT t1.c2, vt1.c1, t1.c0 FROM t0 CROSS JOIN vt1 ON CASE LIKE(t1.c2, vt1.c0, '0')  WHEN (((-1.154981175E9, t1.c0, t0.c0))<((vt1.c0, t1.c1, vt1.c0))) THEN ((0.8499497123994874)<(vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END CROSS JOIN vt0 ON CAST((NOT (t1.c0)) AS INTEGER) CROSS JOIN t1 ON ((((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c1)))OR(t0.c0))) IS FALSE) GROUP BY t1.c2, vt1.c1, t1.c0;
SELECT t1.c2, vt1.c1, t1.c0 FROM t0 CROSS JOIN vt1 ON CASE LIKE(t1.c2, vt1.c0, '0')  WHEN (((-1.154981175E9, t1.c0, t0.c0))<((vt1.c0, t1.c1, vt1.c0))) THEN ((0.8499497123994874)<(vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END CROSS JOIN vt0 ON CAST((NOT (t1.c0)) AS INTEGER) CROSS JOIN t1 ON ((((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c1)))OR(t0.c0))) IS FALSE) WHERE (x'963a') GROUP BY t1.c2, vt1.c1, t1.c0 UNION SELECT t1.c2, vt1.c1, t1.c0 FROM t0 CROSS JOIN vt1 ON CASE LIKE(t1.c2, vt1.c0, '0')  WHEN (((-1.154981175E9, t1.c0, t0.c0))<((vt1.c0, t1.c1, vt1.c0))) THEN ((0.8499497123994874)<(vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END CROSS JOIN vt0 ON CAST((NOT (t1.c0)) AS INTEGER) CROSS JOIN t1 ON ((((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c1)))OR(t0.c0))) IS FALSE) WHERE ((NOT (x'963a'))) GROUP BY t1.c2, vt1.c1, t1.c0 UNION SELECT ALL t1.c2, vt1.c1, t1.c0 FROM t0 CROSS JOIN vt1 ON CASE LIKE(t1.c2, vt1.c0, '0')  WHEN (((-1.154981175E9, t1.c0, t0.c0))<((vt1.c0, t1.c1, vt1.c0))) THEN ((0.8499497123994874)<(vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END CROSS JOIN vt0 ON CAST((NOT (t1.c0)) AS INTEGER) CROSS JOIN t1 ON ((((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c1)))OR(t0.c0))) IS FALSE) WHERE (((x'963a') ISNULL)) GROUP BY t1.c2, vt1.c1, t1.c0;
SELECT t1.c2, vt1.c1, t1.c0 FROM t0 CROSS JOIN vt1 ON CASE LIKE(t1.c2, vt1.c0, '0')  WHEN (((-1.154981175E9, t1.c0, t0.c0))<((vt1.c0, t1.c1, vt1.c0))) THEN ((0.8499497123994874)<(vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END CROSS JOIN vt0 ON CAST((NOT (t1.c0)) AS INTEGER) CROSS JOIN t1 ON ((((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c1)))OR(t0.c0))) IS FALSE) GROUP BY t1.c2, vt1.c1, t1.c0;
SELECT ALL t0.c0, t1.c2, t1.c1 FROM t1, t0, vt1 FULL OUTER JOIN vt0 ON vt1.c0 GROUP BY t0.c0, t1.c2, t1.c1;
SELECT t0.c0, t1.c2, t1.c1 FROM t1, t0, vt1 FULL OUTER JOIN vt0 ON vt1.c0 GROUP BY t0.c0, t1.c2, t1.c1 HAVING (((SUM(GROUP_CONCAT(SUM(t0.c0))))) BETWEEN ((MIN(t1.c0))) AND ((((vt1.c1)IS NOT(MIN(t1.c1)))))) UNION ALL SELECT ALL t0.c0, t1.c2, t1.c1 FROM t1, t0, vt1 FULL OUTER JOIN vt0 ON vt1.c0 GROUP BY t0.c0, t1.c2, t1.c1 HAVING (NOT ((((SUM(GROUP_CONCAT(SUM(t0.c0))))) BETWEEN ((MIN(t1.c0))) AND ((((vt1.c1)IS NOT(MIN(t1.c1)))))))) UNION ALL SELECT t0.c0, t1.c2, t1.c1 FROM t1, t0, vt1 FULL OUTER JOIN vt0 ON vt1.c0 GROUP BY t0.c0, t1.c2, t1.c1 HAVING (((((SUM(GROUP_CONCAT(SUM(t0.c0))))) BETWEEN ((MIN(t1.c0))) AND ((((vt1.c1)IS NOT(MIN(t1.c1))))))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c1, vt1.c0, vt1.c1))>((vt1.c1, vt1.c1, vt1.c1)))) BETWEEN (('1}_,b/K' IN (vt1.c1))) AND (((-198505820) BETWEEN (vt1.c1) AND (vt1.c1))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c1, vt1.c0, vt1.c1))>((vt1.c1, vt1.c1, vt1.c1)))) BETWEEN (('1}_,b/K' IN (vt1.c1))) AND (((-198505820) BETWEEN (vt1.c1) AND (vt1.c1))))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((vt1.c1, vt1.c0, vt1.c1))>((vt1.c1, vt1.c1, vt1.c1)))) BETWEEN (('1}_,b/K' IN (vt1.c1))) AND (((-198505820) BETWEEN (vt1.c1) AND (vt1.c1))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN CASE WHEN t1.c2 THEN t1.c2 END THEN ((t1.c1)LIKE(t1.c1)) WHEN CASE WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END THEN ((t1.c0)>=(t1.c2)) WHEN ((t1.c1) IS TRUE) THEN COALESCE(t1.c1, t1.c2) WHEN 0.7092157591880001 THEN t1.c0 WHEN ((t1.c1)OR(t1.c2)) THEN ((t1.c2)%(t1.c2)) END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE WHEN CASE WHEN t1.c2 THEN t1.c2 END THEN ((t1.c1)LIKE(t1.c1)) WHEN CASE WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END THEN ((t1.c0)>=(t1.c2)) WHEN ((t1.c1) IS TRUE) THEN COALESCE(t1.c1, t1.c2) WHEN 0.7092157591880001 THEN t1.c0 WHEN ((t1.c1)OR(t1.c2)) THEN ((t1.c2)%(t1.c2)) END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN CASE WHEN t1.c2 THEN t1.c2 END THEN ((t1.c1)LIKE(t1.c1)) WHEN CASE WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END THEN ((t1.c0)>=(t1.c2)) WHEN ((t1.c1) IS TRUE) THEN COALESCE(t1.c1, t1.c2) WHEN 0.7092157591880001 THEN t1.c0 WHEN ((t1.c1)OR(t1.c2)) THEN ((t1.c2)%(t1.c2)) END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt1.c0 FROM vt1, t0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS TRUE))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS TRUE))) WHERE (CASE WHEN CASE WHEN t0.c0 THEN t1.c2 END THEN ((t1.c2)LIKE(t0.c0)) WHEN (t1.c0 IN ()) THEN vt1.c0 WHEN ((t1.c0) NOTNULL) THEN ((t1.c0)|(t1.c0)) ELSE (((vt1.c0))<((vt1.c1))) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS TRUE))) WHERE ((NOT (CASE WHEN CASE WHEN t0.c0 THEN t1.c2 END THEN ((t1.c2)LIKE(t0.c0)) WHEN (t1.c0 IN ()) THEN vt1.c0 WHEN ((t1.c0) NOTNULL) THEN ((t1.c0)|(t1.c0)) ELSE (((vt1.c0))<((vt1.c1))) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED, t0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS TRUE))) WHERE (((CASE WHEN CASE WHEN t0.c0 THEN t1.c2 END THEN ((t1.c2)LIKE(t0.c0)) WHEN (t1.c0 IN ()) THEN vt1.c0 WHEN ((t1.c0) NOTNULL) THEN ((t1.c0)|(t1.c0)) ELSE (((vt1.c0))<((vt1.c1))) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS TRUE))) GROUP BY vt1.c0;
SELECT vt1.c1 FROM vt1, t0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, t0 GROUP BY vt1.c1 HAVING (((((vt1.c1))<=((SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))))!=(((TOTAL(TOTAL(x''))) NOT BETWEEN (t0.c0) AND (vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM vt1, t0 GROUP BY vt1.c1 HAVING (NOT ((((((vt1.c1))<=((SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))))<>(((TOTAL(TOTAL(x''))) NOT BETWEEN (t0.c0) AND (vt1.c1)))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, t0 GROUP BY vt1.c1 HAVING (((((((vt1.c1))<=((SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))))!=(((TOTAL(TOTAL(x''))) NOT BETWEEN (t0.c0) AND (vt1.c1))))) ISNULL);
SELECT ALL vt1.c0, t1.c1, t1.c0, t0.c0 FROM t1 FULL OUTER JOIN vt1 ON ((((((vt0.c0)OR(t1.c2)))OR(t0.c0))) ISNULL) LEFT OUTER JOIN vt0 ON ((((t0.c0)IS(t1.c2)))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE t1.c2 END)) FULL OUTER JOIN t0 ON ((vt1.c1)<=(t0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON (0xfffffffff4a6c778 IN ()) RIGHT OUTER JOIN vt1 ON ((((((((x'566f')OR(CAST(t0.c0 AS TEXT))))OR(((t1.c2)GLOB(vt1.c1)))))OR(vt0.c0)))OR(t1.c2 COLLATE NOCASE));
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON (0xfffffffff4a6c778 IN ()) RIGHT OUTER JOIN vt1 ON ((((((((x'566f')OR(CAST(t0.c0 AS TEXT))))OR(((t1.c2)GLOB(vt1.c1)))))OR(vt0.c0)))OR(t1.c2 COLLATE NOCASE)) WHERE (vt1.c0) UNION SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON (0Xfffffffff4a6c778 IN ()) RIGHT OUTER JOIN vt1 ON ((((((((x'566f')OR(CAST(t0.c0 AS TEXT))))OR(((t1.c2)GLOB(vt1.c1)))))OR(vt0.c0)))OR(t1.c2 COLLATE NOCASE)) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON (0Xfffffffff4a6c778 IN ()) RIGHT OUTER JOIN vt1 ON ((((((((x'566f')OR(CAST(t0.c0 AS TEXT))))OR(((t1.c2)GLOB(vt1.c1)))))OR(vt0.c0)))OR(t1.c2 COLLATE NOCASE)) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON (0xfffffffff4a6c778 IN ()) RIGHT OUTER JOIN vt1 ON ((((((((x'566f')OR(CAST(t0.c0 AS TEXT))))OR(((t1.c2)GLOB(vt1.c1)))))OR(vt0.c0)))OR(t1.c2 COLLATE NOCASE));
SELECT ALL t1.c0, t1.c2 FROM t0, t1, vt0, vt1 GROUP BY t1.c0, t1.c2;
SELECT ALL t1.c0, t1.c2 FROM t0, t1, vt0, vt1 WHERE (((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL)) GROUP BY t1.c0, t1.c2 UNION SELECT ALL t1.c0, t1.c2 FROM t0, t1, vt0, vt1 WHERE ((NOT (((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL)))) GROUP BY t1.c0, t1.c2 UNION SELECT t1.c0, t1.c2 FROM t0, t1, vt0, vt1 WHERE (((((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL)) ISNULL)) GROUP BY t1.c0, t1.c2;
SELECT ALL t1.c0, t1.c2 FROM t0, t1, vt0, vt1 GROUP BY t1.c0, t1.c2;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING CASE WHEN ((vt1.c0) IS TRUE) THEN SUM(COUNT(vt0.c0)) END UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (CASE WHEN ((vt1.c0) IS TRUE) THEN SUM(COUNT(vt0.c0)) END)) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((CASE WHEN ((vt1.c0) IS TRUE) THEN SUM(COUNT(vt0.c0)) END) ISNULL);
SELECT * FROM vt0, t0, t1, vt1;
SELECT ALL * FROM vt0, t0, t1, vt1 WHERE (((t1.c2)==(vt1.c1)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, t0, t1, vt1 WHERE ((NOT (((t1.c2)=(vt1.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, t0, t1, vt1 WHERE (((((t1.c2)==(vt1.c1)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, t0, t1, vt1;
SELECT DISTINCT * FROM t0, t1, vt1, vt0;
SELECT DISTINCT * FROM t0, t1, vt1, vt0 WHERE (CAST(((t1.c2)!=(t1.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM t0, t1, vt1, vt0 WHERE ((NOT (CAST(((t1.c2)<>(t1.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, t1, vt1, vt0 WHERE (((CAST(((t1.c2)<>(t1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt1, vt0;
SELECT ALL t0.c0 FROM vt0, t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (vt1.c0 COLLATE RTRIM)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (vt1.c0 COLLATE RTRIM)) WHERE (((((-740610204) NOTNULL))<(((((t1.c0)AND(NULL)))AND(t1.c2))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (vt1.c0 COLLATE RTRIM)) WHERE ((NOT (((((-740610204) NOTNULL))<(((((t1.c0)AND(NULL)))AND(t1.c2))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (vt1.c0 COLLATE RTRIM)) WHERE (((((((-740610204) NOTNULL))<(((((t1.c0)AND(NULL)))AND(t1.c2))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t1, t0 RIGHT OUTER JOIN vt1 ON (NOT (vt1.c0 COLLATE RTRIM)) GROUP BY t0.c0;
SELECT t1.c2 FROM t1 GROUP BY t1.c2;
SELECT ALL t1.c2 FROM t1 GROUP BY t1.c2 HAVING TOTAL(COUNT(*)) UNION ALL SELECT t1.c2 FROM t1 GROUP BY t1.c2 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL t1.c2 FROM t1 GROUP BY t1.c2 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((0.054593362878640805) ISNULL) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c0 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c1 ELSE t1.c0 END COLLATE BINARY LEFT OUTER JOIN t1 ON (((vt1.c0)OR(t1.c0)) IN ());
SELECT DISTINCT vt1.c1, t1.c2, vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE ((vt1.c0) NOTNULL)  WHEN CASE WHEN t1.c0 THEN t1.c2 END THEN LIKELY(DISTINCT t1.c0) END LEFT OUTER JOIN t1 ON SQLITE_COMPILEOPTION_USED((vt1.c0 IN ()));
SELECT ALL t1.c2 FROM t1, vt1 GROUP BY t1.c2;
SELECT t1.c2 FROM t1, vt1 WHERE (ABS(DISTINCT QUOTE(t1.c2))) GROUP BY t1.c2 UNION SELECT ALL t1.c2 FROM t1, vt1 WHERE ((NOT (ABS(DISTINCT QUOTE(t1.c2))))) GROUP BY t1.c2 UNION SELECT t1.c2 FROM t1, vt1 WHERE (((ABS(DISTINCT QUOTE(t1.c2))) ISNULL)) GROUP BY t1.c2;
SELECT ALL t1.c2 FROM t1, vt1 GROUP BY t1.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((NULL)*(SUM(MAX(AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((NULL)*(SUM(MAX(AVG(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((NULL)*(SUM(MAX(AVG(t0.c0))))))) ISNULL);
SELECT ALL TOTAL((((~ (t1.c1)))<=(((t1.c2) IS FALSE)))) FROM vt0, t1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (LOWER(DISTINCT vt1.c1)) AND (vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (LOWER(DISTINCT vt1.c1)) AND (vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (LOWER(DISTINCT vt1.c1)) AND (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE ((((- (t1.c0))) IS TRUE)) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT ((((- (t1.c0))) IS TRUE)))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((((((- (t1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT ALL t1.c2, t1.c1, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c1)AND(t0.c0)))AND(vt1.c1)))IS((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c1))))) FULL OUTER JOIN vt0 ON ((((vt1.c0)*(t1.c0)))>>(((vt1.c1)||(vt0.c0)))) RIGHT OUTER JOIN t1 ON 0xffffffff8154953b GROUP BY t1.c2, t1.c1, t0.c0;
SELECT t1.c1, t1.c0 FROM t1 GROUP BY t1.c1, t1.c0;
SELECT t1.c1, t1.c0 FROM t1 GROUP BY t1.c1, t1.c0 HAVING SUM((((t1.c2, t1.c2, 0.6098999270458398)) BETWEEN ((t1.c2, MIN(COUNT(COUNT(1301892556))), t1.c2)) AND ((-235593061, t1.c0, t1.c2)))) UNION ALL SELECT t1.c1, t1.c0 FROM t1 GROUP BY t1.c1, t1.c0 HAVING (NOT (SUM((((t1.c2, t1.c2, 0.6098999270458398)) BETWEEN ((t1.c2, MIN(COUNT(COUNT(1301892556))), t1.c2)) AND ((-235593061, t1.c0, t1.c2)))))) UNION ALL SELECT ALL t1.c1, t1.c0 FROM t1 GROUP BY t1.c1, t1.c0 HAVING ((SUM((((t1.c2, t1.c2, 0.6098999270458398)) BETWEEN ((t1.c2, MIN(COUNT(COUNT(1301892556))), t1.c2)) AND ((-235593061, t1.c0, t1.c2))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((QUOTE(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((QUOTE(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((QUOTE(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t1, vt1 INDEXED BY i89;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN NULL THEN t1.c2 ELSE t1.c0 END THEN CASE WHEN t1.c0 THEN x'' ELSE t1.c1 END WHEN ((((t1.c2)OR(t1.c2)))OR(t1.c1)) THEN 280328529 WHEN t1.c2 THEN (~ (t1.c1)) WHEN ((t1.c1) IS FALSE) THEN ((t1.c0)%(t1.c1)) WHEN ((t1.c0)>=(t1.c2)) THEN 0.09228982965718346 ELSE (t1.c0 IN ()) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CASE WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN NULL THEN t1.c2 ELSE t1.c0 END THEN CASE WHEN t1.c0 THEN x'' ELSE t1.c1 END WHEN ((((t1.c2)OR(t1.c2)))OR(t1.c1)) THEN 280328529 WHEN t1.c2 THEN (~ (t1.c1)) WHEN ((t1.c1) IS FALSE) THEN ((t1.c0)%(t1.c1)) WHEN ((t1.c0)>=(t1.c2)) THEN 0.09228982965718346 ELSE (t1.c0 IN ()) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CASE WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN NULL THEN t1.c2 ELSE t1.c0 END THEN CASE WHEN t1.c0 THEN x'' ELSE t1.c1 END WHEN ((((t1.c2)OR(t1.c2)))OR(t1.c1)) THEN 280328529 WHEN t1.c2 THEN (~ (t1.c1)) WHEN ((t1.c1) IS FALSE) THEN ((t1.c0)%(t1.c1)) WHEN ((t1.c0)>=(t1.c2)) THEN 0.09228982965718346 ELSE (t1.c0 IN ()) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt1, vt0, t1;
SELECT * FROM vt1, vt0, t1 WHERE (((CAST(vt0.c0 AS INTEGER))>(vt1.c0))) ORDER BY CAST('1238435428' AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t1 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))>(vt1.c0))))) ORDER BY CAST('1238435428' AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t1 WHERE (((((CAST(vt0.c0 AS INTEGER))>(vt1.c0))) ISNULL)) ORDER BY CAST('1238435428' AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)IS NOT(vt1.c1)) THEN ((vt1.c1)>(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE WHEN ((vt1.c0)IS NOT(vt1.c1)) THEN ((vt1.c1)>(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN ((vt1.c0)IS NOT(vt1.c1)) THEN ((vt1.c1)>(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (0.6040151482091171) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (0.6040151482091171))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((0.6040151482091171) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, t1.c0, t0.c0, t1.c1, t1.c2 FROM vt0, t1, vt1, t0 GROUP BY vt0.c0, vt1.c1, vt1.c0, t1.c0, t0.c0, t1.c1, t1.c2;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, t1.c0, t0.c0, t1.c1, t1.c2 FROM vt0, t1, vt1, t0 GROUP BY vt0.c0, vt1.c1, vt1.c0, t1.c0, t0.c0, t1.c1, t1.c2 HAVING MIN(MIN(COUNT(AVG(t1.c0)))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0, t1.c0, t0.c0, t1.c1, t1.c2 FROM vt0, t1, vt1, t0 GROUP BY vt0.c0, vt1.c1, vt1.c0, t1.c0, t0.c0, t1.c1, t1.c2 HAVING (NOT (MIN(MIN(COUNT(AVG(t1.c0)))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0, t1.c0, t0.c0, t1.c1, t1.c2 FROM vt0, t1, vt1, t0 GROUP BY vt0.c0, vt1.c1, vt1.c0, t1.c0, t0.c0, t1.c1, t1.c2 HAVING ((MIN(MIN(COUNT(AVG(t1.c0))))) ISNULL);
SELECT t1.c0 FROM vt0, vt1, t1;
SELECT t1.c0 FROM vt0, vt1, t1 WHERE ((((vt1.c0 IN ()))LIKE((- (t1.c0))))) UNION ALL SELECT t1.c0 FROM vt0, vt1, t1 WHERE ((NOT ((((vt1.c0 IN ()))LIKE((- (t1.c0))))))) UNION ALL SELECT t1.c0 FROM vt0, vt1, t1 NOT INDEXED WHERE ((((((vt1.c0 IN ()))LIKE((- (t1.c0))))) ISNULL));
SELECT t1.c0 FROM vt0, vt1, t1;
SELECT DISTINCT t1.c2, t1.c0 FROM t1;
SELECT DISTINCT t1.c2, t1.c0 FROM t1 WHERE ((t1.c1 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT t1.c2, t1.c0 FROM t1 WHERE ((NOT ((t1.c1 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c2, t1.c0 FROM t1 WHERE ((((t1.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c2, t1.c0 FROM t1;
SELECT ALL t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2;
SELECT t1.c1, t1.c2 FROM t1 WHERE (highlight(CASE WHEN t1.c2 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END, t1.c2, t1.c0, t1.c0)) GROUP BY t1.c1, t1.c2 UNION SELECT ALL t1.c1, t1.c2 FROM t1 WHERE ((NOT (highlight(CASE WHEN t1.c2 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END, t1.c2, t1.c0, t1.c0)))) GROUP BY t1.c1, t1.c2 UNION SELECT ALL t1.c1, t1.c2 FROM t1 WHERE (((highlight(CASE WHEN t1.c2 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END, t1.c2, t1.c0, t1.c0)) ISNULL)) GROUP BY t1.c1, t1.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(vt0.c0)))>=((COALESCE(vt0.c0, '-504618109')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((MAX(vt0.c0)))>=((COALESCE(vt0.c0, '-504618109')))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((MAX(vt0.c0)))>=((COALESCE(vt0.c0, '-504618109'))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(vt0.c0)))>=((COALESCE(vt0.c0, '-504618109')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((MAX(vt0.c0)))>=((COALESCE(vt0.c0, '-504618109')))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((MAX(vt0.c0)))>=((COALESCE(vt0.c0, '-504618109'))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t1 INNER JOIN vt0 ON (~ (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON (~ (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE ((((-3.53597992E8, t1.c2, CASE WHEN t1.c0 THEN t1.c1 END))>=((CAST('2070488853' AS INTEGER), t1.c2 COLLATE BINARY, ((vt0.c0) BETWEEN (t1.c1) AND (vt0.c0)))))) UNION ALL SELECT * FROM t1 INNER JOIN vt0 ON (~ (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE ((NOT ((((-3.53597992E8, t1.c2, CASE WHEN t1.c0 THEN t1.c1 END))>=((CAST('2070488853' AS INTEGER), t1.c2 COLLATE BINARY, ((vt0.c0) BETWEEN (t1.c1) AND (vt0.c0)))))))) UNION ALL SELECT * FROM t1 INNER JOIN vt0 ON (~ (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE ((((((-3.53597992E8, t1.c2, CASE WHEN t1.c0 THEN t1.c1 END))>=((CAST('2070488853' AS INTEGER), t1.c2 COLLATE BINARY, ((vt0.c0) BETWEEN (t1.c1) AND (vt0.c0)))))) ISNULL));
SELECT * FROM t1 INNER JOIN vt0 ON (~ (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE (- (NULL))  WHEN ((t0.c0) NOT NULL) THEN ((((NULL)AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) IS TRUE) THEN CAST(t0.c0 AS NUMERIC) WHEN HEX(DISTINCT t0.c0) THEN NULLIF(t0.c0, t0.c0) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE (- (NULL))  WHEN ((t0.c0) NOT NULL) THEN ((((NULL)AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) IS TRUE) THEN CAST(t0.c0 AS NUMERIC) WHEN HEX(DISTINCT t0.c0) THEN NULLIF(t0.c0, t0.c0) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE (- (NULL))  WHEN ((t0.c0) NOT NULL) THEN ((((NULL)AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) IS TRUE) THEN CAST(t0.c0 AS NUMERIC) WHEN HEX(DISTINCT t0.c0) THEN NULLIF(t0.c0, t0.c0) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)==(((vt0.c0)+(vt1.c1))))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((NOT (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)==(((vt0.c0)+(vt1.c1))))))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)==(((vt0.c0)+(vt1.c1))))) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t1, vt0, vt1, t0;
SELECT ALL * FROM t1, vt0, vt1, t0 WHERE ((((vt1.c1))<>(((((vt1.c1)) NOT BETWEEN ((t1.c0)) AND ((NULL))))))) UNION ALL SELECT ALL * FROM t1, vt0, vt1, t0 WHERE ((NOT ((((vt1.c1))<>(((((vt1.c1)) NOT BETWEEN ((t1.c0)) AND ((NULL))))))))) UNION ALL SELECT * FROM t1, vt0, vt1, t0 WHERE ((((((vt1.c1))!=(((((vt1.c1)) NOT BETWEEN ((t1.c0)) AND ((NULL))))))) ISNULL));
SELECT ALL * FROM t1, vt0, vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((NULL IN ())))=(((~ (vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((NULL IN ())))=(((~ (vt1.c1)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((NULL IN ())))==(((~ (vt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t1.c2, t1.c1 FROM t1, vt1 GROUP BY t1.c2, t1.c1;
SELECT ALL t1.c2, t1.c1 FROM t1, vt1 WHERE ((NOT ((+ (t1.c1))))) GROUP BY t1.c2, t1.c1 UNION SELECT ALL t1.c2, t1.c1 FROM t1, vt1 WHERE ((NOT ((NOT ((+ (t1.c1))))))) GROUP BY t1.c2, t1.c1 UNION SELECT ALL t1.c2, t1.c1 FROM t1, vt1 WHERE ((((NOT ((+ (t1.c1))))) ISNULL)) GROUP BY t1.c2, t1.c1;
SELECT ALL t1.c2, t1.c1 FROM t1, vt1 GROUP BY t1.c2, t1.c1;
SELECT ALL vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1;
SELECT vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1 HAVING '243013053' UNION ALL SELECT vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1 HAVING (NOT ('243013053')) UNION ALL SELECT vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1 HAVING (('243013053') ISNULL);
SELECT ALL vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1;
SELECT vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1 HAVING '243013053' UNION ALL SELECT vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1 HAVING (NOT ('243013053')) UNION ALL SELECT vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1 HAVING (('243013053') ISNULL);
SELECT ALL vt1.c0, t1.c2, t1.c0, vt1.c1 FROM t1 INNER JOIN vt1 ON CASE (vt1.c0 IN (t1.c1))  WHEN ((vt1.c1)IS(t1.c2)) THEN CAST(t1.c2 AS INTEGER) END GROUP BY vt1.c0, t1.c2, t1.c0, vt1.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CHAR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR('724330269')))OR(vt0.c0)))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CHAR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR('724330269')))OR(vt0.c0)))AND(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CHAR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR('724330269')))OR(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (('' COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (('' COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE (((('' COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (((GROUP_CONCAT(t0.c0))) BETWEEN ((COUNT(vt0.c0))) AND ((((((((((((((vt0.c0)OR(MAX(COUNT(GROUP_CONCAT(MAX(t0.c0)))))))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(COUNT(*)))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT ((((GROUP_CONCAT(t0.c0))) BETWEEN ((COUNT(vt0.c0))) AND ((((((((((((((vt0.c0)OR(MAX(COUNT(GROUP_CONCAT(MAX(t0.c0)))))))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(COUNT(*)))))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 NOT INDEXED GROUP BY t0.c0 HAVING (((((GROUP_CONCAT(t0.c0))) BETWEEN ((COUNT(vt0.c0))) AND ((((((((((((((vt0.c0)OR(MAX(COUNT(GROUP_CONCAT(MAX(t0.c0)))))))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(COUNT(*))))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((- (t0.c0))) NOTNULL)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c0))) NOTNULL)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((- (t0.c0))) NOTNULL)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, t1, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM t0, t1, vt0 NATURAL JOIN vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM t0, t1, vt0 NATURAL JOIN vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM t0, t1, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0 NATURAL JOIN vt1;
SELECT ALL t0.c0 FROM vt1, t0, t1, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0, t1, vt0 WHERE (((NULL)=(vt1.c1)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0, t1, vt0 WHERE ((NOT (((NULL)==(vt1.c1)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0, t1, vt0 WHERE (((((NULL)=(vt1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0, t1, vt0 GROUP BY t0.c0;
SELECT vt1.c1, t1.c0, t0.c0, vt1.c0 FROM t0, t1, vt1 GROUP BY vt1.c1, t1.c0, t0.c0, vt1.c0;
SELECT ALL vt1.c1, t1.c0, t0.c0, vt1.c0 FROM t0, t1, vt1 GROUP BY vt1.c1, t1.c0, t0.c0, vt1.c0 HAVING LIKELIHOOD((((AVG(GROUP_CONCAT(COUNT(TOTAL(vt1.c1)))))) BETWEEN ((vt1.c0)) AND ((vt1.c1))), 0.17228556984863141) UNION ALL SELECT vt1.c1, t1.c0, t0.c0, vt1.c0 FROM t0 NOT INDEXED, t1, vt1 GROUP BY vt1.c1, t1.c0, t0.c0, vt1.c0 HAVING (NOT (LIKELIHOOD((((AVG(GROUP_CONCAT(COUNT(TOTAL(vt1.c1)))))) BETWEEN ((vt1.c0)) AND ((vt1.c1))), 0.17228556984863141))) UNION ALL SELECT ALL vt1.c1, t1.c0, t0.c0, vt1.c0 FROM t0 NOT INDEXED, t1, vt1 GROUP BY vt1.c1, t1.c0, t0.c0, vt1.c0 HAVING ((LIKELIHOOD((((AVG(GROUP_CONCAT(COUNT(TOTAL(vt1.c1)))))) BETWEEN ((vt1.c0)) AND ((vt1.c1))), 0.17228556984863141)) ISNULL);
SELECT SUM(vt1.c1) FROM vt0, vt1, t1, t0 ORDER BY (((t1.c0, vt1.c1, NULL)) BETWEEN ((vt1.c1 COLLATE BINARY, (vt1.c0 IN ()), t1.c2 COLLATE RTRIM)) AND ((vt0.c0 COLLATE RTRIM, ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)), json_object(t1.c1, vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt1, t0, vt0;
SELECT ALL * FROM t1, vt1, t0, vt0 WHERE ((t1.c1 IN ())) UNION ALL SELECT ALL * FROM t1, vt1, t0, vt0 WHERE ((NOT ((t1.c1 IN ())))) UNION ALL SELECT * FROM t1, vt1, t0, vt0 WHERE ((((t1.c1 IN ())) ISNULL));
SELECT ALL * FROM t1, vt1, t0, vt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 INDEXED BY i15;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ('') GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((NOT (''))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0 WHERE ((('') ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1;
SELECT t1.c0, vt1.c0, t1.c1, vt1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING CASE (MIN(COUNT(vt1.c1)) IN (t1.c1))  WHEN MAX(MIN(vt1.c1)) THEN (NOT (MIN(t1.c2))) WHEN ((GROUP_CONCAT(vt1.c1)) ISNULL) THEN MIN(AVG(t1.c1), t1.c2) WHEN TOTAL(vt1.c0) THEN SUM(TOTAL(MIN(vt1.c0))) END UNION ALL SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING (NOT (CASE (MIN(COUNT(vt1.c1)) IN (t1.c1))  WHEN MAX(MIN(vt1.c1)) THEN (NOT (MIN(t1.c2))) WHEN ((GROUP_CONCAT(vt1.c1)) ISNULL) THEN MIN(AVG(t1.c1), t1.c2) WHEN TOTAL(vt1.c0) THEN SUM(TOTAL(MIN(vt1.c0))) END)) UNION ALL SELECT t1.c0, vt1.c0, t1.c1, vt1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING ((CASE (MIN(COUNT(vt1.c1)) IN (t1.c1))  WHEN MAX(MIN(vt1.c1)) THEN (NOT (MIN(t1.c2))) WHEN ((GROUP_CONCAT(vt1.c1)) ISNULL) THEN MIN(AVG(t1.c1), t1.c2) WHEN TOTAL(vt1.c0) THEN SUM(TOTAL(MIN(vt1.c0))) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((json_remove(-1657432455, vt0.c0, 'LLWz', vt0.c0)) BETWEEN ((NOT ('-1e500'))) AND (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((json_remove(-1657432455, vt0.c0, 'LLWz', vt0.c0)) BETWEEN ((NOT ('-1e500'))) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE (((((json_remove(-1657432455, vt0.c0, 'LLWz', vt0.c0)) BETWEEN ((NOT ('-1e500'))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT t1.c2, t1.c0 FROM t0, vt0, t1;
SELECT DISTINCT t1.c2, t1.c0 FROM t0, vt0, t1 WHERE ((t0.c0 COLLATE RTRIM IN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((t1.c1)|(t0.c0))))) UNION SELECT DISTINCT t1.c2, t1.c0 FROM t0, vt0, t1 WHERE ((NOT ((t0.c0 COLLATE RTRIM IN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((t1.c1)|(t0.c0))))))) UNION SELECT DISTINCT t1.c2, t1.c0 FROM t0, vt0, t1 WHERE ((((t0.c0 COLLATE RTRIM IN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((t1.c1)|(t0.c0))))) ISNULL));
SELECT DISTINCT t1.c2, t1.c0 FROM t0, vt0, t1;
SELECT ALL t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON (('nd<3''a2t') IS FALSE) GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1;
SELECT t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON (('nd<3''a2t') IS FALSE) WHERE (CASE vt1.c1  WHEN vt1.c0 THEN t1.c1 END COLLATE RTRIM) GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1 UNION SELECT ALL t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON (('nd<3''a2t') IS FALSE) WHERE ((NOT (CASE vt1.c1  WHEN vt1.c0 THEN t1.c1 END COLLATE RTRIM))) GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1 UNION SELECT ALL t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON (('nd<3''a2t') IS FALSE) WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN t1.c1 END COLLATE RTRIM) ISNULL)) GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1;
SELECT ALL t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON (('nd<3''a2t') IS FALSE) GROUP BY t1.c1, vt1.c0, t1.c0, t1.c2, vt1.c1;
SELECT ALL t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0 HAVING SUM(t1.c1) UNION ALL SELECT ALL t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0 HAVING (NOT (SUM(t1.c1))) UNION ALL SELECT t0.c0 FROM t0, t1 NOT INDEXED FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0 HAVING ((SUM(t1.c1)) ISNULL);
SELECT ALL t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0 HAVING SUM(t1.c1) UNION ALL SELECT ALL t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0 HAVING (NOT (SUM(t1.c1))) UNION ALL SELECT t0.c0 FROM t0, t1 NOT INDEXED FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0 HAVING ((SUM(t1.c1)) ISNULL);
SELECT ALL t0.c0 FROM t0, t1 FULL OUTER JOIN vt0 ON (('')>>((~ (vt0.c0)))) GROUP BY t0.c0;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c1 COLLATE NOCASE AS TEXT) CROSS JOIN t1 ON (- (((t1.c2)>=(t1.c1))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c1 COLLATE NOCASE AS TEXT) CROSS JOIN t1 ON (- (((t1.c2)>=(t1.c1)))) WHERE (((CAST(vt1.c0 AS REAL))=(((t1.c2) NOT BETWEEN (t1.c0) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c1 COLLATE NOCASE AS TEXT) CROSS JOIN t1 ON (- (((t1.c2)>=(t1.c1)))) WHERE ((NOT (((CAST(vt1.c0 AS REAL))=(((t1.c2) NOT BETWEEN (t1.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c1 COLLATE NOCASE AS TEXT) CROSS JOIN t1 ON (- (((t1.c2)>=(t1.c1)))) WHERE (((((CAST(vt1.c0 AS REAL))=(((t1.c2) NOT BETWEEN (t1.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c1 COLLATE NOCASE AS TEXT) CROSS JOIN t1 ON (- (((t1.c2)>=(t1.c1))));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((t0.c0)=(t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((t0.c0)==(t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c0)==(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))>((vt1.c1))))<=(LIKELY(DISTINCT vt1.c1)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0))>((vt1.c1))))<=(LIKELY(DISTINCT vt1.c1)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c1))))<=(LIKELY(DISTINCT vt1.c1)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0;
SELECT ALL t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 HAVING CAST((((vt1.c0)) NOT BETWEEN ((COUNT(*))) AND ((SUM(t1.c1)))) AS TEXT) UNION ALL SELECT ALL t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 HAVING (NOT (CAST((((vt1.c0)) NOT BETWEEN ((COUNT(*))) AND ((SUM(t1.c1)))) AS TEXT))) UNION ALL SELECT t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 HAVING ((CAST((((vt1.c0)) NOT BETWEEN ((COUNT(*))) AND ((SUM(t1.c1)))) AS TEXT)) ISNULL);
SELECT t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0;
SELECT ALL t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 HAVING CAST((((vt1.c0)) NOT BETWEEN ((COUNT(*))) AND ((SUM(t1.c1)))) AS TEXT) UNION ALL SELECT ALL t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 HAVING (NOT (CAST((((vt1.c0)) NOT BETWEEN ((COUNT(*))) AND ((SUM(t1.c1)))) AS TEXT))) UNION ALL SELECT t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 HAVING ((CAST((((vt1.c0)) NOT BETWEEN ((COUNT(*))) AND ((SUM(t1.c1)))) AS TEXT)) ISNULL);
SELECT t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0 FROM t1, t0, vt1, vt0 GROUP BY t1.c1, t1.c0, vt1.c1, t0.c0, t1.c2, vt1.c0, vt0.c0;
SELECT * FROM t1, vt0;
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))) IN ())) UNION ALL SELECT * FROM t1, vt0 NOT INDEXED WHERE ((NOT (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))) IN ())))) UNION ALL SELECT * FROM t1, vt0 WHERE (((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))) IN ())) ISNULL));
SELECT * FROM t1, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, (((t0.c0)) BETWEEN ((0.022207307176037916)) AND ((t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, (((t0.c0)) BETWEEN ((0.022207307176037916)) AND ((t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, (((t0.c0)) BETWEEN ((0.022207307176037916)) AND ((t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0 FROM vt0, vt1, t1, t0 GROUP BY t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0;
SELECT t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0 FROM vt0, vt1, t1, t0 WHERE (t1.c2) GROUP BY t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0 UNION SELECT ALL t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0 FROM vt0, vt1, t1, t0 WHERE ((NOT (t1.c2))) GROUP BY t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0 UNION SELECT t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0 FROM vt0, vt1, t1, t0 WHERE (((t1.c2) ISNULL)) GROUP BY t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0;
SELECT t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0 FROM vt0, vt1, t1, t0 GROUP BY t1.c1, vt1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, t1.c0;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING ((SUM(t0.c0))<=(CAST(vt1.c0 AS TEXT))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING (NOT (((SUM(t0.c0))<=(CAST(vt1.c0 AS TEXT))))) UNION ALL SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING ((((SUM(t0.c0))<=(CAST(vt1.c0 AS TEXT)))) ISNULL);
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING ((SUM(t0.c0))<=(CAST(vt1.c0 AS TEXT))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING (NOT (((SUM(t0.c0))<=(CAST(vt1.c0 AS TEXT))))) UNION ALL SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING ((((SUM(t0.c0))<=(CAST(vt1.c0 AS TEXT)))) ISNULL);
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0 CROSS JOIN vt1 ON ((NULL) BETWEEN (((vt1.c1)%(vt1.c0))) AND ((+ (vt1.c1)))) GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0, t1;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0, t1 WHERE ((+ ((t1.c0 IN ())))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0, t1 WHERE ((NOT ((+ ((t1.c0 IN ())))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0, t1 WHERE ((((+ ((t1.c0 IN ())))) ISNULL));
SELECT t0.c0, vt1.c0 FROM vt1, t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM vt1, t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM vt1, t0, t1 WHERE (((((((t1.c0)+(vt1.c0)))AND((((t1.c2))=((t1.c0))))))AND(((vt1.c0)<=(t1.c2))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM vt1, t0, t1 WHERE ((NOT (((((((t1.c0)+(vt1.c0)))AND((((t1.c2))==((t1.c0))))))AND(((vt1.c0)<=(t1.c2))))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM vt1, t0, t1 WHERE (((((((((t1.c0)+(vt1.c0)))AND((((t1.c2))=((t1.c0))))))AND(((vt1.c0)<=(t1.c2))))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM vt1, t0, t1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(x'')))LIKE(CAST('1924517741' AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(x'')))LIKE(CAST('1924517741' AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(x'')))LIKE(CAST('1924517741' AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0 GROUP BY vt1.c0, vt1.c1, t1.c1;
SELECT vt1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0 GROUP BY vt1.c0, vt1.c1, t1.c1 HAVING ((MIN(COUNT(COUNT(t1.c0)))) NOT NULL) UNION ALL SELECT vt1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0 GROUP BY vt1.c0, vt1.c1, t1.c1 HAVING (NOT (((MIN(COUNT(COUNT(t1.c0)))) NOT NULL))) UNION ALL SELECT vt1.c0, vt1.c1, t1.c1 FROM t1, vt1, vt0 GROUP BY vt1.c0, vt1.c1, t1.c1 HAVING ((((MIN(COUNT(COUNT(t1.c0)))) NOT NULL)) ISNULL);
SELECT MAX(CAST((+ (NULL)) AS BLOB)) FROM vt1;
SELECT ALL t1.c0, t1.c1, t0.c0 FROM t0, t1;
SELECT t1.c0, t1.c1, t0.c0 FROM t0, t1 NOT INDEXED WHERE (((t1.c2 COLLATE BINARY) IS TRUE)) UNION ALL SELECT ALL t1.c0, t1.c1, t0.c0 FROM t0 NOT INDEXED, t1 WHERE ((NOT (((t1.c2 COLLATE BINARY) IS TRUE)))) UNION ALL SELECT t1.c0, t1.c1, t0.c0 FROM t0, t1 WHERE (((((t1.c2 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT ALL t1.c0, t1.c1, t0.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS REAL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS REAL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c1 FROM t0, vt0, t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t0, vt0, t1 WHERE (((t0.c0) BETWEEN (t1.c0 COLLATE BINARY) AND ('102579340'))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t0, vt0, t1 WHERE ((NOT (((t0.c0) BETWEEN (t1.c0 COLLATE BINARY) AND ('102579340'))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t0, vt0, t1 WHERE (((((t0.c0) BETWEEN (t1.c0 COLLATE BINARY) AND ('102579340'))) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t0, vt0, t1 GROUP BY t1.c1;
SELECT ALL t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2;
SELECT ALL t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2 HAVING MAX(((t1.c0) BETWEEN (AVG(TOTAL(MAX(0.3345409281807933)))) AND (t1.c2))) UNION ALL SELECT ALL t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2 HAVING (NOT (MAX(((t1.c0) BETWEEN (AVG(TOTAL(MAX(0.3345409281807933)))) AND (t1.c2))))) UNION ALL SELECT t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2 HAVING ((MAX(((t1.c0) BETWEEN (AVG(TOTAL(MAX(0.3345409281807933)))) AND (t1.c2)))) ISNULL);
SELECT ALL * FROM vt1, t0, vt0;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)IS(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)IS(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)IS(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL * FROM vt1, t0, vt0;
SELECT DISTINCT t1.c0, t1.c2, t0.c0, vt1.c1, vt1.c0 FROM t1 INNER JOIN vt1 ON (- (CAST(vt1.c1 AS NUMERIC))) INNER JOIN t0 ON CASE WHEN NULL THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c1 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END IN ());
SELECT DISTINCT t1.c0, t1.c2, t0.c0, vt1.c1, vt1.c0 FROM t1 INNER JOIN vt1 ON (- (CAST(vt1.c1 AS NUMERIC))) INNER JOIN t0 ON CASE WHEN NULL THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c1 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END IN ()) WHERE (((((((((((((1.301892556E9)OR(vt1.c0)))OR(t1.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((t1.c2)LIKE(vt0.c0)))))OR((((vt1.c1))>((t1.c2))))))OR((- (0.8658177506648954))))) UNION SELECT DISTINCT t1.c0, t1.c2, t0.c0, vt1.c1, vt1.c0 FROM t1 INNER JOIN vt1 ON (- (CAST(vt1.c1 AS NUMERIC))) INNER JOIN t0 ON CASE WHEN NULL THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c1 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END IN ()) WHERE ((NOT (((((((((((((1.301892556E9)OR(vt1.c0)))OR(t1.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((t1.c2)LIKE(vt0.c0)))))OR((((vt1.c1))>((t1.c2))))))OR((- (0.8658177506648954))))))) UNION SELECT DISTINCT t1.c0, t1.c2, t0.c0, vt1.c1, vt1.c0 FROM t1 INNER JOIN vt1 ON (- (CAST(vt1.c1 AS NUMERIC))) INNER JOIN t0 ON CASE WHEN NULL THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c1 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END IN ()) WHERE (((((((((((((((1.301892556E9)OR(vt1.c0)))OR(t1.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((t1.c2)LIKE(vt0.c0)))))OR((((vt1.c1))>((t1.c2))))))OR((- (0.8658177506648954))))) ISNULL));
SELECT DISTINCT t1.c0, t1.c2, t0.c0, vt1.c1, vt1.c0 FROM t1 INNER JOIN vt1 ON (- (CAST(vt1.c1 AS NUMERIC))) INNER JOIN t0 ON CASE WHEN NULL THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c1 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END IN ());
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (t1.c1) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (t1.c1))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((t1.c1) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1, t0, vt0;
SELECT * FROM vt1, t0, vt0 WHERE ((((('-646605114')<(vt1.c1)))-(((NULL) IS TRUE)))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((NOT ((((('-646605114')<(vt1.c1)))-(((NULL) IS TRUE)))))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((((((('-646605114')<(vt1.c1)))-(((NULL) IS TRUE)))) ISNULL));
SELECT * FROM vt1, t0, vt0;
SELECT DISTINCT t1.c0, t1.c1, t1.c2, t0.c0 FROM t1 INNER JOIN t0 ON t1.c2;
SELECT DISTINCT t1.c0, t1.c1, t1.c2, t0.c0 FROM t1 INNER JOIN t0 ON t1.c2 WHERE ((((((t0.c0, t1.c0, t1.c0))>=((0.0680447191126965, t0.c0, t1.c1)))) BETWEEN (t1.c0) AND (((((t1.c2)AND(t0.c0)))AND('901122249'))))) UNION SELECT DISTINCT t1.c0, t1.c1, t1.c2, t0.c0 FROM t1 INNER JOIN t0 ON t1.c2 WHERE ((NOT ((((((t0.c0, t1.c0, t1.c0))>=((0.0680447191126965, t0.c0, t1.c1)))) BETWEEN (t1.c0) AND (((((t1.c2)AND(t0.c0)))AND('901122249'))))))) UNION SELECT DISTINCT t1.c0, t1.c1, t1.c2, t0.c0 FROM t1 INNER JOIN t0 ON t1.c2 WHERE ((((((((t0.c0, t1.c0, t1.c0))>=((0.0680447191126965, t0.c0, t1.c1)))) BETWEEN (t1.c0) AND (((((t1.c2)AND(t0.c0)))AND('901122249'))))) ISNULL));
SELECT DISTINCT t1.c0, t1.c1, t1.c2, t0.c0 FROM t1 INNER JOIN t0 ON t1.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)IS(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2;
SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2 HAVING CASE SUM(t1.c0)  WHEN COUNT(t1.c2) THEN (- (t1.c0)) END UNION ALL SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2 HAVING (NOT (CASE SUM(t1.c0)  WHEN COUNT(t1.c2) THEN (- (t1.c0)) END)) UNION ALL SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2 HAVING ((CASE SUM(t1.c0)  WHEN COUNT(t1.c2) THEN (- (t1.c0)) END) ISNULL);
SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2;
SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2 HAVING CASE SUM(t1.c0)  WHEN COUNT(t1.c2) THEN (- (t1.c0)) END UNION ALL SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2 HAVING (NOT (CASE SUM(t1.c0)  WHEN COUNT(t1.c2) THEN (- (t1.c0)) END)) UNION ALL SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2 HAVING ((CASE SUM(t1.c0)  WHEN COUNT(t1.c2) THEN (- (t1.c0)) END) ISNULL);
SELECT ALL t1.c0, t1.c1, t1.c2 FROM t1 GROUP BY t1.c0, t1.c1, t1.c2;
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON CASE WHEN t1.c1 THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0)<>(vt1.c1)) THEN t1.c2 COLLATE RTRIM WHEN ((t1.c2)<>(t1.c2)) THEN x'' END;
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON CASE WHEN t1.c1 THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0)!=(vt1.c1)) THEN t1.c2 COLLATE RTRIM WHEN ((t1.c2)<>(t1.c2)) THEN x'' END WHERE (CASE CASE t1.c2  WHEN t1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (('')||(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((t1.c0)&(vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON CASE WHEN t1.c1 THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0)<>(vt1.c1)) THEN t1.c2 COLLATE RTRIM WHEN ((t1.c2)<>(t1.c2)) THEN x'' END WHERE ((NOT (CASE CASE t1.c2  WHEN t1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (('')||(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((t1.c0)&(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON CASE WHEN t1.c1 THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0)<>(vt1.c1)) THEN t1.c2 COLLATE RTRIM WHEN ((t1.c2)<>(t1.c2)) THEN x'' END WHERE (((CASE CASE t1.c2  WHEN t1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (('')||(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((t1.c0)&(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON CASE WHEN t1.c1 THEN ((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0)<>(vt1.c1)) THEN t1.c2 COLLATE RTRIM WHEN ((t1.c2)<>(t1.c2)) THEN x'' END;
SELECT DISTINCT t1.c2, t0.c0, t1.c1, vt1.c0, vt0.c0, vt1.c1 FROM vt0, t0, vt1, t1;
SELECT DISTINCT t1.c2, t0.c0, t1.c1, vt1.c0, vt0.c0, vt1.c1 FROM vt0, t0, vt1, t1 WHERE (((CAST(vt1.c0 AS BLOB))<=((NOT (t0.c0))))) UNION SELECT DISTINCT t1.c2, t0.c0, t1.c1, vt1.c0, vt0.c0, vt1.c1 FROM vt0, t0, vt1, t1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))<=((NOT (t0.c0))))))) UNION SELECT DISTINCT t1.c2, t0.c0, t1.c1, vt1.c0, vt0.c0, vt1.c1 FROM vt0, t0, vt1, t1 WHERE (((((CAST(vt1.c0 AS BLOB))<=((NOT (t0.c0))))) ISNULL));
SELECT DISTINCT t1.c2, t0.c0, t1.c1, vt1.c0, vt0.c0, vt1.c1 FROM vt0, t0, vt1, t1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'0f7d' COLLATE BINARY)OR(CASE vt0.c0  WHEN '->y{o*!?' THEN vt0.c0 END)))AND(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((x'0f7d' COLLATE BINARY)OR(CASE vt0.c0  WHEN '->y{o*!?' THEN vt0.c0 END)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((x'0f7d' COLLATE BINARY)OR(CASE vt0.c0  WHEN '->y{o*!?' THEN vt0.c0 END)))AND(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN vt0.c0 ELSE 0xffffffffe4cd13de END)>>((+ (vt1.c1)))) LEFT OUTER JOIN vt0 ON ((x'')>((vt1.c1 IN ()))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL MAX((- (x''))) FROM t0, vt1, vt0, t1;
SELECT ALL * FROM vt0, vt1, t1, t0;
SELECT ALL * FROM vt0, vt1, t1, t0 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND((NOT (t1.c1)))))OR(((((vt0.c0)AND(t1.c2)))OR(vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1, t1, t0 WHERE ((NOT (((((((((((((vt1.c0)OR(vt1.c0)))OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND((NOT (t1.c1)))))OR(((((vt0.c0)AND(t1.c2)))OR(vt1.c0))))))) UNION ALL SELECT * FROM vt0, vt1, t1, t0 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND((NOT (t1.c1)))))OR(((((vt0.c0)AND(t1.c2)))OR(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1, t1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c1)+(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED WHERE ((NOT ((NOT (((vt1.c1)+(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((NOT (((vt1.c1)+(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1 FROM vt1, t1, vt0 GROUP BY t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1;
SELECT t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1 FROM vt1, t1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN (('-198505820')) AND ((UNLIKELY('-1168751181'))))) GROUP BY t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1 UNION SELECT ALL t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1 FROM vt1, t1, vt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (('-198505820')) AND ((UNLIKELY('-1168751181'))))))) GROUP BY t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1 UNION SELECT ALL t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1 FROM vt1, t1, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN (('-198505820')) AND ((UNLIKELY('-1168751181'))))) ISNULL)) GROUP BY t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1;
SELECT ALL t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1 FROM vt1, t1, vt0 GROUP BY t1.c0, vt1.c0, t1.c2, vt0.c0, vt1.c1, t1.c1;
SELECT t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2;
SELECT ALL t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2 HAVING ((((((((AVG(t1.c2))AND(COUNT(*))))OR((~ (t1.c0)))))AND(AVG(COUNT(*)))))OR(((t1.c1) IS TRUE))) UNION ALL SELECT t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2 HAVING (NOT (((((((((AVG(t1.c2))AND(COUNT(*))))OR((~ (t1.c0)))))AND(AVG(COUNT(*)))))OR(((t1.c1) IS TRUE))))) UNION ALL SELECT t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2 HAVING ((((((((((AVG(t1.c2))AND(COUNT(*))))OR((~ (t1.c0)))))AND(AVG(COUNT(*)))))OR(((t1.c1) IS TRUE)))) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (t1.c0) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM t1, t0 WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, t1.c2 FROM t0, vt0, t1, vt1;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, t1.c2 FROM t0, vt0, t1, vt1 WHERE ((((((x'')) NOT BETWEEN (('-434593908')) AND ((vt1.c1))))AND(0.29028834591455965))) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, t1.c2 FROM t0, vt0, t1, vt1 WHERE ((NOT ((((((x'')) NOT BETWEEN (('-434593908')) AND ((vt1.c1))))AND(0.29028834591455965))))) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, t1.c2 FROM t0, vt0, t1, vt1 WHERE ((((((((x'')) NOT BETWEEN (('-434593908')) AND ((vt1.c1))))AND(0.29028834591455965))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0, t1.c2 FROM t0, vt0, t1, vt1;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2;
SELECT t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2 HAVING CASE ((t1.c0)<=(MAX(t1.c0)))  WHEN SUM(AVG(t1.c1)) THEN TOTAL(t1.c2) END UNION ALL SELECT t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2 HAVING (NOT (CASE ((t1.c0)<=(MAX(t1.c0)))  WHEN SUM(AVG(t1.c1)) THEN TOTAL(t1.c2) END)) UNION ALL SELECT t1.c1, t1.c2 FROM t1 GROUP BY t1.c1, t1.c2 HAVING ((CASE ((t1.c0)<=(MAX(t1.c0)))  WHEN SUM(AVG(t1.c1)) THEN TOTAL(t1.c2) END) ISNULL);
SELECT ALL t1.c1 FROM t0, t1, vt1;
SELECT t1.c1 FROM t0, t1, vt1 WHERE (((CASE x'3b06'  WHEN vt1.c0 THEN t1.c0 END) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) AND (CAST(t1.c0 AS BLOB)))) UNION ALL SELECT ALL t1.c1 FROM t0, t1, vt1 WHERE ((NOT (((CASE x'3b06'  WHEN vt1.c0 THEN t1.c0 END) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) AND (CAST(t1.c0 AS BLOB)))))) UNION ALL SELECT t1.c1 FROM t0, t1, vt1 WHERE (((((CASE x'3b06'  WHEN vt1.c0 THEN t1.c0 END) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) AND (CAST(t1.c0 AS BLOB)))) ISNULL));
SELECT ALL t1.c1 FROM t0, t1, vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c1)||(vt1.c0)))+(vt1.c1))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c1)||(vt1.c0)))+(vt1.c1))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c1)||(vt1.c0)))+(vt1.c1))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((((vt1.c0)|(t0.c0)) IN ())) GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT ((((vt1.c0)|(t0.c0)) IN ())))) GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((((((vt1.c0)|(t0.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0;
SELECT ALL t1.c0, vt0.c0, vt1.c1, t1.c2, vt1.c0 FROM t0 INDEXED BY i32, t1, vt0, vt1 INDEXED BY i89 GROUP BY t1.c0, vt0.c0, vt1.c1, t1.c2, vt1.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (LIKELIHOOD(CASE '\ra'  WHEN t0.c0 THEN t0.c0 END, 0.21501672753017043)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (LIKELIHOOD(CASE '\ra'  WHEN t0.c0 THEN t0.c0 END, 0.21501672753017043)))) UNION ALL SELECT * FROM t0 WHERE (((LIKELIHOOD(CASE '\ra'  WHEN t0.c0 THEN t0.c0 END, 0.21501672753017043)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t1, vt1, vt0 RIGHT OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0));
SELECT DISTINCT * FROM t1, vt1, vt0 RIGHT OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)) WHERE (((((t1.c2)AND(t1.c1)))OR(t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t1, vt1, vt0 RIGHT OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)) WHERE ((NOT (((((t1.c2)AND(t1.c1)))OR(t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1, vt1, vt0 RIGHT OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)) WHERE (((((((t1.c2)AND(t1.c1)))OR(t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, vt1, vt0 RIGHT OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0));
SELECT vt1.c0, t1.c2, vt0.c0 FROM vt1, vt0, t0, t1 GROUP BY vt1.c0, t1.c2, vt0.c0;
SELECT vt1.c0, t1.c2, vt0.c0 FROM vt1, vt0, t0, t1 WHERE (UNICODE((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))) GROUP BY vt1.c0, t1.c2, vt0.c0 UNION SELECT vt1.c0, t1.c2, vt0.c0 FROM vt1, vt0, t0, t1 WHERE ((NOT (UNICODE((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))))) GROUP BY vt1.c0, t1.c2, vt0.c0 UNION SELECT vt1.c0, t1.c2, vt0.c0 FROM vt1, vt0, t0, t1 WHERE (((UNICODE((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))) ISNULL)) GROUP BY vt1.c0, t1.c2, vt0.c0;
SELECT vt1.c0, t1.c2, vt0.c0 FROM vt1, vt0, t0, t1 GROUP BY vt1.c0, t1.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CHAR(((TOTAL(GROUP_CONCAT(COUNT(*))))LIKE(TOTAL(vt0.c0))), vt0.c0 COLLATE NOCASE, COUNT(x'ce5b')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CHAR(((TOTAL(GROUP_CONCAT(COUNT(*))))LIKE(TOTAL(vt0.c0))), vt0.c0 COLLATE NOCASE, COUNT(x'ce5b')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CHAR(((TOTAL(GROUP_CONCAT(COUNT(*))))LIKE(TOTAL(vt0.c0))), vt0.c0 COLLATE NOCASE, COUNT(x'ce5b'))) ISNULL);
SELECT ALL * FROM vt1, vt0 NOT INDEXED, t1, t0;
SELECT * FROM vt1, vt0, t1, t0 WHERE ((((((NULL)AND(t0.c0))))<>(((~ (vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt0, t1, t0 WHERE ((NOT ((((((NULL)AND(t0.c0))))<>(((~ (vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1, vt0, t1, t0 WHERE ((((((((NULL)AND(t0.c0))))!=(((~ (vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1, vt0 NOT INDEXED, t1, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c2)-(t1.c2)) IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c2)-(t1.c2)) IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c2)-(t1.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c0, t1.c0, t1.c1 FROM vt0, t1, vt1 INNER JOIN t0 ON ((vt1.c0) BETWEEN ((t1.c2 IN ())) AND (NULL)) GROUP BY vt0.c0, t1.c0, t1.c1;
SELECT ALL vt0.c0, t1.c0, t1.c1 FROM vt0, t1, vt1 INNER JOIN t0 ON ((vt1.c0) BETWEEN ((t1.c2 IN ())) AND (NULL)) WHERE (((NULL) IS TRUE) COLLATE BINARY) GROUP BY vt0.c0, t1.c0, t1.c1 UNION SELECT ALL vt0.c0, t1.c0, t1.c1 FROM vt0, t1, vt1 INNER JOIN t0 ON ((vt1.c0) BETWEEN ((t1.c2 IN ())) AND (NULL)) WHERE ((NOT (((NULL) IS TRUE) COLLATE BINARY))) GROUP BY vt0.c0, t1.c0, t1.c1 UNION SELECT vt0.c0, t1.c0, t1.c1 FROM vt0, t1, vt1 INNER JOIN t0 ON ((vt1.c0) BETWEEN ((t1.c2 IN ())) AND (NULL)) WHERE (((((NULL) IS TRUE) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, t1.c0, t1.c1;
SELECT ALL vt0.c0, t1.c0, t1.c1 FROM vt0, t1, vt1 INNER JOIN t0 ON ((vt1.c0) BETWEEN ((t1.c2 IN ())) AND (NULL)) GROUP BY vt0.c0, t1.c0, t1.c1;
SELECT ALL t1.c0, t1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t1.c0, t1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, vt1.c1;
SELECT ALL t1.c0, t1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t1.c0, t1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, vt1.c1 HAVING ((MAX(t1.c2)) BETWEEN (MAX(COUNT(*))) AND (MIN(AVG(t0.c0)))) UNION ALL SELECT t1.c0, t1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t1.c0, t1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, vt1.c1 HAVING (NOT (((MAX(t1.c2)) BETWEEN (MAX(COUNT(*))) AND (MIN(AVG(t0.c0)))))) UNION ALL SELECT t1.c0, t1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t1.c0, t1.c1, t1.c2, vt1.c0, t0.c0, vt0.c0, vt1.c1 HAVING ((((MAX(t1.c2)) BETWEEN (MAX(COUNT(*))) AND (MIN(AVG(t0.c0))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)<(x''))) NOT NULL)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((((vt0.c0)<(x''))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c0)<(x''))) NOT NULL)) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (TRIM(DISTINCT (vt1.c0 IN ()))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (TRIM(DISTINCT (vt1.c0 IN ()))))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((TRIM(DISTINCT (vt1.c0 IN ()))) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL t1.c0, t1.c2, t1.c1, vt0.c0, t0.c0 FROM t1 INNER JOIN vt0 ON CAST(t0.c0 COLLATE NOCASE AS NUMERIC) RIGHT OUTER JOIN t0 ON ((((((((((((0.6180060561110762)AND(((((vt0.c0)OR(t1.c1)))AND(t1.c1)))))OR(((vt0.c0) BETWEEN (t0.c0) AND (0.8051959032194571)))))OR(t0.c0)))OR(((t1.c0)GLOB(t1.c0)))))AND(((t1.c0) IS TRUE))))OR(((t1.c1)<(t0.c0)))) GROUP BY t1.c0, t1.c2, t1.c1, vt0.c0, t0.c0;
SELECT * FROM vt1 INNER JOIN t0 ON (((((vt1.c1 IN ()))OR(vt1.c0)))AND((vt1.c0 IN ())));
SELECT ALL * FROM vt1 INNER JOIN t0 ON (((((vt1.c1 IN ()))OR(vt1.c0)))AND((vt1.c0 IN ()))) WHERE ((((((vt1.c1))==((t0.c0))))*(((((vt1.c0)AND(vt1.c1)))AND(NULL))))) UNION ALL SELECT * FROM vt1 INNER JOIN t0 ON (((((vt1.c1 IN ()))OR(vt1.c0)))AND((vt1.c0 IN ()))) WHERE ((NOT ((((((vt1.c1))==((t0.c0))))*(((((vt1.c0)AND(vt1.c1)))AND(NULL))))))) UNION ALL SELECT * FROM vt1 INNER JOIN t0 ON (((((vt1.c1 IN ()))OR(vt1.c0)))AND((vt1.c0 IN ()))) WHERE ((((((((vt1.c1))==((t0.c0))))*(((((vt1.c0)AND(vt1.c1)))AND(NULL))))) ISNULL));
SELECT * FROM vt1 INNER JOIN t0 ON (((((vt1.c1 IN ()))OR(vt1.c0)))AND((vt1.c0 IN ())));
SELECT DISTINCT t1.c0 FROM vt1 FULL OUTER JOIN vt0 ON TRIM(0.16502104816982077) COLLATE NOCASE CROSS JOIN t1 ON ((((NULLIF(vt1.c1, vt0.c0))AND((- (vt1.c1)))))OR(CAST(vt0.c0 AS NUMERIC)));
SELECT DISTINCT t1.c0 FROM vt1 FULL OUTER JOIN vt0 ON TRIM(0.16502104816982077) COLLATE NOCASE CROSS JOIN t1 ON ((((NULLIF(vt1.c1, vt0.c0))AND((- (vt1.c1)))))OR(CAST(vt0.c0 AS NUMERIC))) WHERE (TRIM(DISTINCT vt1.c1) COLLATE RTRIM) UNION SELECT DISTINCT t1.c0 FROM vt1 FULL OUTER JOIN vt0 ON TRIM(0.16502104816982077) COLLATE NOCASE CROSS JOIN t1 ON ((((NULLIF(vt1.c1, vt0.c0))AND((- (vt1.c1)))))OR(CAST(vt0.c0 AS NUMERIC))) WHERE ((NOT (TRIM(DISTINCT vt1.c1) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0 FROM vt1 FULL OUTER JOIN vt0 ON TRIM(0.16502104816982077) COLLATE NOCASE CROSS JOIN t1 ON ((((NULLIF(vt1.c1, vt0.c0))AND((- (vt1.c1)))))OR(CAST(vt0.c0 AS NUMERIC))) WHERE (((TRIM(DISTINCT vt1.c1) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c0 FROM vt1 FULL OUTER JOIN vt0 ON TRIM(0.16502104816982077) COLLATE NOCASE CROSS JOIN t1 ON ((((NULLIF(vt1.c1, vt0.c0))AND((- (vt1.c1)))))OR(CAST(vt0.c0 AS NUMERIC)));
SELECT t0.c0, vt0.c0, vt1.c0, t1.c2 FROM t1, vt1, t0 FULL OUTER JOIN vt0 ON CAST((((0.054593362878640805)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS REAL) GROUP BY t0.c0, vt0.c0, vt1.c0, t1.c2;
SELECT t0.c0, vt0.c0, vt1.c0, t1.c2 FROM t1, vt1, t0 FULL OUTER JOIN vt0 ON CAST((((0.054593362878640805)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS REAL) WHERE (((CAST(t1.c2 AS TEXT)) IS TRUE)) GROUP BY t0.c0, vt0.c0, vt1.c0, t1.c2 UNION SELECT ALL t0.c0, vt0.c0, vt1.c0, t1.c2 FROM t1, vt1, t0 FULL OUTER JOIN vt0 ON CAST((((0.054593362878640805)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS REAL) WHERE ((NOT (((CAST(t1.c2 AS TEXT)) IS TRUE)))) GROUP BY t0.c0, vt0.c0, vt1.c0, t1.c2 UNION SELECT t0.c0, vt0.c0, vt1.c0, t1.c2 FROM t1, vt1, t0 FULL OUTER JOIN vt0 ON CAST((((0.054593362878640805)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS REAL) WHERE (((((CAST(t1.c2 AS TEXT)) IS TRUE)) ISNULL)) GROUP BY t0.c0, vt0.c0, vt1.c0, t1.c2;
SELECT t0.c0, vt0.c0, vt1.c0, t1.c2 FROM t1, vt1, t0 FULL OUTER JOIN vt0 ON CAST((((0.054593362878640805)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS REAL) GROUP BY t0.c0, vt0.c0, vt1.c0, t1.c2;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(TRIM(vt1.c1)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(TRIM(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(TRIM(vt1.c1))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(TRIM(vt1.c1)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(TRIM(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(TRIM(vt1.c1))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL MAX(((((~ (t0.c0))))==((t0.c0 COLLATE RTRIM)))) FROM t0, t1 ORDER BY (((((1783365123, '-670104609', 0.047953860165247275, t1.c2, x''))>=((t1.c2, t1.c1, t1.c0, t1.c1, t0.c0)))) NOT BETWEEN (t1.c2 COLLATE BINARY) AND ((- (t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c2 END AS BLOB)) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c2 END AS BLOB)))) UNION ALL SELECT ALL * FROM t0, t1 WHERE (((CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c2 END AS BLOB)) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt1.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))AND(t1.c1)))<<('-1740214769')) CROSS JOIN vt1 ON (t1.c0 COLLATE NOCASE IN ()) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))AND(t1.c1)))<<('-1740214769')) CROSS JOIN vt1 ON (t1.c0 COLLATE NOCASE IN ()) WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND ('-358853955')))*(((t1.c1)<(t1.c0))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))AND(t1.c1)))<<('-1740214769')) CROSS JOIN vt1 ON (t1.c0 COLLATE NOCASE IN ()) WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c1) AND ('-358853955')))*(((t1.c1)<(t1.c0))))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))AND(t1.c1)))<<('-1740214769')) CROSS JOIN vt1 ON (t1.c0 COLLATE NOCASE IN ()) WHERE (((((((vt1.c0) BETWEEN (vt1.c1) AND ('-358853955')))*(((t1.c1)<(t1.c0))))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c0)AND(t0.c0)))AND(t1.c1)))<<('-1740214769')) CROSS JOIN vt1 ON (t1.c0 COLLATE NOCASE IN ()) GROUP BY vt1.c1;
SELECT ALL t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0;
SELECT t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING '-2043253766' COLLATE BINARY UNION ALL SELECT ALL t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING (NOT ('-2043253766' COLLATE BINARY)) UNION ALL SELECT ALL t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING (('-2043253766' COLLATE BINARY) ISNULL);
SELECT ALL t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0;
SELECT t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING '-2043253766' COLLATE BINARY UNION ALL SELECT ALL t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING (NOT ('-2043253766' COLLATE BINARY)) UNION ALL SELECT ALL t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0 HAVING (('-2043253766' COLLATE BINARY) ISNULL);
SELECT ALL t1.c2, t1.c1, t1.c0 FROM t1, t0 GROUP BY t1.c2, t1.c1, t1.c0;
SELECT MAX(((((~ ('rè—˜y<zj{ws'))))>=((CAST(vt0.c0 AS REAL))))) FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM DESC;
SELECT ALL t1.c2 FROM t1, vt0, t0;
SELECT t1.c2 FROM t1, vt0, t0 WHERE (((LOWER(vt0.c0)) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'166e' END) AND (((((((((t1.c1)AND(vt0.c0)))OR(t1.c1)))OR(vt0.c0)))OR(t1.c1))))) UNION ALL SELECT ALL t1.c2 FROM t1, vt0, t0 WHERE ((NOT (((LOWER(vt0.c0)) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'166e' END) AND (((((((((t1.c1)AND(vt0.c0)))OR(t1.c1)))OR(vt0.c0)))OR(t1.c1))))))) UNION ALL SELECT ALL t1.c2 FROM t1, vt0, t0 WHERE (((((LOWER(vt0.c0)) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'166e' END) AND (((((((((t1.c1)AND(vt0.c0)))OR(t1.c1)))OR(vt0.c0)))OR(t1.c1))))) ISNULL));
SELECT ALL t1.c2 FROM t1, vt0, t0;
SELECT DISTINCT vt1.c0, t1.c0, t1.c1, vt0.c0 FROM t0, vt0, t1, vt1;
SELECT DISTINCT vt1.c0, t1.c0, t1.c1, vt0.c0 FROM t0, vt0, t1, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0, t1.c0, t1.c1, vt0.c0 FROM t0, vt0, t1, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0, t1.c0, t1.c1, vt0.c0 FROM t0, vt0, t1, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0, t1.c0, t1.c1, vt0.c0 FROM t0, vt0, t1, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS TEXT) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS TEXT) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0 HAVING '?0' COLLATE BINARY UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT ('?0' COLLATE BINARY)) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (('?0' COLLATE BINARY) ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0 HAVING '?0' COLLATE BINARY UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT ('?0' COLLATE BINARY)) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (('?0' COLLATE BINARY) ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '|u' ELSE 216517364 END) AND (COALESCE(vt0.c0, vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '|u' ELSE 216517364 END) AND (COALESCE(vt0.c0, vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '|u' ELSE 216517364 END) AND (COALESCE(vt0.c0, vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t1.c2, t1.c1, t1.c0 FROM t1;
SELECT DISTINCT t1.c2, t1.c1, t1.c0 FROM t1 WHERE (CAST(CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END AS INTEGER)) UNION SELECT DISTINCT t1.c2, t1.c1, t1.c0 FROM t1 WHERE ((NOT (CAST(CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END AS INTEGER)))) UNION SELECT DISTINCT t1.c2, t1.c1, t1.c0 FROM t1 WHERE (((CAST(CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END AS INTEGER)) ISNULL));
SELECT DISTINCT t1.c2, t1.c1, t1.c0 FROM t1;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 NOT INDEXED WHERE (((NULL) IS FALSE)) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((NULL) IS FALSE)))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((NULL) IS FALSE)) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1;
SELECT t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1 HAVING CAST(t1.c2 AS INTEGER) UNION ALL SELECT ALL t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1 HAVING (NOT (CAST(t1.c2 AS INTEGER))) UNION ALL SELECT t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1 HAVING ((CAST(t1.c2 AS INTEGER)) ISNULL);
SELECT t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1;
SELECT t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1 HAVING CAST(t1.c2 AS INTEGER) UNION ALL SELECT ALL t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1 HAVING (NOT (CAST(t1.c2 AS INTEGER))) UNION ALL SELECT t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1 HAVING ((CAST(t1.c2 AS INTEGER)) ISNULL);
SELECT t1.c2, t1.c1 FROM t1 GROUP BY t1.c2, t1.c1;
SELECT ALL * FROM vt0, vt1, t1;
SELECT * FROM vt0, vt1, t1 WHERE ((((vt0.c0 IN ())) BETWEEN ('}s4') AND (((t1.c2)==(t1.c1))))) UNION ALL SELECT * FROM vt0, vt1, t1 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN ('}s4') AND (((t1.c2)=(t1.c1))))))) UNION ALL SELECT * FROM vt0 NOT INDEXED, vt1, t1 WHERE ((((((vt0.c0 IN ())) BETWEEN ('}s4') AND (((t1.c2)=(t1.c1))))) ISNULL));
SELECT ALL * FROM vt0, vt1, t1;
SELECT DISTINCT vt1.c0, t0.c0, t1.c2, t1.c0, vt1.c1 FROM t0, vt1, t1, vt0;
SELECT DISTINCT vt1.c0, t0.c0, t1.c2, t1.c0, vt1.c1 FROM t0 NOT INDEXED, vt1, t1, vt0 WHERE (((CAST(t1.c2 AS INTEGER)) IS FALSE)) UNION SELECT DISTINCT vt1.c0, t0.c0, t1.c2, t1.c0, vt1.c1 FROM t0, vt1, t1, vt0 WHERE ((NOT (((CAST(t1.c2 AS INTEGER)) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, t0.c0, t1.c2, t1.c0, vt1.c1 FROM t0, vt1, t1, vt0 WHERE (((((CAST(t1.c2 AS INTEGER)) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, t1.c2, t1.c0, vt1.c1 FROM t0, vt1, t1, vt0;
SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0, vt1 WHERE (x'' COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT (x'' COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0, vt1 WHERE (((x'' COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY vt1.c1 HAVING AVG(GROUP_CONCAT(SUM(AVG(0.02389271360989642)))) UNION ALL SELECT ALL vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY vt1.c1 HAVING (NOT (AVG(GROUP_CONCAT(SUM(AVG(0.02389271360989642)))))) UNION ALL SELECT ALL vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY vt1.c1 HAVING ((AVG(GROUP_CONCAT(SUM(AVG(0.02389271360989642))))) ISNULL);
SELECT ALL vt0.c0, t1.c1, vt1.c0 FROM vt1, t1 INNER JOIN vt0 ON (- (((t1.c2)IS(vt1.c1))));
SELECT vt0.c0, t1.c1, vt1.c0 FROM vt1, t1 INNER JOIN vt0 ON (- (((t1.c2)IS(vt1.c1)))) WHERE (((((CASE t1.c1  WHEN vt1.c1 THEN t1.c1 END)AND(CAST(t1.c0 AS BLOB))))OR(CASE WHEN t1.c2 THEN x'' ELSE NULL END))) UNION ALL SELECT vt0.c0, t1.c1, vt1.c0 FROM vt1, t1 INNER JOIN vt0 ON (- (((t1.c2)IS(vt1.c1)))) WHERE ((NOT (((((CASE t1.c1  WHEN vt1.c1 THEN t1.c1 END)AND(CAST(t1.c0 AS BLOB))))OR(CASE WHEN t1.c2 THEN x'' ELSE NULL END))))) UNION ALL SELECT ALL vt0.c0, t1.c1, vt1.c0 FROM vt1, t1 INNER JOIN vt0 ON (- (((t1.c2)IS(vt1.c1)))) WHERE (((((((CASE t1.c1  WHEN vt1.c1 THEN t1.c1 END)AND(CAST(t1.c0 AS BLOB))))OR(CASE WHEN t1.c2 THEN x'' ELSE NULL END))) ISNULL));
SELECT ALL vt0.c0, t1.c1, vt1.c0 FROM vt1, t1 INNER JOIN vt0 ON (- (((t1.c2)IS(vt1.c1))));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((-369164589)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((-369164589)))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((-369164589)))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt0.c0, t1.c1 FROM t1 LEFT OUTER JOIN t0 ON (- ((~ (t1.c0)))) INNER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (vt0.c0)) GROUP BY vt0.c0, t1.c1;
SELECT vt0.c0, t1.c1 FROM t1 LEFT OUTER JOIN t0 ON (- ((~ (t1.c0)))) INNER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (vt0.c0)) WHERE (CAST((NOT (t1.c0)) AS TEXT)) GROUP BY vt0.c0, t1.c1 UNION SELECT ALL vt0.c0, t1.c1 FROM t1 LEFT OUTER JOIN t0 ON (- ((~ (t1.c0)))) INNER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (vt0.c0)) WHERE ((NOT (CAST((NOT (t1.c0)) AS TEXT)))) GROUP BY vt0.c0, t1.c1 UNION SELECT vt0.c0, t1.c1 FROM t1 LEFT OUTER JOIN t0 ON (- ((~ (t1.c0)))) INNER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (vt0.c0)) WHERE (((CAST((NOT (t1.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0, t1.c1;
SELECT ALL vt0.c0, t1.c1 FROM t1 LEFT OUTER JOIN t0 ON (- ((~ (t1.c0)))) INNER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (vt0.c0)) GROUP BY vt0.c0, t1.c1;
SELECT vt1.c1, t1.c1, vt1.c0, t1.c2 FROM vt1, t1 GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2;
SELECT vt1.c1, t1.c1, vt1.c0, t1.c2 FROM vt1, t1 GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2 HAVING (((+ (SUM(AVG(t1.c2)))))GLOB(GROUP_CONCAT(AVG(MAX(vt1.c1))))) UNION ALL SELECT ALL vt1.c1, t1.c1, vt1.c0, t1.c2 FROM vt1, t1 GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2 HAVING (NOT ((((+ (SUM(AVG(t1.c2)))))GLOB(GROUP_CONCAT(AVG(MAX(vt1.c1))))))) UNION ALL SELECT vt1.c1, t1.c1, vt1.c0, t1.c2 FROM vt1, t1 GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2 HAVING (((((+ (SUM(AVG(t1.c2)))))GLOB(GROUP_CONCAT(AVG(MAX(vt1.c1)))))) ISNULL);
SELECT ALL vt1.c1 FROM t0, vt1;
SELECT vt1.c1 FROM t0, vt1 WHERE (t0.c0) UNION ALL SELECT vt1.c1 FROM t0, vt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL vt1.c1 FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT ALL vt1.c1 FROM t0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, t1.c0, t1.c1, t0.c0 FROM vt1, t0, t1;
SELECT DISTINCT vt1.c0, vt1.c1, t1.c0, t1.c1, t0.c0 FROM vt1, t0, t1 WHERE (t0.c0) UNION SELECT DISTINCT vt1.c0, vt1.c1, t1.c0, t1.c1, t0.c0 FROM vt1, t0, t1 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT vt1.c0, vt1.c1, t1.c0, t1.c1, t0.c0 FROM vt1, t0, t1 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, t1.c0, t1.c1, t0.c0 FROM vt1, t0, t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((CAST(t0.c0 AS REAL), ((t0.c0) IS TRUE), t0.c0 COLLATE NOCASE))==(('617396936', CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE NOCASE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((CAST(t0.c0 AS REAL), ((t0.c0) IS TRUE), t0.c0 COLLATE NOCASE))==(('617396936', CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE NOCASE)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((CAST(t0.c0 AS REAL), ((t0.c0) IS TRUE), t0.c0 COLLATE NOCASE))=(('617396936', CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1 HAVING CAST(((t1.c1)-('-1740214769')) AS INTEGER) UNION ALL SELECT ALL t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1 HAVING (NOT (CAST(((t1.c1)-('-1740214769')) AS INTEGER))) UNION ALL SELECT t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1 HAVING ((CAST(((t1.c1)-('-1740214769')) AS INTEGER)) ISNULL);
SELECT t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1 HAVING CAST(((t1.c1)-('-1740214769')) AS INTEGER) UNION ALL SELECT ALL t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1 HAVING (NOT (CAST(((t1.c1)-('-1740214769')) AS INTEGER))) UNION ALL SELECT t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1 HAVING ((CAST(((t1.c1)-('-1740214769')) AS INTEGER)) ISNULL);
SELECT t1.c1 FROM t1 NATURAL JOIN vt1 GROUP BY t1.c1;
SELECT ALL * FROM vt0, t0, vt1 INDEXED BY i95 NATURAL JOIN t1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (json_array(vt1.c0, vt1.c0)) AND (((vt1.c1)IS NOT('->y{o*!?'))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (json_array(vt1.c0, vt1.c0)) AND (((vt1.c1)IS NOT('->y{o*!?'))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (json_array(vt1.c0, vt1.c0)) AND (((vt1.c1)IS NOT('->y{o*!?'))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (CASE WHEN x'' THEN CAST(vt1.c1 AS INTEGER) END) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CASE WHEN x'' THEN CAST(vt1.c1 AS INTEGER) END))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((CASE WHEN x'' THEN CAST(vt1.c1 AS INTEGER) END) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(((((MIN(t0.c0))OR(t0.c0)))AND(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(((((MIN(t0.c0))OR(t0.c0)))AND(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(((((MIN(t0.c0))OR(t0.c0)))AND(t0.c0)))) ISNULL);
SELECT MIN(CASE ((t0.c0) ISNULL)  WHEN ((vt1.c0)<>(vt1.c1)) THEN (t1.c1 IN ()) END) FROM vt0, t0, t1, vt1;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM vt0, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(t1.c0)))AND(t0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)||(t1.c2)) THEN load_extension(vt0.c0, t1.c2) WHEN ((0.17220977281340322) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN ((((((((vt0.c0)OR(t0.c0)))AND(t1.c2)))AND(NULL)))OR(0.36783241942096)) END CROSS JOIN t0 ON CASE (~ (t1.c1))  WHEN 4.89351827E8 THEN ((0.23437351553883845)/(t0.c0)) ELSE ((t1.c0) ISNULL) END;
SELECT ALL t0.c0 FROM t1, vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, vt1, t0 WHERE (IFNULL(DISTINCT LOWER(x''), (NOT (t1.c2)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, vt1, t0 WHERE ((NOT (IFNULL(DISTINCT LOWER(x''), (NOT (t1.c2)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, vt1, t0 WHERE (((IFNULL(DISTINCT LOWER(x''), (NOT (t1.c2)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, vt1, t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((- (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((- (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((- (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((- (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((- (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((- (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, t1.c1, t1.c2, vt0.c0, vt1.c0, t0.c0, t1.c0 FROM t1, vt0, vt1, t0;
SELECT vt1.c1, t1.c1, t1.c2, vt0.c0, vt1.c0, t0.c0, t1.c0 FROM t1, vt0, vt1, t0 WHERE ((((t1.c2)) NOT BETWEEN ((((vt1.c0)*(t1.c2)))) AND ((CAST(t1.c2 AS BLOB))))) UNION ALL SELECT vt1.c1, t1.c1, t1.c2, vt0.c0, vt1.c0, t0.c0, t1.c0 FROM t1, vt0, vt1, t0 WHERE ((NOT ((((t1.c2)) NOT BETWEEN ((((vt1.c0)*(t1.c2)))) AND ((CAST(t1.c2 AS BLOB))))))) UNION ALL SELECT vt1.c1, t1.c1, t1.c2, vt0.c0, vt1.c0, t0.c0, t1.c0 FROM t1, vt0, vt1, t0 WHERE ((((((t1.c2)) NOT BETWEEN ((((vt1.c0)*(t1.c2)))) AND ((CAST(t1.c2 AS BLOB))))) ISNULL));
SELECT ALL vt1.c1, t1.c1, t1.c2, vt0.c0, vt1.c0, t0.c0, t1.c0 FROM t1, vt0, vt1, t0;
SELECT DISTINCT * FROM t1, vt0;
SELECT DISTINCT * FROM t1, vt0 WHERE ((NOT ((((t1.c2, 0.6029102660217838, vt0.c0))>((t1.c0, t1.c2, t1.c0)))))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((NOT ((NOT ((((t1.c2, 0.6029102660217838, vt0.c0))>((t1.c0, t1.c2, t1.c0)))))))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((((NOT ((((t1.c2, 0.6029102660217838, vt0.c0))>((t1.c0, t1.c2, t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1, vt0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t0, t1 GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM vt0, t0, t1 WHERE ('H\') GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM vt0, t0, t1 WHERE ((NOT ('H\'))) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM vt0, t0, t1 WHERE ((('H\') ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t0, t1 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(NULL) COLLATE RTRIM COLLATE NOCASE UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(NULL) COLLATE RTRIM COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(NULL) COLLATE RTRIM COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(NULL) COLLATE RTRIM COLLATE NOCASE UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(NULL) COLLATE RTRIM COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(NULL) COLLATE RTRIM COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MAX('0.17220977281340322') FROM vt0, t1, vt1;
SELECT ALL * FROM vt1, t0, t1, vt0;
SELECT * FROM vt1, t0, t1, vt0 WHERE (((CASE NULL  WHEN '3{Z' THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0))!=((t1.c1)))) AND (CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1, t0, t1, vt0 WHERE ((NOT (((CASE NULL  WHEN '3{Z' THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0))<>((t1.c1)))) AND (CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1, t0, t1, vt0 WHERE (((((CASE NULL  WHEN '3{Z' THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0))<>((t1.c1)))) AND (CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1, t0, t1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (SQLITE_COMPILEOPTION_GET((((t0.c0))=((t0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET((((t0.c0))=((t0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((SQLITE_COMPILEOPTION_GET((((t0.c0))==((t0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT t1.c0, t1.c2, t1.c1 FROM t1 GROUP BY t1.c0, t1.c2, t1.c1;
SELECT ALL t1.c0, t1.c2, t1.c1 FROM t1 WHERE (((((t1.c2)AND(t1.c1)))!=((((x'9d5c')) NOT BETWEEN ((t1.c2)) AND ((x'b072')))))) GROUP BY t1.c0, t1.c2, t1.c1 UNION SELECT ALL t1.c0, t1.c2, t1.c1 FROM t1 WHERE ((NOT (((((t1.c2)AND(t1.c1)))!=((((x'9d5c')) NOT BETWEEN ((t1.c2)) AND ((x'b072')))))))) GROUP BY t1.c0, t1.c2, t1.c1 UNION SELECT ALL t1.c0, t1.c2, t1.c1 FROM t1 WHERE (((((((t1.c2)AND(t1.c1)))!=((((x'9d5c')) NOT BETWEEN ((t1.c2)) AND ((x'b072')))))) ISNULL)) GROUP BY t1.c0, t1.c2, t1.c1;
SELECT t1.c0, t1.c2, t1.c1 FROM t1 GROUP BY t1.c0, t1.c2, t1.c1;
SELECT ALL t1.c1, vt1.c0, vt1.c1 FROM t0, vt0 FULL OUTER JOIN vt1 ON (((((t0.c0))>=((t1.c0))))/(((vt1.c1) NOT NULL))) FULL OUTER JOIN t1 ON LIKE(((t1.c1)>=(x'')), ((t1.c2) ISNULL), '-') GROUP BY t1.c1, vt1.c0, vt1.c1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0 COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0 COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt1.c0 FROM t0, t1, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, t1, vt0, vt1 WHERE ((((NULL IN ()))LIKE(UNLIKELY(t1.c1)))) UNION SELECT DISTINCT vt1.c0 FROM t0, t1, vt0, vt1 WHERE ((NOT ((((NULL IN ()))LIKE(UNLIKELY(t1.c1)))))) UNION SELECT DISTINCT vt1.c0 FROM t0, t1, vt0, vt1 WHERE ((((((NULL IN ()))LIKE(UNLIKELY(t1.c1)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, t1, vt0, vt1;
SELECT ALL vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0 FROM vt1, t1 GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0;
SELECT vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0 FROM vt1, t1 WHERE (TYPEOF(((t1.c1) NOT BETWEEN (vt1.c1) AND (t1.c2)))) GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0 UNION SELECT ALL vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0 FROM vt1, t1 WHERE ((NOT (TYPEOF(((t1.c1) NOT BETWEEN (vt1.c1) AND (t1.c2)))))) GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0 UNION SELECT ALL vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0 FROM vt1, t1 WHERE (((TYPEOF(((t1.c1) NOT BETWEEN (vt1.c1) AND (t1.c2)))) ISNULL)) GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0;
SELECT ALL vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0 FROM vt1, t1 GROUP BY vt1.c1, t1.c1, vt1.c0, t1.c2, t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(t0.c0))OR(((TOTAL(COUNT(GROUP_CONCAT(COUNT(t0.c0)))))/(t0.c0)))))OR(json_type(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((SUM(t0.c0))OR(((TOTAL(COUNT(GROUP_CONCAT(COUNT(t0.c0)))))/(t0.c0)))))OR(json_type(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((SUM(t0.c0))OR(((TOTAL(COUNT(GROUP_CONCAT(COUNT(t0.c0)))))/(t0.c0)))))OR(json_type(t0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c0) ISNULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c0) ISNULL)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)/(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0))) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)/(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0))) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)/(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c1)||(vt0.c0))) NOTNULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c1)||(vt0.c0))) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c1)||(vt0.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0;
SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 HAVING IFNULL(COUNT(*), COUNT(*)) UNION ALL SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 HAVING (NOT (IFNULL(COUNT(*), COUNT(*)))) UNION ALL SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 HAVING ((IFNULL(COUNT(*), COUNT(*))) ISNULL);
SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0;
SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 HAVING IFNULL(COUNT(*), COUNT(*)) UNION ALL SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 HAVING (NOT (IFNULL(COUNT(*), COUNT(*)))) UNION ALL SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 HAVING ((IFNULL(COUNT(*), COUNT(*))) ISNULL);
SELECT t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0 FROM vt1, t0, t1 RIGHT OUTER JOIN vt0 ON x'' GROUP BY t1.c1, t1.c0, vt0.c0, t1.c2, vt1.c0, vt1.c1, t0.c0;
SELECT MAX(COALESCE(((((((((t1.c1)OR(vt0.c0)))OR(t1.c2)))AND(vt1.c1)))OR(t1.c0)), vt0.c0 COLLATE BINARY, (t1.c0 IN (vt0.c0, vt1.c1)), (vt1.c0 IN ()), (((vt1.c1)) BETWEEN ((t1.c2)) AND ((vt1.c1))), CAST(t1.c2 AS TEXT))) FROM t1, vt1, vt0 ORDER BY ((NULL)||(((((vt1.c0)OR(vt1.c0)))AND(t1.c2))))  NULLS LAST;
SELECT * FROM vt0, vt1, t0, t1;
SELECT * FROM vt0, vt1 NOT INDEXED, t0 NOT INDEXED, t1 WHERE ((((vt1.c1)!=(x'7368')) IN ())) UNION ALL SELECT ALL * FROM vt0, vt1, t0, t1 WHERE ((NOT ((((vt1.c1)!=(x'7368')) IN ())))) UNION ALL SELECT ALL * FROM vt0, vt1, t0, t1 WHERE ((((((vt1.c1)<>(x'7368')) IN ())) ISNULL));
SELECT * FROM vt0, vt1, t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(SUBSTR(t0.c0, t0.c0)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(SUBSTR(t0.c0, t0.c0)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(SUBSTR(t0.c0, t0.c0)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT t1.c2, t1.c0 FROM t1 GROUP BY t1.c2, t1.c0;
SELECT t1.c2, t1.c0 FROM t1 GROUP BY t1.c2, t1.c0 HAVING ((TOTAL(COUNT(t1.c2)))*(t1.c0 COLLATE NOCASE)) UNION ALL SELECT t1.c2, t1.c0 FROM t1 GROUP BY t1.c2, t1.c0 HAVING (NOT (((TOTAL(COUNT(t1.c2)))*(t1.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL t1.c2, t1.c0 FROM t1 GROUP BY t1.c2, t1.c0 HAVING ((((TOTAL(COUNT(t1.c2)))*(t1.c0 COLLATE NOCASE))) ISNULL);
SELECT ALL * FROM vt1, t1;
SELECT * FROM vt1, t1 WHERE ('qo-)') UNION ALL SELECT * FROM vt1, t1 WHERE ((NOT ('qo-)'))) UNION ALL SELECT ALL * FROM vt1, t1 WHERE ((('qo-)') ISNULL));
SELECT ALL * FROM vt1, t1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END THEN (((vt1.c1))<=((vt0.c0))) END) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END THEN (((vt1.c1))<=((vt0.c0))) END))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END THEN (((vt1.c1))<=((vt0.c0))) END) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT t1.c2, t1.c0, vt0.c0, t1.c1 FROM t1, vt0 NOT INDEXED GROUP BY t1.c2, t1.c0, vt0.c0, t1.c1;
SELECT t1.c2, t1.c0, vt0.c0, t1.c1 FROM t1, vt0 WHERE ((((((t1.c0)-(x'b8b9'))))<(((vt0.c0 IN (t1.c0)))))) GROUP BY t1.c2, t1.c0, vt0.c0, t1.c1 UNION SELECT t1.c2, t1.c0, vt0.c0, t1.c1 FROM t1, vt0 WHERE ((NOT ((((((t1.c0)-(x'b8b9'))))<(((vt0.c0 IN (t1.c0)))))))) GROUP BY t1.c2, t1.c0, vt0.c0, t1.c1 UNION SELECT ALL t1.c2, t1.c0, vt0.c0, t1.c1 FROM t1, vt0 WHERE ((((((((t1.c0)-(x'b8b9'))))<(((vt0.c0 IN (t1.c0)))))) ISNULL)) GROUP BY t1.c2, t1.c0, vt0.c0, t1.c1;
SELECT t1.c2, t1.c0, vt0.c0, t1.c1 FROM t1, vt0 NOT INDEXED GROUP BY t1.c2, t1.c0, vt0.c0, t1.c1;
SELECT t0.c0 FROM vt0 NOT INDEXED, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((x'')AND(SUM(vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (((x'')AND(SUM(vt0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((((x'')AND(SUM(vt0.c0)))) ISNULL);
SELECT t0.c0 FROM vt0 NOT INDEXED, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((x'')AND(SUM(vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (((x'')AND(SUM(vt0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((((x'')AND(SUM(vt0.c0)))) ISNULL);
SELECT t0.c0 FROM vt0 NOT INDEXED, t0 GROUP BY t0.c0;
SELECT t1.c2, t1.c1, t1.c0, t0.c0 FROM t0, vt0 CROSS JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR('7äš†6trYg].')))AND(')F')))OR(vt0.c0)) IN ());
SELECT ALL t1.c2, t1.c1, t1.c0, t0.c0 FROM t0, vt0 CROSS JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR('7äš†6trYg].')))AND(')F')))OR(vt0.c0)) IN ()) WHERE (((t1.c1 COLLATE BINARY) BETWEEN (((t1.c2)<(t1.c0))) AND (NULL))) UNION ALL SELECT ALL t1.c2, t1.c1, t1.c0, t0.c0 FROM t0, vt0 CROSS JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR('7äš†6trYg].')))AND(')F')))OR(vt0.c0)) IN ()) WHERE ((NOT (((t1.c1 COLLATE BINARY) BETWEEN (((t1.c2)<(t1.c0))) AND (NULL))))) UNION ALL SELECT t1.c2, t1.c1, t1.c0, t0.c0 FROM t0, vt0 CROSS JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR('7äš†6trYg].')))AND(')F')))OR(vt0.c0)) IN ()) WHERE (((((t1.c1 COLLATE BINARY) BETWEEN (((t1.c2)<(t1.c0))) AND (NULL))) ISNULL));
SELECT t1.c2, t1.c1, t1.c0, t0.c0 FROM t0, vt0 CROSS JOIN t1 ON (((((((((t1.c2)AND(t1.c2)))OR('7äš†6trYg].')))AND(')F')))OR(vt0.c0)) IN ());
SELECT DISTINCT t1.c1 FROM t0, t1, vt1, vt0;
SELECT DISTINCT t1.c1 FROM t0, t1, vt1, vt0 WHERE (((((((t0.c0)-(vt1.c1)))AND(0.004613703588762563)))AND(t1.c0))) UNION SELECT DISTINCT t1.c1 FROM t0, t1, vt1, vt0 WHERE ((NOT (((((((t0.c0)-(vt1.c1)))AND(0.004613703588762563)))AND(t1.c0))))) UNION SELECT DISTINCT t1.c1 FROM t0, t1, vt1, vt0 WHERE (((((((((t0.c0)-(vt1.c1)))AND(0.004613703588762563)))AND(t1.c0))) ISNULL));
SELECT DISTINCT t1.c1 FROM t0, t1, vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(((((MAX(GROUP_CONCAT(AVG(t1.c2))))OR(t1.c1)))OR(GROUP_CONCAT(t1.c2)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(((((MAX(GROUP_CONCAT(AVG(t1.c2))))OR(t1.c1)))OR(GROUP_CONCAT(t1.c2)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(((((MAX(GROUP_CONCAT(AVG(t1.c2))))OR(t1.c1)))OR(GROUP_CONCAT(t1.c2))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((vt1.c1 IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c1 IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, t0.c0, t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt0, t0, t1, vt1;
SELECT DISTINCT vt0.c0, t0.c0, t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt0, t0, t1, vt1 WHERE ((((NOT (t1.c0)))IS(CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt0.c0, t0.c0, t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt0, t0, t1, vt1 WHERE ((NOT ((((NOT (t1.c0)))IS(CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT vt0.c0, t0.c0, t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt0, t0, t1, vt1 WHERE ((((((NOT (t1.c0)))IS(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, t1.c0, t1.c2, vt1.c1, vt1.c0, t1.c1 FROM vt0, t0, t1, vt1;
SELECT ALL vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1;
SELECT vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1 FROM t1, vt1 WHERE ((- (((t1.c0) NOTNULL)))) GROUP BY vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1 UNION SELECT ALL vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1 FROM t1, vt1 WHERE ((NOT ((- (((t1.c0) NOTNULL)))))) GROUP BY vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1 UNION SELECT ALL vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1 FROM t1, vt1 WHERE ((((- (((t1.c0) NOTNULL)))) ISNULL)) GROUP BY vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1;
SELECT ALL vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1 FROM t1, vt1 GROUP BY vt1.c1, t1.c2, t1.c0, vt1.c0, t1.c1;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&(vt0.c0)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL t1.c1, vt1.c1, t1.c2, vt1.c0, t1.c0 FROM t1, vt1 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON (((((vt0.c0))=((vt1.c1)))) BETWEEN (t0.c0) AND (((((((((t1.c0)OR(vt0.c0)))OR(t1.c2)))OR(t1.c0)))AND(vt1.c1))));
SELECT ALL t1.c1, vt1.c1, t1.c2, vt1.c0, t1.c0 FROM t1, vt1 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON (((((vt0.c0))=((vt1.c1)))) BETWEEN (t0.c0) AND (((((((((t1.c0)OR(vt0.c0)))OR(t1.c2)))OR(t1.c0)))AND(vt1.c1)))) WHERE (((COALESCE(t0.c0, vt0.c0)) BETWEEN (UPPER(t1.c0)) AND (((vt1.c1) IS FALSE)))) UNION ALL SELECT t1.c1, vt1.c1, t1.c2, vt1.c0, t1.c0 FROM t1, vt1 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON (((((vt0.c0))==((vt1.c1)))) BETWEEN (t0.c0) AND (((((((((t1.c0)OR(vt0.c0)))OR(t1.c2)))OR(t1.c0)))AND(vt1.c1)))) WHERE ((NOT (((COALESCE(t0.c0, vt0.c0)) BETWEEN (UPPER(t1.c0)) AND (((vt1.c1) IS FALSE)))))) UNION ALL SELECT ALL t1.c1, vt1.c1, t1.c2, vt1.c0, t1.c0 FROM t1, vt1 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON (((((vt0.c0))==((vt1.c1)))) BETWEEN (t0.c0) AND (((((((((t1.c0)OR(vt0.c0)))OR(t1.c2)))OR(t1.c0)))AND(vt1.c1)))) WHERE (((((COALESCE(t0.c0, vt0.c0)) BETWEEN (UPPER(t1.c0)) AND (((vt1.c1) IS FALSE)))) ISNULL));
SELECT ALL t1.c1, vt1.c1, t1.c2, vt1.c0, t1.c0 FROM t1, vt1 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON (((((vt0.c0))=((vt1.c1)))) BETWEEN (t0.c0) AND (((((((((t1.c0)OR(vt0.c0)))OR(t1.c2)))OR(t1.c0)))AND(vt1.c1))));
SELECT DISTINCT t1.c1 FROM vt1, t1, t0;
SELECT DISTINCT t1.c1 FROM vt1, t1, t0 WHERE ((((t1.c2)) BETWEEN (((t1.c0 IN ()))) AND ((((((vt1.c1)AND(vt1.c0)))OR(t1.c0)))))) UNION SELECT DISTINCT t1.c1 FROM vt1, t1, t0 WHERE ((NOT ((((t1.c2)) BETWEEN (((t1.c0 IN ()))) AND ((((((vt1.c1)AND(vt1.c0)))OR(t1.c0)))))))) UNION SELECT DISTINCT t1.c1 FROM vt1, t1, t0 WHERE ((((((t1.c2)) BETWEEN (((t1.c0 IN ()))) AND ((((((vt1.c1)AND(vt1.c0)))OR(t1.c0)))))) ISNULL));
SELECT DISTINCT t1.c1 FROM vt1, t1, t0;
SELECT ALL vt1.c1 FROM t1, vt0, vt1, t0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t1, vt0, vt1, t0 WHERE (vt0.c0) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM t1, vt0, vt1, t0 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM t1, vt0, vt1, t0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t1, vt0, vt1, t0 GROUP BY vt1.c1;
SELECT ALL vt1.c0 FROM vt1, t1, vt0, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t1, vt0, t0 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((TOTAL(MAX(TOTAL(MIN(vt1.c1)))))) AND ((((TOTAL(TOTAL(t0.c0)))/(COUNT(TOTAL(MIN(MIN(vt1.c0))))))))) UNION ALL SELECT vt1.c0 FROM vt1, t1, vt0, t0 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((TOTAL(MAX(TOTAL(MIN(vt1.c1)))))) AND ((((TOTAL(TOTAL(t0.c0)))/(COUNT(TOTAL(MIN(MIN(vt1.c0))))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t1, vt0, t0 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((TOTAL(MAX(TOTAL(MIN(vt1.c1)))))) AND ((((TOTAL(TOTAL(t0.c0)))/(COUNT(TOTAL(MIN(MIN(vt1.c0)))))))))) ISNULL);
SELECT t1.c2 FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c2) NOT NULL)) BETWEEN (((t1.c1) NOT BETWEEN (t1.c2) AND (vt1.c1))) AND (((t1.c1)OR(t0.c0)))) CROSS JOIN t0 ON ((((vt0.c0) IS FALSE)) NOT NULL) LEFT OUTER JOIN vt1 ON ((- (t0.c0)) IN ((~ (t1.c2)), (((vt1.c1))>((t1.c2)))));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (UNLIKELY(DISTINCT (vt1.c0 IN ()))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (UNLIKELY(DISTINCT (vt1.c0 IN ()))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((UNLIKELY(DISTINCT (vt1.c0 IN ()))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL t1.c1, t1.c0, t1.c2, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR(((t1.c0) NOT BETWEEN (vt1.c1) AND (t1.c2)))))AND('1228005504')) FULL OUTER JOIN t1 ON (((t1.c2)) BETWEEN (((+ (vt1.c1)))) AND ((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END))) LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE NOCASE IN ()) GROUP BY t1.c1, t1.c0, t1.c2, vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0, t0.c0, t1.c1, t1.c2, vt1.c1, t1.c0 FROM t1, vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0, t1.c1, t1.c2, vt1.c1, t1.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0, t1.c1, t1.c2, vt1.c1, t1.c0 FROM t1, vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0, t1.c1, t1.c2, vt1.c1, t1.c0 HAVING CASE COUNT(t0.c0)  WHEN GROUP_CONCAT(GROUP_CONCAT(0xffffffffe86f6be8)) THEN ((COUNT(t1.c2)) IS FALSE) WHEN (NULL IN (vt0.c0)) THEN CASE t1.c2  WHEN GROUP_CONCAT(GROUP_CONCAT(SUM(MAX(0.7915115597690752)))) THEN t0.c0 ELSE vt0.c0 END WHEN COUNT(vt1.c1) THEN (((MAX(AVG(t1.c1))))==((t0.c0))) WHEN ((AVG(t1.c1)) NOT NULL) THEN ((vt1.c0)IS NOT(t1.c2)) WHEN SUM(MIN(t1.c1)) THEN COUNT(*) ELSE COUNT(*) END UNION ALL SELECT vt1.c0, vt0.c0, t0.c0, t1.c1, t1.c2, vt1.c1, t1.c0 FROM t1, vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0, t1.c1, t1.c2, vt1.c1, t1.c0 HAVING (NOT (CASE COUNT(t0.c0)  WHEN GROUP_CONCAT(GROUP_CONCAT(0xffffffffe86f6be8)) THEN ((COUNT(t1.c2)) IS FALSE) WHEN (NULL IN (vt0.c0)) THEN CASE t1.c2  WHEN GROUP_CONCAT(GROUP_CONCAT(SUM(MAX(0.7915115597690752)))) THEN t0.c0 ELSE vt0.c0 END WHEN COUNT(vt1.c1) THEN (((MAX(AVG(t1.c1))))==((t0.c0))) WHEN ((AVG(t1.c1)) NOT NULL) THEN ((vt1.c0)IS NOT(t1.c2)) WHEN SUM(MIN(t1.c1)) THEN COUNT(*) ELSE COUNT(*) END)) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0, t1.c1, t1.c2, vt1.c1, t1.c0 FROM t1, vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0, t1.c1, t1.c2, vt1.c1, t1.c0 HAVING ((CASE COUNT(t0.c0)  WHEN GROUP_CONCAT(GROUP_CONCAT(0xffffffffe86f6be8)) THEN ((COUNT(t1.c2)) IS FALSE) WHEN (NULL IN (vt0.c0)) THEN CASE t1.c2  WHEN GROUP_CONCAT(GROUP_CONCAT(SUM(MAX(0.7915115597690752)))) THEN t0.c0 ELSE vt0.c0 END WHEN COUNT(vt1.c1) THEN (((MAX(AVG(t1.c1))))=((t0.c0))) WHEN ((AVG(t1.c1)) NOT NULL) THEN ((vt1.c0)IS NOT(t1.c2)) WHEN SUM(MIN(t1.c1)) THEN COUNT(*) ELSE COUNT(*) END) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON '-220112594' COLLATE NOCASE INNER JOIN t0 ON CASE WHEN t1.c2 COLLATE RTRIM THEN vt1.c0 ELSE ((t1.c2) IS TRUE) END RIGHT OUTER JOIN t1 ON CAST(vt1.c0 AS INTEGER) COLLATE NOCASE;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE (((x'71c3') IS FALSE)) GROUP BY vt1.c1, t0.c0, vt1.c0 UNION SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((x'71c3') IS FALSE)))) GROUP BY vt1.c1, t0.c0, vt1.c0 UNION SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((x'71c3') IS FALSE)) ISNULL)) GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING GROUP_CONCAT(TOTAL(AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((GROUP_CONCAT(TOTAL(AVG(vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))>((((vt0.c0))>((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)%(vt0.c0)))>((((vt0.c0))>((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))>((((vt0.c0))>((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT t1.c1, t1.c0, t1.c2, vt0.c0 FROM t1 INNER JOIN vt0 ON '.~RR|3F' GROUP BY t1.c1, t1.c0, t1.c2, vt0.c0;
SELECT ALL t1.c1, t1.c0, t1.c2, vt0.c0 FROM t1 INNER JOIN vt0 ON '.~RR|3F' WHERE (((((t1.c1)AND(((t1.c0)==(t1.c2)))))OR((~ ('-1122209309'))))) GROUP BY t1.c1, t1.c0, t1.c2, vt0.c0 UNION SELECT t1.c1, t1.c0, t1.c2, vt0.c0 FROM t1 INNER JOIN vt0 ON '.~RR|3F' WHERE ((NOT (((((t1.c1)AND(((t1.c0)==(t1.c2)))))OR((~ ('-1122209309'))))))) GROUP BY t1.c1, t1.c0, t1.c2, vt0.c0 UNION SELECT t1.c1, t1.c0, t1.c2, vt0.c0 FROM t1 INNER JOIN vt0 ON '.~RR|3F' WHERE (((((((t1.c1)AND(((t1.c0)==(t1.c2)))))OR((~ ('-1122209309'))))) ISNULL)) GROUP BY t1.c1, t1.c0, t1.c2, vt0.c0;
SELECT t1.c1, t1.c0, t1.c2, vt0.c0 FROM t1 INNER JOIN vt0 ON '.~RR|3F' GROUP BY t1.c1, t1.c0, t1.c2, vt0.c0;
SELECT vt1.c1, vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c1, vt1.c0, t0.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c1, vt1.c0, t0.c0, vt0.c0 HAVING IFNULL(DISTINCT GROUP_CONCAT(TOTAL(t0.c0)), ((t0.c0) NOTNULL)) UNION ALL SELECT ALL vt1.c1, vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c1, vt1.c0, t0.c0, vt0.c0 HAVING (NOT (IFNULL(DISTINCT GROUP_CONCAT(TOTAL(t0.c0)), ((t0.c0) NOTNULL)))) UNION ALL SELECT vt1.c1, vt1.c0, t0.c0, vt0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c1, vt1.c0, t0.c0, vt0.c0 HAVING ((IFNULL(DISTINCT GROUP_CONCAT(TOTAL(t0.c0)), ((t0.c0) NOTNULL))) ISNULL);
SELECT vt0.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, vt0, t0;
SELECT ALL vt0.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, vt0, t0 WHERE (NULL) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, vt0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, vt0, t0 WHERE (((NULL) ISNULL));
SELECT vt0.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, t1, t0, vt0;
SELECT DISTINCT * FROM vt1, t1, t0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, t1, t0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, t1, t0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, t1, t0, vt0;
SELECT ALL t1.c1, vt0.c0, t1.c2 FROM vt0 LEFT OUTER JOIN t1 ON ((t1.c0) IS TRUE) RIGHT OUTER JOIN vt1 ON IFNULL(t1.c0 COLLATE RTRIM, '-2123855300') LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) GROUP BY t1.c1, vt0.c0, t1.c2;
SELECT ALL t1.c1, vt0.c0, t1.c2 FROM vt0 LEFT OUTER JOIN t1 ON ((t1.c0) IS TRUE) RIGHT OUTER JOIN vt1 ON IFNULL(t1.c0 COLLATE RTRIM, '-2123855300') LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE (CASE ((vt1.c1)GLOB('617396936'))  WHEN ((t0.c0) IS FALSE) THEN ((t1.c1)AND(vt0.c0)) WHEN ((vt0.c0)-('Qì§·}è«”H7\')) THEN CAST(vt1.c1 AS REAL) WHEN (+ (vt0.c0)) THEN CASE WHEN '0.31030422184338013' THEN t1.c1 WHEN t0.c0 THEN t1.c0 WHEN vt1.c0 THEN '2052570789' END ELSE CASE t1.c0  WHEN x'' THEN t1.c0 END END) GROUP BY t1.c1, vt0.c0, t1.c2 UNION SELECT ALL t1.c1, vt0.c0, t1.c2 FROM vt0 LEFT OUTER JOIN t1 ON ((t1.c0) IS TRUE) RIGHT OUTER JOIN vt1 ON IFNULL(t1.c0 COLLATE RTRIM, '-2123855300') LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE ((NOT (CASE ((vt1.c1)GLOB('617396936'))  WHEN ((t0.c0) IS FALSE) THEN ((t1.c1)AND(vt0.c0)) WHEN ((vt0.c0)-('Qì§·}è«”H7\')) THEN CAST(vt1.c1 AS REAL) WHEN (+ (vt0.c0)) THEN CASE WHEN '0.31030422184338013' THEN t1.c1 WHEN t0.c0 THEN t1.c0 WHEN vt1.c0 THEN '2052570789' END ELSE CASE t1.c0  WHEN x'' THEN t1.c0 END END))) GROUP BY t1.c1, vt0.c0, t1.c2 UNION SELECT ALL t1.c1, vt0.c0, t1.c2 FROM vt0 LEFT OUTER JOIN t1 ON ((t1.c0) IS TRUE) RIGHT OUTER JOIN vt1 ON IFNULL(t1.c0 COLLATE RTRIM, '-2123855300') LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE (((CASE ((vt1.c1)GLOB('617396936'))  WHEN ((t0.c0) IS FALSE) THEN ((t1.c1)AND(vt0.c0)) WHEN ((vt0.c0)-('Qì§·}è«”H7\')) THEN CAST(vt1.c1 AS REAL) WHEN (+ (vt0.c0)) THEN CASE WHEN '0.31030422184338013' THEN t1.c1 WHEN t0.c0 THEN t1.c0 WHEN vt1.c0 THEN '2052570789' END ELSE CASE t1.c0  WHEN x'' THEN t1.c0 END END) ISNULL)) GROUP BY t1.c1, vt0.c0, t1.c2;
SELECT ALL t1.c1, vt0.c0, t1.c2 FROM vt0 LEFT OUTER JOIN t1 ON ((t1.c0) IS TRUE) RIGHT OUTER JOIN vt1 ON IFNULL(t1.c0 COLLATE RTRIM, '-2123855300') LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) GROUP BY t1.c1, vt0.c0, t1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(MAX('-1e500')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(MAX('-1e500')))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(MAX('-1e500'))) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE ('w~1ç¼‹' COLLATE NOCASE) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT ('w~1ç¼‹' COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((('w~1ç¼‹' COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT * FROM vt1, vt0, t1 FULL OUTER JOIN t0 ON t1.c2;
SELECT DISTINCT * FROM vt1, vt0, t1 FULL OUTER JOIN t0 ON t1.c2 WHERE ((NOT (((t1.c2)&(x''))))) UNION SELECT DISTINCT * FROM vt1, vt0, t1 FULL OUTER JOIN t0 ON t1.c2 WHERE ((NOT ((NOT (((t1.c2)&(x''))))))) UNION SELECT DISTINCT * FROM vt1, vt0, t1 FULL OUTER JOIN t0 ON t1.c2 WHERE ((((NOT (((t1.c2)&(x''))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t1 FULL OUTER JOIN t0 ON t1.c2;
SELECT vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2 FROM vt1, t1, t0, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2;
SELECT vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2 FROM vt1, t1, t0, vt0 WHERE (((((t1.c1 COLLATE BINARY)OR(((vt1.c0)<=(vt1.c0)))))AND(((t0.c0) NOT NULL)))) GROUP BY vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2 FROM vt1, t1, t0, vt0 WHERE ((NOT (((((t1.c1 COLLATE BINARY)OR(((vt1.c0)<=(vt1.c0)))))AND(((t0.c0) NOT NULL)))))) GROUP BY vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2 FROM vt1, t1, t0, vt0 WHERE (((((((t1.c1 COLLATE BINARY)OR(((vt1.c0)<=(vt1.c0)))))AND(((t0.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2;
SELECT vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2 FROM vt1, t1, t0, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1, t0.c0, t1.c2;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING '0.26596197793948484' UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ('0.26596197793948484')) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (('0.26596197793948484') ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING '0.26596197793948484' UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ('0.26596197793948484')) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (('0.26596197793948484') ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t1.c1, vt1.c0, t1.c0, t0.c0, vt0.c0 FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0 COLLATE RTRIM))<(((((t1.c1, vt1.c0, NULL))>=((vt1.c1, vt0.c0, vt1.c1)))))) LEFT OUTER JOIN t1 ON ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c1)))OR(((t1.c0) ISNULL))))AND((- (x'')))))OR(((vt1.c0)>=(x'')))))AND(0Xd351982)) FULL OUTER JOIN vt0 ON INSTR(NULL, t1.c2 COLLATE RTRIM);
SELECT ALL vt0.c0, t1.c0, t1.c2, t1.c1 FROM t1, vt0 NOT INDEXED FULL OUTER JOIN t0 ON (vt0.c0 COLLATE BINARY IN ()) GROUP BY vt0.c0, t1.c0, t1.c2, t1.c1;
SELECT vt0.c0, t1.c0, t1.c2, t1.c1 FROM t1, vt0 FULL OUTER JOIN t0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE ('541507127') GROUP BY vt0.c0, t1.c0, t1.c2, t1.c1 UNION SELECT vt0.c0, t1.c0, t1.c2, t1.c1 FROM t1, vt0 FULL OUTER JOIN t0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE ((NOT ('541507127'))) GROUP BY vt0.c0, t1.c0, t1.c2, t1.c1 UNION SELECT vt0.c0, t1.c0, t1.c2, t1.c1 FROM t1, vt0 FULL OUTER JOIN t0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE ((('541507127') ISNULL)) GROUP BY vt0.c0, t1.c0, t1.c2, t1.c1;
SELECT ALL vt0.c0, t1.c0, t1.c2, t1.c1 FROM t1, vt0 NOT INDEXED FULL OUTER JOIN t0 ON (vt0.c0 COLLATE BINARY IN ()) GROUP BY vt0.c0, t1.c0, t1.c2, t1.c1;
SELECT ALL t1.c2, t1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))LIKE((vt1.c1 IN (t1.c2)))) GROUP BY t1.c2, t1.c1;
SELECT t1.c2, t1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))LIKE((vt1.c1 IN (t1.c2)))) GROUP BY t1.c2, t1.c1 HAVING SUM(((COUNT(*)) ISNULL)) UNION ALL SELECT t1.c2, t1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))LIKE((vt1.c1 IN (t1.c2)))) GROUP BY t1.c2, t1.c1 HAVING (NOT (SUM(((COUNT(*)) ISNULL)))) UNION ALL SELECT t1.c2, t1.c1 FROM t1, vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))LIKE((vt1.c1 IN (t1.c2)))) GROUP BY t1.c2, t1.c1 HAVING ((SUM(((COUNT(*)) ISNULL))) ISNULL);
SELECT * FROM vt0 CROSS JOIN t1 ON x'' COLLATE BINARY CROSS JOIN vt1 ON ((((t1.c1 IN ())))<((t1.c1 COLLATE RTRIM)));
SELECT * FROM vt0 CROSS JOIN t1 ON x'' COLLATE BINARY CROSS JOIN vt1 ON ((((t1.c1 IN ())))<((t1.c1 COLLATE RTRIM))) WHERE ((((vt0.c0, ((t1.c0)=(vt1.c1)), ((t1.c0)-(vt0.c0))))!=(((+ (0.7783243068410324)), CAST(vt0.c0 AS INTEGER), 0.5702543338184517)))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t1 ON x'' COLLATE BINARY CROSS JOIN vt1 ON ((((t1.c1 IN ())))<((t1.c1 COLLATE RTRIM))) WHERE ((NOT ((((vt0.c0, ((t1.c0)=(vt1.c1)), ((t1.c0)-(vt0.c0))))!=(((+ (0.7783243068410324)), CAST(vt0.c0 AS INTEGER), 0.5702543338184517)))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t1 ON x'' COLLATE BINARY CROSS JOIN vt1 ON ((((t1.c1 IN ())))<((t1.c1 COLLATE RTRIM))) WHERE ((((((vt0.c0, ((t1.c0)==(vt1.c1)), ((t1.c0)-(vt0.c0))))!=(((+ (0.7783243068410324)), CAST(vt0.c0 AS INTEGER), 0.5702543338184517)))) ISNULL));
SELECT * FROM vt0 CROSS JOIN t1 ON x'' COLLATE BINARY CROSS JOIN vt1 ON ((((t1.c1 IN ())))<((t1.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM t0, vt0 INDEXED BY i89, vt1;
SELECT ALL t1.c1, t1.c0, vt1.c0 FROM vt1, t0, vt0, t1 GROUP BY t1.c1, t1.c0, vt1.c0;
SELECT t1.c1, t1.c0, vt1.c0 FROM vt1, t0 NOT INDEXED, vt0, t1 WHERE ((+ (((t0.c0)<>(vt1.c0))))) GROUP BY t1.c1, t1.c0, vt1.c0 UNION SELECT ALL t1.c1, t1.c0, vt1.c0 FROM vt1, t0, vt0, t1 WHERE ((NOT ((+ (((t0.c0)!=(vt1.c0))))))) GROUP BY t1.c1, t1.c0, vt1.c0 UNION SELECT t1.c1, t1.c0, vt1.c0 FROM vt1, t0, vt0, t1 WHERE ((((+ (((t0.c0)<>(vt1.c0))))) ISNULL)) GROUP BY t1.c1, t1.c0, vt1.c0;
SELECT ALL t1.c1, t1.c0, vt1.c0 FROM vt1, t0, vt0, t1 GROUP BY t1.c1, t1.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (~ (TOTAL(AVG(AVG(MIN(MAX(COUNT(*)))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((~ (TOTAL(AVG(AVG(MIN(MAX(COUNT(*)))))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (((~ (TOTAL(AVG(AVG(MIN(MAX(COUNT(*))))))))) ISNULL);
SELECT t1.c0, vt0.c0, t1.c2, t0.c0, vt1.c0, t1.c1, vt1.c1 FROM vt1, vt0, t1, t0;
SELECT t1.c0, vt0.c0, t1.c2, t0.c0, vt1.c0, t1.c1, vt1.c1 FROM vt1, vt0, t1, t0 WHERE (((t1.c1 COLLATE BINARY)IS(t1.c2 COLLATE BINARY))) UNION ALL SELECT t1.c0, vt0.c0, t1.c2, t0.c0, vt1.c0, t1.c1, vt1.c1 FROM vt1, vt0, t1, t0 WHERE ((NOT (((t1.c1 COLLATE BINARY)IS(t1.c2 COLLATE BINARY))))) UNION ALL SELECT t1.c0, vt0.c0, t1.c2, t0.c0, vt1.c0, t1.c1, vt1.c1 FROM vt1, vt0, t1, t0 WHERE (((((t1.c1 COLLATE BINARY)IS(t1.c2 COLLATE BINARY))) ISNULL));
SELECT t1.c0, vt0.c0, t1.c2, t0.c0, vt1.c0, t1.c1, vt1.c1 FROM vt1, vt0, t1, t0;
SELECT DISTINCT vt1.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))<>(CASE WHEN vt1.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0 IN ()))!=(CASE WHEN vt1.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt1 WHERE ((((((vt0.c0 IN ()))!=(CASE WHEN vt1.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt0, vt1;
SELECT vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((LIKELY(DISTINCT t1.c2)) ISNULL) FULL OUTER JOIN vt1 ON (((0.3188034086864855))=((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) RIGHT OUTER JOIN t0 ON (~ (t1.c1)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((LIKELY(DISTINCT t1.c2)) ISNULL) FULL OUTER JOIN vt1 ON (((0.3188034086864855))==((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) RIGHT OUTER JOIN t0 ON (~ (t1.c1)) WHERE (((((((((((((0.0861522078956467)OR(((t1.c2) BETWEEN (vt1.c1) AND (t1.c2)))))OR(CASE t1.c1  WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END)))OR(t0.c0)))OR(((vt1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)))))OR(((vt0.c0) NOT NULL))))OR(IFNULL(t1.c1, vt1.c1)))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((LIKELY(DISTINCT t1.c2)) ISNULL) FULL OUTER JOIN vt1 ON (((0.3188034086864855))=((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) RIGHT OUTER JOIN t0 ON (~ (t1.c1)) WHERE ((NOT (((((((((((((0.0861522078956467)OR(((t1.c2) BETWEEN (vt1.c1) AND (t1.c2)))))OR(CASE t1.c1  WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END)))OR(t0.c0)))OR(((vt1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)))))OR(((vt0.c0) NOT NULL))))OR(IFNULL(t1.c1, vt1.c1)))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((LIKELY(DISTINCT t1.c2)) ISNULL) FULL OUTER JOIN vt1 ON (((0.3188034086864855))==((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) RIGHT OUTER JOIN t0 ON (~ (t1.c1)) WHERE (((((((((((((((0.0861522078956467)OR(((t1.c2) BETWEEN (vt1.c1) AND (t1.c2)))))OR(CASE t1.c1  WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END)))OR(t0.c0)))OR(((vt1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)))))OR(((vt0.c0) NOT NULL))))OR(IFNULL(t1.c1, vt1.c1)))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((LIKELY(DISTINCT t1.c2)) ISNULL) FULL OUTER JOIN vt1 ON (((0.3188034086864855))=((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) RIGHT OUTER JOIN t0 ON (~ (t1.c1)) GROUP BY vt1.c0, t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0 HAVING (- (COUNT(AVG(COUNT(*))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((- (COUNT(AVG(COUNT(*))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0 HAVING (((- (COUNT(AVG(COUNT(*)))))) ISNULL);
SELECT t1.c2 FROM t1;
SELECT ALL t1.c2 FROM t1 WHERE (t1.c1) UNION ALL SELECT ALL t1.c2 FROM t1 WHERE ((NOT (t1.c1))) UNION ALL SELECT t1.c2 FROM t1 WHERE (((t1.c1) ISNULL));
SELECT t1.c2 FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM vt1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 NATURAL JOIN t0 WHERE (((vt1.c0)||(x'6d134c8d'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((vt1.c0)||(x'6d134c8d'))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((vt1.c0)||(x'6d134c8d'))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT ALL t1.c2 FROM t0, t1, vt0 GROUP BY t1.c2;
SELECT ALL t1.c2 FROM t0, t1, vt0 GROUP BY t1.c2 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL t1.c2 FROM t0, t1, vt0 GROUP BY t1.c2 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL t1.c2 FROM t0, t1, vt0 GROUP BY t1.c2 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN NULL THEN ((vt1.c0)OR(NULL)) ELSE ((((((((vt1.c0)AND(t0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(t0.c0)) END;
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN NULL THEN ((vt1.c0)OR(NULL)) ELSE ((((((((vt1.c0)AND(t0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(t0.c0)) END WHERE (((((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)))-((+ (vt1.c0))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN NULL THEN ((vt1.c0)OR(NULL)) ELSE ((((((((vt1.c0)AND(t0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(t0.c0)) END WHERE ((NOT (((((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)))-((+ (vt1.c0))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN NULL THEN ((vt1.c0)OR(NULL)) ELSE ((((((((vt1.c0)AND(t0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(t0.c0)) END WHERE (((((((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)))-((+ (vt1.c0))))) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN NULL THEN ((vt1.c0)OR(NULL)) ELSE ((((((((vt1.c0)AND(t0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(t0.c0)) END;
SELECT DISTINCT * FROM t1, vt1, t0, vt0;
SELECT DISTINCT * FROM t1, vt1, t0, vt0 WHERE (vt1.c1) UNION SELECT DISTINCT * FROM t1, vt1 NOT INDEXED, t0, vt0 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT * FROM t1, vt1, t0, vt0 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT * FROM t1, vt1, t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 NOT INDEXED, t0 WHERE (CASE WHEN t0.c0 THEN CAST(vt0.c0 AS BLOB) ELSE CAST(t0.c0 AS BLOB) END) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN t0.c0 THEN CAST(vt0.c0 AS BLOB) ELSE CAST(t0.c0 AS BLOB) END))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN CAST(vt0.c0 AS BLOB) ELSE CAST(t0.c0 AS BLOB) END) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t1.c2, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c2, t1.c0, vt0.c0;
SELECT t1.c2, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c2, t1.c0, vt0.c0 HAVING TOTAL((((SUM(GROUP_CONCAT(AVG(t1.c1)))))==((t1.c0)))) UNION ALL SELECT t1.c2, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c2, t1.c0, vt0.c0 HAVING (NOT (TOTAL((((SUM(GROUP_CONCAT(AVG(t1.c1)))))=((t1.c0)))))) UNION ALL SELECT t1.c2, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c2, t1.c0, vt0.c0 HAVING ((TOTAL((((SUM(GROUP_CONCAT(AVG(t1.c1)))))=((t1.c0))))) ISNULL);
SELECT ALL t1.c2, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN t1 ON (((+ (t1.c2)))|(CAST(NULL AS BLOB)));
SELECT t1.c2, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN t1 ON (((+ (t1.c2)))|(CAST(NULL AS BLOB))) WHERE ('è—˜ãš—KP%#)*') UNION ALL SELECT ALL t1.c2, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN t1 ON (((+ (t1.c2)))|(CAST(NULL AS BLOB))) WHERE ((NOT ('è—˜ãš—KP%#)*'))) UNION ALL SELECT t1.c2, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN t1 ON (((+ (t1.c2)))|(CAST(NULL AS BLOB))) WHERE ((('è—˜ãš—KP%#)*') ISNULL));
SELECT ALL t1.c2, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN t1 ON (((+ (t1.c2)))|(CAST(NULL AS BLOB)));
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((+ (((vt0.c0)<>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((+ (((vt0.c0)!=(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL t1.c2 FROM t1 NATURAL JOIN t0 GROUP BY t1.c2;
SELECT t1.c2 FROM t1 NATURAL JOIN t0 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t1.c1))) AND (t1.c2))) GROUP BY t1.c2 UNION SELECT ALL t1.c2 FROM t1 NATURAL JOIN t0 WHERE ((NOT ((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t1.c1))) AND (t1.c2))))) GROUP BY t1.c2 UNION SELECT t1.c2 FROM t1 NATURAL JOIN t0 WHERE ((((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t1.c1))) AND (t1.c2))) ISNULL)) GROUP BY t1.c2;
SELECT ALL t1.c2 FROM t1 NATURAL JOIN t0 GROUP BY t1.c2;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(CAST(SUM(MAX(vt1.c1)) AS TEXT)) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(CAST(SUM(MAX(vt1.c1)) AS TEXT)))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(CAST(SUM(MAX(vt1.c1)) AS TEXT))) ISNULL);
SELECT ALL TOTAL((CAST(t1.c2 AS TEXT) IN ())) FROM vt0, t1, t0;
SELECT ALL * FROM vt0, t1, t0;
SELECT * FROM vt0, t1, t0 WHERE (((~ (vt0.c0)) IN (((t1.c2)GLOB(t1.c0))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE ((NOT (((~ (vt0.c0)) IN (((t1.c2)GLOB(t1.c0))))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE (((((~ (vt0.c0)) IN (((t1.c2)GLOB(t1.c0))))) ISNULL));
SELECT ALL * FROM vt0, t1, t0;
SELECT DISTINCT vt0.c0, t1.c2, vt1.c0, t0.c0, t1.c0, t1.c1, vt1.c1 FROM t0, vt1, t1, vt0;
SELECT DISTINCT vt0.c0, t1.c2, vt1.c0, t0.c0, t1.c0, t1.c1, vt1.c1 FROM t0, vt1, t1, vt0 WHERE (UNLIKELY((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) UNION SELECT DISTINCT vt0.c0, t1.c2, vt1.c0, t0.c0, t1.c0, t1.c1, vt1.c1 FROM t0, vt1, t1, vt0 WHERE ((NOT (UNLIKELY((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, t1.c2, vt1.c0, t0.c0, t1.c0, t1.c1, vt1.c1 FROM t0, vt1, t1, vt0 WHERE (((UNLIKELY((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c2, vt1.c0, t0.c0, t1.c0, t1.c1, vt1.c1 FROM t0, vt1, t1, vt0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((((vt1.c1)<(t0.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c1 END, vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((NOT ((((vt1.c1)<(t0.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c1 END, vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE ((((((vt1.c1)<(t0.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c1 END, vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT t1.c0 FROM t1 INDEXED BY i15 GROUP BY t1.c0;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(t1.c2) COLLATE NOCASE) UNION ALL SELECT * FROM t1 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(t1.c2) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(t1.c2) COLLATE NOCASE) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((((NULL, t0.c0, t0.c0))<>((vt0.c0, t0.c0, x'5bfa')))))=((1812535558)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((((NULL, t0.c0, t0.c0))<>((vt0.c0, t0.c0, x'5bfa')))))==((1812535558)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((((NULL, t0.c0, t0.c0))<>((vt0.c0, t0.c0, x'5bfa')))))==((1812535558)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t1.c2, vt0.c0, t1.c0 FROM t1, vt0 GROUP BY t1.c2, vt0.c0, t1.c0;
SELECT ALL t1.c2, vt0.c0, t1.c0 FROM t1, vt0 WHERE ((+ (highlight(t1.c1, t1.c2, t1.c1, t1.c0)))) GROUP BY t1.c2, vt0.c0, t1.c0 UNION SELECT ALL t1.c2, vt0.c0, t1.c0 FROM t1, vt0 WHERE ((NOT ((+ (highlight(t1.c1, t1.c2, t1.c1, t1.c0)))))) GROUP BY t1.c2, vt0.c0, t1.c0 UNION SELECT ALL t1.c2, vt0.c0, t1.c0 FROM t1, vt0 WHERE ((((+ (highlight(t1.c1, t1.c2, t1.c1, t1.c0)))) ISNULL)) GROUP BY t1.c2, vt0.c0, t1.c0;
SELECT t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0;
SELECT t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0 HAVING (~ ((t1.c0 IN ()))) UNION ALL SELECT ALL t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0 HAVING (NOT ((~ ((t1.c0 IN ()))))) UNION ALL SELECT ALL t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0 HAVING (((~ ((t1.c0 IN ())))) ISNULL);
SELECT t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0;
SELECT t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0 HAVING (~ ((t1.c0 IN ()))) UNION ALL SELECT ALL t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0 HAVING (NOT ((~ ((t1.c0 IN ()))))) UNION ALL SELECT ALL t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0 HAVING (((~ ((t1.c0 IN ())))) ISNULL);
SELECT t1.c1, vt1.c0 FROM t1, vt1 GROUP BY t1.c1, vt1.c0;
SELECT * FROM t1, vt0, t0, vt1;
SELECT * FROM t1, vt0, t0, vt1 WHERE (UPPER(DISTINCT (NOT (t1.c1)))) UNION ALL SELECT * FROM t1, vt0, t0, vt1 WHERE ((NOT (UPPER(DISTINCT (NOT (t1.c1)))))) UNION ALL SELECT ALL * FROM t1, vt0, t0, vt1 WHERE (((UPPER(DISTINCT (NOT (t1.c1)))) ISNULL));
SELECT * FROM t1, vt0, t0, vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON 0.5814512428264375 LEFT OUTER JOIN vt1 ON ((CASE t1.c1  WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END)GLOB(((vt0.c0)+(vt1.c1))));
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON 0.5814512428264375 LEFT OUTER JOIN vt1 ON ((CASE t1.c1  WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END)GLOB(((vt0.c0)+(vt1.c1)))) WHERE ((((((t1.c2))>((t1.c1)))) NOT BETWEEN (-3.53597992E8) AND (DATE(t1.c1, t1.c2, t1.c1)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON 0.5814512428264375 LEFT OUTER JOIN vt1 ON ((CASE t1.c1  WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END)GLOB(((vt0.c0)+(vt1.c1)))) WHERE ((NOT ((((((t1.c2))>((t1.c1)))) NOT BETWEEN (-3.53597992E8) AND (DATE(t1.c1, t1.c2, t1.c1)))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON 0.5814512428264375 LEFT OUTER JOIN vt1 ON ((CASE t1.c1  WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END)GLOB(((vt0.c0)+(vt1.c1)))) WHERE ((((((((t1.c2))>((t1.c1)))) NOT BETWEEN (-3.53597992E8) AND (DATE(t1.c1, t1.c2, t1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON 0.5814512428264375 LEFT OUTER JOIN vt1 ON ((CASE t1.c1  WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END)GLOB(((vt0.c0)+(vt1.c1))));
SELECT vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0 FROM vt1, t0, t1, vt0 GROUP BY vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0;
SELECT ALL vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0 FROM vt1, t0, t1, vt0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (CASE WHEN t1.c0 THEN t1.c1 WHEN vt1.c1 THEN 'kxe*5{' WHEN t0.c0 THEN t0.c0 END))) GROUP BY vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0 UNION SELECT vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0 FROM vt1, t0, t1, vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (CASE WHEN t1.c0 THEN t1.c1 WHEN vt1.c1 THEN 'kxe*5{' WHEN t0.c0 THEN t0.c0 END))))) GROUP BY vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0 UNION SELECT ALL vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0 FROM vt1, t0, t1, vt0 WHERE ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (CASE WHEN t1.c0 THEN t1.c1 WHEN vt1.c1 THEN 'kxe*5{' WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0;
SELECT vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0 FROM vt1, t0, t1, vt0 GROUP BY vt1.c0, t1.c0, t0.c0, t1.c1, vt0.c0;
SELECT t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1 NOT INDEXED, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1;
SELECT t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 HAVING 0xffffffff80ec4d49 UNION ALL SELECT t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 HAVING (NOT (0xffffffff80ec4d49)) UNION ALL SELECT ALL t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 HAVING ((0xffffffff80ec4d49) ISNULL);
SELECT t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1 NOT INDEXED, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1;
SELECT t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 HAVING 0xffffffff80ec4d49 UNION ALL SELECT t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 HAVING (NOT (0xffffffff80ec4d49)) UNION ALL SELECT ALL t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 HAVING ((0xffffffff80ec4d49) ISNULL);
SELECT t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1 FROM vt0, vt1, t1 NOT INDEXED, t0 GROUP BY t0.c0, vt1.c0, t1.c0, t1.c2, t1.c1, vt1.c1;
SELECT ALL t0.c0, t1.c2, t1.c1 FROM vt0, t1, vt1 CROSS JOIN t0 ON NULL;
SELECT ALL t0.c0, t1.c2, t1.c1 FROM vt0, t1, vt1 CROSS JOIN t0 ON NULL WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT)) UNION ALL SELECT t0.c0, t1.c2, t1.c1 FROM vt0, t1, vt1 CROSS JOIN t0 ON NULL WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS TEXT)))) UNION ALL SELECT t0.c0, t1.c2, t1.c1 FROM vt0, t1, vt1 CROSS JOIN t0 ON NULL WHERE (((CAST(CAST(vt0.c0 AS REAL) AS TEXT)) ISNULL));
SELECT ALL t0.c0, t1.c2, t1.c1 FROM vt0, t1, vt1 CROSS JOIN t0 ON NULL;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1 FROM vt0, t1, vt1 GROUP BY vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1;
SELECT vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1 FROM vt0, t1, vt1 WHERE (((t1.c0 IN ()) IN (((vt0.c0) BETWEEN (t1.c2) AND (vt1.c0))))) GROUP BY vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1 UNION SELECT vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1 FROM vt0, t1, vt1 WHERE ((NOT (((t1.c0 IN ()) IN (((vt0.c0) BETWEEN (t1.c2) AND (vt1.c0))))))) GROUP BY vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1 UNION SELECT vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1 FROM vt0, t1, vt1 WHERE (((((t1.c0 IN ()) IN (((vt0.c0) BETWEEN (t1.c2) AND (vt1.c0))))) ISNULL)) GROUP BY vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1;
SELECT ALL vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1 FROM vt0, t1, vt1 GROUP BY vt0.c0, t1.c2, vt1.c0, t1.c0, vt1.c1, t1.c1;
SELECT t0.c0, t1.c2, t1.c0, vt1.c0, vt0.c0, vt1.c1, t1.c1 FROM t1, vt0, t0, vt1 GROUP BY t0.c0, t1.c2, t1.c0, vt1.c0, vt0.c0, vt1.c1, t1.c1;
SELECT ALL t0.c0, t1.c2, t1.c0, vt1.c0, vt0.c0, vt1.c1, t1.c1 FROM t1 NOT INDEXED, vt0, t0, vt1 GROUP BY t0.c0, t1.c2, t1.c0, vt1.c0, vt0.c0, vt1.c1, t1.c1 HAVING (((SUM(MAX(t1.c2)))) BETWEEN ((COUNT(t0.c0))) AND ((vt1.c0))) UNION ALL SELECT ALL t0.c0, t1.c2, t1.c0, vt1.c0, vt0.c0, vt1.c1, t1.c1 FROM t1, vt0, t0, vt1 GROUP BY t0.c0, t1.c2, t1.c0, vt1.c0, vt0.c0, vt1.c1, t1.c1 HAVING (NOT ((((SUM(MAX(t1.c2)))) BETWEEN ((COUNT(t0.c0))) AND ((vt1.c0))))) UNION ALL SELECT ALL t0.c0, t1.c2, t1.c0, vt1.c0, vt0.c0, vt1.c1, t1.c1 FROM t1, vt0, t0, vt1 GROUP BY t0.c0, t1.c2, t1.c0, vt1.c0, vt0.c0, vt1.c1, t1.c1 HAVING (((((SUM(MAX(t1.c2)))) BETWEEN ((COUNT(t0.c0))) AND ((vt1.c0)))) ISNULL);
SELECT ALL TOTAL(CAST(CASE WHEN '0.6029102660217838' THEN vt0.c0 ELSE vt0.c0 END AS REAL)) FROM vt0, vt1 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN x'0adcb2c7' THEN vt1.c1 END)||(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT * FROM vt0, t1, t0;
SELECT * FROM vt0, t1, t0 NOT INDEXED WHERE (((((t1.c2 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c2 THEN NULL END)))OR((~ ('f'))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE ((NOT (((((t1.c2 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c2 THEN NULL END)))OR((~ ('f'))))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE (((((((t1.c2 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c2 THEN NULL END)))OR((~ ('f'))))) ISNULL));
SELECT * FROM vt0, t1, t0;
SELECT DISTINCT * FROM t0, vt1, vt0, t1;
SELECT DISTINCT * FROM t0, vt1, vt0, t1 WHERE ((((t1.c0, vt1.c1, t1.c1)) BETWEEN ((CASE WHEN t1.c2 THEN vt1.c1 ELSE vt1.c0 END, ((((t1.c1)OR(t1.c2)))AND(t0.c0)), -8.28757789E8)) AND ((CAST(t0.c0 AS TEXT), (~ (0Xffffffffb49da706)), CASE vt1.c0  WHEN x'5b5c' THEN t1.c1 END)))) UNION SELECT DISTINCT * FROM t0, vt1, vt0, t1 WHERE ((NOT ((((t1.c0, vt1.c1, t1.c1)) BETWEEN ((CASE WHEN t1.c2 THEN vt1.c1 ELSE vt1.c0 END, ((((t1.c1)OR(t1.c2)))AND(t0.c0)), -8.28757789E8)) AND ((CAST(t0.c0 AS TEXT), (~ (0xffffffffb49da706)), CASE vt1.c0  WHEN x'5b5c' THEN t1.c1 END)))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0, t1 WHERE ((((((t1.c0, vt1.c1, t1.c1)) BETWEEN ((CASE WHEN t1.c2 THEN vt1.c1 ELSE vt1.c0 END, ((((t1.c1)OR(t1.c2)))AND(t0.c0)), -8.28757789E8)) AND ((CAST(t0.c0 AS TEXT), (~ (0xffffffffb49da706)), CASE vt1.c0  WHEN x'5b5c' THEN t1.c1 END)))) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0, t1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt0.c0, t1.c2, t1.c0, t1.c1 FROM vt0, t1 GROUP BY vt0.c0, t1.c2, t1.c0, t1.c1;
SELECT vt0.c0, t1.c2, t1.c0, t1.c1 FROM vt0, t1 GROUP BY vt0.c0, t1.c2, t1.c0, t1.c1 HAVING AVG(((COUNT(SUM(vt0.c0))) BETWEEN (COUNT(AVG(0x78613b0b))) AND (t1.c0))) UNION ALL SELECT vt0.c0, t1.c2, t1.c0, t1.c1 FROM vt0, t1 GROUP BY vt0.c0, t1.c2, t1.c0, t1.c1 HAVING (NOT (AVG(((COUNT(SUM(vt0.c0))) BETWEEN (COUNT(AVG(0x78613b0b))) AND (t1.c0))))) UNION ALL SELECT vt0.c0, t1.c2, t1.c0, t1.c1 FROM vt0, t1 GROUP BY vt0.c0, t1.c2, t1.c0, t1.c1 HAVING ((AVG(((COUNT(SUM(vt0.c0))) BETWEEN (COUNT(AVG(0X78613b0b))) AND (t1.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN 'æ³‚)k ' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE x'' END) IS TRUE)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN 'æ³‚)k ' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE x'' END) IS TRUE)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN 'æ³‚)k ' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE x'' END) IS TRUE)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0))!=((t0.c0)))) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0))!=((t0.c0)))) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0))<>((t0.c0)))) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN vt0 ON ('-1168751181' IN (t1.c2, vt0.c0)) COLLATE BINARY GROUP BY vt0.c0, t1.c1, t1.c0;
SELECT ALL vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN vt0 ON ('-1168751181' IN (t1.c2, vt0.c0)) COLLATE BINARY WHERE (highlight(((t1.c0) IS FALSE), json_extract(t1.c1, t1.c2, t1.c2, vt0.c0), t1.c2 COLLATE RTRIM, ((t1.c2)<<(t1.c1)))) GROUP BY vt0.c0, t1.c1, t1.c0 UNION SELECT vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN vt0 ON ('-1168751181' IN (t1.c2, vt0.c0)) COLLATE BINARY WHERE ((NOT (highlight(((t1.c0) IS FALSE), json_extract(t1.c1, t1.c2, t1.c2, vt0.c0), t1.c2 COLLATE RTRIM, ((t1.c2)<<(t1.c1)))))) GROUP BY vt0.c0, t1.c1, t1.c0 UNION SELECT ALL vt0.c0, t1.c1, t1.c0 FROM t1 INNER JOIN vt0 ON ('-1168751181' IN (t1.c2, vt0.c0)) COLLATE BINARY WHERE (((highlight(((t1.c0) IS FALSE), json_extract(t1.c1, t1.c2, t1.c2, vt0.c0), t1.c2 COLLATE RTRIM, ((t1.c2)<<(t1.c1)))) ISNULL)) GROUP BY vt0.c0, t1.c1, t1.c0;
SELECT t1.c2, t1.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, t1, t0 GROUP BY t1.c2, t1.c0, vt1.c0, t0.c0, vt1.c1;
SELECT ALL t1.c2, t1.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, t1, t0 GROUP BY t1.c2, t1.c0, vt1.c0, t0.c0, vt1.c1 HAVING CASE CASE WHEN GROUP_CONCAT(t0.c0) THEN t0.c0 END  WHEN CAST(TOTAL(vt1.c0) AS TEXT) THEN ((((vt1.c0)AND(0.20051083445359186)))AND(t0.c0)) WHEN TOTAL(AVG(t1.c1)) THEN ((COUNT(COUNT(*))) BETWEEN (SUM(t0.c0)) AND (COUNT(*))) WHEN NULL THEN MAX(COUNT(*)) COLLATE NOCASE WHEN GROUP_CONCAT(vt1.c1) THEN TOTAL(t1.c0) WHEN MIN(GROUP_CONCAT(vt1.c0)) THEN TOTAL(COUNT(*)) END UNION ALL SELECT t1.c2, t1.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, t1, t0 GROUP BY t1.c2, t1.c0, vt1.c0, t0.c0, vt1.c1 HAVING (NOT (CASE CASE WHEN GROUP_CONCAT(t0.c0) THEN t0.c0 END  WHEN CAST(TOTAL(vt1.c0) AS TEXT) THEN ((((vt1.c0)AND(0.20051083445359186)))AND(t0.c0)) WHEN TOTAL(AVG(t1.c1)) THEN ((COUNT(COUNT(*))) BETWEEN (SUM(t0.c0)) AND (COUNT(*))) WHEN NULL THEN MAX(COUNT(*)) COLLATE NOCASE WHEN GROUP_CONCAT(vt1.c1) THEN TOTAL(t1.c0) WHEN MIN(GROUP_CONCAT(vt1.c0)) THEN TOTAL(COUNT(*)) END)) UNION ALL SELECT t1.c2, t1.c0, vt1.c0, t0.c0, vt1.c1 FROM vt1, t1, t0 GROUP BY t1.c2, t1.c0, vt1.c0, t0.c0, vt1.c1 HAVING ((CASE CASE WHEN GROUP_CONCAT(t0.c0) THEN t0.c0 END  WHEN CAST(TOTAL(vt1.c0) AS TEXT) THEN ((((vt1.c0)AND(0.20051083445359186)))AND(t0.c0)) WHEN TOTAL(AVG(t1.c1)) THEN ((COUNT(COUNT(*))) BETWEEN (SUM(t0.c0)) AND (COUNT(*))) WHEN NULL THEN MAX(COUNT(*)) COLLATE NOCASE WHEN GROUP_CONCAT(vt1.c1) THEN TOTAL(t1.c0) WHEN MIN(GROUP_CONCAT(vt1.c0)) THEN TOTAL(COUNT(*)) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((('')+(vt0.c0)))>=(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((('')+(vt0.c0)))>=(((vt0.c0) IS TRUE)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((('')+(vt0.c0)))>=(((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t1.c1, t0.c0, t1.c2 FROM t0, t1;
SELECT DISTINCT t1.c1, t0.c0, t1.c2 FROM t0, t1 WHERE (((((((((((((((t1.c1) IS FALSE))AND(TYPEOF(DISTINCT t1.c2))))AND((- (t1.c2)))))AND((- (t1.c2)))))OR((- (t1.c2)))))OR(0x12bfbf77)))OR(CAST(t0.c0 AS REAL)))) UNION SELECT DISTINCT t1.c1, t0.c0, t1.c2 FROM t0, t1 WHERE ((NOT (((((((((((((((t1.c1) IS FALSE))AND(TYPEOF(DISTINCT t1.c2))))AND((- (t1.c2)))))AND((- (t1.c2)))))OR((- (t1.c2)))))OR(0X12bfbf77)))OR(CAST(t0.c0 AS REAL)))))) UNION SELECT DISTINCT t1.c1, t0.c0, t1.c2 FROM t0, t1 WHERE (((((((((((((((((t1.c1) IS FALSE))AND(TYPEOF(DISTINCT t1.c2))))AND((- (t1.c2)))))AND((- (t1.c2)))))OR((- (t1.c2)))))OR(0x12bfbf77)))OR(CAST(t0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT t1.c1, t0.c0, t1.c2 FROM t0, t1;
SELECT t0.c0, vt1.c1, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON '-2057982961' GROUP BY t0.c0, vt1.c1, vt1.c0;
SELECT t0.c0, vt1.c1, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON '-2057982961' WHERE (((t0.c0 COLLATE BINARY)>(CASE t0.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY t0.c0, vt1.c1, vt1.c0 UNION SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON '-2057982961' WHERE ((NOT (((t0.c0 COLLATE BINARY)>(CASE t0.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY t0.c0, vt1.c1, vt1.c0 UNION SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON '-2057982961' WHERE (((((t0.c0 COLLATE BINARY)>(CASE t0.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY t0.c0, vt1.c1, vt1.c0;
SELECT t0.c0, vt1.c1, vt1.c0 FROM vt0, t0 CROSS JOIN vt1 ON '-2057982961' GROUP BY t0.c0, vt1.c1, vt1.c0;
SELECT vt0.c0, t1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt0.c0, t1.c1;
SELECT vt0.c0, t1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt0.c0, t1.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t1.c1 FROM t1, vt0 NOT INDEXED, t0, vt1 GROUP BY vt0.c0, t1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t1.c1 FROM t1 NOT INDEXED, vt0, t0, vt1 GROUP BY vt0.c0, t1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt0.c0, t1.c1;
SELECT vt0.c0, t1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt0.c0, t1.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t1.c1 FROM t1, vt0 NOT INDEXED, t0, vt1 GROUP BY vt0.c0, t1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t1.c1 FROM t1 NOT INDEXED, vt0, t0, vt1 GROUP BY vt0.c0, t1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t1.c1 FROM t1, vt0, t0, vt1 GROUP BY vt0.c0, t1.c1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, t1.c2 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c2 FROM t0, t1 WHERE (((x'') ISNULL)) UNION SELECT DISTINCT t0.c0, t1.c2 FROM t0, t1 WHERE ((NOT (((x'') ISNULL)))) UNION SELECT DISTINCT t0.c0, t1.c2 FROM t0, t1 WHERE (((((x'') ISNULL)) ISNULL));
SELECT DISTINCT t0.c0, t1.c2 FROM t0, t1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOTNULL)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) NOTNULL)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) NOTNULL)) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0;
SELECT ALL t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 HAVING ((((vt1.c0)%(vt1.c0))) NOT NULL) UNION ALL SELECT ALL t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 HAVING (NOT (((((vt1.c0)%(vt1.c0))) NOT NULL))) UNION ALL SELECT t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 HAVING ((((((vt1.c0)%(vt1.c0))) NOT NULL)) ISNULL);
SELECT t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0;
SELECT ALL t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 HAVING ((((vt1.c0)%(vt1.c0))) NOT NULL) UNION ALL SELECT ALL t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 HAVING (NOT (((((vt1.c0)%(vt1.c0))) NOT NULL))) UNION ALL SELECT t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 HAVING ((((((vt1.c0)%(vt1.c0))) NOT NULL)) ISNULL);
SELECT t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0 FROM t1, vt1 INNER JOIN t0 ON (((t1.c2)) BETWEEN (((((t1.c2))>=((t0.c0))))) AND ((((vt1.c1) BETWEEN (t1.c0) AND (t0.c0))))) GROUP BY t1.c2, t1.c1, t0.c0, vt1.c1, vt1.c0;
SELECT t1.c1 FROM t1, t0, vt0, vt1;
SELECT t1.c1 FROM t1, t0, vt0, vt1 NOT INDEXED WHERE (CAST(t1.c2 AS INTEGER) COLLATE NOCASE) UNION ALL SELECT ALL t1.c1 FROM t1, t0, vt0, vt1 WHERE ((NOT (CAST(t1.c2 AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT ALL t1.c1 FROM t1, t0, vt0, vt1 WHERE (((CAST(t1.c2 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT t1.c1 FROM t1, t0, vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (TRIM((((vt1.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c1, vt1.c1))), 0.6147292215390842)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (TRIM((((vt1.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c1, vt1.c1))), 0.6147292215390842)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((TRIM((((vt1.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c1, vt1.c1))), 0.6147292215390842)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0;
SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 WHERE (x'') GROUP BY vt1.c1, t0.c0 UNION SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 WHERE ((NOT (x''))) GROUP BY vt1.c1, t0.c0 UNION SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c1, t0.c0;
SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0;
SELECT t0.c0, t1.c0 FROM vt1, t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM vt1, t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((SUM(COUNT(*)))==(((t1.c2) IS TRUE))) UNION ALL SELECT t0.c0, t1.c0 FROM vt1, t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (((SUM(COUNT(*)))==(((t1.c2) IS TRUE))))) UNION ALL SELECT t0.c0, t1.c0 FROM vt1, t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((((SUM(COUNT(*)))=(((t1.c2) IS TRUE)))) ISNULL);
SELECT ALL MAX((NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((~ (vt0.c0))) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT * FROM t1, vt1 CROSS JOIN vt0 ON ((((((t1.c0)<>(vt1.c0)))OR(vt1.c0)))OR(((vt1.c1) IS TRUE)));
SELECT ALL * FROM t1, vt1 CROSS JOIN vt0 ON ((((((t1.c0)<>(vt1.c0)))OR(vt1.c0)))OR(((vt1.c1) IS TRUE))) WHERE ((((t1.c2)) NOT BETWEEN ((CAST(t1.c2 AS INTEGER))) AND (((t1.c2 IN ()))))) UNION ALL SELECT * FROM t1, vt1 CROSS JOIN vt0 ON ((((((t1.c0)!=(vt1.c0)))OR(vt1.c0)))OR(((vt1.c1) IS TRUE))) WHERE ((NOT ((((t1.c2)) NOT BETWEEN ((CAST(t1.c2 AS INTEGER))) AND (((t1.c2 IN ()))))))) UNION ALL SELECT * FROM t1, vt1 CROSS JOIN vt0 ON ((((((t1.c0)!=(vt1.c0)))OR(vt1.c0)))OR(((vt1.c1) IS TRUE))) WHERE ((((((t1.c2)) NOT BETWEEN ((CAST(t1.c2 AS INTEGER))) AND (((t1.c2 IN ()))))) ISNULL));
SELECT * FROM t1, vt1 CROSS JOIN vt0 ON ((((((t1.c0)<>(vt1.c0)))OR(vt1.c0)))OR(((vt1.c1) IS TRUE)));
SELECT DISTINCT t1.c1, t0.c0, t1.c2, t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c1, t0.c0, t1.c2, t1.c0 FROM t0, t1 WHERE (CAST(((((t1.c0)OR(t1.c2)))AND(t0.c0)) AS INTEGER)) UNION SELECT DISTINCT t1.c1, t0.c0, t1.c2, t1.c0 FROM t0, t1 WHERE ((NOT (CAST(((((t1.c0)OR(t1.c2)))AND(t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT t1.c1, t0.c0, t1.c2, t1.c0 FROM t0, t1 WHERE (((CAST(((((t1.c0)OR(t1.c2)))AND(t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT t1.c1, t0.c0, t1.c2, t1.c0 FROM t0, t1;
SELECT t1.c1 FROM t1 NATURAL JOIN t0 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 NATURAL JOIN t0 WHERE (((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))||((((t1.c1, t1.c1, t1.c2, t1.c2, t0.c0))<>((t1.c2, t1.c0, t1.c2, t1.c0, '0.5729364361912478')))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 NATURAL JOIN t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))||((((t1.c1, t1.c1, t1.c2, t1.c2, t0.c0))<>((t1.c2, t1.c0, t1.c2, t1.c0, '0.5729364361912478')))))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 NATURAL JOIN t0 WHERE (((((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))||((((t1.c1, t1.c1, t1.c2, t1.c2, t0.c0))!=((t1.c2, t1.c0, t1.c2, t1.c0, '0.5729364361912478')))))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 NATURAL JOIN t0 GROUP BY t1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING MAX(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (MAX(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((MAX(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM vt0, vt1, t0 INNER JOIN t1 ON ((((t0.c0) IS TRUE)) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c1)IS('V'))));
SELECT ALL * FROM vt0, vt1, t0 INNER JOIN t1 ON ((((t0.c0) IS TRUE)) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c1)IS('V')))) WHERE ((~ (((t1.c2) NOTNULL)))) UNION ALL SELECT * FROM vt0, vt1, t0 INNER JOIN t1 ON ((((t0.c0) IS TRUE)) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c1)IS('V')))) WHERE ((NOT ((~ (((t1.c2) NOTNULL)))))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 INNER JOIN t1 ON ((((t0.c0) IS TRUE)) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c1)IS('V')))) WHERE ((((~ (((t1.c2) NOTNULL)))) ISNULL));
SELECT * FROM vt0, vt1, t0 INNER JOIN t1 ON ((((t0.c0) IS TRUE)) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c1)IS('V'))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)LIKE(t0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)LIKE(t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c1 FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) WHERE (TRIM(DISTINCT ((vt1.c0) ISNULL), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) WHERE ((NOT (TRIM(DISTINCT ((vt1.c0) ISNULL), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) WHERE (((TRIM(DISTINCT ((vt1.c0) ISNULL), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY vt1.c1;
SELECT t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2;
SELECT t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2 HAVING (SUM(MIN(t1.c1)) IN ()) UNION ALL SELECT ALL t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2 HAVING (NOT ((SUM(MIN(t1.c1)) IN ()))) UNION ALL SELECT ALL t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2 HAVING (((SUM(MIN(t1.c1)) IN ())) ISNULL);
SELECT t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2;
SELECT t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2 HAVING (SUM(MIN(t1.c1)) IN ()) UNION ALL SELECT ALL t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2 HAVING (NOT ((SUM(MIN(t1.c1)) IN ()))) UNION ALL SELECT ALL t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2 HAVING (((SUM(MIN(t1.c1)) IN ())) ISNULL);
SELECT t0.c0, t1.c0, t1.c2 FROM t1, t0 GROUP BY t0.c0, t1.c0, t1.c2;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((x'')) BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((x'')) BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((x'')) BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, t1.c2, t1.c0, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON ((NULL)<=((t0.c0 IN (t1.c2, t0.c0))));
SELECT DISTINCT vt1.c0, t1.c2, t1.c0, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON ((NULL)<=((t0.c0 IN (t1.c2, t0.c0)))) WHERE (t0.c0) UNION SELECT DISTINCT vt1.c0, t1.c2, t1.c0, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON ((NULL)<=((t0.c0 IN (t1.c2, t0.c0)))) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT vt1.c0, t1.c2, t1.c0, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON ((NULL)<=((t0.c0 IN (t1.c2, t0.c0)))) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT vt1.c0, t1.c2, t1.c0, t0.c0, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN t1 ON ((NULL)<=((t0.c0 IN (t1.c2, t0.c0))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1;
SELECT ALL t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 HAVING ((((GROUP_CONCAT(t1.c1))AND(SUM(vt1.c1) COLLATE BINARY)))OR(((((((((MIN(t1.c0))AND(t1.c0)))OR(vt1.c1)))OR(TOTAL(t1.c0))))AND(0xffffffff9de7cb31)))) UNION ALL SELECT t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 HAVING (NOT (((((GROUP_CONCAT(t1.c1))AND(SUM(vt1.c1) COLLATE BINARY)))OR(((((((((MIN(t1.c0))AND(t1.c0)))OR(vt1.c1)))OR(TOTAL(t1.c0))))AND(0xffffffff9de7cb31)))))) UNION ALL SELECT t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 HAVING ((((((GROUP_CONCAT(t1.c1))AND(SUM(vt1.c1) COLLATE BINARY)))OR(((((((((MIN(t1.c0))AND(t1.c0)))OR(vt1.c1)))OR(TOTAL(t1.c0))))AND(0xffffffff9de7cb31))))) ISNULL);
SELECT ALL t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1;
SELECT ALL t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 HAVING ((((GROUP_CONCAT(t1.c1))AND(SUM(vt1.c1) COLLATE BINARY)))OR(((((((((MIN(t1.c0))AND(t1.c0)))OR(vt1.c1)))OR(TOTAL(t1.c0))))AND(0xffffffff9de7cb31)))) UNION ALL SELECT t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 HAVING (NOT (((((GROUP_CONCAT(t1.c1))AND(SUM(vt1.c1) COLLATE BINARY)))OR(((((((((MIN(t1.c0))AND(t1.c0)))OR(vt1.c1)))OR(TOTAL(t1.c0))))AND(0xffffffff9de7cb31)))))) UNION ALL SELECT t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 HAVING ((((((GROUP_CONCAT(t1.c1))AND(SUM(vt1.c1) COLLATE BINARY)))OR(((((((((MIN(t1.c0))AND(t1.c0)))OR(vt1.c1)))OR(TOTAL(t1.c0))))AND(0xffffffff9de7cb31))))) ISNULL);
SELECT ALL t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN t1 ON (CAST(t1.c0 AS REAL) IN ()) INNER JOIN vt1 ON CAST((NOT (vt1.c0)) AS INTEGER) GROUP BY t1.c1, t1.c2, vt0.c0, t1.c0, vt1.c0, vt1.c1;
SELECT * FROM vt1, t1, t0, vt0;
SELECT ALL * FROM vt1, t1, t0, vt0 WHERE (((CAST(0x4a9da4be AS INTEGER)) ISNULL)) UNION ALL SELECT * FROM vt1, t1, t0, vt0 WHERE ((NOT (((CAST(0x4a9da4be AS INTEGER)) ISNULL)))) UNION ALL SELECT ALL * FROM vt1, t1, t0, vt0 WHERE (((((CAST(0x4a9da4be AS INTEGER)) ISNULL)) ISNULL));
SELECT * FROM vt1, t1, t0, vt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)LIKE(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END THEN NULL WHEN '0.4858870806627328' THEN ((vt1.c0) NOTNULL) WHEN '-2071199773' THEN (vt1.c1 IN (vt1.c0)) ELSE ((vt1.c0)<<(vt1.c0)) END) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)LIKE(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END THEN NULL WHEN '0.4858870806627328' THEN ((vt1.c0) NOTNULL) WHEN '-2071199773' THEN (vt1.c1 IN (vt1.c0)) ELSE ((vt1.c0)<<(vt1.c0)) END))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)LIKE(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END THEN NULL WHEN '0.4858870806627328' THEN ((vt1.c0) NOTNULL) WHEN '-2071199773' THEN (vt1.c1 IN (vt1.c0)) ELSE ((vt1.c0)<<(vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1, t1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t1 WHERE (((vt1.c1)|(t1.c2))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t1 WHERE ((NOT (((vt1.c1)|(t1.c2))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t1 WHERE (((((vt1.c1)|(t1.c2))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(json_remove(MAX(t0.c0), t0.c0) AS NUMERIC) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(json_remove(MAX(t0.c0), t0.c0) AS NUMERIC))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(json_remove(MAX(t0.c0), t0.c0) AS NUMERIC)) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL))LIKE(((t0.c0)<(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS REAL))LIKE(((t0.c0)<(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))LIKE(((t0.c0)<(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((CAST(t0.c0 AS BLOB))>(CAST(t0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB))>(CAST(t0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((CAST(t0.c0 AS BLOB))>(CAST(t0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT t0.c0, vt1.c0, vt1.c1, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt1.c1, vt0.c0 FROM t0, vt1, vt0 WHERE (((t0.c0 IN (vt1.c1, vt1.c1)) IN ())) GROUP BY t0.c0, vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL t0.c0, vt1.c0, vt1.c1, vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((t0.c0 IN (vt1.c1, vt1.c1)) IN ())))) GROUP BY t0.c0, vt1.c0, vt1.c1, vt0.c0 UNION SELECT t0.c0, vt1.c0, vt1.c1, vt0.c0 FROM t0, vt1, vt0 WHERE (((((t0.c0 IN (vt1.c1, vt1.c1)) IN ())) ISNULL)) GROUP BY t0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT t0.c0, vt1.c0, vt1.c1, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT t1.c0, t1.c1, vt0.c0, vt1.c0, t1.c2 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((t1.c0 COLLATE BINARY)*(SQLITE_COMPILEOPTION_USED(t1.c0))) GROUP BY t1.c0, t1.c1, vt0.c0, vt1.c0, t1.c2;
SELECT t1.c0, t1.c1, vt0.c0, vt1.c0, t1.c2 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((t1.c0 COLLATE BINARY)*(SQLITE_COMPILEOPTION_USED(t1.c0))) GROUP BY t1.c0, t1.c1, vt0.c0, vt1.c0, t1.c2 HAVING ((((TOTAL(vt1.c0)) IS TRUE))<<(MIN(AVG(MIN(NULL))))) UNION ALL SELECT t1.c0, t1.c1, vt0.c0, vt1.c0, t1.c2 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((t1.c0 COLLATE BINARY)*(SQLITE_COMPILEOPTION_USED(t1.c0))) GROUP BY t1.c0, t1.c1, vt0.c0, vt1.c0, t1.c2 HAVING (NOT (((((TOTAL(vt1.c0)) IS TRUE))<<(MIN(AVG(MIN(NULL))))))) UNION ALL SELECT t1.c0, t1.c1, vt0.c0, vt1.c0, t1.c2 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((t1.c0 COLLATE BINARY)*(SQLITE_COMPILEOPTION_USED(t1.c0))) GROUP BY t1.c0, t1.c1, vt0.c0, vt1.c0, t1.c2 HAVING ((((((TOTAL(vt1.c0)) IS TRUE))<<(MIN(AVG(MIN(NULL)))))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (+ (0.931954061046602));
SELECT vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (+ (0.931954061046602)) WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (+ (0.931954061046602)) WHERE ((NOT (((vt1.c0 COLLATE BINARY) IS TRUE)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (+ (0.931954061046602)) WHERE (((((vt1.c0 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON (+ (0.931954061046602));
SELECT DISTINCT * FROM vt1, vt0, t0, t1;
SELECT DISTINCT * FROM vt1, vt0, t0, t1 WHERE (json_object(((t1.c2)IS(t0.c0)), ((t1.c0)OR(t1.c0)))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 NOT INDEXED, t1 WHERE ((NOT (json_object(((t1.c2)IS(t0.c0)), ((t1.c0)OR(t1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0, t1 WHERE (((json_object(((t1.c2)IS(t0.c0)), ((t1.c0)OR(t1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0, t1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (HEX(0.7805779052063916)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (HEX(0.7805779052063916)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((HEX(0.7805779052063916)) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((((((AVG(GROUP_CONCAT(COUNT(*))))OR(MAX(MAX(vt1.c0)))))AND(((COUNT(TOTAL(SUM(MAX(vt1.c1))))) IS FALSE))))AND(SUM(SUM(SUM(x''))))))AND(((0x1bccb42d)/(vt1.c1)))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (((((((((AVG(GROUP_CONCAT(COUNT(*))))OR(MAX(MAX(vt1.c0)))))AND(((COUNT(TOTAL(SUM(MAX(vt1.c1))))) IS FALSE))))AND(SUM(SUM(SUM(x''))))))AND(((0X1bccb42d)/(vt1.c1)))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((((((((AVG(GROUP_CONCAT(COUNT(*))))OR(MAX(MAX(vt1.c0)))))AND(((COUNT(TOTAL(SUM(MAX(vt1.c1))))) IS FALSE))))AND(SUM(SUM(SUM(x''))))))AND(((0X1bccb42d)/(vt1.c1))))) ISNULL);
SELECT ALL MIN(((t1.c0)<<(vt1.c0)) COLLATE BINARY) FROM t1, t0, vt1;
SELECT * FROM vt1, vt0, t0, t1;
SELECT ALL * FROM vt1, vt0, t0, t1 WHERE (((((((((((vt1.c1)OR(vt1.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c1))) NOT NULL)) UNION ALL SELECT ALL * FROM vt1, vt0, t0, t1 WHERE ((NOT (((((((((((vt1.c1)OR(vt1.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c1))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1, vt0, t0, t1 WHERE (((((((((((((vt1.c1)OR(vt1.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c1))) NOT NULL)) ISNULL));
SELECT * FROM vt1, vt0, t0, t1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((vt0.c0 IN ('R*')) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((vt0.c0 IN ('R*')) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0 IN ('R*')) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2;
SELECT ALL t1.c1, t1.c0, t1.c2 FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((((t1.c2)AND(t1.c2)))) AND ((((0xffffffff8154953b)<(t1.c2)))))) GROUP BY t1.c1, t1.c0, t1.c2 UNION SELECT ALL t1.c1, t1.c0, t1.c2 FROM t1 WHERE ((NOT ((((t1.c2)) NOT BETWEEN ((((t1.c2)AND(t1.c2)))) AND ((((0Xffffffff8154953b)<(t1.c2)))))))) GROUP BY t1.c1, t1.c0, t1.c2 UNION SELECT t1.c1, t1.c0, t1.c2 FROM t1 WHERE ((((((t1.c2)) NOT BETWEEN ((((t1.c2)AND(t1.c2)))) AND ((((0Xffffffff8154953b)<(t1.c2)))))) ISNULL)) GROUP BY t1.c1, t1.c0, t1.c2;
SELECT ALL t1.c1, t1.c0, t1.c2 FROM t1 GROUP BY t1.c1, t1.c0, t1.c2;
SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1;
SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0 NOT INDEXED, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING CAST(SUM(vt0.c0) AS NUMERIC) UNION ALL SELECT t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING (NOT (CAST(SUM(vt0.c0) AS NUMERIC))) UNION ALL SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING ((CAST(SUM(vt0.c0) AS NUMERIC)) ISNULL);
SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1;
SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0 NOT INDEXED, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING CAST(SUM(vt0.c0) AS NUMERIC) UNION ALL SELECT t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING (NOT (CAST(SUM(vt0.c0) AS NUMERIC))) UNION ALL SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1 HAVING ((CAST(SUM(vt0.c0) AS NUMERIC)) ISNULL);
SELECT ALL t1.c0, vt1.c0, t1.c1, vt1.c1 FROM vt0, vt1, t0, t1 GROUP BY t1.c0, vt1.c0, t1.c1, vt1.c1;
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((~ (t1.c0))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((~ (t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((((~ (t1.c0))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c0, t1.c2, t1.c1 FROM vt1, t1, t0 LEFT OUTER JOIN vt0 ON CAST(((t1.c2)IS(0.6775880161524817)) AS TEXT);
SELECT DISTINCT t0.c0, t1.c2, t1.c1 FROM vt1, t1, t0 LEFT OUTER JOIN vt0 ON CAST(((t1.c2)IS(0.6775880161524817)) AS TEXT) WHERE ((((t0.c0)) BETWEEN ((json_array(t1.c0, t0.c0))) AND (('y&')))) UNION SELECT DISTINCT t0.c0, t1.c2, t1.c1 FROM vt1, t1, t0 LEFT OUTER JOIN vt0 ON CAST(((t1.c2)IS(0.6775880161524817)) AS TEXT) WHERE ((NOT ((((t0.c0)) BETWEEN ((json_array(t1.c0, t0.c0))) AND (('y&')))))) UNION SELECT DISTINCT t0.c0, t1.c2, t1.c1 FROM vt1, t1, t0 LEFT OUTER JOIN vt0 ON CAST(((t1.c2)IS(0.6775880161524817)) AS TEXT) WHERE ((((((t0.c0)) BETWEEN ((json_array(t1.c0, t0.c0))) AND (('y&')))) ISNULL));
SELECT DISTINCT t0.c0, t1.c2, t1.c1 FROM vt1, t1, t0 LEFT OUTER JOIN vt0 ON CAST(((t1.c2)IS(0.6775880161524817)) AS TEXT);
SELECT ALL t1.c2, t1.c1 FROM t0, t1 GROUP BY t1.c2, t1.c1;
SELECT ALL t1.c2, t1.c1 FROM t0, t1 WHERE (CASE WHEN 0.7484433296505257 THEN t1.c1 WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c0 END THEN CASE WHEN t1.c2 THEN t1.c2 END WHEN LAST_INSERT_ROWID() THEN (((t0.c0))<((t1.c1))) ELSE t1.c0 COLLATE BINARY END) GROUP BY t1.c2, t1.c1 UNION SELECT t1.c2, t1.c1 FROM t0, t1 WHERE ((NOT (CASE WHEN 0.7484433296505257 THEN t1.c1 WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c0 END THEN CASE WHEN t1.c2 THEN t1.c2 END WHEN LAST_INSERT_ROWID() THEN (((t0.c0))<((t1.c1))) ELSE t1.c0 COLLATE BINARY END))) GROUP BY t1.c2, t1.c1 UNION SELECT t1.c2, t1.c1 FROM t0, t1 WHERE (((CASE WHEN 0.7484433296505257 THEN t1.c1 WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c0 END THEN CASE WHEN t1.c2 THEN t1.c2 END WHEN LAST_INSERT_ROWID() THEN (((t0.c0))<((t1.c1))) ELSE t1.c0 COLLATE BINARY END) ISNULL)) GROUP BY t1.c2, t1.c1;
SELECT ALL t1.c2, t1.c1 FROM t0, t1 GROUP BY t1.c2, t1.c1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(((((((((vt1.c0)OR(MAX(vt1.c1))))AND(MIN(GROUP_CONCAT(vt1.c1)))))OR(vt0.c0)))OR(SUM(COUNT(vt1.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(((((((((vt1.c0)OR(MAX(vt1.c1))))AND(MIN(GROUP_CONCAT(vt1.c1)))))OR(vt0.c0)))OR(SUM(COUNT(vt1.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(((((((((vt1.c0)OR(MAX(vt1.c1))))AND(MIN(GROUP_CONCAT(vt1.c1)))))OR(vt0.c0)))OR(SUM(COUNT(vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 INNER JOIN t1 ON ((t1.c1) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN '243013053' THEN vt1.c0 END)) INNER JOIN t0 ON (((t1.c2) BETWEEN (t0.c0) AND (vt1.c1)) IN ());
SELECT vt1.c0 FROM vt1 INNER JOIN t1 ON ((t1.c1) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN '243013053' THEN vt1.c0 END)) INNER JOIN t0 ON (((t1.c2) BETWEEN (t0.c0) AND (vt1.c1)) IN ()) WHERE (((((vt1.c0)>>(t1.c2))) IS FALSE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN t1 ON ((t1.c1) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN '243013053' THEN vt1.c0 END)) INNER JOIN t0 ON (((t1.c2) BETWEEN (t0.c0) AND (vt1.c1)) IN ()) WHERE ((NOT (((((vt1.c0)>>(t1.c2))) IS FALSE)))) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN t1 ON ((t1.c1) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN '243013053' THEN vt1.c0 END)) INNER JOIN t0 ON (((t1.c2) BETWEEN (t0.c0) AND (vt1.c1)) IN ()) WHERE (((((((vt1.c0)>>(t1.c2))) IS FALSE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1 INNER JOIN t1 ON ((t1.c1) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN '243013053' THEN vt1.c0 END)) INNER JOIN t0 ON (((t1.c2) BETWEEN (t0.c0) AND (vt1.c1)) IN ());
SELECT DISTINCT vt1.c1, t1.c1 FROM t0 CROSS JOIN vt0 ON ((CASE WHEN t1.c0 THEN t1.c0 END)<=((((vt1.c0, t1.c2, vt1.c0, vt1.c0, t1.c0))=((t0.c0, x'', NULL, 0.4953025828382356, vt1.c1))))) LEFT OUTER JOIN t1 ON (((NULL)) BETWEEN ((TRIM(t1.c0))) AND ((((vt1.c0)IS NOT(t0.c0))))) FULL OUTER JOIN vt1 ON (NOT (NULL));
SELECT t0.c0, t1.c2 FROM t0, t1, vt0 GROUP BY t0.c0, t1.c2;
SELECT ALL t0.c0, t1.c2 FROM t0, t1, vt0 WHERE ((((t1.c2) NOT BETWEEN (t1.c1) AND (t0.c0)) IN ())) GROUP BY t0.c0, t1.c2 UNION SELECT ALL t0.c0, t1.c2 FROM t0, t1, vt0 WHERE ((NOT ((((t1.c2) NOT BETWEEN (t1.c1) AND (t0.c0)) IN ())))) GROUP BY t0.c0, t1.c2 UNION SELECT ALL t0.c0, t1.c2 FROM t0, t1, vt0 WHERE ((((((t1.c2) NOT BETWEEN (t1.c1) AND (t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0, t1.c2;
SELECT t0.c0, t1.c2 FROM t0, t1, vt0 GROUP BY t0.c0, t1.c2;
SELECT vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1;
SELECT vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 HAVING t1.c2 UNION ALL SELECT vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 HAVING (NOT (t1.c2)) UNION ALL SELECT ALL vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 HAVING ((t1.c2) ISNULL);
SELECT vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1;
SELECT vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 HAVING t1.c2 UNION ALL SELECT vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 HAVING (NOT (t1.c2)) UNION ALL SELECT ALL vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 HAVING ((t1.c2) ISNULL);
SELECT vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c2, t0.c0, t1.c0, t1.c1;
SELECT * FROM vt1, t1;
SELECT ALL * FROM vt1, t1 WHERE ((('-1977540483' COLLATE NOCASE)<((((-1.86614165E8, t1.c0, vt1.c0)) NOT BETWEEN ((t1.c0, vt1.c1, '')) AND ((t1.c1, t1.c1, t1.c2)))))) UNION ALL SELECT ALL * FROM vt1, t1 WHERE ((NOT ((('-1977540483' COLLATE NOCASE)<((((-1.86614165E8, t1.c0, vt1.c0)) NOT BETWEEN ((t1.c0, vt1.c1, '')) AND ((t1.c1, t1.c1, t1.c2)))))))) UNION ALL SELECT * FROM vt1, t1 WHERE ((((('-1977540483' COLLATE NOCASE)<((((-1.86614165E8, t1.c0, vt1.c0)) NOT BETWEEN ((t1.c0, vt1.c1, '')) AND ((t1.c1, t1.c1, t1.c2)))))) ISNULL));
SELECT * FROM vt1, t1;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (NULL COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, t0 NOT INDEXED WHERE ((NOT (NULL COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((vt1.c1)IS(((0.5053470408398014)&('-893139574'))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c1)IS(((0.5053470408398014)&('-893139574'))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c1)IS(((0.5053470408398014)&('-893139574'))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(AVG(GROUP_CONCAT(NULL)) COLLATE RTRIM) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(AVG(GROUP_CONCAT(NULL)) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(AVG(GROUP_CONCAT(NULL)) COLLATE RTRIM)) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL) COLLATE BINARY) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN CASE ''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)||(NULL)) END  NULLS LAST;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0) ISNULL) COLLATE BINARY))) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN CASE ''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)||(NULL)) END  NULLS LAST;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) ISNULL) COLLATE BINARY) ISNULL)) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN CASE ''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)||(NULL)) END  NULLS LAST;
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t1.c1, vt1.c0, t1.c2 FROM vt0, vt1, t0, t1;
SELECT DISTINCT t1.c1, vt1.c0, t1.c2 FROM vt0, vt1, t0, t1 WHERE (t1.c0) UNION SELECT DISTINCT t1.c1, vt1.c0, t1.c2 FROM vt0, vt1, t0, t1 NOT INDEXED WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c1, vt1.c0, t1.c2 FROM vt0, vt1, t0, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c1, vt1.c0, t1.c2 FROM vt0, vt1, t0, t1;
SELECT ALL vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0 FROM t1, vt1, t0 INNER JOIN vt0 ON (((((vt1.c0, t1.c2, vt1.c0))>((vt1.c1, t0.c0, t1.c0))))LIKE(((t1.c0) NOT BETWEEN (t1.c2) AND ('%!~d_k')))) GROUP BY vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0;
SELECT vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0 FROM t1, vt1, t0 INNER JOIN vt0 ON (((((vt1.c0, t1.c2, vt1.c0))>((vt1.c1, t0.c0, t1.c0))))LIKE(((t1.c0) NOT BETWEEN (t1.c2) AND ('%!~d_k')))) WHERE ((((t0.c0 IN ()))*(t1.c0))) GROUP BY vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0 UNION SELECT vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0 FROM t1, vt1, t0 INNER JOIN vt0 ON (((((vt1.c0, t1.c2, vt1.c0))>((vt1.c1, t0.c0, t1.c0))))LIKE(((t1.c0) NOT BETWEEN (t1.c2) AND ('%!~d_k')))) WHERE ((NOT ((((t0.c0 IN ()))*(t1.c0))))) GROUP BY vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0 FROM t1, vt1, t0 INNER JOIN vt0 ON (((((vt1.c0, t1.c2, vt1.c0))>((vt1.c1, t0.c0, t1.c0))))LIKE(((t1.c0) NOT BETWEEN (t1.c2) AND ('%!~d_k')))) WHERE ((((((t0.c0 IN ()))*(t1.c0))) ISNULL)) GROUP BY vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0;
SELECT ALL vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0 FROM t1, vt1, t0 INNER JOIN vt0 ON (((((vt1.c0, t1.c2, vt1.c0))>((vt1.c1, t0.c0, t1.c0))))LIKE(((t1.c0) NOT BETWEEN (t1.c2) AND ('%!~d_k')))) GROUP BY vt0.c0, t0.c0, t1.c1, vt1.c1, t1.c2, vt1.c0;
SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((~ (0.4479160879133205)))IS('1254792978')) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((~ (0.4479160879133205)))IS('1254792978')) GROUP BY t0.c0 HAVING MAX(NULLIF(DISTINCT GROUP_CONCAT(TOTAL(vt0.c0)), vt0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((~ (0.4479160879133205)))IS('1254792978')) GROUP BY t0.c0 HAVING (NOT (MAX(NULLIF(DISTINCT GROUP_CONCAT(TOTAL(vt0.c0)), vt0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (((~ (0.4479160879133205)))IS('1254792978')) GROUP BY t0.c0 HAVING ((MAX(NULLIF(DISTINCT GROUP_CONCAT(TOTAL(vt0.c0)), vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))AND((NOT (vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)>>(vt0.c0)))AND((NOT (vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)>>(vt0.c0)))AND((NOT (vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
