-- Time: 2024/06/09 13:19:12
-- Database: database16
-- Database version: 3.40.0
-- seed value: 1065808516
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2, order=ASC, prefix=672); -- 1ms;
END TRANSACTION; -- 4ms;
REINDEX  vt0; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('珲k'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (-2.028637198E9, x'94f6', '1253453970'); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE (((((NULL)>=(vt0.c0)), ((vt0.c0) NOT NULL), CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END))<>(((vt0.c1 IN (vt0.c2)), vt0.c2 COLLATE BINARY, ((x'f785')>=(vt0.c0))))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, '1253453970', '-1057923468'); -- 1ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT OR FAIL INTO vt0(c2, c1) VALUES (NULL, 1.25345397E9); -- 1ms;
INSERT OR REPLACE INTO vt0(c1, c2) VALUES (x'1335', 0.4544346747849427); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 1ms;
INSERT OR REPLACE INTO vt0(c0, c1, c2) VALUES (NULL, '-1057923468', '[\nZNqZX|!'), ('珲k', 0.10634810625747104, NULL), (-2.028637198E9, NULL, '-2028637198'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 9223372036854775807);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41612'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
END TRANSACTION; -- 7ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c2) VALUES (0.10634810625747104), (x''), ('[\nZNqZX|!'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2028637198,10');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1253453970,11');\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, x''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c2)=('878859800', x''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'd999', 8.788598E8, 'Uをvq\r2嘘sD'); -- 4ms;
INSERT OR IGNORE INTO vt0(c0, c1, c2) VALUES (x'', x'', '-2028637198'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36599'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (NULL); -- 2ms;
REINDEX BINARY; -- 6ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c2)=(0.8535794677167061) WHERE CAST((vt0.c1 IN ()) AS BLOB); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
PRAGMA optimize; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('', '949140920', 0Xffffffffa3c951c6), (x'', '珲k', 1021229211), (x'', NULL, '7'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40667'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=794542599,7');\n; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (')g'); -- 1ms;
INSERT OR IGNORE INTO vt0(c2) VALUES ('0.4544346747849427'); -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0, c2) VALUES ('hhg~okeo', '0.8535794677167061', '794542599'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0xffffffffc04cfc10; -- 0ms;
REINDEX  vt0; -- 0ms;
CREATE TEMP VIEW v0(c0, c1, c2) AS SELECT LAG((((vt0.c2, 0.5902118903730075, vt0.c2)) BETWEEN ((((((vt0.c1)AND(vt0.c1)))OR('439576912')), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))) AND ((((vt0.c0)>=(NULL)), ((vt0.c2)IS NOT(vt0.c1)), (vt0.c0 IN (vt0.c2))))), (((vt0.c2))<>((CAST(vt0.c2 AS TEXT)))), ((vt0.c2 COLLATE NOCASE)|((((vt0.c0))=((vt0.c0)))))) OVER (), ((((vt0.c0)OR(vt0.c1)))OR(NULL)) COLLATE RTRIM, (DATETIME(vt0.c1, vt0.c0, vt0.c2) IN ()) FROM vt0 WHERE (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c2='876037678'; -- 1ms;
PRAGMA temp.cell_size_check; -- 2ms;
PRAGMA main.automatic_index = false; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-633411904'); -- 14ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59162'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-451131537,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8535794677167061); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES ('876037678', NULL); -- 9ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO vt0(c2, c1) VALUES (1917505729, 0.10634810625747104); -- 9ms;
INSERT OR FAIL INTO vt0(c2, c0, c1) VALUES ('1476648324', 0.2931316849072222, -1789631632); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14152'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34858'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53452'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1323337316,15');\n; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.4544346747849427) WHERE ((0.6990023099435189 COLLATE NOCASE) NOTNULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c2, c1, c0) VALUES ('0.4544346747849427', x'', 1.917505729E9), (0.2931316849072222, x'', '7'), (0.6346914617323601, 0.03468551692400934, x'dddb'); -- 0ms;
INSERT OR ABORT INTO vt0(c2, c1) VALUES (1688988090, '1917505729'), ('0.6990023099435189', 0.5121421241185121), (NULL, 0.3435970740941795), (NULL, 1665548316), (4.39576912E8, NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM vt0 WHERE vt0.c1; -- 1ms;
INSERT OR ABORT INTO vt0(c2, c0, c1) VALUES (4.39576912E8, NULL, '829553186'), (0xfffffffffcbe19bf, -1789631632, x'0a52'), ('-601817638', NULL, x'3867'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('L'); -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
REINDEX; -- 0ms;
DROP VIEW v0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0xffffffff8e9ec7e6, 0.9075621673081206, x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('4B'); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END AS INTEGER)) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END AS INTEGER)))) UNION ALL SELECT * FROM vt0, t0 WHERE (((CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c2 COLLATE NOCASE)>(CASE vt0.c2  WHEN vt0.c2 THEN NULL ELSE vt0.c1 END))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((vt0.c2 COLLATE NOCASE)>(CASE vt0.c2  WHEN vt0.c2 THEN NULL ELSE vt0.c1 END))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c2 COLLATE NOCASE)>(CASE vt0.c2  WHEN vt0.c2 THEN NULL ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULLIF(DISTINCT vt0.c1, vt0.c1)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (NULLIF(DISTINCT vt0.c1, vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (NULLIF(DISTINCT vt0.c1, vt0.c1)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(TOTAL(t0.c0)) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(TOTAL(t0.c0)))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(TOTAL(t0.c0))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS INTEGER)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(CASE WHEN t0.c0 THEN t0.c0 END AS INTEGER)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE (HEX((('794542599') IS FALSE))) UNION SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE ((NOT (HEX((('794542599') IS FALSE))))) UNION SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE (((HEX((('794542599') IS FALSE))) ISNULL));
SELECT DISTINCT vt0.c1 FROM t0, vt0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (NULL) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING vt0.c2 UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING vt0.c2 UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END)<<(vt0.c2 COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END)<<(vt0.c2 COLLATE BINARY))))) UNION ALL SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END)<<(vt0.c2 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) AND (CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) AND (CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE (((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) AND (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 WHERE (((((((((vt0.c1)AND('-9223372036854775808')))OR(t0.c0)))AND(CAST(vt0.c2 AS INTEGER))))AND('2W' COLLATE NOCASE))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE ((NOT (((((((((vt0.c1)AND('-9223372036854775808')))OR(t0.c0)))AND(CAST(vt0.c2 AS INTEGER))))AND('2W' COLLATE NOCASE))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, t0 WHERE (((((((((((vt0.c1)AND('-9223372036854775808')))OR(t0.c0)))AND(CAST(vt0.c2 AS INTEGER))))AND('2W' COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(GROUP_CONCAT(MIN(t0.c0))))||(CASE WHEN COUNT(TOTAL(t0.c0)) THEN t0.c0 WHEN COUNT(*) THEN AVG(t0.c0) WHEN SUM(COUNT(*)) THEN TOTAL(t0.c0) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MAX(GROUP_CONCAT(MIN(t0.c0))))||(CASE WHEN COUNT(TOTAL(t0.c0)) THEN t0.c0 WHEN COUNT(*) THEN AVG(t0.c0) WHEN SUM(COUNT(*)) THEN TOTAL(t0.c0) END)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MAX(GROUP_CONCAT(MIN(t0.c0))))||(CASE WHEN COUNT(TOTAL(t0.c0)) THEN t0.c0 WHEN COUNT(*) THEN AVG(t0.c0) WHEN SUM(COUNT(*)) THEN TOTAL(t0.c0) END))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN json(t0.c0) ELSE ((t0.c0)OR(t0.c0)) END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN json(t0.c0) ELSE ((t0.c0)OR(t0.c0)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN json(t0.c0) ELSE ((t0.c0)OR(t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN -6.01817638E8 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CASE WHEN -6.01817638E8 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CASE WHEN -6.01817638E8 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((CAST(t0.c0 AS NUMERIC))OR(UNLIKELY(DISTINCT t0.c0))))AND(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE RTRIM)))AND(CAST(t0.c0 AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((CAST(t0.c0 AS NUMERIC))OR(UNLIKELY(DISTINCT t0.c0))))AND(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE RTRIM)))AND(CAST(t0.c0 AS REAL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((((CAST(t0.c0 AS NUMERIC))OR(UNLIKELY(DISTINCT t0.c0))))AND(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE RTRIM)))AND(CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(t0.c0) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(t0.c0)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(t0.c0) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(t0.c0)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((NULL COLLATE NOCASE)<>((~ (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((NULL COLLATE NOCASE)!=((~ (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((NULL COLLATE NOCASE)<>((~ (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.8788985582884987) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.8788985582884987))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.8788985582884987) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((('0.9075621673081206')IS(vt0.c1)) AS NUMERIC)) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((('0.9075621673081206')IS(vt0.c1)) AS NUMERIC)))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((('0.9075621673081206')IS(vt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(COUNT(*)))|(SUM(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MIN(COUNT(*)))|(SUM(AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MIN(COUNT(*)))|(SUM(AVG(t0.c0))))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((NULL)&(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((NULL)&(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))) WHERE (x'') UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((NULL)&(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))) WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((NULL)&(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))) WHERE (((x'') ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((NULL)&(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) IS FALSE)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c2 FROM t0, vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))+((- (vt0.c0))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM t0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))+((- (vt0.c0))))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM t0, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))+((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM t0, vt0 GROUP BY vt0.c2;
SELECT t0.c0, vt0.c1 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c0, vt0.c1 HAVING CASE WHEN MIN(vt0.c0) THEN CAST(TOTAL(vt0.c0) AS INTEGER) WHEN ((((((((MAX(t0.c0))OR(vt0.c1)))AND(COUNT(*))))OR(vt0.c0)))OR(vt0.c2)) THEN AVG(MAX(t0.c0)) WHEN CAST(COUNT(*) AS REAL) THEN TOTAL(vt0.c1) END UNION ALL SELECT t0.c0, vt0.c1 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (CASE WHEN MIN(vt0.c0) THEN CAST(TOTAL(vt0.c0) AS INTEGER) WHEN ((((((((MAX(t0.c0))OR(vt0.c1)))AND(COUNT(*))))OR(vt0.c0)))OR(vt0.c2)) THEN AVG(MAX(t0.c0)) WHEN CAST(COUNT(*) AS REAL) THEN TOTAL(vt0.c1) END)) UNION ALL SELECT t0.c0, vt0.c1 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c0, vt0.c1 HAVING ((CASE WHEN MIN(vt0.c0) THEN CAST(TOTAL(vt0.c0) AS INTEGER) WHEN ((((((((MAX(t0.c0))OR(vt0.c1)))AND(COUNT(*))))OR(vt0.c0)))OR(vt0.c2)) THEN AVG(MAX(t0.c0)) WHEN CAST(COUNT(*) AS REAL) THEN TOTAL(vt0.c1) END) ISNULL);
SELECT ALL MAX(NULL) FROM vt0, t0;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((((t0.c0))>((vt0.c1))))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((((t0.c0))>((vt0.c1))))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((((t0.c0))>((vt0.c1))))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c2) ISNULL)))<=((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 0.676372263206767 END)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c2) ISNULL)))<=((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 0.676372263206767 END)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c2) ISNULL)))<=((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 0.676372263206767 END)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c0)>=(vt0.c1)))=(vt0.c2 COLLATE BINARY))) GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 UNION SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0)>=(vt0.c1)))=(vt0.c2 COLLATE BINARY))))) GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c0)>=(vt0.c1)))=(vt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0)==(TOTAL(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0)==(TOTAL(AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0)=(TOTAL(AVG(t0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOTNULL))IS((t0.c0 IN (t0.c0, t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOTNULL))IS((t0.c0 IN (t0.c0, t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOTNULL))IS((t0.c0 IN (t0.c0, t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE (((t0.c0))=((t0.c0)))  WHEN ((t0.c0)||(t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE CAST(x'8d72' AS BLOB) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE (((t0.c0))=((t0.c0)))  WHEN ((t0.c0)||(t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE CAST(x'8d72' AS BLOB) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE (((t0.c0))=((t0.c0)))  WHEN ((t0.c0)||(t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE CAST(x'8d72' AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0;
SELECT vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 WHERE (((vt0.c2)<>(CAST(t0.c0 AS INTEGER)))) GROUP BY vt0.c2, vt0.c1, t0.c0 UNION SELECT ALL vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT (((vt0.c2)<>(CAST(t0.c0 AS INTEGER)))))) GROUP BY vt0.c2, vt0.c1, t0.c0 UNION SELECT ALL vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 WHERE (((((vt0.c2)!=(CAST(t0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c2, vt0.c1, t0.c0;
SELECT vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0;
SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 HAVING COUNT(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 HAVING ((COUNT(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) UNION ALL SELECT vt0.c1 FROM vt0 NOT INDEXED WHERE ((NOT (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))/(0.7257661544538363))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))/(0.7257661544538363))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))/(0.7257661544538363))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((CAST(vt0.c0 AS INTEGER))/(((t0.c0)>=(vt0.c2))))) GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))/(((t0.c0)>=(vt0.c2))))))) GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((CAST(vt0.c0 AS INTEGER))/(((t0.c0)>=(vt0.c2))))) ISNULL)) GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((SUM(TOTAL(vt0.c0)) IN (AVG(GROUP_CONCAT(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((SUM(TOTAL(vt0.c0)) IN (AVG(GROUP_CONCAT(SUM(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((SUM(TOTAL(vt0.c0)) IN (AVG(GROUP_CONCAT(SUM(vt0.c0))))))) ISNULL);
SELECT MAX(((((((vt0.c0) IS TRUE))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((NULL)OR(t0.c0)))OR(vt0.c2))))) FROM vt0, t0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (TRIM('')) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (TRIM('')))) UNION SELECT DISTINCT * FROM t0 WHERE (((TRIM('')) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE (((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)) COLLATE NOCASE) GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE ((NOT (((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)) COLLATE NOCASE))) GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(TOTAL(0.6785643946082649)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(0.6785643946082649)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(0.6785643946082649))) ISNULL);
SELECT SUM(CAST(((t0.c0) BETWEEN (vt0.c0) AND (9.4914092E8)) AS INTEGER)) FROM vt0, t0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (NULLIF(SQLITE_SOURCE_ID(), (((((((('')AND(t0.c0)))OR(vt0.c2)))AND(t0.c0)))OR(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (NULLIF(SQLITE_SOURCE_ID(), (((((((('')AND(t0.c0)))OR(vt0.c2)))AND(t0.c0)))OR(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((NULLIF(SQLITE_SOURCE_ID(), (((((((('')AND(t0.c0)))OR(vt0.c2)))AND(t0.c0)))OR(vt0.c0)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c2, vt0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c2, vt0.c1, t0.c0;
SELECT vt0.c2, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN (((vt0.c2 IN ()), (vt0.c2 IN ()), ((vt0.c0) BETWEEN (t0.c0) AND (0x30495e81)))) AND (((vt0.c2 IN ()), ((t0.c0) IS TRUE), ((vt0.c1) IS TRUE))))) GROUP BY vt0.c2, vt0.c1, t0.c0 UNION SELECT vt0.c2, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN (((vt0.c2 IN ()), (vt0.c2 IN ()), ((vt0.c0) BETWEEN (t0.c0) AND (0X30495e81)))) AND (((vt0.c2 IN ()), ((t0.c0) IS TRUE), ((vt0.c1) IS TRUE))))))) GROUP BY vt0.c2, vt0.c1, t0.c0 UNION SELECT vt0.c2, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN (((vt0.c2 IN ()), (vt0.c2 IN ()), ((vt0.c0) BETWEEN (t0.c0) AND (0X30495e81)))) AND (((vt0.c2 IN ()), ((t0.c0) IS TRUE), ((vt0.c1) IS TRUE))))) ISNULL)) GROUP BY vt0.c2, vt0.c1, t0.c0;
SELECT ALL vt0.c2, vt0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c2, vt0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING x'd531' UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (x'd531')) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((x'd531') ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING x'd531' UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (x'd531')) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((x'd531') ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0;
SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ())) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((((vt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT ALL vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS BLOB)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(CAST(t0.c0 AS INTEGER) AS BLOB)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(CAST(t0.c0 AS INTEGER) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(SUM(TOTAL(vt0.c1))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(SUM(TOTAL(vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(SUM(TOTAL(vt0.c1)))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt0, t0;
SELECT vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((((vt0.c2, vt0.c1, NULL)) BETWEEN ((((t0.c0)IS NOT(vt0.c2)), ((vt0.c0) IS FALSE), (NOT (t0.c0)))) AND ((vt0.c2, ((t0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), (NOT (vt0.c2)))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c2, vt0.c1, NULL)) BETWEEN ((((t0.c0)IS NOT(vt0.c2)), ((vt0.c0) IS FALSE), (NOT (t0.c0)))) AND ((vt0.c2, ((t0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), (NOT (vt0.c2)))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((((((vt0.c2, vt0.c1, NULL)) BETWEEN ((((t0.c0)IS NOT(vt0.c2)), ((vt0.c0) IS FALSE), (NOT (t0.c0)))) AND ((vt0.c2, ((t0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), (NOT (vt0.c2)))))) ISNULL));
SELECT vt0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((NULL, t0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN t0.c0 WHEN 0Xffffffffea307fc4 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END, vt0.c2 COLLATE BINARY, LIKE(vt0.c2, vt0.c0, '-'))) AND ((((vt0.c1)+(vt0.c0)), (((t0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((((t0.c0)AND(vt0.c2)))AND(vt0.c0)))));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((NULL, t0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN t0.c0 WHEN 0Xffffffffea307fc4 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END, vt0.c2 COLLATE BINARY, LIKE(vt0.c2, vt0.c0, '-'))) AND ((((vt0.c1)+(vt0.c0)), (((t0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((((t0.c0)AND(vt0.c2)))AND(vt0.c0))))) WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END  WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN 7.94542599E8 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) END) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((NULL, t0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN t0.c0 WHEN 0Xffffffffea307fc4 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END, vt0.c2 COLLATE BINARY, LIKE(vt0.c2, vt0.c0, '-'))) AND ((((vt0.c1)+(vt0.c0)), (((t0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((((t0.c0)AND(vt0.c2)))AND(vt0.c0))))) WHERE ((NOT (CASE CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END  WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN 7.94542599E8 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) END))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((NULL, t0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN t0.c0 WHEN 0xffffffffea307fc4 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END, vt0.c2 COLLATE BINARY, LIKE(vt0.c2, vt0.c0, '-'))) AND ((((vt0.c1)+(vt0.c0)), (((t0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((((t0.c0)AND(vt0.c2)))AND(vt0.c0))))) WHERE (((CASE CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END  WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN 7.94542599E8 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((NULL, t0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN t0.c0 WHEN 0Xffffffffea307fc4 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END, vt0.c2 COLLATE BINARY, LIKE(vt0.c2, vt0.c0, '-'))) AND ((((vt0.c1)+(vt0.c0)), (((t0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((((t0.c0)AND(vt0.c2)))AND(vt0.c0)))));
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))<(CAST(vt0.c1 AS REAL)))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))<(CAST(vt0.c1 AS REAL)))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))<(CAST(vt0.c1 AS REAL)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING ((((((((((vt0.c2)OR(t0.c0)))AND('b*[vO_')))AND(-2.028637198E9)))OR(vt0.c2)))<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2)))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (((((((((((vt0.c2)OR(t0.c0)))AND('b*[vO_')))AND(-2.028637198E9)))OR(vt0.c2)))<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2)))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING ((((((((((((vt0.c2)OR(t0.c0)))AND('b*[vO_')))AND(-2.028637198E9)))OR(vt0.c2)))<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING ((((((((((vt0.c2)OR(t0.c0)))AND('b*[vO_')))AND(-2.028637198E9)))OR(vt0.c2)))<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2)))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (((((((((((vt0.c2)OR(t0.c0)))AND('b*[vO_')))AND(-2.028637198E9)))OR(vt0.c2)))<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2)))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2 HAVING ((((((((((((vt0.c2)OR(t0.c0)))AND('b*[vO_')))AND(-2.028637198E9)))OR(vt0.c2)))<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((TYPEOF(vt0.c2))AND(vt0.c1)))OR('878859800')))OR(((vt0.c1) BETWEEN ('h') AND (t0.c0)))))OR(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2))));
SELECT ALL vt0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((TYPEOF(vt0.c2))AND(vt0.c1)))OR('878859800')))OR(((vt0.c1) BETWEEN ('h') AND (t0.c0)))))OR(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))) WHERE ((- ((vt0.c2 IN ())))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((TYPEOF(vt0.c2))AND(vt0.c1)))OR('878859800')))OR(((vt0.c1) BETWEEN ('h') AND (t0.c0)))))OR(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))) WHERE ((NOT ((- ((vt0.c2 IN ())))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((TYPEOF(vt0.c2))AND(vt0.c1)))OR('878859800')))OR(((vt0.c1) BETWEEN ('h') AND (t0.c0)))))OR(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))) WHERE ((((- ((vt0.c2 IN ())))) ISNULL));
SELECT ALL vt0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((TYPEOF(vt0.c2))AND(vt0.c1)))OR('878859800')))OR(((vt0.c1) BETWEEN ('h') AND (t0.c0)))))OR(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2))));
SELECT DISTINCT vt0.c2 FROM t0, vt0;
SELECT DISTINCT vt0.c2 FROM t0, vt0 WHERE (((((vt0.c0, vt0.c2, t0.c0)) BETWEEN ((vt0.c1, t0.c0, vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c1))) IN ())) UNION SELECT DISTINCT vt0.c2 FROM t0, vt0 WHERE ((NOT (((((vt0.c0, vt0.c2, t0.c0)) BETWEEN ((vt0.c1, t0.c0, vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c1))) IN ())))) UNION SELECT DISTINCT vt0.c2 FROM t0, vt0 WHERE (((((((vt0.c0, vt0.c2, t0.c0)) BETWEEN ((vt0.c1, t0.c0, vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c1))) IN ())) ISNULL));
SELECT DISTINCT vt0.c2 FROM t0, vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (((vt0.c2)%(vt0.c1))) AND (CAST(t0.c0 AS REAL)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT (((CAST(t0.c0 AS REAL)) NOT BETWEEN (((vt0.c2)%(vt0.c1))) AND (CAST(t0.c0 AS REAL)))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 NOT INDEXED WHERE (((((CAST(t0.c0 AS REAL)) NOT BETWEEN (((vt0.c2)%(vt0.c1))) AND (CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0;
SELECT ALL vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0 HAVING SUM(TOTAL(t0.c0)) UNION ALL SELECT ALL vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0 HAVING (NOT (SUM(TOTAL(t0.c0)))) UNION ALL SELECT ALL vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0 HAVING ((SUM(TOTAL(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING SUM(TOTAL(NULL)) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (SUM(TOTAL(NULL)))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((SUM(TOTAL(NULL))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((('-1902196762', vt0.c0, vt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((x'', vt0.c0, vt0.c0, vt0.c1, vt0.c2)))))>=((vt0.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((('-1902196762', vt0.c0, vt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((x'', vt0.c0, vt0.c0, vt0.c1, vt0.c2)))))>=((vt0.c1 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((('-1902196762', vt0.c0, vt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((x'', vt0.c0, vt0.c0, vt0.c1, vt0.c2)))))>=((vt0.c1 COLLATE RTRIM)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((COALESCE(t0.c0, '-30205678')) IS TRUE)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((COALESCE(t0.c0, '-30205678')) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((COALESCE(t0.c0, '-30205678')) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE (((((((((0Xffffffff850cf4fc)OR(vt0.c1)))AND(vt0.c2)))AND(t0.c0)))AND(vt0.c1)) COLLATE BINARY) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT (((((((((0Xffffffff850cf4fc)OR(vt0.c1)))AND(vt0.c2)))AND(t0.c0)))AND(vt0.c1)) COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE (((((((((((0xffffffff850cf4fc)OR(vt0.c1)))AND(vt0.c2)))AND(t0.c0)))AND(vt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((MAX(t0.c0))OR(x''))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((MAX(t0.c0))OR(x''))))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((MAX(t0.c0))OR(x'')))) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (vt0.c1) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (((vt0.c1) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0 WHERE (((((((((((vt0.c1)<<(vt0.c0)))OR('')))OR((+ (vt0.c0)))))OR((((((((('>\r{Gr')OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(0x20e0bb43)))))OR(vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0 WHERE ((NOT (((((((((((vt0.c1)<<(vt0.c0)))OR('')))OR((+ (vt0.c0)))))OR((((((((('>\r{Gr')OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(0x20e0bb43)))))OR(vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((((((((vt0.c1)<<(vt0.c0)))OR('')))OR((+ (vt0.c0)))))OR((((((((('>\r{Gr')OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(0x20e0bb43)))))OR(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (('1171201752' IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (('1171201752' IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((('1171201752' IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING MAX(SUM(vt0.c2)) UNION ALL SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (MAX(SUM(vt0.c2)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((MAX(SUM(vt0.c2))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LOWER(((vt0.c2)LIKE(vt0.c2)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LOWER(((vt0.c2)LIKE(vt0.c2)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LOWER(((vt0.c2)LIKE(vt0.c2)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ((vt0.c2 IN (vt0.c1))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ((vt0.c2 IN (vt0.c1))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ((vt0.c2 IN (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))) NOT NULL)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))) NOT NULL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))) NOT NULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(AVG(MAX(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(MAX(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(AVG(MAX(t0.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (x'4270' IN (CAST(vt0.c1 AS INTEGER)));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (x'4270' IN (CAST(vt0.c1 AS INTEGER))) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (x'4270' IN (CAST(vt0.c1 AS INTEGER))) WHERE ((NOT ((NOT (t0.c0))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (x'4270' IN (CAST(vt0.c1 AS INTEGER))) WHERE ((((NOT (t0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (x'4270' IN (CAST(vt0.c1 AS INTEGER)));
SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((t0.c0) NOTNULL)) ISNULL)) GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0) NOTNULL)) ISNULL)))) GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0 UNION SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0) NOTNULL)) ISNULL)) ISNULL)) GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (COUNT(*)))) IS TRUE) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (COUNT(*)))) IS TRUE))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (COUNT(*)))) IS TRUE)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (COUNT(*)))) IS TRUE) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (COUNT(*)))) IS TRUE))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (COUNT(*)))) IS TRUE)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c2)<(vt0.c1))) ISNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c2)<(vt0.c1))) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c2)<(vt0.c1))) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (UPPER(LOWER(vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (UPPER(LOWER(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((UPPER(LOWER(vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 WHERE (((((vt0.c2)OR('2018332264')))OR(vt0.c2)) COLLATE NOCASE) GROUP BY vt0.c0, vt0.c2, t0.c0 UNION SELECT vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (((((vt0.c2)OR('2018332264')))OR(vt0.c2)) COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c2, t0.c0 UNION SELECT vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 WHERE (((((((vt0.c2)OR('2018332264')))OR(vt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(CASE vt0.c2  WHEN vt0.c2 THEN TOTAL(SUM(AVG(vt0.c1))) WHEN TOTAL(SUM(vt0.c1)) THEN vt0.c0 WHEN vt0.c1 THEN COUNT(vt0.c1) WHEN TOTAL(GROUP_CONCAT(vt0.c1)) THEN vt0.c2 WHEN COUNT(TOTAL('*nowd')) THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(CASE vt0.c2  WHEN vt0.c2 THEN TOTAL(SUM(AVG(vt0.c1))) WHEN TOTAL(SUM(vt0.c1)) THEN vt0.c0 WHEN vt0.c1 THEN COUNT(vt0.c1) WHEN TOTAL(GROUP_CONCAT(vt0.c1)) THEN vt0.c2 WHEN COUNT(TOTAL('*nowd')) THEN vt0.c0 END))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(CASE vt0.c2  WHEN vt0.c2 THEN TOTAL(SUM(AVG(vt0.c1))) WHEN TOTAL(SUM(vt0.c1)) THEN vt0.c0 WHEN vt0.c1 THEN COUNT(vt0.c1) WHEN TOTAL(GROUP_CONCAT(vt0.c1)) THEN vt0.c2 WHEN COUNT(TOTAL('*nowd')) THEN vt0.c0 END)) ISNULL);
SELECT vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM t0, vt0;
SELECT vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) ISNULL));
SELECT vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c1)+(vt0.c0)))>=(((vt0.c1)LIKE(NULL))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)+(vt0.c0)))>=(((vt0.c1)LIKE(NULL))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c1)+(vt0.c0)))>=(((vt0.c1)LIKE(NULL))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((vt0.c1)AND(t0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0 NOT INDEXED, t0 WHERE ((NOT (((vt0.c1)AND(t0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c1)AND(t0.c0))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2 HAVING SQLITE_VERSION() UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2 HAVING SQLITE_VERSION() UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT ALL vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c2;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((+ ('1476648324'))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((+ ('1476648324'))))) UNION ALL SELECT * FROM t0 WHERE ((((+ ('1476648324'))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 WHERE (CASE (((t0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, '-1057923468', t0.c0)) AND ((vt0.c2, vt0.c0, t0.c0)))  WHEN t0.c0 COLLATE NOCASE THEN x'9479' END) UNION SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT (CASE (((t0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, '-1057923468', t0.c0)) AND ((vt0.c2, vt0.c0, t0.c0)))  WHEN t0.c0 COLLATE NOCASE THEN x'9479' END))) UNION SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 WHERE (((CASE (((t0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, '-1057923468', t0.c0)) AND ((vt0.c2, vt0.c0, t0.c0)))  WHEN t0.c0 COLLATE NOCASE THEN x'9479' END) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c2)*(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c2)*(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c2)*(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING COUNT((((t0.c0)) BETWEEN ((SUM(COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))) AND ((vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT((((t0.c0)) BETWEEN ((SUM(COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))) AND ((vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING ((COUNT((((t0.c0)) BETWEEN ((SUM(COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))) AND ((vt0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((('')%(t0.c0)) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((('')%(t0.c0)) IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((('')%(t0.c0)) IN ())) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM t0, vt0 WHERE (CAST((vt0.c2 IN ()) AS NUMERIC)) UNION SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM t0, vt0 WHERE ((NOT (CAST((vt0.c2 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM t0, vt0 WHERE (((CAST((vt0.c2 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, vt0.c2, vt0.c1 FROM t0, vt0;
SELECT vt0.c2, vt0.c0 FROM vt0, t0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (((vt0.c1)/(x''))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT ((NOT (((vt0.c1)/(x''))))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((((NOT (((vt0.c1)/(x''))))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0, t0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (- (((vt0.c0)>=(t0.c0)))) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT ((- (((vt0.c0)>=(t0.c0)))))) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (((- (((vt0.c0)>=(t0.c0))))) ISNULL);
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (- (((vt0.c0)>=(t0.c0)))) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT ((- (((vt0.c0)>=(t0.c0)))))) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (((- (((vt0.c0)>=(t0.c0))))) ISNULL);
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT vt0.c1 FROM t0 NATURAL JOIN vt0;
SELECT ALL vt0.c1 FROM t0 NATURAL JOIN vt0 WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c2)||(vt0.c2))) AND (0.08718897054133312))) UNION ALL SELECT vt0.c1 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c2)||(vt0.c2))) AND (0.08718897054133312))))) UNION ALL SELECT ALL vt0.c1 FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c2)||(vt0.c2))) AND (0.08718897054133312))) ISNULL));
SELECT vt0.c1 FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NOT ((+ (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT ((+ (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NOT ((+ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c2))) AND (json_array_length('1021229211', vt0.c2)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c2))) AND (json_array_length('1021229211', vt0.c2)))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0, t0 WHERE (((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c2))) AND (json_array_length('1021229211', vt0.c2)))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING MIN(GROUP_CONCAT(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (MIN(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((MIN(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((vt0.c2 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c1)!=(vt0.c1))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((vt0.c2 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c1)!=(vt0.c1))))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((vt0.c2 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c1)!=(vt0.c1))))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c2 IN ()))LIKE(t0.c0));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c2 IN ()))LIKE(t0.c0)) WHERE ((((vt0.c2, vt0.c1, vt0.c0, vt0.c0, 1064740332)) NOT BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c0 END, vt0.c1 COLLATE RTRIM, ((vt0.c0) ISNULL), CAST(x'' AS TEXT), ((((vt0.c1)OR(x'817a5382')))AND(vt0.c2)))) AND (('>\r{Gr' COLLATE RTRIM, ((vt0.c1)OR(vt0.c1)), ((vt0.c0) BETWEEN (0.5960643787757972) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c2 IN ()))LIKE(t0.c0)) WHERE ((NOT ((((vt0.c2, vt0.c1, vt0.c0, vt0.c0, 1064740332)) NOT BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c0 END, vt0.c1 COLLATE RTRIM, ((vt0.c0) ISNULL), CAST(x'' AS TEXT), ((((vt0.c1)OR(x'817a5382')))AND(vt0.c2)))) AND (('>\r{Gr' COLLATE RTRIM, ((vt0.c1)OR(vt0.c1)), ((vt0.c0) BETWEEN (0.5960643787757972) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2))))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c2 IN ()))LIKE(t0.c0)) WHERE ((((((vt0.c2, vt0.c1, vt0.c0, vt0.c0, 1064740332)) NOT BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c0 END, vt0.c1 COLLATE RTRIM, ((vt0.c0) ISNULL), CAST(x'' AS TEXT), ((((vt0.c1)OR(x'817a5382')))AND(vt0.c2)))) AND (('>\r{Gr' COLLATE RTRIM, ((vt0.c1)OR(vt0.c1)), ((vt0.c0) BETWEEN (0.5960643787757972) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2))))))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c2 IN ()))LIKE(t0.c0));
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 WHERE (((vt0.c0)OR(CAST(vt0.c2 AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (((vt0.c0)OR(CAST(vt0.c2 AS REAL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((vt0.c0)OR(CAST(vt0.c2 AS REAL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(AVG(SUM(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(AVG(SUM(COUNT(*)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(AVG(SUM(COUNT(*))))) ISNULL);
SELECT ALL vt0.c1 FROM t0 NATURAL JOIN vt0;
SELECT ALL vt0.c1 FROM t0 NATURAL JOIN vt0 WHERE (((((vt0.c0)=(t0.c0))) ISNULL)) UNION ALL SELECT ALL vt0.c1 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((((vt0.c0)==(t0.c0))) ISNULL)))) UNION ALL SELECT vt0.c1 FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)==(t0.c0))) ISNULL)) ISNULL));
SELECT ALL vt0.c1 FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE (vt0.c2) GROUP BY vt0.c0, t0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c0, t0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0, vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING MIN(((((((((TOTAL(vt0.c1))AND(vt0.c2)))OR(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))AND(x'')))OR(MAX(MAX(GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (MIN(((((((((TOTAL(vt0.c1))AND(vt0.c2)))OR(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))AND(x'')))OR(MAX(MAX(GROUP_CONCAT(vt0.c1)))))))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((MIN(((((((((TOTAL(vt0.c1))AND(vt0.c2)))OR(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))AND(x'')))OR(MAX(MAX(GROUP_CONCAT(vt0.c1))))))) ISNULL);
SELECT vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ('0.4990380503132269') UNION ALL SELECT vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT ('0.4990380503132269'))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((('0.4990380503132269') ISNULL));
SELECT vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE (vt0.c2 COLLATE RTRIM) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0 CROSS JOIN vt0 ON (((((vt0.c2 IN (vt0.c1, t0.c0)))AND(STRFTIME(vt0.c1, vt0.c0, vt0.c2))))OR(t0.c0 COLLATE BINARY)) GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0 CROSS JOIN vt0 ON (((((vt0.c2 IN (vt0.c1, t0.c0)))AND(STRFTIME(vt0.c1, vt0.c0, vt0.c2))))OR(t0.c0 COLLATE BINARY)) WHERE ((NOT (((((vt0.c2)OR(vt0.c0)))AND(t0.c0))))) GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0 CROSS JOIN vt0 ON (((((vt0.c2 IN (vt0.c1, t0.c0)))AND(STRFTIME(vt0.c1, vt0.c0, vt0.c2))))OR(t0.c0 COLLATE BINARY)) WHERE ((NOT ((NOT (((((vt0.c2)OR(vt0.c0)))AND(t0.c0))))))) GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0 CROSS JOIN vt0 ON (((((vt0.c2 IN (vt0.c1, t0.c0)))AND(STRFTIME(vt0.c1, vt0.c0, vt0.c2))))OR(t0.c0 COLLATE BINARY)) WHERE ((((NOT (((((vt0.c2)OR(vt0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, t0.c0, vt0.c1, vt0.c2 FROM t0 CROSS JOIN vt0 ON (((((vt0.c2 IN (vt0.c1, t0.c0)))AND(STRFTIME(vt0.c1, vt0.c0, vt0.c2))))OR(t0.c0 COLLATE BINARY)) GROUP BY vt0.c0, t0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2 HAVING x'' UNION ALL SELECT ALL vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2 HAVING (NOT (x'')) UNION ALL SELECT vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2 HAVING ((x'') ISNULL);
SELECT ALL vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2 HAVING x'' UNION ALL SELECT ALL vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2 HAVING (NOT (x'')) UNION ALL SELECT vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2 HAVING ((x'') ISNULL);
SELECT ALL vt0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c2;
SELECT SUM((((vt0.c0 IN ())) NOTNULL)) FROM vt0;
SELECT vt0.c2 FROM vt0, t0;
SELECT vt0.c2 FROM vt0, t0 WHERE (CASE WHEN -987725003 THEN ((vt0.c2)GLOB(t0.c0)) ELSE vt0.c1 COLLATE RTRIM END) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 WHERE ((NOT (CASE WHEN -987725003 THEN ((vt0.c2)GLOB(t0.c0)) ELSE vt0.c1 COLLATE RTRIM END))) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 WHERE (((CASE WHEN -987725003 THEN ((vt0.c2)GLOB(t0.c0)) ELSE vt0.c1 COLLATE RTRIM END) ISNULL));
SELECT vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1 COLLATE NOCASE))<>((vt0.c2, (('FR41')IS(vt0.c1)), ((vt0.c0) NOTNULL))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1 COLLATE NOCASE))!=((vt0.c2, (('FR41')IS(vt0.c1)), ((vt0.c0) NOTNULL))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1 COLLATE NOCASE))!=((vt0.c2, (('FR41')IS(vt0.c1)), ((vt0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((('/ᯠ#y')OR(((((vt0.c0)AND(vt0.c2)))AND(x'')))))AND(NULL))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((('/ᯠ#y')OR(((((vt0.c0)AND(vt0.c2)))AND(x'')))))AND(NULL))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((((('/ᯠ#y')OR(((((vt0.c0)AND(vt0.c2)))AND(x'')))))AND(NULL))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT t0.c0, vt0.c1, vt0.c2 FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) GROUP BY t0.c0, vt0.c1, vt0.c2;
SELECT t0.c0, vt0.c1, vt0.c2 FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) GROUP BY t0.c0, vt0.c1, vt0.c2 HAVING SUM(((COUNT(vt0.c1)) NOTNULL)) UNION ALL SELECT t0.c0, vt0.c1, vt0.c2 FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) GROUP BY t0.c0, vt0.c1, vt0.c2 HAVING (NOT (SUM(((COUNT(vt0.c1)) NOTNULL)))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c2 FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) GROUP BY t0.c0, vt0.c1, vt0.c2 HAVING ((SUM(((COUNT(vt0.c1)) NOTNULL))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN x'4ea3e7d6' END IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((CASE t0.c0  WHEN t0.c0 THEN x'4ea3e7d6' END IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN x'4ea3e7d6' END IN ())) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (CAST((- (vt0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (CAST((- (vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((CAST((- (vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS REAL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN t0 ON x'' GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN t0 ON x'' GROUP BY vt0.c1, vt0.c2 HAVING GROUP_CONCAT(TOTAL(t0.c0)) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN t0 ON x'' GROUP BY vt0.c1, vt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(t0.c0)))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN t0 ON x'' GROUP BY vt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(TOTAL(t0.c0))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM t0, vt0;
SELECT ALL vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM t0, vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0, t0.c0, vt0.c2)) BETWEEN (((((vt0.c0))==((vt0.c2))), COALESCE(DISTINCT vt0.c2, vt0.c2, t0.c0, t0.c0), ((vt0.c2) IS FALSE), t0.c0, (vt0.c2 IN ()))) AND ((((t0.c0)<=(vt0.c1)), ((vt0.c0)>(t0.c0)), '0.8788985582884987', (NOT (vt0.c1)), (~ (vt0.c1)))))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT ((((vt0.c2, vt0.c0, vt0.c0, t0.c0, vt0.c2)) BETWEEN (((((vt0.c0))=((vt0.c2))), COALESCE(DISTINCT vt0.c2, vt0.c2, t0.c0, t0.c0), ((vt0.c2) IS FALSE), t0.c0, (vt0.c2 IN ()))) AND ((((t0.c0)<=(vt0.c1)), ((vt0.c0)>(t0.c0)), '0.8788985582884987', (NOT (vt0.c1)), (~ (vt0.c1)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM t0, vt0 WHERE ((((((vt0.c2, vt0.c0, vt0.c0, t0.c0, vt0.c2)) BETWEEN (((((vt0.c0))=((vt0.c2))), COALESCE(DISTINCT vt0.c2, vt0.c2, t0.c0, t0.c0), ((vt0.c2) IS FALSE), t0.c0, (vt0.c2 IN ()))) AND ((((t0.c0)<=(vt0.c1)), ((vt0.c0)>(t0.c0)), '0.8788985582884987', (NOT (vt0.c1)), (~ (vt0.c1)))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END THEN (NOT (vt0.c2)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))) END) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END THEN (NOT (vt0.c2)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))) END))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END THEN (NOT (vt0.c2)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))) END) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 WHERE (CAST((vt0.c2 IN (vt0.c1)) AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (CAST((vt0.c2 IN (vt0.c1)) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE (((CAST((vt0.c2 IN (vt0.c1)) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2 HAVING x'' UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2 HAVING ((x'') ISNULL);
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2 HAVING x'' UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2 HAVING ((x'') ISNULL);
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0;
SELECT vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))AND(t0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, t0 WHERE ((NOT (((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))AND(t0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))AND(t0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ISNULL));
SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE (((t0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 ELSE t0.c0 END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE (((t0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE (((t0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 ELSE t0.c0 END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((- ((t0.c0 IN (vt0.c2, vt0.c2))))) GROUP BY vt0.c0, vt0.c2, t0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT ((- ((t0.c0 IN (vt0.c2, vt0.c2))))))) GROUP BY vt0.c0, vt0.c2, t0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((((- ((t0.c0 IN (vt0.c2, vt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, t0.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX((((TOTAL(TOTAL(SUM(t0.c0))))) NOT BETWEEN ((AVG(t0.c0))) AND ((SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX((((TOTAL(TOTAL(SUM(t0.c0))))) NOT BETWEEN ((AVG(t0.c0))) AND ((SUM(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX((((TOTAL(TOTAL(SUM(t0.c0))))) NOT BETWEEN ((AVG(t0.c0))) AND ((SUM(t0.c0)))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (PRINTF(NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (PRINTF(NULL)))) UNION ALL SELECT * FROM vt0 WHERE (((PRINTF(NULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE ((((t0.c0 IN (vt0.c1, vt0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE ((NOT ((((t0.c0 IN (vt0.c1, vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE ((((((t0.c0 IN (vt0.c1, vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM t0, vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((((vt0.c0)AND(NULL))) IS FALSE)) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(NULL))) IS FALSE)))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)AND(NULL))) IS FALSE)) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING COUNT(AVG(MIN(t0.c0))) UNION ALL SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (NOT (COUNT(AVG(MIN(t0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING ((COUNT(AVG(MIN(t0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((0X43647eef)>=(vt0.c2)))<>(((vt0.c2)*(vt0.c2))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((0x43647eef)>=(vt0.c2)))<>(((vt0.c2)*(vt0.c2))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((0x43647eef)>=(vt0.c2)))!=(((vt0.c2)*(vt0.c2))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.13706814933400446) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.13706814933400446))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.13706814933400446) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0 WHERE (CASE ((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1134940678'))  WHEN ((NULL) ISNULL) THEN UPPER(vt0.c2) END) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0 WHERE ((NOT (CASE ((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1134940678'))  WHEN ((NULL) ISNULL) THEN UPPER(vt0.c2) END))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((CASE ((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1134940678'))  WHEN ((NULL) ISNULL) THEN UPPER(vt0.c2) END) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING vt0.c2 UNION ALL SELECT t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (vt0.c2)) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((vt0.c2) ISNULL);
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING vt0.c2 UNION ALL SELECT t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (vt0.c2)) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((vt0.c2) ISNULL);
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE (0.27300954473151917) UNION ALL SELECT vt0.c2 FROM vt0 WHERE ((NOT (0.27300954473151917))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE (((0.27300954473151917) ISNULL));
SELECT ALL vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c0)GLOB(0X5184ea01)))>=(''))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((vt0.c0)GLOB(0X5184ea01)))>=(''))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c0)GLOB(0x5184ea01)))>=(''))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (CAST((- (vt0.c1)) AS REAL)) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CAST((- (vt0.c1)) AS REAL)))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST((- (vt0.c1)) AS REAL)) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c2 FROM t0, vt0;
SELECT ALL vt0.c2 FROM t0, vt0 WHERE (((((((((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))<(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN '-1057923468' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) UNION ALL SELECT vt0.c2 FROM t0, vt0 WHERE ((NOT (((((((((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))<(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN '-1057923468' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))))) UNION ALL SELECT vt0.c2 FROM t0, vt0 WHERE (((((((((((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))<(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN '-1057923468' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ISNULL));
SELECT vt0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0)+(t0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(((t0.c0)+(t0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0)+(t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))<(vt0.c1 COLLATE BINARY)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))<(vt0.c1 COLLATE BINARY)) WHERE (((vt0.c1 COLLATE BINARY)OR(((vt0.c2) IS TRUE)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))<(vt0.c1 COLLATE BINARY)) WHERE ((NOT (((vt0.c1 COLLATE BINARY)OR(((vt0.c2) IS TRUE)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))<(vt0.c1 COLLATE BINARY)) WHERE (((((vt0.c1 COLLATE BINARY)OR(((vt0.c2) IS TRUE)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))<(vt0.c1 COLLATE BINARY)) GROUP BY vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (((SUM(t0.c0) IN ()))-(((t0.c0) NOT BETWEEN (AVG(vt0.c2)) AND (COUNT(MIN(vt0.c0)))))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (NOT ((((SUM(t0.c0) IN ()))-(((t0.c0) NOT BETWEEN (AVG(vt0.c2)) AND (COUNT(MIN(vt0.c0)))))))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (((((SUM(t0.c0) IN ()))-(((t0.c0) NOT BETWEEN (AVG(vt0.c2)) AND (COUNT(MIN(vt0.c0))))))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((t0.c0)<<(t0.c0))) IS FALSE)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)<<(t0.c0))) IS FALSE)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((((t0.c0)<<(t0.c0))) IS FALSE)) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ('-1380345308') UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ('-1380345308'))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((('-1380345308') ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((- (vt0.c2)))AND((+ (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c2 AS REAL))))AND(IFNULL(vt0.c0, vt0.c0)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((((((- (vt0.c2)))AND((+ (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c2 AS REAL))))AND(IFNULL(vt0.c0, vt0.c0)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((((- (vt0.c2)))AND((+ (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c2 AS REAL))))AND(IFNULL(vt0.c0, vt0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING CASE WHEN COUNT(*) THEN COUNT(vt0.c2) WHEN ((AVG(MAX(vt0.c2)))>(SUM(TOTAL(GROUP_CONCAT(vt0.c2))))) THEN MIN(vt0.c2) WHEN ((((TOTAL(SUM(SUM(vt0.c1))))AND(MAX(vt0.c2))))AND(vt0.c0)) THEN COUNT(*) ELSE SUM(0.9616594809311901) END UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (CASE WHEN COUNT(*) THEN COUNT(vt0.c2) WHEN ((AVG(MAX(vt0.c2)))>(SUM(TOTAL(GROUP_CONCAT(vt0.c2))))) THEN MIN(vt0.c2) WHEN ((((TOTAL(SUM(SUM(vt0.c1))))AND(MAX(vt0.c2))))AND(vt0.c0)) THEN COUNT(*) ELSE SUM(0.9616594809311901) END)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((CASE WHEN COUNT(*) THEN COUNT(vt0.c2) WHEN ((AVG(MAX(vt0.c2)))>(SUM(TOTAL(GROUP_CONCAT(vt0.c2))))) THEN MIN(vt0.c2) WHEN ((((TOTAL(SUM(SUM(vt0.c1))))AND(MAX(vt0.c2))))AND(vt0.c0)) THEN COUNT(*) ELSE SUM(0.9616594809311901) END) ISNULL);
SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0;
SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((((+ (vt0.c1))) BETWEEN ((('')LIKE(t0.c0))) AND (((vt0.c2)/(t0.c0))))) UNION ALL SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT ((((+ (vt0.c1))) BETWEEN ((('')LIKE(t0.c0))) AND (((vt0.c2)/(t0.c0))))))) UNION ALL SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((((((+ (vt0.c1))) BETWEEN ((('')LIKE(t0.c0))) AND (((vt0.c2)/(t0.c0))))) ISNULL));
SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c2) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) COLLATE BINARY GROUP BY vt0.c2, t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) COLLATE BINARY WHERE (((MIN(t0.c0, t0.c0)) BETWEEN (CASE WHEN 0.7699711621828718 THEN vt0.c1 END) AND (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c0))))) GROUP BY vt0.c2, t0.c0, vt0.c0, vt0.c1 UNION SELECT vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) COLLATE BINARY WHERE ((NOT (((MIN(t0.c0, t0.c0)) BETWEEN (CASE WHEN 0.7699711621828718 THEN vt0.c1 END) AND (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c0))))))) GROUP BY vt0.c2, t0.c0, vt0.c0, vt0.c1 UNION SELECT vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) COLLATE BINARY WHERE (((((MIN(t0.c0, t0.c0)) BETWEEN (CASE WHEN 0.7699711621828718 THEN vt0.c1 END) AND (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c0))))) ISNULL)) GROUP BY vt0.c2, t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) COLLATE BINARY GROUP BY vt0.c2, t0.c0, vt0.c0, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (vt0.c2 COLLATE BINARY) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (vt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((vt0.c2 COLLATE BINARY) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c2 COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, t0.c0;
SELECT vt0.c2, t0.c0 FROM t0, vt0 WHERE ((~ (vt0.c1 COLLATE NOCASE))) GROUP BY vt0.c2, t0.c0 UNION SELECT vt0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT ((~ (vt0.c1 COLLATE NOCASE))))) GROUP BY vt0.c2, t0.c0 UNION SELECT vt0.c2, t0.c0 FROM t0, vt0 WHERE ((((~ (vt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c2, t0.c0;
SELECT ALL vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING json_array(json_extract(COUNT(*), t0.c0), CAST(SUM(COUNT(t0.c0)) AS NUMERIC), t0.c0 COLLATE BINARY, MIN(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (json_array(json_extract(COUNT(*), t0.c0), CAST(SUM(COUNT(t0.c0)) AS NUMERIC), t0.c0 COLLATE BINARY, MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((json_array(json_extract(COUNT(*), t0.c0), CAST(SUM(COUNT(t0.c0)) AS NUMERIC), t0.c0 COLLATE BINARY, MIN(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ('') UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (''))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((('') ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ('829553186') UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT ('829553186'))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((('829553186') ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT t0.c0, vt0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c2 FROM t0, vt0 WHERE (LOWER(((t0.c0)/(vt0.c2)))) GROUP BY t0.c0, vt0.c2 UNION SELECT ALL t0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT (LOWER(((t0.c0)/(vt0.c2)))))) GROUP BY t0.c0, vt0.c2 UNION SELECT ALL t0.c0, vt0.c2 FROM t0, vt0 WHERE (((LOWER(((t0.c0)/(vt0.c2)))) ISNULL)) GROUP BY t0.c0, vt0.c2;
SELECT t0.c0, vt0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE COUNT(t0.c0)  WHEN MIN(t0.c0) THEN t0.c0 WHEN CASE WHEN COUNT(*) THEN COUNT(*) ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN ('1253453970') AND (COUNT(*))) WHEN MAX(GROUP_CONCAT(t0.c0)) THEN CAST(t0.c0 AS REAL) ELSE MIN(t0.c0) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE COUNT(t0.c0)  WHEN MIN(t0.c0) THEN t0.c0 WHEN CASE WHEN COUNT(*) THEN COUNT(*) ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN ('1253453970') AND (COUNT(*))) WHEN MAX(GROUP_CONCAT(t0.c0)) THEN CAST(t0.c0 AS REAL) ELSE MIN(t0.c0) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE COUNT(t0.c0)  WHEN MIN(t0.c0) THEN t0.c0 WHEN CASE WHEN COUNT(*) THEN COUNT(*) ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN ('1253453970') AND (COUNT(*))) WHEN MAX(GROUP_CONCAT(t0.c0)) THEN CAST(t0.c0 AS REAL) ELSE MIN(t0.c0) END) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0;
SELECT t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((t0.c0) ISNULL))AND(((vt0.c0)GLOB(vt0.c1))))) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((((t0.c0) ISNULL))AND(((vt0.c0)GLOB(vt0.c1))))))) UNION ALL SELECT t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((t0.c0) ISNULL))AND(((vt0.c0)GLOB(vt0.c1))))) ISNULL));
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)-(NULL COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)-(NULL COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)-(NULL COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1, t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0, vt0.c2;
SELECT vt0.c1, t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT ((vt0.c2 IN (vt0.c2))))) GROUP BY vt0.c1, t0.c0, vt0.c0, vt0.c2 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT ((NOT ((vt0.c2 IN (vt0.c2))))))) GROUP BY vt0.c1, t0.c0, vt0.c0, vt0.c2 UNION SELECT vt0.c1, t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 WHERE ((((NOT ((vt0.c2 IN (vt0.c2))))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0, vt0.c2;
SELECT vt0.c1, t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0, vt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (MAX(((t0.c0)/(t0.c0)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)), CAST(t0.c0 AS REAL), json_patch(vt0.c1, vt0.c1))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (MAX(((t0.c0)/(t0.c0)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)), CAST(t0.c0 AS REAL), json_patch(vt0.c1, vt0.c1))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((MAX(((t0.c0)/(t0.c0)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)), CAST(t0.c0 AS REAL), json_patch(vt0.c1, vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM vt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)AND(((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))))AND(((vt0.c2)>=(vt0.c2)))))AND(json_type(vt0.c0))))AND(IFNULL(vt0.c2, vt0.c2)))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)AND(((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))))AND(((vt0.c2)>=(vt0.c2)))))AND(json_type(vt0.c0))))AND(IFNULL(vt0.c2, vt0.c2)))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)AND(((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))))AND(((vt0.c2)>=(vt0.c2)))))AND(json_type(vt0.c0))))AND(IFNULL(vt0.c2, vt0.c2)))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SQLITE_COMPILEOPTION_GET(t0.c0))>=(COUNT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SQLITE_COMPILEOPTION_GET(t0.c0))>=(COUNT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SQLITE_COMPILEOPTION_GET(t0.c0))>=(COUNT(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SQLITE_COMPILEOPTION_GET(t0.c0))>=(COUNT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SQLITE_COMPILEOPTION_GET(t0.c0))>=(COUNT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SQLITE_COMPILEOPTION_GET(t0.c0))>=(COUNT(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (TYPEOF(DISTINCT x'')))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT (((COALESCE(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (TYPEOF(DISTINCT x'')))))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE (((((COALESCE(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (TYPEOF(DISTINCT x'')))) ISNULL));
SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((((vt0.c2 IN ())) BETWEEN (((vt0.c2) NOTNULL)) AND (((vt0.c2)|(t0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c2 IN ())) BETWEEN (((vt0.c2) NOTNULL)) AND (((vt0.c2)|(t0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((((((vt0.c2 IN ())) BETWEEN (((vt0.c2) NOTNULL)) AND (((vt0.c2)|(t0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((vt0.c0 IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((vt0.c0 IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (~ (UNLIKELY(DISTINCT vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT ((~ (UNLIKELY(DISTINCT vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (((~ (UNLIKELY(DISTINCT vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (~ (UNLIKELY(DISTINCT vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT ((~ (UNLIKELY(DISTINCT vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (((~ (UNLIKELY(DISTINCT vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c2)>=(vt0.c2))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c2)>=(vt0.c2))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c2)>=(vt0.c2))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (CASE (vt0.c2 IN ())  WHEN (NOT (t0.c0)) THEN 1.367665153E9 ELSE (vt0.c2 IN ()) END) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (CASE (vt0.c2 IN ())  WHEN (NOT (t0.c0)) THEN 1.367665153E9 ELSE (vt0.c2 IN ()) END))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((CASE (vt0.c2 IN ())  WHEN (NOT (t0.c0)) THEN 1.367665153E9 ELSE (vt0.c2 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 NOT INDEXED WHERE (((vt0.c2 COLLATE NOCASE)|(((vt0.c1)|(vt0.c1))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c2 COLLATE NOCASE)|(((vt0.c1)|(vt0.c1))))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (((((vt0.c2 COLLATE NOCASE)|(((vt0.c1)|(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(TOTAL(AVG(MIN(AVG(AVG(vt0.c2))))))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING (NOT (((GROUP_CONCAT(TOTAL(AVG(MIN(AVG(AVG(vt0.c2))))))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING ((((GROUP_CONCAT(TOTAL(AVG(MIN(AVG(AVG(vt0.c2))))))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c2 FROM t0, vt0;
SELECT ALL vt0.c2 FROM t0, vt0 WHERE (CASE x''  WHEN ((((x'')OR(vt0.c1)))OR(vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN '1476648324' WHEN '-2028637198' THEN vt0.c1 WHEN vt0.c1 THEN -451131537 ELSE vt0.c0 END ELSE (t0.c0 IN ()) END) UNION ALL SELECT vt0.c2 FROM t0, vt0 WHERE ((NOT (CASE x''  WHEN ((((x'')OR(vt0.c1)))OR(vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN '1476648324' WHEN '-2028637198' THEN vt0.c1 WHEN vt0.c1 THEN -451131537 ELSE vt0.c0 END ELSE (t0.c0 IN ()) END))) UNION ALL SELECT vt0.c2 FROM t0, vt0 WHERE (((CASE x''  WHEN ((((x'')OR(vt0.c1)))OR(vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN '1476648324' WHEN '-2028637198' THEN vt0.c1 WHEN vt0.c1 THEN -451131537 ELSE vt0.c0 END ELSE (t0.c0 IN ()) END) ISNULL));
SELECT ALL vt0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((JULIANDAY('*^', t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0))>=((t0.c0)))) AND ((((t0.c0))>=((t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((JULIANDAY('*^', t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0))>=((t0.c0)))) AND ((((t0.c0))>=((t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((JULIANDAY('*^', t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0))>=((t0.c0)))) AND ((((t0.c0))>=((t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((TRIM(DISTINCT vt0.c2))<<(((vt0.c0)&(vt0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((TRIM(DISTINCT vt0.c2))<<(((vt0.c0)&(vt0.c0))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((TRIM(DISTINCT vt0.c2))<<(((vt0.c0)&(vt0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING MAX(((((t0.c0)AND(t0.c0)))OR(vt0.c0))) UNION ALL SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((((t0.c0)AND(t0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((MAX(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING MAX(((((t0.c0)AND(t0.c0)))OR(vt0.c0))) UNION ALL SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((((t0.c0)AND(t0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((MAX(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) BETWEEN (LIKE(t0.c0, t0.c0, '&')) AND (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (LIKE(t0.c0, t0.c0, '&')) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (LIKE(t0.c0, t0.c0, '&')) AND (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (((COUNT(COUNT(*)), AVG(GROUP_CONCAT(vt0.c0)), MIN(vt0.c1))) BETWEEN ((vt0.c0, COUNT(*), GROUP_CONCAT(MIN(COUNT(vt0.c2))))) AND ((((MIN(vt0.c2)) NOT BETWEEN (vt0.c1) AND (MAX(AVG(SUM(vt0.c0))))), COUNT(*), COUNT(*)))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT ((((COUNT(COUNT(*)), AVG(GROUP_CONCAT(vt0.c0)), MIN(vt0.c1))) BETWEEN ((vt0.c0, COUNT(*), GROUP_CONCAT(MIN(COUNT(vt0.c2))))) AND ((((MIN(vt0.c2)) NOT BETWEEN (vt0.c1) AND (MAX(AVG(SUM(vt0.c0))))), COUNT(*), COUNT(*)))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (((((COUNT(COUNT(*)), AVG(GROUP_CONCAT(vt0.c0)), MIN(vt0.c1))) BETWEEN ((vt0.c0, COUNT(*), GROUP_CONCAT(MIN(COUNT(vt0.c2))))) AND ((((MIN(vt0.c2)) NOT BETWEEN (vt0.c1) AND (MAX(AVG(SUM(vt0.c0))))), COUNT(*), COUNT(*))))) ISNULL);
SELECT * FROM vt0 NATURAL JOIN t0;
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c2) UNION ALL SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c2) ISNULL));
SELECT * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((CAST(vt0.c2 AS INTEGER))OR(((vt0.c2)/(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((CAST(vt0.c2 AS INTEGER))OR(((vt0.c2)/(vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((((CAST(vt0.c2 AS INTEGER))OR(((vt0.c2)/(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0;
SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0 WHERE ((((NOT (t0.c0))) ISNULL)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, vt0 WHERE ((NOT ((((NOT (t0.c0))) ISNULL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, vt0 WHERE ((((((NOT (t0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING UPPER(CAST(t0.c0 AS INTEGER)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (UPPER(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((UPPER(CAST(t0.c0 AS INTEGER))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING UPPER(CAST(t0.c0 AS INTEGER)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (UPPER(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((UPPER(CAST(t0.c0 AS INTEGER))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((LOWER('<a'))>>((t0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((LOWER('<a'))>>((t0.c0 IN ())))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((LOWER('<a'))>>((t0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 WHERE (((CAST(vt0.c2 AS BLOB))IS(CAST(vt0.c1 AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (((CAST(vt0.c2 AS BLOB))IS(CAST(vt0.c1 AS REAL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((CAST(vt0.c2 AS BLOB))IS(CAST(vt0.c1 AS REAL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(COUNT(0x34625618)) UNION ALL SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(0X34625618)))) UNION ALL SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(COUNT(0x34625618))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((vt0.c2)) BETWEEN ((CASE WHEN vt0.c2 THEN 0.9654784808414688 ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((vt0.c2)) BETWEEN ((CASE WHEN vt0.c2 THEN 0.9654784808414688 ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL))))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c2)) BETWEEN ((CASE WHEN vt0.c2 THEN 0.9654784808414688 ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL))))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (rtreenode(CAST('' AS TEXT), HEX(t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (rtreenode(CAST('' AS TEXT), HEX(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE (((rtreenode(CAST('' AS TEXT), HEX(t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 IN ()) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(GROUP_CONCAT(COUNT(*)) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(*)) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(GROUP_CONCAT(COUNT(*)) AS TEXT)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (json_quote(((vt0.c1)*(vt0.c1)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (json_quote(((vt0.c1)*(vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((json_quote(((vt0.c1)*(vt0.c1)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (x'7e07' COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (x'7e07' COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((x'7e07' COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (((((t0.c0)LIKE(t0.c0)))LIKE(CAST(vt0.c2 AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)LIKE(t0.c0)))LIKE(CAST(vt0.c2 AS BLOB)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE (((((((t0.c0)LIKE(t0.c0)))LIKE(CAST(vt0.c2 AS BLOB)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(AVG(MIN(t0.c0))) COLLATE BINARY UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(MIN(t0.c0))) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((GROUP_CONCAT(AVG(MIN(t0.c0))) COLLATE BINARY) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c2) BETWEEN (vt0.c2) AND (0.5605495080722003)))OR(((((vt0.c0)AND(vt0.c1)))AND('-219670969')))))AND((NOT (vt0.c2))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c2) BETWEEN (vt0.c2) AND (0.5605495080722003)))OR(((((vt0.c0)AND(vt0.c1)))AND('-219670969')))))AND((NOT (vt0.c2))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c2) BETWEEN (vt0.c2) AND (0.5605495080722003)))OR(((((vt0.c0)AND(vt0.c1)))AND('-219670969')))))AND((NOT (vt0.c2))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE (CASE NULL  WHEN vt0.c0 THEN ((vt0.c1) IS FALSE) END) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (CASE NULL  WHEN vt0.c0 THEN ((vt0.c1) IS FALSE) END))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN ((vt0.c1) IS FALSE) END) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT t0.c0, vt0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c2;
SELECT t0.c0, vt0.c2 FROM t0, vt0 WHERE (-280024) GROUP BY t0.c0, vt0.c2 UNION SELECT t0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT (-280024))) GROUP BY t0.c0, vt0.c2 UNION SELECT t0.c0, vt0.c2 FROM t0, vt0 WHERE (((-280024) ISNULL)) GROUP BY t0.c0, vt0.c2;
SELECT t0.c0, vt0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c2;
SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING MAX(MIN(t0.c0)) UNION ALL SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (MAX(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING ((MAX(MIN(t0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST((- (t0.c0)) AS INTEGER)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST((- (t0.c0)) AS INTEGER)))) UNION ALL SELECT * FROM t0 WHERE (((CAST((- (t0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST((NOT (t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST((NOT (t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (0Xfffffffff15d528a) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (0Xfffffffff15d528a))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((0xfffffffff15d528a) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING CASE WHEN GROUP_CONCAT(vt0.c1) COLLATE RTRIM THEN COUNT(vt0.c0) WHEN AVG(COUNT(*)) THEN '-1985971076' WHEN COUNT(*) THEN COUNT(*) ELSE AVG(MIN(TOTAL(AVG(vt0.c1)))) END UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt0.c1) COLLATE RTRIM THEN COUNT(vt0.c0) WHEN AVG(COUNT(*)) THEN '-1985971076' WHEN COUNT(*) THEN COUNT(*) ELSE AVG(MIN(TOTAL(AVG(vt0.c1)))) END)) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING ((CASE WHEN GROUP_CONCAT(vt0.c1) COLLATE RTRIM THEN COUNT(vt0.c0) WHEN AVG(COUNT(*)) THEN '-1985971076' WHEN COUNT(*) THEN COUNT(*) ELSE AVG(MIN(TOTAL(AVG(vt0.c1)))) END) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND((t0.c0 IN (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((CAST(t0.c0 AS REAL))AND((t0.c0 IN (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM t0 WHERE (((((((CAST(t0.c0 AS REAL))AND((t0.c0 IN (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((- (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((- (((((t0.c0)OR(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((- (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, t0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT NULL)))) GROUP BY vt0.c2, vt0.c1, vt0.c0, t0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT NULL)))))) GROUP BY vt0.c2, vt0.c1, vt0.c0, t0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT NULL)))) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING TOTAL(AVG(MAX(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (TOTAL(AVG(MAX(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((TOTAL(AVG(MAX(vt0.c0)) COLLATE BINARY)) ISNULL);
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)AND(0.2847126882227682)))OR(t0.c0))));
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)AND(0.2847126882227682)))OR(t0.c0)))) WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.6707492458733876) AS NUMERIC)) UNION ALL SELECT t0.c0, vt0.c0, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)AND(0.2847126882227682)))OR(t0.c0)))) WHERE ((NOT (CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.6707492458733876) AS NUMERIC)))) UNION ALL SELECT t0.c0, vt0.c0, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)AND(0.2847126882227682)))OR(t0.c0)))) WHERE (((CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.6707492458733876) AS NUMERIC)) ISNULL));
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)AND(0.2847126882227682)))OR(t0.c0))));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.c2 ELSE vt0.c2 END) BETWEEN (((vt0.c2)=(t0.c0))) AND (((vt0.c0)<(vt0.c2))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN NULL THEN vt0.c2 ELSE vt0.c2 END) BETWEEN (((vt0.c2)==(t0.c0))) AND (((vt0.c0)<(vt0.c2))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((CASE vt0.c0  WHEN NULL THEN vt0.c2 ELSE vt0.c2 END) BETWEEN (((vt0.c2)=(t0.c0))) AND (((vt0.c0)<(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 WHERE ((((((~ (vt0.c0)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT ((((((~ (vt0.c0)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((((((((~ (vt0.c0)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (NULL) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (CAST(((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((CAST(((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT ALL vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c2, vt0.c0, t0.c0;
SELECT ALL vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE (-1.464628239E9) GROUP BY vt0.c2, vt0.c0, t0.c0 UNION SELECT ALL vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (-1.464628239E9))) GROUP BY vt0.c2, vt0.c0, t0.c0 UNION SELECT vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE (((-1.464628239E9) ISNULL)) GROUP BY vt0.c2, vt0.c0, t0.c0;
SELECT ALL vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c2, vt0.c0, t0.c0;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT (SUM(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT ((NOT (SUM(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (((NOT (SUM(GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))<>(HEX(t0.c0)))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))<>(HEX(t0.c0)))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))<>(HEX(t0.c0)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c2, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (-434718585) UNION SELECT DISTINCT t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (-434718585))) UNION SELECT DISTINCT t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (((-434718585) ISNULL));
SELECT DISTINCT t0.c0, vt0.c2, vt0.c0 FROM t0, vt0;
SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT vt0.c1, t0.c0, vt0.c2 FROM t0, vt0 WHERE (((t0.c0 COLLATE RTRIM)OR(((((vt0.c0)AND(vt0.c1)))OR(t0.c0))))) GROUP BY vt0.c1, t0.c0, vt0.c2 UNION SELECT vt0.c1, t0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)OR(((((vt0.c0)AND(vt0.c1)))OR(t0.c0))))))) GROUP BY vt0.c1, t0.c0, vt0.c2 UNION SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM t0, vt0 WHERE (((((t0.c0 COLLATE RTRIM)OR(((((vt0.c0)AND(vt0.c1)))OR(t0.c0))))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 WHERE (((((t0.c0))<=((vt0.c0))) IN ())) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0))<=((vt0.c0))) IN ())))) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE (((((((t0.c0))<=((vt0.c0))) IN ())) ISNULL));
SELECT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL COLLATE BINARY, 'c|?')) AND ((0.09244039962032868, ((t0.c0)<=('-496917124')), (t0.c0 IN (t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL COLLATE BINARY, 'c|?')) AND ((0.09244039962032868, ((t0.c0)<=('-496917124')), (t0.c0 IN (t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL COLLATE BINARY, 'c|?')) AND ((0.09244039962032868, ((t0.c0)<=('-496917124')), (t0.c0 IN (t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 WHERE (json_object(CAST(vt0.c0 AS NUMERIC), vt0.c1)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE ((NOT (json_object(CAST(vt0.c0 AS NUMERIC), vt0.c1)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, t0 WHERE (((json_object(CAST(vt0.c0 AS NUMERIC), vt0.c1)) ISNULL)) GROUP BY vt0.c1;
SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt0.c2, vt0.c0 FROM vt0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((~ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ((~ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((((~ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0)<(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0)<(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0)<(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((vt0.c2 IN (((3.05444327E8)<<(1130659567))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((vt0.c2 IN (((3.05444327E8)<<(1130659567))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((vt0.c2 IN (((3.05444327E8)<<(1130659567))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(TRIM(DISTINCT SUM(SUM(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(TRIM(DISTINCT SUM(SUM(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(TRIM(DISTINCT SUM(SUM(t0.c0))))) ISNULL);
SELECT ALL MAX((vt0.c1 COLLATE NOCASE IN ())) FROM t0, vt0 ORDER BY ((vt0.c1)>(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN (t0.c0 IN ()) ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN (t0.c0 IN ()) ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN (t0.c0 IN ()) ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((CAST(vt0.c2 AS REAL), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM))<>(((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((x'43d0', vt0.c1, vt0.c0))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((CAST(vt0.c2 AS REAL), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM))<>(((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((x'43d0', vt0.c1, vt0.c0))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((CAST(vt0.c2 AS REAL), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM))!=(((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((x'43d0', vt0.c1, vt0.c0))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)>(CAST(0.6670743239556861 AS BLOB)))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)>(CAST(0.6670743239556861 AS BLOB)))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE (((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)>(CAST(0.6670743239556861 AS BLOB)))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING TOTAL(MAX(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (TOTAL(MAX(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((TOTAL(MAX(vt0.c1))) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ());
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) WHERE ((((vt0.c1 IN (vt0.c2)))=((vt0.c2 IN ())))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) WHERE ((NOT ((((vt0.c1 IN (vt0.c2)))=((vt0.c2 IN ())))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) WHERE ((((((vt0.c1 IN (vt0.c2)))==((vt0.c2 IN ())))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ());
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END) AND ((+ (NULL))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c2 AS NUMERIC)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END) AND ((+ (NULL))))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 NOT INDEXED WHERE (((((CAST(vt0.c2 AS NUMERIC)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END) AND ((+ (NULL))))) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((((COUNT(MIN(t0.c0)) IN (MAX(AVG(t0.c0)))))AND(((COUNT(COUNT(*))) NOT BETWEEN (t0.c0) AND (COUNT(t0.c0))))))OR(GROUP_CONCAT(COUNT(MIN(t0.c0))))))AND(MAX(SUM(COUNT(COUNT(*)))))))AND(SUM(SUM(MIN(MIN(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((((((COUNT(MIN(t0.c0)) IN (MAX(AVG(t0.c0)))))AND(((COUNT(COUNT(*))) NOT BETWEEN (t0.c0) AND (COUNT(t0.c0))))))OR(GROUP_CONCAT(COUNT(MIN(t0.c0))))))AND(MAX(SUM(COUNT(COUNT(*)))))))AND(SUM(SUM(MIN(MIN(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((((((COUNT(MIN(t0.c0)) IN (MAX(AVG(t0.c0)))))AND(((COUNT(COUNT(*))) NOT BETWEEN (t0.c0) AND (COUNT(t0.c0))))))OR(GROUP_CONCAT(COUNT(MIN(t0.c0))))))AND(MAX(SUM(COUNT(COUNT(*)))))))AND(SUM(SUM(MIN(MIN(t0.c0))))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((COALESCE(t0.c0, t0.c0))IS(((t0.c0)LIKE(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((COALESCE(t0.c0, t0.c0))IS(((t0.c0)LIKE(t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((COALESCE(t0.c0, t0.c0))IS(((t0.c0)LIKE(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) NOT BETWEEN (t0.c0) AND (vt0.c2 COLLATE NOCASE));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) NOT BETWEEN (t0.c0) AND (vt0.c2 COLLATE NOCASE)) WHERE (((((((vt0.c0)AND(vt0.c1)))OR(0xffffffffb94f7ae8)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) NOT BETWEEN (t0.c0) AND (vt0.c2 COLLATE NOCASE)) WHERE ((NOT (((((((vt0.c0)AND(vt0.c1)))OR(0Xffffffffb94f7ae8)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) NOT BETWEEN (t0.c0) AND (vt0.c2 COLLATE NOCASE)) WHERE (((((((((vt0.c0)AND(vt0.c1)))OR(0xffffffffb94f7ae8)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) NOT BETWEEN (t0.c0) AND (vt0.c2 COLLATE NOCASE));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (COALESCE(((((t0.c0)OR(t0.c0)))AND(0.8736644474873178)), ((t0.c0)IS(t0.c0)), ((t0.c0)<(t0.c0)), ((t0.c0) IS TRUE), t0.c0, load_extension(t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (COALESCE(((((t0.c0)OR(t0.c0)))AND(0.8736644474873178)), ((t0.c0)IS(t0.c0)), ((t0.c0)<(t0.c0)), ((t0.c0) IS TRUE), t0.c0, load_extension(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((COALESCE(((((t0.c0)OR(t0.c0)))AND(0.8736644474873178)), ((t0.c0)IS(t0.c0)), ((t0.c0)<(t0.c0)), ((t0.c0) IS TRUE), t0.c0, load_extension(t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((((0.871861895015063)OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(NULL))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (((((0.871861895015063)OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(NULL))))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((((((0.871861895015063)OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(NULL)))) ISNULL);
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((((0.871861895015063)OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(NULL))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (((((0.871861895015063)OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(NULL))))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((((((0.871861895015063)OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(NULL)))) ISNULL);
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(((vt0.c2)<<(t0.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT t0.c0) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (TRIM(DISTINCT t0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE (((TRIM(DISTINCT t0.c0) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c2, 0.5590580224933679))<=(-0.0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((LIKELIHOOD(DISTINCT vt0.c2, 0.5590580224933679))<=(-0.0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c2, 0.5590580224933679))<=(-0.0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((- (-82081975))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0) NOT NULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((- (-82081975))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0) NOT NULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((- (-82081975))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0) NOT NULL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING AVG(CAST(vt0.c0 AS TEXT)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (AVG(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((AVG(CAST(vt0.c0 AS TEXT))) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING AVG(CAST(vt0.c0 AS TEXT)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (AVG(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((AVG(CAST(vt0.c0 AS TEXT))) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)|(t0.c0)) COLLATE BINARY;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)|(t0.c0)) COLLATE BINARY WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)|(t0.c0)) COLLATE BINARY WHERE ((NOT (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)|(t0.c0)) COLLATE BINARY WHERE (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)|(t0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))) AND (((vt0.c2) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))) AND (((vt0.c2) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))) AND (((vt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((((((vt0.c1)>>(vt0.c2))))>=((CAST(vt0.c2 AS BLOB))))) GROUP BY vt0.c1, t0.c0 UNION SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT ((((((vt0.c1)>>(vt0.c2))))>=((CAST(vt0.c2 AS BLOB))))))) GROUP BY vt0.c1, t0.c0 UNION SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 WHERE ((((((((vt0.c1)>>(vt0.c2))))>=((CAST(vt0.c2 AS BLOB))))) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0 HAVING TOTAL(SUM(vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0 HAVING (NOT (TOTAL(SUM(vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0 HAVING ((TOTAL(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((- ((~ (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((- ((~ (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE ((((- ((~ (t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND ((((x'')AND(t0.c0)))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND ((((x'')AND(t0.c0)))))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((((((vt0.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND ((((x'')AND(t0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (CASE WHEN vt0.c2 THEN ((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) ELSE ((vt0.c1)+(vt0.c2)) END) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN ((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) ELSE ((vt0.c1)+(vt0.c2)) END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((CASE WHEN vt0.c2 THEN ((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) ELSE ((vt0.c1)+(vt0.c2)) END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING SUM(SUM('-90424773')) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING (NOT (SUM(SUM('-90424773')))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING ((SUM(SUM('-90424773'))) ISNULL);
SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM vt0, t0;
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) UNION ALL SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) ISNULL));
SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((t0.c0)AND(vt0.c2)))AND(vt0.c1))) NOT BETWEEN ((NOT ('P8*f-'))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c2, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0)AND(vt0.c2)))AND(vt0.c1))) NOT BETWEEN ((NOT ('P8*f-'))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((((t0.c0)AND(vt0.c2)))AND(vt0.c1))) NOT BETWEEN ((NOT ('P8*f-'))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((((t0.c0) IS TRUE))=(((vt0.c1) IS FALSE)))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0 WHERE ((NOT (((((t0.c0) IS TRUE))==(((vt0.c1) IS FALSE)))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((((((t0.c0) IS TRUE))==(((vt0.c1) IS FALSE)))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING TOTAL(SUM(vt0.c2)) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (TOTAL(SUM(vt0.c2)))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((TOTAL(SUM(vt0.c2))) ISNULL);
SELECT SUM((~ (t0.c0))) FROM t0 ORDER BY ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR((- (t0.c0)))))AND(IFNULL(t0.c0, t0.c0)))  NULLS LAST, (((+ (t0.c0)))|((- (t0.c0)))) ASC  NULLS LAST;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c1 END)OR(x'')))AND(vt0.c0)))OR(IFNULL(DISTINCT vt0.c2, vt0.c2))))OR(CAST(vt0.c2 AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((CASE WHEN vt0.c1 THEN vt0.c1 END)OR(x'')))AND(vt0.c0)))OR(IFNULL(DISTINCT vt0.c2, vt0.c2))))OR(CAST(vt0.c2 AS TEXT)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((CASE WHEN vt0.c1 THEN vt0.c1 END)OR(x'')))AND(vt0.c0)))OR(IFNULL(DISTINCT vt0.c2, vt0.c2))))OR(CAST(vt0.c2 AS TEXT)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (((vt0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (((vt0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (((vt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (LIKELY(DISTINCT (vt0.c0 IN ()))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (LIKELY(DISTINCT (vt0.c0 IN ()))))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((LIKELY(DISTINCT (vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON ((((t0.c0) ISNULL))<(CAST(vt0.c2 AS TEXT)));
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON ((((t0.c0) ISNULL))<(CAST(vt0.c2 AS TEXT))) WHERE (CAST((t0.c0 IN (vt0.c0)) AS BLOB)) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON ((((t0.c0) ISNULL))<(CAST(vt0.c2 AS TEXT))) WHERE ((NOT (CAST((t0.c0 IN (vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON ((((t0.c0) ISNULL))<(CAST(vt0.c2 AS TEXT))) WHERE (((CAST((t0.c0 IN (vt0.c0)) AS BLOB)) ISNULL));
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON ((((t0.c0) ISNULL))<(CAST(vt0.c2 AS TEXT)));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULLIF(t0.c0, t0.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULLIF(t0.c0, t0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE (((NULLIF(t0.c0, t0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (HEX(((t0.c0)AND(t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (HEX(((t0.c0)AND(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((HEX(((t0.c0)AND(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))) IN ()))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (((AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))) IN ())) ISNULL);
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))) IN ()))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (((AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))) IN ())) ISNULL);
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM t0, vt0;
SELECT t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM t0, vt0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN ((vt0.c2)IS('240540657')) END) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT (CASE WHEN NULL COLLATE NOCASE THEN ((vt0.c2)IS('240540657')) END))) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM t0, vt0 WHERE (((CASE WHEN NULL COLLATE NOCASE THEN ((vt0.c2)IS('240540657')) END) ISNULL));
SELECT ALL t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN ((NOT (t0.c0))) AND (TRIM(t0.c0, t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN ((NOT (t0.c0))) AND (TRIM(t0.c0, t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN ((NOT (t0.c0))) AND (TRIM(t0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0 WHERE (((('MI0︔-?' IN ()))>=(((vt0.c2)LIKE(vt0.c0))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM t0, vt0 WHERE ((NOT (((('MI0︔-?' IN ()))>=(((vt0.c2)LIKE(vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, vt0 WHERE (((((('MI0︔-?' IN ()))>=(((vt0.c2)LIKE(vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0;
SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0 HAVING ((GROUP_CONCAT(vt0.c2)) ISNULL) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c2)) ISNULL))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0 HAVING ((((GROUP_CONCAT(vt0.c2)) ISNULL)) ISNULL);
SELECT ALL vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0;
SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0 HAVING ((GROUP_CONCAT(vt0.c2)) ISNULL) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c2)) ISNULL))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0 HAVING ((((GROUP_CONCAT(vt0.c2)) ISNULL)) ISNULL);
SELECT ALL vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c2, t0.c0;
SELECT TOTAL(((t0.c0 COLLATE NOCASE) IS FALSE)) FROM t0 NOT INDEXED ORDER BY (((~ (t0.c0)))<=(((t0.c0)<=(t0.c0))))  NULLS FIRST;
SELECT vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0;
SELECT vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0 WHERE (((((((vt0.c2)>=(vt0.c1)))OR((- (vt0.c1)))))OR(((t0.c0)*(vt0.c0))))) UNION ALL SELECT ALL vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((((((vt0.c2)>=(vt0.c1)))OR((- (vt0.c1)))))OR(((t0.c0)*(vt0.c0))))))) UNION ALL SELECT ALL vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((((vt0.c2)>=(vt0.c1)))OR((- (vt0.c1)))))OR(((t0.c0)*(vt0.c0))))) ISNULL));
SELECT vt0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CASE WHEN ((((((((vt0.c1)OR(0.7340795131203981)))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>>(0.8788985582884987)) END) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CASE WHEN ((((((((vt0.c1)OR(0.7340795131203981)))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>>(0.8788985582884987)) END))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE WHEN ((((((((vt0.c1)OR(0.7340795131203981)))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>>(0.8788985582884987)) END) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((((vt0.c1)>=(vt0.c2)) IN ())) GROUP BY t0.c0, vt0.c0, vt0.c1 UNION SELECT t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT ((((vt0.c1)>=(vt0.c2)) IN ())))) GROUP BY t0.c0, vt0.c0, vt0.c1 UNION SELECT t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((((((vt0.c1)>=(vt0.c2)) IN ())) ISNULL)) GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN (NOT (t0.c0)) END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN (+ (t0.c0)) THEN (NOT (t0.c0)) END))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CASE WHEN (+ (t0.c0)) THEN (NOT (t0.c0)) END) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((vt0.c1, vt0.c2, t0.c0)) NOT BETWEEN (((NOT (vt0.c1)), ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(vt0.c2)))AND(t0.c0)), ((((((((vt0.c2)OR(vt0.c1)))AND(x'2563')))AND(vt0.c1)))OR(vt0.c2)))) AND ((CASE ''  WHEN vt0.c2 THEN vt0.c1 END, 0.10242024575957154, 0.0)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((vt0.c1, vt0.c2, t0.c0)) NOT BETWEEN (((NOT (vt0.c1)), ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(vt0.c2)))AND(t0.c0)), ((((((((vt0.c2)OR(vt0.c1)))AND(x'2563')))AND(vt0.c1)))OR(vt0.c2)))) AND ((CASE ''  WHEN vt0.c2 THEN vt0.c1 END, 0.10242024575957154, 0.0)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((vt0.c1, vt0.c2, t0.c0)) NOT BETWEEN (((NOT (vt0.c1)), ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(vt0.c2)))AND(t0.c0)), ((((((((vt0.c2)OR(vt0.c1)))AND(x'2563')))AND(vt0.c1)))OR(vt0.c2)))) AND ((CASE ''  WHEN vt0.c2 THEN vt0.c1 END, 0.10242024575957154, 0.0)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 WHERE (((((((((((vt0.c2)AND(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))*(((vt0.c2)+(t0.c0))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, t0 WHERE ((NOT (((((((((((vt0.c2)AND(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))*(((vt0.c2)+(t0.c0))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE (((((((((((((vt0.c2)AND(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))*(((vt0.c2)+(t0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((t0.c0)OR(SUM(SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((t0.c0)OR(SUM(SUM(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((t0.c0)OR(SUM(SUM(t0.c0)))))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((CHAR(vt0.c1), vt0.c1, CAST(vt0.c0 AS REAL), ((vt0.c0)%(vt0.c1)), ((vt0.c0) NOTNULL)))<(('-1057923468', (t0.c0 IN ()), (- (vt0.c2)), ((vt0.c2)-(vt0.c1)), vt0.c2 COLLATE RTRIM)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((CHAR(vt0.c1), vt0.c1, CAST(vt0.c0 AS REAL), ((vt0.c0)%(vt0.c1)), ((vt0.c0) NOTNULL)))<(('-1057923468', (t0.c0 IN ()), (- (vt0.c2)), ((vt0.c2)-(vt0.c1)), vt0.c2 COLLATE RTRIM)))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((CHAR(vt0.c1), vt0.c1, CAST(vt0.c0 AS REAL), ((vt0.c0)%(vt0.c1)), ((vt0.c0) NOTNULL)))<(('-1057923468', (t0.c0 IN ()), (- (vt0.c2)), ((vt0.c2)-(vt0.c1)), vt0.c2 COLLATE RTRIM)))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (((((((((((((((t0.c0)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(t0.c0)))OR(vt0.c2)))AND(vt0.c0))) BETWEEN (((0.2636303968026624)||(t0.c0))) AND (vt0.c0))) UNION SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (((((((((((((((t0.c0)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(t0.c0)))OR(vt0.c2)))AND(vt0.c0))) BETWEEN (((0.2636303968026624)||(t0.c0))) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (((((((((((((((((t0.c0)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(t0.c0)))OR(vt0.c2)))AND(vt0.c0))) BETWEEN (((0.2636303968026624)||(t0.c0))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING GROUP_CONCAT(MAX(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (GROUP_CONCAT(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((GROUP_CONCAT(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((((26602810) NOT BETWEEN (vt0.c0) AND (vt0.c2))) NOTNULL)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((((26602810) NOT BETWEEN (vt0.c0) AND (vt0.c2))) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((26602810) NOT BETWEEN (vt0.c0) AND (vt0.c2))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)||(t0.c0)))<<((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)||(t0.c0)))<<((t0.c0 IN ())))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)||(t0.c0)))<<((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON ((((0.6447018063466049)!=(vt0.c2)))!=(t0.c0 COLLATE RTRIM)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON ((((0.6447018063466049)<>(vt0.c2)))!=(t0.c0 COLLATE RTRIM)) WHERE ((~ (((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON ((((0.6447018063466049)<>(vt0.c2)))<>(t0.c0 COLLATE RTRIM)) WHERE ((NOT ((~ (((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON ((((0.6447018063466049)<>(vt0.c2)))<>(t0.c0 COLLATE RTRIM)) WHERE ((((~ (((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON ((((0.6447018063466049)!=(vt0.c2)))!=(t0.c0 COLLATE RTRIM)) GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(((((((((COUNT(*))OR(t0.c0)))OR(MAX(t0.c0))))AND(COUNT(t0.c0))))AND(AVG(TOTAL(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(((((((((COUNT(*))OR(t0.c0)))OR(MAX(t0.c0))))AND(COUNT(t0.c0))))AND(AVG(TOTAL(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(((((((((COUNT(*))OR(t0.c0)))OR(MAX(t0.c0))))AND(COUNT(t0.c0))))AND(AVG(TOTAL(t0.c0)))))) ISNULL);
SELECT MAX(t0.c0) FROM t0;
SELECT * FROM t0;
SELECT * FROM t0 NOT INDEXED WHERE (LOWER(DISTINCT t0.c0 COLLATE BINARY)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (LOWER(DISTINCT t0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c0 COLLATE BINARY)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0 WHERE (TYPEOF(DISTINCT ((vt0.c2) IS TRUE))) UNION SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0 WHERE ((NOT (TYPEOF(DISTINCT ((vt0.c2) IS TRUE))))) UNION SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0 WHERE (((TYPEOF(DISTINCT ((vt0.c2) IS TRUE))) ISNULL));
SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (IFNULL(((((((((vt0.c2)OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(vt0.c2)), vt0.c1)) GROUP BY t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (IFNULL(((((((((vt0.c2)OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(vt0.c2)), vt0.c1)))) GROUP BY t0.c0, vt0.c1, vt0.c0 UNION SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((IFNULL(((((((((vt0.c2)OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(vt0.c2)), vt0.c1)) ISNULL)) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) NOT BETWEEN (CASE t0.c0  WHEN MAX(t0.c0) THEN AVG(t0.c0) WHEN MAX(t0.c0) THEN MIN(t0.c0) WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN COUNT(TOTAL('-491018661')) THEN t0.c0 ELSE SUM(MAX(SUM(MIN(MAX(MAX(SUM('0.6447018063466049'))))))) END) AND (COUNT(MAX(SUM(AVG(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0) NOT BETWEEN (CASE t0.c0  WHEN MAX(t0.c0) THEN AVG(t0.c0) WHEN MAX(t0.c0) THEN MIN(t0.c0) WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN COUNT(TOTAL('-491018661')) THEN t0.c0 ELSE SUM(MAX(SUM(MIN(MAX(MAX(SUM('0.6447018063466049'))))))) END) AND (COUNT(MAX(SUM(AVG(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0) NOT BETWEEN (CASE t0.c0  WHEN MAX(t0.c0) THEN AVG(t0.c0) WHEN MAX(t0.c0) THEN MIN(t0.c0) WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN COUNT(TOTAL('-491018661')) THEN t0.c0 ELSE SUM(MAX(SUM(MIN(MAX(MAX(SUM('0.6447018063466049'))))))) END) AND (COUNT(MAX(SUM(AVG(t0.c0))))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((NOT (TRIM(t0.c0, t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((NOT (TRIM(t0.c0, t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((NOT (TRIM(t0.c0, t0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ (CASE WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((~ (CASE WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c2 FROM vt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT (vt0.c0 IN ())) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT (vt0.c0 IN ())) WHERE (0.33627529321636707) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT (vt0.c0 IN ())) WHERE ((NOT (0.33627529321636707))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT (vt0.c0 IN ())) WHERE (((0.33627529321636707) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT (vt0.c0 IN ())) GROUP BY vt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0)<=(AVG(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0)<=(AVG(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0)<=(AVG(t0.c0))))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((((('AwdBy0.Kb') BETWEEN (vt0.c1) AND (vt0.c0)))OR(t0.c0)))AND((vt0.c2 IN (vt0.c2))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((((('AwdBy0.Kb') BETWEEN (vt0.c1) AND (vt0.c0)))OR(t0.c0)))AND((vt0.c2 IN (vt0.c2)))) WHERE (((0.8969744346784932)LIKE(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((((('AwdBy0.Kb') BETWEEN (vt0.c1) AND (vt0.c0)))OR(t0.c0)))AND((vt0.c2 IN (vt0.c2)))) WHERE ((NOT (((0.8969744346784932)LIKE(vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((((('AwdBy0.Kb') BETWEEN (vt0.c1) AND (vt0.c0)))OR(t0.c0)))AND((vt0.c2 IN (vt0.c2)))) WHERE (((((0.8969744346784932)LIKE(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((((('AwdBy0.Kb') BETWEEN (vt0.c1) AND (vt0.c0)))OR(t0.c0)))AND((vt0.c2 IN (vt0.c2))));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE NULL  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((- (x''))) AND (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((CASE NULL  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((- (x''))) AND (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((CASE NULL  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((- (x''))) AND (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))|(vt0.c2 COLLATE RTRIM))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))|(vt0.c2 COLLATE RTRIM))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))|(vt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0 HAVING CASE WHEN COUNT(*) THEN TOTAL(MIN(MAX(vt0.c1))) ELSE SUM(t0.c0) END UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN TOTAL(MIN(MAX(vt0.c1))) ELSE SUM(t0.c0) END)) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0 HAVING ((CASE WHEN COUNT(*) THEN TOTAL(MIN(MAX(vt0.c1))) ELSE SUM(t0.c0) END) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 WHERE (((((CAST(t0.c0 AS TEXT))OR(vt0.c1)))OR(vt0.c1))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED, vt0 WHERE ((NOT (((((CAST(t0.c0 AS TEXT))OR(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((((CAST(t0.c0 AS TEXT))OR(vt0.c1)))OR(vt0.c1))) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((vt0.c1 IN ()))>=(vt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((vt0.c1 IN ()))>=(vt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((vt0.c1 IN ()))>=(vt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c2))) AND ((+ (vt0.c2))))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c2))) AND ((+ (vt0.c2))))))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 WHERE (((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c2))) AND ((+ (vt0.c2))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (vt0.c2) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((vt0.c2) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((- (vt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((- (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((- (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (x'') GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (x''))) GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((x'') ISNULL)) GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (NULL) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((NULL) ISNULL));
SELECT vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN t0 ON '-434718585';
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN t0 ON '-434718585' WHERE ((+ ((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN t0 ON '-434718585' WHERE ((NOT ((+ ((vt0.c1 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN t0 ON '-434718585' WHERE ((((+ ((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN t0 ON '-434718585';
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOT NULL))OR(CASE t0.c0  WHEN t0.c0 THEN 1483042793 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9292563992120251 END)))AND(CAST(t0.c0 AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0) NOT NULL))OR(CASE t0.c0  WHEN t0.c0 THEN 1483042793 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9292563992120251 END)))AND(CAST(t0.c0 AS NUMERIC)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0) NOT NULL))OR(CASE t0.c0  WHEN t0.c0 THEN 1483042793 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9292563992120251 END)))AND(CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((t0.c0, vt0.c2, NULL))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND((vt0.c2 IN (vt0.c2))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((t0.c0, vt0.c2, NULL))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND((vt0.c2 IN (vt0.c2))))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((t0.c0, vt0.c2, NULL))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND((vt0.c2 IN (vt0.c2))))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<((~ (1994578985))));
SELECT DISTINCT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<((~ (1994578985)))) WHERE (((((vt0.c0)<<(vt0.c2))) BETWEEN ((NOT (vt0.c1))) AND ((vt0.c2 IN ())))) UNION SELECT DISTINCT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<((~ (1994578985)))) WHERE ((NOT (((((vt0.c0)<<(vt0.c2))) BETWEEN ((NOT (vt0.c1))) AND ((vt0.c2 IN ())))))) UNION SELECT DISTINCT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<((~ (1994578985)))) WHERE (((((((vt0.c0)<<(vt0.c2))) BETWEEN ((NOT (vt0.c1))) AND ((vt0.c2 IN ())))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<((~ (1994578985))));
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (CAST(vt0.c2 COLLATE BINARY AS NUMERIC)) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (CAST(vt0.c2 COLLATE BINARY AS NUMERIC)))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE (((CAST(vt0.c2 COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((MAX(AVG(vt0.c1))) BETWEEN (COUNT(*)) AND (MIN(vt0.c1))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (((MAX(AVG(vt0.c1))) BETWEEN (COUNT(*)) AND (MIN(vt0.c1))))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((((MAX(AVG(vt0.c1))) BETWEEN (COUNT(*)) AND (MIN(vt0.c1)))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0)>=(t0.c0)) THEN vt0.c1 WHEN '1847567603' THEN ((t0.c0)*(vt0.c0)) WHEN (((vt0.c0))<((vt0.c1))) THEN vt0.c0 ELSE 165277562 END) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE ((NOT (CASE WHEN ((vt0.c0)>=(t0.c0)) THEN vt0.c1 WHEN '1847567603' THEN ((t0.c0)*(vt0.c0)) WHEN (((vt0.c0))<((vt0.c1))) THEN vt0.c0 ELSE 165277562 END))) UNION ALL SELECT * FROM vt0, t0 WHERE (((CASE WHEN ((vt0.c0)>=(t0.c0)) THEN vt0.c1 WHEN '1847567603' THEN ((t0.c0)*(vt0.c0)) WHEN (((vt0.c0))<((vt0.c1))) THEN vt0.c0 ELSE 165277562 END) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>>(t0.c0)))IS NOT(TIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)>>(t0.c0)))IS NOT(TIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)>>(t0.c0)))IS NOT(TIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0)>=(t0.c0)))))AND(((t0.c0)=(t0.c0)))))OR(((t0.c0)||(t0.c0)))))OR(t0.c0)))OR(((t0.c0)IS NOT(t0.c0)))))AND(((t0.c0) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0)>=(t0.c0)))))AND(((t0.c0)=(t0.c0)))))OR(((t0.c0)||(t0.c0)))))OR(t0.c0)))OR(((t0.c0)IS NOT(t0.c0)))))AND(((t0.c0) IS TRUE)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0)>=(t0.c0)))))AND(((t0.c0)==(t0.c0)))))OR(((t0.c0)||(t0.c0)))))OR(t0.c0)))OR(((t0.c0)IS NOT(t0.c0)))))AND(((t0.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE AVG(vt0.c0)  WHEN ((vt0.c2)AND(vt0.c1)) THEN (vt0.c0 IN ()) WHEN ((COUNT(*)) BETWEEN (NULL) AND (vt0.c1)) THEN COUNT(GROUP_CONCAT(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (0.4108595232843736) AND ('829985255')) THEN SUM(vt0.c2) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE AVG(vt0.c0)  WHEN ((vt0.c2)AND(vt0.c1)) THEN (vt0.c0 IN ()) WHEN ((COUNT(*)) BETWEEN (NULL) AND (vt0.c1)) THEN COUNT(GROUP_CONCAT(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (0.4108595232843736) AND ('829985255')) THEN SUM(vt0.c2) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE AVG(vt0.c0)  WHEN ((vt0.c2)AND(vt0.c1)) THEN (vt0.c0 IN ()) WHEN ((COUNT(*)) BETWEEN (NULL) AND (vt0.c1)) THEN COUNT(GROUP_CONCAT(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (0.4108595232843736) AND ('829985255')) THEN SUM(vt0.c2) END) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) ISNULL))>>((((t0.c0))>=(('-1134207644')))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) ISNULL))>>((((t0.c0))>=(('-1134207644')))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) ISNULL))>>((((t0.c0))>=(('-1134207644')))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((((NULL) BETWEEN (vt0.c2) AND (vt0.c0)) IN ())) GROUP BY vt0.c0, vt0.c1, t0.c0 UNION SELECT vt0.c0, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT ((((NULL) BETWEEN (vt0.c2) AND (vt0.c0)) IN ())))) GROUP BY vt0.c0, vt0.c1, t0.c0 UNION SELECT vt0.c0, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((((((NULL) BETWEEN (vt0.c2) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING t0.c0 COLLATE RTRIM UNION ALL SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (t0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING ((t0.c0 COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING t0.c0 COLLATE RTRIM UNION ALL SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (t0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING ((t0.c0 COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((+ (vt0.c2)))|(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((+ (vt0.c2)))|(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2))))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((((((+ (vt0.c2)))|(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE ((((((((0.6119898293822066, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c2, vt0.c0))<((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c0))))AND(((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))))AND(CAST(vt0.c2 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((((((0.6119898293822066, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c2, vt0.c0))<((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c0))))AND(((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))))AND(CAST(vt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE ((((((((((0.6119898293822066, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c2, vt0.c0))<((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c0))))AND(((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))))AND(CAST(vt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))>(((vt0.c0)IS(vt0.c2))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))>(((vt0.c0)IS(vt0.c2))))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 NOT INDEXED WHERE (((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))>(((vt0.c0)IS(vt0.c2))))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE RTRIM, (((t0.c0))<=((vt0.c2))), (+ (''))))>((NULLIF(vt0.c2, vt0.c1), (NOT (vt0.c1)), vt0.c0)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((vt0.c0 COLLATE RTRIM, (((t0.c0))<=((vt0.c2))), (+ (''))))>((NULLIF(vt0.c2, vt0.c1), (NOT (vt0.c1)), vt0.c0)))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((((vt0.c0 COLLATE RTRIM, (((t0.c0))<=((vt0.c2))), (+ (''))))>((NULLIF(vt0.c2, vt0.c1), (NOT (vt0.c1)), vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c2 FROM vt0, t0 WHERE ((((- (vt0.c1))) IS FALSE)) UNION SELECT DISTINCT vt0.c2 FROM vt0, t0 WHERE ((NOT ((((- (vt0.c1))) IS FALSE)))) UNION SELECT DISTINCT vt0.c2 FROM vt0, t0 WHERE ((((((- (vt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((+ (((t0.c0)>=(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((+ (((t0.c0)>=(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((+ (((t0.c0)>=(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING MAX((TOTAL(COUNT(TOTAL(MAX(COUNT(MAX(vt0.c0)))))) IN ())) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING (NOT (MAX((TOTAL(COUNT(TOTAL(MAX(COUNT(MAX(vt0.c0)))))) IN ())))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING ((MAX((TOTAL(COUNT(TOTAL(MAX(COUNT(MAX(vt0.c0)))))) IN ()))) ISNULL);
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING MAX((TOTAL(COUNT(TOTAL(MAX(COUNT(MAX(vt0.c0)))))) IN ())) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING (NOT (MAX((TOTAL(COUNT(TOTAL(MAX(COUNT(MAX(vt0.c0)))))) IN ())))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING ((MAX((TOTAL(COUNT(TOTAL(MAX(COUNT(MAX(vt0.c0)))))) IN ()))) ISNULL);
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (LIKELY(DISTINCT ((vt0.c0)==(t0.c0)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (LIKELY(DISTINCT ((vt0.c0)==(t0.c0)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((LIKELY(DISTINCT ((vt0.c0)=(t0.c0)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS REAL)) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE ((NOT (CAST(t0.c0 COLLATE RTRIM AS REAL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING '0.4544346747849427' UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT ('0.4544346747849427')) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (('0.4544346747849427') ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING '0.4544346747849427' UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT ('0.4544346747849427')) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (('0.4544346747849427') ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((~ ((t0.c0 IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((~ ((t0.c0 IN ())))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((~ ((t0.c0 IN ())))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE (0.5816086175767181 COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE ((NOT (0.5816086175767181 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE (((0.5816086175767181 COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0;
SELECT t0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((+ (t0.c0))))<=((((vt0.c2)>(vt0.c1)))))) GROUP BY t0.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT t0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0 NOT INDEXED WHERE ((NOT (((((+ (t0.c0))))<=((((vt0.c2)>(vt0.c1)))))))) GROUP BY t0.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT t0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((((+ (t0.c0))))<=((((vt0.c2)>(vt0.c1)))))) ISNULL)) GROUP BY t0.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING AVG(((0.8779616277889074) BETWEEN (AVG(TOTAL(vt0.c1))) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (AVG(((0.8779616277889074) BETWEEN (AVG(TOTAL(vt0.c1))) AND (vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((AVG(((0.8779616277889074) BETWEEN (AVG(TOTAL(vt0.c1))) AND (vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((NOT ((vt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0 WHERE ((((NOT ((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((+ ((+ (vt0.c2))))) GROUP BY vt0.c1, t0.c0, vt0.c2 UNION SELECT ALL vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT ((+ ((+ (vt0.c2))))))) GROUP BY vt0.c1, t0.c0, vt0.c2 UNION SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((((+ ((+ (vt0.c2))))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((('\rb휀^年9glK')||(vt0.c1))) AND (((vt0.c1) ISNULL))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((('\rb휀^年9glK')||(vt0.c1))) AND (((vt0.c1) ISNULL))) GROUP BY vt0.c1, vt0.c0 HAVING SUM(MAX(MIN(vt0.c2))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((('\rb휀^年9glK')||(vt0.c1))) AND (((vt0.c1) ISNULL))) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (SUM(MAX(MIN(vt0.c2))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((('\rb휀^年9glK')||(vt0.c1))) AND (((vt0.c1) ISNULL))) GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(MAX(MIN(vt0.c2)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN '' END, ((t0.c0) IS TRUE), json_array_length(t0.c0)))<>((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, NULLIF(DISTINCT t0.c0, t0.c0), t0.c0 COLLATE BINARY)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((CASE t0.c0  WHEN t0.c0 THEN '' END, ((t0.c0) IS TRUE), json_array_length(t0.c0)))<>((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, NULLIF(DISTINCT t0.c0, t0.c0), t0.c0 COLLATE BINARY)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((CASE t0.c0  WHEN t0.c0 THEN '' END, ((t0.c0) IS TRUE), json_array_length(t0.c0)))!=((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, NULLIF(DISTINCT t0.c0, t0.c0), t0.c0 COLLATE BINARY)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((+ (((((vt0.c1)AND(t0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((+ (((((vt0.c1)AND(t0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((+ (((((vt0.c1)AND(t0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((((((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))OR(t0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c2)))AND((((vt0.c0))<>((vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (((((((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))OR(t0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c2)))AND((((vt0.c0))!=((vt0.c1)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((((((((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))OR(t0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c2)))AND((((vt0.c0))!=((vt0.c1)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1 HAVING t0.c0 UNION ALL SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1 HAVING t0.c0 UNION ALL SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1;
SELECT ALL vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE (UNLIKELY(DISTINCT ((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (UNLIKELY(DISTINCT ((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE (((UNLIKELY(DISTINCT ((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT ALL vt0.c1, t0.c0, vt0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (x'')) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (x'')) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (x'')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 WHERE (((JULIANDAY(vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((vt0.c0) NOT NULL)) AND (TRIM(t0.c0)))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (((JULIANDAY(vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((vt0.c0) NOT NULL)) AND (TRIM(t0.c0)))))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 WHERE (((((JULIANDAY(vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((vt0.c0) NOT NULL)) AND (TRIM(t0.c0)))) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c0;
SELECT ALL t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c0 HAVING MIN(GROUP_CONCAT(TOTAL(TOTAL(SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(TOTAL(TOTAL(SUM(t0.c0))))))) UNION ALL SELECT t0.c0, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, vt0.c0 HAVING ((MIN(GROUP_CONCAT(TOTAL(TOTAL(SUM(t0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((0.5960643787757972)OR((((vt0.c2))>=((vt0.c2))))))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((0.5960643787757972)OR((((vt0.c2))>=((vt0.c2))))))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((0.5960643787757972)OR((((vt0.c2))>=((vt0.c2))))))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT ((NOT (vt0.c2))))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0 WHERE ((((NOT (vt0.c2))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (0.7989143841192922) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (0.7989143841192922))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((0.7989143841192922) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (SUM(MAX(TOTAL(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (SUM(MAX(TOTAL(SUM(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (SUM(MAX(TOTAL(SUM(vt0.c0))))))) ISNULL);
SELECT MIN((+ (((vt0.c2)>=(vt0.c0))))) FROM vt0, t0 ORDER BY ((t0.c0)IS(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((NULL)OR(vt0.c1 COLLATE RTRIM)))AND(vt0.c0))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((NULL)OR(vt0.c1 COLLATE RTRIM)))AND(vt0.c0))))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((((NULL)OR(vt0.c1 COLLATE RTRIM)))AND(vt0.c0))) ISNULL));
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON ((+ (vt0.c2)) IN ((((vt0.c0))<=((t0.c0)))));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON ((+ (vt0.c2)) IN ((((vt0.c0))<=((t0.c0))))) WHERE (((((((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))AND(NULL)))AND(0.7866287062750359))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON ((+ (vt0.c2)) IN ((((vt0.c0))<=((t0.c0))))) WHERE ((NOT (((((((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))AND(NULL)))AND(0.7866287062750359))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON ((+ (vt0.c2)) IN ((((vt0.c0))<=((t0.c0))))) WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))AND(NULL)))AND(0.7866287062750359))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON ((+ (vt0.c2)) IN ((((vt0.c0))<=((t0.c0)))));
SELECT t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c2, vt0.c0;
SELECT ALL t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN '1711895297' THEN '-245542262' END)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))))) GROUP BY t0.c0, vt0.c2, vt0.c0 UNION SELECT ALL t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN '1711895297' THEN '-245542262' END)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))))))) GROUP BY t0.c0, vt0.c2, vt0.c0 UNION SELECT t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN '1711895297' THEN '-245542262' END)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))))) ISNULL)) GROUP BY t0.c0, vt0.c2, vt0.c0;
SELECT t0.c0, vt0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING MAX(AVG(AVG(vt0.c0))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (MAX(AVG(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((MAX(AVG(AVG(vt0.c0)))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((NULL)|(CASE vt0.c2  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c2 THEN t0.c0 WHEN vt0.c0 THEN 0.2522426841246379 END))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((NULL)|(CASE vt0.c2  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c2 THEN t0.c0 WHEN vt0.c0 THEN 0.2522426841246379 END))))) UNION ALL SELECT * FROM t0 NOT INDEXED, vt0 NOT INDEXED WHERE (((((NULL)|(CASE vt0.c2  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c2 THEN t0.c0 WHEN vt0.c0 THEN 0.2522426841246379 END))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ ((~ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ ((~ (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ ((~ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c2;
SELECT t0.c0, vt0.c2 FROM vt0, t0 WHERE ((t0.c0 IN (t0.c0)) COLLATE RTRIM) GROUP BY t0.c0, vt0.c2 UNION SELECT t0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT ((t0.c0 IN (t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0, vt0.c2 UNION SELECT t0.c0, vt0.c2 FROM vt0, t0 WHERE ((((t0.c0 IN (t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL((- (AVG(AVG(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL((- (AVG(AVG(GROUP_CONCAT(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((TOTAL((- (AVG(AVG(GROUP_CONCAT(t0.c0))))))) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt0, t0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL)) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) ISNULL)))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((((CAST(vt0.c0 AS TEXT)) ISNULL)) ISNULL));
SELECT vt0.c1, vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((json_insert(vt0.c2, vt0.c0, vt0.c0) IN (((vt0.c1)-(vt0.c2))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((json_insert(vt0.c2, vt0.c0, vt0.c0) IN (((vt0.c1)-(vt0.c2))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((json_insert(vt0.c2, vt0.c0, vt0.c0) IN (((vt0.c1)-(vt0.c2))))) ISNULL));
SELECT vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS REAL)))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 WHERE (((CAST((vt0.c0 IN ()) AS REAL)) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING QUOTE(COUNT(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (QUOTE(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((QUOTE(COUNT(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING QUOTE(COUNT(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (QUOTE(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((QUOTE(COUNT(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT MIN(CAST((t0.c0 IN (vt0.c1)) AS REAL)) FROM vt0, t0 ORDER BY (CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 ELSE t0.c0 END IN ()) ASC, CAST(((vt0.c2)GLOB(t0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((NULL)+(vt0.c2 COLLATE BINARY));
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c1 FROM vt0, t0 WHERE (((((vt0.c1)IS(t0.c0)))IS((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, t0 WHERE ((NOT (((((vt0.c1)IS(t0.c0)))IS((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, t0 WHERE (((((((vt0.c1)IS(t0.c0)))IS((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, t0;
SELECT vt0.c1, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0, t0 WHERE ((((~ (t0.c0))) BETWEEN (-1.547087418E9) AND ((vt0.c1 IN ())))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt0 NOT INDEXED, t0 WHERE ((NOT ((((~ (t0.c0))) BETWEEN (-1.547087418E9) AND ((vt0.c1 IN ())))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0, t0 WHERE ((((((~ (t0.c0))) BETWEEN (-1.547087418E9) AND ((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON (CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON (CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) GROUP BY vt0.c1 HAVING COUNT(GROUP_CONCAT(x'')) UNION ALL SELECT vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON (CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) GROUP BY vt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(x'')))) UNION ALL SELECT ALL vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON (CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) GROUP BY vt0.c1 HAVING ((COUNT(GROUP_CONCAT(x''))) ISNULL);
SELECT vt0.c2, t0.c0 FROM vt0, t0;
SELECT ALL vt0.c2, t0.c0 FROM vt0, t0 WHERE (CASE CAST('P8*f-' AS NUMERIC)  WHEN (- (t0.c0)) THEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (('', vt0.c1, vt0.c2)) AND ((vt0.c2, t0.c0, vt0.c0))) END) UNION ALL SELECT vt0.c2, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE CAST('P8*f-' AS NUMERIC)  WHEN (- (t0.c0)) THEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (('', vt0.c1, vt0.c2)) AND ((vt0.c2, t0.c0, vt0.c0))) END))) UNION ALL SELECT ALL vt0.c2, t0.c0 FROM vt0, t0 WHERE (((CASE CAST('P8*f-' AS NUMERIC)  WHEN (- (t0.c0)) THEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (('', vt0.c1, vt0.c2)) AND ((vt0.c2, t0.c0, vt0.c0))) END) ISNULL));
SELECT vt0.c2, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((+ (vt0.c1)), (+ (x'')), ((((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0))))<(((~ (vt0.c2)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c1) ISNULL))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((((+ (vt0.c1)), (+ (x'')), ((((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0))))<(((~ (vt0.c2)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c1) ISNULL))))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((((+ (vt0.c1)), (+ (x'')), ((((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0))))<(((~ (vt0.c2)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c1) ISNULL))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (((t0.c0) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 COLLATE BINARY IN (((t0.c0) IS TRUE)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE BINARY IN (((t0.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (2.018332264E9) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (2.018332264E9))) UNION ALL SELECT ALL * FROM vt0 WHERE (((2.018332264E9) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((t0.c0 IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON NULL GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON NULL WHERE ((((((((t0.c0))>=((t0.c0))))AND(CASE t0.c0  WHEN '3D' THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt0.c2 ELSE vt0.c0 END)))OR(((t0.c0)%(t0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON NULL WHERE ((NOT ((((((((t0.c0))>=((t0.c0))))AND(CASE t0.c0  WHEN '3D' THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt0.c2 ELSE vt0.c0 END)))OR(((t0.c0)%(t0.c0))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON NULL WHERE ((((((((((t0.c0))>=((t0.c0))))AND(CASE t0.c0  WHEN '3D' THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt0.c2 ELSE vt0.c0 END)))OR(((t0.c0)%(t0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON NULL GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING ((TOTAL(vt0.c1)) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (SUM(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING (NOT (((TOTAL(vt0.c1)) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (SUM(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING ((((TOTAL(vt0.c1)) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (SUM(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING ((TOTAL(vt0.c1)) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (SUM(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING (NOT (((TOTAL(vt0.c1)) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (SUM(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING ((((TOTAL(vt0.c1)) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (SUM(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (~ (vt0.c1)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE (~ (vt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (~ (vt0.c1)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE (~ (vt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (~ (vt0.c1)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((t0.c0 IN ()))+(t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((t0.c0 IN ()))+(t0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((t0.c0 IN ()))+(t0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('a}') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('a}'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('a}') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)<>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)<>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM t0 NOT INDEXED, vt0 WHERE ((NOT (((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0 WHERE (((((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((((('')OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))))AND((((NULL))<=((vt0.c0)))))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((('')OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))))AND((((NULL))<=((vt0.c0)))))))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((((((('')OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))))AND((((NULL))<=((vt0.c0)))))) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING CAST(SUM(x'76a7') AS REAL) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (CAST(SUM(x'76a7') AS REAL))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((CAST(SUM(x'76a7') AS REAL)) ISNULL);
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING CAST(SUM(x'76a7') AS REAL) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (CAST(SUM(x'76a7') AS REAL))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((CAST(SUM(x'76a7') AS REAL)) ISNULL);
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (ABS(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (ABS(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((ABS(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-1724291160') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-1724291160'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('-1724291160') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE (TRIM(DISTINCT (((vt0.c2))==((vt0.c0))), ((vt0.c2)IS(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE ((NOT (TRIM(DISTINCT (((vt0.c2))==((vt0.c0))), ((vt0.c2)IS(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE (((TRIM(DISTINCT (((vt0.c2))=((vt0.c0))), ((vt0.c2)IS(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING TOTAL(((MAX(AVG(vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c2))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (TOTAL(((MAX(AVG(vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c2))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((TOTAL(((MAX(AVG(vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (0.9159803400074829) UNION ALL SELECT * FROM t0 WHERE ((NOT (0.9159803400074829))) UNION ALL SELECT ALL * FROM t0 WHERE (((0.9159803400074829) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c1)%(vt0.c0)))LIKE((vt0.c2 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)%(vt0.c0)))LIKE((vt0.c2 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c1)%(vt0.c0)))LIKE((vt0.c2 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0) IS FALSE) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) IS FALSE) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0) IS FALSE) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING UPPER(SUM(MIN(TOTAL(AVG(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING (NOT (UPPER(SUM(MIN(TOTAL(AVG(vt0.c1))))))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING ((UPPER(SUM(MIN(TOTAL(AVG(vt0.c1)))))) ISNULL);
SELECT ALL SUM((- (COALESCE(DISTINCT vt0.c2, vt0.c2)))) FROM t0, vt0 ORDER BY (((+ (vt0.c2)))>=(CAST(vt0.c2 AS INTEGER))), vt0.c0  NULLS FIRST;
SELECT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0;
SELECT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2))) IS FALSE)) UNION ALL SELECT ALL vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2))) IS FALSE)))) UNION ALL SELECT ALL vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0 WHERE (((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2))) IS FALSE)) ISNULL));
SELECT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE ((((COALESCE(DISTINCT '#vt>VK', vt0.c0)))>((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE ((NOT ((((COALESCE(DISTINCT '#vt>VK', vt0.c0)))>((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE ((((((COALESCE(DISTINCT '#vt>VK', vt0.c0)))>((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((NOT (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((NOT (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0 HAVING (NOT ((NOT (AVG(COUNT(*)))))) UNION ALL SELECT vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0 HAVING (((NOT (AVG(COUNT(*))))) ISNULL);
SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0;
SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE ('949140920') UNION ALL SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT ('949140920'))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((('949140920') ISNULL));
SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((NOT (t0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((NOT (t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE (((((NOT (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (CASE HEX(vt0.c0)  WHEN CAST(vt0.c2 AS NUMERIC) THEN x'' END) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (CASE HEX(vt0.c0)  WHEN CAST(vt0.c2 AS NUMERIC) THEN x'' END))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((CASE HEX(vt0.c0)  WHEN CAST(vt0.c2 AS NUMERIC) THEN x'' END) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0 HAVING AVG(MIN(x'')) UNION ALL SELECT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0 HAVING (NOT (AVG(MIN(x'')))) UNION ALL SELECT ALL vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c2, t0.c0, vt0.c1, vt0.c0 HAVING ((AVG(MIN(x''))) ISNULL);
SELECT ALL MIN(CASE ((vt0.c2)>(vt0.c2))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) THEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END END) FROM t0, vt0 ORDER BY MIN(vt0.c0, CASE WHEN x'' THEN '\n,n(鉥-' END, ((vt0.c1) IS TRUE), ((t0.c0)IS('*nowd')))  NULLS FIRST;
SELECT ALL t0.c0, vt0.c2 FROM vt0 NATURAL JOIN t0;
SELECT ALL t0.c0, vt0.c2 FROM vt0 NATURAL JOIN t0 WHERE (CAST(((vt0.c1) NOTNULL) AS TEXT)) UNION ALL SELECT t0.c0, vt0.c2 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (CAST(((vt0.c1) NOTNULL) AS TEXT)))) UNION ALL SELECT ALL t0.c0, vt0.c2 FROM vt0 NATURAL JOIN t0 WHERE (((CAST(((vt0.c1) NOTNULL) AS TEXT)) ISNULL));
SELECT ALL t0.c0, vt0.c2 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((LIKELY(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((LIKELY(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((LIKELY(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c1, vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, t0.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 WHERE ((0.11259503803228932 IN ())) GROUP BY vt0.c1, vt0.c0, vt0.c2, t0.c0 UNION SELECT vt0.c1, vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT ((0.11259503803228932 IN ())))) GROUP BY vt0.c1, vt0.c0, vt0.c2, t0.c0 UNION SELECT vt0.c1, vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 WHERE ((((0.11259503803228932 IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2, t0.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT((MIN(t0.c0) IN (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT((MIN(t0.c0) IN (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT((MIN(t0.c0) IN (t0.c0)))) ISNULL);
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((vt0.c2) BETWEEN (CAST(vt0.c0 AS REAL)) AND (load_extension(vt0.c1)))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((vt0.c2) BETWEEN (CAST(vt0.c0 AS REAL)) AND (load_extension(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((vt0.c2) BETWEEN (CAST(vt0.c0 AS REAL)) AND (load_extension(vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(((vt0.c1)OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(((vt0.c1)OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(((vt0.c1)OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (- (CAST(GROUP_CONCAT(COUNT(*)) AS REAL))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT ((- (CAST(GROUP_CONCAT(COUNT(*)) AS REAL))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (((- (CAST(GROUP_CONCAT(COUNT(*)) AS REAL)))) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE ((LOWER(DISTINCT vt0.c0) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE ((NOT ((LOWER(DISTINCT vt0.c0) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE ((((LOWER(DISTINCT vt0.c0) IN ())) ISNULL));
SELECT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((vt0.c2 IN ())) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((vt0.c2 IN ())))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((vt0.c2 IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE (((CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE((x'' IN ())))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE ((NOT (((CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE((x'' IN ())))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 WHERE (((((CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE((x'' IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING COUNT(MAX(vt0.c1)) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (NOT (COUNT(MAX(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING ((COUNT(MAX(vt0.c1))) ISNULL);
SELECT vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 END  WHEN (t0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) END) UNION ALL SELECT vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 WHERE ((NOT (CASE CASE WHEN vt0.c0 THEN vt0.c1 END  WHEN (t0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) END))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM t0, vt0 WHERE (((CASE CASE WHEN vt0.c0 THEN vt0.c1 END  WHEN (t0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) END) ISNULL));
SELECT vt0.c0, t0.c0, vt0.c2, vt0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c2 FROM t0, vt0;
SELECT DISTINCT vt0.c2 FROM t0, vt0 WHERE (((((((((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END)AND((NOT (vt0.c1)))))OR(NULL)))AND((- (vt0.c0)))))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 ELSE vt0.c2 END))) UNION SELECT DISTINCT vt0.c2 FROM t0, vt0 WHERE ((NOT (((((((((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END)AND((NOT (vt0.c1)))))OR(NULL)))AND((- (vt0.c0)))))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 ELSE vt0.c2 END))))) UNION SELECT DISTINCT vt0.c2 FROM t0, vt0 WHERE (((((((((((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END)AND((NOT (vt0.c1)))))OR(NULL)))AND((- (vt0.c0)))))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 ELSE vt0.c2 END))) ISNULL));
SELECT DISTINCT vt0.c2 FROM t0, vt0;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t0 WHERE ((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)), vt0.c1, ((t0.c0)>(t0.c0))))>((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c2)|(vt0.c2)), t0.c0)))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, t0 WHERE ((NOT ((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)), vt0.c1, ((t0.c0)>(t0.c0))))>((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c2)|(vt0.c2)), t0.c0)))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, t0 WHERE ((((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)), vt0.c1, ((t0.c0)>(t0.c0))))>((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c2)|(vt0.c2)), t0.c0)))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(t0.c0) COLLATE RTRIM UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(t0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(t0.c0) COLLATE RTRIM) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(t0.c0) COLLATE RTRIM UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(t0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(t0.c0) COLLATE RTRIM) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (((TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT ALL vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, t0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT (SQLITE_SOURCE_ID() COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, t0 WHERE (((SQLITE_SOURCE_ID() COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, t0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((('221802842' IN (vt0.c0)))IS NOT(vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((('221802842' IN (vt0.c0)))IS NOT(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((('221802842' IN (vt0.c0)))IS NOT(vt0.c1))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING TOTAL(t0.c0) UNION ALL SELECT vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (TOTAL(t0.c0))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((TOTAL(t0.c0)) ISNULL);
SELECT vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING TOTAL(t0.c0) UNION ALL SELECT vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (TOTAL(t0.c0))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((TOTAL(t0.c0)) ISNULL);
SELECT vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 NOT INDEXED WHERE ((x'' IN ())) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT ((x'' IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((((x'' IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((((((t0.c0)>(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)))OR(((t0.c0) ISNULL))))OR((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND(CAST(t0.c0 AS BLOB)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0)>(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)))OR(((t0.c0) ISNULL))))OR((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND(CAST(t0.c0 AS BLOB)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((t0.c0)>(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)))OR(((t0.c0) ISNULL))))OR((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND(CAST(t0.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(AVG(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(AVG(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (UPPER(DISTINCT t0.c0)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (UPPER(DISTINCT t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((UPPER(DISTINCT t0.c0)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))OR(((vt0.c2) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))OR(((vt0.c2) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(((vt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, vt0.c2 FROM vt0 NOT INDEXED, t0 GROUP BY t0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c2 FROM vt0, t0 WHERE (CAST((- (vt0.c0)) AS NUMERIC)) GROUP BY t0.c0, vt0.c2 UNION SELECT t0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT (CAST((- (vt0.c0)) AS NUMERIC)))) GROUP BY t0.c0, vt0.c2 UNION SELECT t0.c0, vt0.c2 FROM vt0, t0 WHERE (((CAST((- (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY t0.c0, vt0.c2;
SELECT t0.c0, vt0.c2 FROM vt0 NOT INDEXED, t0 GROUP BY t0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((((vt0.c1)OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c1))) AND (CAST(MAX(COUNT(vt0.c1)) AS TEXT))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (((((vt0.c1)OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c1))) AND (CAST(MAX(COUNT(vt0.c1)) AS TEXT))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((((((vt0.c1)OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c1))) AND (CAST(MAX(COUNT(vt0.c1)) AS TEXT)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (x'') UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((x'') ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c2, (((vt0.c2))>((vt0.c1))));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c2, (((vt0.c2))>((vt0.c1)))) WHERE (CASE vt0.c1  WHEN ABS(t0.c0) THEN CAST(vt0.c0 AS REAL) END) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c2, (((vt0.c2))>((vt0.c1)))) WHERE ((NOT (CASE vt0.c1  WHEN ABS(t0.c0) THEN CAST(vt0.c0 AS REAL) END))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c2, (((vt0.c2))>((vt0.c1)))) WHERE (((CASE vt0.c1  WHEN ABS(t0.c0) THEN CAST(vt0.c0 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c2, (((vt0.c2))>((vt0.c1))));
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 WHERE ((((~ (vt0.c0)))-(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0, t0 WHERE ((NOT ((((~ (vt0.c0)))-(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0, t0 WHERE ((((((~ (vt0.c0)))-(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING TOTAL((((GROUP_CONCAT(MIN(vt0.c1)), AVG(MAX(AVG(vt0.c0))), SUM(COUNT(AVG(GROUP_CONCAT(vt0.c1))))))>=((vt0.c2, 0Xffffffffdac04022, AVG(AVG(vt0.c2)))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (TOTAL((((GROUP_CONCAT(MIN(vt0.c1)), AVG(MAX(AVG(vt0.c0))), SUM(COUNT(AVG(GROUP_CONCAT(vt0.c1))))))>=((vt0.c2, 0Xffffffffdac04022, AVG(AVG(vt0.c2)))))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((TOTAL((((GROUP_CONCAT(MIN(vt0.c1)), AVG(MAX(AVG(vt0.c0))), SUM(COUNT(AVG(GROUP_CONCAT(vt0.c1))))))>=((vt0.c2, 0Xffffffffdac04022, AVG(AVG(vt0.c2))))))) ISNULL);
SELECT ALL vt0.c2 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT vt0.c2 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL vt0.c2 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE BINARY AS REAL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 COLLATE BINARY AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0, t0 WHERE (CAST(((0Xffffffffc820bd63) BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER)) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT (CAST(((0Xffffffffc820bd63) BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER)))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0, t0 WHERE (((CAST(((0Xffffffffc820bd63) BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING SUM(((AVG(MAX(TOTAL(vt0.c0)))) BETWEEN (AVG(GROUP_CONCAT(AVG(MIN(MIN(TOTAL(t0.c0))))))) AND (vt0.c0))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT (SUM(((AVG(MAX(TOTAL(vt0.c0)))) BETWEEN (AVG(GROUP_CONCAT(AVG(MIN(MIN(TOTAL(t0.c0))))))) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((SUM(((AVG(MAX(TOTAL(vt0.c0)))) BETWEEN (AVG(GROUP_CONCAT(AVG(MIN(MIN(TOTAL(t0.c0))))))) AND (vt0.c0)))) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN ()))<>(vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN ()))<>(vt0.c0 COLLATE BINARY)) WHERE (CASE WHEN (vt0.c0 IN ()) THEN TIME(vt0.c2, t0.c0, vt0.c2) WHEN COALESCE(DISTINCT t0.c0, vt0.c1) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.8027566491138047) WHEN ((t0.c0) NOTNULL) THEN (vt0.c1 IN ()) END) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN ()))!=(vt0.c0 COLLATE BINARY)) WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN TIME(vt0.c2, t0.c0, vt0.c2) WHEN COALESCE(DISTINCT t0.c0, vt0.c1) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.8027566491138047) WHEN ((t0.c0) NOTNULL) THEN (vt0.c1 IN ()) END))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN ()))<>(vt0.c0 COLLATE BINARY)) WHERE (((CASE WHEN (vt0.c0 IN ()) THEN TIME(vt0.c2, t0.c0, vt0.c2) WHEN COALESCE(DISTINCT t0.c0, vt0.c1) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.8027566491138047) WHEN ((t0.c0) NOTNULL) THEN (vt0.c1 IN ()) END) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN ()))<>(vt0.c0 COLLATE BINARY));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((vt0.c1, UNICODE(t0.c0), ((vt0.c2)>>(vt0.c2))))<=((vt0.c1, vt0.c2, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((vt0.c1, UNICODE(t0.c0), ((vt0.c2)>>(vt0.c2))))<=((vt0.c1, vt0.c2, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((vt0.c1, UNICODE(t0.c0), ((vt0.c2)>>(vt0.c2))))<=((vt0.c1, vt0.c2, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (vt0.c2) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM((((t0.c0, AVG(t0.c0), t0.c0))=((t0.c0, COUNT(AVG(MAX(t0.c0))), MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM((((t0.c0, AVG(t0.c0), t0.c0))=((t0.c0, COUNT(AVG(MAX(t0.c0))), MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM((((t0.c0, AVG(t0.c0), t0.c0))=((t0.c0, COUNT(AVG(MAX(t0.c0))), MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (vt0.c2) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT * FROM vt0, t0 WHERE (((vt0.c2) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((IFNULL(vt0.c0, '2028054916'), 'Fo', (x'' IN (vt0.c1))))==((CAST(vt0.c1 AS NUMERIC), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c2) IS FALSE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((IFNULL(vt0.c0, '2028054916'), 'Fo', (x'' IN (vt0.c1))))=((CAST(vt0.c1 AS NUMERIC), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c2) IS FALSE))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((IFNULL(vt0.c0, '2028054916'), 'Fo', (x'' IN (vt0.c1))))=((CAST(vt0.c1 AS NUMERIC), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c2) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN (((vt0.c1)>(vt0.c2))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN (((vt0.c1)>(vt0.c2))))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN (((vt0.c1)>(vt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT ((NOT (GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (((NOT (GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT ((NOT (GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (((NOT (GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0;
SELECT ALL vt0.c1 FROM vt0, t0 WHERE (CASE WHEN t0.c0 THEN (((vt0.c1))!=((vt0.c1))) ELSE (vt0.c0 IN ()) END) UNION ALL SELECT vt0.c1 FROM vt0, t0 WHERE ((NOT (CASE WHEN t0.c0 THEN (((vt0.c1))!=((vt0.c1))) ELSE (vt0.c0 IN ()) END))) UNION ALL SELECT vt0.c1 FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN (((vt0.c1))<>((vt0.c1))) ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT ALL vt0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL);
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) WHERE ((((((vt0.c2, '', vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, t0.c0)) AND ((vt0.c1, t0.c0, vt0.c1)))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) WHERE ((NOT ((((((vt0.c2, '', vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, t0.c0)) AND ((vt0.c1, t0.c0, vt0.c1)))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) WHERE ((((((((vt0.c2, '', vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, t0.c0)) AND ((vt0.c1, t0.c0, vt0.c1)))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL);
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c2)<=(vt0.c0))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c2)<=(vt0.c0))))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((((vt0.c0 COLLATE NOCASE)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c2)<=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) BETWEEN (MAX(COUNT(*))) AND (((((x'')OR(MAX(SUM(t0.c0)))))OR(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((GROUP_CONCAT(t0.c0)) BETWEEN (MAX(COUNT(*))) AND (((((x'')OR(MAX(SUM(t0.c0)))))OR(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(t0.c0)) BETWEEN (MAX(COUNT(*))) AND (((((x'')OR(MAX(SUM(t0.c0)))))OR(t0.c0))))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((vt0.c1 IN ()))<<(CAST(x'' AS REAL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((vt0.c1 IN ()))<<(CAST(x'' AS REAL)))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((vt0.c1 IN ()))<<(CAST(x'' AS REAL)))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c1 END COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN vt0.c1 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c1 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0) NOTNULL) IN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) NOTNULL) IN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) NOTNULL) IN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c2, vt0.c1 HAVING COUNT(COUNT(t0.c0)) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (COUNT(COUNT(t0.c0)))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c2, vt0.c1 HAVING ((COUNT(COUNT(t0.c0))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((LIKELY(DISTINCT t0.c0)) IS TRUE)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((LIKELY(DISTINCT t0.c0)) IS TRUE)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((LIKELY(DISTINCT t0.c0)) IS TRUE)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, vt0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c2 FROM t0, vt0 WHERE ('794542599') UNION SELECT DISTINCT t0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT ('794542599'))) UNION SELECT DISTINCT t0.c0, vt0.c2 FROM t0, vt0 WHERE ((('794542599') ISNULL));
SELECT DISTINCT t0.c0, vt0.c2 FROM t0, vt0;
SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (vt0.c2 IN (0.9605824857398807, t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (vt0.c2 IN (0.9605824857398807, t0.c0)) COLLATE RTRIM WHERE ((- (vt0.c2 COLLATE NOCASE))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (vt0.c2 IN (0.9605824857398807, t0.c0)) COLLATE RTRIM WHERE ((NOT ((- (vt0.c2 COLLATE NOCASE))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (vt0.c2 IN (0.9605824857398807, t0.c0)) COLLATE RTRIM WHERE ((((- (vt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (vt0.c2 IN (0.9605824857398807, t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((CAST(vt0.c0 AS INTEGER))IS NOT(MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS INTEGER))IS NOT(MAX(COUNT(*)))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((((CAST(vt0.c0 AS INTEGER))IS NOT(MAX(COUNT(*))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((vt0.c2 IN (vt0.c1, vt0.c0)))%(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((vt0.c2 IN (vt0.c1, vt0.c0)))%(CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c2 IN (vt0.c1, vt0.c0)))%(CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0, '', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) NOT NULL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, '', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) NOT NULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0, '', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((((t0.c0))<>((t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((((t0.c0))<>((t0.c0))))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((((t0.c0))!=((t0.c0))))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((((((((MAX(MAX(vt0.c2)))OR(MAX(COUNT(x'')))))AND(((((MIN(COUNT(*)))OR(t0.c0)))AND(AVG(AVG(COUNT(*))))))))OR(((COUNT('f<')) BETWEEN (vt0.c0) AND (AVG(vt0.c2))))))AND(((MAX(COUNT(*)))<<(MAX(NULL))))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (((((((((MAX(MAX(vt0.c2)))OR(MAX(COUNT(x'')))))AND(((((MIN(COUNT(*)))OR(t0.c0)))AND(AVG(AVG(COUNT(*))))))))OR(((COUNT('f<')) BETWEEN (vt0.c0) AND (AVG(vt0.c2))))))AND(((MAX(COUNT(*)))<<(MAX(NULL))))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c2, vt0.c1 HAVING ((((((((((MAX(MAX(vt0.c2)))OR(MAX(COUNT(x'')))))AND(((((MIN(COUNT(*)))OR(t0.c0)))AND(AVG(AVG(COUNT(*))))))))OR(((COUNT('f<')) BETWEEN (vt0.c0) AND (AVG(vt0.c2))))))AND(((MAX(COUNT(*)))<<(MAX(NULL)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((- ((((vt0.c2))==((vt0.c2)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- ((((vt0.c2))=((vt0.c2)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((- ((((vt0.c2))=((vt0.c2)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((((((LAST_INSERT_ROWID())AND(json_remove(vt0.c2, NULL, vt0.c2, vt0.c1))))OR(((vt0.c2)>=(vt0.c0)))))AND('-1902196762')))AND(((((vt0.c0)AND(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((((((LAST_INSERT_ROWID())AND(json_remove(vt0.c2, NULL, vt0.c2, vt0.c1))))OR(((vt0.c2)>=(vt0.c0)))))AND('-1902196762')))AND(((((vt0.c0)AND(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((((((((LAST_INSERT_ROWID())AND(json_remove(vt0.c2, NULL, vt0.c2, vt0.c1))))OR(((vt0.c2)>=(vt0.c0)))))AND('-1902196762')))AND(((((vt0.c0)AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING MIN(0.5440925507967829) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (MIN(0.5440925507967829))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((MIN(0.5440925507967829)) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING MIN(0.5440925507967829) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (MIN(0.5440925507967829))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((MIN(0.5440925507967829)) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c2, t0.c0 FROM t0, vt0;
SELECT vt0.c2, t0.c0 FROM t0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT vt0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c2, t0.c0 FROM t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT ALL vt0.c2, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c2;
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c2 WHERE (x'') UNION SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c2 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c2 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c2;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE (CASE ((vt0.c1)IS NOT(t0.c0))  WHEN ((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) THEN ((vt0.c1) ISNULL) ELSE vt0.c2 COLLATE NOCASE END) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE ((NOT (CASE ((vt0.c1)IS NOT(t0.c0))  WHEN ((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) THEN ((vt0.c1) ISNULL) ELSE vt0.c2 COLLATE NOCASE END))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 WHERE (((CASE ((vt0.c1)IS NOT(t0.c0))  WHEN ((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) THEN ((vt0.c1) ISNULL) ELSE vt0.c2 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))AND(SUM(GROUP_CONCAT(TOTAL(COUNT(MAX(vt0.c0))))))))AND(MAX(t0.c0))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(*))AND(SUM(GROUP_CONCAT(TOTAL(COUNT(MAX(vt0.c0))))))))AND(MAX(t0.c0))))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(*))AND(SUM(GROUP_CONCAT(TOTAL(COUNT(MAX(vt0.c0))))))))AND(MAX(t0.c0)))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE (t0.c0 IN (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN CAST(0xffffffffc1c3c518 AS REAL) ELSE (- (t0.c0)) END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE (t0.c0 IN (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN CAST(0xffffffffc1c3c518 AS REAL) ELSE (- (t0.c0)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE (t0.c0 IN (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN CAST(0Xffffffffc1c3c518 AS REAL) ELSE (- (t0.c0)) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN (((((((((x'f161')OR(x'a980')))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 END IN (((((((((x'f161')OR(x'a980')))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END IN (((((((((x'f161')OR(x'a980')))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 WHERE ('u\n?mx \r') GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, t0 WHERE ((NOT ('u\n?mx \r'))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0, t0 WHERE ((('u\n?mx \r') ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(MAX(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(MAX(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(MAX(t0.c0))) ISNULL);
SELECT TOTAL(((0.3508219177587255)GLOB(TRIM(t0.c0)))) FROM t0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((NULL) NOT BETWEEN (('0.39938957977924416' IN (vt0.c1))) AND (vt0.c0 COLLATE BINARY))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((NULL) NOT BETWEEN (('0.39938957977924416' IN (vt0.c1))) AND (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((NULL) NOT BETWEEN (('0.39938957977924416' IN (vt0.c1))) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c2, t0.c0 FROM t0, vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c2, t0.c0 FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c2, t0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((+ (t0.c0)) AS INTEGER)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST((+ (t0.c0)) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST((+ (t0.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((((TOTAL(AVG(COUNT(TOTAL(COUNT(*))))))AND(MIN(vt0.c0))))AND((((AVG(vt0.c0), TOTAL(GROUP_CONCAT(vt0.c1)), vt0.c0))<=((vt0.c0, SUM(vt0.c2), vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (((((TOTAL(AVG(COUNT(TOTAL(COUNT(*))))))AND(MIN(vt0.c0))))AND((((AVG(vt0.c0), TOTAL(GROUP_CONCAT(vt0.c1)), vt0.c0))<=((vt0.c0, SUM(vt0.c2), vt0.c1))))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((((((TOTAL(AVG(COUNT(TOTAL(COUNT(*))))))AND(MIN(vt0.c0))))AND((((AVG(vt0.c0), TOTAL(GROUP_CONCAT(vt0.c1)), vt0.c0))<=((vt0.c0, SUM(vt0.c2), vt0.c1)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0;
SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((((((((vt0.c2)OR(t0.c0)))OR(vt0.c1))))!=((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT ((((((((vt0.c2)OR(t0.c0)))OR(vt0.c1))))!=((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((((((((((vt0.c2)OR(t0.c0)))OR(vt0.c1))))<>((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))))) ISNULL));
SELECT ALL vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c1) NOT BETWEEN (0x5aecdbb5) AND (vt0.c1)) AS REAL);
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c1) NOT BETWEEN (0X5aecdbb5) AND (vt0.c1)) AS REAL) WHERE ((((vt0.c1 IN (vt0.c1, vt0.c1, vt0.c1)))>(((vt0.c2)+(vt0.c1))))) UNION SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c1) NOT BETWEEN (0x5aecdbb5) AND (vt0.c1)) AS REAL) WHERE ((NOT ((((vt0.c1 IN (vt0.c1, vt0.c1, vt0.c1)))>(((vt0.c2)+(vt0.c1))))))) UNION SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c1) NOT BETWEEN (0x5aecdbb5) AND (vt0.c1)) AS REAL) WHERE ((((((vt0.c1 IN (vt0.c1, vt0.c1, vt0.c1)))>(((vt0.c2)+(vt0.c1))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c1) NOT BETWEEN (0x5aecdbb5) AND (vt0.c1)) AS REAL);
SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c0 GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT vt0.c2, t0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c0 WHERE ((((((((((vt0.c0 IN (vt0.c1, vt0.c0)))AND((NOT (vt0.c0)))))AND('-2028637198' COLLATE BINARY)))AND(((t0.c0)%(vt0.c0)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0))))) GROUP BY vt0.c2, t0.c0, vt0.c1 UNION SELECT vt0.c2, t0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c0 WHERE ((NOT ((((((((((vt0.c0 IN (vt0.c1, vt0.c0)))AND((NOT (vt0.c0)))))AND('-2028637198' COLLATE BINARY)))AND(((t0.c0)%(vt0.c0)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0))))))) GROUP BY vt0.c2, t0.c0, vt0.c1 UNION SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c0 WHERE ((((((((((((vt0.c0 IN (vt0.c1, vt0.c0)))AND((NOT (vt0.c0)))))AND('-2028637198' COLLATE BINARY)))AND(((t0.c0)%(vt0.c0)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0))))) ISNULL)) GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c0 GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING TOTAL(vt0.c2) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (TOTAL(vt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((TOTAL(vt0.c2) COLLATE RTRIM) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING TOTAL(vt0.c2) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (TOTAL(vt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((TOTAL(vt0.c2) COLLATE RTRIM) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE (-169420829) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (-169420829))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((-169420829) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (ABS(DISTINCT ((t0.c0) NOTNULL))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (ABS(DISTINCT ((t0.c0) NOTNULL))))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((ABS(DISTINCT ((t0.c0) NOTNULL))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (CAST(vt0.c1 AS INTEGER) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((CAST(vt0.c1 AS INTEGER) IN ()))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((CAST(vt0.c1 AS INTEGER) IN ())) ISNULL);
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (CAST(vt0.c1 AS INTEGER) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((CAST(vt0.c1 AS INTEGER) IN ()))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((CAST(vt0.c1 AS INTEGER) IN ())) ISNULL);
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (COALESCE(DISTINCT CASE vt0.c2  WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (COALESCE(DISTINCT CASE vt0.c2  WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((COALESCE(DISTINCT CASE vt0.c2  WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE NOCASE)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((CAST(vt0.c2 AS TEXT))>>(COALESCE(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((CAST(vt0.c2 AS TEXT))>>(COALESCE(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((CAST(vt0.c2 AS TEXT))>>(COALESCE(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 WHERE (((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(TYPEOF(DISTINCT vt0.c0))))AND(vt0.c0)))OR(((vt0.c2)<=(vt0.c0)))))AND(((((vt0.c1)OR(0X5ca3ec30)))OR(t0.c0))))) GROUP BY t0.c0, vt0.c1 UNION SELECT t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(TYPEOF(DISTINCT vt0.c0))))AND(vt0.c0)))OR(((vt0.c2)<=(vt0.c0)))))AND(((((vt0.c1)OR(0X5ca3ec30)))OR(t0.c0))))))) GROUP BY t0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 WHERE (((((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(TYPEOF(DISTINCT vt0.c0))))AND(vt0.c0)))OR(((vt0.c2)<=(vt0.c0)))))AND(((((vt0.c1)OR(0x5ca3ec30)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c1;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((MIN(TOTAL(COUNT(*))))==(MIN(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT (((MIN(TOTAL(COUNT(*))))=(MIN(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((((MIN(TOTAL(COUNT(*))))=(MIN(SUM(vt0.c0))))) ISNULL);
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (CAST(((((((((t0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (CAST(((((((((t0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM t0, vt0 WHERE (((CAST(((((((((t0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOTNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS BLOB)) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (~ ((('捰(|c') BETWEEN ('') AND (t0.c0))));
SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (~ ((('捰(|c') BETWEEN ('') AND (t0.c0)))) WHERE ((- (rtreenode(x'', x'')))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (~ ((('捰(|c') BETWEEN ('') AND (t0.c0)))) WHERE ((NOT ((- (rtreenode(x'', x'')))))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (~ ((('捰(|c') BETWEEN ('') AND (t0.c0)))) WHERE ((((- (rtreenode(x'', x'')))) ISNULL));
SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (~ ((('捰(|c') BETWEEN ('') AND (t0.c0))));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (UNLIKELY(t0.c0)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (UNLIKELY(t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((UNLIKELY(t0.c0)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((+ (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((+ (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 NOT INDEXED WHERE ((((+ (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (AVG(MAX(COUNT(*))) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((AVG(MAX(COUNT(*))) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((AVG(MAX(COUNT(*))) IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (AVG(MAX(COUNT(*))) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((AVG(MAX(COUNT(*))) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((AVG(MAX(COUNT(*))) IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM vt0, t0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM vt0, t0 WHERE (((((((vt0.c2)&(vt0.c0)))AND((vt0.c1 IN ()))))OR(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (((((((vt0.c2)&(vt0.c0)))AND((vt0.c1 IN ()))))OR(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM vt0, t0 WHERE (((((((((vt0.c2)&(vt0.c0)))AND((vt0.c1 IN ()))))OR(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, '-1571562101', vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)), ((vt0.c0)LIKE(vt0.c0)), ((x'')IS(vt0.c1)), vt0.c0)) AND (((('814703128') IS FALSE), (vt0.c0 IN (0.31945954291462975)), ((vt0.c2)<(vt0.c2)), ((vt0.c0)IS(t0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c0, vt0.c0, '-1571562101', vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)), ((vt0.c0)LIKE(vt0.c0)), ((x'')IS(vt0.c1)), vt0.c0)) AND (((('814703128') IS FALSE), (vt0.c0 IN (0.31945954291462975)), ((vt0.c2)<(vt0.c2)), ((vt0.c0)IS(t0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, '-1571562101', vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)), ((vt0.c0)LIKE(vt0.c0)), ((x'')IS(vt0.c1)), vt0.c0)) AND (((('814703128') IS FALSE), (vt0.c0 IN (0.31945954291462975)), ((vt0.c2)<(vt0.c2)), ((vt0.c0)IS(t0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING CASE WHEN GROUP_CONCAT(vt0.c2) THEN ((COUNT(MAX(vt0.c2))) IS TRUE) END UNION ALL SELECT vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt0.c2) THEN ((COUNT(MAX(vt0.c2))) IS TRUE) END)) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((CASE WHEN GROUP_CONCAT(vt0.c2) THEN ((COUNT(MAX(vt0.c2))) IS TRUE) END) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_array_length(vt0.c0 COLLATE BINARY, ((vt0.c1)<>('467282830')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (json_array_length(vt0.c0 COLLATE BINARY, ((vt0.c1)!=('467282830')))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((json_array_length(vt0.c0 COLLATE BINARY, ((vt0.c1)!=('467282830')))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0 WHERE (-6.33411904E8) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (-6.33411904E8))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0 WHERE (((-6.33411904E8) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((NULL)<<(vt0.c2)) END) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN ((NULL)<<(vt0.c2)) END))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN ((NULL)<<(vt0.c2)) END) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN 0.6990023099435189 THEN 0.36544263957808276 END)AND(((vt0.c1)&(vt0.c1)))))AND(t0.c0)) GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN 0.6990023099435189 THEN 0.36544263957808276 END)AND(((vt0.c1)&(vt0.c1)))))AND(t0.c0)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((MIN(AVG(vt0.c1)))&(MAX(vt0.c1))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN 0.6990023099435189 THEN 0.36544263957808276 END)AND(((vt0.c1)&(vt0.c1)))))AND(t0.c0)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (((MIN(AVG(vt0.c1)))&(MAX(vt0.c1))))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN 0.6990023099435189 THEN 0.36544263957808276 END)AND(((vt0.c1)&(vt0.c1)))))AND(t0.c0)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((((MIN(AVG(vt0.c1)))&(MAX(vt0.c1)))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (vt0.c2) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT * FROM t0, vt0 WHERE (((vt0.c2) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((vt0.c0)GLOB((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((vt0.c0)GLOB((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((vt0.c0)GLOB((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((- (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((- (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING (CAST(MIN(GROUP_CONCAT(t0.c0)) AS TEXT) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING (NOT ((CAST(MIN(GROUP_CONCAT(t0.c0)) AS TEXT) IN ()))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING (((CAST(MIN(GROUP_CONCAT(t0.c0)) AS TEXT) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING (CAST(MIN(GROUP_CONCAT(t0.c0)) AS TEXT) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING (NOT ((CAST(MIN(GROUP_CONCAT(t0.c0)) AS TEXT) IN ()))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0 HAVING (((CAST(MIN(GROUP_CONCAT(t0.c0)) AS TEXT) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c2, t0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((NULL COLLATE BINARY)|(((t0.c0) ISNULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((NULL COLLATE BINARY)|(((t0.c0) ISNULL)))))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE (((((NULL COLLATE BINARY)|(((t0.c0) ISNULL)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))GLOB(CAST(t0.c0 AS INTEGER)));
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))GLOB(CAST(t0.c0 AS INTEGER))) WHERE ((SUBSTR(vt0.c2, vt0.c2) IN ())) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))GLOB(CAST(t0.c0 AS INTEGER))) WHERE ((NOT ((SUBSTR(vt0.c2, vt0.c2) IN ())))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))GLOB(CAST(t0.c0 AS INTEGER))) WHERE ((((SUBSTR(vt0.c2, vt0.c2) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))GLOB(CAST(t0.c0 AS INTEGER)));
SELECT ALL t0.c0, vt0.c2 FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR((- (vt0.c2)))) GROUP BY t0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c2 FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR((- (vt0.c2)))) WHERE ((((('551598915')LIKE(t0.c0)))|(0xffffffff90f55f4a))) GROUP BY t0.c0, vt0.c2 UNION SELECT ALL t0.c0, vt0.c2 FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR((- (vt0.c2)))) WHERE ((NOT ((((('551598915')LIKE(t0.c0)))|(0xffffffff90f55f4a))))) GROUP BY t0.c0, vt0.c2 UNION SELECT ALL t0.c0, vt0.c2 FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR((- (vt0.c2)))) WHERE ((((((('551598915')LIKE(t0.c0)))|(0Xffffffff90f55f4a))) ISNULL)) GROUP BY t0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c2 FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR((- (vt0.c2)))) GROUP BY t0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT t0.c0, vt0.c2, vt0.c1 FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, vt0.c2, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT t0.c0, vt0.c2, vt0.c1 FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, vt0.c2, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON '878859800' GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((((NOT (vt0.c1))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c1) IS TRUE))GLOB((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c1) IS TRUE))GLOB((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c1) IS TRUE))GLOB((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c2, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((((MIN(vt0.c1, vt0.c1)))==((((((t0.c0)OR(NULL)))AND(vt0.c2)))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT ((((MIN(vt0.c1, vt0.c1)))==((((((t0.c0)OR(NULL)))AND(vt0.c2)))))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((((((MIN(vt0.c1, vt0.c1)))=((((((t0.c0)OR(NULL)))AND(vt0.c2)))))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING AVG(((vt0.c2) IS FALSE)) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (AVG(((vt0.c2) IS FALSE)))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((AVG(((vt0.c2) IS FALSE))) ISNULL);
SELECT t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING AVG(((vt0.c2) IS FALSE)) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING (NOT (AVG(((vt0.c2) IS FALSE)))) UNION ALL SELECT ALL t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1 HAVING ((AVG(((vt0.c2) IS FALSE))) ISNULL);
SELECT t0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON UNLIKELY(CAST(vt0.c2 AS TEXT)) GROUP BY t0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((+ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((((+ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ISNULL));
SELECT ALL vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('1021229211') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('1021229211'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('1021229211') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (vt0.c2 COLLATE RTRIM) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c2 COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING MAX(vt0.c1) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (MAX(vt0.c1))) UNION ALL SELECT vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((MAX(vt0.c1)) ISNULL);
SELECT vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING MAX(vt0.c1) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (MAX(vt0.c1))) UNION ALL SELECT vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((MAX(vt0.c1)) ISNULL);
SELECT vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)IS NOT(vt0.c1)))==(((((t0.c0)OR(t0.c0)))OR(vt0.c1))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)IS NOT(vt0.c1)))=(((((t0.c0)OR(t0.c0)))OR(vt0.c1)))) WHERE (CASE ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN vt0.c0 WHEN (+ (vt0.c2)) THEN ((vt0.c0)IS(vt0.c1)) WHEN ((vt0.c1)>>(t0.c0)) THEN NULLIF(vt0.c0, t0.c0) ELSE ((((((((t0.c0)AND(vt0.c2)))OR(x'')))AND(vt0.c0)))OR(t0.c0)) END) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)IS NOT(vt0.c1)))==(((((t0.c0)OR(t0.c0)))OR(vt0.c1)))) WHERE ((NOT (CASE ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN vt0.c0 WHEN (+ (vt0.c2)) THEN ((vt0.c0)IS(vt0.c1)) WHEN ((vt0.c1)>>(t0.c0)) THEN NULLIF(vt0.c0, t0.c0) ELSE ((((((((t0.c0)AND(vt0.c2)))OR(x'')))AND(vt0.c0)))OR(t0.c0)) END))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)IS NOT(vt0.c1)))=(((((t0.c0)OR(t0.c0)))OR(vt0.c1)))) WHERE (((CASE ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN vt0.c0 WHEN (+ (vt0.c2)) THEN ((vt0.c0)IS(vt0.c1)) WHEN ((vt0.c1)>>(t0.c0)) THEN NULLIF(vt0.c0, t0.c0) ELSE ((((((((t0.c0)AND(vt0.c2)))OR(x'')))AND(vt0.c0)))OR(t0.c0)) END) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)IS NOT(vt0.c1)))==(((((t0.c0)OR(t0.c0)))OR(vt0.c1))));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (SUBSTR('[\nZNqZX|!', (((t0.c0))<>((t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (SUBSTR('[\nZNqZX|!', (((t0.c0))<>((t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((SUBSTR('[\nZNqZX|!', (((t0.c0))!=((t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING SUM(((((MIN(vt0.c2))AND(vt0.c2)))AND(vt0.c2))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (SUM(((((MIN(vt0.c2))AND(vt0.c2)))AND(vt0.c2))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((SUM(((((MIN(vt0.c2))AND(vt0.c2)))AND(vt0.c2)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (COALESCE(t0.c0 COLLATE NOCASE, ((t0.c0) IS FALSE), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((NULL) NOT BETWEEN (t0.c0) AND (x'')))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (COALESCE(t0.c0 COLLATE NOCASE, ((t0.c0) IS FALSE), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((NULL) NOT BETWEEN (t0.c0) AND (x'')))))) UNION ALL SELECT * FROM t0 WHERE (((COALESCE(t0.c0 COLLATE NOCASE, ((t0.c0) IS FALSE), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((NULL) NOT BETWEEN (t0.c0) AND (x'')))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c2)) BETWEEN ((0.015477782126552708)) AND (((('1171201752') NOT BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c2)) BETWEEN ((0.015477782126552708)) AND (((('1171201752') NOT BETWEEN (vt0.c0) AND (vt0.c2))))) WHERE (((((((t0.c0)<=(vt0.c2)))OR((vt0.c0 IN ()))))AND(vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c2)) BETWEEN ((0.015477782126552708)) AND (((('1171201752') NOT BETWEEN (vt0.c0) AND (vt0.c2))))) WHERE ((NOT (((((((t0.c0)<=(vt0.c2)))OR((vt0.c0 IN ()))))AND(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c2)) BETWEEN ((0.015477782126552708)) AND (((('1171201752') NOT BETWEEN (vt0.c0) AND (vt0.c2))))) WHERE (((((((((t0.c0)<=(vt0.c2)))OR((vt0.c0 IN ()))))AND(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c2)) BETWEEN ((0.015477782126552708)) AND (((('1171201752') NOT BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (DATE(((((t0.c0)AND(x'bb83')))OR(vt0.c1)), ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'')))AND(vt0.c0)), (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (DATE(((((t0.c0)AND(x'bb83')))OR(vt0.c1)), ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'')))AND(vt0.c0)), (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((DATE(((((t0.c0)AND(x'bb83')))OR(vt0.c1)), ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'')))AND(vt0.c0)), (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING MIN(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) UNION ALL SELECT ALL vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (MIN(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING ((MIN(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ISNULL);
SELECT vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING MIN(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) UNION ALL SELECT ALL vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (MIN(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING ((MIN(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ISNULL);
SELECT vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((('g ') IS TRUE) IN ()) GROUP BY vt0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((vt0.c2 IN (vt0.c2))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((vt0.c2 IN (vt0.c2))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((vt0.c2 IN (vt0.c2))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (highlight(((t0.c0)OR(t0.c0)), LENGTH(x''), ((t0.c0) IS FALSE), '1367665153' COLLATE NOCASE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (highlight(((t0.c0)OR(t0.c0)), LENGTH(x''), ((t0.c0) IS FALSE), '1367665153' COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((highlight(((t0.c0)OR(t0.c0)), LENGTH(x''), ((t0.c0) IS FALSE), '1367665153' COLLATE NOCASE)) ISNULL));
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c2)>=(vt0.c2)))) AND ((CAST(vt0.c0 AS NUMERIC))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c2)) BETWEEN ((((vt0.c2)>=(vt0.c2)))) AND ((CAST(vt0.c0 AS NUMERIC))))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((((vt0.c2)) BETWEEN ((((vt0.c2)>=(vt0.c2)))) AND ((CAST(vt0.c0 AS NUMERIC))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0)LIKE(MIN(SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0)LIKE(MIN(SUM(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0)LIKE(MIN(SUM(t0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))>((vt0.c1)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c1))>((vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c1))>((vt0.c1)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (LIKELIHOOD(((vt0.c2)=('1345614782')), 0.13996099804878592)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (LIKELIHOOD(((vt0.c2)=('1345614782')), 0.13996099804878592)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((LIKELIHOOD(((vt0.c2)=('1345614782')), 0.13996099804878592)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((- (vt0.c2 COLLATE NOCASE))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT ((- (vt0.c2 COLLATE NOCASE))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((((- (vt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1, t0.c0 FROM t0 CROSS JOIN vt0 ON ((vt0.c1) NOTNULL) GROUP BY vt0.c2, vt0.c0, vt0.c1, t0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1, t0.c0 FROM t0 CROSS JOIN vt0 ON ((vt0.c1) NOTNULL) GROUP BY vt0.c2, vt0.c0, vt0.c1, t0.c0 HAVING CAST(CASE TOTAL(GROUP_CONCAT(MAX(vt0.c0)))  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))) WHEN t0.c0 THEN MIN(MIN(MAX(vt0.c0))) ELSE MAX(COUNT(COUNT(COUNT(*)))) END AS BLOB) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1, t0.c0 FROM t0 CROSS JOIN vt0 ON ((vt0.c1) NOTNULL) GROUP BY vt0.c2, vt0.c0, vt0.c1, t0.c0 HAVING (NOT (CAST(CASE TOTAL(GROUP_CONCAT(MAX(vt0.c0)))  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))) WHEN t0.c0 THEN MIN(MIN(MAX(vt0.c0))) ELSE MAX(COUNT(COUNT(COUNT(*)))) END AS BLOB))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1, t0.c0 FROM t0 CROSS JOIN vt0 ON ((vt0.c1) NOTNULL) GROUP BY vt0.c2, vt0.c0, vt0.c1, t0.c0 HAVING ((CAST(CASE TOTAL(GROUP_CONCAT(MAX(vt0.c0)))  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))) WHEN t0.c0 THEN MIN(MIN(MAX(vt0.c0))) ELSE MAX(COUNT(COUNT(COUNT(*)))) END AS BLOB)) ISNULL);
SELECT SUM(CAST(CASE vt0.c0  WHEN t0.c0 THEN vt0.c2 ELSE vt0.c0 END AS INTEGER)) FROM t0, vt0;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((((((CAST(t0.c0 AS NUMERIC))AND(((vt0.c1)LIKE(vt0.c0)))))AND(0.33008434372906026)))AND(vt0.c2 COLLATE NOCASE)))AND(CASE t0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((t0.c0)+(vt0.c0)) IN (((t0.c0) IS TRUE)))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((NOT (((((((((CAST(t0.c0 AS NUMERIC))AND(((vt0.c1)LIKE(vt0.c0)))))AND(0.33008434372906026)))AND(vt0.c2 COLLATE NOCASE)))AND(CASE t0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END))))) ORDER BY (((t0.c0)+(vt0.c0)) IN (((t0.c0) IS TRUE)))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((((((((CAST(t0.c0 AS NUMERIC))AND(((vt0.c1)LIKE(vt0.c0)))))AND(0.33008434372906026)))AND(vt0.c2 COLLATE NOCASE)))AND(CASE t0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) ORDER BY (((t0.c0)+(vt0.c0)) IN (((t0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS FALSE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c2)))IS(ABS(vt0.c1)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c2)))IS(ABS(vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c2)))IS(ABS(vt0.c1)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((TOTAL(MIN(MAX(t0.c0))))) NOT BETWEEN (((t0.c0 IN (MIN(t0.c0))))) AND ((COUNT(-1.340066011E9)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((TOTAL(MIN(MAX(t0.c0))))) NOT BETWEEN (((t0.c0 IN (MIN(t0.c0))))) AND ((COUNT(-1.340066011E9)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((TOTAL(MIN(MAX(t0.c0))))) NOT BETWEEN (((t0.c0 IN (MIN(t0.c0))))) AND ((COUNT(-1.340066011E9))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1))) IS TRUE)) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c1))) IS TRUE)))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1))) IS TRUE)) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c2)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c2)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c2)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((LIKELIHOOD(vt0.c1, 0.3363219234556195)) ISNULL)) GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((LIKELIHOOD(vt0.c1, 0.3363219234556195)) ISNULL)))) GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 UNION SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((LIKELIHOOD(vt0.c1, 0.3363219234556195)) ISNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((json_type(t0.c0))OR(NULL)))OR((((t0.c0))<((t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((json_type(t0.c0))OR(NULL)))OR((((t0.c0))<((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((json_type(t0.c0))OR(NULL)))OR((((t0.c0))<((t0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((+ (vt0.c0))))<((((vt0.c0) IS TRUE))))) UNION SELECT DISTINCT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((((+ (vt0.c0))))<((((vt0.c0) IS TRUE))))))) UNION SELECT DISTINCT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((+ (vt0.c0))))<((((vt0.c0) IS TRUE))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, t0.c0, vt0.c1 FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((json_extract(t0.c0, t0.c0)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0))>=((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((json_extract(t0.c0, t0.c0)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0))>=((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((json_extract(t0.c0, t0.c0)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0))>=((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0;
SELECT vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0 HAVING ABS(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0 HAVING (NOT (ABS(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0 HAVING ((ABS(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0;
SELECT vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0 HAVING ABS(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0 HAVING (NOT (ABS(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0 HAVING ((ABS(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((+ (vt0.c0)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, t0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((json_patch(vt0.c0, vt0.c2))AND((- (vt0.c0)))))OR((- (vt0.c2))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((json_patch(vt0.c0, vt0.c2))AND((- (vt0.c0)))))OR((- (vt0.c2))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((json_patch(vt0.c0, vt0.c2))AND((- (vt0.c0)))))OR((- (vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)IS(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)IS(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)IS(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, vt0.c2;
SELECT t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 WHERE (UNLIKELY(DISTINCT CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END)) GROUP BY t0.c0, vt0.c0, vt0.c2 UNION SELECT ALL t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT (UNLIKELY(DISTINCT CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END)))) GROUP BY t0.c0, vt0.c0, vt0.c2 UNION SELECT t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 WHERE (((UNLIKELY(DISTINCT CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END)) ISNULL)) GROUP BY t0.c0, vt0.c0, vt0.c2;
SELECT t0.c0, vt0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) IS TRUE) IN (((vt0.c2)>('')), ((vt0.c2) ISNULL))) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) IS TRUE) IN (((vt0.c2)>('')), ((vt0.c2) ISNULL))) GROUP BY vt0.c0, vt0.c2 HAVING TOTAL((NOT (AVG(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) IS TRUE) IN (((vt0.c2)>('')), ((vt0.c2) ISNULL))) GROUP BY vt0.c0, vt0.c2 HAVING (NOT (TOTAL((NOT (AVG(AVG(vt0.c0))))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) IS TRUE) IN (((vt0.c2)>('')), ((vt0.c2) ISNULL))) GROUP BY vt0.c0, vt0.c2 HAVING ((TOTAL((NOT (AVG(AVG(vt0.c0)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((x'')OR(((t0.c0) NOT NULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((x'')OR(((t0.c0) NOT NULL)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((x'')OR(((t0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0;
SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 WHERE ('yZel' COLLATE BINARY) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT ('yZel' COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1, vt0.c2, t0.c0 FROM t0, vt0 WHERE ((('yZel' COLLATE BINARY) ISNULL));
SELECT vt0.c1, vt0.c2, t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE (vt0.c1 IN (vt0.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((t0.c0) IS FALSE) END;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE (vt0.c1 IN (vt0.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((t0.c0) IS FALSE) END WHERE ((~ ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE (vt0.c1 IN (vt0.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((t0.c0) IS FALSE) END WHERE ((NOT ((~ ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE (vt0.c1 IN (vt0.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((t0.c0) IS FALSE) END WHERE ((((~ ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE (vt0.c1 IN (vt0.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((t0.c0) IS FALSE) END;
SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt0 WHERE (NULL) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM t0, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((((MIN(vt0.c1))OR(vt0.c1)))OR(GROUP_CONCAT(TOTAL(NULL)))))-(HEX(TOTAL(SUM(vt0.c0))))) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (((((((MIN(vt0.c1))OR(vt0.c1)))OR(GROUP_CONCAT(TOTAL(NULL)))))-(HEX(TOTAL(SUM(vt0.c0))))))) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((((((MIN(vt0.c1))OR(vt0.c1)))OR(GROUP_CONCAT(TOTAL(NULL)))))-(HEX(TOTAL(SUM(vt0.c0)))))) ISNULL);
SELECT ALL MIN((((t0.c0)) NOT BETWEEN ((((t0.c0)||(t0.c0)))) AND ((UPPER(t0.c0))))) FROM t0 ORDER BY (((t0.c0)) BETWEEN (((~ (t0.c0)))) AND ((((x'')LIKE(t0.c0))))) ASC;
SELECT ALL vt0.c2 FROM vt0, t0;
SELECT vt0.c2 FROM vt0, t0 WHERE (CAST(((1866007077) NOT NULL) AS TEXT)) UNION ALL SELECT vt0.c2 FROM vt0, t0 WHERE ((NOT (CAST(((1866007077) NOT NULL) AS TEXT)))) UNION ALL SELECT ALL vt0.c2 FROM vt0, t0 WHERE (((CAST(((1866007077) NOT NULL) AS TEXT)) ISNULL));
SELECT ALL vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c1 COLLATE BINARY IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((NOT ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((NOT ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING ((((SUM(MIN(SUM(AVG(vt0.c0)))))OR(((vt0.c1)<>(COUNT(t0.c0))))))OR(MIN(MIN(MAX(TOTAL(COUNT(*))))))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING (NOT (((((SUM(MIN(SUM(AVG(vt0.c0)))))OR(((vt0.c1)!=(COUNT(t0.c0))))))OR(MIN(MIN(MAX(TOTAL(COUNT(*))))))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING ((((((SUM(MIN(SUM(AVG(vt0.c0)))))OR(((vt0.c1)<>(COUNT(t0.c0))))))OR(MIN(MIN(MAX(TOTAL(COUNT(*)))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (TRIM(((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), ((((vt0.c2)AND(0X3c292fc2)))OR(vt0.c1)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (TRIM(((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), ((((vt0.c2)AND(0x3c292fc2)))OR(vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE (((TRIM(((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), ((((vt0.c2)AND(0X3c292fc2)))OR(vt0.c1)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) ISNULL)) NOTNULL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) ISNULL)) NOTNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) ISNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))>(CAST(0.07413833711326023 AS TEXT)))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))>(CAST(0.07413833711326023 AS TEXT)))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))>(CAST(0.07413833711326023 AS TEXT)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (GROUP_CONCAT(t0.c0) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((GROUP_CONCAT(t0.c0) IN ()))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((GROUP_CONCAT(t0.c0) IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (GROUP_CONCAT(t0.c0) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((GROUP_CONCAT(t0.c0) IN ()))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((GROUP_CONCAT(t0.c0) IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (LOWER(DISTINCT ((((t0.c0)AND(t0.c0)))AND(vt0.c1)))) UNION ALL SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((NOT (LOWER(DISTINCT ((((t0.c0)AND(t0.c0)))AND(vt0.c1)))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((LOWER(DISTINCT ((((t0.c0)AND(t0.c0)))AND(vt0.c1)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0 WHERE ((((((NOT (vt0.c1)))OR(((vt0.c1) NOTNULL))))AND(vt0.c0))) UNION SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0 WHERE ((NOT ((((((NOT (vt0.c1)))OR(((vt0.c1) NOTNULL))))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0 WHERE ((((((((NOT (vt0.c1)))OR(((vt0.c1) NOTNULL))))AND(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c2, t0.c0 FROM vt0, t0;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((t0.c0)OR(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE ((NOT (CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((t0.c0)OR(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, t0 WHERE (((CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((t0.c0)OR(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL((- (COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL((- (COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL((- (COUNT(vt0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)>>(t0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)>>(t0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (CAST((((vt0.c2))<=((vt0.c0))) AS REAL)) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (CAST((((vt0.c2))<=((vt0.c0))) AS REAL)))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (((CAST((((vt0.c2))<=((vt0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0;
SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT vt0.c2, t0.c0, vt0.c1 FROM t0 NATURAL JOIN vt0 WHERE (UNLIKELY(vt0.c2 COLLATE RTRIM)) GROUP BY vt0.c2, t0.c0, vt0.c1 UNION SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM t0 NOT INDEXED NATURAL JOIN vt0 WHERE ((NOT (UNLIKELY(vt0.c2 COLLATE RTRIM)))) GROUP BY vt0.c2, t0.c0, vt0.c1 UNION SELECT vt0.c2, t0.c0, vt0.c1 FROM t0 NATURAL JOIN vt0 WHERE (((UNLIKELY(vt0.c2 COLLATE RTRIM)) ISNULL)) GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c0)||('-1199237935'))) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c0)||('-1199237935'))) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))) GROUP BY vt0.c2 HAVING GROUP_CONCAT(AVG(AVG(vt0.c1))) UNION ALL SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c0)||('-1199237935'))) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))) GROUP BY vt0.c2 HAVING (NOT (GROUP_CONCAT(AVG(AVG(vt0.c1))))) UNION ALL SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c0)||('-1199237935'))) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))) GROUP BY vt0.c2 HAVING ((GROUP_CONCAT(AVG(AVG(vt0.c1)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c2 COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c2 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(t0.c0)) NOT BETWEEN (((((((((t0.c0)OR(MAX(AVG(SUM(t0.c0))))))AND('-7')))OR(AVG(SUM(MAX(t0.c0))))))AND(TOTAL('-365920316')))) AND (TOTAL(MIN(AVG(NULL))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(t0.c0)) NOT BETWEEN (((((((((t0.c0)OR(MAX(AVG(SUM(t0.c0))))))AND('-7')))OR(AVG(SUM(MAX(t0.c0))))))AND(TOTAL('-365920316')))) AND (TOTAL(MIN(AVG(NULL))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TOTAL(t0.c0)) NOT BETWEEN (((((((((t0.c0)OR(MAX(AVG(SUM(t0.c0))))))AND('-7')))OR(AVG(SUM(MAX(t0.c0))))))AND(TOTAL('-365920316')))) AND (TOTAL(MIN(AVG(NULL)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t0.c0) AND (t0.c0))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t0.c0) AND (t0.c0))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY COLLATE RTRIM;
SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY COLLATE RTRIM WHERE ((((((~ (vt0.c0)))AND((vt0.c1 IN (vt0.c1)))))OR(t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY COLLATE RTRIM WHERE ((NOT ((((((~ (vt0.c0)))AND((vt0.c1 IN (vt0.c1)))))OR(t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY COLLATE RTRIM WHERE ((((((((~ (vt0.c0)))AND((vt0.c1 IN (vt0.c1)))))OR(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY COLLATE RTRIM;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)<>(vt0.c2)) END) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)!=(vt0.c2)) END))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)!=(vt0.c2)) END) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING AVG(MAX(vt0.c2)) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (AVG(MAX(vt0.c2)))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((AVG(MAX(vt0.c2))) ISNULL);
SELECT TOTAL((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) FROM t0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, t0 WHERE (CASE (vt0.c1 IN ())  WHEN (((t0.c0, vt0.c1, t0.c0))>=((vt0.c1, vt0.c1, vt0.c1))) THEN vt0.c2 COLLATE RTRIM END) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, t0 WHERE ((NOT (CASE (vt0.c1 IN ())  WHEN (((t0.c0, vt0.c1, t0.c0))>=((vt0.c1, vt0.c1, vt0.c1))) THEN vt0.c2 COLLATE RTRIM END))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((CASE (vt0.c1 IN ())  WHEN (((t0.c0, vt0.c1, t0.c0))>=((vt0.c1, vt0.c1, vt0.c1))) THEN vt0.c2 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, t0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (-1427444294) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (-1427444294))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE (((-1427444294) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 HAVING AVG(((AVG(MIN(vt0.c2)))>(MAX(vt0.c2)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 HAVING (NOT (AVG(((AVG(MIN(vt0.c2)))>(MAX(vt0.c2)))))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt0.c2 HAVING ((AVG(((AVG(MIN(vt0.c2)))>(MAX(vt0.c2))))) ISNULL);
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ (vt0.c2 COLLATE NOCASE));
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ (vt0.c2 COLLATE NOCASE)) WHERE (((((((vt0.c1)OR(vt0.c1)))OR(x'')))>>((NOT (vt0.c0))))) UNION ALL SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ (vt0.c2 COLLATE NOCASE)) WHERE ((NOT (((((((vt0.c1)OR(vt0.c1)))OR(x'')))>>((NOT (vt0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ (vt0.c2 COLLATE NOCASE)) WHERE (((((((((vt0.c1)OR(vt0.c1)))OR(x'')))>>((NOT (vt0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ (vt0.c2 COLLATE NOCASE));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) BETWEEN ((t0.c0 IN ())) AND (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) BETWEEN ((t0.c0 IN ())) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB)) BETWEEN ((t0.c0 IN ())) AND (t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((((((vt0.c1)IS NOT(vt0.c1))))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE ((NOT ((((((vt0.c1)IS NOT(vt0.c1))))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE ((((((((vt0.c1)IS NOT(vt0.c1))))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM t0 INNER JOIN vt0 ON (NOT (vt0.c2 COLLATE RTRIM)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0 INNER JOIN vt0 ON (NOT (vt0.c2 COLLATE RTRIM)) GROUP BY vt0.c1, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0 INNER JOIN vt0 ON (NOT (vt0.c2 COLLATE RTRIM)) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0 INNER JOIN vt0 ON (NOT (vt0.c2 COLLATE RTRIM)) GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT SUM((NOT (t0.c0)) COLLATE NOCASE) FROM t0 ORDER BY (t0.c0 IN ()) COLLATE NOCASE  NULLS LAST, (+ ((t0.c0 IN (t0.c0, t0.c0))))  NULLS FIRST;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (HEX(DISTINCT ((vt0.c0)<=(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (HEX(DISTINCT ((vt0.c0)<=(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((HEX(DISTINCT ((vt0.c0)<=(vt0.c0)))) ISNULL));
SELECT * FROM vt0, t0;
