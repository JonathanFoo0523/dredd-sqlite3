-- Time: 2024/06/10 06:05:50
-- Database: database48
-- Database version: 3.40.0
-- seed value: 2066370148
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1984605292); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT ); -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 ADD COLUMN c53 INT; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE t0; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('08'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (-2077231581); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
UPDATE vt0 SET c0=x'' WHERE ((((vt0.c0) ISNULL)) ISNULL); -- 0ms;
PRAGMA temp.threads = -2364086906529091576; -- 0ms;
REINDEX; -- 1ms;
REINDEX RTRIM; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-993164871 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1799960159'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-916039132'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(0.7984250639446675)) NOT BETWEEN (MAX(x'', '-916039132', x'2deb', x'5855')) AND (((0.8734435496500379) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4591397644187669; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN NULL ELSE 0Xffffffffc4cd81b9 END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-228649059 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1799960159 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1285671819'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (NULL) AND (0.33992116198254574)) IN (NULLIF(NULL, ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT 9223372036854775807)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-228649059 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0Xffffffffc9665a24 IN (x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') NOT BETWEEN (NULL) AND (0.33992116198254574)), 0xffffffffc0308486, (x'f627' IN ())))<((((x'')||(x'8d72')), LIKELY('c!^3B?'), CASE 0Xffffffff842ff623  WHEN '-1285671819' THEN 0.8734435496500379 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0xffffffffb4787e63 COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-916039132'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=347710589'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=465394011 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1618447749 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') IS FALSE)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-993164871', '465394011', x''))!=((NULL, '-1', '-1267171741'))))/(0.33992116198254574)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2522493111777079; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.7726597095050408 THEN x'c0ab' WHEN -1285671819 THEN '_g6W.}tGx' WHEN x'' THEN NULL END)LIKE(x'8c96e1b6')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=663494209 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 663494209 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1811201778 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0Xffffffffb35e3475)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1303806488'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '6 2 sz=-1920189881 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')IS(x'4d48')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1267171741'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1338722804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(json_valid('1811201778')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '707268919 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=347710589 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN (((((x'1489')AND(0.2522493111777079)))AND(725246295))) AND ((('-9223372036854775808') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-260432626')) BETWEEN (((((NULL))<=((NULL))))) AND ((CAST(NULL AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL) NOT BETWEEN (0x28662ee2) AND (x'')))AND((0x2e8bdda2 IN ()))))AND(CASE 31128524  WHEN '-1307683393' THEN '1138849760' END)))OR(('0.4591397644187669' IN ('0.7984250639446675', x'da07')))))OR('-1728740470')))OR((((('0tZOTd')AND(x'')))OR(0.8570472141524195)))))AND(((0.9707106738149375) BETWEEN ('.C_Ybj(') AND (x'ae65')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 830676068 sz=-492328183 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('0.8734435496500379')))AND(((x'')<(x'')))))OR((((('2010838892')OR(x'')))AND(0x7680fe10)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5614387222466402 AS INTEGER)) BETWEEN (CASE NULL  WHEN NULL THEN '' END) AND (CASE 'e/緺3s'  WHEN x'ddc248a1' THEN '_' WHEN 'RG>#,]Dt' THEN '+' WHEN 0x28662ee2 THEN 0.22838151402513762 ELSE 'gP奛3<' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-492328183 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=465394011 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>=(NULL)))IS NOT(('601464023' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1683751736 sz=465394011 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=830676068'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-485645043 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -310915088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('830676068')==(x'937f')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1723010365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('601464023')=('663494209'))  WHEN (((('-1267437827')AND(NULL)))AND('-1267437827')) THEN PRINTF(0.15378745816251105) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-429505020'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=663494209 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1275442703 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=663494209 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5ff2', NULL, 0.6778169695190475)) NOT BETWEEN (('1249122482', CASE WHEN ')6#tAvg#껂' THEN NULL WHEN x'' THEN '1236662718' WHEN '-1267171741' THEN 'gP奛3<' ELSE 0.2759531612098919 END, (~ (NULL)))) AND ((CAST('8P<''' AS REAL), NULL, IFNULL(DISTINCT NULL, x'255ea5fa')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=800339167 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2130642427 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '653381966 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=517472065'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.9014253277716426 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9707106738149375 COLLATE NOCASE)OR(((((0.22838151402513762)AND('EKgv}')))OR(NULL)))))AND((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1599103448 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((QUOTE(x''))&(((NULL)GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1728740470 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1407141659 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.16405202672471908 AS BLOB))AND((('830676068') ISNULL))))AND(((-361121962) NOT BETWEEN (0Xffffffff94b6c9a1) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('178975742') BETWEEN (0.21907609069032685) AND (x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1735841569; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-361121962 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)LIKE(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7349017593136955) NOT NULL))!=(COALESCE(0.7349017593136955, x'8244', 'RG>#,]Dt', x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x2a281137, NULL, 'x#')) BETWEEN ((CASE WHEN x'' THEN x'' END, ((('^	>u'))=((x'bb9b'))), ((x'') ISNULL))) AND ((CAST(-1.307683393E9 AS INTEGER), ((0X331f17f4) IS FALSE), ((0.24109308582286493)<>(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-236741258 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1720063522 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1332805011 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-429505020')AND(0xffffffffe842380d)))AND(x'2c10')))OR(NULL)))OR(x'4333')))IS(json('-1920189881'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-521301313 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-310915088'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1577491199 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1267437827'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=136024094 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (~ (0.8734435496500379)), 0.5061780929926922); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=366562488 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0x6c7d6794)))AND(((((0.922027979025425)OR('1138849760')))AND(NULL)))))AND(((((NULL)OR('2130642427')))OR(x'a25b')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1744266985 0 sz=-872459922 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=366562488 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1902532543 -666094643 sz=996018564'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('''{a' AS INTEGER)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5125924551799992, x'', NULL)) BETWEEN (((('-1746103302') IS TRUE), (('') NOTNULL), (((NULL))>=((0.7678174574480268))))) AND ((((x'8af3')+('-1285671819')), (~ (0.7686120970328347)), CAST(0.9077815643161291 AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1599103448 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('4ZJ') BETWEEN (x'') AND ('ekgv}')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1963682301 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((-651803060)<=(0.21907609069032685)))AND(NULL)))OR(((((((((0.7935300029427012)AND(NULL)))AND('&n|qaSc㑵')))OR('-1935380425')))OR(NULL)))))AND((('9223372036854775807')GLOB(NULL)))))OR(((0.24109308582286493)>(x'4ae28fff')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2866687861495809; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-976216823 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-872459922 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=465394011 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1951867249 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-733887028 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN ((']OHWY') BETWEEN ('') AND (9.96018564E8)) THEN ((x'') NOT BETWEEN (NULL) AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (NULL) AND (x'b2c3')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1577491199 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '445018343 sz=-1824721998 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN (0.5173572049776308) AND (((-1618447749) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.9077815643161291')%(-1845628818)))AND(QUOTE(''))))AND(((1114374358) NOT BETWEEN (NULL) AND ('1447140038')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-872459922 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<>(CAST('-20845894' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '725246295 2 sz=1249122482 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1737360702'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('O25' IN ())) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1723010365 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '214390182 sz=-819878044 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1447140038 sz=239941350 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=422469889 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1767302060 2142616479 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1303107671')<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-25228456 536974497 -468858193 -366959437 sz=-1105355824 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 'WX' THEN 0.7984250639446675 END)>=(((0.2866687861495809) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2035443218 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '}0' THEN x'bf0d' ELSE 'Gg' END) NOT BETWEEN ((NULL IN ())) AND (((0.2656967491962783) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1691097469'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)-(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=239941350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1332827813 sz=-816956787 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=513303813 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x''  WHEN x'' THEN 0X7eff05fb ELSE '-596997616' END)AND(((('1332827813'))<((x''))))))AND(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1959106288 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(0Xffffffffe2a7ab09); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '545205858'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1307683393 1187169775 sz=-596997616 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1811201778 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1338722804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(CASE WHEN 'lFsx[0J' THEN 0.13973929679896546 WHEN '&n_' THEN '9頻j/7a' WHEN NULL THEN 0.16405202672471908 ELSE 0.7628015683725694 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') IS FALSE))AND(((0Xffffffffc5b1a79c) BETWEEN (NULL) AND ('')))))AND(x'e364')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1490669281 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))<>(((x'c290') NOT BETWEEN (NULL) AND (0.5845573276696098)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<((0.8734435496500379)))) NOT BETWEEN (((((7.07268919E8)AND('-1850503234')))OR(0.7726597095050408))) AND (((0.08050753296309676)/(x'3f12')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=791825850 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-3.98313459E8 AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL))))!=(((('#5') NOT BETWEEN ('') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2077978179 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-819878044'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2138619604 sz=43376118 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('B<P[Be')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '545205858 sz=-1735841569 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1105355824 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-993164871 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0X13ebaf4e IN ())  WHEN ((-991792058) IS TRUE) THEN CAST(NULL AS INTEGER) ELSE json_quote('1101337970') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '132415083 -1408172997 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((((((((NULL)OR('0.2656967491962783')))AND(-740690040)))OR('1959106288')))AND('0.16405202672471908')), ((0.9874074993245567) BETWEEN ('1100266902') AND ('|')), CASE ''  WHEN NULL THEN 0.6515465697070988 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1303107671') NOTNULL) THEN ((((0.5125924551799992)OR(x'')))AND('1228896827')) ELSE TIME(NULL, x'', NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (x'698c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=800339167 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -354156541 sz=1351994127 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))>=(CASE WHEN -256879587 THEN '2|' WHEN 0.4314308125907389 THEN x'' WHEN 'tu' THEN '167143249' ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1179916335 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('<\ncI')) NOT BETWEEN ((1.7976931348623157E308)) AND ((NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED('5.'))OR(((('X', x'', NULL, 0.1523305162541022, NULL))=((-574187345, '0.5125924551799992', x'', 0.4117603333883081, 0.930176032115307))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '445018343'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-666094643 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1402825576 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1302026318 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1119009423 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1811894108 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOT BETWEEN (((((-1517737227)OR('-544080065')))OR(0.2755975757321686))) AND (CAST('0.2522493111777079' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-366959437 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('qheViy/V' COLLATE NOCASE) NOT BETWEEN (((NULL) IS TRUE)) AND (x'60cb')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0f'))<=((x''))))+((((((((('-1728740470')AND(-816956787)))OR('-2001939183')))OR('1427714114')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1979761963'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(0Xffffffff8805044e))) NOT BETWEEN (((x'')<(NULL))) AND (((NULL) BETWEEN ('*Q2o') AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=517472065 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.3568327964588136)))<(('0f' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'ed22') ISNULL))AND(NULL COLLATE NOCASE)))AND(((0.6961448381474397)>=('1463124197')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', '-V', 0.9980858079445791)) NOT BETWEEN (((+ (0.5624484363883921)), ((0x2ee608df)IS(0.6163658877602123)), ((NULL)IS NOT(0.2665558696684034)))) AND ((0.05809100822818558 COLLATE NOCASE, CASE WHEN '#逞' THEN 0.7268963411280962 WHEN '-20845894' THEN x'' WHEN 0X28662ee2 THEN -1070562170 ELSE 0.930176032115307 END, (0.10919872969277222 IN (x'd1a8', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '663494209' THEN 1138849760 WHEN 365956417 THEN '-162051325' WHEN 0.35213237113725127 THEN NULL WHEN x'e78f' THEN x'' WHEN x'' THEN x'' ELSE x'' END) BETWEEN (((-638981694) NOTNULL)) AND ((NOT (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-521301313', 'fb錥', -1186838155, x'9729', 3.47710589E8)) BETWEEN (('', 0.3422312598358518, 'F緺Dlp', NULL, 0.7358392879628659)) AND ((x'', '-2006568436', NULL, NULL, '720107660'))), ((1855131239) BETWEEN (NULL) AND (0Xffffffffda8974fe)), ((((0Xfffffffff584ff65)AND('-136479238')))AND(x'80ba'))))<=((CASE WHEN '-241059291' THEN '0 W' END, ((1.249122482E9)IS(x'')), CAST(x'' AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '92418702 sz=-820990800 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.5624484363883921) ISNULL) THEN ((0.8988129555333486) BETWEEN (NULL) AND ('0.7686120970328347')) ELSE NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('	''._{i')OR(x'')))OR(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1024186314 6 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TYPEOF(x'3f0e') IN (((0.8890339847375222)/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-648425202')) NOT BETWEEN (('-918207439')) AND (((((-1145813085, 0.20636842588780813, 0Xffffffff8580c068))>((x'6b4a', 0.7268963411280962, 0.20536985701003474)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-637870229 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '662803766 -1585562838 sz=546225256 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1618447749'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '-139287268' WHEN x'' THEN NULL WHEN NULL THEN 0xffffffffb31b2800 WHEN 0X2b3a6157 THEN 0.5639607102575439 WHEN NULL THEN -808777869 END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('qV')OR(0.9953768334774405)))AND(NULL)) THEN ('1447140038' IN ()) ELSE CAST('-740661177' AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '356752191 sz=2038766379 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=185270097 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN (('613102684')) AND (('-769770107'))))OR(CAST('FJ%' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(CASE x''  WHEN NULL THEN 0.17498340863126383 END, (0.4792643407784103 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1919839798 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)*('-2035443218'))  WHEN (((('4ZJ')AND('')))AND(0.9949141019429035)) THEN (('wP#/*') BETWEEN ('686691509') AND ('/訐&2l[')) ELSE ROUND(NULL, '-1935380425') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=725246295 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-261216346 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1855430945 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((DATETIME('U^?G', 0.9044652367410914, 0X722d7084, 'BFMz', 0.11843181390000324), (NOT (x'')), (+ (x''))))<>(((+ (0.44112498901574904)), ((NULL)<('-278679870')), (('1040758020') IS TRUE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('.>S', 0.9038780751506387, -3.98313459E8)) BETWEEN ((((NULL) IS TRUE), ((x'') BETWEEN ('-247592202') AND ('-2085643647')), ((0.8171261634497949) ISNULL))) AND ((NULLIF('-1618447749', '1490533983'), ((('239941350', NULL, NULL)) BETWEEN ((0x4dabd857, x'b839', NULL)) AND (('710997207', '-1', 0.5624484363883921))), CASE WHEN 'N{-GT3	4' THEN 0.9829756787317975 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=293396701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1565792359 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=18838233 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-623101942 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '996018564' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=214390182 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1426768479 4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1934220935 sz=-1332805011 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1735841569 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 8ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1230941577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-937188201 2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1562287788 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=663494209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN x'' WHEN 716528653 THEN '1684991048' WHEN '700502408' THEN x'' WHEN 0.9038780751506387 THEN 0.860851778864445 WHEN 0.8187334262358427 THEN x'' END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=725246295 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-596997616 AS INTEGER))>>((((('')OR(NULL)))OR('1577491199')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1850660144'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-828557608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1902532543'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array('h#', 'e/緺3s', 'yt5Z0舘', x'')) NOT BETWEEN (((0.37468358597684026) IS TRUE)) AND (CASE WHEN x'69d2' THEN 1728848802 ELSE '-348563983' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) BETWEEN (x'e421') AND ('Hb[T*0Q')))AND(((('b4s', '!KLB', x'', 0X7fb5bb9f, 0.7611755233321561))>=(('S䗔', NULL, NULL, 0xffffffffc5d01d09, '5HVjBCr'))))))OR((((('')AND(NULL)))AND(NULL)))))OR(((0.08208333604034834)<=(0xfffffffff7dd7dfa)))))OR(((('6')) NOT BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1712905248'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (x''))  WHEN CASE '136024094'  WHEN x'' THEN '*' END THEN ((959954178) ISNULL) WHEN 0X4f700c7d THEN (((('+|]')OR(x'')))AND(x'')) WHEN ((0Xffffffff97ec93fa) IS FALSE) THEN ((x'')!=(0.4700419819884456)) ELSE CASE WHEN 9.96018564E8 THEN x'' WHEN 1.36024094E8 THEN 1988165136 WHEN NULL THEN '' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1659970917 2 sz=473157891'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(CAST(0xc21afd0 AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('558589179') BETWEEN ('<G4') AND (-1877242900)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1069922822 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('o0')|(0.14901331774955295))  WHEN (((0.5248345382600986)) NOT BETWEEN ((0.4377308164057162)) AND (('780918178'))) THEN ((x'6756') ISNULL) ELSE (((0.13973929679896546)) NOT BETWEEN ((0.6577249659596938)) AND ((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('i]' IN ()))>=((718899862 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<>(CASE NULL  WHEN 0.5510607701303052 THEN 0.8146231224262165 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1954288670'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE ''  WHEN NULL THEN 0.02893643750644781 END  WHEN ((NULL) BETWEEN (NULL) AND ('/訐&2l[')) THEN (('1902532543')<>(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(NULL))|((((((((('545205858')AND(0.6238964008276083)))AND('-327868317')))OR(NULL)))AND(-6.5180306E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1249122482 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('4D05' IN ()))AND((((0.00416038687372966))<=((NULL))))))AND(('1243303194' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((~ (''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1526891264'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.10919872969277222 AS BLOB)) NOT BETWEEN ((((x'475c3df2')) NOT BETWEEN ((0.8070238971058875)) AND ((x'')))) AND ((('踺5^~-''') BETWEEN ('S䗔') AND ('669003332')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-260432626 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1618447749 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '150410748 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1360630027'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-5.21301313E8)) NOT BETWEEN ((((NULL)*('-260432626')))) AND (((('kM	jv#}R^') NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1935380425') NOT BETWEEN ('-1691097469') AND (-11623183)) IN (CASE ''  WHEN 1338722804 THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=408305630 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1904271147 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((PRINTF(NULL)) BETWEEN (CASE 0.30130986517729763  WHEN '' THEN 0.19146065415321134 ELSE '1812042184' END) AND ((~ ('31128524')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1122501863 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1608573724 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1051828433 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1307523292 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '524845073 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('qheviy/v' AS INTEGER))AND((((NULL, x'4d9b', '1418311714'))!=((x'', 0.8031948723196527, 1039128017))))))OR(CAST('334614096' AS REAL))))OR(LTRIM(x'', NULL))))OR((('-695481796')>('1984418427')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((QUOTE(NULL))%((((NULL))=(('2044046738'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-17824396 sz=-353439755'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', '-390681631', x'e355')) NOT BETWEEN ((((NULL) BETWEEN (NULL) AND (x'')), 0.7908482274978113 COLLATE NOCASE, (('[!\nNfyUJ') NOT BETWEEN (0xffffffffc03933e4) AND (x'')))) AND ((CASE NULL  WHEN 0X35dfcd28 THEN 0Xffffffffb20e55bf ELSE NULL END, (x'6e36' IN ()), (0.11429711472737947 IN (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.7091864465227783)))IS NOT(((0.9292676469997689) BETWEEN (-9.76216823E8) AND ('0.4117603333883081')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1961988645 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-929553880'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1532014954 sz=1183074258'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))>=((0.6747636845432209))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1599230848 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=361821149 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-521301313 sz=1999252313 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNLIKELY('im'))OR((((('1138849760')OR('')))AND(x'459a')))))OR('\nB' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN 0xffffffff8d8c3a47 THEN 0.3251931575012784 ELSE 0xffffffff98089917 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET((((('-1275442703')OR(NULL)))OR(0.15008210149394796))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))<>(CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1070562170 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')IS NOT(0xffffffffd9ac5774)), ((((1578349264)AND(2010838892)))OR(-1746103302)), CAST('517472065' AS REAL)))<(((- ('枔''G>)')), ((NULL)!=(NULL)), CASE WHEN NULL THEN 0.07901865333548863 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=185781760 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.683751736E9) NOT NULL))<<(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1971276452'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('.ᱤl鏺Q'))>((x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1285671819'; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-662616998 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '(*Wcn' THEN ')?_!SBqF' WHEN x'' THEN x'' WHEN '!' THEN '-429505020' END)&((('233692706') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'80a6')OR(-1.285671819E9)))AND(0xd75b76c)))<((('-468858193')OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1195963199 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 sz=-1845628818'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1221456478')AND(x'a49a')))OR('0.14901331774955295'))) BETWEEN (LOWER('')) AND (NULL COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-20845894 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.10919872969277222')<=(0.321807617923094)) COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.17151718072619548) BETWEEN ((((0.22838151402513762)) NOT BETWEEN ((0.08157619663539328)) AND ((0.989679717126439)))) AND (((0.6102392825886596) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2010838892 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=599757333 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) BETWEEN (HEX(DISTINCT 0.7226262194095805)) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=749145396 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '>뼻'  WHEN ((('%&'))==(('-236741258'))) THEN (+ (0.08050753296309676)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('0.7686120970328347')) NOT BETWEEN (('-685933751')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1627415898'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '5HVJBCR'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE BINARY))<=((UPPER('2044901348')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1480939637 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=677785314 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1332805011 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2083354321'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>('-2049327435')) COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1208575666'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1957768581 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((((((x'')OR(NULL)))AND('c!^3B?')))OR(NULL)))AND(x'5f92')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('08' IN ()))>>(('2142616479' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1525006076 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((('vO4', NULL, 0.305773426469261, NULL, 0.010884131565482735))!=(('PJ', NULL, NULL, NULL, '')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=614312554 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN ('\rrx7	]N' COLLATE BINARY) AND ((+ ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1993627062)GLOB(x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)|(-1.76730206E9)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1407141659 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6189186197459311) NOTNULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-250241516 9223372036854775807 sz=1303806488'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(COALESCE(DISTINCT 0.27865165133171155, x'7e27'), CASE 'Kfg>j'  WHEN '' THEN x'' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))<(LIKELIHOOD(DISTINCT 'O25', 0.33214472990217736))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1267171741 sz=683637861 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-134680603 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-743146458 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')!=('-1096840866')) THEN ((0.9605590455685918) NOTNULL) WHEN (((NULL))<(('c\x5{51N'))) THEN (('-413207805') IS FALSE) WHEN ((((((((NULL)OR(x'')))AND(x'4fc8')))AND('158184083')))AND(0.6557879917711174)) THEN CAST('663494209' AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1963682301' AS NUMERIC)) NOT BETWEEN (UNLIKELY(0Xfffffffff81c5f5e)) AND (PRINTF(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN (NULL)))AND('1715854623')))AND(CAST(0.1347573602914307 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '227522179 sz=-1267437827 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1187613356 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND (-468858193))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '168718088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=857675764'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((x'')>>('466595818')), (('-1936250497')>>(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1267171741 sz=64099547 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x2b2b1a50)) NOT BETWEEN ((CASE WHEN '' THEN NULL END)) AND ((((0.3542015942723481) NOT BETWEEN (x'd3960173') AND (8.30676068E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '120357885 sz=-2031021546 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1468415542'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1708685956 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((('Hb[T*0Q') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('')))<=(CAST(0.7895742903455261 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(0xffffffffb5306b10)))AND('-1997087648')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2110536354 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1408820555 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-2041019388)&(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-706923504 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((NULL)+('g1')), 0.5569057264457203); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1275442703 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1010285787 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (((NULL)) NOT BETWEEN ((0.9770684466173655)) AND ((x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=671140928 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '857675764 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-366959437 sz=1674090065'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT NULL)) NOT BETWEEN ((('-1735841569')>('1113173561'))) AND (0.5209966063512407)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1387380599 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1407141659 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1612167363')) NOT BETWEEN (((+ (x'')))) AND ((0.907779635587541 COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (7.07268919E8)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.8109778527307999 WHEN ',㒎' THEN ')6#tAvg#껂' WHEN x'' THEN -607291203 ELSE 0.6323706743053359 END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2030497935 sz=1626407360 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1599485726' AS TEXT))<>(((x'')OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ('0.5845573276696098'))  WHEN (+ (NULL)) THEN (('') NOTNULL) WHEN (NOT (0x33957bb0)) THEN '1780249031' COLLATE RTRIM WHEN (+ ('445018343')) THEN CAST(NULL AS TEXT) WHEN ((-973286672) BETWEEN ('') AND ('1015749141')) THEN (NULL IN (-1920189881, 0.45736124458709826)) WHEN 0.34318612401100723 THEN ((((((((((((((((0.7911054289850784)OR(NULL)))AND(NULL)))AND(-2.035443218E9)))OR(x'')))OR(0.5142231722710306)))OR('2142616479')))OR('545205858')))OR('0.7226262194095805')) ELSE SQLITE_COMPILEOPTION_GET('!B') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)IS(NULL))))<((NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1330366552 sz=725246295 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1735841569 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(-2121373370) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=577182360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1820157844 sz=-1851631747 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2130642427 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1720063522 AS REAL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (0.7628015683725694 IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=137272292 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1063715680'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1490664753 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) IS TRUE))AND(CAST('-361121962' AS TEXT))))AND((- (-1964369429)))))OR(((NULL) NOT BETWEEN ('O') AND (1148765148)))))OR(CASE 1170957279  WHEN x'' THEN 0.25132188755130147 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1057407262'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'1049')) NOT BETWEEN (('Y-T<詤' COLLATE NOCASE)) AND ((CASE WHEN 0.7671581668761763 THEN 0.9719354285664763 WHEN '-1618447749' THEN 0.7437042837862772 WHEN 1.338722804E9 THEN '%瓽嵉cW<+様5' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1892851960 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CASE WHEN 0.4881855421317316 THEN NULL WHEN x'' THEN 0.9137163102250374 WHEN x'' THEN NULL ELSE 0xffffffffd8951509 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Y|嚥p' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 2 sz=1249122482 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X2c3c9189) IS FALSE)) NOT BETWEEN ((- (x''))) AND ((('9kb!ሂra') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1001499671 sz=-2094429998'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-66499959 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-96254243 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)OR((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-916039132 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1364630525')=(NULL)))AND((('-1735841569') BETWEEN (NULL) AND (x'')))))AND('AH' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 347710589 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0xffffffff8edc65d3) BETWEEN (0.7413833482264883) AND (x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-35966209 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '601464023 sz=-528565821'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1819087770 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'', NULL, '-1267171741')) BETWEEN (('1447140038', 0.2656671374337375, 0.026380997201199574)) AND ((NULL, x'', 1720063522)))  WHEN (((((((('-361121962')OR('1668488240')))OR('H')))AND(0.28949792356332804)))OR(0.253941585699219)) THEN NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1700902578'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=915709963 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(HEX('RrZo%+I''') AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1267437827'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(LIKELIHOOD('485408194', 0.8734725954804877)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((COALESCE(DISTINCT x'9b5e', x'', NULL, 0.5537144970985337))AND(((NULL)&('{t')))))AND(LIKELIHOOD(NULL, 0.41599643204727177))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=25590013 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=458700266 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELIHOOD(DISTINCT NULL, 0.04256204121777629) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('' AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('%&')OR(0.8034688428819102)))OR(x'3ccb'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=749187234'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-680295580 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=497047553'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1303806488 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.35777308314084055) NOT BETWEEN (0xffffffffa3a9847f) AND (0.9874074993245567)) THEN (('1821295289') NOT NULL) WHEN CASE WHEN NULL THEN 0.7403637413318139 END THEN 0.922027979025425 COLLATE BINARY WHEN CASE x''  WHEN 0x13f4a8bc THEN 0.47909767548518845 WHEN 0.6213595600317543 THEN 0.6511459657857305 WHEN 0.2755975757321686 THEN NULL ELSE x'' END THEN '-1728730723' WHEN ((x'63a218f4')&(1.988165136E9)) THEN ((NULL) NOTNULL) WHEN ((NULL) NOT BETWEEN ('183658048') AND ('366562488')) THEN (x'' IN ()) WHEN (~ ('>Y#')) THEN '' COLLATE RTRIM WHEN ('' IN (0xffffffff99952439)) THEN ((((0.305773426469261)OR(NULL)))AND(3.66562488E8)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=465394011'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1398233028 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' COLLATE BINARY)AND((('')%('_g6W.}tGx')))))OR(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')-('X6)4}')) COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5f23')>(x'b24b')))&(((0.05820959493266242)||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '301042783 sz=-596997616'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=136024094 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '|K ehfl'  WHEN x'' THEN '' ELSE NULL END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1064895509'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1478262692'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1811247987 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1509329680 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CAST('' AS BLOB))) AND ((((NULL) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'8fa3'))<((NULL)))) NOT BETWEEN (CASE WHEN x'1659' THEN '178975742' WHEN NULL THEN '707268919' WHEN NULL THEN '770532916' END) AND (((0.8470450570314255)<=(x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN '-20845894' THEN 'uY芥b' END))<((((((0.7147625137827485)AND(0Xffffffffa51e9538)))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-273318318)<('')))||(CAST('' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1070107360 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')!=(0.06768764676364092)))OR((('Mq\ZzxT')<<(NULL)))))AND(CASE NULL  WHEN NULL THEN '' ELSE '-1845628818' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-673478865 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5184558688330727; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'f84d') NOT BETWEEN (-492328183) AND ('')))AND(CASE WHEN x'' THEN '''L&' END)))AND((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0Xffffffff93e299ae)&(''))  WHEN (((NULL, 0xffffffffb4746efd, ' KhKzXW갊', '-768813213', '')) NOT BETWEEN ((0.06220008315765835, x'', 0.015918270388300848, '', 0.2755975757321686)) AND (('-1784678915', '1447140038', NULL, 'D^X(H㉲5j1', 0.4091592459651684))) THEN (NOT (74370521)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM('1702956078', 0Xffffffff9d6073f9)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.40867027262184163)OR(x'8b92aa51')))OR(x'374edaa1')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xfffffffff25f179d; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1361245672 sz=2130642427 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '0.22838151402513762'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN RTRIM(-1) THEN (((NULL))!=((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1194258364 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((0.2613857402134079 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=9223372036854775807 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1187169775')+(-68996519))) BETWEEN ((('_|')OR('逞f'))) AND (x'b75f93ed' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('BDdａ5/' AS INTEGER) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((870819529 COLLATE BINARY)AND((('-1735841569')AND(NULL)))))AND(CAST('{/zBi' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '325093099 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0xffffffffe7881d04 AS BLOB) THEN ((('', '-228649059', 0.3146512628448066))>((0.5485509270971395, 0.736792564015044, '871011875'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1914257306 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-83154981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=553517012'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('\V>'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT 't<\w') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1789685739 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1078998057'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-144541576 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-2018452248 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1407141659 sz=1955489747 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1666473411'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2094365761 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1407141659 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1846970474 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=-1217676757'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1522655801 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-157828772'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=550260567 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1398607702 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('()')) BETWEEN ((NULL)) AND ((x''))))|((((((((('')AND(0.8146231224262165)))OR(-1.799960159E9)))AND(NULL)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=31128524'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'' THEN '-247997897' WHEN NULL THEN x'' WHEN '' THEN x'' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.6515465697070988 THEN '-506423875' END)IS NOT((',l79O%2EE' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1815176194 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1332827813 sz=1389170311'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 949288164 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((-3.61121962E8)AND(0.997257879135996)))OR(NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')*('')), 0.14078986533327176, CAST(x'' AS NUMERIC)))<>(((((3.1128524E7)) NOT BETWEEN ((0.94798169793156)) AND (('-642479090'))), ((((((((0.09323007773038217)OR(x'')))OR(x'de3a')))OR(x'53e1')))OR(x'')), 0.020893526223098813 COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1016981676 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1899407541 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-366120637 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-666094643 sz=1554349693 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=554504140 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.17413428573300282)) BETWEEN (('')) AND ((0.20478132927050574))))<((((((((('')OR(NULL)))OR(x'')))AND(x'6f8b')))AND(0.8988129555333486)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-196408013 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=77080844'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1963078535 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-174166603')OR(x'')))OR(-521301313)) IN ((NOT (NULL)), (('9kS\') NOT BETWEEN (1557649793) AND ('N\r%ZNCR')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1220853671 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1599103448 sz=617292374 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)>(NULL)) THEN CAST(NULL AS INTEGER) ELSE ((0xfffffffffec1eaba)IS(1.78975742E8)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-332264660 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffb3d44d93) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '438367144 -524279441 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1105355824 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=105255915'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-361121962'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME((((x'6652', 0.513183356175556, 0.6245765515969787))=(('''', 0.7358392879628659, 1200677917))), HEX(DISTINCT x'3748'), ((0.3164302284975291)>(NULL)), ((((((((0X111f17d2)AND(x'')))AND('')))OR('0.7984250639446675')))OR(0.4189417558426197)), CASE WHEN 0xffffffff8a86ecbd THEN NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-371241535 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5423411811378082; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '980715356 sz=-398313459 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1902532543 -2046498878 sz=-1935380425 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL, x'2b72', '\!\r~u!'))>=(('X扡m#', NULL, 1.249122482E9)))  WHEN ((NULL)LIKE(NULL)) THEN 0.7905789961704154 WHEN '0.21907609069032685' THEN (('0.35213237113725127')>=(x'')) WHEN (((NULL))<=((x'12cc9fa1'))) THEN x'' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1970232076 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '-456968536', x'')) NOT BETWEEN ((3.66562488E8, x'', '-977773876')) AND (('|}', 231535624, NULL))))<(((0.5122820941388756) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x452ce15e COLLATE BINARY)>=(TIME(NULL, x'', 0.40754807251822045))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1267171741 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=677785314 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-380122128 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2010186731 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=292592023 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -656865760'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '9%鯐7\' THEN '櫩᩸' ELSE 1377705921 END) NOT BETWEEN (((((((((0x296014f6)OR(-136479238)))OR(0.3320506435551822)))AND('(#')))OR(x''))) AND ((((0xffffffffa77caa56)) BETWEEN ((0.09063050702545494)) AND (('-921850152'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('-992695972' IN (x'', '740159133')) THEN ((x'') NOT BETWEEN ('') AND ('+䎵')) WHEN (+ (NULL)) THEN (+ (x'')) WHEN ((('-1844971229'))<>((NULL))) THEN (((((((('-1168240002')AND('!&')))AND(x'')))AND(x'de4b')))AND(NULL)) WHEN ((((0.23775310423984897)OR(0xffffffffee87b121)))OR(x'')) THEN '1723010365' COLLATE NOCASE WHEN x'e9cab51b' THEN ('-2071989611' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN (CASE 0.22790639623308817  WHEN 0.8732157334198728 THEN '31128524' END) AND (CAST(1.236662718E9 AS INTEGER))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1308183350'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'27fa') NOT NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=246490821 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=986608823'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1250656150 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL)) BETWEEN ((NULL)) AND (('-1902597199')))  WHEN ((0.7437784244335462)==('-1737360702')) THEN NULL WHEN (('hf') NOT BETWEEN (NULL) AND (NULL)) THEN ((x'') NOT BETWEEN (NULL) AND (NULL)) WHEN TYPEOF(DISTINCT NULL) THEN CASE WHEN '-1746103302' THEN '' END ELSE CASE WHEN -1665070903 THEN x'' ELSE 0x2c4912c0 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(3.1128524E7 AS TEXT) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5639607102575439 AS NUMERIC))>>(((0x1ed7ff41) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((0xffffffffb4746efd)-(x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=2010838892'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10505326372444124) BETWEEN (NULL) AND ('Gg'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(('-89928004' IN ()), (((0xffffffff97ad7d15))=((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')) BETWEEN ((-1.824721998E9)) AND ((0.5401600264925527))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-565229054'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1771052891 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0x6bf4bef2 THEN '>' END IN (((((NULL)OR('-860872261')))OR(NULL)))); -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15390'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=663494209,3');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM vt0 WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1659050561); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (1.723010365E9); -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size = -6511702966382060226; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.7726597095050408); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
VACUUM; -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (7.25246295E8); -- 0ms;
UPDATE vt0 SET c0='-121161672', c0=0.7102598692059241; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.19374358895543775), (NULL), (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1023898498); -- 1ms;
PRAGMA recursive_triggers; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL vt0 SET c0=x'', c0=0.23757888974016506, c0='0.07901865333548863'; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14441'); -- 0ms;
END; -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('0.4117603333883081'), (NULL), (-1920102843); -- 0ms;
PRAGMA mmap_size = 4690817321753057509; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
ANALYZE temp; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0)OR(2069827919)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*(((vt0.c0)||(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(2069827919)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*(((vt0.c0)||(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(2069827919)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*(((vt0.c0)||(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)==(x'')) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)==(x'')) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)=(x'')) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(AVG(x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(AVG(x'')))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(AVG(x''))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))OR('NW')) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))OR('NW')) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))OR('NW')) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE NOCASE)))OR(NULL)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE NOCASE)))OR(NULL)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE NOCASE)))OR(NULL)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((x'' COLLATE BINARY)) AND (((vt0.c0 IN (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((x'' COLLATE BINARY)) AND (((vt0.c0 IN (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((x'' COLLATE BINARY)) AND (((vt0.c0 IN (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(CAST(MIN(MIN(vt0.c0)) AS TEXT)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(CAST(MIN(MIN(vt0.c0)) AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(CAST(MIN(MIN(vt0.c0)) AS TEXT))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'c084') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x'c084'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'c084') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE TOTAL(vt0.c0)  WHEN vt0.c0 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (AVG(vt0.c0)) AND (MIN(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CASE TOTAL(vt0.c0)  WHEN vt0.c0 THEN vt0.c0 END)!=(((vt0.c0) BETWEEN (AVG(vt0.c0)) AND (MIN(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CASE TOTAL(vt0.c0)  WHEN vt0.c0 THEN vt0.c0 END)!=(((vt0.c0) BETWEEN (AVG(vt0.c0)) AND (MIN(GROUP_CONCAT(vt0.c0))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, x'd5cc'))), vt0.c0 COLLATE RTRIM)) AND ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<=((0.2784482870974001))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, x'd5cc'))), vt0.c0 COLLATE RTRIM)) AND ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<=((0.2784482870974001))))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, x'd5cc'))), vt0.c0 COLLATE RTRIM)) AND ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<=((0.2784482870974001))))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))>(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0))<((vt0.c0))))>(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0))<((vt0.c0))))>(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))>=(((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) ISNULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))>=(((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) ISNULL))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))>=(((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) ISNULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((- (COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((- (COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((- (COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((1.811201778E9) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((1.811201778E9) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((1.811201778E9) ISNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)!=(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)<>(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)<>(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(NULL AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(NULL AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(SUM(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((('')AND(vt0.c0)))OR(((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((('')AND(vt0.c0)))OR(((vt0.c0)<=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((('')AND(vt0.c0)))OR(((vt0.c0)<=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM(CAST((('-1845628818')GLOB(vt0.c0)) AS INTEGER)) FROM vt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)LIKE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)LIKE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((((((((vt0.c0)OR('QK6	!>㓟2')))AND(NULL)))OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((((((((vt0.c0)OR('QK6	!>㓟2')))AND(NULL)))OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((((((((vt0.c0)OR('QK6	!>㓟2')))AND(NULL)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(IFNULL(DISTINCT vt0.c0, vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(IFNULL(DISTINCT vt0.c0, vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(IFNULL(DISTINCT vt0.c0, vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(IFNULL(DISTINCT vt0.c0, vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(IFNULL(DISTINCT vt0.c0, vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(IFNULL(DISTINCT vt0.c0, vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM(CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) FROM vt0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)>(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(UNLIKELY(DISTINCT vt0.c0))))OR(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)>(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(UNLIKELY(DISTINCT vt0.c0))))OR(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)>(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(UNLIKELY(DISTINCT vt0.c0))))OR(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(vt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ ((((vt0.c0))!=((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ ((((vt0.c0))!=((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ ((((vt0.c0))!=((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)-(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '996018564', vt0.c0))))))AND(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)-(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '996018564', vt0.c0))))))AND(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)-(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '996018564', vt0.c0))))))AND(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.6102392825886596 COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.6102392825886596 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.6102392825886596 COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.6102392825886596 COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.6102392825886596 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.6102392825886596 COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE))!=(ROUND(0.19930738506674373, vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))!=(ROUND(0.19930738506674373, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS FALSE))<>(ROUND(0.19930738506674373, vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(TOTAL(vt0.c0))) ISNULL);
SELECT ALL TOTAL(((NULLIF(vt0.c0, vt0.c0))IS(((vt0.c0)|(vt0.c0))))) FROM vt0 ORDER BY (((+ (vt0.c0))) IS FALSE) DESC, CASE ((vt0.c0)|(vt0.c0))  WHEN load_extension(vt0.c0, vt0.c0) THEN CASE x''  WHEN vt0.c0 THEN 0.9077815643161291 END END DESC;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), NULL, (-2.36741258E8 IN (vt0.c0, vt0.c0))))<=((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((-4.68858193E8)%(vt0.c0)), ((0.963340854910772)AND(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), NULL, (-2.36741258E8 IN (vt0.c0, vt0.c0))))<=((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((-4.68858193E8)%(vt0.c0)), ((0.963340854910772)AND(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), NULL, (-2.36741258E8 IN (vt0.c0, vt0.c0))))<=((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((-4.68858193E8)%(vt0.c0)), ((0.963340854910772)AND(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (0.03606731148324149) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.03606731148324149))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.03606731148324149) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<((- (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<((- (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<((- (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((+ (vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((+ (vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((TOTAL(MIN(vt0.c0)))AND(vt0.c0)))OR(NULL)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((TOTAL(MIN(vt0.c0)))AND(vt0.c0)))OR(NULL)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((TOTAL(MIN(vt0.c0)))AND(vt0.c0)))OR(NULL)) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((TOTAL(MIN(vt0.c0)))AND(vt0.c0)))OR(NULL)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((TOTAL(MIN(vt0.c0)))AND(vt0.c0)))OR(NULL)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((TOTAL(MIN(vt0.c0)))AND(vt0.c0)))OR(NULL)) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('r') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('r'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('r') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(NULL) IN ()))/(GROUP_CONCAT(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((SUM(NULL) IN ()))/(GROUP_CONCAT(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((SUM(NULL) IN ()))/(GROUP_CONCAT(AVG(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND((((vt0.c0))<=((vt0.c0))))))AND(ABS(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)<(vt0.c0)))AND((((vt0.c0))<=((vt0.c0))))))AND(ABS(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)<(vt0.c0)))AND((((vt0.c0))<=((vt0.c0))))))AND(ABS(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((MIN(GROUP_CONCAT(AVG(MAX(AVG(GROUP_CONCAT(vt0.c0)))))))OR(COUNT(AVG(MAX(MAX(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((MIN(GROUP_CONCAT(AVG(MAX(AVG(GROUP_CONCAT(vt0.c0)))))))OR(COUNT(AVG(MAX(MAX(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((MIN(GROUP_CONCAT(AVG(MAX(AVG(GROUP_CONCAT(vt0.c0)))))))OR(COUNT(AVG(MAX(MAX(vt0.c0)))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c0)>(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)/(x'385c')) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c0)>(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)/(x'385c')) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) ISNULL)  WHEN ((vt0.c0)>(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)/(x'385c')) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS REAL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)IS(vt0.c0)) AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)IS(vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)IS(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((~ (((vt0.c0)IS(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((~ (((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0))))>((((vt0.c0))<((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))<>((vt0.c0))))>((((vt0.c0))<((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))!=((vt0.c0))))>((((vt0.c0))<((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||((vt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)/(vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)/(vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL))>(CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))>(CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL))>(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((('.ᱤl鏺Q', CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL)))<>((((vt0.c0)<(vt0.c0)), NULL, vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((('.ᱤl鏺Q', CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL)))!=((((vt0.c0)<(vt0.c0)), NULL, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((('.ᱤl鏺Q', CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL)))!=((((vt0.c0)<(vt0.c0)), NULL, vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(x'' COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((NULL)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(x'' COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((NULL)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(x'' COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) NOTNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) NOTNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))AND((vt0.c0 IN (vt0.c0)))))OR(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))AND((vt0.c0 IN (vt0.c0)))))OR(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))AND((vt0.c0 IN (vt0.c0)))))OR(vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN ((+ (vt0.c0))) AND ((~ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) BETWEEN ((+ (vt0.c0))) AND ((~ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE)) BETWEEN ((+ (vt0.c0))) AND ((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(0.9352562898634844 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(0.9352562898634844 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(0.9352562898634844 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN '_G輸B鏺g牻' ELSE (vt0.c0 IN ()) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN '_G輸B鏺g牻' ELSE (vt0.c0 IN ()) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN '_G輸B鏺g牻' ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(0x47b0d786 AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(0X47b0d786 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(0X47b0d786 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (ABS(0.9228674207436859)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (ABS(0.9228674207436859)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((ABS(0.9228674207436859)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(vt0.c0))) NOT NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(MAX(vt0.c0))) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(MAX(vt0.c0))) NOT NULL)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (0.9832359869020697) UNION ALL SELECT * FROM vt0 WHERE ((NOT (0.9832359869020697))) UNION ALL SELECT ALL * FROM vt0 WHERE (((0.9832359869020697) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0.285185499680219)) BETWEEN ((((vt0.c0)==(vt0.c0)), vt0.c0 COLLATE RTRIM, vt0.c0)) AND ((('r⥬ebarXx' IN (vt0.c0)), (((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((-1.332805011E9, vt0.c0, vt0.c0))), vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, 0.285185499680219)) BETWEEN ((((vt0.c0)=(vt0.c0)), vt0.c0 COLLATE RTRIM, vt0.c0)) AND ((('r⥬ebarXx' IN (vt0.c0)), (((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((-1.332805011E9, vt0.c0, vt0.c0))), vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, 0.285185499680219)) BETWEEN ((((vt0.c0)=(vt0.c0)), vt0.c0 COLLATE RTRIM, vt0.c0)) AND ((('r⥬ebarXx' IN (vt0.c0)), (((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((-1.332805011E9, vt0.c0, vt0.c0))), vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))<((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))<((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))<((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (SUM(vt0.c0)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((MAX(AVG(MIN(TOTAL(vt0.c0)))))) AND ((COUNT(*))))) AND (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((+ (SUM(vt0.c0)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((MAX(AVG(MIN(TOTAL(vt0.c0)))))) AND ((COUNT(*))))) AND (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((+ (SUM(vt0.c0)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((MAX(AVG(MIN(TOTAL(vt0.c0)))))) AND ((COUNT(*))))) AND (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0)<>(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0)<>(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0)<>(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'' COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x'' COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'' COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*)))LIKE(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(*)))LIKE(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(COUNT(*)))LIKE(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (TYPEOF(DISTINCT (vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT (vt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((TYPEOF(DISTINCT (vt0.c0 IN ()))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND ((HEX(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND ((HEX(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND ((HEX(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))<=(LOWER(vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))<=(LOWER(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))<=(LOWER(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULLIF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULLIF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULLIF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) IS TRUE)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)==(vt0.c0))) IS TRUE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)==(vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0 WHERE (((NULL)<(((vt0.c0)GLOB(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((NULL)<(((vt0.c0)GLOB(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((NULL)<(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (SUM(vt0.c0) IN (((COUNT(COUNT(GROUP_CONCAT(vt0.c0))))>=(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((SUM(vt0.c0) IN (((COUNT(COUNT(GROUP_CONCAT(vt0.c0))))>=(MAX(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(vt0.c0) IN (((COUNT(COUNT(GROUP_CONCAT(vt0.c0))))>=(MAX(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)IS(vt0.c0)) THEN TYPEOF(DISTINCT vt0.c0) WHEN ((vt0.c0)+(vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)IS(vt0.c0)) THEN TYPEOF(DISTINCT vt0.c0) WHEN ((vt0.c0)+(vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)IS(vt0.c0)) THEN TYPEOF(DISTINCT vt0.c0) WHEN ((vt0.c0)+(vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (UNLIKELY(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (UNLIKELY(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (UNLIKELY(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS INTEGER)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS INTEGER)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((STRFTIME(vt0.c0, vt0.c0, vt0.c0) IN (((vt0.c0)<(NULL))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((STRFTIME(vt0.c0, vt0.c0, vt0.c0) IN (((vt0.c0)<(NULL))))))) UNION ALL SELECT * FROM vt0 WHERE ((((STRFTIME(vt0.c0, vt0.c0, vt0.c0) IN (((vt0.c0)<(NULL))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<((x'56a4'))) THEN (+ (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN (((vt0.c0))<((x'56a4'))) THEN (+ (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN (((vt0.c0))<((x'56a4'))) THEN (+ (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (('1951867249' IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (('1951867249' IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((('1951867249' IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TYPEOF(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TYPEOF(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TYPEOF(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TYPEOF(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TYPEOF(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TYPEOF(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(NULL)))AND(((vt0.c0)>>(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) IS FALSE))AND(NULL)))AND(((vt0.c0)>>(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) IS FALSE))AND(NULL)))AND(((vt0.c0)>>(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(TOTAL(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (0.8522571012992464) UNION ALL SELECT * FROM vt0 WHERE ((NOT (0.8522571012992464))) UNION ALL SELECT ALL * FROM vt0 WHERE (((0.8522571012992464) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('-468858193') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ('-468858193'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('-468858193') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((((vt0.c0)AND(SUM(vt0.c0))))AND(MAX(COUNT(MIN(SUM(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((((vt0.c0)AND(SUM(vt0.c0))))AND(MAX(COUNT(MIN(SUM(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((((vt0.c0)AND(SUM(vt0.c0))))AND(MAX(COUNT(MIN(SUM(vt0.c0)))))))) ISNULL);
SELECT ALL MAX(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) FROM vt0 ORDER BY (((vt0.c0, CAST(vt0.c0 AS BLOB), json_insert(vt0.c0, vt0.c0, vt0.c0)))<(((vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS TEXT)))) DESC, ((json_insert(vt0.c0, vt0.c0, 0X1a8670e7))>(vt0.c0)) ASC, CASE WHEN '' COLLATE RTRIM THEN ((NULL) NOT NULL) END;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (NULL))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((+ (NULL))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))=(LIKELIHOOD(DISTINCT vt0.c0, 0.9831836381766614)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))=(LIKELIHOOD(DISTINCT vt0.c0, 0.9831836381766614)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==(LIKELIHOOD(DISTINCT vt0.c0, 0.9831836381766614)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((0.5762539269095903 IN ())) BETWEEN (0.02893643750644781 COLLATE BINARY) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((0.5762539269095903 IN ())) BETWEEN (0.02893643750644781 COLLATE BINARY) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((0.5762539269095903 IN ())) BETWEEN (0.02893643750644781 COLLATE BINARY) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CAST(COUNT(AVG(MIN(vt0.c0))) AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CAST(COUNT(AVG(MIN(vt0.c0))) AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CAST(COUNT(AVG(MIN(vt0.c0))) AS NUMERIC))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(0.6205595599647622 AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(0.6205595599647622 AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(0.6205595599647622 AS TEXT)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-(CASE WHEN vt0.c0 THEN NULL WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN 1.963682301E9 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-(CASE WHEN vt0.c0 THEN NULL WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN 1.963682301E9 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-(CASE WHEN vt0.c0 THEN NULL WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN 1.963682301E9 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(((NULL)*('-60777526'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((NULL)*('-60777526'))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(((NULL)*('-60777526')))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(((NULL)*('-60777526'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((NULL)*('-60777526'))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(((NULL)*('-60777526')))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((CASE WHEN vt0.c0 THEN '1720063522' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '653381966' END) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (-1168368553))) FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL), ((((vt0.c0)IS NOT(vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('') UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (''))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((('') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL)<<(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((NULL)<<(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((NULL)<<(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL)<<(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((NULL)<<(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((NULL)<<(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(x'4cae' AS NUMERIC))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(x'4cae' AS NUMERIC))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(x'4cae' AS NUMERIC))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(TOTAL(MIN(SUM(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(TOTAL(MIN(SUM(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(TOTAL(MIN(SUM(MAX(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))<=(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))<=(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))<=(vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((-1.799960159E9)LIKE(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((-1.799960159E9)LIKE(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((-1.799960159E9)LIKE(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX((NOT ((~ (vt0.c0))))) FROM vt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((('-1267171741') NOT NULL))) AND ((CAST(0xffffffffd0e325df AS BLOB))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((('-1267171741') NOT NULL))) AND ((CAST(0xffffffffd0e325df AS BLOB))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((('-1267171741') NOT NULL))) AND ((CAST(0xffffffffd0e325df AS BLOB))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('-468858193') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((('-468858193') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('-468858193') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LOWER(DISTINCT vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (LOWER(DISTINCT vt0.c0 COLLATE RTRIM)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0 COLLATE RTRIM)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*) COLLATE NOCASE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*) COLLATE NOCASE)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)&(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)&(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)&(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.6778169695190475) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.6778169695190475))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.6778169695190475) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0))OR(COUNT(vt0.c0))))OR(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((AVG(vt0.c0))OR(COUNT(vt0.c0))))OR(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(vt0.c0))OR(COUNT(vt0.c0))))OR(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0))OR(COUNT(vt0.c0))))OR(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((AVG(vt0.c0))OR(COUNT(vt0.c0))))OR(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(vt0.c0))OR(COUNT(vt0.c0))))OR(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULLIF(DISTINCT CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT * FROM vt0 WHERE (((NULLIF(DISTINCT CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((((vt0.c0 COLLATE BINARY)OR(0.9878669041957391)))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0 COLLATE BINARY)OR(0.9878669041957391)))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0 COLLATE BINARY)OR(0.9878669041957391)))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(TOTAL(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(TOTAL(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(TOTAL(MIN(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) ISNULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) ISNULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (0.8886699679818192)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (0.8886699679818192)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (0.8886699679818192)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<(vt0.c0)))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY CAST('865824503' AS BLOB)  NULLS FIRST;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((vt0.c0 IN ())))))) ORDER BY CAST('865824503' AS BLOB)  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((vt0.c0 IN ())))) ISNULL)) ORDER BY CAST('865824503' AS BLOB)  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (1.963682301E9) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (1.963682301E9))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((1.963682301E9) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(SUM(MIN(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(SUM(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(SUM(MIN(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), CAST(vt0.c0 AS REAL), 'w')) AND (((- (vt0.c0)), 0.07022773808257876, vt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), CAST(vt0.c0 AS REAL), 'w')) AND (((- (vt0.c0)), 0.07022773808257876, vt0.c0 COLLATE NOCASE)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), CAST(vt0.c0 AS REAL), 'w')) AND (((- (vt0.c0)), 0.07022773808257876, vt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(vt0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(vt0.c0)) NOTNULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(vt0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(vt0.c0)) NOTNULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NULL IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((NULL IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SUM(SUM(vt0.c0))))&(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(SUM(SUM(vt0.c0))))&(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(SUM(SUM(vt0.c0))))&(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE NULL END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE NULL END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE NULL END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'f73f' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'f73f' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((+ (vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'f73f' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(SUM(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(SUM(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(SUM(TOTAL(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) ELSE (~ (vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) ELSE (~ (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) ELSE (~ (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)-(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)-(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)-(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) ISNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 IN (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'' COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x'' COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'' COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((TOTAL(TOTAL(vt0.c0)))-(COUNT(COUNT(MIN(MAX(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((TOTAL(TOTAL(vt0.c0)))-(COUNT(COUNT(MIN(MAX(vt0.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((TOTAL(TOTAL(vt0.c0)))-(COUNT(COUNT(MIN(MAX(vt0.c0)))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(((((NULL)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(((((NULL)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(((((NULL)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN ((('*')<<(vt0.c0))) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN ((('*')<<(vt0.c0))) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN ((('*')<<(vt0.c0))) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(GROUP_CONCAT(vt0.c0)))AND(SUM(vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN MIN(vt0.c0) ELSE TOTAL(MIN(vt0.c0)) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((SUM(GROUP_CONCAT(vt0.c0)))AND(SUM(vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN MIN(vt0.c0) ELSE TOTAL(MIN(vt0.c0)) END)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((SUM(GROUP_CONCAT(vt0.c0)))AND(SUM(vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN MIN(vt0.c0) ELSE TOTAL(MIN(vt0.c0)) END))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)<(vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0))) IS TRUE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)<>(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)!=(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)!=(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((((COUNT(*))AND(COUNT(*))))AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((((COUNT(*))AND(COUNT(*))))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((((COUNT(*))AND(COUNT(*))))AND(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (x'') UNION ALL SELECT * FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((NULL COLLATE NOCASE)AND(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((NULL COLLATE NOCASE)AND(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((NULL COLLATE NOCASE)AND(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((MIN(vt0.c0)) NOT BETWEEN (vt0.c0) AND (COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((MIN(vt0.c0)) NOT BETWEEN (vt0.c0) AND (COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((MIN(vt0.c0)) NOT BETWEEN (vt0.c0) AND (COUNT(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)|(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)|(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((vt0.c0 COLLATE RTRIM IN ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN ((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM IN ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(MIN(vt0.c0) AS REAL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MIN(vt0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(MIN(vt0.c0) AS REAL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(MIN(vt0.c0) AS REAL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MIN(vt0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(MIN(vt0.c0) AS REAL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR((vt0.c0 IN ()))))OR(vt0.c0)))AND(((vt0.c0) IS TRUE))))AND(0.14179394797692602))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS TEXT))OR((vt0.c0 IN ()))))OR(vt0.c0)))AND(((vt0.c0) IS TRUE))))AND(0.14179394797692602))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((CAST(vt0.c0 AS TEXT))OR((vt0.c0 IN ()))))OR(vt0.c0)))AND(((vt0.c0) IS TRUE))))AND(0.14179394797692602))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.34953901300489)) THEN vt0.c0 ELSE ((vt0.c0)<>(vt0.c0)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.34953901300489)) THEN vt0.c0 ELSE ((vt0.c0)<>(vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.34953901300489)) THEN vt0.c0 ELSE ((vt0.c0)<>(vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (-2096688537))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (-2096688537))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (-2096688537))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)+((((vt0.c0)) BETWEEN (('-1139595583')) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)+((((vt0.c0)) BETWEEN (('-1139595583')) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)+((((vt0.c0)) BETWEEN (('-1139595583')) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((-2.077231581E9)<(LAST_INSERT_ROWID()))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((-2.077231581E9)<(LAST_INSERT_ROWID()))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((-2.077231581E9)<(LAST_INSERT_ROWID()))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)|((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)|((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)|((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((('653381966' IN ())) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((('653381966' IN ())) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((('653381966' IN ())) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (((((x'')|(MIN(COUNT(*))))))<=((((SUM(SUM(AVG(vt0.c0)))) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((x'')|(MIN(COUNT(*))))))<=((((SUM(SUM(AVG(vt0.c0)))) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((x'')|(MIN(COUNT(*))))))<=((((SUM(SUM(AVG(vt0.c0)))) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==(vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(vt0.c0))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'0011') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x'0011'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'0011') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((NULL) ISNULL))OR(((vt0.c0)=(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((NULL) ISNULL))OR(((vt0.c0)==(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((NULL) ISNULL))OR(((vt0.c0)==(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(COUNT(MIN(vt0.c0)) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(MIN(vt0.c0)) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(MIN(vt0.c0)) AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((~ (vt0.c0)))))AND(NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((~ (vt0.c0)))))AND(NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((~ (vt0.c0)))))AND(NULL))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN x'068c' THEN '1399394607' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN x'068c' THEN '1399394607' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN x'068c' THEN '1399394607' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(LIKE(vt0.c0, vt0.c0, '}') AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(LIKE(vt0.c0, vt0.c0, '}') AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(LIKE(vt0.c0, vt0.c0, '}') AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS TRUE)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS TRUE)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 THEN ((vt0.c0) ISNULL) ELSE (~ (vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 THEN ((vt0.c0) ISNULL) ELSE (~ (vt0.c0)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE (((vt0.c0))<=((vt0.c0)))  WHEN vt0.c0 THEN ((vt0.c0) ISNULL) ELSE (~ (vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((- (NULLIF(x'', vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (NULLIF(x'', vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (NULLIF(x'', vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT vt0.c0) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT vt0.c0) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((((TOTAL(vt0.c0))AND(vt0.c0)))OR(NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((((TOTAL(vt0.c0))AND(vt0.c0)))OR(NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((((TOTAL(vt0.c0))AND(vt0.c0)))OR(NULL)))) ISNULL);
SELECT MAX(IFNULL(((vt0.c0)|(vt0.c0)), vt0.c0)) FROM vt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))*(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt0.c0)))*(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))*(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN ((vt0.c0)=(NULL)) THEN ((('-218707501'))<=((vt0.c0))) WHEN ((vt0.c0)-(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 1458132675)) AND ((NULL, vt0.c0, vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN (~ (vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN ((vt0.c0)==(NULL)) THEN ((('-218707501'))<=((vt0.c0))) WHEN ((vt0.c0)-(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 1458132675)) AND ((NULL, vt0.c0, vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN (~ (vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN ((vt0.c0)=(NULL)) THEN ((('-218707501'))<=((vt0.c0))) WHEN ((vt0.c0)-(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 1458132675)) AND ((NULL, vt0.c0, vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN ((vt0.c0)LIKE(COUNT(*))) THEN SUM(vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN ((vt0.c0)LIKE(COUNT(*))) THEN SUM(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN ((vt0.c0)LIKE(COUNT(*))) THEN SUM(vt0.c0) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN ((vt0.c0)LIKE(COUNT(*))) THEN SUM(vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN ((vt0.c0)LIKE(COUNT(*))) THEN SUM(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN ((vt0.c0)LIKE(COUNT(*))) THEN SUM(vt0.c0) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((+ (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT('AQ') UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT('AQ'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT('AQ')) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT('AQ') UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT('AQ'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT('AQ')) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UNLIKELY(DISTINCT json_remove(vt0.c0, ',e'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT json_remove(vt0.c0, ',e'))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((UNLIKELY(DISTINCT json_remove(vt0.c0, ',e'))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN 0.922027979025425 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN 0.922027979025425 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN 0.922027979025425 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((+ (vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ ((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ ((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((+ ((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(TOTAL(AVG(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(TOTAL(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(TOTAL(AVG(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UNLIKELY('\4')) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY('\4')))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((UNLIKELY('\4')) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0)<>(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0)<>(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0)!=(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM((((vt0.c0)) BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) FROM vt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ((vt0.c0 IN (vt0.c0, vt0.c0)), (((vt0.c0))<((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ((vt0.c0 IN (vt0.c0, vt0.c0)), (((vt0.c0))<((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ((vt0.c0 IN (vt0.c0, vt0.c0)), (((vt0.c0))<((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.33992116198254574')) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.33992116198254574')) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.33992116198254574')) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS NUMERIC))||(CAST(SUM(vt0.c0) AS INTEGER))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS NUMERIC))||(CAST(SUM(vt0.c0) AS INTEGER))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(vt0.c0 AS NUMERIC))||(CAST(SUM(vt0.c0) AS INTEGER)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS NUMERIC))||(CAST(SUM(vt0.c0) AS INTEGER))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS NUMERIC))||(CAST(SUM(vt0.c0) AS INTEGER))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(vt0.c0 AS NUMERIC))||(CAST(SUM(vt0.c0) AS INTEGER)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(TRIM(DISTINCT vt0.c0))))AND((NOT (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(TRIM(DISTINCT vt0.c0))))AND((NOT (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(TRIM(DISTINCT vt0.c0))))AND((NOT (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt0.c0))) ISNULL);
SELECT ALL TOTAL(CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.9678345545643904)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) FROM vt0 ORDER BY LIKELIHOOD(DISTINCT (((vt0.c0, x'', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), 0.6566939968306159)  NULLS LAST;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(x'' AS INTEGER))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(x'' AS INTEGER))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CAST(x'' AS INTEGER))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (HEX(DISTINCT CAST(vt0.c0 AS INTEGER))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('-816956787') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('-816956787'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('-816956787') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(SUM(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(SUM(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(SUM(MIN(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (((vt0.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (((vt0.c0 IN ()))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND (((vt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MIN(0x60ca7718) FROM vt0 ORDER BY CAST((+ (0.7536023954704973)) AS REAL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS BLOB)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) ISNULL) AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) ISNULL) AS BLOB)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (NULL) AND (LIKELY(DISTINCT vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (NULL) AND (LIKELY(DISTINCT vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (NULL) AND (LIKELY(DISTINCT vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ('!' COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('!' COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((('!' COLLATE BINARY) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(load_extension(vt0.c0, vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(load_extension(vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(load_extension(vt0.c0, vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(AVG(SUM(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(SUM(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(AVG(SUM(SUM(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(x'')) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)>(x'')) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>(x'')) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(vt0.c0) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(vt0.c0) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))>((vt0.c0))) IN (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0))>((vt0.c0))) IN (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0))>((vt0.c0))) IN (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LIKELY(DISTINCT NULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LIKELY(DISTINCT NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELY(DISTINCT NULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LTRIM((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (LTRIM((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LTRIM((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MIN(AVG(SUM(SUM(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(AVG(SUM(SUM(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MIN(AVG(SUM(SUM(GROUP_CONCAT(vt0.c0))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN TRIM(DISTINCT vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN (- (NULL)) THEN json_array_length(vt0.c0) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN TRIM(DISTINCT vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN (- (NULL)) THEN json_array_length(vt0.c0) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED WHERE (((CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN TRIM(DISTINCT vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN (- (NULL)) THEN json_array_length(vt0.c0) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)<<(x'')), CAST(vt0.c0 AS TEXT), ((('2064881260'))<(('2010838892')))))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN '1|' ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)<<(x'')), CAST(vt0.c0 AS TEXT), ((('2064881260'))<(('2010838892')))))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN '1|' ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)<<(x'')), CAST(vt0.c0 AS TEXT), ((('2064881260'))<(('2010838892')))))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN '1|' ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0)) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt0.c0)) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(vt0.c0)) NOT NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0)) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt0.c0)) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(vt0.c0)) NOT NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(5.36974497E8)))AND(vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c0)) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(5.36974497E8)))AND(vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c0)) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(5.36974497E8)))AND(vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c0)) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((~ (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT BETWEEN ((~ (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) NOT BETWEEN ((~ (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)))>=(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))>=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))>=(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))<=(SUM(vt0.c0)))) IS FALSE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(*))<=(SUM(vt0.c0)))) IS FALSE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(*))<=(SUM(vt0.c0)))) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))<=(SUM(vt0.c0)))) IS FALSE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(*))<=(SUM(vt0.c0)))) IS FALSE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(*))<=(SUM(vt0.c0)))) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((((vt0.c0) IS FALSE))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((((vt0.c0) IS FALSE))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((((vt0.c0) IS FALSE))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.40846784933783753) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.40846784933783753))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.40846784933783753) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (('0.35213237113725127' IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (('0.35213237113725127' IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((('0.35213237113725127' IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(MIN(vt0.c0)) IN (GROUP_CONCAT(vt0.c0), CAST(vt0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(MIN(vt0.c0)) IN (GROUP_CONCAT(vt0.c0), CAST(vt0.c0 AS INTEGER))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(MIN(vt0.c0)) IN (GROUP_CONCAT(vt0.c0), CAST(vt0.c0 AS INTEGER)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (NULLIF(vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULLIF(vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((NULLIF(vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (HEX(vt0.c0) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (HEX(vt0.c0) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((HEX(vt0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(TOTAL(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<=(',P'))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)<=(',P'))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)<=(',P'))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(CAST(vt0.c0 COLLATE RTRIM AS TEXT)) FROM vt0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))!=(((NOT (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE BINARY))!=(((NOT (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE BINARY))<>(((NOT (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)%(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)%(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)%(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE '1604449851'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE '1604449851'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE '1604449851'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((x'' COLLATE NOCASE)+(((0.8703060201383777)+(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((x'' COLLATE NOCASE)+(((0.8703060201383777)+(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'' COLLATE NOCASE)+(((0.8703060201383777)+(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0))||(TOTAL(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(vt0.c0))||(TOTAL(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0))||(TOTAL(AVG(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)>(vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((0.5947662118655155) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'b3da9d27', vt0.c0, vt0.c0)) AND ((vt0.c0, '\p', vt0.c0))))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0)<=(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((0.5947662118655155) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'b3da9d27', vt0.c0, vt0.c0)) AND ((vt0.c0, '\p', vt0.c0))))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0)<=(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((0.5947662118655155) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'b3da9d27', vt0.c0, vt0.c0)) AND ((vt0.c0, '\p', vt0.c0))))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0)<=(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)OR((vt0.c0 IN ()))))AND((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)OR((vt0.c0 IN ()))))AND((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)OR((vt0.c0 IN ()))))AND((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING UNLIKELY(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (UNLIKELY(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((UNLIKELY(AVG(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING UNLIKELY(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (UNLIKELY(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((UNLIKELY(AVG(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0 COLLATE BINARY))>=(((- (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY (((vt0.c0 COLLATE BINARY))>=(((- (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (((vt0.c0 COLLATE BINARY))>=(((- (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c0))<<(((0.00452779752973298) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((json_patch(vt0.c0, vt0.c0))<<(((0.00452779752973298) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((json_patch(vt0.c0, vt0.c0))<<(((0.00452779752973298) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.43172254486430395)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.43172254486430395)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.43172254486430395)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))-(TYPEOF(DISTINCT vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))-(TYPEOF(DISTINCT vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))-(TYPEOF(DISTINCT vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NULL))>=((COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((NULL))>=((COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((NULL))>=((COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NULL))>=((COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((NULL))>=((COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((NULL))>=((COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (x'') AND (-468858193)) THEN CAST(vt0.c0 AS BLOB) WHEN (vt0.c0 IN (x'b347', vt0.c0)) THEN (((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE CAST(vt0.c0 AS REAL) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (x'') AND (-468858193)) THEN CAST(vt0.c0 AS BLOB) WHEN (vt0.c0 IN (x'b347', vt0.c0)) THEN (((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE CAST(vt0.c0 AS REAL) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (x'') AND (-468858193)) THEN CAST(vt0.c0 AS BLOB) WHEN (vt0.c0 IN (x'b347', vt0.c0)) THEN (((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE CAST(vt0.c0 AS REAL) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('_oN뙘E2') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('_oN뙘E2'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('_oN뙘E2') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) NOT BETWEEN (MAX(COUNT(COUNT(*)))) AND (LIKELIHOOD(DISTINCT TOTAL(vt0.c0), 0.5525927851584828))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) NOT BETWEEN (MAX(COUNT(COUNT(*)))) AND (LIKELIHOOD(DISTINCT TOTAL(vt0.c0), 0.5525927851584828))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) NOT BETWEEN (MAX(COUNT(COUNT(*)))) AND (LIKELIHOOD(DISTINCT TOTAL(vt0.c0), 0.5525927851584828)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c0)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (vt0.c0 IN (vt0.c0))  WHEN 0xfffffffff39e4bcf THEN CAST(vt0.c0 AS REAL) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN (vt0.c0))  WHEN 0Xfffffffff39e4bcf THEN CAST(vt0.c0 AS REAL) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE (vt0.c0 IN (vt0.c0))  WHEN 0Xfffffffff39e4bcf THEN CAST(vt0.c0 AS REAL) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(MAX(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB((NOT (''))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB((NOT (''))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB((NOT (''))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN ((((((((((((vt0.c0)OR('0.07901865333548863')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN ((((((((((((vt0.c0)OR('0.07901865333548863')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN ((((((((((((vt0.c0)OR('0.07901865333548863')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX((((x'102a') BETWEEN (1863332208) AND (vt0.c0)) IN ())) FROM vt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE ((((((+ (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0x10e2e724)))) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0x10e2e724)))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0x10e2e724)))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) COLLATE BINARY, (NULL IN ()), CAST(vt0.c0 AS NUMERIC)))>(((AVG(vt0.c0) IN ()), MAX(COUNT(*)), ((((COUNT(SUM(vt0.c0)))OR(vt0.c0)))AND(AVG(AVG(COUNT(GROUP_CONCAT(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*) COLLATE BINARY, (NULL IN ()), CAST(vt0.c0 AS NUMERIC)))>(((AVG(vt0.c0) IN ()), MAX(COUNT(*)), ((((COUNT(SUM(vt0.c0)))OR(vt0.c0)))AND(AVG(AVG(COUNT(GROUP_CONCAT(vt0.c0))))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*) COLLATE BINARY, (NULL IN ()), CAST(vt0.c0 AS NUMERIC)))>(((AVG(vt0.c0) IN ()), MAX(COUNT(*)), ((((COUNT(SUM(vt0.c0)))OR(vt0.c0)))AND(AVG(AVG(COUNT(GROUP_CONCAT(vt0.c0)))))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((0Xcc755a6)<(''))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((0Xcc755a6)<(''))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((0Xcc755a6)<(''))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (HEX(((vt0.c0)AND(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (HEX(((vt0.c0)AND(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((HEX(((vt0.c0)AND(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((('\r2	>/杌')) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND (((+ (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((('\r2	>/杌')) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND (((+ (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((('\r2	>/杌')) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND (((+ (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('-85105546') UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ('-85105546'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((('-85105546') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z+' WHEN 'V[' THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, NULL)))) AND (NULL))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z+' WHEN 'V[' THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, NULL)))) AND (NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z+' WHEN 'V[' THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, NULL)))) AND (NULL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(SUM(COUNT(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(SUM(COUNT(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(SUM(COUNT(MAX(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((x'') NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((((NULL)AND(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((x'') NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((((NULL)AND(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((x'') NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((((NULL)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (-1589408113 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (-1589408113 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((-1589408113 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MAX(MAX(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(MAX(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MAX(MAX(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0))>((((vt0.c0)-(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))>((((vt0.c0)-(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>((((vt0.c0)-(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((TOTAL(vt0.c0)) BETWEEN (GROUP_CONCAT(TOTAL(vt0.c0))) AND (COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((TOTAL(vt0.c0)) BETWEEN (GROUP_CONCAT(TOTAL(vt0.c0))) AND (COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((TOTAL(vt0.c0)) BETWEEN (GROUP_CONCAT(TOTAL(vt0.c0))) AND (COUNT(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((x'')||(vt0.c0)), vt0.c0))!=((LTRIM(vt0.c0, vt0.c0), CAST(vt0.c0 AS REAL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((x'')||(vt0.c0)), vt0.c0))<>((LTRIM(vt0.c0, vt0.c0), CAST(vt0.c0 AS REAL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((x'')||(vt0.c0)), vt0.c0))!=((LTRIM(vt0.c0, vt0.c0), CAST(vt0.c0 AS REAL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), CASE vt0.c0  WHEN '921164900' THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)AND(0.28835481279547925)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0, '-366959437', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), ((((((((-1.275442703E9)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS BLOB))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), CASE vt0.c0  WHEN '921164900' THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)AND(0.28835481279547925)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0, '-366959437', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), ((((((((-1.275442703E9)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS BLOB))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), CASE vt0.c0  WHEN '921164900' THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)AND(0.28835481279547925)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0, '-366959437', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), ((((((((-1.275442703E9)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))<=(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt0.c0)))<=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))<=(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(TOTAL(x''), TOTAL(MIN(vt0.c0)))) NOT BETWEEN ('1720063522') AND (MIN(MIN(SUM(0.14417688436914444))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(TOTAL(x''), TOTAL(MIN(vt0.c0)))) NOT BETWEEN ('1720063522') AND (MIN(MIN(SUM(0.14417688436914444))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(TOTAL(x''), TOTAL(MIN(vt0.c0)))) NOT BETWEEN ('1720063522') AND (MIN(MIN(SUM(0.14417688436914444)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((0.18218941438264913)*(vt0.c0)))>((((vt0.c0))==((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((0.18218941438264913)*(vt0.c0)))>((((vt0.c0))==((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((0.18218941438264913)*(vt0.c0)))>((((vt0.c0))==((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((x'')LIKE(vt0.c0)))<=(SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((x'')LIKE(vt0.c0)))<=(SUM(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((((((x'')LIKE(vt0.c0)))<=(SUM(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c0)))GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c0)))GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((0.38130419133969806) NOT NULL))AND((((vt0.c0))<=((vt0.c0))))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((0.38130419133969806) NOT NULL))AND((((vt0.c0))<=((vt0.c0))))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((((0.38130419133969806) NOT NULL))AND((((vt0.c0))<=((vt0.c0))))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)=(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN TOTAL(0.8918607178086241) THEN MAX(vt0.c0) WHEN SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) THEN ((vt0.c0)<(COUNT(COUNT(vt0.c0)))) WHEN MIN(vt0.c0) THEN vt0.c0 END UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (CASE WHEN TOTAL(0.8918607178086241) THEN MAX(vt0.c0) WHEN SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) THEN ((vt0.c0)<(COUNT(COUNT(vt0.c0)))) WHEN MIN(vt0.c0) THEN vt0.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN TOTAL(0.8918607178086241) THEN MAX(vt0.c0) WHEN SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) THEN ((vt0.c0)<(COUNT(COUNT(vt0.c0)))) WHEN MIN(vt0.c0) THEN vt0.c0 END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (json_object(((vt0.c0)|(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_object(((vt0.c0)|(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((json_object(((vt0.c0)|(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL MAX(CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)<<(vt0.c0)) END) FROM vt0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0)-(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)-(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0)-(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((x'' IN ())) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((x'' IN ())) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((x'' IN ())) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(UPPER(vt0.c0) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(UPPER(vt0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE WHEN 0.20165187722257794 THEN vt0.c0 ELSE vt0.c0 END IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN 0.20165187722257794 THEN vt0.c0 ELSE vt0.c0 END IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((CASE WHEN 0.20165187722257794 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COALESCE(DISTINCT SUM(COUNT(MIN(vt0.c0))), vt0.c0, GROUP_CONCAT(vt0.c0), COUNT(*), SUM(MAX(SUM(x''))), TOTAL(AVG(vt0.c0))))AND(SUM(TOTAL(vt0.c0)))))OR(LOWER(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COALESCE(DISTINCT SUM(COUNT(MIN(vt0.c0))), vt0.c0, GROUP_CONCAT(vt0.c0), COUNT(*), SUM(MAX(SUM(x''))), TOTAL(AVG(vt0.c0))))AND(SUM(TOTAL(vt0.c0)))))OR(LOWER(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COALESCE(DISTINCT SUM(COUNT(MIN(vt0.c0))), vt0.c0, GROUP_CONCAT(vt0.c0), COUNT(*), SUM(MAX(SUM(x''))), TOTAL(AVG(vt0.c0))))AND(SUM(TOTAL(vt0.c0)))))OR(LOWER(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((('0.22838151402513762')AND(SUBSTR(vt0.c0, vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((('0.22838151402513762')AND(SUBSTR(vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((((('0.22838151402513762')AND(SUBSTR(vt0.c0, vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((MAX(GROUP_CONCAT(AVG(MIN(SUM(GROUP_CONCAT(vt0.c0)))))))|(vt0.c0))))!=((SUM(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((MAX(GROUP_CONCAT(AVG(MIN(SUM(GROUP_CONCAT(vt0.c0)))))))|(vt0.c0))))<>((SUM(MIN(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((MAX(GROUP_CONCAT(AVG(MIN(SUM(GROUP_CONCAT(vt0.c0)))))))|(vt0.c0))))<>((SUM(MIN(vt0.c0)))))) ISNULL);
SELECT ALL MAX((NOT (vt0.c0)) COLLATE RTRIM) FROM vt0 ORDER BY json_insert(x'aa56', (- (0.30635900286134365)), vt0.c0);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_remove(vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_remove(vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((json_remove(vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE vt0.c0  WHEN GROUP_CONCAT(vt0.c0) THEN CASE WHEN COUNT(*) THEN COUNT(MIN(vt0.c0)) END END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE vt0.c0  WHEN GROUP_CONCAT(vt0.c0) THEN CASE WHEN COUNT(*) THEN COUNT(MIN(vt0.c0)) END END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE vt0.c0  WHEN GROUP_CONCAT(vt0.c0) THEN CASE WHEN COUNT(*) THEN COUNT(MIN(vt0.c0)) END END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL))*(SQLITE_VERSION()))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))*(SQLITE_VERSION()))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))*(SQLITE_VERSION()))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT vt0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (NOT (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (NOT (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (NOT (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'7a0a' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'7a0a')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'7a0a') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'7a0a' UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'7a0a')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'7a0a') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0)))<<(NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))<<(NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0)))<<(NULL))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE (vt0.c0 IN (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE (vt0.c0 IN (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (INSTR(vt0.c0, (vt0.c0 IN (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (INSTR(vt0.c0, (vt0.c0 IN (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((INSTR(vt0.c0, (vt0.c0 IN (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.09762967039444903) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.09762967039444903) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.09762967039444903) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))*('536974497'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>(vt0.c0)))*('536974497'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))*('536974497'))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(LIKELY(vt0.c0))))AND(((vt0.c0) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) IS FALSE))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(LIKELY(vt0.c0))))AND(((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0) IS FALSE))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(LIKELY(vt0.c0))))AND(((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(GROUP_CONCAT(AVG(TOTAL(SUM(vt0.c0)))))) NOT BETWEEN ((- (vt0.c0))) AND (0.2414845847753916)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(GROUP_CONCAT(AVG(TOTAL(SUM(vt0.c0)))))) NOT BETWEEN ((- (vt0.c0))) AND (0.2414845847753916)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(GROUP_CONCAT(AVG(TOTAL(SUM(vt0.c0)))))) NOT BETWEEN ((- (vt0.c0))) AND (0.2414845847753916))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)>=(vt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)>=(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL) ISNULL))*(CASE '1723010365'  WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((NULL) ISNULL))*(CASE '1723010365'  WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((NULL) ISNULL))*(CASE '1723010365'  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))/(NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))/(NULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))/(NULL))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((((-1.735841569E9)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)IS(vt0.c0)) THEN x'835a' END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((-1.735841569E9)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)IS(vt0.c0)) THEN x'835a' END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((-1.735841569E9)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)IS(vt0.c0)) THEN x'835a' END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '}zi!_{軨1', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '}zi!_{軨1', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '}zi!_{軨1', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LIKELY(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))AND(MAX(AVG(COUNT(*))))))OR(vt0.c0)))AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LIKELY(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))AND(MAX(AVG(COUNT(*))))))OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LIKELY(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))AND(MAX(AVG(COUNT(*))))))OR(vt0.c0)))AND(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0)=(vt0.c0)))))OR(((vt0.c0)<(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0)==(vt0.c0)))))OR(((vt0.c0)<(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0)==(vt0.c0)))))OR(((vt0.c0)<(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((NOT (vt0.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (rtreenode(TYPEOF(vt0.c0), CAST(vt0.c0 AS INTEGER))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (rtreenode(TYPEOF(vt0.c0), CAST(vt0.c0 AS INTEGER))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((rtreenode(TYPEOF(vt0.c0), CAST(vt0.c0 AS INTEGER))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*))) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((COUNT(*) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((COUNT(*) COLLATE BINARY))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((COUNT(*) COLLATE BINARY)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*))) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((COUNT(*) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((COUNT(*) COLLATE BINARY))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((COUNT(*) COLLATE BINARY)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_remove(CAST(vt0.c0 AS INTEGER), x'', CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))<>((vt0.c0))), ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (json_remove(CAST(vt0.c0 AS INTEGER), x'', CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))!=((vt0.c0))), ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((json_remove(CAST(vt0.c0 AS INTEGER), x'', CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))<>((vt0.c0))), ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE)) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- ((~ (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- ((~ (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- ((~ (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- ((~ (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- ((~ (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- ((~ (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 COLLATE RTRIM END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 COLLATE RTRIM END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN (- (0x41b4fabb)) THEN (~ (vt0.c0)) WHEN '0.8570472141524195' THEN ((vt0.c0)|(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)AND(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (- (0x41b4fabb)) THEN (~ (vt0.c0)) WHEN '0.8570472141524195' THEN ((vt0.c0)|(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)AND(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN (- (0X41b4fabb)) THEN (~ (vt0.c0)) WHEN '0.8570472141524195' THEN ((vt0.c0)|(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)AND(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((('661064221')&(vt0.c0)), ((vt0.c0) ISNULL), (((vt0.c0))<=((vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((('661064221')&(vt0.c0)), ((vt0.c0) ISNULL), (((vt0.c0))<=((vt0.c0))))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((('661064221')&(vt0.c0)), ((vt0.c0) ISNULL), (((vt0.c0))<=((vt0.c0))))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(MIN(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(MIN(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(1.902532543E9 AS REAL)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(1.902532543E9 AS REAL)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((+ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(1.902532543E9 AS REAL)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, '嬞H1GHm'))==((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)OR(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, '嬞H1GHm'))=((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)OR(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, '嬞H1GHm'))=((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)OR(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((vt0.c0)>(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((vt0.c0)>(AVG(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((vt0.c0)>(AVG(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(0.6596708709348036)))AND(vt0.c0))) NOTNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(0.6596708709348036)))AND(vt0.c0))) NOTNULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(0.6596708709348036)))AND(vt0.c0))) NOTNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), 2.3994135E8 COLLATE BINARY, 0.14152989500092528))>=(((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE, 0.6162980475712352, '-1146935343')))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), 2.3994135E8 COLLATE BINARY, 0.14152989500092528))>=(((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE, 0.6162980475712352, '-1146935343')))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), 2.3994135E8 COLLATE BINARY, 0.14152989500092528))>=(((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE, 0.6162980475712352, '-1146935343')))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.8952349080561454) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.8952349080561454))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.8952349080561454) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))==(((NOT (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE))=(((NOT (vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0 COLLATE NOCASE))==(((NOT (vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(UPPER(DISTINCT '-521301313') AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(UPPER(DISTINCT '-521301313') AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(UPPER(DISTINCT '-521301313') AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (MAX(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (MAX(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (UPPER(((vt0.c0)=(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (UPPER(((vt0.c0)==(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((UPPER(((vt0.c0)=(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)IS(vt0.c0)) IN ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0)) IN ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((MIN(MIN(vt0.c0)))GLOB(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((MIN(MIN(vt0.c0)))GLOB(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((MIN(MIN(vt0.c0)))GLOB(MAX(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (vt0.c0, vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (vt0.c0, vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (vt0.c0, vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) NOTNULL))AND((~ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) NOTNULL))AND((~ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((((((((vt0.c0) NOTNULL))AND((~ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))AND(((vt0.c0)-(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))AND(((vt0.c0)-(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))AND(((vt0.c0)-(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (TYPEOF(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (TYPEOF(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (TYPEOF(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (0.8031948723196527) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.8031948723196527))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.8031948723196527) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)+(COUNT(*)))))==((COUNT(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c0)+(COUNT(*)))))=((COUNT(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((vt0.c0)+(COUNT(*)))))=((COUNT(MIN(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (0x16602e35) UNION ALL SELECT * FROM vt0 WHERE ((NOT (0X16602e35))) UNION ALL SELECT * FROM vt0 WHERE (((0X16602e35) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (json_array_length((- (vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (json_array_length((- (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((json_array_length((- (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN 0.7678174574480268 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))==(((vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((CASE WHEN vt0.c0 THEN 0.7678174574480268 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))=(((vt0.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((CASE WHEN vt0.c0 THEN 0.7678174574480268 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))==(((vt0.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((TOTAL(vt0.c0))AND(TOTAL(vt0.c0))))AND(GROUP_CONCAT(vt0.c0))) IN (AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(TOTAL(vt0.c0))))), MAX(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((TOTAL(vt0.c0))AND(TOTAL(vt0.c0))))AND(GROUP_CONCAT(vt0.c0))) IN (AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(TOTAL(vt0.c0))))), MAX(AVG(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((TOTAL(vt0.c0))AND(TOTAL(vt0.c0))))AND(GROUP_CONCAT(vt0.c0))) IN (AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(TOTAL(vt0.c0))))), MAX(AVG(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((((vt0.c0)IS(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((((vt0.c0)IS(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((((vt0.c0)IS(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) IS FALSE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT TOTAL(vt0.c0) FROM vt0 ORDER BY ((CAST(1.332827813E9 AS REAL))>=(x'742c'));
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))!=((COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))<>((COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))!=((COUNT(vt0.c0))))) ISNULL);
SELECT ALL TOTAL(((vt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN NULL THEN vt0.c0 END) AND ((vt0.c0 IN ())))) FROM vt0 ORDER BY (- (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((- (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) UNION ALL SELECT * FROM vt0 NOT INDEXED WHERE ((((- (vt0.c0))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (IFNULL(CAST(vt0.c0 AS TEXT), ((vt0.c0)GLOB(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (IFNULL(CAST(vt0.c0 AS TEXT), ((vt0.c0)GLOB(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((IFNULL(CAST(vt0.c0 AS TEXT), ((vt0.c0)GLOB(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_array_length((- (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (json_array_length((- (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((json_array_length((- (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(vt0.c0) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(vt0.c0) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(vt0.c0) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(vt0.c0) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)*('-1585647407')), vt0.c0 COLLATE BINARY, TRIM('-236741258'), ((vt0.c0) NOT NULL), CASE WHEN x'4b66' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()), ((vt0.c0)IS(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)), ((vt0.c0) IS TRUE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)*('-1585647407')), vt0.c0 COLLATE BINARY, TRIM('-236741258'), ((vt0.c0) NOT NULL), CASE WHEN x'4b66' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()), ((vt0.c0)IS(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)), ((vt0.c0) IS TRUE))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)*('-1585647407')), vt0.c0 COLLATE BINARY, TRIM('-236741258'), ((vt0.c0) NOT NULL), CASE WHEN x'4b66' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()), ((vt0.c0)IS(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0)), ((vt0.c0) IS TRUE))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0)|(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0)|(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0)|(TOTAL(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (LIKE(((vt0.c0)GLOB(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5794381839034641)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (LIKE(((vt0.c0)GLOB(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5794381839034641)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((LIKE(((vt0.c0)GLOB(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5794381839034641)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS FALSE))+(((vt0.c0) NOT BETWEEN ('3Lb.%K	a') AND (-492328183))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))+(((vt0.c0) NOT BETWEEN ('3Lb.%K	a') AND (-492328183))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))+(((vt0.c0) NOT BETWEEN ('3Lb.%K	a') AND (-492328183))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING -1.72874047E9 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (-1.72874047E9)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((-1.72874047E9) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING -1.72874047E9 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (-1.72874047E9)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((-1.72874047E9) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN x'' ELSE vt0.c0 COLLATE BINARY END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS REAL) THEN x'' ELSE vt0.c0 COLLATE BINARY END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS REAL) THEN x'' ELSE vt0.c0 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))==(((vt0.c0)<(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))==(((vt0.c0)<(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))=(((vt0.c0)<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKE(vt0.c0, vt0.c0, '-') COLLATE NOCASE COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKE(vt0.c0, vt0.c0, '-') COLLATE NOCASE COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c0, '-') COLLATE NOCASE COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING load_extension(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (load_extension(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((load_extension(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(0X16cab04d)) THEN (~ (vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(0x16cab04d)) THEN (~ (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(0x16cab04d)) THEN (~ (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((('F緺Dlp') NOT BETWEEN ('-194852830') AND (NULL)))|((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((('F緺Dlp') NOT BETWEEN ('-194852830') AND (NULL)))|((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((('F緺Dlp') NOT BETWEEN ('-194852830') AND (NULL)))|((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0))AND(CASE WHEN x'' THEN vt0.c0 END)))AND(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(vt0.c0))AND(CASE WHEN x'' THEN vt0.c0 END)))AND(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(vt0.c0))AND(CASE WHEN x'' THEN vt0.c0 END)))AND(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0))AND(CASE WHEN x'' THEN vt0.c0 END)))AND(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(vt0.c0))AND(CASE WHEN x'' THEN vt0.c0 END)))AND(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(vt0.c0))AND(CASE WHEN x'' THEN vt0.c0 END)))AND(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (LOWER(((vt0.c0)||(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LOWER(((vt0.c0)||(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((LOWER(((vt0.c0)||(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('290918198') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('290918198'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('290918198') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT TOTAL(((((vt0.c0)>=(vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT)))) FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.2707045608095051, vt0.c0, vt0.c0))))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (0xffffffffcbff516e))) IS FALSE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffcbff516e))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (0xffffffffcbff516e))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((NULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((NULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)<(NULL)), 0.999254420728052)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((vt0.c0)<(NULL)), 0.999254420728052)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT ((vt0.c0)<(NULL)), 0.999254420728052)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(vt0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>=(HEX(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))>=(HEX(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))>=(HEX(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'd3ff') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x'd3ff'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'd3ff') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(NULL AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(NULL AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(NULL AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((((vt0.c0)) NOT BETWEEN ((SUM(vt0.c0))) AND ((SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((((vt0.c0)) NOT BETWEEN ((SUM(vt0.c0))) AND ((SUM(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((((vt0.c0)) NOT BETWEEN ((SUM(vt0.c0))) AND ((SUM(vt0.c0)))))) ISNULL);
SELECT TOTAL(TOTAL_CHANGES()) FROM vt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0)) ASC;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<<(ABS(DISTINCT vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0)))<<(ABS(DISTINCT vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))<<(ABS(DISTINCT vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((-1332805011) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((('o0'))=((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((-1332805011) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((('o0'))=((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((-1332805011) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((('o0'))=((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))-(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))-(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))-(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(TOTAL(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(TOTAL(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(TOTAL(MAX(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NULL IN ()) WHEN ((vt0.c0)-(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN (('2040352735')==(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NULL IN ()) WHEN ((vt0.c0)-(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN (('2040352735')=(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NULL IN ()) WHEN ((vt0.c0)-(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN (('2040352735')==(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((+ (CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)AND(COUNT(*))))AND(MIN(COUNT(*)))) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)AND(COUNT(*))))AND(MIN(COUNT(*)))) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)AND(COUNT(*))))AND(MIN(COUNT(*)))) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((~ (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((~ (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (x''))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (x''))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0))>=(CAST(vt0.c0 AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(vt0.c0))>=(CAST(vt0.c0 AS BLOB))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(vt0.c0))>=(CAST(vt0.c0 AS BLOB)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0))>=(CAST(vt0.c0 AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(vt0.c0))>=(CAST(vt0.c0 AS BLOB))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(vt0.c0))>=(CAST(vt0.c0 AS BLOB)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX(NULL COLLATE NOCASE) FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (0x6000faa8)) IN ()) ASC;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NOT (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE ((((NOT (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (IFNULL(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE BINARY)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (IFNULL(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((IFNULL(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0 IN (vt0.c0)))OR(TOTAL(COUNT(*)))))OR(CASE WHEN TOTAL(vt0.c0) THEN vt0.c0 ELSE COUNT(vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c0 IN (vt0.c0)))OR(TOTAL(COUNT(*)))))OR(CASE WHEN TOTAL(vt0.c0) THEN vt0.c0 ELSE COUNT(vt0.c0) END)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((vt0.c0 IN (vt0.c0)))OR(TOTAL(COUNT(*)))))OR(CASE WHEN TOTAL(vt0.c0) THEN vt0.c0 ELSE COUNT(vt0.c0) END))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)IS(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)IS(CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0xffffffffb31ed14b) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0xffffffffb31ed14b))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0Xffffffffb31ed14b) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((x'')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((((x'')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((((x'')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(((GROUP_CONCAT(MIN(MIN(vt0.c0))))IS(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((GROUP_CONCAT(MIN(MIN(vt0.c0))))IS(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(((GROUP_CONCAT(MIN(MIN(vt0.c0))))IS(TOTAL(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN 0.60413673454464 WHEN (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (- (vt0.c0)) WHEN (- (vt0.c0)) THEN TRIM(vt0.c0) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN 0.60413673454464 WHEN (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (- (vt0.c0)) WHEN (- (vt0.c0)) THEN TRIM(vt0.c0) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN 0.60413673454464 WHEN (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (- (vt0.c0)) WHEN (- (vt0.c0)) THEN TRIM(vt0.c0) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LAST_INSERT_ROWID() COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LAST_INSERT_ROWID() COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LAST_INSERT_ROWID() COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((x'' COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((x'' COLLATE NOCASE)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((x'' COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(GROUP_CONCAT(AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(GROUP_CONCAT(AVG(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (0.34657046287575544) AND (vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (0.34657046287575544) AND (vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (0.34657046287575544) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '1959106288')) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '1959106288')) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY IN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '1959106288')) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(COUNT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(COUNT(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(COUNT(vt0.c0)))))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN (((vt0.c0)IS('Dg9}K''.'))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((+ (vt0.c0)) IN (((vt0.c0)IS('Dg9}K''.'))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((+ (vt0.c0)) IN (((vt0.c0)IS('Dg9}K''.'))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0 WHERE (rtreenode((~ (vt0.c0)), vt0.c0)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (rtreenode((~ (vt0.c0)), vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((rtreenode((~ (vt0.c0)), vt0.c0)) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((('6}')AND(vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((('6}')AND(vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((('6}')AND(vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(vt0.c0) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(vt0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(vt0.c0) COLLATE RTRIM)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (PRINTF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (PRINTF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((PRINTF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NULLIF(vt0.c0, vt0.c0) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c0) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (vt0.c0) AND (AVG(vt0.c0))) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS TEXT)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (LIKELY(DISTINCT CAST(vt0.c0 AS BLOB))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.10863429522726153) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.10863429522726153))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.10863429522726153) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(MIN(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(MIN(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(MIN(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((NULL IN (vt0.c0)))))AND(((vt0.c0)GLOB(vt0.c0)))))AND((- (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((NULL IN (vt0.c0)))))AND(((vt0.c0)GLOB(vt0.c0)))))AND((- (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((NULL IN (vt0.c0)))))AND(((vt0.c0)GLOB(vt0.c0)))))AND((- (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0, vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT ((vt0.c0 IN (vt0.c0, vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT ((vt0.c0 IN (vt0.c0, vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((UPPER(vt0.c0))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((UPPER(vt0.c0))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((UPPER(vt0.c0))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)>>(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))), vt0.c0))=((((((vt0.c0)OR(vt0.c0)))AND('2100978334')), (((vt0.c0))=((NULL))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0)>>(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))), vt0.c0))==((((((vt0.c0)OR(vt0.c0)))AND('2100978334')), (((vt0.c0))=((NULL))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0)>>(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))), vt0.c0))==((((((vt0.c0)OR(vt0.c0)))AND('2100978334')), (((vt0.c0))=((NULL))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(SUM(TOTAL(vt0.c0)))) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(SUM(TOTAL(vt0.c0)))) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(SUM(TOTAL(vt0.c0)))) NOT NULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((NULL IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((NULL IN ())))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((NULL IN ())))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(SUM(-1623232786))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(SUM(-1623232786))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(SUM(-1623232786)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0)) NOTNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((LOWER(DISTINCT vt0.c0)) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((LOWER(DISTINCT vt0.c0)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND((+ (vt0.c0)))))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))AND((('0.20536985701003474') BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((vt0.c0 COLLATE RTRIM)AND((+ (vt0.c0)))))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))AND((('0.20536985701003474') BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0 COLLATE RTRIM)AND((+ (vt0.c0)))))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))AND((('0.20536985701003474') BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, '.慗u)ofyO')))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, '.慗u)ofyO')))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, '.慗u)ofyO')))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)OR(0X72562bdb)))OR(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)OR(0x72562bdb)))OR(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)OR(0X72562bdb)))OR(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)/(((vt0.c0)IS(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)/(((vt0.c0)IS(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)/(((vt0.c0)IS(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((TOTAL(GROUP_CONCAT(MAX(vt0.c0))))) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((TOTAL(GROUP_CONCAT(MAX(vt0.c0))))) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((TOTAL(GROUP_CONCAT(MAX(vt0.c0))))) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (ABS(DISTINCT ((vt0.c0)&(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (ABS(DISTINCT ((vt0.c0)&(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((ABS(DISTINCT ((vt0.c0)&(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)!=(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)<>(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(SUM(COUNT(*)) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(SUM(COUNT(*)) AS REAL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(SUM(COUNT(*)) AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (UPPER(DISTINCT COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (UPPER(DISTINCT COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((UPPER(DISTINCT COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)&(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)&(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST((((MAX(SUM(COUNT(vt0.c0)))))<((SUM(vt0.c0)))) AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST((((MAX(SUM(COUNT(vt0.c0)))))<((SUM(vt0.c0)))) AS INTEGER))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST((((MAX(SUM(COUNT(vt0.c0)))))<((SUM(vt0.c0)))) AS INTEGER)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((0.34486120657637087)IS NOT(vt0.c0)))AND(rtreenode(vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((0.34486120657637087)IS NOT(vt0.c0)))AND(rtreenode(vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((0.34486120657637087)IS NOT(vt0.c0)))AND(rtreenode(vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0))>=((AVG(vt0.c0)))) COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0))>=((AVG(vt0.c0)))) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0))>=((AVG(vt0.c0)))) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0))>=((AVG(vt0.c0)))) COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0))>=((AVG(vt0.c0)))) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0))>=((AVG(vt0.c0)))) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
