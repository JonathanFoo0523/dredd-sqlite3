-- Time: 2024/06/12 07:37:51
-- Database: database47
-- Database version: 3.40.0
-- seed value: 108355347
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ((((('nq') NOT NULL)) IS FALSE), 0.8303129707001902, NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET c1=0.24078316646908748, c0='0.8303129707001902'; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'8f83') WHERE rt0.c1 COLLATE BINARY; -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1060375123 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1060375123 sz=1060375123 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1601559222 sz=1534448245'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.21606671931531996  WHEN NULL THEN '1844759321' WHEN '0.24078316646908748' THEN '-1888222590' WHEN '-1491925158' THEN 0.4003482755408835 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('664624767' AS INTEGER))>>((('Wd') BETWEEN (NULL) AND (0.0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=661631795'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1836800802'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=386370211 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')GLOB(x'')) THEN '1601559222' WHEN ('1945387921' IN (0X5f75dab6)) THEN ((((NULL)OR(x'')))AND('-72492968')) WHEN ((x'') BETWEEN ('-1491925158') AND (NULL)) THEN ((0.3899232307792512) ISNULL) ELSE (+ (0Xffffffffbdc6d05c)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2119804126 sz=-72492968 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1324830585'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=661631795 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-72492968 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff81a65b22 COLLATE RTRIM, (x'' IN ('1220493292', NULL)), ((x'') BETWEEN (x'') AND (NULL))))!=((json_object(0.3310588219651537, NULL, NULL, '777193026'), 0xffffffff973e9cf3, ('1220493292' IN ('V)ixS*'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1260222125 -2104475599 sz=661631795 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('❈㖜/3')IS NOT(0.9783817672809259))) NOT BETWEEN (((0.3899232307792512)<(NULL))) AND (((0.3709140344740113) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff9cc03d8b)OR('490044423')))AND(0.3709140344740113)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '791800393' THEN NULL END THEN ((NULL) NOTNULL) WHEN CAST(NULL AS NUMERIC) THEN (((0.9324222142609003))>=((NULL))) WHEN ((('-1888222590'))<(('-2119804126'))) THEN ((0.959916540300403)!=(-1423471471)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) BETWEEN (x'') AND ('-935338182')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, NULL)) BETWEEN (((('-2038544943') BETWEEN (x'0be9') AND (NULL)), (~ ('0.959916540300403')), (((6.64624767E8)) NOT BETWEEN ((0.7608554556686058)) AND ((0xffffffff9cc03d8b))))) AND ((CAST(NULL AS REAL), (0.7969102226422862 IN (NULL, x'ed882131')), (- (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((('')) NOT BETWEEN ((0.7354721304659221)) AND ((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') IS TRUE))<(((x'')GLOB(0.8228533972245482)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-7623058 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1744317387 2 sz=437994883 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x697cc1cf) NOT BETWEEN ('0.9783817672809259') AND (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-9223372036854775808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOTNULL) IN ((((x'', '776784996', 0.07182755667781826)) BETWEEN (('2', 0x29367e80, NULL)) AND ((x'dac9ab61', '1057120328', x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1945387921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '' THEN '1690827690' ELSE x'' END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=528981203 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2053422736 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1053718930 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('~rr')LIKE(x'4829fd9c')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0X276fb333)AND('1800628600')))OR(NULL)))OR(1.924540232E9)))OR('قFr{s')))AND(x'')))OR('')) COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((-1.111044004E9)OR(x'4d69')))AND(508381373)) THEN ((((6.64624767E8)AND('254351444')))OR(NULL)) ELSE '' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((0.9746657399142789)AND(NULL)))OR('1918294837')))AND(NULL)))OR(0.6308566230781188))  WHEN '!k, |efDJ' THEN ((((NULL)AND(NULL)))AND(x'8e17')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1918294837'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1053718930')AND(UPPER(x''))))OR(CAST(x'e5320a22' AS BLOB))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '776784996 536072948 sz=-1392137689 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))!=((0X1d357c07 IN (NULL, x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1918294837'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8553325961025462) NOT BETWEEN (0.6856114127357831) AND (0.3176893834848623))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-935338182')|(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-873854956 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1901542950 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '777193026 2 sz=1690827690 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=776784996 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '185430832'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||('')))>((4.90044423E8 IN (0X64c7fbaa, '-1299230288', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2119804126 1607532910 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1091442409 sz=1266013334 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '76515398 sz=-1491925158 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=664624767'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((UNICODE(0.09669149759736517))AND(JULIANDAY('-1999996988', 0x5f39925a, 0.8303129707001902, NULL, 2144049287))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'0513') NOT BETWEEN ('Um5K ''8r') AND (x''))  WHEN ((('dK~c')) NOT BETWEEN ((x'')) AND ((x'5d06'))) THEN ('1844759321' IN ()) WHEN 'AC8' COLLATE NOCASE THEN (('-1e500') NOTNULL) WHEN (+ (2.053422736E9)) THEN (((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-958456367 sz=-7623058 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1513914967'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (0.3899232307792512)))AND((((',鳳N', NULL, 0.7857230265924716)) BETWEEN ((x'', '0.8303129707001902', '1706657542')) AND (('㖜vg8请l', '182444939', 'wGpm'))))))AND((((0X6b536978)) NOT BETWEEN (('P	')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-95463002'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '1266013334'  WHEN x'aaebf3eb' THEN 0.07414000314473912 ELSE x'' END)OR(x'a2d495fc')))AND((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9549048429783966; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2023216630'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (0.24761938065657463) AND ('!k, |efDJ')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2144049287'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1329027745'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED('Tfr\r7㟵W' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-7623058 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1065589853 sz=-1665122933'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.6573811153699296)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-522972232 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)>>('k{*'))))>=((UPPER(DISTINCT '')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x43f2f9bb)LIKE(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2082945085 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((~ (0Xffffffffd4c4de2d)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'', NULL)) NOT BETWEEN ((0.7857230265924716, NULL, '')) AND ((0.515669206409166, '', 0.8303129707001902))))AND((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1280071205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1924540232 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1888222590 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1706657542'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7857230265924716)AND(NULL)))OR('1601559222'))) BETWEEN (((x'6e3f') IS FALSE)) AND (0.031081651438178537 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('') NOT BETWEEN (NULL) AND (x'97aa'))  WHEN ((NULL)==(x'')) THEN CASE 0.5990943195456094  WHEN 0.7434214168384106 THEN 1141607730 ELSE x'' END WHEN ((1634003606) BETWEEN (x'') AND (0.8148959950320606)) THEN ((0xffffffffb2ab0c08)IS NOT('p	')) WHEN (+ (x'')) THEN x'97cd' ELSE CAST(NULL AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '664624767 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1607532910 sz=-250484859 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))=((((((((((0.1263455235210834)AND(444858893)))AND(0x5ca0fc2b)))AND('')))AND(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-826833910 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-698527866 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1913387555 2 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1451252383 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1451252383 0 sz=-1297413112 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=280715798 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=280715798 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=907349332 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1924540232 sz=-281522841 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=349883477 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(TRIM(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('❈㖜/3', 0.4658031177596764, x'995c', '', x'c52e')) BETWEEN ((0.609978417409104, -148216444, NULL, 0xfffffffffc555f9d, x'')) AND ((x'', ']O', NULL, x'eda4', x''))) THEN ((NULL)AND(NULL)) WHEN (((((((('1918294837')OR(0.5004627627444683)))OR(NULL)))AND('491523439')))AND('777193026')) THEN CAST(0.9549048429783966 AS TEXT) WHEN TRIM(NULL) THEN ((x'a26c') NOT NULL) WHEN (('uu')|(0.07620028399895817)) THEN CAST('' AS REAL) WHEN CAST(0.959916540300403 AS BLOB) THEN ((0.062256752063514886) IS FALSE) ELSE (('-uy*') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'03944399')))>>(NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '920240876 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1634003606 sz=363862150'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=363862150 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9746657399142789)AND(NULL)))AND(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=691437184 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1039948141 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1309807872' IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=491523439 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=620077480 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2119804126 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ((0.5119831574248962)/(x'')), (((0x270201df)) NOT BETWEEN ((1.534448245E9)) AND (('-1360661147')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -30807026 sz=751820342 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '840149780 sz=-1133501427 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1023277676'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=146182684 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-417832371'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.1276502326165696 AS INTEGER))||((('+*p') BETWEEN (0.3358090283394922) AND ('0.07414000314473912')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1314693155 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4292819158524125 IN ()))%(0.9435076484052608 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.31068539717530974; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.5738260346216831 THEN '''J*\#Cwꇧ' ELSE 0x8feb7e9 END)&(((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=185430832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1111044004 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1260181763 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-396337127 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.36533949683383526 IN ('8')), '' COLLATE BINARY, (((('920240876')AND(x'')))AND('323520379'))))>=(((('1634003606') NOT BETWEEN ('Aqy\rzm') AND (NULL)), '0.07414000314473912' COLLATE NOCASE, (('䰊 ')>=(x'ed2c647e'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))IS(SQLITE_COMPILEOPTION_GET(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9647574807776913) NOT BETWEEN (x'') AND (x'd786cc3a'))) BETWEEN ((NULL IN (NULL, 0X66572ee1))) AND (LIKELY(0.09032807968213352))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1260222125 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1197688026'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((((((('-1898833159')AND(0.9549048429783966)))OR(NULL)))AND('-18741895')))OR('AC8')))AND('')))AND('2')) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=691437184 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=536072948 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS(x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1683536787 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1108815036 COLLATE RTRIM) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '952285448 sz=1667878555'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-7623058')+(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1593096790'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1901542950 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1739345909 -698527866 sz=-868095500'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=647394370 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-354002433' AS REAL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1706057104 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1220493292 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1308477037 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1322841755 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((((x'')AND('f]#C')))OR(x'')), ((0.4985465238749305) BETWEEN (NULL) AND ('I'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '705504880 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=654442975 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=907349332 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-853155051 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-384032488 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('9A')))/(((x'2f5c') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1286633736 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1062963420 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.4804107314427367) NOT BETWEEN ('d}鞋GL!4?,') AND ('1266013334')))OR(((x'012d')IS NOT(x'')))))AND(CAST(x'4c01' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1690827690' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE BINARY THEN CASE 0.05664962237980664  WHEN NULL THEN NULL ELSE '-1039948141' END WHEN ((x'8228') BETWEEN (0.6431681970399258) AND (0.26149944630697153)) THEN ((x'')>('1800628600')) WHEN CAST(0.5738260346216831 AS NUMERIC) THEN ((((((((((((x'27ad')OR('1139997115')))OR('108439400')))OR(x'')))OR('~e')))OR(-2.81522841E8)))AND(NULL)) ELSE ((((NULL)OR('%U궊F}')))OR(x'9d40')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN 0X2e530642 THEN x'' ELSE NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(((0.4625508924534446)OR(x'c4b2'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1788835291 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') NOT BETWEEN (x'') AND (x'c277')) THEN (- ('1091442409')) WHEN CASE '-72492968'  WHEN x'' THEN x'' WHEN x'' THEN NULL WHEN 0.5206375860867243 THEN NULL WHEN x'' THEN NULL WHEN '' THEN 1888293296 ELSE x'' END THEN ('syb%' IN ()) WHEN ((((NULL)OR(x'')))OR(x'61c8')) THEN (- ('1487550356')) ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '963364395' COLLATE RTRIM  WHEN ((('-1631640419', NULL, NULL)) BETWEEN (('', 1926487491, x'34c75b95')) AND ((2.053422736E9, -359949670, x'256b'))) THEN (~ ('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1336878566 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)LIKE(0.5194803625722542)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1805932051 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7320940762361607 COLLATE NOCASE)AND(((-1896448139)<<('0.26149944630697153')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-526487893 sz=536072948 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.8553325961025462', x'a4d8', '-680241093')) NOT BETWEEN ((354629666 COLLATE BINARY, (('-1996190468') NOT NULL), (((('1927545765')OR(' zk|[[]')))OR(NULL)))) AND ((('423151898' IN ('1047351576')), CAST('O2' AS REAL), ((x'0fc5bc1b') BETWEEN ('') AND (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1729172935 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.017326817464642374)OR(x'')))AND(NULL))  WHEN (('528981203')>>(NULL)) THEN (x'' IN (x'')) ELSE ((NULL)IS NOT('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('%e' IN ()))=(CAST('664624767' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (((0x72b62748) NOT BETWEEN ('254351444') AND (0.8029477937408125))) AND (((((1513736291)AND(NULL)))OR(0.04539673215957174)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1266013334 sz=1924540232 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2868020318880309; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=242653024 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-990977802'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-833010093 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1796215757 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 733420841 sz=854409751 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1871976702 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1931686657 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1360661147' AS INTEGER) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '444858893 sz=1675414621'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1491925158 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-72492968 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.9324222142609003') NOT NULL))>=((('-873854956')=(-244406937)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('y')OR(((0.8678080880888208) BETWEEN (0.8659261052837641) AND ('-1280071205')))))OR((('661631795')||(NULL)))))OR((~ ('-709429955')))))AND((~ (0.26643703689181286)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-102536184'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1706657542 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -7.25295571E8  WHEN x'9c3a' THEN NULL WHEN NULL THEN x'' WHEN -911849468 THEN 1.14160773E9 END)OR((('YUQ꜓5(')<<('g維')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LAST_INSERT_ROWID())AND((((x'')) NOT BETWEEN ((NULL)) AND ((0.7957279212095695))))))OR((-2104475599 IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=455422399'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-250484859 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS BLOB) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=951469843 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=173879215'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1235438890'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-40373861'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.876283507931745 COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.21378939710292955; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.7866564503777635)<>((((NULL, x'', 0x22723f79)) BETWEEN ((0.24520698920391026, 'czfꕩ8', NULL)) AND ((x'', NULL, 226142569))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS NUMERIC))AND('d\r*0^,D' COLLATE BINARY)))OR((((NULL))>=(('1554054187'))))))AND(((((((((0.8553325961025462)OR(NULL)))OR(0X59388bfd)))OR(x'')))AND(x'')))))OR(((('-1826027133', NULL, x'')) NOT BETWEEN (('y}M.亨<OZ', -1.280071205E9, NULL)) AND ((634775660, NULL, 0.3981466185345952))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-644427378 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1534448245 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-50010619 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('1335212582')AND('-560738117')))AND(x'')))OR('-478200309')))OR(0.876283507931745)))OR(CAST(0.9324222142609003 AS BLOB))))OR(((1.220493292E9) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5161210772286913) NOT BETWEEN (0.8429349433253668) AND (-763716696)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=977541204 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2113816757'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=353284244'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1220493292 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1513914967 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '276294805'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-981752231 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -141326918 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((751820342) IS TRUE))LIKE(CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('w') NOT BETWEEN (NULL) AND (x'c3142d82')) THEN NULL ELSE '1117061241' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2053422736') BETWEEN (COALESCE('-671104372', x'b47d')) AND ((('Q]eD+#^') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '751820342'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1445759991 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-984906684 sz=594920875 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2054479020 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.04677181314106227))<=(('-1111044004'))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=803984570'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('~7F')))OR(x'')))AND(((0Xffffffffb851f26d) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-1601081337 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-7623058'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.09669149759736517' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=9223372036854775807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1901542950 sz=737322977'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('TJ' IN ())) NOT BETWEEN (0X2f31ea49 COLLATE BINARY) AND (((x'')|(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-2109981754)<<(NULL)) THEN CASE -1491925158  WHEN NULL THEN '' WHEN '0.4658031177596764' THEN NULL WHEN NULL THEN NULL ELSE 'uu' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9744035594963085) IS FALSE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(CAST('_DjZU' AS TEXT), 0.38482657969557177); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-434766595 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-250484859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-72492968 1513914967 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.983995361668745)AND(NULLIF(NULL, '-157563933'))))AND(CASE WHEN -1805516373 THEN NULL WHEN NULL THEN 0X5ca0fc2b WHEN '''*' THEN '' END)))AND(0.2733617768167851)))OR((x'78a0' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1320606372 AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((((NULL)AND('')))AND(0.5514366912009819))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((NULL)OR('')))OR(NULL)))OR(0.04677181314106227)))AND(NULL))  WHEN (799977531 IN (NULL)) THEN (('1074205908')>=(NULL)) ELSE DATETIME(x'', 0.7979418979233661, '1980121523') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (COALESCE(NULL, x'', NULL, NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))==((0.35245093184022336)))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0uoU!諆FQ' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(0.7018787506639294 COLLATE BINARY, CAST('0.09032807968213352' AS INTEGER), (- (0.6595987848371221)), (((0x6df4cb19, '', 1.139997115E9)) BETWEEN (('', x'', '')) AND ((NULL, NULL, NULL))), (NOT (0.6083560515592827))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((TRIM(DISTINCT 0.7490852565927241)))=(('1445759991'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1356849234 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7207483227868211 IN ('-1309807872', '1057120328')) IN ((((NULL, NULL, 0x56805a9f)) BETWEEN ((0.16709106663320628, NULL, NULL)) AND ((NULL, x'5d1f', 0.3899232307792512))), CASE WHEN x'' THEN NULL ELSE 0.24078316646908748 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2076119227 sz=-1852162646'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1757470806 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1252313367'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('280715798')>(NULL))  WHEN CASE WHEN x'' THEN 0.9647574807776913 END THEN CASE WHEN 0.023905977638419507 THEN x'' END WHEN (NOT ('Y\-Va')) THEN json_extract(1725851546, NULL) WHEN (((('l*')OR(x'')))AND(NULL)) THEN (((('664624767')OR('-1111044004')))AND(x'')) WHEN ((x'')=('b')) THEN CASE 0.876283507931745  WHEN 0.19056619218716364 THEN 9.20240876E8 WHEN 0x3461a348 THEN 0xffffffffb0c8a55f WHEN '840149780' THEN '-2002483991' END WHEN ((NULL)IS NOT(NULL)) THEN CAST('' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'5903'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=-1793792741'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-912325086 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((x'') NOT NULL), (~ (x'5ea3'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-890949972 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')-('-9223372036854775808')))>>((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x1e4d48bd, NULL, x'')) NOT BETWEEN ((NULL, '-498482157', x'98a1aa1c')) AND (('-717236495', x'0808e253', -1330881646))))+(CASE WHEN '1472064319' THEN '780644794' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1386999219 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=921792328 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1833399972' AS NUMERIC))>(((x'8e70')+(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1706657542'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2074906100'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-725295571'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8281849408433818) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.33836364078917014)>(x'3c61')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1650810269 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-929178301'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1798107959 2 -61513827 sz=1534448245 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-948194357'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1659456311'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((~ (x'')))) AND ((((x'') NOT BETWEEN (x'') AND ('x7'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=280715798'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- (1.7976931348623157E308)) THEN (NULL IN (0x14dacc55)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=252122735'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=389166275'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1921085785') NOT BETWEEN (NULL) AND ('-167501082')) THEN (-1932207699 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('-1319338425') AND ('-1999996988')))>=((((('')OR(x'')))OR(x'9150')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -2038544943 sz=-183917060 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1388987662 sz=-811344200 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=151663831 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1124926433 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1725413216 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UNICODE(NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=254351444'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=777193026 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.24078316646908748)>(x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=995503253 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1757504269'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1954254961'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1129542970 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1793458408 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))OR(CASE WHEN x'b8d7' THEN '-1545980330' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.05842345549111738)OR('589945021')))OR('-1329027745')))OR(NULL)))AND('0.8678080880888208')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1387311177 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1836800802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1836800802'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=827460214 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-656709262 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=856955644'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=409890823 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('437994883' IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=400857545'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ('1774928533' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN ('Xd') AND ('633157020'))  WHEN CASE NULL  WHEN x'022787e7' THEN '- 	l.l' END THEN ((NULL) NOT BETWEEN (0.5280923403502835) AND (0.3682208263209351)) ELSE ((('B'))<((NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.5119831574248962) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1671401964 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(NULL))) NOT BETWEEN (CASE WHEN '370063867' THEN 7.91800393E8 END) AND (((0.6531853769334562) NOTNULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1206576532 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(IFNULL(0.25281693303423325, x''), ABS(DISTINCT 0.6431681970399258)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1496367597 689741992 sz=2011380452 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-691069232 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1256225792'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '536072948'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 54811766 sz=1324830585 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1892735705 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '111519953 -645375348 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1654756665 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-2100029923 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7445258624607072) NOT BETWEEN (x'') AND (1888093913)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-146378724 4 sz=-2127888370 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1053718930 sz=1133957888 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1309807872 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(',JB1' AS BLOB), ((-522972232) NOT BETWEEN ('d]') AND (-2.50484859E8)), (x'' IN ())))>=((CASE WHEN NULL THEN x'6d78' END, LOWER(0.11350906107764913), '776784996' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) BETWEEN ((x'' IN ())) AND ((~ (0.3358090283394922)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=128319361 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('UM5K ''8R' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '882589046 sz=528981203 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1946572595 sz=1008566552'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1297413112 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -624247563 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-117177054 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1744317387 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1064451777 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1111044004'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-853836896 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (0.4253859674985855)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=461844227 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('185430832', x'', '-1299230288')) NOT BETWEEN ((CASE x'7948'  WHEN 'gv' THEN x'' END, ((0Xffffffffb834ca2d)<<('-1392137689')), (('-1999996988') NOT NULL))) AND ((TRIM(DISTINCT NULL, 500234374), (x'6c2f' IN ()), ((NULL) NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffff72a6584))<((CAST(NULL AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1305689347 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)%(NULL))  WHEN json_array(NULL, '') THEN CASE ''  WHEN '(lu' THEN '-67650372' ELSE x'' END ELSE (- (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1311715427 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(0.9336699962699727))/(CASE '-1133501427'  WHEN 0.04539673215957174 THEN 1220493292 ELSE 0.4804107314427367 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '466459324 2 sz=-1809104175 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1376558158 2082945085 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-889817530 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(DISTINCT '-72492968', x'e9d0'))AND((('-1519686288') NOT BETWEEN ('|U') AND (NULL)))))OR(((NULL) BETWEEN (0.5498211163924073) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array('0.5119831574248962', '')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Gt'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.983995361668745 THEN x'' END)OR((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0.16478134267519629  WHEN '0.3176893834848623' THEN NULL END, ((0X25bd359c)IS(NULL)), CASE WHEN NULL THEN x'' ELSE 0X3f026048 END))>((((0.08093513661637153)OR(0.07935078254847372)), (('l*')+(0Xeaf5580)), ROUND('556860283', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x28520268) ISNULL) IN (((((NULL)OR(0.6058543810767916)))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('&HsG^]Vr')AND(0X6164ea96)))AND(0.006289840209593112))))>((NULL COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-940209348 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.2733617768167851 THEN '661631795' ELSE 0.8875702345709563 END) BETWEEN (('1426743614' IN ())) AND (CASE '%Y'  WHEN 0.8681295789946215 THEN 0.6900034283568479 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1462393014)>=(0.15676293914730788))) BETWEEN (('1038209427' IN (NULL))) AND (CAST(0.9321947401787865 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=189761448 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0.280539299464033 THEN '1532135526' WHEN 0.576532144888556 THEN NULL WHEN 0.49492245425914494 THEN x'' ELSE NULL END  WHEN CAST(0.48963871348137167 AS REAL) THEN (('>+c䯘|') NOT BETWEEN (0X1516d2d6) AND (1792764404)) ELSE x'' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=301469521 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.8281849408433818 IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2023216630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1549949857'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOT BETWEEN (CAST(',	' AS TEXT)) AND (CASE x''  WHEN 0.5194803625722542 THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=661631795'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-695900243 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1789123596 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'adba')AND(0xffffffffbd792be1)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -490791426 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=661631795 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2082217505'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) NOT BETWEEN (0x2bd9b197) AND (x'f91f')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-930686612'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1535317840 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0x7fcb9887)OR(NULL)))OR(0.923456780187984)))AND(x'')))OR(x'99e5')))LIKE((('0Iߛ5v⛥6N') BETWEEN (x'09cc') AND ('sA+')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffff9ee2b78b) NOT BETWEEN (x'') AND (NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1309807872 -1904672375 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '-30807026'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=879323383'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'dce1'))) BETWEEN (((NULL)/('op'))) AND ((+ ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- ('-1329027745'))))<>(((~ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1886009565 sz=1945387921'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(('G#,pRB' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6317794984392093)OR(NULL))) BETWEEN ((((((((('182444939')OR(x'')))OR(x'5e9ebe19')))AND(-1392137689)))OR(''))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=42476012 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-138304138 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1358867527 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=25178067 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1665122933 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-61513827 427233907 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8796371498241807 IN ()))AND('' COLLATE RTRIM)))AND(CAST(0.4087064656244632 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2144049287'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1401596449'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('f '))>((x''))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1324830585'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '620077480 sz=-18826806 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=654442975'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=1836800802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1360661147 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1425970910 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=13306685 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1130507522 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=776784996 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=1534448245'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1749855622 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'342a'))>(('''XIWI	gO'))))>>(-344832859 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2079504408 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('c}<Nwzq>z') NOTNULL) IN (((NULL) IS TRUE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-769088158 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5845234855156338 COLLATE NOCASE)=(((0.5959068983230904) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1266013334 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '536072948 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1044069375 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.7294049993185249)/('')) THEN (NULL IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1970412242 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0x7a64be90)))|(CASE WHEN 'F' THEN x'' ELSE 0X4b1d76ad END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-757642429 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=566756586'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1534448245 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('GV') BETWEEN ('170051260') AND (x'f6e1')) THEN ((x'') ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'8d60' AS REAL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1289930215 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=620077480 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1534448245'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.440675853323911)/((('1292196908')|(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE (((0x4ae366db) NOT BETWEEN ('O#g耐a{') AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1917184111 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '180754123 sz=723370999'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'' THEN 'VRn' END)OR(-6.98527866E8 COLLATE RTRIM)))OR(CASE x''  WHEN 0Xffffffffc07c63a3 THEN 0xffffffffafca20b0 WHEN 'AhV!''n~' THEN 0.21606671931531996 WHEN 0.33302985969828214 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHAR('-169976466'))IS NOT(LOWER(DISTINCT 'czfꕩ8'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (1.534448245E9)))OR('-1133501427')))AND(((0.9549048429783966) NOT BETWEEN (NULL) AND (1.139997115E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((x'bf14') NOT NULL), (NULL IN (0xffffffffc69bdc9f, -1382750516))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1445759991 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'P广*'  WHEN x'' THEN ((NULL) NOT BETWEEN (NULL) AND (x'')) WHEN '-1901542950' COLLATE NOCASE THEN CAST('1060375123' AS TEXT) WHEN CAST(9.20240876E8 AS INTEGER) THEN x'' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1250796134 AS BLOB))<<((('0.7207483227868211') NOT BETWEEN (0.31858923912975834) AND ('&?')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((2082578287) BETWEEN ((((0.27855757112272417, x'', 0.2504120662942725))>((0.6877496809301814, x'', NULL)))) AND (x'4ba2')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('') IS FALSE))AND(CASE 0.3571730861092357  WHEN NULL THEN '*8' END)))OR((x'ce35' IN ()))); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2002047875'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-619846342 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1394640936 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')/(NULL)))+(((0x73f44391)|(0.5280923403502835)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('691437184')<(-1.392137689E9))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.2281303124229449) IS TRUE)  WHEN CASE NULL  WHEN '' THEN -1.111044004E9 ELSE '-1905747859' END THEN -6.98527866E8 WHEN ((0.20986173526449348)>(x'e3b11cdf')) THEN 645238101 WHEN ((x'9705')AND('')) THEN '-88553561' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1956762045'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1053718930'))>((NULL)))) NOT BETWEEN ((('^7%Hf*2')<=(NULL))) AND (CAST(-1063981314 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1436738319 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-886064799 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((NULL) NOT NULL))) AND ((CAST('Zf,dj' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2119804126 unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND (''))) NOT BETWEEN (json_array_length(NULL)) AND (((((1.534448245E9)OR(0.11308812176843897)))OR(0.47880505900119097)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.24761938065657463)>=((('2053422736') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 597236602 sz=285613046 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.49834684133055496 AS INTEGER) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1921785354 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-628171100 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.23778925255552152 COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (HEX(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1065589853 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('1260222125') AND (x''))) NOT BETWEEN ((~ (')uN)oxG'))) AND (((x'') NOT BETWEEN ('-72492968') AND (-1.039948141E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1111044004 -737062231 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.11637915702506607 COLLATE BINARY  WHEN ((0Xfffffffffa4f59a6) BETWEEN ('-800485078') AND ('349883477')) THEN CAST('1601559222' AS BLOB) WHEN CASE WHEN '' THEN '|j' WHEN 811132991 THEN '-1883704592' WHEN 4.91523439E8 THEN 0xffffffffd4060f29 ELSE '1775329482' END THEN ((x'')|(0.6913180679368305)) WHEN ((1104365273) ISNULL) THEN ((NULL) NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '280715798 sz=-61513827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.02615136219436054)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.6598899468547109)) NOT BETWEEN ((NULL)) AND (('0.9647574807776913'))))OR(1037543907 COLLATE RTRIM)))OR('f]#C' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(x'ef14' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '36622389 sz=-1434108636'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-670536232 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1716846607'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1316180105 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-522972232 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1964997830 sz=1175892917 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('o#g耐a{' AS NUMERIC)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1440667168 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1465315832 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X76088d40; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1912815706 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1839577683 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 1e500  WHEN '0.7969102226422862' THEN NULL WHEN x'' THEN NULL WHEN '*vqR' THEN x'558d' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CASE WHEN NULL THEN '-1065437005' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1324830585 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN (('')) AND (('')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-580801799 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7660106513354707, x'', x'')) NOT BETWEEN ((CAST(NULL AS TEXT), (('620077480')-('> Oc#6-')), (((((((((((('')OR(0x1f524894)))AND('-1757504269')))OR(x'cff5')))AND(1.60753291E9)))OR('蛊q8^')))OR(NULL)))) AND ((((((0.4555549659178749)OR('')))OR(-1204648676)), (((NULL)) BETWEEN ((x'')) AND ((x''))), (('968800818')OR(0.016341793660168857))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1710232895 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1361491001 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN ('1490007939') AND (NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)>=(NULL))  WHEN '''澢' COLLATE NOCASE THEN TRIM('1949913082', NULL) WHEN ('654442975' IN (x'', '')) THEN (((NULL, 0.6768879306291015, NULL)) BETWEEN ((NULL, x'', 'bO')) AND ((x'', '1811324485', x''))) WHEN (((x'', NULL, 0X49840786))!=(('280715798', 0.011838093352793733, 1.060375123E9))) THEN (NOT (NULL)) ELSE CASE 0.9569049884534014  WHEN 1565642287 THEN 363862150 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2104475599 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-738575232 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '924503077 0 sz=-1712872622 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-j')) BETWEEN ((',	')) AND (('0Iߛ5v⛥6N'))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1223562948 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2074374440'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1945387921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL)) BETWEEN (NULL) AND ((NOT (4.37994883E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1423082927 sz=185430832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=664624767 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0X6c64a207 AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1057120328' AS NUMERIC))IS NOT((((x''))<((0xffffffffa794f17d))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1174354396'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1556990887 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (-1206650424))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-575076272 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1909563091 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'8e92') NOT BETWEEN ('') AND ('3V)\rcI')))<((- (3.6386215E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1924540232 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-725295571 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=318875743 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.328054643762987) BETWEEN (0.859740891914177) AND (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))<=((1367014879))))/(0.6485902910663144 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-826833910 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2053422736 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1908976486 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('h_2)_&z') BETWEEN (x'') AND (0X1c6aab89)) COLLATE BINARY; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES ('-61513827', NULL), ('', NULL), ('1220493292', NULL), ('TRUE', 0Xfffffffff28ca49c), (0xffffffffcc41e9f4, 0.27092471494895054); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (1281874785, '0.11350906107764913'), ('254351444', x'8872'), (0.46887957528747193, 0xffffffffeb805955); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.8215518965760444); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.47414108499723195, '-1333296308'), (NULL, 0.5003750991104925), (0.5152126511308214, x'ef57'); -- 0ms;
CREATE TABLE t0 (c0 BLOB ); -- 0ms;
ANALYZE; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE t0 SET (c0, c0)=(NULL, x'c2d6'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i63 ON t0((((c0 IN (c0, c0, c0)))<((c0 IN (c0, c0)))) COLLATE BINARY DESC); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, prefix = 311); -- 5ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES ('-72492968', '762062833'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL), (NULL), (NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.7150550900509196, c0=0xffffffffff3329e8, c0=0.5878623293130445 WHERE (~ (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', NULL, 906850726); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c1=x''; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (x'', '/1J V''', 0.7866564503777635), ('1836800802', '-2119804126', 0.7502954521854565), ('2053422736', 0.7977578924082641, x''); -- 0ms;
CREATE INDEX IF NOT EXISTS i73 ON t0(CAST(CASE WHEN c0 THEN c0 END AS NUMERIC) COLLATE RTRIM ASC) WHERE ((((((c0)-(c0)))OR(c0)))AND(((c0) ISNULL))); -- 0ms;
ANALYZE; -- 6ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (0x9ff5b2d, -1638990014); -- 0ms;
UPDATE t0 SET c0=x'', c0=x'f2e7'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('2135048281'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.6595987848371221 WHERE (((((NOT (t0.c0)))AND(((t0.c0)>>(t0.c0)))))AND(((t0.c0)>(t0.c0)))); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('-873854956'), (0.539072265176307); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (''); -- 8ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c45; -- 7ms;
INSERT INTO vt0(vt0) VALUES('merge=-1096405616,11');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c45 TO c13; -- 1ms;
END TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('''澢'); -- 0ms;
VACUUM; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'401c', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2) VALUES (0.7454409494113178, NULL); -- 1ms;
REINDEX RTRIM; -- 0ms;
END; -- 1ms;
UPDATE OR ABORT vt0 SET c0='-7623058' WHERE (NOT (vt0.c1)) COLLATE RTRIM; -- 1ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ANALYZE; -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''), ('1768719948'), (0.783766417153615); -- 7ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '734476365 -873854956 noskipscan'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''), (0.8062350962904248), (0.7105639000140838); -- 1ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('[GjYy⺸䃟_ॴ'), (NULL), ('1769783759'); -- 0ms;
UPDATE OR IGNORE t0 SET c13=x'54cc', c13=x'7f18' WHERE ((CASE WHEN 0.963002800592227 THEN 0.16945873196181704 END) NOTNULL); -- 7ms;
ALTER TABLE t0 RENAME COLUMN c13 TO c82; -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.7870329394602525); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (x'2374', ']6', '-250484859'); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 5ms;
INSERT OR IGNORE INTO t1(c82) VALUES (x''), (x'2c93a70a'), (963214958); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES ('1666535589'), (0x276fb333), ('x颇w_{<'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (NULL, 0.8933767320914441), (x'', NULL), (0.5206375860867243, NULL); -- 1ms;
INSERT OR FAIL INTO rt0(c1) VALUES (0.9324222142609003), (NULL), (0.14424480622217994); -- 1ms;
INSERT OR IGNORE INTO t1(c82) VALUES (0.06469382763299991); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, '', 392807460), (363862150, x'fd3e', '0.8553325961025462'), (NULL, 0.7018787506639294, NULL); -- 0ms;
ANALYZE rt0; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c82 TO c2; -- 8ms;
UPDATE vt0 SET c0=x'' WHERE (~ (CASE x''  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)); -- 20ms;
INSERT OR ROLLBACK INTO t0(c2) VALUES (0.5887850088642003); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (-1744317387, x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1260222125), ((((- (0.5008310090754378))) NOT BETWEEN (NULL COLLATE BINARY) AND (((0.8459041836913167) BETWEEN (0.31639815907390234) AND (''))))), (0.5119831574248962); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)==(vt0.c1))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)==(vt0.c1))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN CAST(t0.c2 AS NUMERIC) THEN (- (rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)=(vt0.c1))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE ((NOT (CASE rt0.c2 COLLATE NOCASE  WHEN CAST(t0.c2 AS NUMERIC) THEN (- (rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)=(vt0.c1))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((CASE rt0.c2 COLLATE NOCASE  WHEN CAST(t0.c2 AS NUMERIC) THEN (- (rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)==(vt0.c1))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, rt0, vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((~ (rt0.c0))) ISNULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT t0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2;
SELECT t0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL t0.c2, rt0.c2 FROM rt0 NOT INDEXED, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL t0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT t0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2;
SELECT t0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL t0.c2, rt0.c2 FROM rt0 NOT INDEXED, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL t0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT t0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((- (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0)<(rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)<(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c0)<(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 NATURAL JOIN rt0 WHERE (((t0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((NOT (((t0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 NATURAL JOIN rt0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 NATURAL JOIN rt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) WHERE (NULL) GROUP BY rt0.c2, vt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) WHERE ((NOT (NULL))) GROUP BY rt0.c2, vt0.c1, rt0.c0 UNION SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING 1632031453 COLLATE RTRIM UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (1632031453 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2 HAVING ((1632031453 COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING 1632031453 COLLATE RTRIM UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (1632031453 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2 HAVING ((1632031453 COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt0 INDEXED BY i73;
SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((vt0.c0)>(vt0.c1))) AND (((t0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((vt0.c0)>(vt0.c1))) AND (((t0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((vt0.c0)>(vt0.c1))) AND (((t0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0;
SELECT ALL t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0 GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (((t0.c2) NOT NULL) COLLATE BINARY COLLATE BINARY) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE ((NOT (((t0.c2) NOT NULL) COLLATE BINARY COLLATE BINARY))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (((((t0.c2) NOT NULL) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON vt0.c0 GROUP BY t0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, t0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) GROUP BY rt0.c1, rt0.c0, t0.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING COUNT(TOTAL(AVG(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING (NOT (COUNT(TOTAL(AVG(SUM(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING ((COUNT(TOTAL(AVG(SUM(rt0.c2))))) ISNULL);
SELECT vt0.c1, t0.c2, vt0.c0, rt0.c1 FROM t0, rt0 LEFT OUTER JOIN vt0 ON json_quote(CASE rt0.c0  WHEN rt0.c0 THEN 0x455533f7 ELSE vt0.c0 END);
SELECT ALL vt0.c1, t0.c2, vt0.c0, rt0.c1 FROM t0, rt0 LEFT OUTER JOIN vt0 ON json_quote(CASE rt0.c0  WHEN rt0.c0 THEN 0X455533f7 ELSE vt0.c0 END) WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))AND(LOWER(DISTINCT rt0.c1))))AND(CAST(t0.c2 AS INTEGER)))) UNION ALL SELECT vt0.c1, t0.c2, vt0.c0, rt0.c1 FROM t0, rt0 LEFT OUTER JOIN vt0 ON json_quote(CASE rt0.c0  WHEN rt0.c0 THEN 0X455533f7 ELSE vt0.c0 END) WHERE ((NOT (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))AND(LOWER(DISTINCT rt0.c1))))AND(CAST(t0.c2 AS INTEGER)))))) UNION ALL SELECT ALL vt0.c1, t0.c2, vt0.c0, rt0.c1 FROM t0, rt0 LEFT OUTER JOIN vt0 ON json_quote(CASE rt0.c0  WHEN rt0.c0 THEN 0x455533f7 ELSE vt0.c0 END) WHERE (((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))AND(LOWER(DISTINCT rt0.c1))))AND(CAST(t0.c2 AS INTEGER)))) ISNULL));
SELECT vt0.c1, t0.c2, vt0.c0, rt0.c1 FROM t0, rt0 LEFT OUTER JOIN vt0 ON json_quote(CASE rt0.c0  WHEN rt0.c0 THEN 0x455533f7 ELSE vt0.c0 END);
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (491523439) UNION SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (491523439))) UNION SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((491523439) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)>=(vt0.c0))  WHEN UPPER(DISTINCT NULL) THEN ((vt0.c1)AND(vt0.c0)) END) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)>=(vt0.c0))  WHEN UPPER(DISTINCT NULL) THEN ((vt0.c1)AND(vt0.c0)) END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)>=(vt0.c0))  WHEN UPPER(DISTINCT NULL) THEN ((vt0.c1)AND(vt0.c0)) END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX(MAX(TOTAL(SUM('528981203')))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX(MAX(TOTAL(SUM('528981203')))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(MAX(TOTAL(SUM('528981203'))))) ISNULL);
SELECT ALL SUM(TYPEOF(DISTINCT rt0.c2)) FROM rt0;
SELECT vt0.c1, vt0.c0 FROM t0, vt0;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (0Xffffffffbf6549c8) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (0xffffffffbf6549c8))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((0xffffffffbf6549c8) ISNULL));
SELECT vt0.c1, vt0.c0 FROM t0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1 FROM t0, rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1 FROM t0, rt0, vt0 WHERE ((((((rt0.c1 IN ()))OR(((vt0.c1)<>(rt0.c2)))))OR(LTRIM(vt0.c1)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1 FROM t0, rt0, vt0 WHERE ((NOT ((((((rt0.c1 IN ()))OR(((vt0.c1)!=(rt0.c2)))))OR(LTRIM(vt0.c1)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1 FROM t0, rt0, vt0 WHERE ((((((((rt0.c1 IN ()))OR(((vt0.c1)!=(rt0.c2)))))OR(LTRIM(vt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1 FROM t0, rt0, vt0;
SELECT rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0 NOT INDEXED, t0, rt0 GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0, t0, rt0 WHERE ((((((('-1264833757')>>(rt0.c2)))OR(CAST(vt0.c1 AS BLOB))))AND(CHAR(rt0.c1, rt0.c2, rt0.c0)))) GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0, t0, rt0 WHERE ((NOT ((((((('-1264833757')>>(rt0.c2)))OR(CAST(vt0.c1 AS BLOB))))AND(CHAR(rt0.c1, rt0.c2, rt0.c0)))))) GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0, t0, rt0 WHERE ((((((((('-1264833757')>>(rt0.c2)))OR(CAST(vt0.c1 AS BLOB))))AND(CHAR(rt0.c1, rt0.c2, rt0.c0)))) ISNULL)) GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0 NOT INDEXED, t0, rt0 GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 HAVING MIN(CAST(vt0.c0 AS BLOB)) UNION ALL SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 HAVING (NOT (MIN(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 HAVING ((MIN(CAST(vt0.c0 AS BLOB))) ISNULL);
SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 HAVING MIN(CAST(vt0.c0 AS BLOB)) UNION ALL SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 HAVING (NOT (MIN(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 HAVING ((MIN(CAST(vt0.c0 AS BLOB))) ISNULL);
SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) NOT BETWEEN ('-30807026') AND (rt0.c0)))) RIGHT OUTER JOIN vt0 ON '122143023' GROUP BY rt0.c0, rt0.c1, t0.c2, rt0.c2, vt0.c0;
SELECT ALL * FROM t0, vt0, rt0;
SELECT * FROM t0, vt0, rt0 WHERE (x'') UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1;
SELECT t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c0))) AS NUMERIC)) GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1 UNION SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE ((NOT (CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c0))) AS NUMERIC)))) GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1 UNION SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE (((CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c0))) AS NUMERIC)) ISNULL)) GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1;
SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1;
SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING (((-9.5463002E7))==((INSTR(vt0.c1, MAX(t0.c2))))) UNION ALL SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING (NOT ((((-9.5463002E7))=((INSTR(vt0.c1, MAX(t0.c2))))))) UNION ALL SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING (((((-9.5463002E7))=((INSTR(vt0.c1, MAX(t0.c2)))))) ISNULL);
SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING (((-9.5463002E7))==((INSTR(vt0.c1, MAX(t0.c2))))) UNION ALL SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING (NOT ((((-9.5463002E7))=((INSTR(vt0.c1, MAX(t0.c2))))))) UNION ALL SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING (((((-9.5463002E7))=((INSTR(vt0.c1, MAX(t0.c2)))))) ISNULL);
SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0, t0;
SELECT ALL vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE (rt0.c2) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE (((rt0.c2) ISNULL));
SELECT vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING x'3fab' UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (x'3fab')) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((x'3fab') ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING x'3fab' UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (x'3fab')) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((x'3fab') ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c0 FROM vt0, t0, rt0;
SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c0 FROM vt0, t0, rt0 WHERE ((((x'')) NOT BETWEEN ((((vt0.c0)<(t0.c2)))) AND ((rt0.c2)))) UNION ALL SELECT t0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c0 FROM vt0, t0, rt0 WHERE ((NOT ((((x'')) NOT BETWEEN ((((vt0.c0)<(t0.c2)))) AND ((rt0.c2)))))) UNION ALL SELECT t0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c0 FROM vt0, t0, rt0 WHERE ((((((x'')) NOT BETWEEN ((((vt0.c0)<(t0.c2)))) AND ((rt0.c2)))) ISNULL));
SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c0 FROM vt0, t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOT NULL))*(((0.05969602976775157) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL))*(((0.05969602976775157) NOTNULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) NOT NULL))*(((0.05969602976775157) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0, vt0 WHERE (vt0.c0) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c1;
SELECT vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1;
SELECT ALL vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1;
SELECT ALL vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c2, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1;
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(rt0.c0)))OR((- (rt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (((((CAST(vt0.c1 AS BLOB))AND(rt0.c0)))OR((- (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((((CAST(vt0.c1 AS BLOB))AND(rt0.c0)))OR((- (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT rt0.c1, vt0.c1, vt0.c0, rt0.c0, t0.c2, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((LIKELY(DISTINCT t0.c2))>(((((vt0.c1)AND(0.5074964267172457)))OR(t0.c2)))) RIGHT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM)%((((rt0.c0, '', vt0.c1))=((vt0.c1, rt0.c1, vt0.c1))))) GROUP BY rt0.c1, vt0.c1, vt0.c0, rt0.c0, t0.c2, rt0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX(TOTAL(t0.c2)) COLLATE RTRIM UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX(TOTAL(t0.c2)) COLLATE RTRIM)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(TOTAL(t0.c2)) COLLATE RTRIM) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) AND ((NOT (vt0.c1))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) AND ((NOT (vt0.c1))))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) AND ((NOT (vt0.c1))))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((LIKE(vt0.c1, rt0.c0))|(((rt0.c2)IS NOT(rt0.c2))));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((LIKE(vt0.c1, rt0.c0))|(((rt0.c2)IS NOT(rt0.c2)))) WHERE (json(CASE WHEN -336561296 THEN rt0.c2 END)) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((LIKE(vt0.c1, rt0.c0))|(((rt0.c2)IS NOT(rt0.c2)))) WHERE ((NOT (json(CASE WHEN -336561296 THEN rt0.c2 END)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((LIKE(vt0.c1, rt0.c0))|(((rt0.c2)IS NOT(rt0.c2)))) WHERE (((json(CASE WHEN -336561296 THEN rt0.c2 END)) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((LIKE(vt0.c1, rt0.c0))|(((rt0.c2)IS NOT(rt0.c2))));
SELECT t0.c2, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c1)OR(t0.c2)))OR(rt0.c0)) COLLATE BINARY GROUP BY t0.c2, rt0.c2;
SELECT t0.c2, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c1)OR(t0.c2)))OR(rt0.c0)) COLLATE BINARY WHERE (((CAST(t0.c2 AS TEXT))>>(0.11809457729810868))) GROUP BY t0.c2, rt0.c2 UNION SELECT ALL t0.c2, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c1)OR(t0.c2)))OR(rt0.c0)) COLLATE BINARY WHERE ((NOT (((CAST(t0.c2 AS TEXT))>>(0.11809457729810868))))) GROUP BY t0.c2, rt0.c2 UNION SELECT t0.c2, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c1)OR(t0.c2)))OR(rt0.c0)) COLLATE BINARY WHERE (((((CAST(t0.c2 AS TEXT))>>(0.11809457729810868))) ISNULL)) GROUP BY t0.c2, rt0.c2;
SELECT t0.c2, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c1)OR(t0.c2)))OR(rt0.c0)) COLLATE BINARY GROUP BY t0.c2, rt0.c2;
SELECT vt0.c1, t0.c2, vt0.c0 FROM t0, vt0 INDEXED BY i63 GROUP BY vt0.c1, t0.c2, vt0.c0;
SELECT vt0.c1 FROM rt0, vt0, t0;
SELECT vt0.c1 FROM rt0, vt0, t0 WHERE ((((vt0.c0 IN (t0.c2))) BETWEEN (x'') AND ((NOT (vt0.c1))))) UNION ALL SELECT vt0.c1 FROM rt0, vt0, t0 WHERE ((NOT ((((vt0.c0 IN (t0.c2))) BETWEEN (x'') AND ((NOT (vt0.c1))))))) UNION ALL SELECT vt0.c1 FROM rt0, vt0, t0 WHERE ((((((vt0.c0 IN (t0.c2))) BETWEEN (x'') AND ((NOT (vt0.c1))))) ISNULL));
SELECT vt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(((((t0.c2)AND(t0.c2)))AND(t0.c2)) AS BLOB)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(((((t0.c2)AND(t0.c2)))AND(t0.c2)) AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(((((t0.c2)AND(t0.c2)))AND(t0.c2)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (NULL) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (NULL))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING '4w' UNION ALL SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING (NOT ('4w')) UNION ALL SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 NOT INDEXED GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING (('4w') ISNULL);
SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING '4w' UNION ALL SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING (NOT ('4w')) UNION ALL SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 NOT INDEXED GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING (('4w') ISNULL);
SELECT ALL t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL rt0.c1 FROM t0, rt0;
SELECT rt0.c1 FROM t0, rt0 WHERE ((NOT (((0Xffffffffa05463c6) BETWEEN (t0.c2) AND (rt0.c0))))) UNION ALL SELECT rt0.c1 FROM t0, rt0 WHERE ((NOT ((NOT (((0xffffffffa05463c6) BETWEEN (t0.c2) AND (rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM t0, rt0 WHERE ((((NOT (((0Xffffffffa05463c6) BETWEEN (t0.c2) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) ISNULL);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) ISNULL) WHERE ((TRIM(0.37335050007319515) IN ())) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) ISNULL) WHERE ((NOT ((TRIM(0.37335050007319515) IN ())))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) ISNULL) WHERE ((((TRIM(0.37335050007319515) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) ISNULL);
SELECT t0.c2, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT t0.c2, vt0.c1, vt0.c0 FROM t0, vt0 WHERE (CAST(t0.c2 AS REAL)) GROUP BY t0.c2, vt0.c1, vt0.c0 UNION SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (CAST(t0.c2 AS REAL)))) GROUP BY t0.c2, vt0.c1, vt0.c0 UNION SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((CAST(t0.c2 AS REAL)) ISNULL)) GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT t0.c2, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING t0.c2 UNION ALL SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING (NOT (t0.c2)) UNION ALL SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING ((t0.c2) ISNULL);
SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING t0.c2 UNION ALL SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING (NOT (t0.c2)) UNION ALL SELECT t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0 HAVING ((t0.c2) ISNULL);
SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) ELSE (~ (rt0.c0)) END;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) ELSE (~ (rt0.c0)) END WHERE (CASE WHEN rt0.c1 THEN rt0.c2 WHEN (vt0.c1 IN ()) THEN rt0.c1 WHEN UNLIKELY(vt0.c1) THEN NULLIF(vt0.c0, rt0.c0) WHEN rt0.c1 THEN TRIM(DISTINCT vt0.c1, rt0.c2) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) ELSE (~ (rt0.c0)) END WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c2 WHEN (vt0.c1 IN ()) THEN rt0.c1 WHEN UNLIKELY(vt0.c1) THEN NULLIF(vt0.c0, rt0.c0) WHEN rt0.c1 THEN TRIM(DISTINCT vt0.c1, rt0.c2) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)) END))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) ELSE (~ (rt0.c0)) END WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN (vt0.c1 IN ()) THEN rt0.c1 WHEN UNLIKELY(vt0.c1) THEN NULLIF(vt0.c0, rt0.c0) WHEN rt0.c1 THEN TRIM(DISTINCT vt0.c1, rt0.c2) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) ELSE (~ (rt0.c0)) END;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, t0 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, t0 WHERE ((NOT (((vt0.c1) ISNULL) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, t0 WHERE (((((vt0.c1) ISNULL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c2, vt0.c0, rt0.c0;
SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM rt0, t0 GROUP BY t0.c2 HAVING AVG(TOTAL(rt0.c0)) UNION ALL SELECT t0.c2 FROM rt0, t0 GROUP BY t0.c2 HAVING (NOT (AVG(TOTAL(rt0.c0)))) UNION ALL SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2 HAVING ((AVG(TOTAL(rt0.c0))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE (TRIM(((t0.c2)<=(t0.c2)))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (TRIM(((t0.c2)<=(t0.c2)))))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((TRIM(((t0.c2)<=(t0.c2)))) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT vt0.c1 FROM t0, vt0, rt0;
SELECT DISTINCT vt0.c1 FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c0)-(rt0.c0)) THEN rt0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT vt0.c1 FROM t0, vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0)-(rt0.c0)) THEN rt0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT vt0.c1 FROM t0, vt0, rt0 WHERE (((CASE WHEN ((rt0.c0)-(rt0.c0)) THEN rt0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT vt0.c1 FROM t0, vt0, rt0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (((((t0.c2)LIKE(t0.c2)))*((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2)))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (((((t0.c2)LIKE(t0.c2)))*((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2)))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((((((t0.c2)LIKE(t0.c2)))*((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2)))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.c1;
SELECT t0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.c1 HAVING AVG(SUM(rt0.c1)) UNION ALL SELECT ALL t0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.c1 HAVING (NOT (AVG(SUM(rt0.c1)))) UNION ALL SELECT ALL t0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.c1 HAVING ((AVG(SUM(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0, t0, vt0;
SELECT * FROM rt0, t0, vt0 WHERE (CAST(rt0.c0 AS NUMERIC)) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c0)IS(vt0.c1)))LIKE(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)IS(vt0.c1)))LIKE(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c0)IS(vt0.c1)))LIKE(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, vt0.c1, t0.c2, rt0.c2 FROM vt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt0 ON (((NOT (t0.c2)))<<(((t0.c2) NOTNULL))) GROUP BY rt0.c1, rt0.c0, vt0.c1, t0.c2, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, t0.c2, rt0.c2 FROM vt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt0 ON (((NOT (t0.c2)))<<(((t0.c2) NOTNULL))) WHERE (((load_extension(rt0.c2)) IS TRUE)) GROUP BY rt0.c1, rt0.c0, vt0.c1, t0.c2, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c1, t0.c2, rt0.c2 FROM vt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt0 ON (((NOT (t0.c2)))<<(((t0.c2) NOTNULL))) WHERE ((NOT (((load_extension(rt0.c2)) IS TRUE)))) GROUP BY rt0.c1, rt0.c0, vt0.c1, t0.c2, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c1, t0.c2, rt0.c2 FROM vt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt0 ON (((NOT (t0.c2)))<<(((t0.c2) NOTNULL))) WHERE (((((load_extension(rt0.c2)) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c1, t0.c2, rt0.c2;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL TOTAL(x'') FROM t0, rt0, vt0 ORDER BY vt0.c1  NULLS LAST, ((((vt0.c1)/(rt0.c0)))+(HEX(rt0.c0))) DESC  NULLS FIRST, (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((-1.491925158E9))))AND(vt0.c1 COLLATE RTRIM)))AND(((vt0.c1)OR(t0.c2)))))AND(json_insert(x'', t0.c2, NULL))))AND(((t0.c2) IS FALSE))) ASC;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1)GLOB(vt0.c0)) IN ())) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1)GLOB(vt0.c0)) IN ())))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c0)) IN ())) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (2.54351444E8) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (2.54351444E8))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((2.54351444E8) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))OR((+ (rt0.c0)))))OR(((rt0.c1)>(rt0.c1))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((CAST(rt0.c2 AS REAL))OR((+ (rt0.c0)))))OR(((rt0.c1)>(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((CAST(rt0.c2 AS REAL))OR((+ (rt0.c0)))))OR(((rt0.c1)>(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, t0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON ((((UNLIKELY(DISTINCT vt0.c0))OR((- (vt0.c1)))))OR(TRIM(vt0.c1, rt0.c1))) CROSS JOIN t0 ON CAST('' AS NUMERIC) COLLATE RTRIM GROUP BY vt0.c0, rt0.c2, t0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, t0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON ((((UNLIKELY(DISTINCT vt0.c0))OR((- (vt0.c1)))))OR(TRIM(vt0.c1, rt0.c1))) CROSS JOIN t0 ON CAST('' AS NUMERIC) COLLATE RTRIM GROUP BY vt0.c0, rt0.c2, t0.c2, rt0.c0 HAVING ((((((vt0.c0)&(vt0.c1)))OR(x'' COLLATE NOCASE)))OR(MAX(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c2, t0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON ((((UNLIKELY(DISTINCT vt0.c0))OR((- (vt0.c1)))))OR(TRIM(vt0.c1, rt0.c1))) CROSS JOIN t0 ON CAST('' AS NUMERIC) COLLATE RTRIM GROUP BY vt0.c0, rt0.c2, t0.c2, rt0.c0 HAVING (NOT (((((((vt0.c0)&(vt0.c1)))OR(x'' COLLATE NOCASE)))OR(MAX(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.c0, rt0.c2, t0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON ((((UNLIKELY(DISTINCT vt0.c0))OR((- (vt0.c1)))))OR(TRIM(vt0.c1, rt0.c1))) CROSS JOIN t0 ON CAST('' AS NUMERIC) COLLATE RTRIM GROUP BY vt0.c0, rt0.c2, t0.c2, rt0.c0 HAVING ((((((((vt0.c0)&(vt0.c1)))OR(x'' COLLATE NOCASE)))OR(MAX(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0 WHERE ((((((((rt0.c0, x'', t0.c2))<((rt0.c2, vt0.c0, t0.c2))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((((vt0.c0)OR(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0 WHERE ((NOT ((((((((rt0.c0, x'', t0.c2))<((rt0.c2, vt0.c0, t0.c2))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((((vt0.c0)OR(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0 WHERE ((((((((((rt0.c0, x'', t0.c2))<((rt0.c2, vt0.c0, t0.c2))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((((vt0.c0)OR(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0;
SELECT DISTINCT t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON ROUND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2)), vt0.c1);
SELECT DISTINCT t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON ROUND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2)), vt0.c1) WHERE (((t0.c2) ISNULL)) UNION SELECT DISTINCT t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON ROUND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2)), vt0.c1) WHERE ((NOT (((t0.c2) ISNULL)))) UNION SELECT DISTINCT t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON ROUND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2)), vt0.c1) WHERE (((((t0.c2) ISNULL)) ISNULL));
SELECT DISTINCT t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON ROUND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2)), vt0.c1);
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, t0, rt0 WHERE ((rt0.c1 IN ())) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, t0, rt0 WHERE ((NOT ((rt0.c1 IN ())))) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, t0, rt0 WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING CASE WHEN ((TOTAL(t0.c2))==(1836800802)) THEN MAX(t0.c2) WHEN GROUP_CONCAT(GROUP_CONCAT(t0.c2)) THEN TOTAL(t0.c2) WHEN (t0.c2 IN (COUNT(SUM(SUM(0.3981466185345952))))) THEN (NOT (TOTAL(TOTAL(t0.c2)))) ELSE MAX(GROUP_CONCAT(t0.c2)) END UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (CASE WHEN ((TOTAL(t0.c2))==(1836800802)) THEN MAX(t0.c2) WHEN GROUP_CONCAT(GROUP_CONCAT(t0.c2)) THEN TOTAL(t0.c2) WHEN (t0.c2 IN (COUNT(SUM(SUM(0.3981466185345952))))) THEN (NOT (TOTAL(TOTAL(t0.c2)))) ELSE MAX(GROUP_CONCAT(t0.c2)) END)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((CASE WHEN ((TOTAL(t0.c2))=(1836800802)) THEN MAX(t0.c2) WHEN GROUP_CONCAT(GROUP_CONCAT(t0.c2)) THEN TOTAL(t0.c2) WHEN (t0.c2 IN (COUNT(SUM(SUM(0.3981466185345952))))) THEN (NOT (TOTAL(TOTAL(t0.c2)))) ELSE MAX(GROUP_CONCAT(t0.c2)) END) ISNULL);
SELECT ALL * FROM t0, vt0, rt0;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((('')LIKE(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((NOT ((('')LIKE(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((((('')LIKE(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ISNULL));
SELECT ALL * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c2)*(t0.c2)))<=(t0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c2)*(t0.c2)))<=(t0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c2)*(t0.c2)))<=(t0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c2)AND(NULL)))AND('bO')))OR(((rt0.c2)AND(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(NULL)))AND('bO')))OR(((rt0.c2)AND(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)AND(NULL)))AND('bO')))OR(((rt0.c2)AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((((~ (rt0.c2)))*(QUOTE(t0.c2)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((((~ (rt0.c2)))*(QUOTE(t0.c2)))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((((~ (rt0.c2)))*(QUOTE(t0.c2)))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((rt0.c0 COLLATE BINARY)+((((rt0.c1, rt0.c0, '1141607730'))>((rt0.c2, rt0.c2, t0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)+((((rt0.c1, rt0.c0, '1141607730'))>((rt0.c2, rt0.c2, t0.c2)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c0 COLLATE BINARY)+((((rt0.c1, rt0.c0, '1141607730'))>((rt0.c2, rt0.c2, t0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2;
SELECT vt0.c1, rt0.c1, t0.c2 FROM t0, vt0, rt0 WHERE (((- (rt0.c2)) IN ())) GROUP BY vt0.c1, rt0.c1, t0.c2 UNION SELECT vt0.c1, rt0.c1, t0.c2 FROM t0, vt0, rt0 WHERE ((NOT (((- (rt0.c2)) IN ())))) GROUP BY vt0.c1, rt0.c1, t0.c2 UNION SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM t0, vt0, rt0 WHERE (((((- (rt0.c2)) IN ())) ISNULL)) GROUP BY vt0.c1, rt0.c1, t0.c2;
SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN 'F#c' THEN TOTAL(MAX(MIN(rt0.c2))) END)OR(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((CASE WHEN 'F#c' THEN TOTAL(MAX(MIN(rt0.c2))) END)OR(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((CASE WHEN 'F#c' THEN TOTAL(MAX(MIN(rt0.c2))) END)OR(COUNT(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, t0, vt0;
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))) THEN rt0.c2 COLLATE BINARY WHEN vt0.c0 THEN (((rt0.c2, vt0.c0, rt0.c0))<((rt0.c1, vt0.c0, rt0.c2))) WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c1)) THEN (- (vt0.c1)) ELSE CAST(vt0.c0 AS BLOB) END) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE ((NOT (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))) THEN rt0.c2 COLLATE BINARY WHEN vt0.c0 THEN (((rt0.c2, vt0.c0, rt0.c0))<((rt0.c1, vt0.c0, rt0.c2))) WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c1)) THEN (- (vt0.c1)) ELSE CAST(vt0.c0 AS BLOB) END))) UNION ALL SELECT ALL * FROM rt0, t0, vt0 WHERE (((CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))) THEN rt0.c2 COLLATE BINARY WHEN vt0.c0 THEN (((rt0.c2, vt0.c0, rt0.c0))<((rt0.c1, vt0.c0, rt0.c2))) WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c1)) THEN (- (vt0.c1)) ELSE CAST(vt0.c0 AS BLOB) END) ISNULL));
SELECT ALL * FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((1634003606 COLLATE NOCASE)/((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((1634003606 COLLATE NOCASE)/((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((1634003606 COLLATE NOCASE)/((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c2, vt0.c1, vt0.c1, rt0.c2, 0X43345bf6)) NOT BETWEEN ((0xffffffffb0c8a55f, '矄Ftg', vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c1)))) NOT NULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c2, vt0.c1, vt0.c1, rt0.c2, 0x43345bf6)) NOT BETWEEN ((0xffffffffb0c8a55f, '矄Ftg', vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c1)))) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((((((((rt0.c2, vt0.c1, vt0.c1, rt0.c2, 0x43345bf6)) NOT BETWEEN ((0xffffffffb0c8a55f, '矄Ftg', vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c1)))) NOT NULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT vt0.c0, rt0.c2, t0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c2, t0.c2;
SELECT ALL vt0.c0, rt0.c2, t0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c2, t0.c2 HAVING MAX(AVG(MIN(MAX(rt0.c2)))) UNION ALL SELECT vt0.c0, rt0.c2, t0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c2, t0.c2 HAVING (NOT (MAX(AVG(MIN(MAX(rt0.c2)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, t0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c2, t0.c2 HAVING ((MAX(AVG(MIN(MAX(rt0.c2))))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((- (rt0.c1)) IN ())) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((- (rt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((- (rt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c2)))IS(rt0.c2 COLLATE NOCASE)) CROSS JOIN rt0 ON CAST((rt0.c2 IN ()) AS TEXT);
SELECT t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)%(t0.c2)))GLOB(UPPER(vt0.c0))) GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)%(t0.c2)))GLOB(UPPER(vt0.c0))) WHERE (((((t0.c2) NOTNULL)) IS FALSE)) GROUP BY t0.c2, vt0.c0 UNION SELECT t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)%(t0.c2)))GLOB(UPPER(vt0.c0))) WHERE ((NOT (((((t0.c2) NOTNULL)) IS FALSE)))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)%(t0.c2)))GLOB(UPPER(vt0.c0))) WHERE (((((((t0.c2) NOTNULL)) IS FALSE)) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)%(t0.c2)))GLOB(UPPER(vt0.c0))) GROUP BY t0.c2, vt0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOTNULL)) NOT BETWEEN (((t0.c2)<(t0.c2))) AND ((t0.c2 IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c2) NOTNULL)) NOT BETWEEN (((t0.c2)<(t0.c2))) AND ((t0.c2 IN ())))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c2) NOTNULL)) NOT BETWEEN (((t0.c2)<(t0.c2))) AND ((t0.c2 IN ())))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((0.8636418771503727)OR(rt0.c0)))OR(rt0.c2))) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE NULL  WHEN rt0.c1 THEN NULL END));
SELECT DISTINCT rt0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((0.8636418771503727)OR(rt0.c0)))OR(rt0.c2))) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE NULL  WHEN rt0.c1 THEN NULL END)) WHERE ('') UNION SELECT DISTINCT rt0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((0.8636418771503727)OR(rt0.c0)))OR(rt0.c2))) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE NULL  WHEN rt0.c1 THEN NULL END)) WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((0.8636418771503727)OR(rt0.c0)))OR(rt0.c2))) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE NULL  WHEN rt0.c1 THEN NULL END)) WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((0.8636418771503727)OR(rt0.c0)))OR(rt0.c2))) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE NULL  WHEN rt0.c1 THEN NULL END));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(x'' AS BLOB)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(x'' AS BLOB)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM t0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2;
SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2 HAVING CAST(vt0.c1 AS NUMERIC) UNION ALL SELECT rt0.c2, rt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2 HAVING (NOT (CAST(vt0.c1 AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2 HAVING ((CAST(vt0.c1 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM t0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2;
SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2 HAVING CAST(vt0.c1 AS NUMERIC) UNION ALL SELECT rt0.c2, rt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2 HAVING (NOT (CAST(vt0.c1 AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2 HAVING ((CAST(vt0.c1 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM t0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c2, rt0.c0, t0.c2;
SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (CAST('1337401734' AS BLOB)));
SELECT ALL vt0.c0 FROM rt0 INNER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (CAST('1337401734' AS BLOB))) WHERE (((((((((((rt0.c2) NOTNULL))OR((((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))))AND(vt0.c0)))OR(((rt0.c2)AND(NULL)))))OR(CHANGES()))) UNION ALL SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (CAST('1337401734' AS BLOB))) WHERE ((NOT (((((((((((rt0.c2) NOTNULL))OR((((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))))AND(vt0.c0)))OR(((rt0.c2)AND(NULL)))))OR(CHANGES()))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 INNER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (CAST('1337401734' AS BLOB))) WHERE (((((((((((((rt0.c2) NOTNULL))OR((((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))))AND(vt0.c0)))OR(((rt0.c2)AND(NULL)))))OR(CHANGES()))) ISNULL));
SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) AND (CAST('1337401734' AS BLOB)));
SELECT DISTINCT vt0.c1, t0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c0) BETWEEN ((((vt0.c1, t0.c2, t0.c2))>((vt0.c1, t0.c2, '')))) AND ((((vt0.c1))>=(('-1870428569')))));
SELECT DISTINCT vt0.c1, t0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c0) BETWEEN ((((vt0.c1, t0.c2, t0.c2))>((vt0.c1, t0.c2, '')))) AND ((((vt0.c1))>=(('-1870428569'))))) WHERE (CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN TRIM(t0.c2, t0.c2) THEN x'8142' END) UNION SELECT DISTINCT vt0.c1, t0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c0) BETWEEN ((((vt0.c1, t0.c2, t0.c2))>((vt0.c1, t0.c2, '')))) AND ((((vt0.c1))>=(('-1870428569'))))) WHERE ((NOT (CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN TRIM(t0.c2, t0.c2) THEN x'8142' END))) UNION SELECT DISTINCT vt0.c1, t0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c0) BETWEEN ((((vt0.c1, t0.c2, t0.c2))>((vt0.c1, t0.c2, '')))) AND ((((vt0.c1))>=(('-1870428569'))))) WHERE (((CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN TRIM(t0.c2, t0.c2) THEN x'8142' END) ISNULL));
SELECT DISTINCT vt0.c1, t0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c0) BETWEEN ((((vt0.c1, t0.c2, t0.c2))>((vt0.c1, t0.c2, '')))) AND ((((vt0.c1))>=(('-1870428569')))));
SELECT rt0.c0 FROM t0, vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, vt0, rt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))AND(0.3709140344740113)))AND(NULL)))AND('1706657542')))/(rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, vt0, rt0 WHERE ((NOT (((((((((((vt0.c0)AND(vt0.c1)))AND(0.3709140344740113)))AND(NULL)))AND('1706657542')))/(rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, vt0, rt0 WHERE (((((((((((((vt0.c0)AND(vt0.c1)))AND(0.3709140344740113)))AND(NULL)))AND('1706657542')))/(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, vt0, rt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, rt0.c2, t0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, t0, vt0;
SELECT vt0.c1, rt0.c2, t0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, t0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((t0.c2)*(t0.c2)))) AND (((rt0.c0 IN (vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, rt0.c2, t0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0 NOT INDEXED, t0, vt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((t0.c2)*(t0.c2)))) AND (((rt0.c0 IN (vt0.c0)))))))) UNION ALL SELECT vt0.c1, rt0.c2, t0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, t0, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((t0.c2)*(t0.c2)))) AND (((rt0.c0 IN (vt0.c0)))))) ISNULL));
SELECT ALL vt0.c1, rt0.c2, t0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, t0, vt0;
SELECT DISTINCT t0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c2, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c0)IS(vt0.c1)))>>(((vt0.c1)>(vt0.c0))))) UNION SELECT DISTINCT t0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0)IS(vt0.c1)))>>(((vt0.c1)>(vt0.c0))))))) UNION SELECT DISTINCT t0.c2, vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c0)IS(vt0.c1)))>>(((vt0.c1)>(vt0.c0))))) ISNULL));
SELECT DISTINCT t0.c2, vt0.c0 FROM vt0, t0;
SELECT ALL rt0.c2, t0.c2, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB) GROUP BY rt0.c2, t0.c2, vt0.c1;
SELECT rt0.c2, t0.c2, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB) WHERE (SUBSTR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), '1917970401')) GROUP BY rt0.c2, t0.c2, vt0.c1 UNION SELECT rt0.c2, t0.c2, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB) WHERE ((NOT (SUBSTR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), '1917970401')))) GROUP BY rt0.c2, t0.c2, vt0.c1 UNION SELECT rt0.c2, t0.c2, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB) WHERE (((SUBSTR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), '1917970401')) ISNULL)) GROUP BY rt0.c2, t0.c2, vt0.c1;
SELECT ALL rt0.c2, t0.c2, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB) GROUP BY rt0.c2, t0.c2, vt0.c1;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(MIN(SUM(rt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(MIN(SUM(rt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(MIN(SUM(rt0.c1))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c2)GLOB(t0.c2))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c2)GLOB(t0.c2))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c2)GLOB(t0.c2))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))))) RIGHT OUTER JOIN rt0 ON ((0xffffffffb5d2a6d0 IN (rt0.c0, vt0.c1)) IN ());
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)AND(CAST(rt0.c2 AS REAL))))AND('b楸 jT0宫D')))AND(rt0.c0)))OR((rt0.c2 IN (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)AND(CAST(rt0.c2 AS REAL))))AND('b楸 jT0宫D')))AND(rt0.c0)))OR((rt0.c2 IN (rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)AND(CAST(rt0.c2 AS REAL))))AND('b楸 jT0宫D')))AND(rt0.c0)))OR((rt0.c2 IN (rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1;
SELECT rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1;
SELECT rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2, vt0.c1;
SELECT ALL MIN(((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)))-(vt0.c1))) FROM vt0, t0, rt0;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((rt0.c1) NOT NULL) COLLATE RTRIM))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((rt0.c1) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((((((((((((t0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2))))<((((t0.c2)>>(vt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT ((((((((((((t0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2))))<((((t0.c2)>>(vt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((((((((((((((t0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2))))<((((t0.c2)>>(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT ALL rt0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0, vt0 WHERE (CAST(rt0.c0 AS BLOB)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0, vt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0, vt0 WHERE (((CAST(rt0.c0 AS BLOB)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1;
SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1;
SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c2)AND(vt0.c1)))OR(rt0.c2)) AS BLOB) GROUP BY rt0.c2, vt0.c1;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((((('佹C&U') BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ((((('佹C&U') BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((((((('佹C&U') BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM rt0, vt0 NATURAL JOIN t0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM rt0, vt0 NATURAL JOIN t0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM rt0, vt0 NATURAL JOIN t0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM rt0, vt0 NATURAL JOIN t0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM rt0, vt0 NATURAL JOIN t0;
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM vt0, t0 WHERE (HEX((((vt0.c0, t0.c2, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM vt0, t0 WHERE ((NOT (HEX((((vt0.c0, t0.c2, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM vt0, t0 WHERE (((HEX((((vt0.c0, t0.c2, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM t0, vt0 CROSS JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c1, rt0.c1, rt0.c0, vt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM t0, vt0 CROSS JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING (((rt0.c0)) BETWEEN ((SUM(rt0.c1))) AND ((COUNT(MAX('349883477'))))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM t0, vt0 CROSS JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT ((((rt0.c0)) BETWEEN ((SUM(rt0.c1))) AND ((COUNT(MAX('349883477'))))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM t0, vt0 CROSS JOIN rt0 ON (NOT (rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c1, rt0.c1, rt0.c0, vt0.c0 HAVING (((((rt0.c0)) BETWEEN ((SUM(rt0.c1))) AND ((COUNT(MAX('349883477')))))) ISNULL);
SELECT vt0.c1 FROM t0, vt0;
SELECT vt0.c1 FROM t0, vt0 WHERE ((((t0.c2)) BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0 WHERE ((NOT ((((t0.c2)) BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM t0, vt0 WHERE ((((((t0.c2)) BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((vt0.c0)))) ISNULL));
SELECT vt0.c1 FROM t0, vt0;
SELECT DISTINCT rt0.c1, t0.c2, vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM t0, vt0, rt0;
SELECT DISTINCT rt0.c1, t0.c2, vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE (CAST(x'6327' COLLATE BINARY AS REAL)) UNION SELECT DISTINCT rt0.c1, t0.c2, vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE ((NOT (CAST(x'6327' COLLATE BINARY AS REAL)))) UNION SELECT DISTINCT rt0.c1, t0.c2, vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE (((CAST(x'6327' COLLATE BINARY AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, t0.c2, vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM t0, vt0, rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)+(rt0.c2)))OR(((rt0.c0) ISNULL))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)+(rt0.c2)))OR(((rt0.c0) ISNULL))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)+(rt0.c2)))OR(((rt0.c0) ISNULL))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(vt0.c1)) NOT BETWEEN (((vt0.c0)*(SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))) AND (rt0.c2 COLLATE RTRIM)) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((SUM(vt0.c1)) NOT BETWEEN (((vt0.c0)*(SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))) AND (rt0.c2 COLLATE RTRIM)))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2 HAVING ((((SUM(vt0.c1)) NOT BETWEEN (((vt0.c0)*(SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))) AND (rt0.c2 COLLATE RTRIM))) ISNULL);
SELECT ALL vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN 0.972179705599274 WHEN vt0.c1 THEN 0.8918390076907889 WHEN rt0.c2 THEN rt0.c1 END) ISNULL)) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN 0.972179705599274 WHEN vt0.c1 THEN 0.8918390076907889 WHEN rt0.c2 THEN rt0.c1 END) ISNULL)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN 0.972179705599274 WHEN vt0.c1 THEN 0.8918390076907889 WHEN rt0.c2 THEN rt0.c1 END) ISNULL)) ISNULL));
SELECT ALL vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT t0.c2, rt0.c2, vt0.c0, rt0.c0 FROM rt0, t0, vt0;
SELECT DISTINCT t0.c2, rt0.c2, vt0.c0, rt0.c0 FROM rt0, t0, vt0 WHERE (json_array(vt0.c1, ((rt0.c0) IS FALSE))) UNION SELECT DISTINCT t0.c2, rt0.c2, vt0.c0, rt0.c0 FROM rt0, t0, vt0 WHERE ((NOT (json_array(vt0.c1, ((rt0.c0) IS FALSE))))) UNION SELECT DISTINCT t0.c2, rt0.c2, vt0.c0, rt0.c0 FROM rt0, t0, vt0 WHERE (((json_array(vt0.c1, ((rt0.c0) IS FALSE))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((0.24761938065657463)) NOT BETWEEN ((((NULL)/(vt0.c0)))) AND (((- (vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((0.24761938065657463)) NOT BETWEEN ((((NULL)/(vt0.c0)))) AND (((- (vt0.c1)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((0.24761938065657463)) NOT BETWEEN ((((NULL)/(vt0.c0)))) AND (((- (vt0.c1)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 HAVING AVG('') UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 HAVING (NOT (AVG(''))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 HAVING ((AVG('')) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 HAVING AVG('') UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 HAVING (NOT (AVG(''))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 HAVING ((AVG('')) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM t0 INNER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) COLLATE RTRIM COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((rt0.c1)|('1359925405')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c1, t0.c2, vt0.c0 FROM vt0, t0;
SELECT vt0.c1, t0.c2, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0)IS(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, t0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0)IS(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, t0.c2, vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0)IS(vt0.c1))))) ISNULL));
SELECT ALL vt0.c1, t0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((rt0.c2 IN ()) IN ((rt0.c0 IN ()), '0.07182755667781826'))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((rt0.c2 IN ()) IN ((rt0.c0 IN ()), '0.07182755667781826'))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((rt0.c2 IN ()) IN ((rt0.c0 IN ()), '0.07182755667781826'))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1;
SELECT vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(0.5498211163924073)))AND(rt0.c0)))OR(t0.c2))) AND (t0.c2))) GROUP BY vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, rt0, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (((((((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(0.5498211163924073)))AND(rt0.c0)))OR(t0.c2))) AND (t0.c2))))) GROUP BY vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1 UNION SELECT vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, rt0, vt0 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (((((((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(0.5498211163924073)))AND(rt0.c0)))OR(t0.c2))) AND (t0.c2))) ISNULL)) GROUP BY vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1;
SELECT vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, t0.c2, rt0.c1;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING MIN(COUNT(t0.c2)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MIN(COUNT(t0.c2)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MIN(COUNT(t0.c2))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN COALESCE(rt0.c2, rt0.c0) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((vt0.c0)<=(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))AND(881175699)) END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c2) ISNULL)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN COALESCE(rt0.c2, rt0.c0) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((vt0.c0)<=(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))AND(881175699)) END))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CASE ((rt0.c2) ISNULL)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN COALESCE(rt0.c2, rt0.c0) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((vt0.c0)<=(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))AND(881175699)) END) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)%(rt0.c2)) AS INTEGER);
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)%(rt0.c2)) AS INTEGER) WHERE ((((CAST(rt0.c1 AS BLOB)))=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)%(rt0.c2)) AS INTEGER) WHERE ((NOT ((((CAST(rt0.c1 AS BLOB)))=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)%(rt0.c2)) AS INTEGER) WHERE ((((((CAST(rt0.c1 AS BLOB)))==((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)%(rt0.c2)) AS INTEGER);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.1140668042480274) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.1140668042480274))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.1140668042480274) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(MIN(x'')) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(MIN(x'')))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(MIN(x''))) ISNULL);
SELECT MAX(((NOT (rt0.c2)) IN ())) FROM vt0, rt0;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((t0.c2)||(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c2)||(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM t0, vt0 WHERE (((((t0.c2)||(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((rt0.c1) IS TRUE)) AND (CASE ''  WHEN vt0.c0 THEN '' ELSE rt0.c2 END));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((rt0.c1) IS TRUE)) AND (CASE ''  WHEN vt0.c0 THEN '' ELSE rt0.c2 END)) WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((rt0.c1) IS TRUE)) AND (CASE ''  WHEN vt0.c0 THEN '' ELSE rt0.c2 END)) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((rt0.c1) IS TRUE)) AND (CASE ''  WHEN vt0.c0 THEN '' ELSE rt0.c2 END)) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((rt0.c1) IS TRUE)) AND (CASE ''  WHEN vt0.c0 THEN '' ELSE rt0.c2 END));
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((((~ (t0.c2)))>(((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT ((((~ (t0.c2)))>(((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((((((~ (t0.c2)))>(((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 NOT INDEXED INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0 HAVING CAST(GROUP_CONCAT(0Xffffffff81aec040) AS TEXT) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(0Xffffffff81aec040) AS TEXT) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM rt0 NOT INDEXED, vt0 INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0 HAVING ((CAST(GROUP_CONCAT(0xffffffff81aec040) AS TEXT) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM rt0, vt0 NOT INDEXED INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0 HAVING CAST(GROUP_CONCAT(0Xffffffff81aec040) AS TEXT) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(0Xffffffff81aec040) AS TEXT) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM rt0 NOT INDEXED, vt0 INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0 HAVING ((CAST(GROUP_CONCAT(0xffffffff81aec040) AS TEXT) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM rt0, vt0 NOT INDEXED INNER JOIN t0 ON ((((rt0.c0)AND(((NULL)AND(vt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY vt0.c0;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE ''  WHEN TYPEOF(DISTINCT rt0.c2) THEN '' END) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CASE ''  WHEN TYPEOF(DISTINCT rt0.c2) THEN '' END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE ''  WHEN TYPEOF(DISTINCT rt0.c2) THEN '' END) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0 WHERE (t0.c2) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (NULL) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT (NULL))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2 HAVING '0.5514366912009819' UNION ALL SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2 HAVING (NOT ('0.5514366912009819')) UNION ALL SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2 HAVING (('0.5514366912009819') ISNULL);
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2 HAVING '0.5514366912009819' UNION ALL SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2 HAVING (NOT ('0.5514366912009819')) UNION ALL SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2 HAVING (('0.5514366912009819') ISNULL);
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (NULLIF(DISTINCT t0.c2, t0.c2)) AND ((NOT (rt0.c1)))) GROUP BY rt0.c2;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c1)&(rt0.c2))) IS FALSE)) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)&(rt0.c2))) IS FALSE)))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c1)&(rt0.c2))) IS FALSE)) ISNULL));
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (CAST(NULL AS REAL)) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2;
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2 FROM t0, rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))>(((t0.c2)*(t0.c2))))) GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2 UNION SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2 FROM t0, rt0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))>(((t0.c2)*(t0.c2))))))) GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2 UNION SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2 FROM t0 NOT INDEXED, rt0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))>(((t0.c2)*(t0.c2))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2;
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0, t0.c2;
SELECT rt0.c1, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c1, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, vt0.c1 HAVING CASE ((rt0.c1) IS FALSE)  WHEN NULL THEN CAST(rt0.c2 AS NUMERIC) WHEN TOTAL(rt0.c0) THEN SUM(TOTAL(MAX(vt0.c1))) WHEN AVG(MAX(MAX(AVG(COUNT(*))))) THEN AVG(rt0.c1) ELSE (((('-1779971656')AND(MIN(AVG(COUNT(MIN(GROUP_CONCAT(vt0.c1))))))))OR(rt0.c1)) END UNION ALL SELECT rt0.c1, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, vt0.c1 HAVING (NOT (CASE ((rt0.c1) IS FALSE)  WHEN NULL THEN CAST(rt0.c2 AS NUMERIC) WHEN TOTAL(rt0.c0) THEN SUM(TOTAL(MAX(vt0.c1))) WHEN AVG(MAX(MAX(AVG(COUNT(*))))) THEN AVG(rt0.c1) ELSE (((('-1779971656')AND(MIN(AVG(COUNT(MIN(GROUP_CONCAT(vt0.c1))))))))OR(rt0.c1)) END)) UNION ALL SELECT ALL rt0.c1, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, vt0.c1 HAVING ((CASE ((rt0.c1) IS FALSE)  WHEN NULL THEN CAST(rt0.c2 AS NUMERIC) WHEN TOTAL(rt0.c0) THEN SUM(TOTAL(MAX(vt0.c1))) WHEN AVG(MAX(MAX(AVG(COUNT(*))))) THEN AVG(rt0.c1) ELSE (((('-1779971656')AND(MIN(AVG(COUNT(MIN(GROUP_CONCAT(vt0.c1))))))))OR(rt0.c1)) END) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((json_extract(rt0.c2, rt0.c0) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((json_extract(rt0.c2, rt0.c0) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((json_extract(rt0.c2, rt0.c0) IN ())) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c0 FROM t0 NOT INDEXED, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, rt0, vt0 WHERE (0.6083560515592827) UNION SELECT DISTINCT vt0.c0 FROM t0, rt0, vt0 WHERE ((NOT (0.6083560515592827))) UNION SELECT DISTINCT vt0.c0 FROM t0, rt0, vt0 WHERE (((0.6083560515592827) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0 NOT INDEXED, rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (('0.21606671931531996' IN ())) GROUP BY vt0.c0, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (('0.21606671931531996' IN ())))) GROUP BY vt0.c0, rt0.c0, vt0.c1 UNION SELECT vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((('0.21606671931531996' IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT((- (SUM(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT((- (SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT((- (SUM(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c0 AS BLOB))GLOB(CAST(t0.c2 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB))GLOB(CAST(t0.c2 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((CAST(rt0.c0 AS BLOB))GLOB(CAST(t0.c2 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0;
SELECT vt0.c1, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((((vt0.c1)AND(t0.c2)))AND(t0.c2))  WHEN LIKELY(vt0.c1) THEN vt0.c0 COLLATE BINARY ELSE (t0.c2 IN (t0.c2, vt0.c0)) END GROUP BY vt0.c1, t0.c2, vt0.c0;
SELECT vt0.c1, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((((vt0.c1)AND(t0.c2)))AND(t0.c2))  WHEN LIKELY(vt0.c1) THEN vt0.c0 COLLATE BINARY ELSE (t0.c2 IN (t0.c2, vt0.c0)) END WHERE (CAST(UNLIKELY(vt0.c0) AS INTEGER)) GROUP BY vt0.c1, t0.c2, vt0.c0 UNION SELECT ALL vt0.c1, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((((vt0.c1)AND(t0.c2)))AND(t0.c2))  WHEN LIKELY(vt0.c1) THEN vt0.c0 COLLATE BINARY ELSE (t0.c2 IN (t0.c2, vt0.c0)) END WHERE ((NOT (CAST(UNLIKELY(vt0.c0) AS INTEGER)))) GROUP BY vt0.c1, t0.c2, vt0.c0 UNION SELECT vt0.c1, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((((vt0.c1)AND(t0.c2)))AND(t0.c2))  WHEN LIKELY(vt0.c1) THEN vt0.c0 COLLATE BINARY ELSE (t0.c2 IN (t0.c2, vt0.c0)) END WHERE (((CAST(UNLIKELY(vt0.c0) AS INTEGER)) ISNULL)) GROUP BY vt0.c1, t0.c2, vt0.c0;
SELECT vt0.c1, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE ((((vt0.c1)AND(t0.c2)))AND(t0.c2))  WHEN LIKELY(vt0.c1) THEN vt0.c0 COLLATE BINARY ELSE (t0.c2 IN (t0.c2, vt0.c0)) END GROUP BY vt0.c1, t0.c2, vt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(CASE rt0.c2  WHEN t0.c2 THEN vt0.c0 ELSE TOTAL(MAX('>')) END) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(CASE rt0.c2  WHEN t0.c2 THEN vt0.c0 ELSE TOTAL(MAX('>')) END))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(CASE rt0.c2  WHEN t0.c2 THEN vt0.c0 ELSE TOTAL(MAX('>')) END)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))!=(((- (vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))!=(((- (vt0.c1)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))!=(((- (vt0.c1)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))!=(((0.8735975777566547)||(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))!=(((0.8735975777566547)||(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))!=(((0.8735975777566547)||(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, t0.c2, vt0.c1 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, vt0.c1;
SELECT ALL rt0.c1, t0.c2, vt0.c1 FROM vt0, rt0, t0 WHERE (((x'' COLLATE RTRIM) NOT NULL)) GROUP BY rt0.c1, t0.c2, vt0.c1 UNION SELECT rt0.c1, t0.c2, vt0.c1 FROM vt0, rt0, t0 WHERE ((NOT (((x'' COLLATE RTRIM) NOT NULL)))) GROUP BY rt0.c1, t0.c2, vt0.c1 UNION SELECT ALL rt0.c1, t0.c2, vt0.c1 FROM vt0, rt0, t0 WHERE (((((x'' COLLATE RTRIM) NOT NULL)) ISNULL)) GROUP BY rt0.c1, t0.c2, vt0.c1;
SELECT rt0.c1, t0.c2, vt0.c1 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) IN ((- (vt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) IN ((- (vt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) IN ((- (vt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, t0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c0, t0.c2 FROM t0, rt0 WHERE ((- ('qKNS9'))) UNION SELECT DISTINCT rt0.c0, t0.c2 FROM t0, rt0 WHERE ((NOT ((- ('qKNS9'))))) UNION SELECT DISTINCT rt0.c0, t0.c2 FROM t0, rt0 WHERE ((((- ('qKNS9'))) ISNULL));
SELECT DISTINCT rt0.c0, t0.c2 FROM t0, rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (LIKELY(DISTINCT rt0.c1)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (LIKELY(DISTINCT rt0.c1)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c1)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE ((((+ (vt0.c1))) NOT NULL)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((+ (vt0.c1))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((+ (vt0.c1))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2) NOTNULL)))>(((t0.c2 IN ()))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c2) NOTNULL)))>(((t0.c2 IN ()))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c2) NOTNULL)))>(((t0.c2 IN ()))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM vt0 INNER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (json_type(rt0.c1), ((0.39092513030361153)+(vt0.c0)))) CROSS JOIN t0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c2))))IS NOT(CAST(vt0.c1 AS REAL))) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM vt0 INNER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (json_type(rt0.c1), ((0.39092513030361153)+(vt0.c0)))) CROSS JOIN t0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c2))))IS NOT(CAST(vt0.c1 AS REAL))) WHERE (((((((((((rt0.c2)AND(t0.c2)))AND(vt0.c1)))OR(0.030477556380617)))OR(rt0.c0))) NOT BETWEEN ((~ (t0.c2))) AND (TRIM(DISTINCT rt0.c0)))) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2 UNION SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM vt0 INNER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (json_type(rt0.c1), ((0.39092513030361153)+(vt0.c0)))) CROSS JOIN t0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c2))))IS NOT(CAST(vt0.c1 AS REAL))) WHERE ((NOT (((((((((((rt0.c2)AND(t0.c2)))AND(vt0.c1)))OR(0.030477556380617)))OR(rt0.c0))) NOT BETWEEN ((~ (t0.c2))) AND (TRIM(DISTINCT rt0.c0)))))) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2 UNION SELECT ALL rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM vt0 INNER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (json_type(rt0.c1), ((0.39092513030361153)+(vt0.c0)))) CROSS JOIN t0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c2))))IS NOT(CAST(vt0.c1 AS REAL))) WHERE (((((((((((((rt0.c2)AND(t0.c2)))AND(vt0.c1)))OR(0.030477556380617)))OR(rt0.c0))) NOT BETWEEN ((~ (t0.c2))) AND (TRIM(DISTINCT rt0.c0)))) ISNULL)) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM vt0 INNER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (json_type(rt0.c1), ((0.39092513030361153)+(vt0.c0)))) CROSS JOIN t0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c2))))IS NOT(CAST(vt0.c1 AS REAL))) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1, t0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON CASE WHEN CASE t0.c2  WHEN rt0.c0 THEN 0.3097876762921713 ELSE vt0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c1)OR(rt0.c2)))OR(t0.c2)))OR(t0.c2)))OR(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON CASE WHEN CASE t0.c2  WHEN rt0.c0 THEN 0.3097876762921713 ELSE vt0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c1)OR(rt0.c2)))OR(t0.c2)))OR(t0.c2)))OR(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING MIN(((MIN(vt0.c1))<=(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON CASE WHEN CASE t0.c2  WHEN rt0.c0 THEN 0.3097876762921713 ELSE vt0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c1)OR(rt0.c2)))OR(t0.c2)))OR(t0.c2)))OR(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (NOT (MIN(((MIN(vt0.c1))<=(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON CASE WHEN CASE t0.c2  WHEN rt0.c0 THEN 0.3097876762921713 ELSE vt0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c1)OR(rt0.c2)))OR(t0.c2)))OR(t0.c2)))OR(rt0.c0)) END GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING ((MIN(((MIN(vt0.c1))<=(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (0.646594437344199) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (0.646594437344199))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((0.646594437344199) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (((NOT (vt0.c0)))IS NOT((0.3109059534104266 IN (vt0.c0)))) FULL OUTER JOIN t0 ON rt0.c0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (((NOT (vt0.c0)))IS NOT((0.3109059534104266 IN (vt0.c0)))) FULL OUTER JOIN t0 ON rt0.c0 WHERE (rt0.c0) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (((NOT (vt0.c0)))IS NOT((0.3109059534104266 IN (vt0.c0)))) FULL OUTER JOIN t0 ON rt0.c0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (((NOT (vt0.c0)))IS NOT((0.3109059534104266 IN (vt0.c0)))) FULL OUTER JOIN t0 ON rt0.c0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN vt0 ON (((NOT (vt0.c0)))IS NOT((0.3109059534104266 IN (vt0.c0)))) FULL OUTER JOIN t0 ON rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c0) NOTNULL) AS TEXT)) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS TEXT)))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(((vt0.c0) NOTNULL) AS TEXT)) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(((AVG(MAX(rt0.c0)))AND(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(((AVG(MAX(rt0.c0)))AND(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(((AVG(MAX(rt0.c0)))AND(rt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST((((x'', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) AS NUMERIC)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST((((x'', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED WHERE (((CAST((((x'', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) AS NUMERIC)) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT ALL t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((((((((((((CAST(rt0.c2 AS NUMERIC))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))OR(rt0.c1)))AND(CAST(rt0.c0 AS NUMERIC))))AND(((t0.c2)+(rt0.c0)))))AND(load_extension(x'5e40'))))AND(json_valid(rt0.c0)))) GROUP BY t0.c2, rt0.c2, rt0.c0 UNION SELECT ALL t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (((((((((((((CAST(rt0.c2 AS NUMERIC))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))OR(rt0.c1)))AND(CAST(rt0.c0 AS NUMERIC))))AND(((t0.c2)+(rt0.c0)))))AND(load_extension(x'5e40'))))AND(json_valid(rt0.c0)))))) GROUP BY t0.c2, rt0.c2, rt0.c0 UNION SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((((((((((((((CAST(rt0.c2 AS NUMERIC))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))OR(rt0.c1)))AND(CAST(rt0.c0 AS NUMERIC))))AND(((t0.c2)+(rt0.c0)))))AND(load_extension(x'5e40'))))AND(json_valid(rt0.c0)))) ISNULL)) GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING TOTAL(AVG(COUNT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(AVG(COUNT(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(AVG(COUNT(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL TOTAL(TRIM(DISTINCT CASE rt0.c2  WHEN t0.c2 THEN vt0.c1 END)) FROM vt0, rt0, t0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)%(NULL))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)%(NULL))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)%(NULL))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)AND(rt0.c2)) THEN json_remove(rt0.c1, rt0.c1) ELSE ((0.8474723454328454) ISNULL) END;
SELECT ALL rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c2, rt0.c2;
SELECT rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (((rt0.c1) ISNULL)))) GROUP BY rt0.c1, t0.c2, rt0.c2 UNION SELECT rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((~ (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (((rt0.c1) ISNULL)))))) GROUP BY rt0.c1, t0.c2, rt0.c2 UNION SELECT rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((((((~ (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (((rt0.c1) ISNULL)))) ISNULL)) GROUP BY rt0.c1, t0.c2, rt0.c2;
SELECT ALL rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c2, rt0.c2;
SELECT t0.c2, vt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON CASE rt0.c2  WHEN x'd3c0' THEN rt0.c1 WHEN ((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)) THEN ((vt0.c1) ISNULL) WHEN (t0.c2 IN ()) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1)) END INNER JOIN vt0 ON ((CAST(rt0.c1 AS INTEGER)) NOTNULL) GROUP BY t0.c2, vt0.c1, rt0.c0, rt0.c2;
SELECT ALL TOTAL(((((0.5263262901349791)AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))AND(((t0.c2)+(t0.c2))))) FROM t0 ORDER BY CASE WHEN t0.c2 COLLATE BINARY THEN CAST(t0.c2 AS REAL) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c2) IS FALSE) WHEN ((t0.c2)&(t0.c2)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) END DESC  NULLS LAST;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c2)AND((NOT (rt0.c0)))))OR(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)AND((NOT (rt0.c0)))))OR(CAST(rt0.c0 AS BLOB)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c2)AND((NOT (rt0.c0)))))OR(CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END IN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (('-745352795') NOTNULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END IN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (('-745352795') NOTNULL)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END IN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (('-745352795') NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((MAX(MAX(MIN(MAX(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))AND(MIN(MAX(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((MAX(MAX(MIN(MAX(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))AND(MIN(MAX(MAX(vt0.c1))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((MAX(MAX(MIN(MAX(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))AND(MIN(MAX(MAX(vt0.c1)))))) ISNULL);
SELECT ALL TOTAL(NULLIF(DISTINCT (rt0.c2 IN (vt0.c1)), ((rt0.c0) NOTNULL))) FROM rt0, vt0 ORDER BY ((vt0.c1)%(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (((((t0.c2) IS TRUE))<(((NULL) NOT NULL)))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT (((((t0.c2) IS TRUE))<(((NULL) NOT NULL)))))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((((((t0.c2) IS TRUE))<(((NULL) NOT NULL)))) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((((((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2))))!=(((((t0.c2))<>((t0.c2))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((((((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2))))<>(((((t0.c2))<>((t0.c2))))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((((((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2))))<>(((((t0.c2))<>((t0.c2))))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (CASE WHEN INSTR(t0.c2, t0.c2) THEN NULL COLLATE NOCASE END) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CASE WHEN INSTR(t0.c2, t0.c2) THEN NULL COLLATE NOCASE END))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((CASE WHEN INSTR(t0.c2, t0.c2) THEN NULL COLLATE NOCASE END) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c2 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)IS NOT(vt0.c1))) ISNULL) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c2;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c2 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)IS NOT(vt0.c1))) ISNULL) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c2 HAVING (((((rt0.c2, vt0.c0, AVG(SUM(TOTAL(rt0.c2))))) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))<(GROUP_CONCAT(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c2 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)IS NOT(vt0.c1))) ISNULL) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c2 HAVING (NOT ((((((rt0.c2, vt0.c0, AVG(SUM(TOTAL(rt0.c2))))) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))<(GROUP_CONCAT(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c2 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)IS NOT(vt0.c1))) ISNULL) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c2 HAVING (((((((rt0.c2, vt0.c0, AVG(SUM(TOTAL(rt0.c2))))) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))<(GROUP_CONCAT(COUNT(rt0.c1))))) ISNULL);
SELECT ALL * FROM vt0, rt0, t0;
SELECT * FROM vt0, rt0, t0 WHERE ((((t0.c2)IS NOT(vt0.c1)) IN ())) UNION ALL SELECT ALL * FROM vt0, rt0, t0 WHERE ((NOT ((((t0.c2)IS NOT(vt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((t0.c2)IS NOT(vt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ());
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE (t0.c2) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ());
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (IFNULL(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (IFNULL(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((IFNULL(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((vt0.c0)*(GROUP_CONCAT(SUM(vt0.c0)))))OR(MIN(NULL))))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((((vt0.c0)*(GROUP_CONCAT(SUM(vt0.c0)))))OR(MIN(NULL))))OR(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((((vt0.c0)*(GROUP_CONCAT(SUM(vt0.c0)))))OR(MIN(NULL))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0, t0, vt0 NOT INDEXED;
SELECT rt0.c1 FROM rt0, t0, vt0 WHERE (CASE rt0.c0  WHEN CASE rt0.c0  WHEN t0.c2 THEN vt0.c1 WHEN '-95463002' THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN ((t0.c2) BETWEEN (x'a46ec05b') AND (vt0.c1)) ELSE ABS(DISTINCT rt0.c2) END) UNION ALL SELECT rt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (CASE rt0.c0  WHEN CASE rt0.c0  WHEN t0.c2 THEN vt0.c1 WHEN '-95463002' THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN ((t0.c2) BETWEEN (x'a46ec05b') AND (vt0.c1)) ELSE ABS(DISTINCT rt0.c2) END))) UNION ALL SELECT rt0.c1 FROM rt0, t0, vt0 WHERE (((CASE rt0.c0  WHEN CASE rt0.c0  WHEN t0.c2 THEN vt0.c1 WHEN '-95463002' THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN ((t0.c2) BETWEEN (x'a46ec05b') AND (vt0.c1)) ELSE ABS(DISTINCT rt0.c2) END) ISNULL));
SELECT rt0.c1 FROM rt0, t0, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>(((vt0.c1)*(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)>(((vt0.c1)*(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)>(((vt0.c1)*(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (((((0.09440657095873495) NOT NULL))|(((t0.c2)OR(t0.c2))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT (((((0.09440657095873495) NOT NULL))|(((t0.c2)OR(t0.c2))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((((((0.09440657095873495) NOT NULL))|(((t0.c2)OR(t0.c2))))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING AVG(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (AVG(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((AVG(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING AVG(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (AVG(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((AVG(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c1)), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)), vt0.c0)) AND ((((vt0.c1) NOTNULL), (vt0.c0 IN (vt0.c1)), vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c1)), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)), vt0.c0)) AND ((((vt0.c1) NOTNULL), (vt0.c0 IN (vt0.c1)), vt0.c0 COLLATE NOCASE)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c1)), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)), vt0.c0)) AND ((((vt0.c1) NOTNULL), (vt0.c0 IN (vt0.c1)), vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0, vt0 INDEXED BY i73, rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (((t0.c2)-(t0.c2))) AND ((t0.c2 IN ())))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c2 IN ())) NOT BETWEEN (((t0.c2)-(t0.c2))) AND ((t0.c2 IN ())))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c2 IN ())) NOT BETWEEN (((t0.c2)-(t0.c2))) AND ((t0.c2 IN ())))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c2;
SELECT ALL vt0.c0, t0.c2 FROM t0, vt0 WHERE (TRIM((~ (t0.c2)))) GROUP BY vt0.c0, t0.c2 UNION SELECT ALL vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (TRIM((~ (t0.c2)))))) GROUP BY vt0.c0, t0.c2 UNION SELECT ALL vt0.c0, t0.c2 FROM t0, vt0 WHERE (((TRIM((~ (t0.c2)))) ISNULL)) GROUP BY vt0.c0, t0.c2;
SELECT ALL vt0.c0, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(CASE WHEN TOTAL(vt0.c0) THEN COUNT(vt0.c1) END) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(CASE WHEN TOTAL(vt0.c0) THEN COUNT(vt0.c1) END))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(CASE WHEN TOTAL(vt0.c0) THEN COUNT(vt0.c1) END)) ISNULL);
SELECT ALL vt0.c1, t0.c2, vt0.c0 FROM vt0, t0;
SELECT vt0.c1, t0.c2, vt0.c0 FROM vt0, t0 WHERE (TRIM(DISTINCT CAST(vt0.c0 AS NUMERIC), ((vt0.c1)<<(t0.c2)))) UNION ALL SELECT ALL vt0.c1, t0.c2, vt0.c0 FROM vt0, t0 NOT INDEXED WHERE ((NOT (TRIM(DISTINCT CAST(vt0.c0 AS NUMERIC), ((vt0.c1)<<(t0.c2)))))) UNION ALL SELECT vt0.c1, t0.c2, vt0.c0 FROM vt0, t0 WHERE (((TRIM(DISTINCT CAST(vt0.c0 AS NUMERIC), ((vt0.c1)<<(t0.c2)))) ISNULL));
SELECT ALL vt0.c1, t0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT rt0.c0 FROM t0 FULL OUTER JOIN vt0 ON CAST(-117085294 COLLATE RTRIM AS TEXT) RIGHT OUTER JOIN rt0 ON ((CASE WHEN 0.2881162867553515 THEN vt0.c1 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)||(json_insert(vt0.c1, rt0.c1, '', vt0.c0, vt0.c1)));
SELECT ALL rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2 FROM vt0, rt0 FULL OUTER JOIN t0 ON CASE x''  WHEN (('') BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((vt0.c0)*(x'')) END GROUP BY rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2 FROM vt0, rt0 FULL OUTER JOIN t0 ON CASE x''  WHEN (('') BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((vt0.c0)*(x'')) END WHERE ((((((('0.7979418979233661')AND(t0.c2)))AND(rt0.c2))) IS TRUE)) GROUP BY rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2 FROM vt0, rt0 FULL OUTER JOIN t0 ON CASE x''  WHEN (('') BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((vt0.c0)*(x'')) END WHERE ((NOT ((((((('0.7979418979233661')AND(t0.c2)))AND(rt0.c2))) IS TRUE)))) GROUP BY rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2 FROM vt0, rt0 FULL OUTER JOIN t0 ON CASE x''  WHEN (('') BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((vt0.c0)*(x'')) END WHERE ((((((((('0.7979418979233661')AND(t0.c2)))AND(rt0.c2))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2 FROM vt0, rt0 FULL OUTER JOIN t0 ON CASE x''  WHEN (('') BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((vt0.c0)*(x'')) END GROUP BY rt0.c0, rt0.c1, t0.c2, vt0.c0, rt0.c2;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING TOTAL(COUNT(COUNT(*)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(COUNT(COUNT(*)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING ((TOTAL(COUNT(COUNT(*)) COLLATE RTRIM)) ISNULL);
SELECT t0.c2, rt0.c2 FROM t0, rt0;
SELECT t0.c2, rt0.c2 FROM t0, rt0 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN '-1297413112' END COLLATE RTRIM) UNION ALL SELECT t0.c2, rt0.c2 FROM t0, rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c0 THEN '-1297413112' END COLLATE RTRIM))) UNION ALL SELECT ALL t0.c2, rt0.c2 FROM t0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN '-1297413112' END COLLATE RTRIM) ISNULL));
SELECT t0.c2, rt0.c2 FROM t0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) NOTNULL))>=(0Xffffffff973e9cf3))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) NOTNULL))>=(0xffffffff973e9cf3))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1) NOTNULL))>=(0xffffffff973e9cf3))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM t0, vt0 NOT INDEXED INNER JOIN rt0 ON ABS(((t0.c2) BETWEEN (t0.c2) AND (rt0.c1))) GROUP BY rt0.c2, rt0.c0, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM t0, vt0 INNER JOIN rt0 ON ABS(((t0.c2) BETWEEN (t0.c2) AND (rt0.c1))) WHERE ((~ ('-1276908812'))) GROUP BY rt0.c2, rt0.c0, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM t0, vt0 INNER JOIN rt0 ON ABS(((t0.c2) BETWEEN (t0.c2) AND (rt0.c1))) WHERE ((NOT ((~ ('-1276908812'))))) GROUP BY rt0.c2, rt0.c0, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM t0, vt0 INNER JOIN rt0 ON ABS(((t0.c2) BETWEEN (t0.c2) AND (rt0.c1))) WHERE ((((~ ('-1276908812'))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM t0, vt0 NOT INDEXED INNER JOIN rt0 ON ABS(((t0.c2) BETWEEN (t0.c2) AND (rt0.c1))) GROUP BY rt0.c2, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((t0.c2)||(GROUP_CONCAT(t0.c2))) UNION ALL SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING (NOT (((t0.c2)||(GROUP_CONCAT(t0.c2))))) UNION ALL SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((((t0.c2)||(GROUP_CONCAT(t0.c2)))) ISNULL);
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((t0.c2)||(GROUP_CONCAT(t0.c2))) UNION ALL SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING (NOT (((t0.c2)||(GROUP_CONCAT(t0.c2))))) UNION ALL SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((((t0.c2)||(GROUP_CONCAT(t0.c2)))) ISNULL);
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2, rt0.c2 FROM vt0, t0, rt0;
SELECT ALL t0.c2, rt0.c2 FROM vt0, t0 NOT INDEXED, rt0 NOT INDEXED WHERE (((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c2, vt0.c1, vt0.c1)) AND ((t0.c2, t0.c2, t0.c2))) IN ())) UNION ALL SELECT ALL t0.c2, rt0.c2 FROM vt0, t0, rt0 WHERE ((NOT (((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c2, vt0.c1, vt0.c1)) AND ((t0.c2, t0.c2, t0.c2))) IN ())))) UNION ALL SELECT ALL t0.c2, rt0.c2 FROM vt0, t0, rt0 WHERE (((((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c2, vt0.c1, vt0.c1)) AND ((t0.c2, t0.c2, t0.c2))) IN ())) ISNULL));
SELECT ALL t0.c2, rt0.c2 FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c2) NOTNULL))&(UNLIKELY(DISTINCT vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((t0.c2) NOTNULL))&(UNLIKELY(DISTINCT vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((t0.c2) NOTNULL))&(UNLIKELY(DISTINCT vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 INDEXED BY i63 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING AVG((((t0.c2, GROUP_CONCAT(COUNT(COUNT(*))), SUM(t0.c2), SUM(t0.c2), t0.c2))==((t0.c2, TOTAL('-815742798'), MAX(MIN(SUM(GROUP_CONCAT(MAX(t0.c2))))), x'', MIN(t0.c2))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (AVG((((t0.c2, GROUP_CONCAT(COUNT(COUNT(*))), SUM(t0.c2), SUM(t0.c2), t0.c2))==((t0.c2, TOTAL('-815742798'), MAX(MIN(SUM(GROUP_CONCAT(MAX(t0.c2))))), x'', MIN(t0.c2))))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((AVG((((t0.c2, GROUP_CONCAT(COUNT(COUNT(*))), SUM(t0.c2), SUM(t0.c2), t0.c2))=((t0.c2, TOTAL('-815742798'), MAX(MIN(SUM(GROUP_CONCAT(MAX(t0.c2))))), x'', MIN(t0.c2)))))) ISNULL);
SELECT * FROM vt0, rt0, t0;
SELECT ALL * FROM vt0, rt0, t0 WHERE (((t0.c2 COLLATE NOCASE)>>(CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT ALL * FROM vt0, rt0, t0 WHERE ((NOT (((t0.c2 COLLATE NOCASE)>>(CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0, rt0, t0 WHERE (((((t0.c2 COLLATE NOCASE)>>(CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT * FROM vt0, rt0, t0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, t0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, t0, rt0 WHERE (((((t0.c2) ISNULL)) NOT BETWEEN (((rt0.c1)<>(rt0.c0))) AND ((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, t0, rt0 WHERE ((NOT (((((t0.c2) ISNULL)) NOT BETWEEN (((rt0.c1)!=(rt0.c0))) AND ((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, t0, rt0 WHERE (((((((t0.c2) ISNULL)) NOT BETWEEN (((rt0.c1)<>(rt0.c0))) AND ((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, t0, rt0;
SELECT vt0.c0, t0.c2 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2;
SELECT vt0.c0, t0.c2 FROM rt0, vt0, t0 WHERE (((((((t0.c2)AND(vt0.c1)))AND(vt0.c1)))|(vt0.c1 COLLATE BINARY))) GROUP BY vt0.c0, t0.c2 UNION SELECT vt0.c0, t0.c2 FROM rt0, vt0, t0 WHERE ((NOT (((((((t0.c2)AND(vt0.c1)))AND(vt0.c1)))|(vt0.c1 COLLATE BINARY))))) GROUP BY vt0.c0, t0.c2 UNION SELECT vt0.c0, t0.c2 FROM rt0, vt0, t0 WHERE (((((((((t0.c2)AND(vt0.c1)))AND(vt0.c1)))|(vt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, t0.c2;
SELECT vt0.c0, t0.c2 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2;
SELECT t0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2;
SELECT t0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2 HAVING NULLIF((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((AVG(rt0.c2)))), COUNT(*)) UNION ALL SELECT t0.c2, vt0.c1, rt0.c2 FROM vt0 NOT INDEXED, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2 HAVING (NOT (NULLIF((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((AVG(rt0.c2)))), COUNT(*)))) UNION ALL SELECT ALL t0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2 HAVING ((NULLIF((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((AVG(rt0.c2)))), COUNT(*))) ISNULL);
SELECT t0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2;
SELECT t0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2 HAVING NULLIF((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((AVG(rt0.c2)))), COUNT(*)) UNION ALL SELECT t0.c2, vt0.c1, rt0.c2 FROM vt0 NOT INDEXED, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2 HAVING (NOT (NULLIF((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((AVG(rt0.c2)))), COUNT(*)))) UNION ALL SELECT ALL t0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2 HAVING ((NULLIF((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((AVG(rt0.c2)))), COUNT(*))) ISNULL);
SELECT t0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c2, vt0.c1, rt0.c2;
SELECT ALL * FROM rt0, t0, vt0;
SELECT * FROM rt0, t0, vt0 WHERE ((NULL IN ())) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM rt0, t0, vt0 WHERE ((((NULL IN ())) ISNULL));
SELECT ALL * FROM rt0, t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (ABS(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (ABS(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((ABS(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c1, t0.c2, rt0.c2, rt0.c1;
SELECT vt0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0, vt0 WHERE (CASE rt0.c0 COLLATE RTRIM  WHEN rt0.c1 COLLATE BINARY THEN ((vt0.c1) ISNULL) WHEN UPPER(DISTINCT rt0.c2) THEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN '''ꈏJj)([]᭳' THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-734720325')) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END ELSE (~ (t0.c2)) END) GROUP BY vt0.c1, t0.c2, rt0.c2, rt0.c1 UNION SELECT vt0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0, vt0 WHERE ((NOT (CASE rt0.c0 COLLATE RTRIM  WHEN rt0.c1 COLLATE BINARY THEN ((vt0.c1) ISNULL) WHEN UPPER(DISTINCT rt0.c2) THEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN '''ꈏJj)([]᭳' THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-734720325')) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END ELSE (~ (t0.c2)) END))) GROUP BY vt0.c1, t0.c2, rt0.c2, rt0.c1 UNION SELECT vt0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0, vt0 WHERE (((CASE rt0.c0 COLLATE RTRIM  WHEN rt0.c1 COLLATE BINARY THEN ((vt0.c1) ISNULL) WHEN UPPER(DISTINCT rt0.c2) THEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN '''ꈏJj)([]᭳' THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-734720325')) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END ELSE (~ (t0.c2)) END) ISNULL)) GROUP BY vt0.c1, t0.c2, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c1, t0.c2, rt0.c2, rt0.c1;
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING TOTAL(((-1360661147) IS TRUE)) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING (NOT (TOTAL(((-1360661147) IS TRUE)))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING ((TOTAL(((-1360661147) IS TRUE))) ISNULL);
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING TOTAL(((-1360661147) IS TRUE)) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING (NOT (TOTAL(((-1360661147) IS TRUE)))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING ((TOTAL(((-1360661147) IS TRUE))) ISNULL);
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (CAST(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) AS NUMERIC)) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((CAST(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(0.14644291562896128)))OR(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(0.14644291562896128)))OR(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(0.14644291562896128)))OR(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0;
SELECT rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0, t0 WHERE (((((NOT (rt0.c1))))<(((((rt0.c2, rt0.c2, rt0.c0))=((rt0.c2, rt0.c1, ''))))))) GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0, t0 WHERE ((NOT (((((NOT (rt0.c1))))<(((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c2, rt0.c1, ''))))))))) GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 UNION SELECT rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0, t0 WHERE (((((((NOT (rt0.c1))))<(((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c2, rt0.c1, ''))))))) ISNULL)) GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0;
SELECT rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING t0.c2 UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (t0.c2)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((t0.c2) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING t0.c2 UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (t0.c2)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((t0.c2) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((- (((((((((NULL)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((- (((((((((NULL)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((- (((((((((NULL)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (TRIM(LIKELIHOOD(rt0.c0, 0.35082839187956705))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (TRIM(LIKELIHOOD(rt0.c0, 0.35082839187956705))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((TRIM(LIKELIHOOD(rt0.c0, 0.35082839187956705))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (x'') GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (x''))) GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING CAST(MAX(TOTAL(t0.c2)) AS REAL) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (CAST(MAX(TOTAL(t0.c2)) AS REAL))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((CAST(MAX(TOTAL(t0.c2)) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, rt0 NATURAL JOIN vt0 WHERE (vt0.c1) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, rt0 NATURAL JOIN vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, rt0 NATURAL JOIN vt0 WHERE (((vt0.c1) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((']?') NOTNULL)))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))<(((']?') NOTNULL)))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))<(((']?') NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 WHERE (x'76b7' COLLATE BINARY) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (x'76b7' COLLATE BINARY))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 WHERE (((x'76b7' COLLATE BINARY) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2;
SELECT rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2 HAVING rt0.c1 COLLATE NOCASE COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2 HAVING (NOT (rt0.c1 COLLATE NOCASE COLLATE NOCASE)) UNION ALL SELECT rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2 HAVING ((rt0.c1 COLLATE NOCASE COLLATE NOCASE) ISNULL);
SELECT rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2;
SELECT rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2 HAVING rt0.c1 COLLATE NOCASE COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2 HAVING (NOT (rt0.c1 COLLATE NOCASE COLLATE NOCASE)) UNION ALL SELECT rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2 HAVING ((rt0.c1 COLLATE NOCASE COLLATE NOCASE) ISNULL);
SELECT rt0.c2, vt0.c0, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, t0.c2;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c2, (t0.c2 IN ()), ((t0.c2)/(t0.c2))))!=((t0.c2, ((((0.30151895591259603)AND(0.6814980565990912)))OR(t0.c2)), (((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c2, (t0.c2 IN ()), ((t0.c2)/(t0.c2))))<>((t0.c2, ((((0.30151895591259603)AND(0.6814980565990912)))OR(t0.c2)), (((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))))))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c2, (t0.c2 IN ()), ((t0.c2)/(t0.c2))))!=((t0.c2, ((((0.30151895591259603)AND(0.6814980565990912)))OR(t0.c2)), (((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, t0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((('0.5514366912009819')|(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT ((('0.5514366912009819')|(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((((('0.5514366912009819')|(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, t0 NOT INDEXED, vt0;
SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0, vt0 WHERE (json_array((vt0.c1 IN ()), ((((vt0.c0)AND(t0.c2)))AND(rt0.c2)))) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2 UNION SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0, vt0 WHERE ((NOT (json_array((vt0.c1 IN ()), ((((vt0.c0)AND(t0.c2)))AND(rt0.c2)))))) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2 UNION SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0, vt0 WHERE (((json_array((vt0.c1 IN ()), ((((vt0.c0)AND(t0.c2)))AND(rt0.c2)))) ISNULL)) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT ALL rt0.c0, t0.c2, rt0.c1, vt0.c1 FROM vt0 INNER JOIN rt0 ON 0.7624329860002437 FULL OUTER JOIN t0 ON (NOT (CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1;
SELECT rt0.c0, t0.c2, rt0.c1, vt0.c1 FROM vt0 INNER JOIN rt0 ON 0.7624329860002437 FULL OUTER JOIN t0 ON (NOT (CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1 HAVING (((COUNT(rt0.c0)))<((((((SUM(SUM(0x5d14e503)))AND(vt0.c1)))OR(t0.c2))))) UNION ALL SELECT ALL rt0.c0, t0.c2, rt0.c1, vt0.c1 FROM vt0 INNER JOIN rt0 ON 0.7624329860002437 FULL OUTER JOIN t0 ON (NOT (CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1 HAVING (NOT ((((COUNT(rt0.c0)))<((((((SUM(SUM(0X5d14e503)))AND(vt0.c1)))OR(t0.c2))))))) UNION ALL SELECT rt0.c0, t0.c2, rt0.c1, vt0.c1 FROM vt0 INNER JOIN rt0 ON 0.7624329860002437 FULL OUTER JOIN t0 ON (NOT (CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c0, t0.c2, rt0.c1, vt0.c1 HAVING (((((COUNT(rt0.c0)))<((((((SUM(SUM(0x5d14e503)))AND(vt0.c1)))OR(t0.c2)))))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE (CASE WHEN t0.c2 COLLATE NOCASE THEN ((t0.c2)>=(t0.c2)) END) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CASE WHEN t0.c2 COLLATE NOCASE THEN ((t0.c2)>=(t0.c2)) END))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((CASE WHEN t0.c2 COLLATE NOCASE THEN ((t0.c2)>=(t0.c2)) END) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) IS TRUE));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) IS TRUE)) WHERE ((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0))=((vt0.c1))), rt0.c0, CAST(NULL AS INTEGER))) AND ((CAST(vt0.c1 AS REAL), (NOT (rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) IS TRUE)) WHERE ((NOT ((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0))==((vt0.c1))), rt0.c0, CAST(NULL AS INTEGER))) AND ((CAST(vt0.c1 AS REAL), (NOT (rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) IS TRUE)) WHERE ((((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0))==((vt0.c1))), rt0.c0, CAST(NULL AS INTEGER))) AND ((CAST(vt0.c1 AS REAL), (NOT (rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) IS TRUE));
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, t0, vt0 NOT INDEXED WHERE (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0, vt0 WHERE ((NOT (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, t0, vt0 WHERE (((CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c0 HAVING AVG(MIN(TOTAL(TOTAL(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c0 HAVING (NOT (AVG(MIN(TOTAL(TOTAL(MAX(rt0.c0))))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c0 HAVING ((AVG(MIN(TOTAL(TOTAL(MAX(rt0.c0)))))) ISNULL);
SELECT t0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0;
SELECT ALL t0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0 WHERE (CAST(((NULL)/(x'7ff3')) AS INTEGER)) UNION ALL SELECT ALL t0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0 WHERE ((NOT (CAST(((NULL)/(x'7ff3')) AS INTEGER)))) UNION ALL SELECT ALL t0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0 WHERE (((CAST(((NULL)/(x'7ff3')) AS INTEGER)) ISNULL));
SELECT t0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c0)<=(rt0.c0))) BETWEEN (((rt0.c1)||(vt0.c0))) AND (((rt0.c1)<=(rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((vt0.c0)<=(rt0.c0))) BETWEEN (((rt0.c1)||(vt0.c0))) AND (((rt0.c1)<=(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((vt0.c0)<=(rt0.c0))) BETWEEN (((rt0.c1)||(vt0.c0))) AND (((rt0.c1)<=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND((((rt0.c2, '', rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((~ (rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND((((rt0.c2, '', rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((~ (rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND((((rt0.c2, '', rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(x''))) NOT BETWEEN (GROUP_CONCAT(SUM(GROUP_CONCAT(MAX(vt0.c0))))) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(COUNT(x''))) NOT BETWEEN (GROUP_CONCAT(SUM(GROUP_CONCAT(MAX(vt0.c0))))) AND (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(COUNT(x''))) NOT BETWEEN (GROUP_CONCAT(SUM(GROUP_CONCAT(MAX(vt0.c0))))) AND (COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((rtreenode(t0.c2, t0.c2))OR(NULLIF(vt0.c0, '[䀱'))))AND((t0.c2 IN ()))) CROSS JOIN vt0 ON (+ ((~ (rt0.c1))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((rtreenode(t0.c2, t0.c2))OR(NULLIF(vt0.c0, '[䀱'))))AND((t0.c2 IN ()))) CROSS JOIN vt0 ON (+ ((~ (rt0.c1)))) WHERE (vt0.c1) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((rtreenode(t0.c2, t0.c2))OR(NULLIF(vt0.c0, '[䀱'))))AND((t0.c2 IN ()))) CROSS JOIN vt0 ON (+ ((~ (rt0.c1)))) WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((rtreenode(t0.c2, t0.c2))OR(NULLIF(vt0.c0, '[䀱'))))AND((t0.c2 IN ()))) CROSS JOIN vt0 ON (+ ((~ (rt0.c1)))) WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((rtreenode(t0.c2, t0.c2))OR(NULLIF(vt0.c0, '[䀱'))))AND((t0.c2 IN ()))) CROSS JOIN vt0 ON (+ ((~ (rt0.c1))));
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN ()) WHERE ((+ (vt0.c1))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN ()) WHERE ((NOT ((+ (vt0.c1))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN ()) WHERE ((((+ (vt0.c1))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((NOT (rt0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((((((MAX(SUM(t0.c2)))OR(MAX(MIN(TOTAL(MAX(t0.c2)))))))AND(AVG(t0.c2))))AND(MAX(COUNT(t0.c2)))))AND(MAX(MIN(GROUP_CONCAT(TOTAL(t0.c2)))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((((((((MAX(SUM(t0.c2)))OR(MAX(MIN(TOTAL(MAX(t0.c2)))))))AND(AVG(t0.c2))))AND(MAX(COUNT(t0.c2)))))AND(MAX(MIN(GROUP_CONCAT(TOTAL(t0.c2)))))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((((((((MAX(SUM(t0.c2)))OR(MAX(MIN(TOTAL(MAX(t0.c2)))))))AND(AVG(t0.c2))))AND(MAX(COUNT(t0.c2)))))AND(MAX(MIN(GROUP_CONCAT(TOTAL(t0.c2))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1))) IS FALSE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c1))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c1))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2))<>((t0.c2))))OR((t0.c2 IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c2))!=((t0.c2))))OR((t0.c2 IN ())))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c2))<>((t0.c2))))OR((t0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0, rt0.c2 FROM rt0 INDEXED BY i73 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM rt0 NOT INDEXED, t0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING TOTAL(AVG(x'1398')) UNION ALL SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING (NOT (TOTAL(AVG(x'1398')))) UNION ALL SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING ((TOTAL(AVG(x'1398'))) ISNULL);
SELECT vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((('-72492968')) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND (((rt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((('-72492968')) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND (((rt0.c0 IN ()))))))) UNION ALL SELECT vt0.c1, rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE (((((('-72492968')) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND (((rt0.c0 IN ()))))) ISNULL));
SELECT vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0, t0.c2 FROM rt0, vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0, t0.c2 FROM rt0, vt0, t0 WHERE (((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END)AND(13372532)))OR((- (vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0, t0.c2 FROM rt0, vt0, t0 WHERE ((NOT (((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END)AND(13372532)))OR((- (vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0, t0.c2 FROM rt0, vt0, t0 WHERE (((((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END)AND(13372532)))OR((- (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c0, t0.c2 FROM rt0, vt0, t0;
SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(CAST(0.09422233119056245 AS TEXT) AS INTEGER) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(CAST(0.09422233119056245 AS TEXT) AS INTEGER) WHERE (CASE ((t0.c2) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN t0.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c0)))AND(t0.c2)) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(CAST(0.09422233119056245 AS TEXT) AS INTEGER) WHERE ((NOT (CASE ((t0.c2) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN t0.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c0)))AND(t0.c2)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(CAST(0.09422233119056245 AS TEXT) AS INTEGER) WHERE (((CASE ((t0.c2) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN t0.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c0)))AND(t0.c2)) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(CAST(0.09422233119056245 AS TEXT) AS INTEGER) GROUP BY rt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MIN(COUNT(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(COUNT(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(COUNT(vt0.c1))) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))OR(((rt0.c2) IS FALSE)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))OR(((rt0.c2) IS FALSE))) WHERE ((~ ((((rt0.c2))>=((rt0.c2)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))OR(((rt0.c2) IS FALSE))) WHERE ((NOT ((~ ((((rt0.c2))>=((rt0.c2)))))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))OR(((rt0.c2) IS FALSE))) WHERE ((((~ ((((rt0.c2))>=((rt0.c2)))))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))OR(((rt0.c2) IS FALSE)));
SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0 NOT INDEXED WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c1 FROM rt0, t0 NOT INDEXED, vt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0;
SELECT ALL vt0.c0, t0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c0, t0.c2, rt0.c2;
SELECT vt0.c0, t0.c2, rt0.c2 FROM t0, vt0, rt0 WHERE (CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN x'408b' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE 'G' END AS TEXT)) GROUP BY vt0.c0, t0.c2, rt0.c2 UNION SELECT ALL vt0.c0, t0.c2, rt0.c2 FROM t0, vt0, rt0 WHERE ((NOT (CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN x'408b' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE 'G' END AS TEXT)))) GROUP BY vt0.c0, t0.c2, rt0.c2 UNION SELECT ALL vt0.c0, t0.c2, rt0.c2 FROM t0, vt0, rt0 WHERE (((CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN x'408b' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE 'G' END AS TEXT)) ISNULL)) GROUP BY vt0.c0, t0.c2, rt0.c2;
SELECT ALL vt0.c0, t0.c2, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c0, t0.c2, rt0.c2;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 HAVING MIN(vt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 HAVING (NOT (MIN(vt0.c1 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 HAVING ((MIN(vt0.c1 COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 HAVING MIN(vt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 HAVING (NOT (MIN(vt0.c1 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 HAVING ((MIN(vt0.c1 COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c2, vt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NULL IN ((rt0.c0 IN ()), NULLIF(DISTINCT rt0.c2, vt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((NULL IN ((rt0.c0 IN ()), NULLIF(DISTINCT rt0.c2, vt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((NULL IN ((rt0.c0 IN ()), NULLIF(DISTINCT rt0.c2, vt0.c0)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((((vt0.c1)-(vt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((491523439)==(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((NOT (((((vt0.c1)-(vt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((491523439)=(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((((((vt0.c1)-(vt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((491523439)=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT rt0.c0, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM t0, rt0, vt0 WHERE (0X127a90c1) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM t0, rt0, vt0 WHERE ((NOT (0x127a90c1))) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM t0, rt0, vt0 WHERE (((0x127a90c1) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL vt0.c0, rt0.c1, vt0.c1, t0.c2, rt0.c2 FROM vt0 CROSS JOIN t0 ON (((rt0.c2)<<(vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON 2.144049287E9 GROUP BY vt0.c0, rt0.c1, vt0.c1, t0.c2, rt0.c2;
SELECT vt0.c0, rt0.c1, vt0.c1, t0.c2, rt0.c2 FROM vt0 CROSS JOIN t0 ON (((rt0.c2)<<(vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON 2.144049287E9 GROUP BY vt0.c0, rt0.c1, vt0.c1, t0.c2, rt0.c2 HAVING ((((CAST(rt0.c0 AS NUMERIC))OR((NOT (AVG(GROUP_CONCAT(COUNT(vt0.c0))))))))OR(rt0.c2)) UNION ALL SELECT vt0.c0, rt0.c1, vt0.c1, t0.c2, rt0.c2 FROM vt0 CROSS JOIN t0 ON (((rt0.c2)<<(vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON 2.144049287E9 GROUP BY vt0.c0, rt0.c1, vt0.c1, t0.c2, rt0.c2 HAVING (NOT (((((CAST(rt0.c0 AS NUMERIC))OR((NOT (AVG(GROUP_CONCAT(COUNT(vt0.c0))))))))OR(rt0.c2)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.c1, t0.c2, rt0.c2 FROM vt0 CROSS JOIN t0 ON (((rt0.c2)<<(vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON 2.144049287E9 GROUP BY vt0.c0, rt0.c1, vt0.c1, t0.c2, rt0.c2 HAVING ((((((CAST(rt0.c0 AS NUMERIC))OR((NOT (AVG(GROUP_CONCAT(COUNT(vt0.c0))))))))OR(rt0.c2))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((vt0.c1)%(vt0.c0)))AND(((vt0.c1)>=(vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c1)%(vt0.c0)))AND(((vt0.c1)>=(vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((vt0.c1)%(vt0.c0)))AND(((vt0.c1)>=(vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE CASE WHEN vt0.c1 THEN x'' END  WHEN (- (vt0.c1)) THEN NULL ELSE PRINTF(rt0.c0) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE CASE WHEN vt0.c1 THEN x'' END  WHEN (- (vt0.c1)) THEN NULL ELSE PRINTF(rt0.c0) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE CASE WHEN vt0.c1 THEN x'' END  WHEN (- (vt0.c1)) THEN NULL ELSE PRINTF(rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT NULL) GROUP BY rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT NULL) WHERE ((((t0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) GROUP BY rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT NULL) WHERE ((NOT ((((t0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM))) GROUP BY rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT NULL) WHERE ((((((t0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) LEFT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT NULL) GROUP BY rt0.c1, t0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT vt0.c1, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c2;
SELECT vt0.c1, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c2 HAVING COUNT(COUNT(vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c2 HAVING (NOT (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0, t0.c2 HAVING ((COUNT(COUNT(vt0.c0))) ISNULL);
SELECT rt0.c0 FROM rt0, vt0, t0;
SELECT ALL rt0.c0 FROM rt0, vt0, t0 WHERE (CASE WHEN UNLIKELY(rt0.c2) THEN (((rt0.c2))>=((t0.c2))) WHEN (NOT (vt0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN TIME(rt0.c0, NULL, t0.c2) THEN (vt0.c1 IN ()) ELSE CASE rt0.c0  WHEN vt0.c1 THEN rt0.c1 END END) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0, t0 WHERE ((NOT (CASE WHEN UNLIKELY(rt0.c2) THEN (((rt0.c2))>=((t0.c2))) WHEN (NOT (vt0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN TIME(rt0.c0, NULL, t0.c2) THEN (vt0.c1 IN ()) ELSE CASE rt0.c0  WHEN vt0.c1 THEN rt0.c1 END END))) UNION ALL SELECT rt0.c0 FROM rt0, vt0, t0 WHERE (((CASE WHEN UNLIKELY(rt0.c2) THEN (((rt0.c2))>=((t0.c2))) WHEN (NOT (vt0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN TIME(rt0.c0, NULL, t0.c2) THEN (vt0.c1 IN ()) ELSE CASE rt0.c0  WHEN vt0.c1 THEN rt0.c1 END END) ISNULL));
SELECT rt0.c0 FROM rt0, vt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((((t0.c2)IS(t0.c2)))AND(((rt0.c0) IS FALSE))))OR(vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (((((((t0.c2)IS(t0.c2)))AND(((rt0.c0) IS FALSE))))OR(vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((((((t0.c2)IS(t0.c2)))AND(((rt0.c0) IS FALSE))))OR(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, vt0.c1;
SELECT vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING (+ (((SUM(TOTAL(COUNT(*))))GLOB(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING (NOT ((+ (((SUM(TOTAL(COUNT(*))))GLOB(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, vt0.c1 HAVING (((+ (((SUM(TOTAL(COUNT(*))))GLOB(vt0.c0))))) ISNULL);
SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 NOT INDEXED WHERE (((((((vt0.c0) NOT NULL))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))))OR(CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((vt0.c0) NOT NULL))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))))OR(CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((((vt0.c0) NOT NULL))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))))OR(CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))==((((t0.c2)>>(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))==((((t0.c2)>>(vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))==((((t0.c2)>>(vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c1, rt0.c2, vt0.c0, t0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c0)))<>(((t0.c2)GLOB(0x235f6639)))) GROUP BY vt0.c1, rt0.c2, vt0.c0, t0.c2;
SELECT vt0.c1, rt0.c2, vt0.c0, t0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c0)))<>(((t0.c2)GLOB(0X235f6639)))) WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) COLLATE BINARY) GROUP BY vt0.c1, rt0.c2, vt0.c0, t0.c2 UNION SELECT vt0.c1, rt0.c2, vt0.c0, t0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c0)))<>(((t0.c2)GLOB(0x235f6639)))) WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) COLLATE BINARY))) GROUP BY vt0.c1, rt0.c2, vt0.c0, t0.c2 UNION SELECT ALL vt0.c1, rt0.c2, vt0.c0, t0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c0)))!=(((t0.c2)GLOB(0X235f6639)))) WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, rt0.c2, vt0.c0, t0.c2;
SELECT vt0.c1, rt0.c2, vt0.c0, t0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c0)))<>(((t0.c2)GLOB(0x235f6639)))) GROUP BY vt0.c1, rt0.c2, vt0.c0, t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING GROUP_CONCAT(TOTAL(t0.c2)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(t0.c2)))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((GROUP_CONCAT(TOTAL(t0.c2))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)<<(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND(IFNULL(DISTINCT rt0.c0, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c2)<<(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND(IFNULL(DISTINCT rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2)<<(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND(IFNULL(DISTINCT rt0.c0, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1 FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((rt0.c2)<>(1706657542)))>>((- (rt0.c2))))) GROUP BY rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1 FROM t0, vt0 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c2)!=(1706657542)))>>((- (rt0.c2))))))) GROUP BY rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1 FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c2)!=(1706657542)))>>((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c1, t0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c2)>>(vt0.c1 COLLATE RTRIM)) UNION ALL SELECT vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((rt0.c2)>>(vt0.c1 COLLATE RTRIM)))) UNION ALL SELECT vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c2)>>(vt0.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c2)>>(vt0.c1 COLLATE RTRIM)) UNION ALL SELECT vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((rt0.c2)>>(vt0.c1 COLLATE RTRIM)))) UNION ALL SELECT vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c2)>>(vt0.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, t0.c2, rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c1, t0.c2 FROM rt0, t0;
SELECT rt0.c0, rt0.c1, t0.c2 FROM rt0, t0 WHERE ((((rt0.c2)>=(rt0.c2)) IN ((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0, t0 NOT INDEXED WHERE ((NOT ((((rt0.c2)>=(rt0.c2)) IN ((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0, t0 WHERE ((((((rt0.c2)>=(rt0.c2)) IN ((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT rt0.c0, rt0.c1, t0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON ((508381373 COLLATE NOCASE)>>(((t0.c2) NOT BETWEEN (vt0.c1) AND (1.260222125E9))));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON ((508381373 COLLATE NOCASE)>>(((t0.c2) NOT BETWEEN (vt0.c1) AND (1.260222125E9)))) WHERE (CAST(((vt0.c1)>=(vt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON ((508381373 COLLATE NOCASE)>>(((t0.c2) NOT BETWEEN (vt0.c1) AND (1.260222125E9)))) WHERE ((NOT (CAST(((vt0.c1)>=(vt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON ((508381373 COLLATE NOCASE)>>(((t0.c2) NOT BETWEEN (vt0.c1) AND (1.260222125E9)))) WHERE (((CAST(((vt0.c1)>=(vt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON ((508381373 COLLATE NOCASE)>>(((t0.c2) NOT BETWEEN (vt0.c1) AND (1.260222125E9))));
SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0 FROM rt0, t0, vt0 WHERE (CAST(((vt0.c1)IS NOT(rt0.c0)) AS BLOB)) GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0 FROM rt0, t0 NOT INDEXED, vt0 WHERE ((NOT (CAST(((vt0.c1)IS NOT(rt0.c0)) AS BLOB)))) GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0 FROM rt0, t0 NOT INDEXED, vt0 WHERE (((CAST(((vt0.c1)IS NOT(rt0.c0)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1, t0.c2, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (t0.c2 IN ()) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON TRIM(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (t0.c2 IN ()) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON TRIM(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2))) GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(GROUP_CONCAT(MIN(MAX(MIN(GROUP_CONCAT(MAX(SUM(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (t0.c2 IN ()) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON TRIM(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2))) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MIN(MAX(MIN(GROUP_CONCAT(MAX(SUM(vt0.c0)))))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (t0.c2 IN ()) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON TRIM(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2))) GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(MIN(MAX(MIN(GROUP_CONCAT(MAX(SUM(vt0.c0))))))))) ISNULL);
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE ((rt0.c2)>(rt0.c0))  WHEN (((',鳳N')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c2) IS TRUE) END;
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE ((rt0.c2)>(rt0.c0))  WHEN (((',鳳N')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c2) IS TRUE) END WHERE ((vt0.c1 IN (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON CASE ((rt0.c2)>(rt0.c0))  WHEN (((',鳳N')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c2) IS TRUE) END WHERE ((NOT ((vt0.c1 IN (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON CASE ((rt0.c2)>(rt0.c0))  WHEN (((',鳳N')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c2) IS TRUE) END WHERE ((((vt0.c1 IN (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE ((rt0.c2)>(rt0.c0))  WHEN (((',鳳N')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c2) IS TRUE) END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c2) ISNULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c2) ISNULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c2) ISNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (json_patch((((NULL, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))), rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (json_patch((((NULL, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))), rt0.c2 COLLATE BINARY)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((json_patch((((NULL, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))), rt0.c2 COLLATE BINARY)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE ((NULL) IS TRUE)  WHEN MAX(rt0.c1) THEN MIN(rt0.c0) WHEN ((rt0.c2) IS TRUE) THEN SUM(rt0.c1) WHEN MIN(GROUP_CONCAT(SUM(rt0.c0))) THEN ((((rt0.c0)AND(MAX(AVG(rt0.c2)))))AND(COUNT(rt0.c1))) WHEN ((MIN(TOTAL(rt0.c0)))AND(TOTAL(rt0.c2))) THEN 0.6367780596411906 WHEN TOTAL(rt0.c0) THEN AVG(COUNT(*)) ELSE rt0.c0 END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE ((NULL) IS TRUE)  WHEN MAX(rt0.c1) THEN MIN(rt0.c0) WHEN ((rt0.c2) IS TRUE) THEN SUM(rt0.c1) WHEN MIN(GROUP_CONCAT(SUM(rt0.c0))) THEN ((((rt0.c0)AND(MAX(AVG(rt0.c2)))))AND(COUNT(rt0.c1))) WHEN ((MIN(TOTAL(rt0.c0)))AND(TOTAL(rt0.c2))) THEN 0.6367780596411906 WHEN TOTAL(rt0.c0) THEN AVG(COUNT(*)) ELSE rt0.c0 END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE ((NULL) IS TRUE)  WHEN MAX(rt0.c1) THEN MIN(rt0.c0) WHEN ((rt0.c2) IS TRUE) THEN SUM(rt0.c1) WHEN MIN(GROUP_CONCAT(SUM(rt0.c0))) THEN ((((rt0.c0)AND(MAX(AVG(rt0.c2)))))AND(COUNT(rt0.c1))) WHEN ((MIN(TOTAL(rt0.c0)))AND(TOTAL(rt0.c2))) THEN 0.6367780596411906 WHEN TOTAL(rt0.c0) THEN AVG(COUNT(*)) ELSE rt0.c0 END) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)-(NULL))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((vt0.c1)-(NULL))) IS FALSE)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1)-(NULL))) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((+ (((t0.c2)<>(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((+ (((t0.c2)!=(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((+ (((t0.c2)<>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS(x'')) INNER JOIN rt0 ON (- (((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))) GROUP BY rt0.c0, t0.c2;
SELECT rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS(x'')) INNER JOIN rt0 ON (- (((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))) WHERE ((+ (((rt0.c1)OR(vt0.c1))))) GROUP BY rt0.c0, t0.c2 UNION SELECT rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS(x'')) INNER JOIN rt0 ON (- (((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))) WHERE ((NOT ((+ (((rt0.c1)OR(vt0.c1))))))) GROUP BY rt0.c0, t0.c2 UNION SELECT ALL rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS(x'')) INNER JOIN rt0 ON (- (((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))) WHERE ((((+ (((rt0.c1)OR(vt0.c1))))) ISNULL)) GROUP BY rt0.c0, t0.c2;
SELECT ALL rt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS(x'')) INNER JOIN rt0 ON (- (((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))) GROUP BY rt0.c0, t0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, vt0.c1, t0.c2 FROM t0, vt0;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 WHERE (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))), ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), ((((t0.c2)AND(t0.c2)))OR(vt0.c1))))=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c2)), (- ('')))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))), ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), ((((t0.c2)AND(t0.c2)))OR(vt0.c1))))=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c2)), (- ('')))))))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 WHERE (((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))), ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), ((((t0.c2)AND(t0.c2)))OR(vt0.c1))))==(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c2)), (- ('')))))) ISNULL));
SELECT vt0.c0, vt0.c1, t0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ('-958456367') UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT ('-958456367'))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((('-958456367') ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (TRIM(DISTINCT (t0.c2 IN ()), (NULL IN ()))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (TRIM(DISTINCT (t0.c2 IN ()), (NULL IN ()))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((TRIM(DISTINCT (t0.c2 IN ()), (NULL IN ()))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL rt0.c1, vt0.c1, t0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c2;
SELECT rt0.c1, vt0.c1, t0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c2 HAVING ((COUNT(*)) NOT BETWEEN (AVG(rt0.c1)) AND (AVG(COUNT(GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT rt0.c1, vt0.c1, t0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c2 HAVING (NOT (((COUNT(*)) NOT BETWEEN (AVG(rt0.c1)) AND (AVG(COUNT(GROUP_CONCAT(vt0.c1))))))) UNION ALL SELECT rt0.c1, vt0.c1, t0.c2 FROM rt0, t0 NOT INDEXED, vt0 GROUP BY rt0.c1, vt0.c1, t0.c2 HAVING ((((COUNT(*)) NOT BETWEEN (AVG(rt0.c1)) AND (AVG(COUNT(GROUP_CONCAT(vt0.c1)))))) ISNULL);
SELECT MIN(((vt0.c0) IS TRUE)) FROM vt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c1)IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1)IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c1)IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (UPPER(DISTINCT ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (UPPER(DISTINCT ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((UPPER(DISTINCT ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((~ (((rt0.c0)||(-6.98527866E8))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT ((~ (((rt0.c0)||(-6.98527866E8))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((~ (((rt0.c0)||(-6.98527866E8))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0, rt0, t0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, t0.c2;
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, t0.c2 HAVING LIKELIHOOD(MIN(MIN(t0.c2)), 0.7587852869770237) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, t0.c2 HAVING (NOT (LIKELIHOOD(MIN(MIN(t0.c2)), 0.7587852869770237))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, t0.c2 HAVING ((LIKELIHOOD(MIN(MIN(t0.c2)), 0.7587852869770237)) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0, t0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0, t0 WHERE (CAST((rt0.c2 IN (vt0.c0, t0.c2)) AS TEXT)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0, t0 WHERE ((NOT (CAST((rt0.c2 IN (vt0.c0, t0.c2)) AS TEXT)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0, t0 WHERE (((CAST((rt0.c2 IN (vt0.c0, t0.c2)) AS TEXT)) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0, t0;
SELECT DISTINCT t0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c2 FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c2)<<(vt0.c1)))) AND ((CAST(vt0.c1 AS TEXT))))) UNION SELECT DISTINCT t0.c2 FROM t0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((t0.c2)<<(vt0.c1)))) AND ((CAST(vt0.c1 AS TEXT))))))) UNION SELECT DISTINCT t0.c2 FROM t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((((t0.c2)<<(vt0.c1)))) AND ((CAST(vt0.c1 AS TEXT))))) ISNULL));
SELECT DISTINCT t0.c2 FROM t0, vt0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (NULL) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (NULL))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(AVG(SUM(vt0.c0))))IS NOT(AVG(MAX(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((SUM(AVG(SUM(vt0.c0))))IS NOT(AVG(MAX(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((SUM(AVG(SUM(vt0.c0))))IS NOT(AVG(MAX(vt0.c1))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)>=(0.0029909473275638865))  WHEN x'7daa' THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(x'')))OR(vt0.c1)) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)>=(0.0029909473275638865))  WHEN x'7daa' THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(x'')))OR(vt0.c1)) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)>=(0.0029909473275638865))  WHEN x'7daa' THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(x'')))OR(vt0.c1)) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((((((rt0.c1)GLOB(rt0.c0))))>=((((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT ((((((rt0.c1)GLOB(rt0.c0))))>=((((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((((((((rt0.c1)GLOB(rt0.c0))))>=((((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (NULL) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((((CAST(rt0.c1 AS NUMERIC))AND((vt0.c0 IN (t0.c2)))))OR(SQLITE_COMPILEOPTION_GET('-1896661592'))))OR(CAST(rt0.c1 AS NUMERIC))))AND(-1425855036)) FULL OUTER JOIN rt0 ON (~ (((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))) GROUP BY vt0.c1, t0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL MIN((((((rt0.c0)AND(rt0.c0)), vt0.c0, 1.706657542E9))>((((((vt0.c1)OR('')))OR(rt0.c0)), ((vt0.c1)/(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END)))) FROM rt0, t0, vt0 ORDER BY ((((vt0.c0) NOT NULL))<=(ABS(t0.c2)))  NULLS FIRST;
SELECT rt0.c1, t0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt0, t0, rt0;
SELECT ALL rt0.c1, t0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt0, t0, rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c1, t0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt0, t0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c1, t0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt0, t0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c1, t0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt0, t0, rt0;
SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(IFNULL(rt0.c0, vt0.c1) AS INTEGER);
SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(IFNULL(rt0.c0, vt0.c1) AS INTEGER) WHERE ((CAST(vt0.c0 AS REAL) IN ())) UNION SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(IFNULL(rt0.c0, vt0.c1) AS INTEGER) WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN ())))) UNION SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(IFNULL(rt0.c0, vt0.c1) AS INTEGER) WHERE ((((CAST(vt0.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(IFNULL(rt0.c0, vt0.c1) AS INTEGER);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((NOT (rt0.c1)))%(NULL))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((NOT (rt0.c1)))%(NULL))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((((NOT (rt0.c1)))%(NULL))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c0 HAVING MIN(MIN(COUNT(t0.c2))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c0 HAVING (NOT (MIN(MIN(COUNT(t0.c2))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c0 HAVING ((MIN(MIN(COUNT(t0.c2)))) ISNULL);
SELECT * FROM rt0, t0, vt0;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c2)) BETWEEN (((NOT (rt0.c1)))) AND ((vt0.c1 COLLATE RTRIM)))) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((NOT (rt0.c1)))) AND ((vt0.c1 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c2)) BETWEEN (((NOT (rt0.c1)))) AND ((vt0.c1 COLLATE RTRIM)))) ISNULL));
SELECT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOTNULL))OR((rt0.c2 IN ()))))OR((~ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c0) NOTNULL))OR((rt0.c2 IN ()))))OR((~ (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0) NOTNULL))OR((rt0.c2 IN ()))))OR((~ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE ('1800628600') GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT ('1800628600'))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((('1800628600') ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, t0.c2;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, t0.c2 HAVING GROUP_CONCAT(CASE rt0.c1  WHEN TOTAL(rt0.c2) THEN COUNT(MAX(vt0.c0)) ELSE t0.c2 END) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT(CASE rt0.c1  WHEN TOTAL(rt0.c2) THEN COUNT(MAX(vt0.c0)) ELSE t0.c2 END))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, t0.c2 HAVING ((GROUP_CONCAT(CASE rt0.c1  WHEN TOTAL(rt0.c2) THEN COUNT(MAX(vt0.c0)) ELSE t0.c2 END)) ISNULL);
SELECT t0.c2, rt0.c0 FROM t0, rt0;
SELECT t0.c2, rt0.c0 FROM t0, rt0 WHERE (QUOTE(0.6231374214925133)) UNION ALL SELECT t0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (QUOTE(0.6231374214925133)))) UNION ALL SELECT ALL t0.c2, rt0.c0 FROM t0, rt0 WHERE (((QUOTE(0.6231374214925133)) ISNULL));
SELECT t0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON ((vt0.c0)>>(vt0.c0)) COLLATE BINARY FULL OUTER JOIN vt0 ON (+ ((((vt0.c0, vt0.c0, rt0.c1, 0.8269163609838475, t0.c2)) NOT BETWEEN ((rt0.c1, vt0.c1, rt0.c2, rt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, 0.7930913835088403, 0.6253196105514146, 0.4543234028193732)))));
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE (CAST((+ (t0.c2)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (CAST((+ (t0.c2)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((CAST((+ (t0.c2)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1 HAVING CAST((((SUM(rt0.c2)))<=((rt0.c0))) AS TEXT) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1 HAVING (NOT (CAST((((SUM(rt0.c2)))<=((rt0.c0))) AS TEXT))) UNION ALL SELECT rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1 HAVING ((CAST((((SUM(rt0.c2)))<=((rt0.c0))) AS TEXT)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1 HAVING CAST((((SUM(rt0.c2)))<=((rt0.c0))) AS TEXT) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1 HAVING (NOT (CAST((((SUM(rt0.c2)))<=((rt0.c0))) AS TEXT))) UNION ALL SELECT rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1 HAVING ((CAST((((SUM(rt0.c2)))<=((rt0.c0))) AS TEXT)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, t0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, t0.c2, rt0.c1;
SELECT * FROM vt0, t0, rt0;
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c1) IS FALSE))))) UNION ALL SELECT * FROM vt0, t0, rt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c1) IS FALSE))))))) UNION ALL SELECT ALL * FROM vt0, t0 NOT INDEXED, rt0 WHERE ((((((vt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c1) IS FALSE))))) ISNULL));
SELECT * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((rt0.c0)>(t0.c2))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((NOT (((rt0.c0)>(t0.c2))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((NOT (((rt0.c0)>(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1))<((vt0.c0))))>=(vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1))<((vt0.c0))))>=(vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((vt0.c1))<((vt0.c0))))>=(vt0.c1))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(((((AVG(MAX(rt0.c1)))AND(MAX(rt0.c2))))OR(SUM(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(((((AVG(MAX(rt0.c1)))AND(MAX(rt0.c2))))OR(SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(((((AVG(MAX(rt0.c1)))AND(MAX(rt0.c2))))OR(SUM(rt0.c0))))) ISNULL);
SELECT t0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, vt0;
SELECT ALL t0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, vt0 WHERE (LOWER(((rt0.c1)/(rt0.c2)))) UNION ALL SELECT ALL t0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, vt0 WHERE ((NOT (LOWER(((rt0.c1)/(rt0.c2)))))) UNION ALL SELECT t0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, vt0 WHERE (((LOWER(((rt0.c1)/(rt0.c2)))) ISNULL));
SELECT t0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, vt0;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (CASE ((t0.c2)IS(t0.c2))  WHEN ((t0.c2)=(t0.c2)) THEN TRIM(t0.c2, t0.c2) WHEN (t0.c2 IN (t0.c2)) THEN ((t0.c2) NOT NULL) WHEN ((t0.c2) IS TRUE) THEN (NOT (t0.c2)) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) WHEN TOTAL_CHANGES() THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c2 AS INTEGER) END) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (CASE ((t0.c2)IS(t0.c2))  WHEN ((t0.c2)==(t0.c2)) THEN TRIM(t0.c2, t0.c2) WHEN (t0.c2 IN (t0.c2)) THEN ((t0.c2) NOT NULL) WHEN ((t0.c2) IS TRUE) THEN (NOT (t0.c2)) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) WHEN TOTAL_CHANGES() THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c2 AS INTEGER) END))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((CASE ((t0.c2)IS(t0.c2))  WHEN ((t0.c2)==(t0.c2)) THEN TRIM(t0.c2, t0.c2) WHEN (t0.c2 IN (t0.c2)) THEN ((t0.c2) NOT NULL) WHEN ((t0.c2) IS TRUE) THEN (NOT (t0.c2)) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) WHEN TOTAL_CHANGES() THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c2 AS INTEGER) END) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT ALL rt0.c0, t0.c2, vt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((MAX(rt0.c1, rt0.c2)) IS TRUE) GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c2, vt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((MAX(rt0.c1, rt0.c2)) IS TRUE) WHERE (LOWER(0.1276502326165696)) GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2 UNION SELECT rt0.c0, t0.c2, vt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((MAX(rt0.c1, rt0.c2)) IS TRUE) WHERE ((NOT (LOWER(0.1276502326165696)))) GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2 UNION SELECT rt0.c0, t0.c2, vt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((MAX(rt0.c1, rt0.c2)) IS TRUE) WHERE (((LOWER(0.1276502326165696)) ISNULL)) GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c2, vt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((MAX(rt0.c1, rt0.c2)) IS TRUE) GROUP BY rt0.c0, t0.c2, vt0.c0, rt0.c2;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING COUNT(MIN(0.11646504679982506)) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(MIN(0.11646504679982506)))) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING ((COUNT(MIN(0.11646504679982506))) ISNULL);
SELECT ALL t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE ((- (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((- (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((((- (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT t0.c2, rt0.c1 FROM t0, vt0 CROSS JOIN rt0 ON ((rt0.c0)>=(t0.c2)) COLLATE RTRIM;
SELECT DISTINCT t0.c2, rt0.c1 FROM t0, vt0 CROSS JOIN rt0 ON ((rt0.c0)>=(t0.c2)) COLLATE RTRIM WHERE ((~ ((((rt0.c1))>=((rt0.c2)))))) UNION SELECT DISTINCT t0.c2, rt0.c1 FROM t0, vt0 CROSS JOIN rt0 ON ((rt0.c0)>=(t0.c2)) COLLATE RTRIM WHERE ((NOT ((~ ((((rt0.c1))>=((rt0.c2)))))))) UNION SELECT DISTINCT t0.c2, rt0.c1 FROM t0, vt0 CROSS JOIN rt0 ON ((rt0.c0)>=(t0.c2)) COLLATE RTRIM WHERE ((((~ ((((rt0.c1))>=((rt0.c2)))))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c1 FROM t0, vt0 CROSS JOIN rt0 ON ((rt0.c0)>=(t0.c2)) COLLATE RTRIM;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((((vt0.c0)) BETWEEN (('0.9435076484052608')) AND (('509763319'))))) GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((((vt0.c0)) BETWEEN (('0.9435076484052608')) AND (('509763319'))))) WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.04901380829173585)) COLLATE NOCASE COLLATE NOCASE) GROUP BY vt0.c0, vt0.c1, t0.c2 UNION SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((((vt0.c0)) BETWEEN (('0.9435076484052608')) AND (('509763319'))))) WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.04901380829173585)) COLLATE NOCASE COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1, t0.c2 UNION SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((((vt0.c0)) BETWEEN (('0.9435076484052608')) AND (('509763319'))))) WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.04901380829173585)) COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((((vt0.c0)) BETWEEN (('0.9435076484052608')) AND (('509763319'))))) GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) NOT NULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) NOT NULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c0, NULL, vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c0, NULL, vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c0, NULL, vt0.c1)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c2, t0.c2 FROM vt0, t0, rt0;
SELECT DISTINCT vt0.c1, rt0.c2, t0.c2 FROM vt0, t0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT vt0.c1, rt0.c2, t0.c2 FROM vt0, t0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT vt0.c1, rt0.c2, t0.c2 FROM vt0, t0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, t0.c2 FROM vt0, t0, rt0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((+ (rt0.c0)) IN ('-50026925'))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((NOT (((+ (rt0.c0)) IN ('-50026925'))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((((+ (rt0.c0)) IN ('-50026925'))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (rt0.c1) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0, vt0 WHERE (((CAST(rt0.c2 AS REAL)) NOTNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0, vt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) NOTNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0, vt0 WHERE (((((CAST(rt0.c2 AS REAL)) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0, vt0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE ((((+ (t0.c2))) BETWEEN (t0.c2) AND (((t0.c2)IS NOT(NULL))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((((+ (t0.c2))) BETWEEN (t0.c2) AND (((t0.c2)IS NOT(NULL))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((((((+ (t0.c2))) BETWEEN (t0.c2) AND (((t0.c2)IS NOT(NULL))))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2;
SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2 HAVING (+ (((rt0.c0) NOTNULL))) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2 HAVING (NOT ((+ (((rt0.c0) NOTNULL))))) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2 HAVING (((+ (((rt0.c0) NOTNULL)))) ISNULL);
SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2;
SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2 HAVING (+ (((rt0.c0) NOTNULL))) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2 HAVING (NOT ((+ (((rt0.c0) NOTNULL))))) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2 HAVING (((+ (((rt0.c0) NOTNULL)))) ISNULL);
SELECT rt0.c1, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 GROUP BY rt0.c1, vt0.c1, rt0.c0, t0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN (((rt0.c0)<<('''XIWI	gO'))));
SELECT DISTINCT vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN (((rt0.c0)<<('''XIWI	gO')))) WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE ((rt0.c1)LIKE(vt0.c0)) END) UNION SELECT DISTINCT vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN (((rt0.c0)<<('''XIWI	gO')))) WHERE ((NOT (CASE CAST(rt0.c2 AS TEXT)  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE ((rt0.c1)LIKE(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN (((rt0.c0)<<('''XIWI	gO')))) WHERE (((CASE CAST(rt0.c2 AS TEXT)  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE ((rt0.c1)LIKE(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN (((rt0.c0)<<('''XIWI	gO'))));
SELECT vt0.c1, rt0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM vt0, t0, rt0 WHERE (((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2))) NOT BETWEEN ((vt0.c0 IN (rt0.c2, vt0.c1))) AND (((vt0.c0)||(vt0.c0))))) GROUP BY vt0.c1, rt0.c2 UNION SELECT vt0.c1, rt0.c2 FROM vt0, t0, rt0 WHERE ((NOT (((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2))) NOT BETWEEN ((vt0.c0 IN (rt0.c2, vt0.c1))) AND (((vt0.c0)||(vt0.c0))))))) GROUP BY vt0.c1, rt0.c2 UNION SELECT vt0.c1, rt0.c2 FROM vt0, t0, rt0 WHERE (((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2))) NOT BETWEEN ((vt0.c0 IN (rt0.c2, vt0.c1))) AND (((vt0.c0)||(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1;
SELECT ALL rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1 HAVING GROUP_CONCAT(TYPEOF(AVG(vt0.c0))) UNION ALL SELECT rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1 HAVING (NOT (GROUP_CONCAT(TYPEOF(AVG(vt0.c0))))) UNION ALL SELECT ALL rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1 HAVING ((GROUP_CONCAT(TYPEOF(AVG(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ('-725295571') UNION ALL SELECT * FROM rt0 WHERE ((NOT ('-725295571'))) UNION ALL SELECT * FROM rt0 WHERE ((('-725295571') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0, vt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0, vt0 WHERE (((CASE WHEN 0.5137424317910211 THEN rt0.c0 END) IS TRUE)) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0, vt0 WHERE ((NOT (((CASE WHEN 0.5137424317910211 THEN rt0.c0 END) IS TRUE)))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0, vt0 WHERE (((((CASE WHEN 0.5137424317910211 THEN rt0.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0, vt0;
SELECT ALL t0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c2, rt0.c1;
SELECT t0.c2, rt0.c1 FROM t0, rt0 WHERE (UPPER(DISTINCT ((((((((rt0.c1)OR(t0.c2)))AND(t0.c2)))OR(rt0.c1)))OR(rt0.c0)))) GROUP BY t0.c2, rt0.c1 UNION SELECT ALL t0.c2, rt0.c1 FROM t0 NOT INDEXED, rt0 WHERE ((NOT (UPPER(DISTINCT ((((((((rt0.c1)OR(t0.c2)))AND(t0.c2)))OR(rt0.c1)))OR(rt0.c0)))))) GROUP BY t0.c2, rt0.c1 UNION SELECT ALL t0.c2, rt0.c1 FROM t0, rt0 WHERE (((UPPER(DISTINCT ((((((((rt0.c1)OR(t0.c2)))AND(t0.c2)))OR(rt0.c1)))OR(rt0.c0)))) ISNULL)) GROUP BY t0.c2, rt0.c1;
SELECT ALL t0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c2, rt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((vt0.c0 IN ()))!=(SUM(MAX(COUNT(0.8480629806584336))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((vt0.c0 IN ()))<>(SUM(MAX(COUNT(0.8480629806584336))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((vt0.c0 IN ()))<>(SUM(MAX(COUNT(0.8480629806584336)))))) ISNULL);
SELECT ALL t0.c2, vt0.c0, rt0.c1 FROM t0, vt0, rt0;
SELECT t0.c2, vt0.c0, rt0.c1 FROM t0, vt0, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)>((~ ('/*&,E'))))) UNION ALL SELECT ALL t0.c2, vt0.c0, rt0.c1 FROM t0, vt0 NOT INDEXED, rt0 WHERE ((NOT (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)>((~ ('/*&,E'))))))) UNION ALL SELECT t0.c2, vt0.c0, rt0.c1 FROM t0, vt0, rt0 WHERE (((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)>((~ ('/*&,E'))))) ISNULL));
SELECT ALL t0.c2, vt0.c0, rt0.c1 FROM t0, vt0, rt0;
SELECT DISTINCT t0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c2 FROM rt0, t0 WHERE (((((((rt0.c0)GLOB(rt0.c2)))OR(NULL)))OR(((t0.c2)<>(rt0.c2))))) UNION SELECT DISTINCT t0.c2 FROM rt0, t0 WHERE ((NOT (((((((rt0.c0)GLOB(rt0.c2)))OR(NULL)))OR(((t0.c2)!=(rt0.c2))))))) UNION SELECT DISTINCT t0.c2 FROM rt0, t0 WHERE (((((((((rt0.c0)GLOB(rt0.c2)))OR(NULL)))OR(((t0.c2)!=(rt0.c2))))) ISNULL));
SELECT DISTINCT t0.c2 FROM rt0, t0;
SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0 INDEXED BY i63 CROSS JOIN vt0 ON 0.6072584019314965 RIGHT OUTER JOIN t0 ON ((LIKELIHOOD(vt0.c1, 0.518626032620446))IS NOT((rt0.c2 IN ()))) GROUP BY rt0.c0, t0.c2, vt0.c1;
SELECT ALL rt0.c2, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING COUNT((- (TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (COUNT((- (TOTAL(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((COUNT((- (TOTAL(rt0.c2))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE WHEN x'' THEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE WHEN x'' THEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE WHEN x'' THEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END END) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)*((rt0.c1 IN ())));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)*((rt0.c1 IN ()))) WHERE (vt0.c1) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)*((rt0.c1 IN ()))) WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)*((rt0.c1 IN ()))) WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (rt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)*((rt0.c1 IN ())));
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((x'')!=(x''))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((x'')<>(x''))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((x'')!=(x''))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(MAX(vt0.c1))) NOTNULL) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((COUNT(MAX(vt0.c1))) NOTNULL))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COUNT(MAX(vt0.c1))) NOTNULL)) ISNULL);
SELECT * FROM rt0, vt0, t0;
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'') UNION ALL SELECT * FROM rt0, vt0, t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE (((x'') ISNULL));
SELECT * FROM rt0, vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE (vt0.c1 COLLATE NOCASE) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE (((vt0.c1 COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c2 FROM t0, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (UPPER(((vt0.c1)GLOB(vt0.c0)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (UPPER(((vt0.c1)GLOB(vt0.c0)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((UPPER(((vt0.c1)GLOB(vt0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1 HAVING ((((rt0.c1)<('n\')))>(((rt0.c2) IS FALSE))) UNION ALL SELECT ALL rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1 HAVING (NOT (((((rt0.c1)<('n\')))>(((rt0.c2) IS FALSE))))) UNION ALL SELECT rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1 HAVING ((((((rt0.c1)<('n\')))>(((rt0.c2) IS FALSE)))) ISNULL);
SELECT rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1 HAVING ((((rt0.c1)<('n\')))>(((rt0.c2) IS FALSE))) UNION ALL SELECT ALL rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1 HAVING (NOT (((((rt0.c1)<('n\')))>(((rt0.c2) IS FALSE))))) UNION ALL SELECT rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1 HAVING ((((((rt0.c1)<('n\')))>(((rt0.c2) IS FALSE)))) ISNULL);
SELECT rt0.c1 FROM vt0 INNER JOIN rt0 ON LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END, ((rt0.c0)LIKE(vt0.c1)), 'O') GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0;
SELECT rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((t0.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c2)/(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((t0.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c2)/(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((((t0.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c2)/(rt0.c2)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE ((t0.c2 IN (((t0.c2)+(t0.c2)), t0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT ((t0.c2 IN (((t0.c2)+(t0.c2)), t0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((((t0.c2 IN (((t0.c2)+(t0.c2)), t0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1))) NOTNULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c1))) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1))) NOTNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c2)=(rt0.c0)))) AND (((((((((('633157020')AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, t0.c2, rt0.c2;
SELECT rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c2)=(rt0.c0)))) AND (((((((((('633157020')AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, t0.c2, rt0.c2 HAVING AVG(SUM(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c2)=(rt0.c0)))) AND (((((((((('633157020')AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, t0.c2, rt0.c2 HAVING (NOT (AVG(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c2)=(rt0.c0)))) AND (((((((((('633157020')AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, t0.c2, rt0.c2 HAVING ((AVG(SUM(rt0.c0))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 INDEXED BY i73;
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (CAST(0xffffffffb3c5cc6f AS TEXT)) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT (CAST(0Xffffffffb3c5cc6f AS TEXT)))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((CAST(0xffffffffb3c5cc6f AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE ((((((((((0.4545851734746844 IN (t0.c2)))AND(CASE WHEN t0.c2 THEN '705330237' ELSE t0.c2 END)))AND(((((t0.c2)OR(NULL)))AND('-909022773')))))OR((NOT (t0.c2)))))OR((t0.c2 IN ())))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((((((((((0.4545851734746844 IN (t0.c2)))AND(CASE WHEN t0.c2 THEN '705330237' ELSE t0.c2 END)))AND(((((t0.c2)OR(NULL)))AND('-909022773')))))OR((NOT (t0.c2)))))OR((t0.c2 IN ())))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((((((((((((0.4545851734746844 IN (t0.c2)))AND(CASE WHEN t0.c2 THEN '705330237' ELSE t0.c2 END)))AND(((((t0.c2)OR(NULL)))AND('-909022773')))))OR((NOT (t0.c2)))))OR((t0.c2 IN ())))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MIN(SUM(t0.c2))) NOT NULL) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((MIN(SUM(t0.c2))) NOT NULL))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((MIN(SUM(t0.c2))) NOT NULL)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1)))) BETWEEN (rt0.c2) AND (((((vt0.c0)OR(rt0.c2)))AND(vt0.c1))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1)))) BETWEEN (rt0.c2) AND (((((vt0.c0)OR(rt0.c2)))AND(vt0.c1))))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((((((((rt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1)))) BETWEEN (rt0.c2) AND (((((vt0.c0)OR(rt0.c2)))AND(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (0X2cfecf1e) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (0X2cfecf1e))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((0X2cfecf1e) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT t0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON (~ (IFNULL(vt0.c0, rt0.c0))) RIGHT OUTER JOIN t0 ON CAST((NOT (rt0.c1)) AS INTEGER) GROUP BY t0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL t0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON (~ (IFNULL(vt0.c0, rt0.c0))) RIGHT OUTER JOIN t0 ON CAST((NOT (rt0.c1)) AS INTEGER) GROUP BY t0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1 HAVING (((vt0.c1)) BETWEEN ((AVG(AVG(vt0.c1)))) AND ((COUNT(NULL)))) UNION ALL SELECT t0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON (~ (IFNULL(vt0.c0, rt0.c0))) RIGHT OUTER JOIN t0 ON CAST((NOT (rt0.c1)) AS INTEGER) GROUP BY t0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1 HAVING (NOT ((((vt0.c1)) BETWEEN ((AVG(AVG(vt0.c1)))) AND ((COUNT(NULL)))))) UNION ALL SELECT ALL t0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON (~ (IFNULL(vt0.c0, rt0.c0))) RIGHT OUTER JOIN t0 ON CAST((NOT (rt0.c1)) AS INTEGER) GROUP BY t0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt0.c1 HAVING (((((vt0.c1)) BETWEEN ((AVG(AVG(vt0.c1)))) AND ((COUNT(NULL))))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((((((NOT (rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(0.5062368807581513))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((((((NOT (rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(0.5062368807581513))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((((((NOT (rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(0.5062368807581513))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (((CASE WHEN 0.8690493565646801 THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((NOT (((CASE WHEN 0.8690493565646801 THEN rt0.c2 ELSE rt0.c2 END) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (((((CASE WHEN 0.8690493565646801 THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0.16478134267519629 THEN vt0.c1 WHEN 0.5278583912250114 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)LIKE((vt0.c1 IN ())))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0.16478134267519629 THEN vt0.c1 WHEN 0.5278583912250114 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)LIKE((vt0.c1 IN ())))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0.16478134267519629 THEN vt0.c1 WHEN 0.5278583912250114 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)LIKE((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(((rt0.c2) IS FALSE)) UNION ALL SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(((rt0.c2) IS FALSE))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(((rt0.c2) IS FALSE)) UNION ALL SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(((rt0.c2) IS FALSE))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((vt0.c0)IS NOT(rt0.c1))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (((9.20240876E8)==((((vt0.c1, vt0.c1, vt0.c1, t0.c2, t0.c2))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((9.20240876E8)==((((vt0.c1, vt0.c1, vt0.c1, t0.c2, t0.c2))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))))))) UNION ALL SELECT * FROM t0, vt0 WHERE (((((9.20240876E8)==((((vt0.c1, vt0.c1, vt0.c1, t0.c2, t0.c2))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE (((x'') ISNULL)) UNION SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE ((NOT (((x'') ISNULL)))) UNION SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE (((((x'') ISNULL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM rt0, vt0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE ((((+ (t0.c2)))GLOB((((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((NULL, t0.c2, t0.c2)))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT ((((+ (t0.c2)))GLOB((((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((NULL, t0.c2, t0.c2)))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((((((+ (t0.c2)))GLOB((((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((NULL, t0.c2, t0.c2)))))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING MIN(((COUNT(rt0.c2)) NOT BETWEEN (GROUP_CONCAT(TOTAL(rt0.c2))) AND (0x60bfe15c))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (MIN(((COUNT(rt0.c2)) NOT BETWEEN (GROUP_CONCAT(TOTAL(rt0.c2))) AND (0x60bfe15c))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING ((MIN(((COUNT(rt0.c2)) NOT BETWEEN (GROUP_CONCAT(TOTAL(rt0.c2))) AND (0X60bfe15c)))) ISNULL);
SELECT t0.c2 FROM t0 NATURAL JOIN vt0;
SELECT t0.c2 FROM t0 NATURAL JOIN vt0 WHERE (((((vt0.c1)>=(t0.c2))) NOT BETWEEN ('{7a*_4%') AND (vt0.c0))) UNION ALL SELECT ALL t0.c2 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((((vt0.c1)>=(t0.c2))) NOT BETWEEN ('{7a*_4%') AND (vt0.c0))))) UNION ALL SELECT ALL t0.c2 FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c1)>=(t0.c2))) NOT BETWEEN ('{7a*_4%') AND (vt0.c0))) ISNULL));
SELECT t0.c2 FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND((((vt0.c1)) NOT BETWEEN (('907349332')) AND ((vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND((((vt0.c1)) NOT BETWEEN (('907349332')) AND ((vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0 IN ()))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND((((vt0.c1)) NOT BETWEEN (('907349332')) AND ((vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, t0.c2, rt0.c0 FROM t0 INNER JOIN rt0 ON LOWER(((rt0.c1) NOT BETWEEN (NULL) AND (0X6b012c8b))) GROUP BY rt0.c1, t0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c2, rt0.c0 FROM t0 INNER JOIN rt0 ON LOWER(((rt0.c1) NOT BETWEEN (NULL) AND (0x6b012c8b))) WHERE ((~ ((+ (t0.c2))))) GROUP BY rt0.c1, t0.c2, rt0.c0 UNION SELECT ALL rt0.c1, t0.c2, rt0.c0 FROM t0 INNER JOIN rt0 ON LOWER(((rt0.c1) NOT BETWEEN (NULL) AND (0X6b012c8b))) WHERE ((NOT ((~ ((+ (t0.c2))))))) GROUP BY rt0.c1, t0.c2, rt0.c0 UNION SELECT ALL rt0.c1, t0.c2, rt0.c0 FROM t0 INNER JOIN rt0 ON LOWER(((rt0.c1) NOT BETWEEN (NULL) AND (0x6b012c8b))) WHERE ((((~ ((+ (t0.c2))))) ISNULL)) GROUP BY rt0.c1, t0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c2, rt0.c0 FROM t0 INNER JOIN rt0 ON LOWER(((rt0.c1) NOT BETWEEN (NULL) AND (0X6b012c8b))) GROUP BY rt0.c1, t0.c2, rt0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((AVG(t0.c2) COLLATE BINARY) NOT NULL) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((AVG(t0.c2) COLLATE BINARY) NOT NULL))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((AVG(t0.c2) COLLATE BINARY) NOT NULL)) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((AVG(t0.c2) COLLATE BINARY) NOT NULL) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((AVG(t0.c2) COLLATE BINARY) NOT NULL))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((AVG(t0.c2) COLLATE BINARY) NOT NULL)) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((vt0.c0 COLLATE RTRIM)OR(((rt0.c0)==(rt0.c2)))))AND(CASE vt0.c1  WHEN rt0.c2 THEN x'' WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) INNER JOIN vt0 ON ((CAST(rt0.c2 AS BLOB)) NOTNULL);
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN (-6.98527866E8)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN (-6.98527866E8)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN (-6.98527866E8)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (+ (vt0.c0)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (+ (vt0.c0)) GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt0.c1)) COLLATE RTRIM)|(MIN(vt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (+ (vt0.c0)) GROUP BY rt0.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(vt0.c1)) COLLATE RTRIM)|(MIN(vt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (+ (vt0.c0)) GROUP BY rt0.c0 HAVING ((((GROUP_CONCAT(TOTAL(vt0.c1)) COLLATE RTRIM)|(MIN(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, t0.c2, rt0.c0 FROM vt0, t0, rt0;
SELECT vt0.c0, vt0.c1, t0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE (((((((((QUOTE(t0.c2))OR(CAST(vt0.c1 AS NUMERIC))))OR(((vt0.c1)GLOB(rt0.c1)))))OR((((NULL))==((rt0.c2))))))OR(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE ((NOT (((((((((QUOTE(t0.c2))OR(CAST(vt0.c1 AS NUMERIC))))OR(((vt0.c1)GLOB(rt0.c1)))))OR((((NULL))=((rt0.c2))))))OR(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE (((((((((((QUOTE(t0.c2))OR(CAST(vt0.c1 AS NUMERIC))))OR(((vt0.c1)GLOB(rt0.c1)))))OR((((NULL))=((rt0.c2))))))OR(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1, t0.c2, rt0.c0 FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))&(((((vt0.c1)AND(x'')))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((LOWER(DISTINCT vt0.c0))&(((((vt0.c1)AND(x'')))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((LOWER(DISTINCT vt0.c0))&(((((vt0.c1)AND(x'')))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c0 IN ())) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c2))==((t0.c2))))LIKE((vt0.c0 IN ()))) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c2))==((t0.c2))))LIKE((vt0.c0 IN ()))) GROUP BY vt0.c0, vt0.c1 HAVING (~ (TOTAL(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c2))=((t0.c2))))LIKE((vt0.c0 IN ()))) GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((~ (TOTAL(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c2))==((t0.c2))))LIKE((vt0.c0 IN ()))) GROUP BY vt0.c0, vt0.c1 HAVING (((~ (TOTAL(AVG(vt0.c0))))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (CASE WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c1) NOT NULL) THEN '' WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (~ (vt0.c0)) END) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c1) NOT NULL) THEN '' WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (~ (vt0.c0)) END))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((CASE WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c1) NOT NULL) THEN '' WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (~ (vt0.c0)) END) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c2, t0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON 0.32300232422144715;
SELECT DISTINCT rt0.c2, t0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON 0.32300232422144715 WHERE (CASE ((rt0.c1)>=(rt0.c2))  WHEN ('SN' IN ()) THEN '1800628600' ELSE ((((((((rt0.c1)OR(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) END) UNION SELECT DISTINCT rt0.c2, t0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON 0.32300232422144715 WHERE ((NOT (CASE ((rt0.c1)>=(rt0.c2))  WHEN ('SN' IN ()) THEN '1800628600' ELSE ((((((((rt0.c1)OR(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c2, t0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON 0.32300232422144715 WHERE (((CASE ((rt0.c1)>=(rt0.c2))  WHEN ('SN' IN ()) THEN '1800628600' ELSE ((((((((rt0.c1)OR(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c2, t0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON 0.32300232422144715;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN (((((((((rt0.c0)AND(x'ad80')))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) AND (0.5062230637387984))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS REAL)) BETWEEN (((((((((rt0.c0)AND(x'ad80')))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) AND (0.5062230637387984))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL)) BETWEEN (((((((((rt0.c0)AND(x'ad80')))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) AND (0.5062230637387984))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, t0.c2;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, t0.c2 HAVING COUNT(TOTAL(vt0.c0)) UNION ALL SELECT rt0.c0, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, t0.c2 HAVING (NOT (COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, t0.c2 HAVING ((COUNT(TOTAL(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS BLOB)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS BLOB)) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT t0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c2;
SELECT DISTINCT t0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))/(((t0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT t0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE ((NOT (((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))/(((t0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT t0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))/(((t0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(TOTAL(SUM(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(TOTAL(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(TOTAL(SUM(rt0.c2)))) ISNULL);
SELECT * FROM rt0, vt0, t0;
SELECT * FROM rt0, vt0, t0 WHERE (x'') UNION ALL SELECT * FROM rt0, vt0, t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE (((x'') ISNULL));
SELECT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (CASE ((((((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))  WHEN t0.c2 THEN (+ (rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c1)) WHEN (((t0.c2, vt0.c0, t0.c2, 0.8495613715780199, rt0.c0)) BETWEEN ((t0.c2, rt0.c0, vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c2, NULL, rt0.c1, rt0.c1, vt0.c1))) THEN NULL ELSE (rt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT (CASE ((((((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))  WHEN t0.c2 THEN (+ (rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c1)) WHEN (((t0.c2, vt0.c0, t0.c2, 0.8495613715780199, rt0.c0)) BETWEEN ((t0.c2, rt0.c0, vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c2, NULL, rt0.c1, rt0.c1, vt0.c1))) THEN NULL ELSE (rt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((CASE ((((((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))  WHEN t0.c2 THEN (+ (rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c1)) WHEN (((t0.c2, vt0.c0, t0.c2, 0.8495613715780199, rt0.c0)) BETWEEN ((t0.c2, rt0.c0, vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c2, NULL, rt0.c1, rt0.c1, vt0.c1))) THEN NULL ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((0.7292252979349265)IS NOT(rt0.c0))))==(((vt0.c0 IN (NULL))))) GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((0.7292252979349265)IS NOT(rt0.c0))))=(((vt0.c0 IN (NULL))))) WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))GLOB(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))))) GROUP BY rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((0.7292252979349265)IS NOT(rt0.c0))))==(((vt0.c0 IN (NULL))))) WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))GLOB(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))))))) GROUP BY rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((0.7292252979349265)IS NOT(rt0.c0))))==(((vt0.c0 IN (NULL))))) WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))GLOB(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((0.7292252979349265)IS NOT(rt0.c0))))==(((vt0.c0 IN (NULL))))) GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING (SUM(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING (NOT ((SUM(rt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING (((SUM(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING (SUM(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING (NOT ((SUM(rt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING (((SUM(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((NULL)IS(rt0.c2))) ISNULL) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM rt0, vt0, t0;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((('P!Y뭩K_1lB')) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CASE WHEN 'H	%YvdBm' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE ((NOT (((('P!Y뭩K_1lB')) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CASE WHEN 'H	%YvdBm' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE (((((('P!Y뭩K_1lB')) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CASE WHEN 'H	%YvdBm' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))) ISNULL));
SELECT ALL * FROM rt0, vt0, t0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0 WHERE ((((rt0.c2, t0.c2, 0.07362418556746264)) NOT BETWEEN ((((vt0.c1)>=(rt0.c2)), ((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((0xffffffffbb13e4c3, ((rt0.c0)<<(vt0.c0)), ((((((((vt0.c0)OR(rt0.c0)))AND(t0.c2)))OR(vt0.c0)))AND(vt0.c1)))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT ((((rt0.c2, t0.c2, 0.07362418556746264)) NOT BETWEEN ((((vt0.c1)>=(rt0.c2)), ((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((0Xffffffffbb13e4c3, ((rt0.c0)<<(vt0.c0)), ((((((((vt0.c0)OR(rt0.c0)))AND(t0.c2)))OR(vt0.c0)))AND(vt0.c1)))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0 WHERE ((((((rt0.c2, t0.c2, 0.07362418556746264)) NOT BETWEEN ((((vt0.c1)>=(rt0.c2)), ((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((0Xffffffffbb13e4c3, ((rt0.c0)<<(vt0.c0)), ((((((((vt0.c0)OR(rt0.c0)))AND(t0.c2)))OR(vt0.c0)))AND(vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN ((((0.800572799621873))>=((rt0.c1)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN ((((0.800572799621873))>=((rt0.c1)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN ((((0.800572799621873))>=((rt0.c1)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1 HAVING ((t0.c2)>(t0.c2)) COLLATE RTRIM UNION ALL SELECT vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1 HAVING (NOT (((t0.c2)>(t0.c2)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1 HAVING ((((t0.c2)>(t0.c2)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1 HAVING ((t0.c2)>(t0.c2)) COLLATE RTRIM UNION ALL SELECT vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1 HAVING (NOT (((t0.c2)>(t0.c2)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1 HAVING ((((t0.c2)>(t0.c2)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c1;
SELECT ALL t0.c2, rt0.c2 FROM rt0, t0 INDEXED BY i73;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (x'dc9d457e') UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (x'dc9d457e'))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((x'dc9d457e') ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT rt0.c1, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, t0, rt0 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((x'')))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM vt0, t0, rt0 WHERE ((NOT ((+ ((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((x'')))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM vt0, t0, rt0 WHERE ((((+ ((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((x'')))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1 HAVING (- (GROUP_CONCAT(TOTAL(rt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1 HAVING (NOT ((- (GROUP_CONCAT(TOTAL(rt0.c0)))))) UNION ALL SELECT vt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1 HAVING (((- (GROUP_CONCAT(TOTAL(rt0.c0))))) ISNULL);
SELECT MIN((((+ (rt0.c0))) NOT NULL)) FROM rt0, t0, vt0 ORDER BY json_valid(rt0.c1 COLLATE RTRIM) DESC  NULLS LAST, ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((vt0.c0)IS NOT(rt0.c2))) AND (((((t0.c2)OR(rt0.c1)))OR(rt0.c0)))), (((~ (rt0.c2))) IS TRUE);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOTNULL)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS REAL) AS REAL)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(CAST(rt0.c2 AS REAL) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL vt0.c0 FROM rt0, vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((vt0.c0 COLLATE NOCASE, ((((x'')OR(rt0.c1)))OR(t0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (vt0.c0))))!=(((NOT (vt0.c1)), x'', rt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 NATURAL JOIN t0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE, ((((x'')OR(rt0.c1)))OR(t0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (vt0.c0))))!=(((NOT (vt0.c1)), x'', rt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((((vt0.c0 COLLATE NOCASE, ((((x'')OR(rt0.c1)))OR(t0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (vt0.c0))))!=(((NOT (vt0.c1)), x'', rt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING CAST(MIN(t0.c2) AS REAL) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (CAST(MIN(t0.c2) AS REAL))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((CAST(MIN(t0.c2) AS REAL)) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING CAST(MIN(t0.c2) AS REAL) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (CAST(MIN(t0.c2) AS REAL))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((CAST(MIN(t0.c2) AS REAL)) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (load_extension(rt0.c1) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (load_extension(rt0.c1) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE (((load_extension(rt0.c1) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN (+ (rt0.c2)) THEN (rt0.c1 IN (vt0.c0)) WHEN NULLIF(x'', vt0.c1) THEN vt0.c1 COLLATE BINARY WHEN load_extension(rt0.c1) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(0.5161210772286913)))OR(vt0.c0)))AND(rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN (+ (rt0.c2)) THEN (rt0.c1 IN (vt0.c0)) WHEN NULLIF(x'', vt0.c1) THEN vt0.c1 COLLATE BINARY WHEN load_extension(rt0.c1) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(0.5161210772286913)))OR(vt0.c0)))AND(rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END WHERE (CAST((+ (rt0.c1)) AS BLOB)) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN (+ (rt0.c2)) THEN (rt0.c1 IN (vt0.c0)) WHEN NULLIF(x'', vt0.c1) THEN vt0.c1 COLLATE BINARY WHEN load_extension(rt0.c1) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(0.5161210772286913)))OR(vt0.c0)))AND(rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END WHERE ((NOT (CAST((+ (rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN (+ (rt0.c2)) THEN (rt0.c1 IN (vt0.c0)) WHEN NULLIF(x'', vt0.c1) THEN vt0.c1 COLLATE BINARY WHEN load_extension(rt0.c1) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(0.5161210772286913)))OR(vt0.c0)))AND(rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END WHERE (((CAST((+ (rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN (+ (rt0.c2)) THEN (rt0.c1 IN (vt0.c0)) WHEN NULLIF(x'', vt0.c1) THEN vt0.c1 COLLATE BINARY WHEN load_extension(rt0.c1) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(0.5161210772286913)))OR(vt0.c0)))AND(rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (CASE WHEN (t0.c2 IN ()) THEN t0.c2 COLLATE RTRIM WHEN t0.c2 COLLATE BINARY THEN t0.c2 COLLATE RTRIM WHEN CAST(t0.c2 AS REAL) THEN CASE WHEN 0.10681879760190494 THEN NULL END END) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT (CASE WHEN (t0.c2 IN ()) THEN t0.c2 COLLATE RTRIM WHEN t0.c2 COLLATE BINARY THEN t0.c2 COLLATE RTRIM WHEN CAST(t0.c2 AS REAL) THEN CASE WHEN 0.10681879760190494 THEN NULL END END))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((CASE WHEN (t0.c2 IN ()) THEN t0.c2 COLLATE RTRIM WHEN t0.c2 COLLATE BINARY THEN t0.c2 COLLATE RTRIM WHEN CAST(t0.c2 AS REAL) THEN CASE WHEN 0.10681879760190494 THEN NULL END END) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING UNLIKELY(DISTINCT x'') UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (NOT (UNLIKELY(DISTINCT x''))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING ((UNLIKELY(DISTINCT x'')) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING UNLIKELY(DISTINCT x'') UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (NOT (UNLIKELY(DISTINCT x''))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING ((UNLIKELY(DISTINCT x'')) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2) NOT NULL) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2) NOT NULL) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, t0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN 0.7706078361437866 ELSE rt0.c2 END THEN (t0.c2 IN ()) WHEN ((rt0.c2)>>(t0.c2)) THEN vt0.c1 WHEN t0.c2 THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c2 THEN 0.7706078361437866 ELSE rt0.c2 END THEN (t0.c2 IN ()) WHEN ((rt0.c2)>>(t0.c2)) THEN vt0.c1 WHEN t0.c2 THEN CASE WHEN rt0.c0 THEN rt0.c0 END END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, t0, vt0 WHERE (((CASE WHEN CASE WHEN rt0.c2 THEN 0.7706078361437866 ELSE rt0.c2 END THEN (t0.c2 IN ()) WHEN ((rt0.c2)>>(t0.c2)) THEN vt0.c1 WHEN t0.c2 THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1;
SELECT rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING (((rt0.c1)IS(vt0.c1)) IN ()) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c1)IS(vt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING (((((rt0.c1)IS(vt0.c1)) IN ())) ISNULL);
SELECT rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING (((rt0.c1)IS(vt0.c1)) IN ()) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c1)IS(vt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING (((((rt0.c1)IS(vt0.c1)) IN ())) ISNULL);
SELECT rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (CAST(t0.c2 AS TEXT)) UNION ALL SELECT * FROM t0, rt0 NOT INDEXED WHERE ((NOT (CAST(t0.c2 AS TEXT)))) UNION ALL SELECT * FROM t0, rt0 WHERE (((CAST(t0.c2 AS TEXT)) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, vt0.c1, rt0.c0, t0.c2, rt0.c2 FROM vt0 LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)|(vt0.c0)))OR((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))))OR((+ (vt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2)))))AND((- (rt0.c1)))) CROSS JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(rt0.c0));
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (0.14341231219855954) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (0.14341231219855954))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((0.14341231219855954) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING UNLIKELY(t0.c2) COLLATE BINARY UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (UNLIKELY(t0.c2) COLLATE BINARY)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((UNLIKELY(t0.c2) COLLATE BINARY) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING UNLIKELY(t0.c2) COLLATE BINARY UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (UNLIKELY(t0.c2) COLLATE BINARY)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((UNLIKELY(t0.c2) COLLATE BINARY) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c2 IN ())) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ ((((rt0.c2))==((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ ((((rt0.c2))==((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ ((((rt0.c2))==((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 WHERE (((((((((((x'db3a')AND(t0.c2)))OR(0.9209985138704428)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c2))))) GROUP BY vt0.c0, vt0.c1, t0.c2 UNION SELECT vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 WHERE ((NOT (((((((((((x'db3a')AND(t0.c2)))OR(0.9209985138704428)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c2))))))) GROUP BY vt0.c0, vt0.c1, t0.c2 UNION SELECT vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 WHERE (((((((((((((x'db3a')AND(t0.c2)))OR(0.9209985138704428)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c2))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c1)+(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (((rt0.c1)+(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (((rt0.c1)+(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c1)+(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (((rt0.c1)+(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (((rt0.c1)+(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT MIN(((((NULL)IS NOT(vt0.c1)))%(((0.02792653059960326)<<(vt0.c1))))) FROM vt0;
SELECT * FROM t0, rt0, vt0;
SELECT * FROM t0, rt0, vt0 WHERE (json_array_length((((vt0.c0))>((vt0.c0))))) UNION ALL SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT (json_array_length((((vt0.c0))>((vt0.c0))))))) UNION ALL SELECT ALL * FROM t0, rt0, vt0 WHERE (((json_array_length((((vt0.c0))>((vt0.c0))))) ISNULL));
SELECT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((vt0.c0) IS FALSE))))AND(NULL)))OR(ABS(rt0.c1))))AND(UPPER(rt0.c0)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((((((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((vt0.c0) IS FALSE))))AND(NULL)))OR(ABS(rt0.c1))))AND(UPPER(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((vt0.c0) IS FALSE))))AND(NULL)))OR(ABS(rt0.c1))))AND(UPPER(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL t0.c2, rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0 FROM rt0 INNER JOIN t0 ON ((((x'')OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c1)) FULL OUTER JOIN vt0 ON CAST(((rt0.c0) NOT NULL) AS TEXT) GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(SUM(vt0.c0) AS INTEGER) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS INTEGER))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(SUM(vt0.c0) AS INTEGER)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(SUM(vt0.c0) AS INTEGER) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS INTEGER))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(SUM(vt0.c0) AS INTEGER)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN 'wGpm' ELSE t0.c2 END) AND (CAST(t0.c2 AS TEXT)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN 'wGpm' ELSE t0.c2 END) AND (CAST(t0.c2 AS TEXT)))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN 'wGpm' ELSE t0.c2 END) AND (CAST(t0.c2 AS TEXT)))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN GLOB(vt0.c1, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END ELSE NULL END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN GLOB(vt0.c1, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END ELSE NULL END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN GLOB(vt0.c1, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END ELSE NULL END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((((COUNT(SUM(SUM(t0.c2))))OR(COUNT(COUNT(t0.c2)))))OR(COUNT(*))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((NOT (((((COUNT(SUM(SUM(t0.c2))))OR(COUNT(COUNT(t0.c2)))))OR(COUNT(*))))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((NOT (((((COUNT(SUM(SUM(t0.c2))))OR(COUNT(COUNT(t0.c2)))))OR(COUNT(*)))))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c2)AND(rt0.c0)))AND(t0.c2)) COLLATE BINARY) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((((t0.c2)AND(rt0.c0)))AND(t0.c2)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((((t0.c2)AND(rt0.c0)))AND(t0.c2)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((+ (((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((+ (((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c2))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((+ (((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 WHERE (((CAST(x'' AS TEXT))-(SQLITE_SOURCE_ID()))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE ((NOT (((CAST(x'' AS TEXT))-(SQLITE_SOURCE_ID()))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE (((((CAST(x'' AS TEXT))-(SQLITE_SOURCE_ID()))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON UPPER(DISTINCT json_type(t0.c2)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c0, t0.c2, vt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0;
SELECT vt0.c1, rt0.c0, t0.c2, vt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0 WHERE (((((t0.c2)AND(vt0.c1)))/(CASE WHEN t0.c2 THEN NULL ELSE rt0.c2 END))) UNION ALL SELECT ALL vt0.c1, rt0.c0, t0.c2, vt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (((((t0.c2)AND(vt0.c1)))/(CASE WHEN t0.c2 THEN NULL ELSE rt0.c2 END))))) UNION ALL SELECT vt0.c1, rt0.c0, t0.c2, vt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0 WHERE (((((((t0.c2)AND(vt0.c1)))/(CASE WHEN t0.c2 THEN NULL ELSE rt0.c2 END))) ISNULL));
SELECT vt0.c1, rt0.c0, t0.c2, vt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN t0 ON (~ (((rt0.c0)<(t0.c2))));
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN t0 ON (~ (((rt0.c0)<(t0.c2)))) WHERE (((NULL) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN t0 ON (~ (((rt0.c0)<(t0.c2)))) WHERE ((NOT (((NULL) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c2) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN t0 ON (~ (((rt0.c0)<(t0.c2)))) WHERE (((((NULL) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN t0 ON (~ (((rt0.c0)<(t0.c2))));
SELECT ALL t0.c2 FROM rt0 CROSS JOIN t0 ON COALESCE(DISTINCT ((t0.c2)OR(rt0.c2)), (NOT (t0.c2))) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM rt0 CROSS JOIN t0 ON COALESCE(DISTINCT ((t0.c2)OR(rt0.c2)), (NOT (t0.c2))) WHERE ((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, NULL, CAST(t0.c2 AS TEXT))) AND (((((x'53da')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOT NULL), ((rt0.c0) IS TRUE))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM rt0 CROSS JOIN t0 ON COALESCE(DISTINCT ((t0.c2)OR(rt0.c2)), (NOT (t0.c2))) WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, NULL, CAST(t0.c2 AS TEXT))) AND (((((x'53da')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOT NULL), ((rt0.c0) IS TRUE))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM rt0 CROSS JOIN t0 ON COALESCE(DISTINCT ((t0.c2)OR(rt0.c2)), (NOT (t0.c2))) WHERE ((((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, NULL, CAST(t0.c2 AS TEXT))) AND (((((x'53da')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c0) NOT NULL), ((rt0.c0) IS TRUE))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM rt0 CROSS JOIN t0 ON COALESCE(DISTINCT ((t0.c2)OR(rt0.c2)), (NOT (t0.c2))) GROUP BY t0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(SUM(MIN(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(SUM(MIN(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(SUM(MIN(GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((((vt0.c1 COLLATE NOCASE))==((CAST(rt0.c2 AS REAL))))) ORDER BY (+ (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((vt0.c1 COLLATE NOCASE))==((CAST(rt0.c2 AS REAL))))))) ORDER BY (+ (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((((((vt0.c1 COLLATE NOCASE))=((CAST(rt0.c2 AS REAL))))) ISNULL)) ORDER BY (+ (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c1))!=((vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOTNULL) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c1))!=((vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) NOTNULL) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c1))!=((vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (CASE ((((vt0.c0)AND(t0.c2)))OR(NULL))  WHEN CAST(vt0.c1 AS NUMERIC) THEN ('920240876' IN (vt0.c1)) ELSE CAST(vt0.c0 AS BLOB) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (CASE ((((vt0.c0)AND(t0.c2)))OR(NULL))  WHEN CAST(vt0.c1 AS NUMERIC) THEN ('920240876' IN (vt0.c1)) ELSE CAST(vt0.c0 AS BLOB) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((CASE ((((vt0.c0)AND(t0.c2)))OR(NULL))  WHEN CAST(vt0.c1 AS NUMERIC) THEN ('920240876' IN (vt0.c1)) ELSE CAST(vt0.c0 AS BLOB) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2 HAVING MIN(NULL) UNION ALL SELECT vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2 HAVING (NOT (MIN(NULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2 HAVING ((MIN(NULL)) ISNULL);
SELECT vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2 HAVING MIN(NULL) UNION ALL SELECT vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2 HAVING (NOT (MIN(NULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2 HAVING ((MIN(NULL)) ISNULL);
SELECT vt0.c0, vt0.c1, t0.c2 FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL) GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT * FROM t0 INNER JOIN vt0 ON ((CHAR(vt0.c0)) BETWEEN (LENGTH(rt0.c1)) AND (TRIM(rt0.c1))) LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN 'uU' ELSE t0.c2 END AS NUMERIC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CHAR(vt0.c0)) BETWEEN (LENGTH(rt0.c1)) AND (TRIM(rt0.c1))) LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN 'uU' ELSE t0.c2 END AS NUMERIC) WHERE (x'') UNION ALL SELECT * FROM t0 INNER JOIN vt0 ON ((CHAR(vt0.c0)) BETWEEN (LENGTH(rt0.c1)) AND (TRIM(rt0.c1))) LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN 'uU' ELSE t0.c2 END AS NUMERIC) WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CHAR(vt0.c0)) BETWEEN (LENGTH(rt0.c1)) AND (TRIM(rt0.c1))) LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN 'uU' ELSE t0.c2 END AS NUMERIC) WHERE (((x'') ISNULL));
SELECT * FROM t0 INNER JOIN vt0 ON ((CHAR(vt0.c0)) BETWEEN (LENGTH(rt0.c1)) AND (TRIM(rt0.c1))) LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN 'uU' ELSE t0.c2 END AS NUMERIC);
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE vt0.c0 END) NOT NULL)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE vt0.c0 END) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE vt0.c0 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE ((+ (t0.c2)) COLLATE BINARY) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((+ (t0.c2)) COLLATE BINARY))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((((+ (t0.c2)) COLLATE BINARY) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL rt0.c0, t0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, rt0.c1, rt0.c2, vt0.c1;
SELECT ALL rt0.c0, t0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, rt0.c1, rt0.c2, vt0.c1 HAVING CASE ((t0.c2) ISNULL)  WHEN ((rt0.c0) IS FALSE) THEN TOTAL(vt0.c0) WHEN (NOT (GROUP_CONCAT(vt0.c1))) THEN SUM(AVG(rt0.c1)) WHEN COUNT(MAX(rt0.c0)) THEN NULL ELSE TOTAL(TOTAL(vt0.c1)) END UNION ALL SELECT rt0.c0, t0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, rt0.c1, rt0.c2, vt0.c1 HAVING (NOT (CASE ((t0.c2) ISNULL)  WHEN ((rt0.c0) IS FALSE) THEN TOTAL(vt0.c0) WHEN (NOT (GROUP_CONCAT(vt0.c1))) THEN SUM(AVG(rt0.c1)) WHEN COUNT(MAX(rt0.c0)) THEN NULL ELSE TOTAL(TOTAL(vt0.c1)) END)) UNION ALL SELECT ALL rt0.c0, t0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, rt0.c1, rt0.c2, vt0.c1 HAVING ((CASE ((t0.c2) ISNULL)  WHEN ((rt0.c0) IS FALSE) THEN TOTAL(vt0.c0) WHEN (NOT (GROUP_CONCAT(vt0.c1))) THEN SUM(AVG(rt0.c1)) WHEN COUNT(MAX(rt0.c0)) THEN NULL ELSE TOTAL(TOTAL(vt0.c1)) END) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.004949935935095406) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.004949935935095406))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.004949935935095406) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c1 FROM t0 INDEXED BY i73 CROSS JOIN vt0 ON (((((~ (t0.c2)))AND((((vt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1))))))AND('3Y|p')) GROUP BY vt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, t0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(SUM(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(SUM(rt0.c1))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c2 IN ())) ISNULL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c2 IN ())) ISNULL)))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c2 IN ())) ISNULL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ('#D>#jU' COLLATE BINARY) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ('#D>#jU' COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((('#D>#jU' COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 WHERE (rt0.c1) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 NOT INDEXED WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2 HAVING CASE WHEN MIN(rt0.c0) THEN GROUP_CONCAT(rt0.c1) END UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2 HAVING (NOT (CASE WHEN MIN(rt0.c0) THEN GROUP_CONCAT(rt0.c1) END)) UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2 HAVING ((CASE WHEN MIN(rt0.c0) THEN GROUP_CONCAT(rt0.c1) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2 HAVING CASE WHEN MIN(rt0.c0) THEN GROUP_CONCAT(rt0.c1) END UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2 HAVING (NOT (CASE WHEN MIN(rt0.c0) THEN GROUP_CONCAT(rt0.c1) END)) UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2 HAVING ((CASE WHEN MIN(rt0.c0) THEN GROUP_CONCAT(rt0.c1) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0 INNER JOIN t0 ON (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END)) AND ((((x'3a50')>>(t0.c2))))) GROUP BY rt0.c2;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)+((((vt0.c1))>=((vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)+((((vt0.c1))>=((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)+((((vt0.c1))>=((vt0.c0)))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c2))=((vt0.c1))))) INNER JOIN t0 ON CASE WHEN ((t0.c2) NOTNULL) THEN (+ (0.021086340045303076)) ELSE (t0.c2 IN ()) END;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c2))=((vt0.c1))))) INNER JOIN t0 ON CASE WHEN ((t0.c2) NOTNULL) THEN (+ (0.021086340045303076)) ELSE (t0.c2 IN ()) END WHERE (CAST(((rt0.c2)GLOB(rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c2))=((vt0.c1))))) INNER JOIN t0 ON CASE WHEN ((t0.c2) NOTNULL) THEN (+ (0.021086340045303076)) ELSE (t0.c2 IN ()) END WHERE ((NOT (CAST(((rt0.c2)GLOB(rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c2))==((vt0.c1))))) INNER JOIN t0 ON CASE WHEN ((t0.c2) NOTNULL) THEN (+ (0.021086340045303076)) ELSE (t0.c2 IN ()) END WHERE (((CAST(((rt0.c2)GLOB(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((- (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c2))=((vt0.c1))))) INNER JOIN t0 ON CASE WHEN ((t0.c2) NOTNULL) THEN (+ (0.021086340045303076)) ELSE (t0.c2 IN ()) END;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON (highlight(rt0.c2, rt0.c0, rt0.c2, vt0.c0) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)/(t0.c2)) ELSE (rt0.c2 IN (vt0.c0)) END GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON (highlight(rt0.c2, rt0.c0, rt0.c2, vt0.c0) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)/(t0.c2)) ELSE (rt0.c2 IN (vt0.c0)) END WHERE (CAST(rt0.c1 AS BLOB) COLLATE NOCASE) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON (highlight(rt0.c2, rt0.c0, rt0.c2, vt0.c0) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)/(t0.c2)) ELSE (rt0.c2 IN (vt0.c0)) END WHERE ((NOT (CAST(rt0.c1 AS BLOB) COLLATE NOCASE))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON (highlight(rt0.c2, rt0.c0, rt0.c2, vt0.c0) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)/(t0.c2)) ELSE (rt0.c2 IN (vt0.c0)) END WHERE (((CAST(rt0.c1 AS BLOB) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON (highlight(rt0.c2, rt0.c0, rt0.c2, vt0.c0) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)/(t0.c2)) ELSE (rt0.c2 IN (vt0.c0)) END GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING COUNT(((vt0.c1) NOT NULL)) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (COUNT(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((COUNT(((vt0.c1) NOT NULL))) ISNULL);
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING COUNT(((vt0.c1) NOT NULL)) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (COUNT(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((COUNT(((vt0.c1) NOT NULL))) ISNULL);
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0;
SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0 WHERE ((NOT (CAST(rt0.c2 AS TEXT) COLLATE BINARY COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0 WHERE (((CAST(rt0.c2 AS TEXT) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0;
SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, t0, vt0;
SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, t0, vt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c1)) THEN (~ (rt0.c0)) END) UNION SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, t0, vt0 WHERE ((NOT (CASE WHEN ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c1)) THEN (~ (rt0.c0)) END))) UNION SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, t0, vt0 WHERE (((CASE WHEN ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c1)) THEN (~ (rt0.c0)) END) ISNULL));
SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, t0, vt0;
SELECT vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, t0, vt0 WHERE (((((t0.c2)&(t0.c2)))||((~ (rt0.c2))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, t0, vt0 WHERE ((NOT (((((t0.c2)&(t0.c2)))||((~ (rt0.c2))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, t0, vt0 WHERE (((((((t0.c2)&(t0.c2)))||((~ (rt0.c2))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0;
SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1;
SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1 HAVING ((CAST(SUM(rt0.c0) AS NUMERIC)) IS TRUE) UNION ALL SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1 HAVING (NOT (((CAST(SUM(rt0.c0) AS NUMERIC)) IS TRUE))) UNION ALL SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1 HAVING ((((CAST(SUM(rt0.c0) AS NUMERIC)) IS TRUE)) ISNULL);
SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1;
SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1 HAVING ((CAST(SUM(rt0.c0) AS NUMERIC)) IS TRUE) UNION ALL SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1 HAVING (NOT (((CAST(SUM(rt0.c0) AS NUMERIC)) IS TRUE))) UNION ALL SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1 HAVING ((((CAST(SUM(rt0.c0) AS NUMERIC)) IS TRUE)) ISNULL);
SELECT rt0.c0, t0.c2, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c0, t0.c2, vt0.c1;
SELECT SUM(LIKELIHOOD((t0.c2 IN ()), 0.38058632290764727)) FROM t0 ORDER BY ((((((((t0.c2)OR(t0.c2)))AND(x'')))OR(t0.c2)))OR(t0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST(((((t0.c2)AND(t0.c2)))OR(t0.c2)) AS TEXT)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(((((t0.c2)AND(t0.c2)))OR(t0.c2)) AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(((((t0.c2)AND(t0.c2)))OR(t0.c2)) AS TEXT)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN t0.c2 END)>(((vt0.c1)||(vt0.c1))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN t0.c2 END)>(((vt0.c1)||(vt0.c1)))) WHERE (((((NULL)<(vt0.c1)))%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN t0.c2 END)>(((vt0.c1)||(vt0.c1)))) WHERE ((NOT (((((NULL)<(vt0.c1)))%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN t0.c2 END)>(((vt0.c1)||(vt0.c1)))) WHERE (((((((NULL)<(vt0.c1)))%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN t0.c2 END)>(((vt0.c1)||(vt0.c1))));
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (HEX(((((vt0.c0)AND('-245458673')))AND(rt0.c1)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (HEX(((((vt0.c0)AND('-245458673')))AND(rt0.c1)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((HEX(((((vt0.c0)AND('-245458673')))AND(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0;
SELECT ALL MIN(0.0905033353582817) FROM t0, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0;
SELECT * FROM rt0, vt0, t0 WHERE ((((((vt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c0))))<(((~ (rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c0))))<(((~ (rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE ((((((((vt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c0))))<(((~ (rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0, vt0, t0;
SELECT DISTINCT rt0.c2, t0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c2, t0.c2, rt0.c0 FROM t0, rt0 WHERE ((((rt0.c2))<=((rt0.c0))) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, t0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c2))<=((rt0.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, t0.c2, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c2))<=((rt0.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, t0.c2, rt0.c0 FROM t0, rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((+ (0.02266723590664277))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((+ (0.02266723590664277))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((+ (0.02266723590664277))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING SUM(AVG(t0.c2)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (SUM(AVG(t0.c2)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((SUM(AVG(t0.c2))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((+ (rt0.c0)))-(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0))));
SELECT DISTINCT vt0.c0, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((+ (rt0.c0)))-(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))) WHERE (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))<=(((rt0.c1)>=(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((+ (rt0.c0)))-(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))) WHERE ((NOT (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))<=(((rt0.c1)>=(vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((+ (rt0.c0)))-(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))) WHERE (((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))<=(((rt0.c1)>=(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0 INNER JOIN vt0 ON (((+ (rt0.c0)))-(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0))));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CAST(t0.c2 AS REAL);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CAST(t0.c2 AS REAL) WHERE (CAST(t0.c2 AS NUMERIC)) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CAST(t0.c2 AS REAL) WHERE ((NOT (CAST(t0.c2 AS NUMERIC)))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON CAST(t0.c2 AS REAL) WHERE (((CAST(t0.c2 AS NUMERIC)) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CAST(t0.c2 AS REAL);
SELECT DISTINCT rt0.c1 FROM rt0, t0 FULL OUTER JOIN vt0 ON ((0X6b536978) NOT BETWEEN (NULL) AND ((((vt0.c1))<((rt0.c0)))));
SELECT DISTINCT rt0.c1 FROM rt0, t0 FULL OUTER JOIN vt0 ON ((0X6b536978) NOT BETWEEN (NULL) AND ((((vt0.c1))<((rt0.c0))))) WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))=(((vt0.c1)AND(rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, t0 FULL OUTER JOIN vt0 ON ((0x6b536978) NOT BETWEEN (NULL) AND ((((vt0.c1))<((rt0.c0))))) WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))=(((vt0.c1)AND(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, t0 FULL OUTER JOIN vt0 ON ((0X6b536978) NOT BETWEEN (NULL) AND ((((vt0.c1))<((rt0.c0))))) WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))=(((vt0.c1)AND(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, t0 FULL OUTER JOIN vt0 ON ((0X6b536978) NOT BETWEEN (NULL) AND ((((vt0.c1))<((rt0.c0)))));
SELECT ALL rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2;
SELECT rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM rt0, t0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c2 WHEN '+-L' THEN rt0.c2 ELSE rt0.c2 END END) GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM rt0, t0, vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c2 WHEN '+-L' THEN rt0.c2 ELSE rt0.c2 END END))) GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2 UNION SELECT rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM rt0, t0, vt0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c2 WHEN '+-L' THEN rt0.c2 ELSE rt0.c2 END END) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2;
SELECT ALL rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0, rt0.c1, t0.c2;
SELECT ALL rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) GROUP BY rt0.c1, t0.c2, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) GROUP BY rt0.c1, t0.c2, rt0.c0, rt0.c2 HAVING MIN((((rt0.c0))<=((MAX(0.553490347486457))))) UNION ALL SELECT rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) GROUP BY rt0.c1, t0.c2, rt0.c0, rt0.c2 HAVING (NOT (MIN((((rt0.c0))<=((MAX(0.553490347486457))))))) UNION ALL SELECT rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON (CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) GROUP BY rt0.c1, t0.c2, rt0.c0, rt0.c2 HAVING ((MIN((((rt0.c0))<=((MAX(0.553490347486457)))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (NULL) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((- (rt0.c2)) IN (((vt0.c1) IS FALSE)));
SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((- (rt0.c2)) IN (((vt0.c1) IS FALSE))) WHERE (LIKELIHOOD(DISTINCT (- (t0.c2)), 0.5654067496910788)) UNION SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((- (rt0.c2)) IN (((vt0.c1) IS FALSE))) WHERE ((NOT (LIKELIHOOD(DISTINCT (- (t0.c2)), 0.5654067496910788)))) UNION SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((- (rt0.c2)) IN (((vt0.c1) IS FALSE))) WHERE (((LIKELIHOOD(DISTINCT (- (t0.c2)), 0.5654067496910788)) ISNULL));
SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((- (rt0.c2)) IN (((vt0.c1) IS FALSE)));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)OR(vt0.c0)))AND(NULL)) COLLATE NOCASE) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)OR(vt0.c0)))AND(NULL)) COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))AND(NULL)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING (((COUNT(AVG(SUM('1364260791')))) ISNULL) IN (((((COUNT(t0.c2))OR(rt0.c2)))AND(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, t0 NOT INDEXED, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT ((((COUNT(AVG(SUM('1364260791')))) ISNULL) IN (((((COUNT(t0.c2))OR(rt0.c2)))AND(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING (((((COUNT(AVG(SUM('1364260791')))) ISNULL) IN (((((COUNT(t0.c2))OR(rt0.c2)))AND(rt0.c0))))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON NULL;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE (((((vt0.c0)%(vt0.c0)))GLOB(CAST(t0.c2 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE ((NOT (((((vt0.c0)%(vt0.c0)))GLOB(CAST(t0.c2 AS INTEGER)))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE (((((((vt0.c0)%(vt0.c0)))GLOB(CAST(t0.c2 AS INTEGER)))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON NULL;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT ALL t0.c2, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c2, rt0.c0, rt0.c2, rt0.c1;
SELECT t0.c2, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((- (((t0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) GROUP BY t0.c2, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL t0.c2, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((- (((t0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))))) GROUP BY t0.c2, rt0.c0, rt0.c2, rt0.c1 UNION SELECT t0.c2, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((- (((t0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY t0.c2, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c2, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c2, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2;
SELECT ALL rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2;
SELECT ALL rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.c1, t0.c2 FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)) IN (rt0.c2)) GROUP BY rt0.c2, vt0.c1, t0.c2;
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((vt0.c0)LIKE(rt0.c1)) IN (CAST(t0.c2 AS INTEGER))) INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM;
SELECT * FROM vt0 INNER JOIN t0 ON (((vt0.c0)LIKE(rt0.c1)) IN (CAST(t0.c2 AS INTEGER))) INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE (((((t0.c2) NOTNULL)) NOT BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t0 ON (((vt0.c0)LIKE(rt0.c1)) IN (CAST(t0.c2 AS INTEGER))) INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE ((NOT (((((t0.c2) NOTNULL)) NOT BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0 INNER JOIN t0 ON (((vt0.c0)LIKE(rt0.c1)) IN (CAST(t0.c2 AS INTEGER))) INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE (((((((t0.c2) NOTNULL)) NOT BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((vt0.c0)LIKE(rt0.c1)) IN (CAST(t0.c2 AS INTEGER))) INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST((((rt0.c0))>((t0.c2))) AS BLOB)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST((((rt0.c0))>((t0.c2))) AS BLOB)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST((((rt0.c0))>((t0.c2))) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c2, vt0.c1;
SELECT ALL t0.c2, vt0.c1 FROM vt0, t0 WHERE (json_patch(vt0.c0 COLLATE NOCASE, (+ (vt0.c0)))) GROUP BY t0.c2, vt0.c1 UNION SELECT ALL t0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT (json_patch(vt0.c0 COLLATE NOCASE, (+ (vt0.c0)))))) GROUP BY t0.c2, vt0.c1 UNION SELECT t0.c2, vt0.c1 FROM vt0, t0 WHERE (((json_patch(vt0.c0 COLLATE NOCASE, (+ (vt0.c0)))) ISNULL)) GROUP BY t0.c2, vt0.c1;
SELECT rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0;
SELECT rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0 HAVING ((SUM(NULL))<=(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0 HAVING (NOT (((SUM(NULL))<=(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0 HAVING ((((SUM(NULL))<=(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CASE x''  WHEN TYPEOF(DISTINCT t0.c2) THEN t0.c2 WHEN 0.6330824278728034 COLLATE RTRIM THEN (NOT (vt0.c1)) WHEN t0.c2 COLLATE NOCASE THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END;
SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CASE x''  WHEN TYPEOF(DISTINCT t0.c2) THEN t0.c2 WHEN 0.6330824278728034 COLLATE RTRIM THEN (NOT (vt0.c1)) WHEN t0.c2 COLLATE NOCASE THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END WHERE (((((vt0.c1) NOT NULL)) ISNULL)) UNION SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CASE x''  WHEN TYPEOF(DISTINCT t0.c2) THEN t0.c2 WHEN 0.6330824278728034 COLLATE RTRIM THEN (NOT (vt0.c1)) WHEN t0.c2 COLLATE NOCASE THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END WHERE ((NOT (((((vt0.c1) NOT NULL)) ISNULL)))) UNION SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CASE x''  WHEN TYPEOF(DISTINCT t0.c2) THEN t0.c2 WHEN 0.6330824278728034 COLLATE RTRIM THEN (NOT (vt0.c1)) WHEN t0.c2 COLLATE NOCASE THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END WHERE (((((((vt0.c1) NOT NULL)) ISNULL)) ISNULL));
SELECT DISTINCT t0.c2, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON CASE x''  WHEN TYPEOF(DISTINCT t0.c2) THEN t0.c2 WHEN 0.6330824278728034 COLLATE RTRIM THEN (NOT (vt0.c1)) WHEN t0.c2 COLLATE NOCASE THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END;
SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM t0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, t0.c2;
SELECT rt0.c0, rt0.c1, t0.c2 FROM t0, rt0 WHERE (LIKELY(DISTINCT (+ (rt0.c1)))) GROUP BY rt0.c0, rt0.c1, t0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c2 FROM t0, rt0 WHERE ((NOT (LIKELY(DISTINCT (+ (rt0.c1)))))) GROUP BY rt0.c0, rt0.c1, t0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c2 FROM t0, rt0 WHERE (((LIKELY(DISTINCT (+ (rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM t0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, t0.c2;
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))==((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))=((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2 HAVING CASE ((rt0.c2) NOT NULL)  WHEN MIN(rt0.c1) THEN (+ (rt0.c0)) END UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))=((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2 HAVING (NOT (CASE ((rt0.c2) NOT NULL)  WHEN MIN(rt0.c1) THEN (+ (rt0.c0)) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))=((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2 HAVING ((CASE ((rt0.c2) NOT NULL)  WHEN MIN(rt0.c1) THEN (+ (rt0.c0)) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))==((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))=((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2 HAVING CASE ((rt0.c2) NOT NULL)  WHEN MIN(rt0.c1) THEN (+ (rt0.c0)) END UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))=((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2 HAVING (NOT (CASE ((rt0.c2) NOT NULL)  WHEN MIN(rt0.c1) THEN (+ (rt0.c0)) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))=((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2 HAVING ((CASE ((rt0.c2) NOT NULL)  WHEN MIN(rt0.c1) THEN (+ (rt0.c0)) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON IFNULL((((t0.c2))==((t0.c2))), 0.23169873033126498) GROUP BY rt0.c2;
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN '' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (CASE WHEN '' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE))) UNION ALL SELECT * FROM t0, rt0 WHERE (((CASE WHEN '' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM t0, rt0 CROSS JOIN vt0 ON (- (CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 END));
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM t0, rt0 CROSS JOIN vt0 ON (- (CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 END)) WHERE ((+ (vt0.c1))) UNION SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM t0, rt0 CROSS JOIN vt0 ON (- (CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 END)) WHERE ((NOT ((+ (vt0.c1))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM t0, rt0 CROSS JOIN vt0 ON (- (CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 END)) WHERE ((((+ (vt0.c1))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM t0, rt0 CROSS JOIN vt0 ON (- (CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 END));
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2;
SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2 HAVING LIKELIHOOD(CASE rt0.c0  WHEN MAX(t0.c2) THEN SUM(rt0.c0) END, 0.2957371357480264) UNION ALL SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2 HAVING (NOT (LIKELIHOOD(CASE rt0.c0  WHEN MAX(t0.c2) THEN SUM(rt0.c0) END, 0.2957371357480264))) UNION ALL SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2 HAVING ((LIKELIHOOD(CASE rt0.c0  WHEN MAX(t0.c2) THEN SUM(rt0.c0) END, 0.2957371357480264)) ISNULL);
SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2;
SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2 HAVING LIKELIHOOD(CASE rt0.c0  WHEN MAX(t0.c2) THEN SUM(rt0.c0) END, 0.2957371357480264) UNION ALL SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2 HAVING (NOT (LIKELIHOOD(CASE rt0.c0  WHEN MAX(t0.c2) THEN SUM(rt0.c0) END, 0.2957371357480264))) UNION ALL SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2 HAVING ((LIKELIHOOD(CASE rt0.c0  WHEN MAX(t0.c2) THEN SUM(rt0.c0) END, 0.2957371357480264)) ISNULL);
SELECT ALL vt0.c1, rt0.c1, t0.c2 FROM vt0, t0, rt0 GROUP BY vt0.c1, rt0.c1, t0.c2;
SELECT ALL rt0.c0, t0.c2, rt0.c2 FROM rt0, t0;
SELECT rt0.c0, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (t0.c2))) UNION ALL SELECT ALL rt0.c0, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (t0.c2))))) UNION ALL SELECT rt0.c0, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (t0.c2))) ISNULL));
SELECT ALL rt0.c0, t0.c2, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)+(((((rt0.c0)AND(vt0.c1)))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c1 END)+(((((rt0.c0)AND(vt0.c1)))OR(rt0.c1))))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)+(((((rt0.c0)AND(vt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT vt0.c1, rt0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c2 THEN rt0.c0 END)IS((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((x'ae13', rt0.c0, vt0.c0)))))) GROUP BY vt0.c1, rt0.c0 UNION SELECT vt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE ((NOT (((CASE vt0.c0  WHEN t0.c2 THEN rt0.c0 END)IS((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((x'ae13', rt0.c0, vt0.c0)))))))) GROUP BY vt0.c1, rt0.c0 UNION SELECT vt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE (((((CASE vt0.c0  WHEN t0.c2 THEN rt0.c0 END)IS((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((x'ae13', rt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, rt0.c0;
SELECT vt0.c1, rt0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING MAX(CASE WHEN AVG(0.959916540300403) THEN rt0.c0 ELSE MAX(vt0.c1) END) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(CASE WHEN AVG(0.959916540300403) THEN rt0.c0 ELSE MAX(vt0.c1) END))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(CASE WHEN AVG(0.959916540300403) THEN rt0.c0 ELSE MAX(vt0.c1) END)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0;
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0 WHERE (((rt0.c1)||(rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0 WHERE ((NOT (((rt0.c1)||(rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0 WHERE (((((rt0.c1)||(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c2 FROM vt0, rt0, t0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2 FROM rt0, t0, vt0 WHERE (CAST(vt0.c0 AS TEXT)) GROUP BY vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2 FROM rt0, t0, vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2 FROM rt0, t0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2;
SELECT rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2 HAVING (AVG(rt0.c1) IN ()) UNION ALL SELECT ALL rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2 HAVING (NOT ((AVG(rt0.c1) IN ()))) UNION ALL SELECT ALL rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2 HAVING (((AVG(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2;
SELECT rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2 HAVING (AVG(rt0.c1) IN ()) UNION ALL SELECT ALL rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2 HAVING (NOT ((AVG(rt0.c1) IN ()))) UNION ALL SELECT ALL rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2 HAVING (((AVG(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c0, t0.c2, vt0.c1, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c2, vt0.c1, rt0.c2;
SELECT t0.c2, rt0.c1 FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c2)))) ISNULL) FULL OUTER JOIN rt0 ON ((((((rt0.c2)OR(t0.c2)))AND(rt0.c1))) BETWEEN (CASE vt0.c1  WHEN rt0.c1 THEN t0.c2 END) AND ((~ (rt0.c1))));
SELECT DISTINCT rt0.c0, vt0.c0, t0.c2, rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON highlight(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), ((t0.c2)<=(t0.c2)), vt0.c1 COLLATE RTRIM, ((vt0.c0)LIKE(vt0.c0)));
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 WHERE (rt0.c0) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT t0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c0;
SELECT t0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c0 HAVING GROUP_CONCAT(AVG(COUNT(rt0.c2))) UNION ALL SELECT t0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(rt0.c2))))) UNION ALL SELECT ALL t0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(rt0.c2)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (NULLIF(json_array_length('TRUE'), ((vt0.c1) IS TRUE))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (NULLIF(json_array_length('TRUE'), ((vt0.c1) IS TRUE))))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((NULLIF(json_array_length('TRUE'), ((vt0.c1) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 NOT INDEXED WHERE (((CAST(rt0.c2 AS NUMERIC))LIKE(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC))LIKE(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))LIKE(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((((NULL, t0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, t0.c2, 0.3801706168671878)) AND ((t0.c2, rt0.c0, rt0.c2))))GLOB((rt0.c1 IN (rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((((NULL, t0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, t0.c2, 0.3801706168671878)) AND ((t0.c2, rt0.c0, rt0.c2))))GLOB((rt0.c1 IN (rt0.c1))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((((((NULL, t0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, t0.c2, 0.3801706168671878)) AND ((t0.c2, rt0.c0, rt0.c2))))GLOB((rt0.c1 IN (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt0.c1, t0.c2, rt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1, t0.c2, rt0.c1;
SELECT vt0.c1, t0.c2, rt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1, t0.c2, rt0.c1 HAVING SUM(MIN(vt0.c0)) UNION ALL SELECT vt0.c1, t0.c2, rt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1, t0.c2, rt0.c1 HAVING (NOT (SUM(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, t0.c2, rt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1, t0.c2, rt0.c1 HAVING ((SUM(MIN(vt0.c0))) ISNULL);
SELECT ALL t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) ISNULL)) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) ISNULL)))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) ISNULL)) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)IS(rt0.c2)))||(((rt0.c2) NOT BETWEEN (NULL) AND (x'')))) RIGHT OUTER JOIN t0 ON CAST(((x'8f30')-(rt0.c2)) AS INTEGER);
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)IS(rt0.c2)))||(((rt0.c2) NOT BETWEEN (NULL) AND (x'')))) RIGHT OUTER JOIN t0 ON CAST(((x'8f30')-(rt0.c2)) AS INTEGER) WHERE (((vt0.c1)AND(((vt0.c1) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)IS(rt0.c2)))||(((rt0.c2) NOT BETWEEN (NULL) AND (x'')))) RIGHT OUTER JOIN t0 ON CAST(((x'8f30')-(rt0.c2)) AS INTEGER) WHERE ((NOT (((vt0.c1)AND(((vt0.c1) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)IS(rt0.c2)))||(((rt0.c2) NOT BETWEEN (NULL) AND (x'')))) RIGHT OUTER JOIN t0 ON CAST(((x'8f30')-(rt0.c2)) AS INTEGER) WHERE (((((vt0.c1)AND(((vt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)IS(rt0.c2)))||(((rt0.c2) NOT BETWEEN (NULL) AND (x'')))) RIGHT OUTER JOIN t0 ON CAST(((x'8f30')-(rt0.c2)) AS INTEGER);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))+((vt0.c1 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)/(vt0.c0)))+((vt0.c1 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))+((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (MIN(MAX('920240876')) IN ()) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((MIN(MAX('920240876')) IN ()))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((MIN(MAX('920240876')) IN ())) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (MIN(MAX('920240876')) IN ()) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((MIN(MAX('920240876')) IN ()))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((MIN(MAX('920240876')) IN ())) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((TYPEOF('620077480'))OR(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((TYPEOF('620077480'))OR(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((TYPEOF('620077480'))OR(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX(CAST('' AS REAL)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX(CAST('' AS REAL)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(CAST('' AS REAL))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX(CAST('' AS REAL)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX(CAST('' AS REAL)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(CAST('' AS REAL))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT * FROM rt0, vt0, t0;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((JULIANDAY(316378376, vt0.c0, t0.c2)) BETWEEN (LIKELY(rt0.c0)) AND (UNLIKELY(DISTINCT rt0.c2)))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE ((NOT (((JULIANDAY(316378376, vt0.c0, t0.c2)) BETWEEN (LIKELY(rt0.c0)) AND (UNLIKELY(DISTINCT rt0.c2)))))) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE (((((JULIANDAY(316378376, vt0.c0, t0.c2)) BETWEEN (LIKELY(rt0.c0)) AND (UNLIKELY(DISTINCT rt0.c2)))) ISNULL));
SELECT * FROM rt0, vt0, t0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((NULL)<<(vt0.c1)))/(((((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (((((NULL)<<(vt0.c1)))/(((((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((((NULL)<<(vt0.c1)))/(((((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((vt0.c1)==(vt0.c1)))>=(rt0.c2 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((vt0.c1)=(vt0.c1)))>=(rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((((vt0.c1)=(vt0.c1)))>=(rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((CAST(t0.c2 AS BLOB) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((CAST(t0.c2 AS BLOB) IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((CAST(t0.c2 AS BLOB) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (-8.680955E8) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (-8.680955E8))) UNION SELECT DISTINCT * FROM rt0 WHERE (((-8.680955E8) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0, t0, rt0 WHERE (CAST(CAST('1945387921' AS REAL) AS TEXT)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt0, t0, rt0 WHERE ((NOT (CAST(CAST('1945387921' AS REAL) AS TEXT)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt0, t0, rt0 WHERE (((CAST(CAST('1945387921' AS REAL) AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((((MAX(rt0.c2)) ISNULL), GROUP_CONCAT(rt0.c0), ((rt0.c0)-(AVG(rt0.c0))))) AND ((AVG(rt0.c2), COUNT(*), COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((((MAX(rt0.c2)) ISNULL), GROUP_CONCAT(rt0.c0), ((rt0.c0)-(AVG(rt0.c0))))) AND ((AVG(rt0.c2), COUNT(*), COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((((MAX(rt0.c2)) ISNULL), GROUP_CONCAT(rt0.c0), ((rt0.c0)-(AVG(rt0.c0))))) AND ((AVG(rt0.c2), COUNT(*), COUNT(*))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((((MAX(rt0.c2)) ISNULL), GROUP_CONCAT(rt0.c0), ((rt0.c0)-(AVG(rt0.c0))))) AND ((AVG(rt0.c2), COUNT(*), COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((((MAX(rt0.c2)) ISNULL), GROUP_CONCAT(rt0.c0), ((rt0.c0)-(AVG(rt0.c0))))) AND ((AVG(rt0.c2), COUNT(*), COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((((MAX(rt0.c2)) ISNULL), GROUP_CONCAT(rt0.c0), ((rt0.c0)-(AVG(rt0.c0))))) AND ((AVG(rt0.c2), COUNT(*), COUNT(*))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0;
SELECT vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c2) AND (x''))) AND (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c2) AND (x''))) AND (CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0 WHERE (((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c2) AND (x''))) AND (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT vt0.c1, t0.c2, rt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((('1800628600') NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND ((+ (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((('1800628600') NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND ((+ (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((('1800628600') NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND ((+ (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, t0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c1) ISNULL), (((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, t0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c1) ISNULL), (((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) WHERE (((-1.392137689E9) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, t0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c1) ISNULL), (((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) WHERE ((NOT (((-1.392137689E9) ISNULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, t0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c1) ISNULL), (((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) WHERE (((((-1.392137689E9) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, t0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c1) ISNULL), (((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 HAVING (MIN(rt0.c0) IN ()) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 HAVING (NOT ((MIN(rt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 HAVING (((MIN(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 HAVING (MIN(rt0.c0) IN ()) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 HAVING (NOT ((MIN(rt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 HAVING (((MIN(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((0.5940673439192496 IN ()))IS NOT((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((((vt0.c1)>>(rt0.c1))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((0.5940673439192496 IN ()))IS NOT((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((((vt0.c1)>>(rt0.c1))) ISNULL) WHERE (rt0.c0) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((0.5940673439192496 IN ()))IS NOT((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((((vt0.c1)>>(rt0.c1))) ISNULL) WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON (((0.5940673439192496 IN ()))IS NOT((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((((vt0.c1)>>(rt0.c1))) ISNULL) WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((0.5940673439192496 IN ()))IS NOT((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((((vt0.c1)>>(rt0.c1))) ISNULL);
SELECT DISTINCT t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM t0, vt0, rt0;
SELECT DISTINCT t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM t0, vt0, rt0 WHERE (0.7209756539964765) UNION SELECT DISTINCT t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM t0, vt0, rt0 WHERE ((NOT (0.7209756539964765))) UNION SELECT DISTINCT t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM t0, vt0, rt0 WHERE (((0.7209756539964765) ISNULL));
SELECT DISTINCT t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM t0, vt0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((NULL)<=(((t0.c2) BETWEEN (rt0.c0) AND ('-1360661147'))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (((NULL)<=(((t0.c2) BETWEEN (rt0.c0) AND ('-1360661147'))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((((NULL)<=(((t0.c2) BETWEEN (rt0.c0) AND ('-1360661147'))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((MAX(COUNT(0Xffffffff9cc03d8b))) NOT NULL))AND(((MAX(TOTAL(rt0.c1)))IS NOT(t0.c2)))))AND((((rt0.c2)) BETWEEN ((-498746525)) AND ((t0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((((MAX(COUNT(0xffffffff9cc03d8b))) NOT NULL))AND(((MAX(TOTAL(rt0.c1)))IS NOT(t0.c2)))))AND((((rt0.c2)) BETWEEN ((-498746525)) AND ((t0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((((MAX(COUNT(0Xffffffff9cc03d8b))) NOT NULL))AND(((MAX(TOTAL(rt0.c1)))IS NOT(t0.c2)))))AND((((rt0.c2)) BETWEEN ((-498746525)) AND ((t0.c2)))))) ISNULL);
SELECT ALL * FROM rt0, t0, vt0;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((vt0.c1, t0.c2, t0.c2))>((vt0.c0, t0.c2, t0.c2))) COLLATE NOCASE) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE ((NOT ((((vt0.c1, t0.c2, t0.c2))>((vt0.c0, t0.c2, t0.c2))) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE ((((((vt0.c1, t0.c2, t0.c2))>((vt0.c0, t0.c2, t0.c2))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, t0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c1)IS NOT('76515398'))))) CROSS JOIN t0 ON 0.6770548064882133;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, t0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c1)IS NOT('76515398'))))) CROSS JOIN t0 ON 0.6770548064882133 WHERE ((+ (rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, t0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c1)IS NOT('76515398'))))) CROSS JOIN t0 ON 0.6770548064882133 WHERE ((NOT ((+ (rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, t0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c1)IS NOT('76515398'))))) CROSS JOIN t0 ON 0.6770548064882133 WHERE ((((+ (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, t0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c1)IS NOT('76515398'))))) CROSS JOIN t0 ON 0.6770548064882133;
SELECT vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM t0, rt0, vt0 GROUP BY vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM t0, rt0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c2) AND (rt0.c2))) AND ((((vt0.c0))<=((rt0.c1)))))) GROUP BY vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2 UNION SELECT vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM t0, rt0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c2) AND (rt0.c2))) AND ((((vt0.c0))<=((rt0.c1)))))))) GROUP BY vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM t0, rt0, vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c2) AND (rt0.c2))) AND ((((vt0.c0))<=((rt0.c1)))))) ISNULL)) GROUP BY vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM t0, rt0, vt0 GROUP BY vt0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL t0.c2 FROM t0, rt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING (((MIN(SUM(rt0.c0)))) BETWEEN ((COUNT(TOTAL(TOTAL(rt0.c0))))) AND ((MIN(TOTAL(0.18333956944037455))))) UNION ALL SELECT ALL t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING (NOT ((((MIN(SUM(rt0.c0)))) BETWEEN ((COUNT(TOTAL(TOTAL(rt0.c0))))) AND ((MIN(TOTAL(0.18333956944037455))))))) UNION ALL SELECT t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING (((((MIN(SUM(rt0.c0)))) BETWEEN ((COUNT(TOTAL(TOTAL(rt0.c0))))) AND ((MIN(TOTAL(0.18333956944037455)))))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE ((+ (t0.c2)) COLLATE BINARY) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT ((+ (t0.c2)) COLLATE BINARY))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((((+ (t0.c2)) COLLATE BINARY) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (((t0.c2 IN ()) IN ())) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (((t0.c2 IN ()) IN ())))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((((t0.c2 IN ()) IN ())) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((((LOWER(t0.c2))OR(CAST(t0.c2 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, t0.c2;
SELECT vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((((LOWER(t0.c2))OR(CAST(t0.c2 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)) WHERE ((CAST(0.5266211797078473 AS REAL) IN (((t0.c2)/(vt0.c0))))) GROUP BY vt0.c0, t0.c2 UNION SELECT ALL vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((((LOWER(t0.c2))OR(CAST(t0.c2 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)) WHERE ((NOT ((CAST(0.5266211797078473 AS REAL) IN (((t0.c2)/(vt0.c0))))))) GROUP BY vt0.c0, t0.c2 UNION SELECT ALL vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((((LOWER(t0.c2))OR(CAST(t0.c2 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)) WHERE ((((CAST(0.5266211797078473 AS REAL) IN (((t0.c2)/(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c2;
SELECT vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((((LOWER(t0.c2))OR(CAST(t0.c2 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)) GROUP BY vt0.c0, t0.c2;
SELECT rt0.c2, t0.c2 FROM t0, rt0, vt0 INDEXED BY i63 GROUP BY rt0.c2, t0.c2;
SELECT t0.c2 FROM t0, rt0;
SELECT t0.c2 FROM t0, rt0 WHERE (((((NULL) NOT BETWEEN (x'') AND (rt0.c1))) IS FALSE)) UNION ALL SELECT t0.c2 FROM t0, rt0 WHERE ((NOT (((((NULL) NOT BETWEEN (x'') AND (rt0.c1))) IS FALSE)))) UNION ALL SELECT ALL t0.c2 FROM t0, rt0 WHERE (((((((NULL) NOT BETWEEN (x'') AND (rt0.c1))) IS FALSE)) ISNULL));
SELECT t0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c2;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 WHERE ((((((t0.c2)) BETWEEN ((vt0.c1)) AND ((0xfffffffffc97b71c)))) BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 WHERE ((NOT ((((((t0.c2)) BETWEEN ((vt0.c1)) AND ((0Xfffffffffc97b71c)))) BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c1 END))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 WHERE ((((((((t0.c2)) BETWEEN ((vt0.c1)) AND ((0Xfffffffffc97b71c)))) BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c2;
SELECT t0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c2, rt0.c1, vt0.c1;
SELECT t0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, t0 WHERE ((((rt0.c2 IN ()))<<(((rt0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))))) GROUP BY t0.c2, rt0.c1, vt0.c1 UNION SELECT ALL t0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, t0 WHERE ((NOT ((((rt0.c2 IN ()))<<(((rt0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))))))) GROUP BY t0.c2, rt0.c1, vt0.c1 UNION SELECT t0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, t0 WHERE ((((((rt0.c2 IN ()))<<(((rt0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))))) ISNULL)) GROUP BY t0.c2, rt0.c1, vt0.c1;
SELECT t0.c2, rt0.c1, vt0.c1 FROM vt0, rt0, t0 GROUP BY t0.c2, rt0.c1, vt0.c1;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((GROUP_CONCAT(t0.c2), ((GROUP_CONCAT(AVG(t0.c2))) BETWEEN (GROUP_CONCAT(NULL)) AND (MIN(COUNT(*)))), COUNT(*)))<>((MAX(COUNT(MAX(t0.c2))), MIN(NULL), MAX(t0.c2)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((((GROUP_CONCAT(t0.c2), ((GROUP_CONCAT(AVG(t0.c2))) BETWEEN (GROUP_CONCAT(NULL)) AND (MIN(COUNT(*)))), COUNT(*)))<>((MAX(COUNT(MAX(t0.c2))), MIN(NULL), MAX(t0.c2)))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((((GROUP_CONCAT(t0.c2), ((GROUP_CONCAT(AVG(t0.c2))) BETWEEN (GROUP_CONCAT(NULL)) AND (MIN(COUNT(*)))), COUNT(*)))<>((MAX(COUNT(MAX(t0.c2))), MIN(NULL), MAX(t0.c2))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 WHERE (0.8612885744959468) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, t0.c2 FROM vt0 NOT INDEXED, rt0, t0 WHERE ((NOT (0.8612885744959468))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0 NOT INDEXED WHERE (((0.8612885744959468) ISNULL));
SELECT ALL vt0.c0, vt0.c1, rt0.c0, t0.c2 FROM vt0, rt0, t0;
SELECT DISTINCT * FROM rt0 INDEXED BY i63, t0;
SELECT vt0.c1, rt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL vt0.c1, rt0.c1 FROM rt0, t0, vt0 WHERE ((+ ((NOT (vt0.c1))))) GROUP BY vt0.c1, rt0.c1 UNION SELECT vt0.c1, rt0.c1 FROM rt0, t0, vt0 WHERE ((NOT ((+ ((NOT (vt0.c1))))))) GROUP BY vt0.c1, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c1 FROM rt0, t0, vt0 WHERE ((((+ ((NOT (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM rt0, t0, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM vt0 INDEXED BY i63 FULL OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt0.c0)))OR(t0.c2))) NOT NULL) CROSS JOIN t0 ON (((((((t0.c2, rt0.c2, vt0.c1))==((t0.c2, rt0.c1, 0.3937100197494442))))AND(rt0.c0)))AND(CASE vt0.c1  WHEN 0.21606671931531996 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.6276328046627475 ELSE rt0.c1 END)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((((((((((~ (t0.c2)))AND(NULL)))AND(((t0.c2)>=(t0.c2)))))AND(t0.c2)))OR(t0.c2)))AND(((t0.c2) IS TRUE))))AND((~ (t0.c2))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((((((((((~ (t0.c2)))AND(NULL)))AND(((t0.c2)>=(t0.c2)))))AND(t0.c2)))OR(t0.c2)))AND(((t0.c2) IS TRUE))))AND((~ (t0.c2))))))) UNION ALL SELECT * FROM t0 WHERE ((((((((((((((((~ (t0.c2)))AND(NULL)))AND(((t0.c2)>=(t0.c2)))))AND(t0.c2)))OR(t0.c2)))AND(((t0.c2) IS TRUE))))AND((~ (t0.c2))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM vt0 INDEXED BY i73, t0, rt0 GROUP BY vt0.c0, vt0.c1, t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((COUNT(t0.c2)))>((0.4113757947181942))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((((COUNT(t0.c2)))>((0.4113757947181942))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((((COUNT(t0.c2)))>((0.4113757947181942)))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((COUNT(t0.c2)))>((0.4113757947181942))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((((COUNT(t0.c2)))>((0.4113757947181942))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((((COUNT(t0.c2)))>((0.4113757947181942)))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT * FROM vt0, rt0, t0;
SELECT * FROM vt0, rt0, t0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) UNION ALL SELECT * FROM vt0, rt0, t0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, rt0, t0 WHERE (((CAST((rt0.c1 IN ()) AS TEXT)) ISNULL));
SELECT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((+ (0.8949110375412783))))>((TYPEOF(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((+ (0.8949110375412783))))>((TYPEOF(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((+ (0.8949110375412783))))>((TYPEOF(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, t0.c2, vt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c2, vt0.c0;
SELECT rt0.c2, t0.c2, vt0.c0 FROM vt0, t0, rt0 WHERE ((- (vt0.c1 COLLATE BINARY))) GROUP BY rt0.c2, t0.c2, vt0.c0 UNION SELECT rt0.c2, t0.c2, vt0.c0 FROM vt0, t0, rt0 WHERE ((NOT ((- (vt0.c1 COLLATE BINARY))))) GROUP BY rt0.c2, t0.c2, vt0.c0 UNION SELECT rt0.c2, t0.c2, vt0.c0 FROM vt0, t0, rt0 WHERE ((((- (vt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, t0.c2, vt0.c0;
SELECT ALL rt0.c2, t0.c2, vt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c2, vt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '> Oc#6-' WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '> Oc#6-' WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1 HAVING MAX(GROUP_CONCAT(vt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '> Oc#6-' WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (MAX(GROUP_CONCAT(vt0.c0)) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '> Oc#6-' WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c1 HAVING ((MAX(GROUP_CONCAT(vt0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((vt0.c1)GLOB(vt0.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c1)<<(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((vt0.c1)GLOB(vt0.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c1)<<(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)GLOB(vt0.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c1)<<(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS BLOB)) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOT NULL) AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c1) NOT NULL) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (vt0.c0)))OR(vt0.c1 COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0)))OR(vt0.c1 COLLATE RTRIM))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0)))OR(vt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING x'' UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((x'') ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING x'' UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((x'') ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((('-61513827')IS(rt0.c2))) BETWEEN (((((NULL)AND(rt0.c2)))OR(rt0.c0))) AND ((- (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((('-61513827')IS(rt0.c2))) BETWEEN (((((NULL)AND(rt0.c2)))OR(rt0.c0))) AND ((- (rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((('-61513827')IS(rt0.c2))) BETWEEN (((((NULL)AND(rt0.c2)))OR(rt0.c0))) AND ((- (rt0.c1))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT ALL t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END)>((NOT (rt0.c1))))) GROUP BY t0.c2, rt0.c2, rt0.c0 UNION SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 NOT INDEXED WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 END)>((NOT (rt0.c1))))))) GROUP BY t0.c2, rt0.c2, rt0.c0 UNION SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 END)>((NOT (rt0.c1))))) ISNULL)) GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT ALL t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(GROUP_CONCAT(SUM(rt0.c1)))) IS TRUE) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((MIN(GROUP_CONCAT(SUM(rt0.c1)))) IS TRUE))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((MIN(GROUP_CONCAT(SUM(rt0.c1)))) IS TRUE)) ISNULL);
SELECT ALL * FROM t0, vt0, rt0;
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(((t0.c2)<=(vt0.c1)) AS INTEGER)) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((NOT (CAST(((t0.c2)<=(vt0.c1)) AS INTEGER)))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE (((CAST(((t0.c2)<=(vt0.c1)) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (ROUND(((rt0.c2) ISNULL), ((t0.c2)GLOB(rt0.c0)))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (ROUND(((rt0.c2) ISNULL), ((t0.c2)GLOB(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((ROUND(((rt0.c2) ISNULL), ((t0.c2)GLOB(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT ALL rt0.c2 FROM rt0, vt0 NATURAL JOIN t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 NATURAL JOIN t0 WHERE (TYPEOF(DISTINCT (t0.c2 IN ()))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 NATURAL JOIN t0 WHERE ((NOT (TYPEOF(DISTINCT (t0.c2 IN ()))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 NATURAL JOIN t0 WHERE (((TYPEOF(DISTINCT (t0.c2 IN ()))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 NATURAL JOIN t0 GROUP BY rt0.c2;
SELECT t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(t0.c2)) BETWEEN (((TOTAL(MIN(COUNT('0.7866564503777635'))))>=(AVG(GROUP_CONCAT(MIN(t0.c2)))))) AND (((t0.c2) NOT BETWEEN (TOTAL(rt0.c0)) AND (COUNT(TOTAL(t0.c2)))))) UNION ALL SELECT t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((AVG(t0.c2)) BETWEEN (((TOTAL(MIN(COUNT('0.7866564503777635'))))>=(AVG(GROUP_CONCAT(MIN(t0.c2)))))) AND (((t0.c2) NOT BETWEEN (TOTAL(rt0.c0)) AND (COUNT(TOTAL(t0.c2)))))))) UNION ALL SELECT t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2 HAVING ((((AVG(t0.c2)) BETWEEN (((TOTAL(MIN(COUNT('0.7866564503777635'))))>=(AVG(GROUP_CONCAT(MIN(t0.c2)))))) AND (((t0.c2) NOT BETWEEN (TOTAL(rt0.c0)) AND (COUNT(TOTAL(t0.c2))))))) ISNULL);
SELECT ALL rt0.c2, t0.c2, vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c1)<(vt0.c0))));
SELECT rt0.c2, t0.c2, vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c1)<(vt0.c0)))) WHERE (((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL)))))) UNION ALL SELECT ALL rt0.c2, t0.c2, vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c1)<(vt0.c0)))) WHERE ((NOT (((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL)))))))) UNION ALL SELECT ALL rt0.c2, t0.c2, vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c1)<(vt0.c0)))) WHERE (((((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL)))))) ISNULL));
SELECT ALL rt0.c2, t0.c2, vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c1)<(vt0.c0))));
SELECT DISTINCT vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (0.2866190986921263) AND (rt0.c1)))IS((~ (rt0.c2))));
SELECT DISTINCT vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (0.2866190986921263) AND (rt0.c1)))IS((~ (rt0.c2)))) WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) UNION SELECT DISTINCT vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (0.2866190986921263) AND (rt0.c1)))IS((~ (rt0.c2)))) WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (0.2866190986921263) AND (rt0.c1)))IS((~ (rt0.c2)))) WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (0.2866190986921263) AND (rt0.c1)))IS((~ (rt0.c2))));
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE ('.tU8') GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT ('.tU8'))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 WHERE ((('.tU8') ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2;
SELECT rt0.c0, rt0.c1, t0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2 HAVING CAST((NOT (AVG(rt0.c0))) AS INTEGER) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2 HAVING (NOT (CAST((NOT (AVG(rt0.c0))) AS INTEGER))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0 NOT INDEXED, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2 HAVING ((CAST((NOT (AVG(rt0.c0))) AS INTEGER)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2;
SELECT rt0.c0, rt0.c1, t0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2 HAVING CAST((NOT (AVG(rt0.c0))) AS INTEGER) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2 HAVING (NOT (CAST((NOT (AVG(rt0.c0))) AS INTEGER))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0 NOT INDEXED, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2 HAVING ((CAST((NOT (AVG(rt0.c0))) AS INTEGER)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, t0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((x'f156')) AND ((vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE NULL END;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((x'f156')) AND ((vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE NULL END WHERE (((NULL) NOTNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((x'f156')) AND ((vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE NULL END WHERE ((NOT (((NULL) NOTNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((x'f156')) AND ((vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE NULL END WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((x'f156')) AND ((vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE NULL END;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((((((((IFNULL(vt0.c0, rt0.c0))OR(CASE 0.11453565454210435  WHEN vt0.c1 THEN 1095030944 END)))OR(CAST(rt0.c1 AS REAL))))AND(((vt0.c1)!=(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((((((((IFNULL(vt0.c0, rt0.c0))OR(CASE 0.11453565454210435  WHEN vt0.c1 THEN 1095030944 END)))OR(CAST(rt0.c1 AS REAL))))AND(((vt0.c1)<>(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((((((((((IFNULL(vt0.c0, rt0.c0))OR(CASE 0.11453565454210435  WHEN vt0.c1 THEN 1095030944 END)))OR(CAST(rt0.c1 AS REAL))))AND(((vt0.c1)<>(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT ALL vt0.c0, vt0.c1, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE (((vt0.c1, rt0.c1, rt0.c1))<((x'', vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt0.c1, rt0.c1;
SELECT vt0.c0, vt0.c1, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE (((vt0.c1, rt0.c1, rt0.c1))<((x'', vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) END WHERE (CASE ((rt0.c0) BETWEEN (x'1afd') AND (vt0.c0))  WHEN CAST(vt0.c1 AS NUMERIC) THEN (rt0.c2 IN ()) END) GROUP BY vt0.c0, vt0.c1, rt0.c1 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE (((vt0.c1, rt0.c1, rt0.c1))<((x'', vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) END WHERE ((NOT (CASE ((rt0.c0) BETWEEN (x'1afd') AND (vt0.c0))  WHEN CAST(vt0.c1 AS NUMERIC) THEN (rt0.c2 IN ()) END))) GROUP BY vt0.c0, vt0.c1, rt0.c1 UNION SELECT vt0.c0, vt0.c1, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE (((vt0.c1, rt0.c1, rt0.c1))<((x'', vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) END WHERE (((CASE ((rt0.c0) BETWEEN (x'1afd') AND (vt0.c0))  WHEN CAST(vt0.c1 AS NUMERIC) THEN (rt0.c2 IN ()) END) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE (((vt0.c1, rt0.c1, rt0.c1))<((x'', vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt0.c1, rt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(COUNT(')z2Be\rU/n')) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(')z2Be\rU/n')))) UNION ALL SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(COUNT(')z2Be\rU/n'))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c1)-(vt0.c1)))))AND((vt0.c0 IN (vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c1)-(vt0.c1)))))AND((vt0.c0 IN (vt0.c1))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c1)-(vt0.c1)))))AND((vt0.c0 IN (vt0.c1))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 END)||((vt0.c0 IN ())))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c2 END)||((vt0.c0 IN ())))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c2 END)||((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT ALL t0.c2, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))) GROUP BY t0.c2, rt0.c1, rt0.c2;
SELECT ALL t0.c2, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))) WHERE ((((rt0.c1 IN ()))LIKE(CASE t0.c2  WHEN rt0.c1 THEN t0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))) GROUP BY t0.c2, rt0.c1, rt0.c2 UNION SELECT ALL t0.c2, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))) WHERE ((NOT ((((rt0.c1 IN ()))LIKE(CASE t0.c2  WHEN rt0.c1 THEN t0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))))) GROUP BY t0.c2, rt0.c1, rt0.c2 UNION SELECT ALL t0.c2, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))) WHERE ((((((rt0.c1 IN ()))LIKE(CASE t0.c2  WHEN rt0.c1 THEN t0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))) ISNULL)) GROUP BY t0.c2, rt0.c1, rt0.c2;
SELECT ALL t0.c2, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))) GROUP BY t0.c2, rt0.c1, rt0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(((t0.c2) IS FALSE)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(((t0.c2) IS FALSE)))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(((t0.c2) IS FALSE))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(((t0.c2) IS FALSE)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(((t0.c2) IS FALSE)))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(((t0.c2) IS FALSE))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE (CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (''))  WHEN ((x'')%(t0.c2)) THEN t0.c2 WHEN ((t0.c2)*(t0.c2)) THEN '-1699390569' WHEN CAST(999212539 AS INTEGER) THEN 2.053422736E9 END) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (''))  WHEN ((x'')%(t0.c2)) THEN t0.c2 WHEN ((t0.c2)*(t0.c2)) THEN '-1699390569' WHEN CAST(999212539 AS INTEGER) THEN 2.053422736E9 END))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (''))  WHEN ((x'')%(t0.c2)) THEN t0.c2 WHEN ((t0.c2)*(t0.c2)) THEN '-1699390569' WHEN CAST(999212539 AS INTEGER) THEN 2.053422736E9 END) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((vt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c0)IS NOT(vt0.c1)), NULL, (~ (vt0.c0)))) AND ((((rt0.c2) NOTNULL), ((((rt0.c2)OR(vt0.c1)))AND(rt0.c1)), ((NULL)&(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((vt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c0)IS NOT(vt0.c1)), NULL, (~ (vt0.c0)))) AND ((((rt0.c2) NOTNULL), ((((rt0.c2)OR(vt0.c1)))AND(rt0.c1)), ((NULL)&(rt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((vt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c0)IS NOT(vt0.c1)), NULL, (~ (vt0.c0)))) AND ((((rt0.c2) NOTNULL), ((((rt0.c2)OR(vt0.c1)))AND(rt0.c1)), ((NULL)&(rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON ((((vt0.c1)AND(ABS(x'1ef1'))))AND((((vt0.c1))<=((rt0.c0))))) FULL OUTER JOIN vt0 ON json_type(0.08164524741304413) GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(AVG(rt0.c0))))AND(AVG(COUNT(COUNT(*))))))>>(((rt0.c2)%(SUM(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(AVG(rt0.c0))))AND(AVG(COUNT(COUNT(*))))))>>(((rt0.c2)%(SUM(rt0.c0))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(AVG(rt0.c0))))AND(AVG(COUNT(COUNT(*))))))>>(((rt0.c2)%(SUM(rt0.c0)))))) ISNULL);
SELECT ALL MIN(((((vt0.c1 IN ())))=((vt0.c1)))) FROM vt0 ORDER BY '%Y', (((((vt0.c0)>(vt0.c0))))==((vt0.c1)))  NULLS FIRST;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 5.28981203E8 THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c0 WHEN ((vt0.c1)>(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)|(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN vt0.c0 THEN (~ (vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 5.28981203E8 THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c0 WHEN ((vt0.c1)>(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)|(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN vt0.c0 THEN (~ (vt0.c0)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 5.28981203E8 THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c0 WHEN ((vt0.c1)>(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)|(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN vt0.c0 THEN (~ (vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c1)IS NOT(rt0.c0)) ELSE ((t0.c2) IS FALSE) END) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (CASE vt0.c1 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c1)IS NOT(rt0.c0)) ELSE ((t0.c2) IS FALSE) END))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((CASE vt0.c1 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c1)IS NOT(rt0.c0)) ELSE ((t0.c2) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (((0.3423529274321385)IS NOT(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c1 END))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((0.3423529274321385)IS NOT(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c1 END))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (((((0.3423529274321385)IS NOT(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT t0.c2, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c1 END THEN ((t0.c2)/(vt0.c1)) WHEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) THEN rt0.c2 WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN (rt0.c0)) END GROUP BY t0.c2, rt0.c0;
SELECT ALL t0.c2, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c1 END THEN ((t0.c2)/(vt0.c1)) WHEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) THEN rt0.c2 WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN (rt0.c0)) END GROUP BY t0.c2, rt0.c0 HAVING MAX(SUM(COUNT(COUNT(*))) COLLATE NOCASE) UNION ALL SELECT t0.c2, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c1 END THEN ((t0.c2)/(vt0.c1)) WHEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) THEN rt0.c2 WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN (rt0.c0)) END GROUP BY t0.c2, rt0.c0 HAVING (NOT (MAX(SUM(COUNT(COUNT(*))) COLLATE NOCASE))) UNION ALL SELECT t0.c2, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c1 END THEN ((t0.c2)/(vt0.c1)) WHEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) THEN rt0.c2 WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN (rt0.c0)) END GROUP BY t0.c2, rt0.c0 HAVING ((MAX(SUM(COUNT(COUNT(*))) COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c1, t0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0;
SELECT rt0.c1, t0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0 WHERE ((((((vt0.c1))>=((rt0.c0))))!=(CAST(t0.c2 AS INTEGER)))) UNION ALL SELECT ALL rt0.c1, t0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0 WHERE ((NOT ((((((vt0.c1))>=((rt0.c0))))!=(CAST(t0.c2 AS INTEGER)))))) UNION ALL SELECT rt0.c1, t0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0 WHERE ((((((((vt0.c1))>=((rt0.c0))))<>(CAST(t0.c2 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c1, t0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, vt0, rt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c0)<=(vt0.c1)) COLLATE NOCASE COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c0)<=(vt0.c1)) COLLATE NOCASE COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0)<=(vt0.c1)) COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS NUMERIC)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((CAST((rt0.c1 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1;
SELECT rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING MAX(CAST('~P' AS INTEGER)) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING (NOT (MAX(CAST('~P' AS INTEGER)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING ((MAX(CAST('~P' AS INTEGER))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1;
SELECT rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING MAX(CAST('~P' AS INTEGER)) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING (NOT (MAX(CAST('~P' AS INTEGER)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING ((MAX(CAST('~P' AS INTEGER))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, vt0.c1;
