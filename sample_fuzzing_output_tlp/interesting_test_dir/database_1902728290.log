-- Time: 2024/06/09 13:50:11
-- Database: database90
-- Database version: 3.40.0
-- seed value: 1902728290
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, c2, , columnsize=0, ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
DROP TABLE vt0; -- 6ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.soft_heap_limit = 356002075744775099; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, languageid="lid"); -- 1ms;
UPDATE vt1 SET (c0, c0)=(7.121277668246062E17, x'') WHERE (UPPER(0X192641fa) IN ((~ (vt1.c0)))); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('', 'Ag젟pI>XA', NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(lid, c0) VALUES (x'', 0X9e1fc6e5045d9ff); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 10); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE vt1.c0; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN '0j#㯓褚z\t\r' END)>(CAST(vt0.c1 AS REAL))); -- 2ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1897446085 unordered noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (lid)=(1758107232); -- 1ms;
UPDATE vt0 SET (c1)=(NULL); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
PRAGMA cache_size = 0; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('⑴&..!u郥', '', '?'); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('1963811950'); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', x'', 0.6530929865735671), (x'', '', x''), (x'', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, lid) VALUES ('712127766824606207', NULL); -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1208165174); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1987267153); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1474695640); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1.505245153E9); -- 0ms;
END; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0Xffffffff83be5ea1, '-1814559433') WHERE CASE NULL  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN (vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('-1505245153', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)<(x'')) WHEN ((vt1.c0)+(vt1.c0)) THEN (vt1.c0 IN ()) END; -- 2ms;
INSERT INTO vt0(vt0) VALUES('merge=-618047730,3');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1492393941,13');\n; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA stats; -- 1ms;
END; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('356002075744775099'); -- 10ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('', x'09e5'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0X7118bac5, c0=''; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt0.lid, vt1.c0 FROM vt0, vt1;
SELECT vt0.lid, vt1.c0 FROM vt0, vt1 WHERE (CASE ((vt0.c1)IS NOT(vt0.c0))  WHEN ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (((vt0.c1, vt0.lid, vt1.c0))<((vt0.lid, vt0.lid, vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.lid) BETWEEN (vt1.c0) AND (vt0.lid)) WHEN (((vt0.c0, vt1.c0, vt0.lid, vt0.c0, vt0.c1))==((vt1.c0, vt0.lid, vt0.lid, 0.008819404119192131, vt0.lid))) THEN (('')+(vt0.c0)) END) UNION ALL SELECT vt0.lid, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE ((vt0.c1)IS NOT(vt0.c0))  WHEN ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (((vt0.c1, vt0.lid, vt1.c0))<((vt0.lid, vt0.lid, vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.lid) BETWEEN (vt1.c0) AND (vt0.lid)) WHEN (((vt0.c0, vt1.c0, vt0.lid, vt0.c0, vt0.c1))==((vt1.c0, vt0.lid, vt0.lid, 0.008819404119192131, vt0.lid))) THEN (('')+(vt0.c0)) END))) UNION ALL SELECT vt0.lid, vt1.c0 FROM vt0, vt1 WHERE (((CASE ((vt0.c1)IS NOT(vt0.c0))  WHEN ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (((vt0.c1, vt0.lid, vt1.c0))<((vt0.lid, vt0.lid, vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.lid) BETWEEN (vt1.c0) AND (vt0.lid)) WHEN (((vt0.c0, vt1.c0, vt0.lid, vt0.c0, vt0.c1))=((vt1.c0, vt0.lid, vt0.lid, 0.008819404119192131, vt0.lid))) THEN (('')+(vt0.c0)) END) ISNULL));
SELECT vt0.lid, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))>=(ABS(NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))>=(ABS(NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))>=(ABS(NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((ABS(vt1.c0)) BETWEEN (((vt0.lid) NOTNULL)) AND ((vt0.c1 IN (vt0.c1)))) GROUP BY vt1.c0, vt0.c0, vt0.lid, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((ABS(vt1.c0)) BETWEEN (((vt0.lid) NOTNULL)) AND ((vt0.c1 IN (vt0.c1)))) WHERE (LOWER(vt0.c0)) GROUP BY vt1.c0, vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((ABS(vt1.c0)) BETWEEN (((vt0.lid) NOTNULL)) AND ((vt0.c1 IN (vt0.c1)))) WHERE ((NOT (LOWER(vt0.c0)))) GROUP BY vt1.c0, vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((ABS(vt1.c0)) BETWEEN (((vt0.lid) NOTNULL)) AND ((vt0.c1 IN (vt0.c1)))) WHERE (((LOWER(vt0.c0)) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((ABS(vt1.c0)) BETWEEN (((vt0.lid) NOTNULL)) AND ((vt0.c1 IN (vt0.c1)))) GROUP BY vt1.c0, vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING TOTAL(MAX(vt0.lid)) UNION ALL SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (TOTAL(MAX(vt0.lid)))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((TOTAL(MAX(vt0.lid))) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE (vt0.c1) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT NULL))==((((vt1.c0))=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))==((((vt1.c0))==((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT NULL))=((((vt1.c0))==((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE ((((vt0.lid) IS TRUE) IN (vt0.lid COLLATE RTRIM, ((((vt0.lid)AND(vt0.c1)))OR(vt1.c0))))) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.lid) IS TRUE) IN (vt0.lid COLLATE RTRIM, ((((vt0.lid)AND(vt0.c1)))OR(vt1.c0))))))) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.lid) IS TRUE) IN (vt0.lid COLLATE RTRIM, ((((vt0.lid)AND(vt0.c1)))OR(vt1.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c1 IN ()))<<(vt0.c1 COLLATE RTRIM)) GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c1 IN ()))<<(vt0.c1 COLLATE RTRIM)) GROUP BY vt0.lid, vt0.c0 HAVING SUM(((((AVG(vt0.c1))OR(vt0.c0)))OR(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c1 IN ()))<<(vt0.c1 COLLATE RTRIM)) GROUP BY vt0.lid, vt0.c0 HAVING (NOT (SUM(((((AVG(vt0.c1))OR(vt0.c0)))OR(COUNT(vt0.c1)))))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 INNER JOIN vt1 ON (((vt0.c1 IN ()))<<(vt0.c1 COLLATE RTRIM)) GROUP BY vt0.lid, vt0.c0 HAVING ((SUM(((((AVG(vt0.c1))OR(vt0.c0)))OR(COUNT(vt0.c1))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (LENGTH((vt1.c0 IN (vt1.c0, vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (LENGTH((vt1.c0 IN (vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((LENGTH((vt1.c0 IN (vt1.c0, vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('419838931') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('419838931'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('419838931') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.lid AS INTEGER)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((vt1.c0 IN ()))) GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.lid AS INTEGER)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((vt1.c0 IN ()))) WHERE ((CASE vt0.c0  WHEN vt0.lid THEN vt1.c0 ELSE vt0.c0 END IN (((((vt0.c1)AND(vt1.c0)))OR(vt0.lid))))) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.lid AS INTEGER)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((vt1.c0 IN ()))) WHERE ((NOT ((CASE vt0.c0  WHEN vt0.lid THEN vt1.c0 ELSE vt0.c0 END IN (((((vt0.c1)AND(vt1.c0)))OR(vt0.lid))))))) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.lid AS INTEGER)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((vt1.c0 IN ()))) WHERE ((((CASE vt0.c0  WHEN vt0.lid THEN vt1.c0 ELSE vt0.c0 END IN (((((vt0.c1)AND(vt1.c0)))OR(vt0.lid))))) ISNULL)) GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.lid AS INTEGER)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((vt1.c0 IN ()))) GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (CASE '1963811950'  WHEN CAST(vt0.c0 AS NUMERIC) THEN (((vt0.c1, vt0.lid, vt0.c1))>=((vt0.lid, vt0.lid, vt0.c1))) END) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE '1963811950'  WHEN CAST(vt0.c0 AS NUMERIC) THEN (((vt0.c1, vt0.lid, vt0.c1))>=((vt0.lid, vt0.lid, vt0.c1))) END))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE '1963811950'  WHEN CAST(vt0.c0 AS NUMERIC) THEN (((vt0.c1, vt0.lid, vt0.c1))>=((vt0.lid, vt0.lid, vt0.c1))) END) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 WHERE (NULLIF(((vt0.c1)<>(vt1.c0)), ((vt1.c0)IS(vt1.c0)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, vt0 WHERE ((NOT (NULLIF(((vt0.c1)<>(vt1.c0)), ((vt1.c0)IS(vt1.c0)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 NOT INDEXED WHERE (((NULLIF(((vt0.c1)!=(vt1.c0)), ((vt1.c0)IS(vt1.c0)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(COUNT(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(COUNT(TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(COUNT(TOTAL(vt1.c0))))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1;
SELECT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((+ (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (~ (vt1.c0))))!=((vt1.c0 COLLATE BINARY, vt1.c0, json_type(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((+ (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (~ (vt1.c0))))!=((vt1.c0 COLLATE BINARY, vt1.c0, json_type(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((+ (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (~ (vt1.c0))))<>((vt1.c0 COLLATE BINARY, vt1.c0, json_type(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (vt1.c0) AND (((vt1.c0)!=(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) BETWEEN (vt1.c0) AND (((vt1.c0)<>(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT)) BETWEEN (vt1.c0) AND (((vt1.c0)<>(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING COUNT(GROUP_CONCAT(AVG(MAX(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(AVG(MAX(vt0.c1)))))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING ((COUNT(GROUP_CONCAT(AVG(MAX(vt0.c1))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ())))<((NULL)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 IN ())))<((NULL)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0 IN ())))<((NULL)))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE (x'0dd3') UNION SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (x'0dd3'))) UNION SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE (((x'0dd3') ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((CAST(vt0.lid AS BLOB)) NOT BETWEEN ((1780217850 IN ())) AND (((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.lid AS BLOB)) NOT BETWEEN ((1780217850 IN ())) AND (((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((CAST(vt0.lid AS BLOB)) NOT BETWEEN ((1780217850 IN ())) AND (((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING vt0.c1 UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING vt0.c1 UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) BETWEEN (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))) AND (CASE -1e500  WHEN vt0.c0 THEN vt0.lid END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) BETWEEN (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))) AND (CASE -1e500  WHEN vt0.c0 THEN vt0.lid END))))) UNION ALL SELECT * FROM vt0 WHERE ((((((~ (vt0.c0))) BETWEEN (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))) AND (CASE -1e500  WHEN vt0.c0 THEN vt0.lid END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c1)) AND ((vt0.c1, vt0.lid, vt0.c0))))AND(((((vt0.lid)OR(vt0.c1)))OR(vt0.c1))))) GROUP BY vt0.lid, vt0.c0, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c1)) AND ((vt0.c1, vt0.lid, vt0.c0))))AND(((((vt0.lid)OR(vt0.c1)))OR(vt0.c1))))))) GROUP BY vt0.lid, vt0.c0, vt0.c1 UNION SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c1)) AND ((vt0.c1, vt0.lid, vt0.c0))))AND(((((vt0.lid)OR(vt0.c1)))OR(vt0.c1))))) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (COUNT(GROUP_CONCAT(vt1.c0))))) NOT BETWEEN (MAX(vt1.c0)) AND (MAX(SUM(TOTAL(SUM(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((- (COUNT(GROUP_CONCAT(vt1.c0))))) NOT BETWEEN (MAX(vt1.c0)) AND (MAX(SUM(TOTAL(SUM(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((- (COUNT(GROUP_CONCAT(vt1.c0))))) NOT BETWEEN (MAX(vt1.c0)) AND (MAX(SUM(TOTAL(SUM(vt1.c0))))))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1 COLLATE BINARY)AND('-960631729')))AND(CAST(vt0.c0 AS BLOB))))AND(json_object(x'', vt1.c0))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1 COLLATE BINARY)AND('-960631729')))AND(CAST(vt0.c0 AS BLOB))))AND(json_object(x'', vt1.c0))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END)) WHERE (x'7365') UNION ALL SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1 COLLATE BINARY)AND('-960631729')))AND(CAST(vt0.c0 AS BLOB))))AND(json_object(x'', vt1.c0))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END)) WHERE ((NOT (x'7365'))) UNION ALL SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1 COLLATE BINARY)AND('-960631729')))AND(CAST(vt0.c0 AS BLOB))))AND(json_object(x'', vt1.c0))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END)) WHERE (((x'7365') ISNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1 COLLATE BINARY)AND('-960631729')))AND(CAST(vt0.c0 AS BLOB))))AND(json_object(x'', vt1.c0))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END));
SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0 IN (vt0.c1)))OR(((vt0.lid)-(vt0.lid)))))AND(0Xffffffffc8474b94))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0 IN (vt0.c1)))OR(((vt0.lid)-(vt0.lid)))))AND(0Xffffffffc8474b94))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt0.c0 IN (vt0.c1)))OR(((vt0.lid)-(vt0.lid)))))AND(0Xffffffffc8474b94))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (CASE 0.6210024824943219 COLLATE RTRIM  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c1 IN ()) ELSE (((vt0.c0, '', vt0.c1)) NOT BETWEEN ((0.7431421992266302, vt0.c1, vt0.c1)) AND ((x'f5d2', vt0.c0, vt0.lid))) END) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE 0.6210024824943219 COLLATE RTRIM  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c1 IN ()) ELSE (((vt0.c0, '', vt0.c1)) NOT BETWEEN ((0.7431421992266302, vt0.c1, vt0.c1)) AND ((x'f5d2', vt0.c0, vt0.lid))) END))) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE 0.6210024824943219 COLLATE RTRIM  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c1 IN ()) ELSE (((vt0.c0, '', vt0.c1)) NOT BETWEEN ((0.7431421992266302, vt0.c1, vt0.c1)) AND ((x'f5d2', vt0.c0, vt0.lid))) END) ISNULL)) GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) NOT BETWEEN ((MAX(SUM(AVG(COUNT(*)))))) AND ((CASE WHEN MIN(SUM(AVG(vt0.c1))) THEN vt0.c0 ELSE MIN(vt0.c0) END))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) NOT BETWEEN ((MAX(SUM(AVG(COUNT(*)))))) AND ((CASE WHEN MIN(SUM(AVG(vt0.c1))) THEN vt0.c0 ELSE MIN(vt0.c0) END))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) NOT BETWEEN ((MAX(SUM(AVG(COUNT(*)))))) AND ((CASE WHEN MIN(SUM(AVG(vt0.c1))) THEN vt0.c0 ELSE MIN(vt0.c0) END)))) ISNULL);
SELECT ALL TOTAL((CAST(vt0.c1 AS REAL) IN (vt1.c0 COLLATE BINARY))) FROM vt1, vt0 ORDER BY vt0.c0;
SELECT vt0.lid, vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.lid, vt0.c1 FROM vt1, vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN vt0.c1 COLLATE RTRIM THEN (~ (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((((((((((((vt0.c0)AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.lid)) END) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt1, vt0 WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN vt0.c1 COLLATE RTRIM THEN (~ (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((((((((((((vt0.c0)AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.lid)) END))) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt1, vt0 WHERE (((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN vt0.c1 COLLATE RTRIM THEN (~ (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((((((((((((vt0.c0)AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.lid)) END) ISNULL));
SELECT vt0.lid, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND ('0.8239545209424731'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND ('0.8239545209424731'))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND ('0.8239545209424731'))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (x'') GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.lid, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING '583978857' UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT ('583978857')) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (('583978857') ISNULL);
SELECT vt0.lid, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING '583978857' UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT ('583978857')) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (('583978857') ISNULL);
SELECT vt0.lid, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((vt0.c1)==(NULL)) COLLATE NOCASE) UNION ALL SELECT vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((vt0.c1)==(NULL)) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((vt0.c1)==(NULL)) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.lid) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (UPPER(((vt1.c0)<(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (UPPER(((vt1.c0)<(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((UPPER(((vt1.c0)<(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c1 HAVING ((HEX(DISTINCT COUNT(*))) IS TRUE) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((HEX(DISTINCT COUNT(*))) IS TRUE))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((HEX(DISTINCT COUNT(*))) IS TRUE)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c1 HAVING ((HEX(DISTINCT COUNT(*))) IS TRUE) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((HEX(DISTINCT COUNT(*))) IS TRUE))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((HEX(DISTINCT COUNT(*))) IS TRUE)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((x'')IS NOT((- (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((x'')IS NOT((- (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((x'')IS NOT((- (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.lid)) NOT BETWEEN (((NOT (vt0.lid)), vt0.c0, LIKELY(vt0.c0))) AND ((vt0.c0, (NOT (vt0.lid)), (vt0.lid IN ()))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c1, vt0.lid)) NOT BETWEEN (((NOT (vt0.lid)), vt0.c0, LIKELY(vt0.c0))) AND ((vt0.c0, (NOT (vt0.lid)), (vt0.lid IN ()))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.lid)) NOT BETWEEN (((NOT (vt0.lid)), vt0.c0, LIKELY(vt0.c0))) AND ((vt0.c0, (NOT (vt0.lid)), (vt0.lid IN ()))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ('-2010693962') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ('-2010693962'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((('-2010693962') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING TOTAL(GROUP_CONCAT(MAX(vt0.c1))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(MAX(vt0.c1)))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (TIME(LIKELIHOOD(vt0.c1, 0.3448114774479095), UNLIKELY(DISTINCT vt1.c0), ((vt0.c1)|(vt0.c1)))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (TIME(LIKELIHOOD(vt0.c1, 0.3448114774479095), UNLIKELY(DISTINCT vt1.c0), ((vt0.c1)|(vt0.c1)))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE (((TIME(LIKELIHOOD(vt0.c1, 0.3448114774479095), UNLIKELY(DISTINCT vt1.c0), ((vt0.c1)|(vt0.c1)))) ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE)) NOTNULL)) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1 WHERE ((NOT (((((vt1.c0) IS FALSE)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1 WHERE (((((((vt1.c0) IS FALSE)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1;
SELECT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE GROUP BY vt0.lid, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE WHERE ((((((((vt0.c1))<((0.9439856656175651))))AND(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c1)))AND(vt0.lid)))AND(vt0.c1)))OR('0.6210024824943219')))))OR(json_patch(-1.868301181E9, vt1.c0)))) GROUP BY vt0.lid, vt0.c0, vt1.c0, vt0.c1 UNION SELECT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE WHERE ((NOT ((((((((vt0.c1))<((0.9439856656175651))))AND(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c1)))AND(vt0.lid)))AND(vt0.c1)))OR('0.6210024824943219')))))OR(json_patch(-1.868301181E9, vt1.c0)))))) GROUP BY vt0.lid, vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE WHERE ((((((((((vt0.c1))<((0.9439856656175651))))AND(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c1)))AND(vt0.lid)))AND(vt0.c1)))OR('0.6210024824943219')))))OR(json_patch(-1.868301181E9, vt1.c0)))) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE GROUP BY vt0.lid, vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((((TOTAL(vt0.c0))OR(MAX(vt0.c1))))OR(TOTAL(TOTAL(vt0.c1)))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (((((TOTAL(vt0.c0))OR(MAX(vt0.c1))))OR(TOTAL(TOTAL(vt0.c1)))))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((((((TOTAL(vt0.c0))OR(MAX(vt0.c1))))OR(TOTAL(TOTAL(vt0.c1))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)+(vt0.lid))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)+(vt0.lid))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0)+(vt0.lid))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, vt0.lid)) AND ((vt0.c0, vt0.lid, vt0.c0)))) NOTNULL)) GROUP BY vt0.c1, vt0.lid UNION SELECT vt0.c1, vt0.lid FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c1, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, vt0.lid)) AND ((vt0.c0, vt0.lid, vt0.c0)))) NOTNULL)))) GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((((((((vt0.c0, vt0.c1, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, vt0.lid)) AND ((vt0.c0, vt0.lid, vt0.c0)))) NOTNULL)) ISNULL)) GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT ALL vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING NULL UNION ALL SELECT ALL vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING (NOT (NULL)) UNION ALL SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING ((NULL) ISNULL);
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT ALL vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING NULL UNION ALL SELECT ALL vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING (NOT (NULL)) UNION ALL SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING ((NULL) ISNULL);
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT ALL vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1;
SELECT vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1 WHERE (vt0.lid) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1 NOT INDEXED WHERE ((NOT (vt0.lid))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1 WHERE (((vt0.lid) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c0)))OR(ABS(DISTINCT vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c0)))OR(ABS(DISTINCT vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c0)))OR(ABS(DISTINCT vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING CAST(MAX(vt0.c0) AS TEXT) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING (NOT (CAST(MAX(vt0.c0) AS TEXT))) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING ((CAST(MAX(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING CAST(MAX(vt0.c0) AS TEXT) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING (NOT (CAST(MAX(vt0.c0) AS TEXT))) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING ((CAST(MAX(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 IN ());
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 IN ()) WHERE (((((-1.814559433E9)GLOB(vt0.c1))) IS TRUE)) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 IN ()) WHERE ((NOT (((((-1.814559433E9)GLOB(vt0.c1))) IS TRUE)))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 IN ()) WHERE (((((((-1.814559433E9)GLOB(vt0.c1))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 IN ());
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.lid;
SELECT vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 WHERE (((x'')AND(vt0.lid)) COLLATE NOCASE) GROUP BY vt0.c1, vt1.c0, vt0.lid UNION SELECT ALL vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 WHERE ((NOT (((x'')AND(vt0.lid)) COLLATE NOCASE))) GROUP BY vt0.c1, vt1.c0, vt0.lid UNION SELECT vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 WHERE (((((x'')AND(vt0.lid)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.lid;
SELECT vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.lid;
SELECT vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1;
SELECT ALL vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1 HAVING ((((SUM(vt0.lid)) IS TRUE)) NOTNULL) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1 HAVING (NOT (((((SUM(vt0.lid)) IS TRUE)) NOTNULL))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1 HAVING ((((((SUM(vt0.lid)) IS TRUE)) NOTNULL)) ISNULL);
SELECT vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1;
SELECT ALL vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1 HAVING ((((SUM(vt0.lid)) IS TRUE)) NOTNULL) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1 HAVING (NOT (((((SUM(vt0.lid)) IS TRUE)) NOTNULL))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1 HAVING ((((((SUM(vt0.lid)) IS TRUE)) NOTNULL)) ISNULL);
SELECT vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c1;
SELECT ALL MAX(NULLIF(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(0.830774118095527)))OR(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0) IS TRUE))) DESC, (~ (((vt1.c0) ISNULL))) ASC;
SELECT ALL vt1.c0, vt0.lid FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.lid FROM vt1 NOT INDEXED, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt1.c0, vt0.lid FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt1.c0, vt0.lid FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt1.c0, vt0.lid FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.lid)AND('{]Fz3-I')))>>(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.lid)AND('{]Fz3-I')))>>(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.lid)AND('{]Fz3-I')))>>(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 WHERE (((((vt0.lid)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END)))AND(((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.lid))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((NOT (((((vt0.lid)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END)))AND(((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.lid))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE (((((((vt0.lid)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END)))AND(((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.lid))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0;
SELECT ALL vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0 HAVING COUNT(MAX(vt0.c1)) UNION ALL SELECT ALL vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0 HAVING (NOT (COUNT(MAX(vt0.c1)))) UNION ALL SELECT ALL vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0 HAVING ((COUNT(MAX(vt0.c1))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN 1.78021785E9 THEN vt1.c0 WHEN 2001159420 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE WHEN CASE WHEN 1.78021785E9 THEN vt1.c0 WHEN 2001159420 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c0 COLLATE NOCASE END))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((CASE WHEN CASE WHEN 1.78021785E9 THEN vt1.c0 WHEN 2001159420 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (~ (UNLIKELY(DISTINCT vt0.lid)));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (~ (UNLIKELY(DISTINCT vt0.lid))) WHERE (CASE WHEN vt0.lid THEN ((vt0.c0)IS(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED INNER JOIN vt1 ON (~ (UNLIKELY(DISTINCT vt0.lid))) WHERE ((NOT (CASE WHEN vt0.lid THEN ((vt0.c0)IS(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (~ (UNLIKELY(DISTINCT vt0.lid))) WHERE (((CASE WHEN vt0.lid THEN ((vt0.c0)IS(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (~ (UNLIKELY(DISTINCT vt0.lid)));
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 NOT INDEXED WHERE ((((vt0.c0 IN ())) BETWEEN (NULL) AND ('1249485965'))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (NULL) AND ('1249485965'))))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (NULL) AND ('1249485965'))) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.lid)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.lid)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING AVG(MIN(TOTAL(vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.lid)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING (NOT (AVG(MIN(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.lid)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING ((AVG(MIN(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((vt0.lid))))>(CASE WHEN vt0.c0 THEN vt0.lid END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))>=((vt0.lid))))>(CASE WHEN vt0.c0 THEN vt0.lid END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))>=((vt0.lid))))>(CASE WHEN vt0.c0 THEN vt0.lid END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN HEX(vt0.lid) THEN ((vt0.c0)<=(NULL)) END) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN HEX(vt0.lid) THEN ((vt0.c0)<=(NULL)) END))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN HEX(vt0.lid) THEN ((vt0.c0)<=(NULL)) END) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE highlight(vt1.c0, vt1.c0, 0.41045227535684936, vt1.c0)  WHEN ((vt1.c0)|(vt1.c0)) THEN COALESCE(vt1.c0, vt1.c0) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE highlight(vt1.c0, vt1.c0, 0.41045227535684936, vt1.c0)  WHEN ((vt1.c0)|(vt1.c0)) THEN COALESCE(vt1.c0, vt1.c0) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE highlight(vt1.c0, vt1.c0, 0.41045227535684936, vt1.c0)  WHEN ((vt1.c0)|(vt1.c0)) THEN COALESCE(vt1.c0, vt1.c0) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END) ISNULL)) GROUP BY vt1.c0;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((((((vt1.c0)LIKE(vt0.c1)))OR(MIN('1819990279'))))OR(((vt0.c0)%(COUNT(TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (((((((vt1.c0)LIKE(vt0.c1)))OR(MIN('1819990279'))))OR(((vt0.c0)%(COUNT(TOTAL(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((((((((vt1.c0)LIKE(vt0.c1)))OR(MIN('1819990279'))))OR(((vt0.c0)%(COUNT(TOTAL(vt0.c0))))))) ISNULL);
SELECT ALL vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt0.lid)AND(1.249485965E9)) IN ())) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.lid)AND(1.249485965E9)) IN ())))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt0.lid)AND(1.249485965E9)) IN ())) ISNULL));
SELECT ALL vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((0.5628969824520745)OR(vt0.c0)))AND(vt0.lid))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((0.5628969824520745)OR(vt0.c0)))AND(vt0.lid))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((0.5628969824520745)OR(vt0.c0)))AND(vt0.lid))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE x'736d' END) BETWEEN (vt0.lid) AND ((((vt0.lid))<((x'')))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE x'736d' END) BETWEEN (vt0.lid) AND ((((vt0.lid))<((x'')))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE (((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE x'736d' END) BETWEEN (vt0.lid) AND ((((vt0.lid))<((x'')))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((CAST(AVG(AVG(AVG(GROUP_CONCAT(vt0.c1)))) AS REAL)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((CAST(AVG(AVG(AVG(GROUP_CONCAT(vt0.c1)))) AS REAL)) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((CAST(AVG(AVG(AVG(GROUP_CONCAT(vt0.c1)))) AS REAL)) NOTNULL)) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0;
SELECT ALL vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 WHERE (((vt1.c0)!=((NULL IN ())))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<>((NULL IN ())))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 WHERE (((((vt1.c0)<>((NULL IN ())))) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((((NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1;
SELECT ALL vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((+ ((((vt0.c1, x'', vt0.c1)) NOT BETWEEN ((vt0.lid, vt1.c0, vt0.lid)) AND ((vt1.c0, vt0.c0, vt0.c0)))))) GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((NOT ((+ ((((vt0.c1, x'', vt0.c1)) NOT BETWEEN ((vt0.lid, vt1.c0, vt0.lid)) AND ((vt1.c0, vt0.c0, vt0.c0)))))))) GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((((+ ((((vt0.c1, x'', vt0.c1)) NOT BETWEEN ((vt0.lid, vt1.c0, vt0.lid)) AND ((vt1.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN TRIM(vt1.c0) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN TRIM(vt1.c0) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN TRIM(vt1.c0) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((0xfffffffffe3a6dc9) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt1.c0)OR(vt0.lid)))OR(vt0.lid))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((0Xfffffffffe3a6dc9) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt1.c0)OR(vt0.lid)))OR(vt0.lid))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((0xfffffffffe3a6dc9) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt1.c0)OR(vt0.lid)))OR(vt0.lid))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE (((((vt0.c0) NOT NULL))OR(((vt0.c0)IS NOT(vt0.lid))))) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))OR(((vt0.c0)IS NOT(vt0.lid))))))) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(((vt0.c0)IS NOT(vt0.lid))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0))GLOB(CAST(AVG(COUNT(*)) AS NUMERIC))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0))GLOB(CAST(AVG(COUNT(*)) AS NUMERIC))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0))GLOB(CAST(AVG(COUNT(*)) AS NUMERIC)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((((((((CAST(vt0.c0 AS REAL))AND(vt0.lid)))OR(((vt0.lid)*(vt0.c1)))))AND((vt0.c1 IN ()))))OR(((((vt0.lid)AND(vt0.c0)))OR(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS REAL))AND(vt0.lid)))OR(((vt0.lid)*(vt0.c1)))))AND((vt0.c1 IN ()))))OR(((((vt0.lid)AND(vt0.c0)))OR(vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((((((((((CAST(vt0.c0 AS REAL))AND(vt0.lid)))OR(((vt0.lid)*(vt0.c1)))))AND((vt0.c1 IN ()))))OR(((((vt0.lid)AND(vt0.c0)))OR(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT ALL vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.lid;
SELECT vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE (CASE (+ (vt0.c0))  WHEN (((0.9439856656175651))<((vt0.lid))) THEN vt0.c1 ELSE ((vt0.c1)OR(vt0.c1)) END) GROUP BY vt1.c0, vt0.c0, vt0.lid UNION SELECT ALL vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE ((NOT (CASE (+ (vt0.c0))  WHEN (((0.9439856656175651))<((vt0.lid))) THEN vt0.c1 ELSE ((vt0.c1)OR(vt0.c1)) END))) GROUP BY vt1.c0, vt0.c0, vt0.lid UNION SELECT ALL vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE (((CASE (+ (vt0.c0))  WHEN (((0.9439856656175651))<((vt0.lid))) THEN vt0.c1 ELSE ((vt0.c1)OR(vt0.c1)) END) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.lid;
SELECT ALL vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.lid;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(CASE WHEN COUNT(*) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(COUNT(*)))) END) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(CASE WHEN COUNT(*) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(COUNT(*)))) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(CASE WHEN COUNT(*) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(COUNT(*)))) END)) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (vt0.lid) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.lid))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((vt0.lid) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (CAST(vt0.lid AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (CAST(vt0.lid AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (CAST(vt0.lid AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.lid GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.lid WHERE (IFNULL(CASE WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN '-1e500' END, ((vt0.c0) IS TRUE))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.lid WHERE ((NOT (IFNULL(CASE WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN '-1e500' END, ((vt0.c0) IS TRUE))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.lid WHERE (((IFNULL(CASE WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN '-1e500' END, ((vt0.c0) IS TRUE))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt0.lid GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.lid, vt1.c0, vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))<=(vt1.c0)) GROUP BY vt0.lid, vt1.c0, vt0.c1, vt0.c0;
SELECT vt0.lid, vt1.c0, vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))<=(vt1.c0)) GROUP BY vt0.lid, vt1.c0, vt0.c1, vt0.c0 HAVING SUM(COUNT(AVG(vt1.c0))) UNION ALL SELECT ALL vt0.lid, vt1.c0, vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))<=(vt1.c0)) GROUP BY vt0.lid, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (SUM(COUNT(AVG(vt1.c0))))) UNION ALL SELECT ALL vt0.lid, vt1.c0, vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))<=(vt1.c0)) GROUP BY vt0.lid, vt1.c0, vt0.c1, vt0.c0 HAVING ((SUM(COUNT(AVG(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)GLOB(vt0.c0))) IS TRUE);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)GLOB(vt0.c0))) IS TRUE) WHERE ((((((vt1.c0)AND(vt0.c0)))OR(vt0.lid)) IN (0.20300649159487283))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)GLOB(vt0.c0))) IS TRUE) WHERE ((NOT ((((((vt1.c0)AND(vt0.c0)))OR(vt0.lid)) IN (0.20300649159487283))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)GLOB(vt0.c0))) IS TRUE) WHERE ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.lid)) IN (0.20300649159487283))) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)GLOB(vt0.c0))) IS TRUE);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(1121301496 COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(1121301496 COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(1121301496 COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))=(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((0.9148793716155257, vt1.c0, vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))==(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((0.9148793716155257, vt1.c0, vt1.c0))))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))=(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((0.9148793716155257, vt1.c0, vt1.c0))))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT ((NOT ((vt0.c0 IN ()))))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (((NOT ((vt0.c0 IN ())))) ISNULL);
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT ((NOT ((vt0.c0 IN ()))))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (((NOT ((vt0.c0 IN ())))) ISNULL);
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((~ (CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT * FROM vt0 WHERE ((((~ (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON (((((-1.445235376E9)OR(vt1.c0)))AND(vt0.c1)) IN ());
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON (((((-1.445235376E9)OR(vt1.c0)))AND(vt0.c1)) IN ()) WHERE ((((CASE vt1.c0  WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid END))<=(((~ (vt0.lid)))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON (((((-1.445235376E9)OR(vt1.c0)))AND(vt0.c1)) IN ()) WHERE ((NOT ((((CASE vt1.c0  WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid END))<=(((~ (vt0.lid)))))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON (((((-1.445235376E9)OR(vt1.c0)))AND(vt0.c1)) IN ()) WHERE ((((((CASE vt1.c0  WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid END))<=(((~ (vt0.lid)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON (((((-1.445235376E9)OR(vt1.c0)))AND(vt0.c1)) IN ());
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c0) IS TRUE)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c0) IS TRUE)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c0)) COLLATE RTRIM COLLATE BINARY GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c0)) COLLATE RTRIM COLLATE BINARY GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 HAVING TOTAL(COUNT(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c0)) COLLATE RTRIM COLLATE BINARY GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 HAVING (NOT (TOTAL(COUNT(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c0)) COLLATE RTRIM COLLATE BINARY GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 HAVING ((TOTAL(COUNT(TOTAL(vt0.c0)))) ISNULL);
SELECT * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt0.c1))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt0.c1)))) WHERE (((vt0.c1)=(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt0.c1)))) WHERE ((NOT (((vt0.c1)==(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0))))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt0.c1)))) WHERE (((((vt0.c1)=(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0))))) ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt0.c1))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS REAL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((COALESCE(vt0.c0, vt0.c1, vt0.lid, vt0.c1) IN ())) GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((COALESCE(vt0.c0, vt0.c1, vt0.lid, vt0.c1) IN ())))) GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((((COALESCE(vt0.c0, vt0.c1, vt0.lid, vt0.c1) IN ())) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(AVG(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(AVG(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)-(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0 COLLATE BINARY)AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)-(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0 COLLATE BINARY)AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)-(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE (((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.lid))) NOT BETWEEN ('CQ<') AND ((~ (vt0.lid))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT (((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.lid))) NOT BETWEEN ('CQ<') AND ((~ (vt0.lid))))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE (((((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.lid))) NOT BETWEEN ('CQ<') AND ((~ (vt0.lid))))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt0.c1)))IS((NOT (vt0.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0 IN (vt1.c0, vt0.c1)))IS((NOT (vt0.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0 IN (vt1.c0, vt0.c1)))IS((NOT (vt0.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) IS TRUE) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) IS TRUE) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.lid, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 WHERE ((- (CAST(vt0.lid AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT ((- (CAST(vt0.lid AS NUMERIC)))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((- (CAST(vt0.lid AS NUMERIC)))) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid)))-(CAST(x'88f9' AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid)))-(CAST(x'88f9' AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid)))-(CAST(x'88f9' AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid, vt0.c0;
SELECT ALL vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (CAST(x'' AS BLOB)) GROUP BY vt1.c0, vt0.lid, vt0.c0 UNION SELECT ALL vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(x'' AS BLOB)))) GROUP BY vt1.c0, vt0.lid, vt0.c0 UNION SELECT ALL vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (((CAST(x'' AS BLOB)) ISNULL)) GROUP BY vt1.c0, vt0.lid, vt0.c0;
SELECT ALL vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid, vt0.c0;
SELECT vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1 HAVING '2130762303' UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1 HAVING (NOT ('2130762303')) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1 HAVING (('2130762303') ISNULL);
SELECT vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1 HAVING '2130762303' UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1 HAVING (NOT ('2130762303')) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1 HAVING (('2130762303') ISNULL);
SELECT vt1.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.lid)LIKE(vt1.c0)))))OR(((x'')<(vt0.c1)))) GROUP BY vt1.c0, vt0.c1;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)) AS TEXT)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)) AS TEXT)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)) AS TEXT)) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((vt0.lid)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.lid)))|(((((vt1.c0)AND(vt0.lid)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((((((((vt0.lid)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.lid)))|(((((vt1.c0)AND(vt0.lid)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((((vt0.lid)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.lid)))|(((((vt1.c0)AND(vt0.lid)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.7668485412187632 END AS REAL)) GROUP BY vt0.lid, vt1.c0, vt0.c0 UNION SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.7668485412187632 END AS REAL)))) GROUP BY vt0.lid, vt1.c0, vt0.c0 UNION SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.7668485412187632 END AS REAL)) ISNULL)) GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (((MAX(vt0.c1), GROUP_CONCAT(vt1.c0), ((((x'9556')AND(MAX(vt0.lid))))AND(COUNT(*)))))<((COUNT(vt0.c0), SUM(vt1.c0), (TOTAL(vt0.lid) IN ())))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT ((((MAX(vt0.c1), GROUP_CONCAT(vt1.c0), ((((x'9556')AND(MAX(vt0.lid))))AND(COUNT(*)))))<((COUNT(vt0.c0), SUM(vt1.c0), (TOTAL(vt0.lid) IN ())))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (((((MAX(vt0.c1), GROUP_CONCAT(vt1.c0), ((((x'9556')AND(MAX(vt0.lid))))AND(COUNT(*)))))<((COUNT(vt0.c0), SUM(vt1.c0), (TOTAL(vt0.lid) IN ()))))) ISNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (((MAX(vt0.c1), GROUP_CONCAT(vt1.c0), ((((x'9556')AND(MAX(vt0.lid))))AND(COUNT(*)))))<((COUNT(vt0.c0), SUM(vt1.c0), (TOTAL(vt0.lid) IN ())))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT ((((MAX(vt0.c1), GROUP_CONCAT(vt1.c0), ((((x'9556')AND(MAX(vt0.lid))))AND(COUNT(*)))))<((COUNT(vt0.c0), SUM(vt1.c0), (TOTAL(vt0.lid) IN ())))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (((((MAX(vt0.c1), GROUP_CONCAT(vt1.c0), ((((x'9556')AND(MAX(vt0.lid))))AND(COUNT(*)))))<((COUNT(vt0.c0), SUM(vt1.c0), (TOTAL(vt0.lid) IN ()))))) ISNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((('C+ᣙP	~ﯳ' IN (vt0.c0)))>(((vt0.lid) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((('C+ᣙP	~ﯳ' IN (vt0.c0)))>(((vt0.lid) NOT NULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((('C+ᣙP	~ﯳ' IN (vt0.c0)))>(((vt0.lid) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((0.4871343826719581) NOT BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) GROUP BY vt0.lid, vt1.c0, vt0.c0 UNION SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((0.4871343826719581) NOT BETWEEN (vt1.c0) AND (vt0.c1)) IN ())))) GROUP BY vt0.lid, vt1.c0, vt0.c0 UNION SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((0.4871343826719581) NOT BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) ISNULL)) GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0, vt1.c0, SUM(MAX(vt1.c0)))) NOT BETWEEN ((COUNT(MIN(vt1.c0)), MAX(MIN(COUNT(vt1.c0))), AVG(TOTAL(SUM(vt1.c0))))) AND ((COUNT(vt1.c0), (((vt1.c0, MIN(vt1.c0), vt1.c0))<((0.14800830784578645, vt1.c0, MAX(SUM(vt1.c0))))), CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0, vt1.c0, SUM(MAX(vt1.c0)))) NOT BETWEEN ((COUNT(MIN(vt1.c0)), MAX(MIN(COUNT(vt1.c0))), AVG(TOTAL(SUM(vt1.c0))))) AND ((COUNT(vt1.c0), (((vt1.c0, MIN(vt1.c0), vt1.c0))<((0.14800830784578645, vt1.c0, MAX(SUM(vt1.c0))))), CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0, vt1.c0, SUM(MAX(vt1.c0)))) NOT BETWEEN ((COUNT(MIN(vt1.c0)), MAX(MIN(COUNT(vt1.c0))), AVG(TOTAL(SUM(vt1.c0))))) AND ((COUNT(vt1.c0), (((vt1.c0, MIN(vt1.c0), vt1.c0))<((0.14800830784578645, vt1.c0, MAX(SUM(vt1.c0))))), CAST(vt1.c0 AS NUMERIC))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (json_array_length((((vt0.lid))>((vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (json_array_length((((vt0.lid))>((vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((json_array_length((((vt0.lid))>((vt0.c1))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt0.lid)) AND ((vt1.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt0.lid)) AND ((vt1.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt0.lid)) AND ((vt1.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((((vt0.c0)<>(vt0.c1)) IN ((((x''))>=((vt0.lid))), ((vt0.lid)%(vt0.lid))))) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT ((((vt0.c0)!=(vt0.c1)) IN ((((x''))>=((vt0.lid))), ((vt0.lid)%(vt0.lid))))))) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((((((vt0.c0)<>(vt0.c1)) IN ((((x''))>=((vt0.lid))), ((vt0.lid)%(vt0.lid))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0;
SELECT vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0 HAVING AVG(((vt0.c0)>>(vt0.c1))) UNION ALL SELECT vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0 HAVING (NOT (AVG(((vt0.c0)>>(vt0.c1))))) UNION ALL SELECT vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0 HAVING ((AVG(((vt0.c0)>>(vt0.c1)))) ISNULL);
SELECT ALL vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0;
SELECT vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0 HAVING AVG(((vt0.c0)>>(vt0.c1))) UNION ALL SELECT vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0 HAVING (NOT (AVG(((vt0.c0)>>(vt0.c1))))) UNION ALL SELECT vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0 HAVING ((AVG(((vt0.c0)>>(vt0.c1)))) ISNULL);
SELECT ALL vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0;
SELECT vt0.c0, vt0.lid FROM vt0, vt1;
SELECT vt0.c0, vt0.lid FROM vt0, vt1 WHERE (vt0.c1) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0, vt1 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0, vt1 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c0, vt0.lid FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (json_patch(LIKE(vt0.c0, vt0.c0), ((vt0.lid)*(vt0.lid)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (json_patch(LIKE(vt0.c0, vt0.c0), ((vt0.lid)*(vt0.lid)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((json_patch(LIKE(vt0.c0, vt0.c0), ((vt0.lid)*(vt0.lid)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (((MIN(AVG(vt0.c0)) COLLATE RTRIM, TOTAL(COUNT(*)), ((COUNT(*)) IS FALSE)))<=((vt0.lid, COUNT(*), MIN(vt0.lid)))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT ((((MIN(AVG(vt0.c0)) COLLATE RTRIM, TOTAL(COUNT(*)), ((COUNT(*)) IS FALSE)))<=((vt0.lid, COUNT(*), MIN(vt0.lid)))))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (((((MIN(AVG(vt0.c0)) COLLATE RTRIM, TOTAL(COUNT(*)), ((COUNT(*)) IS FALSE)))<=((vt0.lid, COUNT(*), MIN(vt0.lid))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL))OR(LOWER(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL))OR(LOWER(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) ISNULL))OR(LOWER(vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.lid FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.lid FROM vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt0.lid)))AND(vt0.c1)) AS BLOB)) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.lid FROM vt1, vt0 WHERE ((NOT (CAST(((((vt1.c0)AND(vt0.lid)))AND(vt0.c1)) AS BLOB)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.lid FROM vt1, vt0 WHERE (((CAST(((((vt1.c0)AND(vt0.lid)))AND(vt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.lid FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((~ (vt0.c1)))IS(CAST(NULL AS TEXT))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((~ (vt0.c1)))IS(CAST(NULL AS TEXT))) WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1))!=(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((~ (vt0.c1)))IS(CAST(NULL AS TEXT))) WHERE ((NOT (((SQLITE_COMPILEOPTION_USED(vt0.c1))<>(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((~ (vt0.c1)))IS(CAST(NULL AS TEXT))) WHERE (((((SQLITE_COMPILEOPTION_USED(vt0.c1))<>(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((~ (vt0.c1)))IS(CAST(NULL AS TEXT))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING NULL UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((NULL) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING NULL UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((NULL) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)>=(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)>=(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((((x'e3c0')>=(vt1.c0)))*(((vt0.c0)IS NOT(vt0.c1)))) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((((x'e3c0')>=(vt1.c0)))*(((vt0.c0)IS NOT(vt0.c1)))) WHERE (((((vt0.lid)IS NOT(vt1.c0)))<((NOT (vt0.c0))))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((((x'e3c0')>=(vt1.c0)))*(((vt0.c0)IS NOT(vt0.c1)))) WHERE ((NOT (((((vt0.lid)IS NOT(vt1.c0)))<((NOT (vt0.c0))))))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((((x'e3c0')>=(vt1.c0)))*(((vt0.c0)IS NOT(vt0.c1)))) WHERE (((((((vt0.lid)IS NOT(vt1.c0)))<((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((((x'e3c0')>=(vt1.c0)))*(((vt0.c0)IS NOT(vt0.c1)))) GROUP BY vt0.lid;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ((- (vt0.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ((- (vt0.c0)))) GROUP BY vt1.c0 HAVING MIN(MAX(SUM(vt0.lid))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ((- (vt0.c0)))) GROUP BY vt1.c0 HAVING (NOT (MIN(MAX(SUM(vt0.lid))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ((- (vt0.c0)))) GROUP BY vt1.c0 HAVING ((MIN(MAX(SUM(vt0.lid)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (DATETIME(((vt0.c1) IS TRUE), ((vt0.c1) NOT NULL), (vt0.lid IN ()))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (DATETIME(((vt0.c1) IS TRUE), ((vt0.c1) NOT NULL), (vt0.lid IN ()))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((DATETIME(((vt0.c1) IS TRUE), ((vt0.c1) NOT NULL), (vt0.lid IN ()))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((+ (vt1.c0)) COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0)) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((vt0.lid IN (vt0.lid, vt0.lid)))||(((vt0.lid)|(NULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.lid IN (vt0.lid, vt0.lid)))||(((vt0.lid)|(NULL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.lid IN (vt0.lid, vt0.lid)))||(((vt0.lid)|(NULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt1.c0 HAVING TOTAL(COUNT(SUM(vt0.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(SUM(vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.lid))) AS REAL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.lid))) AS REAL) WHERE (CASE WHEN LIKELIHOOD(vt0.c0, 0.5159763439689042) THEN json_array(vt0.c1, vt1.c0, vt0.lid, vt0.c1) ELSE ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.lid))) AS REAL) WHERE ((NOT (CASE WHEN LIKELIHOOD(vt0.c0, 0.5159763439689042) THEN json_array(vt0.c1, vt1.c0, vt0.lid, vt0.c1) ELSE ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.lid))) AS REAL) WHERE (((CASE WHEN LIKELIHOOD(vt0.c0, 0.5159763439689042) THEN json_array(vt0.c1, vt1.c0, vt0.lid, vt0.c1) ELSE ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.lid))) AS REAL);
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c1 WHERE (((json_patch(vt0.c0, vt0.lid)) IS FALSE)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c1 WHERE ((NOT (((json_patch(vt0.c0, vt0.lid)) IS FALSE)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c1 WHERE (((((json_patch(vt0.c0, vt0.lid)) IS FALSE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c1 AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c1 AS INTEGER))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c1 AS INTEGER)) ISNULL);
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c1 AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c1 AS INTEGER))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c1 AS INTEGER)) ISNULL);
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL MAX(COALESCE(ABS(DISTINCT '䇺RaUj-{}'), ((vt0.lid)IS(vt0.lid)))) FROM vt1, vt0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0, vt1;
SELECT vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (CHAR(CASE vt0.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN 'b)檶5bS' WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.lid WHEN '-1505245153' THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, ((vt0.lid) BETWEEN (NULL) AND (vt0.c1)), ((vt0.c1)%(vt0.c0)), vt0.c1)) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CHAR(CASE vt0.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN 'b)檶5bS' WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.lid WHEN '-1505245153' THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, ((vt0.lid) BETWEEN (NULL) AND (vt0.c1)), ((vt0.c1)%(vt0.c0)), vt0.c1)))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (((CHAR(CASE vt0.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN 'b)檶5bS' WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.lid WHEN '-1505245153' THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, ((vt0.lid) BETWEEN (NULL) AND (vt0.c1)), ((vt0.c1)%(vt0.c0)), vt0.c1)) ISNULL));
SELECT ALL vt0.lid, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c1)))OR(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN (vt0.lid, vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c0)>>(vt0.c1)))OR(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN (vt0.lid, vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)>>(vt0.c1)))OR(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN (vt0.lid, vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0;
SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(vt0.c1)) AS BLOB)) GROUP BY vt0.c1, vt0.lid, vt1.c0 UNION SELECT vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt0.c0)||(vt0.c1)) AS BLOB)))) GROUP BY vt0.c1, vt0.lid, vt1.c0 UNION SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE (((CAST(((vt0.c0)||(vt0.c1)) AS BLOB)) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt1.c0;
SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CHAR((MAX(vt1.c0) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CHAR((MAX(vt1.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CHAR((MAX(vt1.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CHAR((MAX(vt1.c0) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CHAR((MAX(vt1.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CHAR((MAX(vt1.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0)-(vt1.c0)))))AND(JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)AND(((vt1.c0)-(vt1.c0)))))AND(JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(((vt1.c0)-(vt1.c0)))))AND(JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.lid FROM vt1, vt0;
SELECT DISTINCT vt0.lid FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>>(vt0.lid COLLATE NOCASE))) UNION SELECT DISTINCT vt0.lid FROM vt1, vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>>(vt0.lid COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.lid FROM vt1, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>>(vt0.lid COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c1 COLLATE NOCASE)|(((vt0.c0) BETWEEN (vt0.lid) AND (vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE)|(((vt0.c0) BETWEEN (vt0.lid) AND (vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c1 COLLATE NOCASE)|(((vt0.c0) BETWEEN (vt0.lid) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING TOTAL(CAST(vt0.lid AS REAL)) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING (NOT (TOTAL(CAST(vt0.lid AS REAL)))) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING ((TOTAL(CAST(vt0.lid AS REAL))) ISNULL);
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING TOTAL(CAST(vt0.lid AS REAL)) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING (NOT (TOTAL(CAST(vt0.lid AS REAL)))) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING ((TOTAL(CAST(vt0.lid AS REAL))) ISNULL);
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt0.lid THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.lid THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.lid THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS REAL) IN (CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)*(vt1.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT ((CAST(vt1.c0 AS REAL) IN (CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)*(vt1.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((((CAST(vt1.c0 AS REAL) IN (CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)*(vt1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL MIN((((vt1.c0) NOT BETWEEN ('1642289857') AND (vt0.c0)) IN ())) FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (STRFTIME(vt1.c0 COLLATE RTRIM, CAST(0Xfffffffffef1067b AS INTEGER), vt1.c0 COLLATE BINARY, ((vt1.c0)|(vt1.c0)), CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (x'' IN (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (STRFTIME(vt1.c0 COLLATE RTRIM, CAST(0xfffffffffef1067b AS INTEGER), vt1.c0 COLLATE BINARY, ((vt1.c0)|(vt1.c0)), CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (x'' IN (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((STRFTIME(vt1.c0 COLLATE RTRIM, CAST(0Xfffffffffef1067b AS INTEGER), vt1.c0 COLLATE BINARY, ((vt1.c0)|(vt1.c0)), CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (x'' IN (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)%(vt1.c0)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (LIKE(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt1.c0)), vt1.c0, '1')) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (LIKE(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt1.c0)), vt1.c0, '1')))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((LIKE(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt1.c0)), vt1.c0, '1')) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING ((((COUNT(MAX(MAX(AVG(AVG(MAX(TOTAL(MIN(vt0.c1)))))))))OR(((((vt0.lid)AND(GROUP_CONCAT(COUNT(*)))))OR(COUNT(0X226172b0))))))OR(AVG(MIN(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING (NOT (((((COUNT(MAX(MAX(AVG(AVG(MAX(TOTAL(MIN(vt0.c1)))))))))OR(((((vt0.lid)AND(GROUP_CONCAT(COUNT(*)))))OR(COUNT(0x226172b0))))))OR(AVG(MIN(vt0.c1)))))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING ((((((COUNT(MAX(MAX(AVG(AVG(MAX(TOTAL(MIN(vt0.c1)))))))))OR(((((vt0.lid)AND(GROUP_CONCAT(COUNT(*)))))OR(COUNT(0X226172b0))))))OR(AVG(MIN(vt0.c1))))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.lid AS INTEGER)) NOT NULL);
SELECT ALL * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((CAST(vt0.lid AS INTEGER)) NOT NULL) WHERE (UPPER(((((((((vt0.lid)OR(vt0.c0)))AND(vt0.c0)))AND('PkJLXM+C.')))OR(vt0.lid)))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.lid AS INTEGER)) NOT NULL) WHERE ((NOT (UPPER(((((((((vt0.lid)OR(vt0.c0)))AND(vt0.c0)))AND('PkJLXM+C.')))OR(vt0.lid)))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.lid AS INTEGER)) NOT NULL) WHERE (((UPPER(((((((((vt0.lid)OR(vt0.c0)))AND(vt0.c0)))AND('PkJLXM+C.')))OR(vt0.lid)))) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.lid AS INTEGER)) NOT NULL);
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LIKELY(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE vt1.c0 END)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (LIKELY(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE vt1.c0 END)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((LIKELY(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE vt1.c0 END)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<<(((5.39635849E8)<=(vt0.lid))))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<<(((5.39635849E8)<=(vt0.lid))))))) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<<(((5.39635849E8)<=(vt0.lid))))) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0;
SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING MIN(TOTAL(COUNT(AVG(vt0.lid)))) UNION ALL SELECT vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING (NOT (MIN(TOTAL(COUNT(AVG(vt0.lid)))))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING ((MIN(TOTAL(COUNT(AVG(vt0.lid))))) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((vt0.lid IN ()) IN (CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((vt0.lid IN ()) IN (CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((((vt0.lid IN ()) IN (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)%(vt0.c0)) IN (((vt1.c0) NOT NULL), vt1.c0));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)%(vt0.c0)) IN (((vt1.c0) NOT NULL), vt1.c0)) WHERE (((((0xffffffffd8e25d0d)AND(vt1.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)%(vt0.c0)) IN (((vt1.c0) NOT NULL), vt1.c0)) WHERE ((NOT (((((0Xffffffffd8e25d0d)AND(vt1.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)%(vt0.c0)) IN (((vt1.c0) NOT NULL), vt1.c0)) WHERE (((((((0Xffffffffd8e25d0d)AND(vt1.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)%(vt0.c0)) IN (((vt1.c0) NOT NULL), vt1.c0));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0)))+(json_array_length(vt1.c0, vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((NOT (vt1.c0)))+(json_array_length(vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((NOT (vt1.c0)))+(json_array_length(vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING ((((((vt1.c0)AND(COUNT(*))))AND(vt0.lid)))OR(CAST(COUNT(vt1.c0) AS REAL))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING (NOT (((((((vt1.c0)AND(COUNT(*))))AND(vt0.lid)))OR(CAST(COUNT(vt1.c0) AS REAL))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 NOT INDEXED GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING ((((((((vt1.c0)AND(COUNT(*))))AND(vt0.lid)))OR(CAST(COUNT(vt1.c0) AS REAL)))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING ((((((vt1.c0)AND(COUNT(*))))AND(vt0.lid)))OR(CAST(COUNT(vt1.c0) AS REAL))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING (NOT (((((((vt1.c0)AND(COUNT(*))))AND(vt0.lid)))OR(CAST(COUNT(vt1.c0) AS REAL))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 NOT INDEXED GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING ((((((((vt1.c0)AND(COUNT(*))))AND(vt0.lid)))OR(CAST(COUNT(vt1.c0) AS REAL)))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1;
SELECT ALL MIN((((vt1.c0)) NOT BETWEEN ((((vt0.c0)/(vt1.c0)))) AND ((((((vt0.lid)AND(vt1.c0)))AND(vt0.lid)))))) FROM vt0, vt1 ORDER BY (CAST(vt0.lid AS INTEGER) IN ()) ASC, ((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(((vt0.lid)IS NOT(vt0.c0)))) ASC, ((((vt0.c0)/(vt0.lid)))<(vt0.c1)) DESC;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((+ (UNLIKELY(DISTINCT vt0.c1)))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((+ (UNLIKELY(DISTINCT vt0.c1)))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((+ (UNLIKELY(DISTINCT vt0.c1)))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt1, vt0 WHERE (json_array_length(((vt0.c0) IS TRUE))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt1, vt0 WHERE ((NOT (json_array_length(((vt0.c0) IS TRUE))))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt1, vt0 WHERE (((json_array_length(((vt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt0, vt1 WHERE (-2010693962) GROUP BY vt1.c0, vt0.lid UNION SELECT vt1.c0, vt0.lid FROM vt0, vt1 WHERE ((NOT (-2010693962))) GROUP BY vt1.c0, vt0.lid UNION SELECT ALL vt1.c0, vt0.lid FROM vt0, vt1 WHERE (((-2010693962) ISNULL)) GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING (~ (TRIM(vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING (NOT ((~ (TRIM(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING (((~ (TRIM(vt0.c0)))) ISNULL);
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING (~ (TRIM(vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING (NOT ((~ (TRIM(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid HAVING (((~ (TRIM(vt0.c0)))) ISNULL);
SELECT vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT ALL SUM(CAST(vt0.c1 AS REAL) COLLATE NOCASE) FROM vt0 ORDER BY NULL COLLATE RTRIM;
SELECT vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS TRUE)) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) IS TRUE)))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE (((((vt0.c1 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)+(vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)+(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)+(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((((vt0.lid IN (vt0.lid))) NOTNULL)) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT ((((vt0.lid IN (vt0.lid))) NOTNULL)))) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((((((vt0.lid IN (vt0.lid))) NOTNULL)) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid HAVING GROUP_CONCAT(MAX(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (GROUP_CONCAT(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid HAVING ((GROUP_CONCAT(MAX(vt0.c0))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((vt0.c0 IN ())))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((vt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE (CASE vt0.c0  WHEN CASE vt0.c1  WHEN 0.6078454640830213 THEN vt1.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END THEN -1895132345 WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN vt1.c0 END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE vt0.c0  WHEN CASE vt0.c1  WHEN 0.6078454640830213 THEN vt1.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END THEN -1895132345 WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE vt0.c0  WHEN CASE vt0.c1  WHEN 0.6078454640830213 THEN vt1.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END THEN -1895132345 WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN vt1.c0 END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((+ (((vt1.c0)*(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (((vt1.c0)*(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (((vt1.c0)*(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((vt0.c1)AND(vt0.c0)))AND(('-1549989662' IN ()))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))))AND((('aV') ISNULL))) GROUP BY vt0.c1, vt0.lid, vt1.c0;
SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((vt0.c1)AND(vt0.c0)))AND(('-1549989662' IN ()))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))))AND((('aV') ISNULL))) GROUP BY vt0.c1, vt0.lid, vt1.c0 HAVING AVG(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.lid, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((vt0.c1)AND(vt0.c0)))AND(('-1549989662' IN ()))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))))AND((('aV') ISNULL))) GROUP BY vt0.c1, vt0.lid, vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((((((((vt0.c1)AND(vt0.c0)))AND(('-1549989662' IN ()))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))))AND((('aV') ISNULL))) GROUP BY vt0.c1, vt0.lid, vt1.c0 HAVING ((AVG(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT * FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0Xffffffff987a950b END END;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0Xffffffff987a950b END END WHERE (vt0.c0) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0xffffffff987a950b END END WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0xffffffff987a950b END END WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0Xffffffff987a950b END END;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.lid FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.lid FROM vt1, vt0 WHERE (((((vt0.c1) ISNULL))*(vt0.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.lid FROM vt1, vt0 WHERE ((NOT (((((vt0.c1) ISNULL))*(vt0.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.lid FROM vt1, vt0 WHERE (((((((vt0.c1) ISNULL))*(vt0.c0))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.lid FROM vt1, vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (TOTAL(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT ((TOTAL(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (((TOTAL(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (TOTAL(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT ((TOTAL(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (((TOTAL(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT * FROM vt1 NATURAL JOIN vt0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (+ (vt0.c0)) THEN NULL ELSE vt0.c0 END) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (+ (vt0.c0)) THEN NULL ELSE vt0.c0 END))) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (+ (vt0.c0)) THEN NULL ELSE vt0.c0 END) ISNULL));
SELECT * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 WHERE (((((vt0.lid)<>(vt0.lid)))||(vt0.c1 COLLATE RTRIM))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 NOT INDEXED WHERE ((NOT (((((vt0.lid)<>(vt0.lid)))||(vt0.c1 COLLATE RTRIM))))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE (((((((vt0.lid)<>(vt0.lid)))||(vt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(GROUP_CONCAT(vt1.c0) AS BLOB) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(GROUP_CONCAT(vt1.c0) AS BLOB))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(GROUP_CONCAT(vt1.c0) AS BLOB)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(GROUP_CONCAT(vt1.c0) AS BLOB) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(GROUP_CONCAT(vt1.c0) AS BLOB))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(GROUP_CONCAT(vt1.c0) AS BLOB)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ('	LD.') UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ('	LD.'))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((('	LD.') ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (CASE vt0.lid  WHEN 9.89276354E8 THEN vt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CASE vt0.lid  WHEN 9.89276354E8 THEN vt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((CASE vt0.lid  WHEN 9.89276354E8 THEN vt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR((((('')AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((NULL)>=(vt1.c0)))))AND(((x'7642') NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR((((('')AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((NULL)>=(vt1.c0)))))AND(((x'7642') NOTNULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR((((('')AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((NULL)>=(vt1.c0)))))AND(((x'7642') NOTNULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt1 INNER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt1 INNER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING (((((MIN(vt1.c0))) BETWEEN ((MIN(vt0.c1))) AND ((MIN(GROUP_CONCAT(vt1.c0)))))) IS FALSE) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt1 INNER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING (NOT ((((((MIN(vt1.c0))) BETWEEN ((MIN(vt0.c1))) AND ((MIN(GROUP_CONCAT(vt1.c0)))))) IS FALSE))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt1 INNER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING (((((((MIN(vt1.c0))) BETWEEN ((MIN(vt0.c1))) AND ((MIN(GROUP_CONCAT(vt1.c0)))))) IS FALSE)) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((((((((((~ (vt0.c1)))AND(((vt0.c1)=(vt0.c1)))))OR(vt0.c1)))OR(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c0)GLOB(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT ((((((((((~ (vt0.c1)))AND(((vt0.c1)=(vt0.c1)))))OR(vt0.c1)))OR(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c0)GLOB(vt0.c0))))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((((((((((((~ (vt0.c1)))AND(((vt0.c1)==(vt0.c1)))))OR(vt0.c1)))OR(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0)>>(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0)>>(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0)>>(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (vt0.lid)) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT ((NOT (vt0.lid)))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (((NOT (vt0.lid))) ISNULL);
SELECT ALL vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (vt0.lid)) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT ((NOT (vt0.lid)))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (((NOT (vt0.lid))) ISNULL);
SELECT ALL vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (0.7225389658495854))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.lid AS BLOB))) GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((TRIM(DISTINCT vt1.c0) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((TRIM(DISTINCT vt1.c0) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((TRIM(DISTINCT vt1.c0) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN TRIM(NULL) THEN UPPER(vt0.lid) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN TRIM(NULL) THEN UPPER(vt0.lid) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN TRIM(NULL) THEN UPPER(vt0.lid) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.lid END  WHEN vt0.lid THEN (vt0.c0 IN ()) END) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CASE CASE WHEN vt0.c0 THEN vt0.lid END  WHEN vt0.lid THEN (vt0.c0 IN ()) END))) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((CASE CASE WHEN vt0.c0 THEN vt0.lid END  WHEN vt0.lid THEN (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING COUNT(GROUP_CONCAT(COUNT(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((COUNT(GROUP_CONCAT(COUNT(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((((NOT (vt0.c1)))/(x''))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT ((((NOT (vt0.c1)))/(x''))))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((((((NOT (vt0.c1)))/(x''))) ISNULL));
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)/(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.lid FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt0, vt1 WHERE ((((vt0.c1)) BETWEEN ((CAST(0.16027681688470463 AS BLOB))) AND ((vt0.lid COLLATE BINARY)))) GROUP BY vt1.c0, vt0.lid UNION SELECT ALL vt1.c0, vt0.lid FROM vt0, vt1 WHERE ((NOT ((((vt0.c1)) BETWEEN ((CAST(0.16027681688470463 AS BLOB))) AND ((vt0.lid COLLATE BINARY)))))) GROUP BY vt1.c0, vt0.lid UNION SELECT vt1.c0, vt0.lid FROM vt0, vt1 WHERE ((((((vt0.c1)) BETWEEN ((CAST(0.16027681688470463 AS BLOB))) AND ((vt0.lid COLLATE BINARY)))) ISNULL)) GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0, vt0.lid;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING ((MIN(COUNT(vt0.c0))) BETWEEN (((MIN(vt0.lid)) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((((MAX(TOTAL(vt0.c0)))) BETWEEN ((vt0.c1)) AND ((MIN(vt0.c0)))))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING (NOT (((MIN(COUNT(vt0.c0))) BETWEEN (((MIN(vt0.lid)) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((((MAX(TOTAL(vt0.c0)))) BETWEEN ((vt0.c1)) AND ((MIN(vt0.c0)))))))) UNION ALL SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING ((((MIN(COUNT(vt0.c0))) BETWEEN (((MIN(vt0.lid)) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((((MAX(TOTAL(vt0.c0)))) BETWEEN ((vt0.c1)) AND ((MIN(vt0.c0))))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((('a')OR(vt1.c0)))OR(vt1.c0)))+(((vt1.c0) ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((('a')OR(vt1.c0)))OR(vt1.c0)))+(((vt1.c0) ISNULL)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((('a')OR(vt1.c0)))OR(vt1.c0)))+(((vt1.c0) ISNULL)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)AND(vt0.lid)))AND(vt0.c0)))OR(CASE 0Xffffffff9292b07a  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid END))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0)AND(vt0.lid)))AND(vt0.c0)))OR(CASE 0Xffffffff9292b07a  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid END))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(vt0.lid)))AND(vt0.c0)))OR(CASE 0xffffffff9292b07a  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid END))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.lid)>=(vt1.c0)))|(((vt1.c0)<(vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.lid)>=(vt1.c0)))|(((vt1.c0)<(vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.lid)>=(vt1.c0)))|(((vt1.c0)<(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING MIN((~ (vt0.lid))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (MIN((~ (vt0.lid))))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((MIN((~ (vt0.lid)))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING MIN((~ (vt0.lid))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (MIN((~ (vt0.lid))))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((MIN((~ (vt0.lid)))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN (vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (x'') UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE (CAST(x'2d16' AS BLOB) COLLATE NOCASE COLLATE NOCASE) GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.lid UNION SELECT vt0.c1, vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE ((NOT (CAST(x'2d16' AS BLOB) COLLATE NOCASE COLLATE NOCASE))) GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.lid UNION SELECT vt0.c1, vt1.c0, vt0.c0, vt0.lid FROM vt1 NOT INDEXED, vt0 WHERE (((CAST(x'2d16' AS BLOB) COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING CAST(MAX(vt0.lid) AS REAL) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (CAST(MAX(vt0.lid) AS REAL))) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((CAST(MAX(vt0.lid) AS REAL)) ISNULL);
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING CAST(MAX(vt0.lid) AS REAL) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (CAST(MAX(vt0.lid) AS REAL))) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((CAST(MAX(vt0.lid) AS REAL)) ISNULL);
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 WHERE ((+ ((vt0.c1 IN ())))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((+ ((vt0.c1 IN ())))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((+ ((vt0.c1 IN ())))) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((UNICODE(0.8962120377932785))OR('\r\r')))AND((('356002075744775099')==(vt0.lid))));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((UNICODE(0.8962120377932785))OR('\r\r')))AND((('356002075744775099')=(vt0.lid)))) WHERE (((((((vt0.lid) BETWEEN (x'') AND (vt0.lid)))OR(vt0.c0 COLLATE BINARY)))AND((((vt1.c0))<=((vt0.c1)))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((UNICODE(0.8962120377932785))OR('\r\r')))AND((('356002075744775099')=(vt0.lid)))) WHERE ((NOT (((((((vt0.lid) BETWEEN (x'') AND (vt0.lid)))OR(vt0.c0 COLLATE BINARY)))AND((((vt1.c0))<=((vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((UNICODE(0.8962120377932785))OR('\r\r')))AND((('356002075744775099')=(vt0.lid)))) WHERE (((((((((vt0.lid) BETWEEN (x'') AND (vt0.lid)))OR(vt0.c0 COLLATE BINARY)))AND((((vt1.c0))<=((vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((UNICODE(0.8962120377932785))OR('\r\r')))AND((('356002075744775099')==(vt0.lid))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((('-1931144991') NOT NULL) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((('-1931144991') NOT NULL) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((('-1931144991') NOT NULL) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1 NOT INDEXED WHERE (x'') UNION ALL SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((x'') ISNULL));
SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (LOWER((~ (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (LOWER((~ (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((LOWER((~ (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 WHERE (x'') GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0;
SELECT vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING ((((COUNT(*) COLLATE RTRIM)OR(MAX(TOTAL(vt1.c0)))))OR((((vt0.c0, COUNT(*), vt0.c1))<=((MIN(vt0.c1), vt0.c1, vt0.c1))))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING (NOT (((((COUNT(*) COLLATE RTRIM)OR(MAX(TOTAL(vt1.c0)))))OR((((vt0.c0, COUNT(*), vt0.c1))<=((MIN(vt0.c1), vt0.c1, vt0.c1))))))) UNION ALL SELECT vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING ((((((COUNT(*) COLLATE RTRIM)OR(MAX(TOTAL(vt1.c0)))))OR((((vt0.c0, COUNT(*), vt0.c1))<=((MIN(vt0.c1), vt0.c1, vt0.c1)))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0, vt1 WHERE ((((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((NULL, vt0.lid, vt0.lid))))OR(vt1.c0)))OR(((vt1.c0)<(vt0.lid))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((NULL, vt0.lid, vt0.lid))))OR(vt1.c0)))OR(((vt1.c0)<(vt0.lid))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0, vt1 WHERE ((((((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((NULL, vt0.lid, vt0.lid))))OR(vt1.c0)))OR(((vt1.c0)<(vt0.lid))))) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt1 INNER JOIN vt0 ON (((vt0.lid)) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((CAST(vt1.c0 AS BLOB)))) GROUP BY vt1.c0, vt0.c1, vt0.lid;
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt1 INNER JOIN vt0 ON (((vt0.lid)) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((CAST(vt1.c0 AS BLOB)))) WHERE (ABS(DISTINCT vt1.c0)) GROUP BY vt1.c0, vt0.c1, vt0.lid UNION SELECT vt1.c0, vt0.c1, vt0.lid FROM vt1 INNER JOIN vt0 ON (((vt0.lid)) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((CAST(vt1.c0 AS BLOB)))) WHERE ((NOT (ABS(DISTINCT vt1.c0)))) GROUP BY vt1.c0, vt0.c1, vt0.lid UNION SELECT vt1.c0, vt0.c1, vt0.lid FROM vt1 INNER JOIN vt0 ON (((vt0.lid)) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((CAST(vt1.c0 AS BLOB)))) WHERE (((ABS(DISTINCT vt1.c0)) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.lid;
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt1 INNER JOIN vt0 ON (((vt0.lid)) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((CAST(vt1.c0 AS BLOB)))) GROUP BY vt1.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING MIN(UPPER(vt0.c1)) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (MIN(UPPER(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((MIN(UPPER(vt0.c1))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING MIN(UPPER(vt0.c1)) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (MIN(UPPER(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((MIN(UPPER(vt0.c1))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)AND(((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((vt1.c0)AND(((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)AND(((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON CASE (((('nT}U')OR(vt0.c1)))AND(vt0.lid))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c1)&(x'eaa3')) ELSE CASE ''  WHEN vt0.lid THEN vt1.c0 END END;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE (((('nT}U')OR(vt0.c1)))AND(vt0.lid))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c1)&(x'eaa3')) ELSE CASE ''  WHEN vt0.lid THEN vt1.c0 END END WHERE (((((((vt0.c1)-('-1304171067')))OR(NULL)))AND((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE (((('nT}U')OR(vt0.c1)))AND(vt0.lid))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c1)&(x'eaa3')) ELSE CASE ''  WHEN vt0.lid THEN vt1.c0 END END WHERE ((NOT (((((((vt0.c1)-('-1304171067')))OR(NULL)))AND((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE (((('nT}U')OR(vt0.c1)))AND(vt0.lid))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c1)&(x'eaa3')) ELSE CASE ''  WHEN vt0.lid THEN vt1.c0 END END WHERE (((((((((vt0.c1)-('-1304171067')))OR(NULL)))AND((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON CASE (((('nT}U')OR(vt0.c1)))AND(vt0.lid))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c1)&(x'eaa3')) ELSE CASE ''  WHEN vt0.lid THEN vt1.c0 END END;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.lid END) NOT BETWEEN (x'') AND (vt0.lid COLLATE BINARY)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.lid END) NOT BETWEEN (x'') AND (vt0.lid COLLATE BINARY)) WHERE (vt0.lid) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.lid END) NOT BETWEEN (x'') AND (vt0.lid COLLATE BINARY)) WHERE ((NOT (vt0.lid))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.lid END) NOT BETWEEN (x'') AND (vt0.lid COLLATE BINARY)) WHERE (((vt0.lid) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.lid END) NOT BETWEEN (x'') AND (vt0.lid COLLATE BINARY)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN MAX(AVG(vt0.lid)) END IN (AVG(SUM(MAX(vt0.c0))))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT ((CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN MAX(AVG(vt0.lid)) END IN (AVG(SUM(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (((CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN MAX(AVG(vt0.lid)) END IN (AVG(SUM(MAX(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c1 AS BLOB) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('1366581298') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ('1366581298'))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('1366581298') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (UNLIKELY(IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (UNLIKELY(IFNULL(DISTINCT vt1.c0, vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((UNLIKELY(IFNULL(DISTINCT vt1.c0, vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COALESCE(DISTINCT TOTAL(vt1.c0), CASE WHEN COUNT(*) THEN MIN(TOTAL(MAX(TOTAL(vt1.c0)))) END) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COALESCE(DISTINCT TOTAL(vt1.c0), CASE WHEN COUNT(*) THEN MIN(TOTAL(MAX(TOTAL(vt1.c0)))) END))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COALESCE(DISTINCT TOTAL(vt1.c0), CASE WHEN COUNT(*) THEN MIN(TOTAL(MAX(TOTAL(vt1.c0)))) END)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL)/(((vt1.c0) NOT NULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((NULL)/(((vt1.c0) NOT NULL)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((NULL)/(((vt1.c0) NOT NULL)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('186268836')) ELSE vt0.c1 COLLATE BINARY END;
SELECT DISTINCT vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('186268836')) ELSE vt0.c1 COLLATE BINARY END WHERE (PRINTF(vt1.c0, vt0.c0, vt1.c0) COLLATE BINARY) UNION SELECT DISTINCT vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('186268836')) ELSE vt0.c1 COLLATE BINARY END WHERE ((NOT (PRINTF(vt1.c0, vt0.c0, vt1.c0) COLLATE BINARY))) UNION SELECT DISTINCT vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('186268836')) ELSE vt0.c1 COLLATE BINARY END WHERE (((PRINTF(vt1.c0, vt0.c0, vt1.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.lid, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('186268836')) ELSE vt0.c1 COLLATE BINARY END;
SELECT ALL vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt1, vt0 WHERE (((((vt0.lid)/(vt0.lid))) ISNULL)) GROUP BY vt0.lid, vt0.c1 UNION SELECT vt0.lid, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((vt0.lid)/(vt0.lid))) ISNULL)))) GROUP BY vt0.lid, vt0.c1 UNION SELECT vt0.lid, vt0.c1 FROM vt1, vt0 WHERE (((((((vt0.lid)/(vt0.lid))) ISNULL)) ISNULL)) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING GROUP_CONCAT((((vt1.c0))=((SUM(vt1.c0))))) UNION ALL SELECT vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING (NOT (GROUP_CONCAT((((vt1.c0))=((SUM(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING ((GROUP_CONCAT((((vt1.c0))=((SUM(vt1.c0)))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((NOT (NULL COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((NOT (NULL COLLATE NOCASE))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1, vt0.lid FROM vt1, vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt1, vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) GROUP BY vt0.c1, vt0.lid UNION SELECT vt0.c1, vt0.lid FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)))) GROUP BY vt0.c1, vt0.lid UNION SELECT vt0.c1, vt0.lid FROM vt1, vt0 WHERE (((CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt1, vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL(AVG(vt0.lid)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL(AVG(vt0.lid)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL(AVG(vt0.lid))) ISNULL);
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((vt0.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(x'6946')) AND (vt0.c0));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((vt0.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(x'6946')) AND (vt0.c0)) WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((vt0.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(x'6946')) AND (vt0.c0)) WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((vt0.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(x'6946')) AND (vt0.c0)) WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((vt0.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(x'6946')) AND (vt0.c0));
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((((((x'1333c965')OR(CAST(vt1.c0 AS BLOB))))AND(((vt0.lid)<<(vt0.c1)))))AND(vt1.c0)))AND(CAST(vt0.lid AS REAL)))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((((((((x'1333c965')OR(CAST(vt1.c0 AS BLOB))))AND(((vt0.lid)<<(vt0.c1)))))AND(vt1.c0)))AND(CAST(vt0.lid AS REAL)))))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((((((((x'1333c965')OR(CAST(vt1.c0 AS BLOB))))AND(((vt0.lid)<<(vt0.c1)))))AND(vt1.c0)))AND(CAST(vt0.lid AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((+ (vt0.c1)) IN ())) GROUP BY vt0.lid, vt1.c0, vt0.c0 UNION SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((+ (vt0.c1)) IN ())))) GROUP BY vt0.lid, vt1.c0, vt0.c0 UNION SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((+ (vt0.c1)) IN ())) ISNULL)) GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((((((((vt1.c0)OR(AVG(TOTAL(TOTAL(vt1.c0))))))OR(vt1.c0)))AND(SUM(MAX(vt1.c0)))))OR(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((((((((vt1.c0)OR(AVG(TOTAL(TOTAL(vt1.c0))))))OR(vt1.c0)))AND(SUM(MAX(vt1.c0)))))OR(MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((((((((vt1.c0)OR(AVG(TOTAL(TOTAL(vt1.c0))))))OR(vt1.c0)))AND(SUM(MAX(vt1.c0)))))OR(MIN(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ('') UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((('') ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((DATETIME(vt1.c0, vt1.c0, vt0.c1))) AND (((vt0.c1 IN ()))));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((DATETIME(vt1.c0, vt1.c0, vt0.c1))) AND (((vt0.c1 IN ())))) WHERE (vt0.lid) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((DATETIME(vt1.c0, vt1.c0, vt0.c1))) AND (((vt0.c1 IN ())))) WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((DATETIME(vt1.c0, vt1.c0, vt0.c1))) AND (((vt0.c1 IN ())))) WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((DATETIME(vt1.c0, vt1.c0, vt0.c1))) AND (((vt0.c1 IN ()))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.lid))) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.lid))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.lid))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*))IS(((((((((((((vt1.c0)OR(TOTAL(vt1.c0))))OR(vt1.c0)))AND(SUM(vt1.c0))))OR(COUNT(''))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*))IS(((((((((((((vt1.c0)OR(TOTAL(vt1.c0))))OR(vt1.c0)))AND(SUM(vt1.c0))))OR(COUNT(''))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*))IS(((((((((((((vt1.c0)OR(TOTAL(vt1.c0))))OR(vt1.c0)))AND(SUM(vt1.c0))))OR(COUNT(''))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*))IS(((((((((((((vt1.c0)OR(TOTAL(vt1.c0))))OR(vt1.c0)))AND(SUM(vt1.c0))))OR(COUNT(''))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*))IS(((((((((((((vt1.c0)OR(TOTAL(vt1.c0))))OR(vt1.c0)))AND(SUM(vt1.c0))))OR(COUNT(''))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*))IS(((((((((((((vt1.c0)OR(TOTAL(vt1.c0))))OR(vt1.c0)))AND(SUM(vt1.c0))))OR(COUNT(''))))OR(GROUP_CONCAT(vt1.c0))))OR(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE -1.4384277E8 END));
SELECT vt0.c0, vt0.lid, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE -1.4384277E8 END)) WHERE (CAST(CASE WHEN vt0.lid THEN vt1.c0 ELSE vt0.c1 END AS REAL)) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE -1.4384277E8 END)) WHERE ((NOT (CAST(CASE WHEN vt0.lid THEN vt1.c0 ELSE vt0.c1 END AS REAL)))) UNION ALL SELECT vt0.c0, vt0.lid, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE -1.4384277E8 END)) WHERE (((CAST(CASE WHEN vt0.lid THEN vt1.c0 ELSE vt0.c1 END AS REAL)) ISNULL));
SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE -1.4384277E8 END));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)%(vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING GROUP_CONCAT(TOTAL(AVG(GROUP_CONCAT(SUM(AVG(vt0.lid)))))) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING (NOT (GROUP_CONCAT(TOTAL(AVG(GROUP_CONCAT(SUM(AVG(vt0.lid)))))))) UNION ALL SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING ((GROUP_CONCAT(TOTAL(AVG(GROUP_CONCAT(SUM(AVG(vt0.lid))))))) ISNULL);
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE (x'402e') UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (x'402e'))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE (((x'402e') ISNULL));
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (CAST(((vt0.c0)<=(vt0.c1)) AS BLOB)) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c0)<=(vt0.c1)) AS BLOB)))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (((CAST(((vt0.c0)<=(vt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)<=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)<=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)<=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MAX(MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MAX(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MAX(MAX(vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((1.819990279E9)*(vt1.c0)))-(LENGTH(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((1.819990279E9)*(vt1.c0)))-(LENGTH(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((1.819990279E9)*(vt1.c0)))-(LENGTH(vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CASE (((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.lid)))  WHEN CAST(vt0.c1 AS INTEGER) THEN '' END) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE (((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.lid)))  WHEN CAST(vt0.c1 AS INTEGER) THEN '' END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE (((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.lid)))  WHEN CAST(vt0.c1 AS INTEGER) THEN '' END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (x'', vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN (x'', vt1.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM vt1 WHERE ((((vt1.c0 IN (x'', vt1.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((x'')) BETWEEN ((CASE WHEN vt0.c0 THEN 2.130762303E9 ELSE vt0.c0 END)) AND (((NOT (vt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((x'')) BETWEEN ((CASE WHEN vt0.c0 THEN 2.130762303E9 ELSE vt0.c0 END)) AND (((NOT (vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((x'')) BETWEEN ((CASE WHEN vt0.c0 THEN 2.130762303E9 ELSE vt0.c0 END)) AND (((NOT (vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.lid THEN vt0.c0 END COLLATE BINARY) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.lid THEN vt0.c0 END COLLATE BINARY))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.lid THEN vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)IS NOT(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), LIKELIHOOD(vt1.c0, 0.3510518261479526), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((vt1.c0 IN ()), (- (vt1.c0)), NULL, CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)IS NOT(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), LIKELIHOOD(vt1.c0, 0.3510518261479526), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((vt1.c0 IN ()), (- (vt1.c0)), NULL, CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE NOCASE)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)IS NOT(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), LIKELIHOOD(vt1.c0, 0.3510518261479526), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((vt1.c0 IN ()), (- (vt1.c0)), NULL, CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0 WHERE (CASE WHEN ('#O&7溺v' IN ()) THEN (~ (vt0.c1)) END) UNION SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN ('#O&7溺v' IN ()) THEN (~ (vt0.c1)) END))) UNION SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0 WHERE (((CASE WHEN ('#O&7溺v' IN ()) THEN (~ (vt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0;
SELECT vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.6345085858832218 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.6345085858832218 WHERE (((((vt0.c1)OR(NULL)))OR(((x'26c0') BETWEEN (vt0.lid) AND (1684434616))))) GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.6345085858832218 WHERE ((NOT (((((vt0.c1)OR(NULL)))OR(((x'26c0') BETWEEN (vt0.lid) AND (1684434616))))))) GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.6345085858832218 WHERE (((((((vt0.c1)OR(NULL)))OR(((x'26c0') BETWEEN (vt0.lid) AND (1684434616))))) ISNULL)) GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.6345085858832218 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0 COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0 COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0 COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0 COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))AND(vt1.c0)))AND(SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0 IN (vt1.c0)))AND(vt1.c0)))AND(SQLITE_SOURCE_ID()))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0 IN (vt1.c0)))AND(vt1.c0)))AND(SQLITE_SOURCE_ID()))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((SQLITE_SOURCE_ID()) IS TRUE)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((SQLITE_SOURCE_ID()) IS TRUE)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((SQLITE_SOURCE_ID()) IS TRUE)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(CASE COUNT(*)  WHEN COUNT(SUM(vt0.lid)) THEN COUNT(*) ELSE vt0.c1 END) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(CASE COUNT(*)  WHEN COUNT(SUM(vt0.lid)) THEN COUNT(*) ELSE vt0.c1 END))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(CASE COUNT(*)  WHEN COUNT(SUM(vt0.lid)) THEN COUNT(*) ELSE vt0.c1 END)) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((vt1.c0) BETWEEN (vt0.lid) AND (vt0.c0))))=(((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0) BETWEEN (vt0.lid) AND (vt0.c0))))==(((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((((vt1.c0) BETWEEN (vt0.lid) AND (vt0.c0))))==(((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))) ISNULL));
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 WHERE (NULL) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (MAX(vt0.c1) IN ()) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((MAX(vt0.c1) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((MAX(vt0.c1) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (MAX(vt0.c1) IN ()) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((MAX(vt0.c1) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((MAX(vt0.c1) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (DATETIME(vt1.c0, vt0.c1, vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((NOT (DATETIME(vt1.c0, vt0.c1, vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((NOT (DATETIME(vt1.c0, vt0.c1, vt0.c0)))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((x'8036'))), vt1.c0 COLLATE NOCASE, (NOT (vt0.lid))))>((((((vt0.c1)AND(vt0.lid)))OR(vt0.c0)), ((vt0.c1)|(vt0.c0)), CAST(vt0.c1 AS NUMERIC))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((x'8036'))), vt1.c0 COLLATE NOCASE, (NOT (vt0.lid))))>((((((vt0.c1)AND(vt0.lid)))OR(vt0.c0)), ((vt0.c1)|(vt0.c0)), CAST(vt0.c1 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((x'8036'))), vt1.c0 COLLATE NOCASE, (NOT (vt0.lid))))>((((((vt0.c1)AND(vt0.lid)))OR(vt0.c0)), ((vt0.c1)|(vt0.c0)), CAST(vt0.c1 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((((((('묥锋?')) NOT BETWEEN ((vt1.c0)) AND ((0x507bce5a))))OR(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c1 END)))AND((vt1.c0 IN ())))) GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((('묥锋?')) NOT BETWEEN ((vt1.c0)) AND ((0X507bce5a))))OR(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c1 END)))AND((vt1.c0 IN ())))))) GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((((((((('묥锋?')) NOT BETWEEN ((vt1.c0)) AND ((0x507bce5a))))OR(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c1 END)))AND((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING TOTAL((COUNT(*) IN ())) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (TOTAL((COUNT(*) IN ())))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((TOTAL((COUNT(*) IN ()))) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING TOTAL((COUNT(*) IN ())) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (TOTAL((COUNT(*) IN ())))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((TOTAL((COUNT(*) IN ()))) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE (vt0.c1) UNION ALL SELECT vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE (((vt0.c1) ISNULL));
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (TRIM(vt0.lid)) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) BETWEEN (TRIM(vt0.lid)) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE RTRIM) BETWEEN (TRIM(vt0.lid)) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN ((vt0.lid)>(vt0.c1)) THEN vt0.lid WHEN TRIM(vt0.c0) THEN (((vt0.lid, vt0.c1, vt0.c1, vt0.c1, vt0.lid)) BETWEEN ((NULL, vt0.c0, vt0.c0, vt0.c1, vt0.lid)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.lid))) WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.c0 END THEN ((((vt0.lid)OR(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c0)>>(vt0.lid)) THEN (('792250959') BETWEEN (vt0.c0) AND (vt0.lid)) WHEN (vt0.c1 IN (vt0.lid, vt0.c0)) THEN (((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0))) ELSE CAST(vt0.c1 AS REAL) END) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CASE (vt0.c1 IN ())  WHEN ((vt0.lid)>(vt0.c1)) THEN vt0.lid WHEN TRIM(vt0.c0) THEN (((vt0.lid, vt0.c1, vt0.c1, vt0.c1, vt0.lid)) BETWEEN ((NULL, vt0.c0, vt0.c0, vt0.c1, vt0.lid)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.lid))) WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.c0 END THEN ((((vt0.lid)OR(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c0)>>(vt0.lid)) THEN (('792250959') BETWEEN (vt0.c0) AND (vt0.lid)) WHEN (vt0.c1 IN (vt0.lid, vt0.c0)) THEN (((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0))) ELSE CAST(vt0.c1 AS REAL) END))) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((CASE (vt0.c1 IN ())  WHEN ((vt0.lid)>(vt0.c1)) THEN vt0.lid WHEN TRIM(vt0.c0) THEN (((vt0.lid, vt0.c1, vt0.c1, vt0.c1, vt0.lid)) BETWEEN ((NULL, vt0.c0, vt0.c0, vt0.c1, vt0.lid)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.lid))) WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.c0 END THEN ((((vt0.lid)OR(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c0)>>(vt0.lid)) THEN (('792250959') BETWEEN (vt0.c0) AND (vt0.lid)) WHEN (vt0.c1 IN (vt0.lid, vt0.c0)) THEN (((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0))) ELSE CAST(vt0.c1 AS REAL) END) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING TOTAL(AVG(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING (NOT (TOTAL(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((TOTAL(AVG(vt0.c0))) ISNULL);
SELECT SUM(CAST(((vt0.c1) NOTNULL) AS NUMERIC)) FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((~ (((vt0.c1)<=('-17758597'))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT ((~ (((vt0.c1)<=('-17758597'))))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((((~ (((vt0.c1)<=('-17758597'))))) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)<<(vt1.c0)) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)<<(vt1.c0)) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)<<(vt1.c0)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((((vt0.c0))=((vt1.c0))) AS REAL)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST((((vt0.c0))=((vt1.c0))) AS REAL)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST((((vt0.c0))==((vt1.c0))) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.lid, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt1, vt0 WHERE ((- (((vt0.c0)/(vt1.c0))))) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((- (((vt0.c0)/(vt1.c0))))))) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt1, vt0 NOT INDEXED WHERE ((((- (((vt0.c0)/(vt1.c0))))) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOT NULL) AS REAL) GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOT NULL) AS REAL) GROUP BY vt0.c1, vt0.lid HAVING CASE WHEN MAX(GROUP_CONCAT(COUNT(vt0.lid))) THEN '䇺rauj-{}' ELSE vt1.c0 END UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOT NULL) AS REAL) GROUP BY vt0.c1, vt0.lid HAVING (NOT (CASE WHEN MAX(GROUP_CONCAT(COUNT(vt0.lid))) THEN '䇺rauj-{}' ELSE vt1.c0 END)) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOT NULL) AS REAL) GROUP BY vt0.c1, vt0.lid HAVING ((CASE WHEN MAX(GROUP_CONCAT(COUNT(vt0.lid))) THEN '䇺rauj-{}' ELSE vt1.c0 END) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (+ (vt1.c0)) END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN (+ (vt1.c0)) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN (+ (vt1.c0)) END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))) AND (TIME(vt1.c0, vt1.c0, '*p', vt1.c0, 2.00115942E9)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))) AND (TIME(vt1.c0, vt1.c0, '*p', vt1.c0, 2.00115942E9)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))) AND (TIME(vt1.c0, vt1.c0, '*p', vt1.c0, 2.00115942E9)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)LIKE(vt1.c0))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING AVG((- (vt0.c0))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (AVG((- (vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING ((AVG((- (vt0.c0)))) ISNULL);
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING AVG((- (vt0.c0))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (AVG((- (vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING ((AVG((- (vt0.c0)))) ISNULL);
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid ELSE vt0.c1 END  WHEN ((vt0.lid)+(x'')) THEN ((((vt0.lid)AND(vt1.c0)))AND(vt1.c0)) END;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid ELSE vt0.c1 END  WHEN ((vt0.lid)+(x'')) THEN ((((vt0.lid)AND(vt1.c0)))AND(vt1.c0)) END WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN (vt0.c1 IN ()) END) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid ELSE vt0.c1 END  WHEN ((vt0.lid)+(x'')) THEN ((((vt0.lid)AND(vt1.c0)))AND(vt1.c0)) END WHERE ((NOT (CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN (vt0.c1 IN ()) END))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid ELSE vt0.c1 END  WHEN ((vt0.lid)+(x'')) THEN ((((vt0.lid)AND(vt1.c0)))AND(vt1.c0)) END WHERE (((CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN (vt0.c1 IN ()) END) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE CASE vt1.c0  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid ELSE vt0.c1 END  WHEN ((vt0.lid)+(x'')) THEN ((((vt0.lid)AND(vt1.c0)))AND(vt1.c0)) END;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (json_valid(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (json_valid(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((json_valid(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ('0.008819404119192131') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('0.008819404119192131'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((('0.008819404119192131') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING CAST(-1655825148 AS NUMERIC) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING (NOT (CAST(-1655825148 AS NUMERIC))) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING ((CAST(-1655825148 AS NUMERIC)) ISNULL);
SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING CAST(-1655825148 AS NUMERIC) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING (NOT (CAST(-1655825148 AS NUMERIC))) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING ((CAST(-1655825148 AS NUMERIC)) ISNULL);
SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)), (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))<=(((vt0.c0 IN ()), 0.08094510870916416, (((539635849))<=((vt0.c1))))));
SELECT ALL vt0.lid FROM vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)), (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))<=(((vt0.c0 IN ()), 0.08094510870916416, (((539635849))<=((vt0.c1)))))) WHERE ((((((((x'')OR(vt0.c1)))AND(vt0.c1))))>=((vt0.c0)))) UNION ALL SELECT ALL vt0.lid FROM vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)), (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))<=(((vt0.c0 IN ()), 0.08094510870916416, (((539635849))<=((vt0.c1)))))) WHERE ((NOT ((((((((x'')OR(vt0.c1)))AND(vt0.c1))))>=((vt0.c0)))))) UNION ALL SELECT ALL vt0.lid FROM vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)), (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))<=(((vt0.c0 IN ()), 0.08094510870916416, (((539635849))<=((vt0.c1)))))) WHERE ((((((((((x'')OR(vt0.c1)))AND(vt0.c1))))>=((vt0.c0)))) ISNULL));
SELECT vt0.lid FROM vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)), (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))<=(((vt0.c0 IN ()), 0.08094510870916416, (((539635849))<=((vt0.c1))))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((+ ((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ ((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((+ ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((((NULL) BETWEEN (0X2140b038) AND (vt0.c0))) NOT BETWEEN ((~ (vt0.c1))) AND (TRIM('-978310196')))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((NULL) BETWEEN (0x2140b038) AND (vt0.c0))) NOT BETWEEN ((~ (vt0.c1))) AND (TRIM('-978310196')))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((((((NULL) BETWEEN (0X2140b038) AND (vt0.c0))) NOT BETWEEN ((~ (vt0.c1))) AND (TRIM('-978310196')))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0Xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid HAVING NULL UNION ALL SELECT vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid HAVING (NOT (NULL)) UNION ALL SELECT vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid HAVING ((NULL) ISNULL);
SELECT ALL vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0Xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid HAVING NULL UNION ALL SELECT vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid HAVING (NOT (NULL)) UNION ALL SELECT vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid HAVING ((NULL) ISNULL);
SELECT ALL vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.lid) NOT BETWEEN (vt0.c0) AND (0xffffffffc5f289fc)) WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN vt0.c1 THEN vt0.lid COLLATE NOCASE ELSE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END END GROUP BY vt0.c1, vt0.lid;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))!=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))!=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))<>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (x'd783') GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (x'd783'))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((x'd783') ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0 HAVING AVG(((((((((MAX(AVG(vt0.c0)))AND(vt1.c0)))AND(MAX(vt0.c0))))OR(vt0.c1)))AND(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0 HAVING (NOT (AVG(((((((((MAX(AVG(vt0.c0)))AND(vt1.c0)))AND(MAX(vt0.c0))))OR(vt0.c1)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0 HAVING ((AVG(((((((((MAX(AVG(vt0.c0)))AND(vt1.c0)))AND(MAX(vt0.c0))))OR(vt0.c1)))AND(vt0.c0)))) ISNULL);
SELECT ALL MIN(CASE WHEN CAST(vt0.lid AS REAL) THEN CAST(vt0.c0 AS NUMERIC) END) FROM vt0 ORDER BY CASE WHEN load_extension(vt0.lid) THEN json(vt0.lid) ELSE (((vt0.c1))<((vt0.lid))) END DESC;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (UNLIKELY((vt0.c1 IN ()))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (UNLIKELY((vt0.c1 IN ()))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((UNLIKELY((vt0.c1 IN ()))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.c1) AND ('')))%(((vt0.lid)<<(vt0.lid))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((((vt0.lid) BETWEEN (vt0.c1) AND ('')))%(((vt0.lid)<<(vt0.lid))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((((((vt0.lid) BETWEEN (vt0.c1) AND ('')))%(((vt0.lid)<<(vt0.lid))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT ALL vt0.lid FROM vt1, vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt1, vt0 WHERE (vt0.lid) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt1, vt0 WHERE ((NOT (vt0.lid))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt1, vt0 WHERE (((vt0.lid) ISNULL)) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt1, vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0)))) AND (vt0.c0 COLLATE BINARY));
SELECT ALL vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0)))) AND (vt0.c0 COLLATE BINARY)) WHERE (CAST((+ (vt0.c1)) AS REAL)) UNION ALL SELECT ALL vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0)))) AND (vt0.c0 COLLATE BINARY)) WHERE ((NOT (CAST((+ (vt0.c1)) AS REAL)))) UNION ALL SELECT vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0)))) AND (vt0.c0 COLLATE BINARY)) WHERE (((CAST((+ (vt0.c1)) AS REAL)) ISNULL));
SELECT ALL vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0)))) AND (vt0.c0 COLLATE BINARY));
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((GLOB(vt0.c1, vt0.c1)))<=((vt0.lid)))) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((((GLOB(vt0.c1, vt0.c1)))<=((vt0.lid)))))) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((((GLOB(vt0.c1, vt0.c1)))<=((vt0.lid)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (NULLIF(CAST(NULL AS NUMERIC), ((vt0.lid)AND(vt0.c0)))) GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (NULLIF(CAST(NULL AS NUMERIC), ((vt0.lid)AND(vt0.c0)))))) GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE (((NULLIF(CAST(NULL AS NUMERIC), ((vt0.lid)AND(vt0.c0)))) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (((COUNT(*), vt0.c1, vt0.lid, vt0.c0, vt0.lid)) NOT BETWEEN ((CAST(vt0.lid AS NUMERIC), (- (AVG(vt0.c1))), AVG(COUNT(COUNT(vt0.lid))), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), CASE WHEN COUNT(MAX(vt0.c1)) THEN vt0.c0 ELSE COUNT(*) END)) AND ((((vt0.c0)==(vt0.c1)), CAST(MIN(TOTAL(vt0.c1)) AS NUMERIC), MIN(vt0.c0), GROUP_CONCAT(COUNT(*)), SUM(AVG(vt0.c1))))) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT ((((COUNT(*), vt0.c1, vt0.lid, vt0.c0, vt0.lid)) NOT BETWEEN ((CAST(vt0.lid AS NUMERIC), (- (AVG(vt0.c1))), AVG(COUNT(COUNT(vt0.lid))), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), CASE WHEN COUNT(MAX(vt0.c1)) THEN vt0.c0 ELSE COUNT(*) END)) AND ((((vt0.c0)==(vt0.c1)), CAST(MIN(TOTAL(vt0.c1)) AS NUMERIC), MIN(vt0.c0), GROUP_CONCAT(COUNT(*)), SUM(AVG(vt0.c1))))))) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (((((COUNT(*), vt0.c1, vt0.lid, vt0.c0, vt0.lid)) NOT BETWEEN ((CAST(vt0.lid AS NUMERIC), (- (AVG(vt0.c1))), AVG(COUNT(COUNT(vt0.lid))), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), CASE WHEN COUNT(MAX(vt0.c1)) THEN vt0.c0 ELSE COUNT(*) END)) AND ((((vt0.c0)==(vt0.c1)), CAST(MIN(TOTAL(vt0.c1)) AS NUMERIC), MIN(vt0.c0), GROUP_CONCAT(COUNT(*)), SUM(AVG(vt0.c1)))))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL);
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) WHERE ((((vt0.c1)&(vt0.c1)) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) WHERE ((NOT ((((vt0.c1)&(vt0.c1)) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) WHERE ((((((vt0.c1)&(vt0.c1)) IN ())) ISNULL));
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL);
SELECT DISTINCT vt0.c1, vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.lid FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN -1.655825148E9 THEN vt0.lid END) IS TRUE)) UNION SELECT DISTINCT vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN -1.655825148E9 THEN vt0.lid END) IS TRUE)))) UNION SELECT DISTINCT vt0.c1, vt0.lid FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN -1.655825148E9 THEN vt0.lid END) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.lid FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt0.lid COLLATE BINARY) NOT BETWEEN (vt1.c0) AND (((vt0.c1)<(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.lid COLLATE BINARY) NOT BETWEEN (vt1.c0) AND (((vt0.c1)<(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.lid COLLATE BINARY) NOT BETWEEN (vt1.c0) AND (((vt0.c1)<(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.lid, vt0.c1, vt0.c1, vt0.lid, vt1.c0)) BETWEEN ((vt0.lid, vt0.c1, vt0.c1, vt0.lid, 0.6079363695034102)) AND ((vt0.lid, vt0.c0, vt0.c1, vt0.c0, vt0.lid)))) BETWEEN (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid))) AND (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END)) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.lid, vt0.c1, vt0.c1, vt0.lid, vt1.c0)) BETWEEN ((vt0.lid, vt0.c1, vt0.c1, vt0.lid, 0.6079363695034102)) AND ((vt0.lid, vt0.c0, vt0.c1, vt0.c0, vt0.lid)))) BETWEEN (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid))) AND (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END)) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING AVG(TOTAL(vt0.lid)) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.lid, vt0.c1, vt0.c1, vt0.lid, vt1.c0)) BETWEEN ((vt0.lid, vt0.c1, vt0.c1, vt0.lid, 0.6079363695034102)) AND ((vt0.lid, vt0.c0, vt0.c1, vt0.c0, vt0.lid)))) BETWEEN (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid))) AND (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END)) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING (NOT (AVG(TOTAL(vt0.lid)))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.lid, vt0.c1, vt0.c1, vt0.lid, vt1.c0)) BETWEEN ((vt0.lid, vt0.c1, vt0.c1, vt0.lid, 0.6079363695034102)) AND ((vt0.lid, vt0.c0, vt0.c1, vt0.c0, vt0.lid)))) BETWEEN (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid))) AND (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END)) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING ((AVG(TOTAL(vt0.lid))) ISNULL);
SELECT vt0.lid FROM vt0;
SELECT ALL vt0.lid FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ())) UNION ALL SELECT ALL vt0.lid FROM vt0 WHERE ((NOT ((vt0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT ALL vt0.lid FROM vt0 WHERE ((((vt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT vt0.lid FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((- (vt0.c1)) AS REAL)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST((- (vt0.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST((- (vt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)==(-1.814559433E9)))>>(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)=(-1.814559433E9)))>>(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1)=(-1.814559433E9)))>>(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(AVG(SUM(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(AVG(SUM(COUNT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(AVG(SUM(COUNT(vt1.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (TYPEOF(DISTINCT ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE (((TYPEOF(DISTINCT ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.lid)==(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.lid)=(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.lid)=(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE (vt0.lid COLLATE RTRIM) GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((NOT (vt0.lid COLLATE RTRIM))) GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE (((vt0.lid COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0) COLLATE BINARY UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0) COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0) COLLATE BINARY) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0) COLLATE BINARY UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0) COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0) COLLATE BINARY) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT MIN(((vt0.lid IN (vt0.lid)) IN ())) FROM vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) AND (((vt1.c0)<(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) AND (((vt1.c0)<(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) AND (((vt1.c0)<(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)/(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)/(vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)/(vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)=(((vt0.lid)*(NULL)))) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)==(((vt0.lid)*(NULL)))) WHERE ((((LIKELY(vt0.lid), (vt0.c1 IN ()), (~ (vt1.c0))))!=(((vt0.c0 IN ()), (((vt1.c0, vt1.c0, vt1.c0))<=((x'', vt0.c0, vt0.c0))), ((vt0.c0) ISNULL))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)=(((vt0.lid)*(NULL)))) WHERE ((NOT ((((LIKELY(vt0.lid), (vt0.c1 IN ()), (~ (vt1.c0))))<>(((vt0.c0 IN ()), (((vt1.c0, vt1.c0, vt1.c0))<=((x'', vt0.c0, vt0.c0))), ((vt0.c0) ISNULL))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)==(((vt0.lid)*(NULL)))) WHERE ((((((LIKELY(vt0.lid), (vt0.c1 IN ()), (~ (vt1.c0))))!=(((vt0.c0 IN ()), (((vt1.c0, vt1.c0, vt1.c0))<=((x'', vt0.c0, vt0.c0))), ((vt0.c0) ISNULL))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)=(((vt0.lid)*(NULL)))) GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(AVG(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(AVG(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END AS BLOB)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END AS BLOB)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (vt0.c1 COLLATE BINARY, ((x'c73b') IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS INTEGER) IN (vt0.c1 COLLATE BINARY, ((x'c73b') IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER) IN (vt0.c1 COLLATE BINARY, ((x'c73b') IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((((CAST(vt0.c1 AS REAL), SQLITE_SOURCE_ID(), vt0.c1))<((((((vt0.c0)OR(vt0.lid)))AND(vt1.c0)), CAST(vt1.c0 AS TEXT), '421937658')))) GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((CAST(vt0.c1 AS REAL), SQLITE_SOURCE_ID(), vt0.c1))<((((((vt0.c0)OR(vt0.lid)))AND(vt1.c0)), CAST(vt1.c0 AS TEXT), '421937658')))))) GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((((((CAST(vt0.c1 AS REAL), SQLITE_SOURCE_ID(), vt0.c1))<((((((vt0.c0)OR(vt0.lid)))AND(vt1.c0)), CAST(vt1.c0 AS TEXT), '421937658')))) ISNULL)) GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING ((GROUP_CONCAT(MIN(vt0.lid)))+(TOTAL(vt0.lid))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING (NOT (((GROUP_CONCAT(MIN(vt0.lid)))+(TOTAL(vt0.lid))))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING ((((GROUP_CONCAT(MIN(vt0.lid)))+(TOTAL(vt0.lid)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((TYPEOF(DISTINCT vt1.c0))<<(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((TYPEOF(DISTINCT vt1.c0))<<(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1 WHERE (((((TYPEOF(DISTINCT vt1.c0))<<(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE ((NOT (0.7225389658495854))) UNION SELECT DISTINCT vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((NOT (0.7225389658495854))))) UNION SELECT DISTINCT vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE ((((NOT (0.7225389658495854))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT NULL) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT NULL) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING (((((COUNT(*), vt0.c0, MIN(vt0.c1))) BETWEEN ((vt1.c0, COUNT(*), AVG(COUNT(*)))) AND ((vt0.lid, vt0.c1, TOTAL(TOTAL(vt0.lid)))))) NOT NULL) UNION ALL SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT NULL) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING (NOT ((((((COUNT(*), vt0.c0, MIN(vt0.c1))) BETWEEN ((vt1.c0, COUNT(*), AVG(COUNT(*)))) AND ((vt0.lid, vt0.c1, TOTAL(TOTAL(vt0.lid)))))) NOT NULL))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt0 INNER JOIN vt1 ON ((((vt1.c0) IS TRUE)) NOT NULL) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 HAVING (((((((COUNT(*), vt0.c0, MIN(vt0.c1))) BETWEEN ((vt1.c0, COUNT(*), AVG(COUNT(*)))) AND ((vt0.lid, vt0.c1, TOTAL(TOTAL(vt0.lid)))))) NOT NULL)) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ('') UNION ALL SELECT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (''))) UNION ALL SELECT vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((('') ISNULL));
SELECT ALL vt0.lid, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((((vt0.lid)<=(vt0.c0)))!=(((vt0.c1)GLOB(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.lid)<=(vt0.c0)))!=(((vt0.c1)GLOB(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((((((vt0.lid)<=(vt0.c0)))!=(((vt0.c1)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE (LIKELIHOOD(vt0.c0, 0.1261564119216656) COLLATE RTRIM) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.1261564119216656) COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.1261564119216656) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING ((TOTAL(MIN(SUM(vt0.c0))))LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid)))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 NOT INDEXED GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((TOTAL(MIN(SUM(vt0.c0))))LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid)))))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING ((((TOTAL(MIN(SUM(vt0.c0))))LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (SQLITE_VERSION()) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt1 CROSS JOIN vt0 ON NULL;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt1 CROSS JOIN vt0 ON NULL WHERE ((((vt0.lid) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt1 CROSS JOIN vt0 ON NULL WHERE ((NOT ((((vt0.lid) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt1 CROSS JOIN vt0 ON NULL WHERE ((((((vt0.lid) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt1 CROSS JOIN vt0 ON NULL;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE (- (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE (- (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE (- (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING CAST(CAST(vt0.c0 AS REAL) AS BLOB) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT (CAST(CAST(vt0.c0 AS REAL) AS BLOB))) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ISNULL);
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING CAST(CAST(vt0.c0 AS REAL) AS BLOB) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT (CAST(CAST(vt0.c0 AS REAL) AS BLOB))) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ISNULL);
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) IS TRUE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.lid) AND ('1567417565')) THEN ((vt0.c0) NOT NULL) END) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 NOT INDEXED WHERE ((NOT (CASE ((vt1.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.lid) AND ('1567417565')) THEN ((vt0.c0) NOT NULL) END))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 WHERE (((CASE ((vt1.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.lid) AND ('1567417565')) THEN ((vt0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1;
SELECT vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0;
SELECT vt0.lid, vt1.c0 FROM vt1, vt0 WHERE (((CAST(-1.304171067E9 AS REAL)) NOT BETWEEN (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0))) AND (vt0.c0))) GROUP BY vt0.lid, vt1.c0 UNION SELECT vt0.lid, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CAST(-1.304171067E9 AS REAL)) NOT BETWEEN (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0))) AND (vt0.c0))))) GROUP BY vt0.lid, vt1.c0 UNION SELECT ALL vt0.lid, vt1.c0 FROM vt1, vt0 WHERE (((((CAST(-1.304171067E9 AS REAL)) NOT BETWEEN (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0))) AND (vt0.c0))) ISNULL)) GROUP BY vt0.lid, vt1.c0;
SELECT vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0 HAVING ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE MAX(vt0.c1) END)!=((TOTAL(vt0.c1) IN (x'')))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0 HAVING (NOT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE MAX(vt0.c1) END)!=((TOTAL(vt0.c1) IN (x'')))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0 HAVING ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE MAX(vt0.c1) END)<>((TOTAL(vt0.c1) IN (x''))))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0 HAVING ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE MAX(vt0.c1) END)!=((TOTAL(vt0.c1) IN (x'')))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0 HAVING (NOT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE MAX(vt0.c1) END)!=((TOTAL(vt0.c1) IN (x'')))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0 HAVING ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE MAX(vt0.c1) END)<>((TOTAL(vt0.c1) IN (x''))))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid, vt0.c0;
SELECT ALL vt0.lid FROM vt1, vt0;
SELECT ALL vt0.lid FROM vt1, vt0 WHERE ((((((((((vt1.c0 IN ()))AND(CAST(vt1.c0 AS TEXT))))AND((~ (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)))OR(x''))) UNION ALL SELECT vt0.lid FROM vt1, vt0 WHERE ((NOT ((((((((((vt1.c0 IN ()))AND(CAST(vt1.c0 AS TEXT))))AND((~ (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)))OR(x''))))) UNION ALL SELECT vt0.lid FROM vt1, vt0 WHERE ((((((((((((vt1.c0 IN ()))AND(CAST(vt1.c0 AS TEXT))))AND((~ (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)))OR(x''))) ISNULL));
SELECT ALL vt0.lid FROM vt1, vt0;
SELECT DISTINCT vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt0.lid FROM vt0, vt1 WHERE (((CAST(vt0.lid AS TEXT)) NOT NULL)) UNION SELECT DISTINCT vt0.lid FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.lid AS TEXT)) NOT NULL)))) UNION SELECT DISTINCT vt0.lid FROM vt0, vt1 WHERE (((((CAST(vt0.lid AS TEXT)) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (UNLIKELY(DISTINCT (((vt1.c0))>((vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (UNLIKELY(DISTINCT (((vt1.c0))>((vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((UNLIKELY(DISTINCT (((vt1.c0))>((vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0;
SELECT vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING COUNT(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1))<>((vt0.c1))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((((vt0.c1))<>((vt0.c1))) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1))!=((vt0.c1))) COLLATE NOCASE) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (((vt0.lid)+(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (((vt0.lid)+(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (((vt0.lid)+(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) WHERE (((((vt1.c0) NOTNULL))<<((vt0.c1 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) WHERE ((NOT (((((vt1.c0) NOTNULL))<<((vt0.c1 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) WHERE (((((((vt1.c0) NOTNULL))<<((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)+(COUNT(vt1.c0)))) NOT BETWEEN (COUNT(vt1.c0)) AND (CAST(vt1.c0 AS INTEGER))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)+(COUNT(vt1.c0)))) NOT BETWEEN (COUNT(vt1.c0)) AND (CAST(vt1.c0 AS INTEGER))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)+(COUNT(vt1.c0)))) NOT BETWEEN (COUNT(vt1.c0)) AND (CAST(vt1.c0 AS INTEGER)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)+(COUNT(vt1.c0)))) NOT BETWEEN (COUNT(vt1.c0)) AND (CAST(vt1.c0 AS INTEGER))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)+(COUNT(vt1.c0)))) NOT BETWEEN (COUNT(vt1.c0)) AND (CAST(vt1.c0 AS INTEGER))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)+(COUNT(vt1.c0)))) NOT BETWEEN (COUNT(vt1.c0)) AND (CAST(vt1.c0 AS INTEGER)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- (((vt1.c0)LIKE(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((- (((vt1.c0)LIKE(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((NULL)<=(vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((NULL)<=(vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((NULL)<=(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (GROUP_CONCAT(AVG(vt1.c0)))))||(AVG(COUNT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((- (GROUP_CONCAT(AVG(vt1.c0)))))||(AVG(COUNT(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((- (GROUP_CONCAT(AVG(vt1.c0)))))||(AVG(COUNT(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT vt0.lid, vt0.c1 FROM vt0;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE ((((- (vt0.c0))) NOT NULL)) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT ((((- (vt0.c0))) NOT NULL)))) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 WHERE ((((((- (vt0.c0))) NOT NULL)) ISNULL));
SELECT vt0.lid, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.lid))>=((vt0.lid, vt1.c0, vt0.c1))) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0, vt0.c1, vt0.lid))>=((vt0.lid, vt1.c0, vt0.c1))) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.lid))>=((vt0.lid, vt1.c0, vt0.c1))) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt0 WHERE ('㚎㞬') GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((NOT ('㚎㞬'))) GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((('㚎㞬') ISNULL)) GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(*))) NOT BETWEEN (((MIN(vt1.c0)) NOT BETWEEN (AVG(vt1.c0)) AND (MIN(GROUP_CONCAT(vt1.c0))))) AND (MIN(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(COUNT(*))) NOT BETWEEN (((MIN(vt1.c0)) NOT BETWEEN (AVG(vt1.c0)) AND (MIN(GROUP_CONCAT(vt1.c0))))) AND (MIN(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(COUNT(*))) NOT BETWEEN (((MIN(vt1.c0)) NOT BETWEEN (AVG(vt1.c0)) AND (MIN(GROUP_CONCAT(vt1.c0))))) AND (MIN(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (((CASE vt0.lid  WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END)-(((vt0.c1)&(vt0.lid))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (((CASE vt0.lid  WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END)-(((vt0.c1)&(vt0.lid))))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (((((CASE vt0.lid  WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END)-(((vt0.c1)&(vt0.lid))))) ISNULL));
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((NULL, vt0.lid, NULL)) BETWEEN ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.lid ELSE NULL END, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c1, 0.2454226549061621, (~ (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((NULL, vt0.lid, NULL)) BETWEEN ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.lid ELSE NULL END, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c1, 0.2454226549061621, (~ (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((NULL, vt0.lid, NULL)) BETWEEN ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.lid ELSE NULL END, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c1, 0.2454226549061621, (~ (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (LOWER((((vt0.c0))!=((vt0.c0))))) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (LOWER((((vt0.c0))<>((vt0.c0))))))) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((LOWER((((vt0.c0))!=((vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING AVG(MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING (NOT (AVG(MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING ((AVG(MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))) COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULLIF(vt0.c1, vt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (NULLIF(vt0.c1, vt0.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE (((NULLIF(vt0.c1, vt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((((('5''J%' IN ()))AND((vt0.c1 IN ()))))AND((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((('5''J%' IN ()))AND((vt0.c1 IN ()))))AND((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0, vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((((((('5''J%' IN ()))AND((vt0.c1 IN ()))))AND((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.lid, vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((((((vt0.lid)LIKE(1.492393941E9))))<=((CAST(vt0.c1 AS TEXT))))) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.lid)LIKE(1.492393941E9))))<=((CAST(vt0.c1 AS TEXT))))))) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((((((((vt0.lid)LIKE(1.492393941E9))))<=((CAST(vt0.c1 AS TEXT))))) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING vt1.c0 UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING vt1.c0 UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((NOT (vt0.c1)))>((vt0.c0 IN ())))) GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((NOT (vt0.c1)))>((vt0.c0 IN ())))))) GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((NOT (vt0.c1)))>((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1, vt1.c0;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((((vt1.c0 IN ()))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1 WHERE ((((((((vt1.c0 IN ()))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.lid)))OR(vt0.c0)) THEN LAST_INSERT_ROWID() WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.lid)))AND(-9.78310196E8)) THEN (0X6a1bf7fa IN (vt0.lid, vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END END;
SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.lid)))OR(vt0.c0)) THEN LAST_INSERT_ROWID() WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.lid)))AND(-9.78310196E8)) THEN (0X6a1bf7fa IN (vt0.lid, vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END END WHERE (CASE WHEN (- (-2039448840)) THEN 0.045140470764304164 ELSE LENGTH(x'073de2a9') END) UNION SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.lid)))OR(vt0.c0)) THEN LAST_INSERT_ROWID() WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.lid)))AND(-9.78310196E8)) THEN (0X6a1bf7fa IN (vt0.lid, vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END END WHERE ((NOT (CASE WHEN (- (-2039448840)) THEN 0.045140470764304164 ELSE LENGTH(x'073de2a9') END))) UNION SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.lid)))OR(vt0.c0)) THEN LAST_INSERT_ROWID() WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.lid)))AND(-9.78310196E8)) THEN (0x6a1bf7fa IN (vt0.lid, vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END END WHERE (((CASE WHEN (- (-2039448840)) THEN 0.045140470764304164 ELSE LENGTH(x'073de2a9') END) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.lid)))OR(vt0.c0)) THEN LAST_INSERT_ROWID() WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.lid)))AND(-9.78310196E8)) THEN (0X6a1bf7fa IN (vt0.lid, vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END END;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 WHERE (CAST(CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END AS REAL)) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 WHERE ((NOT (CAST(CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END AS REAL)))) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 WHERE (((CAST(CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END AS REAL)) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL TOTAL((x'' IN (((vt1.c0)/(vt1.c0))))) FROM vt0, vt1;
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)))));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) WHERE (((CASE WHEN vt0.lid THEN vt0.c1 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt0.c1 END))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) WHERE ((NOT (((CASE WHEN vt0.lid THEN vt0.c1 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt0.c1 END))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) WHERE (((((CASE WHEN vt0.lid THEN vt0.c1 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt0.c1 END))) ISNULL));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE (vt0.c0 IN (vt0.c1))  WHEN (NOT (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE '-585207882' COLLATE NOCASE END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN (vt0.c1))  WHEN (NOT (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE '-585207882' COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE (vt0.c0 IN (vt0.c1))  WHEN (NOT (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE '-585207882' COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END  WHEN (vt0.lid IN (vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END  WHEN (vt0.lid IN (vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END WHERE (((((vt0.lid)<<(vt1.c0))) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND ('2138534685'))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END  WHEN (vt0.lid IN (vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END WHERE ((NOT (((((vt0.lid)<<(vt1.c0))) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND ('2138534685'))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END  WHEN (vt0.lid IN (vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END WHERE (((((((vt0.lid)<<(vt1.c0))) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND ('2138534685'))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END  WHEN (vt0.lid IN (vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING ((((MAX(SUM(COUNT(vt0.c1))))>(vt0.c0)))IS NOT(((((((((TOTAL(MIN(vt0.lid)))AND(TOTAL(COUNT(TOTAL(vt0.lid))))))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (((((MAX(SUM(COUNT(vt0.c1))))>(vt0.c0)))IS NOT(((((((((TOTAL(MIN(vt0.lid)))AND(TOTAL(COUNT(TOTAL(vt0.lid))))))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING ((((((MAX(SUM(COUNT(vt0.c1))))>(vt0.c0)))IS NOT(((((((((TOTAL(MIN(vt0.lid)))AND(TOTAL(COUNT(TOTAL(vt0.lid))))))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))))) ISNULL);
SELECT vt0.c1 FROM vt0 CROSS JOIN vt1 ON json_insert(0.9758275022881558, CASE WHEN vt1.c0 THEN vt0.lid END, vt0.lid COLLATE RTRIM, '2122200046', json_object(vt0.c1, vt0.lid, vt0.c0, vt0.c0));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1))<((vt0.lid)))) BETWEEN (((vt0.c1)||(vt0.lid))) AND (((vt0.lid) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c1))<((vt0.lid)))) BETWEEN (((vt0.c1)||(vt0.lid))) AND (((vt0.lid) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1))<((vt0.lid)))) BETWEEN (((vt0.c1)||(vt0.lid))) AND (((vt0.lid) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.lid)) IN ())) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.lid)) IN ())))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.lid)) IN ())) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0, vt0.c0 HAVING CASE ((GROUP_CONCAT(COUNT(*)))>(COUNT(vt0.c1)))  WHEN vt0.c1 THEN MAX(SUM(vt0.c1)) END UNION ALL SELECT ALL vt0.c1, vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0, vt0.c0 HAVING (NOT (CASE ((GROUP_CONCAT(COUNT(*)))>(COUNT(vt0.c1)))  WHEN vt0.c1 THEN MAX(SUM(vt0.c1)) END)) UNION ALL SELECT vt0.c1, vt0.lid, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0, vt0.c0 HAVING ((CASE ((GROUP_CONCAT(COUNT(*)))>(COUNT(vt0.c1)))  WHEN vt0.c1 THEN MAX(SUM(vt0.c1)) END) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((- (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((- (vt1.c0))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))<((ABS(DISTINCT vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((CAST(vt1.c0 AS INTEGER)))<((ABS(DISTINCT vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((CAST(vt1.c0 AS INTEGER)))<((ABS(DISTINCT vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE (((((vt0.c1)&(vt0.lid)))==((((vt0.lid))!=((vt0.c1)))))) GROUP BY vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)&(vt0.lid)))=((((vt0.lid))<>((vt0.c1)))))))) GROUP BY vt0.c0, vt0.lid, vt0.c1 UNION SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 NOT INDEXED WHERE (((((((vt0.c1)&(vt0.lid)))=((((vt0.lid))!=((vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(((x'') NOTNULL) AS NUMERIC)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((x'') NOTNULL) AS NUMERIC)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((x'') NOTNULL) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (- (((vt0.lid)AND(vt0.lid))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (- (((vt0.lid)AND(vt0.lid)))) WHERE (json_extract(((vt1.c0)<=(vt0.lid)), ((((vt0.c0)AND(vt0.lid)))AND(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (- (((vt0.lid)AND(vt0.lid)))) WHERE ((NOT (json_extract(((vt1.c0)<=(vt0.lid)), ((((vt0.c0)AND(vt0.lid)))AND(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (- (((vt0.lid)AND(vt0.lid)))) WHERE (((json_extract(((vt1.c0)<=(vt0.lid)), ((((vt0.c0)AND(vt0.lid)))AND(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (- (((vt0.lid)AND(vt0.lid))));
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((~ (0X3e142aff))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((~ (0x3e142aff))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((~ (0X3e142aff))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING MAX(SUM(MIN(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING (NOT (MAX(SUM(MIN(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0 HAVING ((MAX(SUM(MIN(vt0.c1)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c1))IS(((vt0.c1)IS NOT(vt0.lid))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((UPPER(vt0.c1))IS(((vt0.c1)IS NOT(vt0.lid))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((UPPER(vt0.c1))IS(((vt0.c1)IS NOT(vt0.lid))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (CAST(vt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (CAST(vt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (CAST(vt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((((vt0.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((((vt0.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((((vt0.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING AVG(MIN(COUNT(x''))) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT (AVG(MIN(COUNT(x''))))) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING ((AVG(MIN(COUNT(x'')))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt0.c0))) NOT BETWEEN (((vt0.lid)||(vt0.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)<=(vt0.c0))) NOT BETWEEN (((vt0.lid)||(vt0.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (((((((vt0.c0)<=(vt0.c0))) NOT BETWEEN (((vt0.lid)||(vt0.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (MAX(vt1.c0, ((vt1.c0)>(vt1.c0)), ((vt1.c0) IS TRUE), (+ (vt1.c0)), (NOT (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (MAX(vt1.c0, ((vt1.c0)>(vt1.c0)), ((vt1.c0) IS TRUE), (+ (vt1.c0)), (NOT (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((MAX(vt1.c0, ((vt1.c0)>(vt1.c0)), ((vt1.c0) IS TRUE), (+ (vt1.c0)), (NOT (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (0.2485355095052041))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((NOT (0.2485355095052041))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((NOT (0.2485355095052041))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c0 HAVING MIN(COUNT(vt0.lid)) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (MIN(COUNT(vt0.lid)))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c0 HAVING ((MIN(COUNT(vt0.lid))) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (~ (((vt0.c1)>(vt0.lid))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (~ (((vt0.c1)>(vt0.lid)))) WHERE (CAST(((((vt0.lid)OR(vt1.c0)))OR(vt0.c0)) AS INTEGER)) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (~ (((vt0.c1)>(vt0.lid)))) WHERE ((NOT (CAST(((((vt0.lid)OR(vt1.c0)))OR(vt0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (~ (((vt0.c1)>(vt0.lid)))) WHERE (((CAST(((((vt0.lid)OR(vt1.c0)))OR(vt0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (~ (((vt0.c1)>(vt0.lid))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)!=(vt1.c0))))>(((- ('CB')))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0)!=(vt1.c0))))>(((- ('CB')))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0)!=(vt1.c0))))>(((- ('CB')))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((((vt0.lid)) BETWEEN (((0.8304884759768463 IN ()))) AND ((((((vt0.c1)OR(vt0.lid)))OR(vt0.c0)))))) GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.lid)) BETWEEN (((0.8304884759768463 IN ()))) AND ((((((vt0.c1)OR(vt0.lid)))OR(vt0.c0)))))))) GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((((((vt0.lid)) BETWEEN (((0.8304884759768463 IN ()))) AND ((((((vt0.c1)OR(vt0.lid)))OR(vt0.c0)))))) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.lid, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING AVG(vt0.lid) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (AVG(vt0.lid) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((AVG(vt0.lid) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING AVG(vt0.lid) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (AVG(vt0.lid) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((AVG(vt0.lid) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0))==(((((vt0.lid))>((vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0))=(((((vt0.lid))>((vt1.c0))))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0))=(((((vt0.lid))>((vt1.c0))))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE (vt0.lid) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((vt0.lid) IS FALSE))/(TRIM(vt0.c1)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.lid) IS FALSE))/(TRIM(vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.lid) IS FALSE))/(TRIM(vt0.c1)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (x'') UNION ALL SELECT * FROM vt1 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt1 WHERE (((x'') ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.lid)))>=(vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1 IN (vt0.lid)))>=(vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.lid)))>=(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((IFNULL(vt0.c1, vt0.c0))<(CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((IFNULL(vt0.c1, vt0.c0))<(CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((IFNULL(vt0.c1, vt0.c0))<(CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid HAVING ((AVG(COUNT(*)))OR(vt0.lid)) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (((AVG(COUNT(*)))OR(vt0.lid)) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid HAVING ((((AVG(COUNT(*)))OR(vt0.lid)) COLLATE NOCASE) ISNULL);
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR(((((x'')OR(vt1.c0)))OR(vt0.c0)))))AND(((vt1.c0)&(vt0.c0)))))OR(((x'') NOTNULL))))OR(NULL))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 WHERE ((NOT (((((((((vt1.c0 COLLATE NOCASE)OR(((((x'')OR(vt1.c0)))OR(vt0.c0)))))AND(((vt1.c0)&(vt0.c0)))))OR(((x'') NOTNULL))))OR(NULL))))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1 WHERE (((((((((((vt1.c0 COLLATE NOCASE)OR(((((x'')OR(vt1.c0)))OR(vt0.c0)))))AND(((vt1.c0)&(vt0.c0)))))OR(((x'') NOTNULL))))OR(NULL))) ISNULL));
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS TEXT)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS REAL) AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS REAL) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0))) BETWEEN ('.L<X' COLLATE BINARY) AND (vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((+ (vt1.c0))) BETWEEN ('.L<X' COLLATE BINARY) AND (vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((+ (vt1.c0))) BETWEEN ('.L<X' COLLATE BINARY) AND (vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((COUNT(*))>(COUNT(vt0.c0))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (NOT (((COUNT(*))>(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((((COUNT(*))>(COUNT(vt0.c0)))) ISNULL);
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((COUNT(*))>(COUNT(vt0.c0))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (NOT (((COUNT(*))>(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((((COUNT(*))>(COUNT(vt0.c0)))) ISNULL);
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((vt0.c1)/(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1)/(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((((vt0.c1)/(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(CAST(vt0.lid AS INTEGER) AS INTEGER);
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(CAST(vt0.lid AS INTEGER) AS INTEGER) WHERE ((((x'')%(vt0.c1)) IN (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(CAST(vt0.lid AS INTEGER) AS INTEGER) WHERE ((NOT ((((x'')%(vt0.c1)) IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(CAST(vt0.lid AS INTEGER) AS INTEGER) WHERE ((((((x'')%(vt0.c1)) IN (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(CAST(vt0.lid AS INTEGER) AS INTEGER);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING x'' UNION ALL SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING (NOT (x'')) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING ((x'') ISNULL);
SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING x'' UNION ALL SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING (NOT (x'')) UNION ALL SELECT vt0.lid FROM vt0, vt1 GROUP BY vt0.lid HAVING ((x'') ISNULL);
SELECT ALL vt0.lid FROM vt0, vt1 GROUP BY vt0.lid;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((0x48ff7030) NOT BETWEEN (NULL) AND (NULL)) AS NUMERIC);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((0X48ff7030) NOT BETWEEN (NULL) AND (NULL)) AS NUMERIC) WHERE (NULL) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((0X48ff7030) NOT BETWEEN (NULL) AND (NULL)) AS NUMERIC) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((0X48ff7030) NOT BETWEEN (NULL) AND (NULL)) AS NUMERIC) WHERE (((NULL) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((0x48ff7030) NOT BETWEEN (NULL) AND (NULL)) AS NUMERIC);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((0X63e56728)) AND ((vt1.c0)))) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND ((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((0x63e56728)) AND ((vt1.c0)))) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND ((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((0X63e56728)) AND ((vt1.c0)))) NOT BETWEEN ((((vt1.c0))=((vt1.c0)))) AND ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt0.lid IN (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.lid IN (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE (((json_object(vt0.c1, vt0.lid, vt0.c1, vt0.c0))!=(((vt0.c0) IS FALSE)))) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.lid IN (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((NOT (((json_object(vt0.c1, vt0.lid, vt0.c1, vt0.c0))!=(((vt0.c0) IS FALSE)))))) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt0.lid, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.lid IN (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE (((((json_object(vt0.c1, vt0.lid, vt0.c1, vt0.c0))!=(((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.lid, vt0.c1;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MIN('-1736796917') UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN('-1736796917'))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MIN('-1736796917')) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MIN('-1736796917') UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN('-1736796917'))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MIN('-1736796917')) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))<=(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS REAL))<=(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c1 AS REAL))<=(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0, vt1 WHERE ((((vt0.c1, vt0.lid, vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()), ((vt0.lid) NOTNULL), CAST(vt0.lid AS INTEGER))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 2012460705 END, (((vt0.lid))>=((vt0.c1))), vt0.lid)))) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0, vt1 WHERE ((NOT ((((vt0.c1, vt0.lid, vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()), ((vt0.lid) NOTNULL), CAST(vt0.lid AS INTEGER))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 2012460705 END, (((vt0.lid))>=((vt0.c1))), vt0.lid)))))) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0, vt1 WHERE ((((((vt0.c1, vt0.lid, vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()), ((vt0.lid) NOTNULL), CAST(vt0.lid AS INTEGER))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 2012460705 END, (((vt0.lid))>=((vt0.c1))), vt0.lid)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING ((COUNT(*))OR(AVG(vt1.c0))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING (NOT (((COUNT(*))OR(AVG(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING ((((COUNT(*))OR(AVG(vt1.c0)))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING ((COUNT(*))OR(AVG(vt1.c0))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING (NOT (((COUNT(*))OR(AVG(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid HAVING ((((COUNT(*))OR(AVG(vt1.c0)))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.lid;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE CASE vt0.lid  WHEN 0X47f0767 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN CAST(vt0.lid AS REAL) THEN (((vt0.c1, vt0.c1, vt0.lid))>((vt0.c1, x'', vt0.c1))) WHEN '2109016599' THEN CASE vt0.lid  WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END WHEN LIKELIHOOD(DISTINCT NULL, 0.2993211944770521) THEN (((vt1.c0))<=((vt1.c0))) END) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (CASE CASE vt0.lid  WHEN 0X47f0767 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN CAST(vt0.lid AS REAL) THEN (((vt0.c1, vt0.c1, vt0.lid))>((vt0.c1, x'', vt0.c1))) WHEN '2109016599' THEN CASE vt0.lid  WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END WHEN LIKELIHOOD(DISTINCT NULL, 0.2993211944770521) THEN (((vt1.c0))<=((vt1.c0))) END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CASE CASE vt0.lid  WHEN 0x47f0767 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN CAST(vt0.lid AS REAL) THEN (((vt0.c1, vt0.c1, vt0.lid))>((vt0.c1, x'', vt0.c1))) WHEN '2109016599' THEN CASE vt0.lid  WHEN vt0.lid THEN vt0.c1 ELSE vt0.c1 END WHEN LIKELIHOOD(DISTINCT NULL, 0.2993211944770521) THEN (((vt1.c0))<=((vt1.c0))) END) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((((''))=((vt0.c1))))) AND ((((NULL)&(vt1.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((''))==((vt0.c1))))) AND ((((NULL)&(vt1.c0)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN (((((''))==((vt0.c1))))) AND ((((NULL)&(vt1.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0)))OR(RTRIM(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((NOT (vt1.c0)))OR(RTRIM(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((NOT (vt1.c0)))OR(RTRIM(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((vt1.c0) NOT BETWEEN (MAX(AVG(AVG(AVG(vt1.c0))))) AND (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((vt1.c0) NOT BETWEEN (MAX(AVG(AVG(AVG(vt1.c0))))) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((vt1.c0) NOT BETWEEN (MAX(AVG(AVG(AVG(vt1.c0))))) AND (vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0)<(vt1.c0)))))AND(((vt1.c0)||(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0)<(vt1.c0)))))AND(((vt1.c0)||(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0)<(vt1.c0)))))AND(((vt1.c0)||(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (- (((COUNT(MIN(MAX(MAX(GROUP_CONCAT(vt0.c1))))))LIKE(MAX(GROUP_CONCAT(vt0.lid)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (NOT ((- (((COUNT(MIN(MAX(MAX(GROUP_CONCAT(vt0.c1))))))LIKE(MAX(GROUP_CONCAT(vt0.lid)))))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (((- (((COUNT(MIN(MAX(MAX(GROUP_CONCAT(vt0.c1))))))LIKE(MAX(GROUP_CONCAT(vt0.lid))))))) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)/(vt0.lid))) NOTNULL);
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)/(vt0.lid))) NOTNULL) WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL)) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)/(vt0.lid))) NOTNULL) WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)/(vt0.lid))) NOTNULL) WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL)) ISNULL));
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)/(vt0.lid))) NOTNULL);
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((CAST(vt0.lid AS REAL))%(CASE vt0.lid  WHEN 'kU﹁FU' THEN -75952866 ELSE vt0.c1 END))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.lid AS REAL))%(CASE vt0.lid  WHEN 'kU﹁FU' THEN -75952866 ELSE vt0.c1 END))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((((CAST(vt0.lid AS REAL))%(CASE vt0.lid  WHEN 'kU﹁FU' THEN -75952866 ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((LIKELY(DISTINCT vt1.c0) IN ())) GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((LIKELY(DISTINCT vt1.c0) IN ())))) GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((LIKELY(DISTINCT vt1.c0) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1;
SELECT vt0.c0, vt0.lid, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.lid, vt1.c0, vt0.c1;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (json_extract(vt0.c1, vt0.c1, vt1.c0, vt0.c1) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (json_extract(vt0.c1, vt0.c1, vt1.c0, vt0.c1) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((json_extract(vt0.c1, vt0.c1, vt1.c0, vt0.c1) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.lid) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (TRIM(DISTINCT CASE WHEN vt0.lid THEN vt0.lid END, ((vt1.c0)<<(vt0.c0)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (TRIM(DISTINCT CASE WHEN vt0.lid THEN vt0.lid END, ((vt1.c0)<<(vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((TRIM(DISTINCT CASE WHEN vt0.lid THEN vt0.lid END, ((vt1.c0)<<(vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING ((COUNT(*))==(TOTAL('5>9J)uZ.d'))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT (((COUNT(*))=(TOTAL('5>9J)uZ.d'))))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING ((((COUNT(*))=(TOTAL('5>9J)uZ.d')))) ISNULL);
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING ((COUNT(*))==(TOTAL('5>9J)uZ.d'))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT (((COUNT(*))=(TOTAL('5>9J)uZ.d'))))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING ((((COUNT(*))=(TOTAL('5>9J)uZ.d')))) ISNULL);
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0))<=((vt1.c0))))IS(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((((vt0.c0))<=((vt1.c0))))IS(((vt0.c1) NOT NULL)))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt0.c0))<=((vt1.c0))))IS(((vt0.c1) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((IFNULL(vt1.c0, 0.6698088402546564))+(x'36dd'))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((IFNULL(vt1.c0, 0.6698088402546564))+(x'36dd'))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((IFNULL(vt1.c0, 0.6698088402546564))+(x'36dd'))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (0.28204035978752395) AND (vt1.c0)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE NOCASE END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) BETWEEN (0.28204035978752395) AND (vt1.c0)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE NOCASE END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0) BETWEEN (0.28204035978752395) AND (vt1.c0)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING AVG((((vt1.c0))<=((SUM(COUNT(*)))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (AVG((((vt1.c0))<=((SUM(COUNT(*)))))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((AVG((((vt1.c0))<=((SUM(COUNT(*))))))) ISNULL);
SELECT vt0.c1, vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((+ (((((vt0.c1)AND(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((+ (((((vt0.c1)AND(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((+ (((((vt0.c1)AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT vt0.c1, vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((+ (vt0.c1))) UNION SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c1))))) UNION SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((((+ (vt0.c1))) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (STRFTIME((NOT (vt1.c0)), 1.350291034E9, (('ጽdꂚW2⯌')IS NOT(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (STRFTIME((NOT (vt1.c0)), 1.350291034E9, (('ጽdꂚW2⯌')IS NOT(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((STRFTIME((NOT (vt1.c0)), 1.350291034E9, (('ጽdꂚW2⯌')IS NOT(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON (NOT (((vt0.c0)*(vt0.c1))));
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON (NOT (((vt0.c0)*(vt0.c1)))) WHERE (((((vt0.c1 IN ()), vt0.c1 COLLATE BINARY, ((vt0.c1)GLOB(vt0.c1)), ((vt0.lid)>=(vt0.c0)), ((((vt0.c0)AND(vt0.lid)))AND(vt0.c1))))!=((NULL, (+ (vt1.c0)), CAST(vt0.lid AS BLOB), (- (vt0.lid)), CAST(vt0.lid AS NUMERIC))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON (NOT (((vt0.c0)*(vt0.c1)))) WHERE ((NOT (((((vt0.c1 IN ()), vt0.c1 COLLATE BINARY, ((vt0.c1)GLOB(vt0.c1)), ((vt0.lid)>=(vt0.c0)), ((((vt0.c0)AND(vt0.lid)))AND(vt0.c1))))<>((NULL, (+ (vt1.c0)), CAST(vt0.lid AS BLOB), (- (vt0.lid)), CAST(vt0.lid AS NUMERIC))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON (NOT (((vt0.c0)*(vt0.c1)))) WHERE (((((((vt0.c1 IN ()), vt0.c1 COLLATE BINARY, ((vt0.c1)GLOB(vt0.c1)), ((vt0.lid)>=(vt0.c0)), ((((vt0.c0)AND(vt0.lid)))AND(vt0.c1))))!=((NULL, (+ (vt1.c0)), CAST(vt0.lid AS BLOB), (- (vt0.lid)), CAST(vt0.lid AS NUMERIC))))) ISNULL));
SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON (NOT (((vt0.c0)*(vt0.c1))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(vt0.lid AS INTEGER) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(vt0.lid AS INTEGER) COLLATE NOCASE WHERE (((((((vt0.c0)>=(vt0.c1)))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(vt0.lid AS INTEGER) COLLATE NOCASE WHERE ((NOT (((((((vt0.c0)>=(vt0.c1)))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(vt0.lid AS INTEGER) COLLATE NOCASE WHERE (((((((((vt0.c0)>=(vt0.c1)))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(vt0.lid AS INTEGER) COLLATE NOCASE;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE (((- (vt0.c1)) IN ((vt0.c1 IN ())))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((- (vt0.c1)) IN ((vt0.c1 IN ())))))) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE (((((- (vt0.c1)) IN ((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE (((((((vt0.c1)<=(vt0.lid)))OR(((((vt0.lid)AND(vt0.c0)))OR(vt0.c1)))))AND(((vt1.c0)-(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((NOT (((((((vt0.c1)<=(vt0.lid)))OR(((((vt0.lid)AND(vt0.c0)))OR(vt0.c1)))))AND(((vt1.c0)-(vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE (((((((((vt0.c1)<=(vt0.lid)))OR(((((vt0.lid)AND(vt0.c0)))OR(vt0.c1)))))AND(((vt1.c0)-(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))&(vt0.lid))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))&(vt0.lid))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))&(vt0.lid))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((+ (vt0.c0))) IS FALSE)) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((((+ (vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (NULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((NOT (NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid HAVING ((COUNT(vt0.lid)) IS TRUE) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid HAVING (NOT (((COUNT(vt0.lid)) IS TRUE))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid HAVING ((((COUNT(vt0.lid)) IS TRUE)) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid HAVING ((COUNT(vt0.lid)) IS TRUE) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid HAVING (NOT (((COUNT(vt0.lid)) IS TRUE))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid HAVING ((((COUNT(vt0.lid)) IS TRUE)) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.lid;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ()))&(vt0.lid))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c1 IN ()))&(vt0.lid))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c1 IN ()))&(vt0.lid))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt1.c0)!=(vt0.c1)))AND(((((vt0.c0)OR(vt0.lid)))AND(vt0.c0)))))AND((((vt1.c0))<((vt0.lid)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((vt1.c0)<>(vt0.c1)))AND(((((vt0.c0)OR(vt0.lid)))AND(vt0.c0)))))AND((((vt1.c0))<((vt0.lid)))))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE (((((((((vt1.c0)<>(vt0.c1)))AND(((((vt0.c0)OR(vt0.lid)))AND(vt0.c0)))))AND((((vt1.c0))<((vt0.lid)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE (((CAST('557887544' AS BLOB)) BETWEEN (vt0.lid) AND ((vt0.lid IN ())))) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CAST('557887544' AS BLOB)) BETWEEN (vt0.lid) AND ((vt0.lid IN ())))))) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE (((((CAST('557887544' AS BLOB)) BETWEEN (vt0.lid) AND ((vt0.lid IN ())))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt0.lid, vt1.c0;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING MIN((AVG(vt0.c1) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING (NOT (MIN((AVG(vt0.c1) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((MIN((AVG(vt0.c1) IN ()))) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING MIN((AVG(vt0.c1) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING (NOT (MIN((AVG(vt0.c1) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((MIN((AVG(vt0.c1) IN ()))) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.lid))=((vt0.c1))) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.lid))==((vt0.c1))) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.lid))==((vt0.c1))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((((vt0.c1, vt0.lid, vt0.c1)) BETWEEN ((vt0.lid, vt0.c0, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.c0))) AS INTEGER)) UNION SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c1, vt0.lid, vt0.c1)) BETWEEN ((vt0.lid, vt0.c0, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.c0))) AS INTEGER)))) UNION SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c1, vt0.lid, vt0.c1)) BETWEEN ((vt0.lid, vt0.c0, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.c0))) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE (CAST((- (vt0.c1)) AS REAL)) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((NOT (CAST((- (vt0.c1)) AS REAL)))) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE (((CAST((- (vt0.c1)) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING MAX(MAX(vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING (NOT (MAX(MAX(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((MAX(MAX(vt0.c1))) ISNULL);
SELECT * FROM vt1 NATURAL JOIN vt0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c1)LIKE(vt0.c1)))>(vt0.c1))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((vt0.c1)LIKE(vt0.c1)))>(vt0.c1))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c1)LIKE(vt0.c1)))>(vt0.c1))) ISNULL));
SELECT * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((0.965221804963485)<(((vt0.c0)*(vt0.lid))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((0.965221804963485)<(((vt0.c0)*(vt0.lid))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((((0.965221804963485)<(((vt0.c0)*(vt0.lid))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (vt0.lid)) COLLATE RTRIM) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT ((NOT (vt0.lid)) COLLATE RTRIM))) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE ((((NOT (vt0.lid)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING MIN((((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, TOTAL(vt1.c0), vt0.lid)) AND (('zN|xt7WYL', COUNT(MAX(MIN(AVG(vt0.lid)))), MIN(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, TOTAL(vt1.c0), vt0.lid)) AND (('zN|xt7WYL', COUNT(MAX(MIN(AVG(vt0.lid)))), MIN(vt1.c0))))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((MIN((((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, TOTAL(vt1.c0), vt0.lid)) AND (('zN|xt7WYL', COUNT(MAX(MIN(AVG(vt0.lid)))), MIN(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (UPPER(((((vt0.lid)AND(vt0.c1)))AND(vt0.lid)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (UPPER(((((vt0.lid)AND(vt0.c1)))AND(vt0.lid)))))) UNION ALL SELECT * FROM vt0 WHERE (((UPPER(((((vt0.lid)AND(vt0.c1)))AND(vt0.lid)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((1.642289857E9)AND(TYPEOF(DISTINCT vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((1.642289857E9)AND(TYPEOF(DISTINCT vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((1.642289857E9)AND(TYPEOF(DISTINCT vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 WHERE ((((vt1.c0)+(vt0.lid)) IN ())) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)+(vt0.lid)) IN ())))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((((((vt1.c0)+(vt0.lid)) IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0 HAVING MIN(MAX(TOTAL(SUM(NULL)))) UNION ALL SELECT vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (MIN(MAX(TOTAL(SUM(NULL)))))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0 HAVING ((MIN(MAX(TOTAL(SUM(NULL))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ())))>=((CAST(NULL AS BLOB))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 IN ())))>=((CAST(NULL AS BLOB))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0 IN ())))>=((CAST(NULL AS BLOB))))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (DATETIME(vt1.c0, ((((x'')AND(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS NUMERIC))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (DATETIME(vt1.c0, ((((x'')AND(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS NUMERIC))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((DATETIME(vt1.c0, ((((x'')AND(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid, vt0.c0;
SELECT vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT vt0.c1)) GROUP BY vt1.c0, vt0.lid, vt0.c0 UNION SELECT ALL vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE ((NOT (UNLIKELY(DISTINCT vt0.c1)))) GROUP BY vt1.c0, vt0.lid, vt0.c0 UNION SELECT vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 WHERE (((UNLIKELY(DISTINCT vt0.c1)) ISNULL)) GROUP BY vt1.c0, vt0.lid, vt0.c0;
SELECT vt1.c0, vt0.lid, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING TOTAL(vt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (NOT (TOTAL(vt0.c1 COLLATE NOCASE))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING ((TOTAL(vt0.c1 COLLATE NOCASE)) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING TOTAL(vt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (NOT (TOTAL(vt0.c1 COLLATE NOCASE))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING ((TOTAL(vt0.c1 COLLATE NOCASE)) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((((CAST(NULL AS BLOB)))=(((((('106204332')AND(vt0.c1)))OR(vt0.c0)))))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((CAST(NULL AS BLOB)))==(((((('106204332')AND(vt0.c1)))OR(vt0.c0)))))))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((((((CAST(NULL AS BLOB)))==(((((('106204332')AND(vt0.c1)))OR(vt0.c0)))))) ISNULL));
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid)))|((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid)))|((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid)))|((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c1)LIKE(vt0.c1))) IS FALSE)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)LIKE(vt0.c1))) IS FALSE)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c1)LIKE(vt0.c1))) IS FALSE)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(highlight(vt1.c0, vt1.c0, SUM(vt1.c0), MAX(TOTAL(GROUP_CONCAT(TOTAL(vt1.c0))))) AS BLOB) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(highlight(vt1.c0, vt1.c0, SUM(vt1.c0), MAX(TOTAL(GROUP_CONCAT(TOTAL(vt1.c0))))) AS BLOB))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(highlight(vt1.c0, vt1.c0, SUM(vt1.c0), MAX(TOTAL(GROUP_CONCAT(TOTAL(vt1.c0))))) AS BLOB)) ISNULL);
SELECT TOTAL(((CAST(vt1.c0 AS TEXT))<<(vt1.c0))) FROM vt1;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((((x'')OR(vt1.c0)))OR(vt0.c1)) THEN (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.lid, vt0.lid)) AND ((vt1.c0, vt1.c0, vt0.c1))) END) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CASE WHEN ((((x'')OR(vt1.c0)))OR(vt0.c1)) THEN (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.lid, vt0.lid)) AND ((vt1.c0, vt1.c0, vt0.c1))) END))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN ((((x'')OR(vt1.c0)))OR(vt0.c1)) THEN (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.lid, vt0.lid)) AND ((vt1.c0, vt1.c0, vt0.c1))) END) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt0.lid FROM vt0, vt1 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN '1897446085' END)AND(((vt0.c0) NOT NULL))))AND(((vt0.lid) NOTNULL)))) UNION SELECT DISTINCT vt0.lid FROM vt0, vt1 WHERE ((NOT (((((CASE vt0.c1  WHEN vt0.c1 THEN '1897446085' END)AND(((vt0.c0) NOT NULL))))AND(((vt0.lid) NOTNULL)))))) UNION SELECT DISTINCT vt0.lid FROM vt0, vt1 WHERE (((((((CASE vt0.c1  WHEN vt0.c1 THEN '1897446085' END)AND(((vt0.c0) NOT NULL))))AND(((vt0.lid) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0, vt1;
SELECT vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0, vt1 WHERE (CAST(vt0.lid AS INTEGER)) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0, vt1 WHERE ((NOT (CAST(vt0.lid AS INTEGER)))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0, vt1 WHERE (((CAST(vt0.lid AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING CASE GROUP_CONCAT(vt1.c0)  WHEN COUNT(*) THEN CAST(COUNT(*) AS TEXT) ELSE COUNT(*) END UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (CASE GROUP_CONCAT(vt1.c0)  WHEN COUNT(*) THEN CAST(COUNT(*) AS TEXT) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((CASE GROUP_CONCAT(vt1.c0)  WHEN COUNT(*) THEN CAST(COUNT(*) AS TEXT) ELSE COUNT(*) END) ISNULL);
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING CASE GROUP_CONCAT(vt1.c0)  WHEN COUNT(*) THEN CAST(COUNT(*) AS TEXT) ELSE COUNT(*) END UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (CASE GROUP_CONCAT(vt1.c0)  WHEN COUNT(*) THEN CAST(COUNT(*) AS TEXT) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((CASE GROUP_CONCAT(vt1.c0)  WHEN COUNT(*) THEN CAST(COUNT(*) AS TEXT) ELSE COUNT(*) END) ISNULL);
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL MIN(((((((vt0.lid) IS TRUE))OR(((vt0.lid)<=('_<揉')))))AND(((vt1.c0)-(vt1.c0))))) FROM vt0, vt1;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0)GLOB(vt1.c0)) IN (((vt1.c0) IS FALSE), vt1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)GLOB(vt1.c0)) IN (((vt1.c0) IS FALSE), vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0)) IN (((vt1.c0) IS FALSE), vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0 WHERE ((((- (vt0.c0)))<>(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT ((((- (vt0.c0)))<>(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0 WHERE ((((((- (vt0.c0)))<>(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c1 FROM vt0;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE) GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE) WHERE (vt0.lid) GROUP BY vt0.lid, vt0.c0, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE) WHERE ((NOT (vt0.lid))) GROUP BY vt0.lid, vt0.c0, vt0.c1 UNION SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE) WHERE (((vt0.lid) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) IS FALSE) GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(MIN(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(MIN(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((0X192641fa)OR(0.5378447163778942)) IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((0x192641fa)OR(0.5378447163778942)) IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((((0x192641fa)OR(0.5378447163778942)) IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((- (((((vt0.lid)OR(vt0.c0)))OR(NULL))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((- (((((vt0.lid)OR(vt0.c0)))OR(NULL))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((- (((((vt0.lid)OR(vt0.c0)))OR(NULL))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.lid, vt1.c0;
SELECT vt0.c0, vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE (x'') GROUP BY vt0.c0, vt0.c1, vt0.lid, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt0.lid, vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (x''))) GROUP BY vt0.c0, vt0.c1, vt0.lid, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.lid, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.lid, vt1.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((('-1871771815')<(MIN(vt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT ((('-1871771815')<(MIN(vt1.c0))))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((NOT ((('-1871771815')<(MIN(vt1.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((('-1871771815')<(MIN(vt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT ((('-1871771815')<(MIN(vt1.c0))))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((NOT ((('-1871771815')<(MIN(vt1.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(('Wm|}[' IN ()) AS BLOB);
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(('Wm|}[' IN ()) AS BLOB) WHERE ((((vt0.c0 IN (vt1.c0, vt0.c1)))GLOB(CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(('Wm|}[' IN ()) AS BLOB) WHERE ((NOT ((((vt0.c0 IN (vt1.c0, vt0.c1)))GLOB(CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(('Wm|}[' IN ()) AS BLOB) WHERE ((((((vt0.c0 IN (vt1.c0, vt0.c1)))GLOB(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(('Wm|}[' IN ()) AS BLOB);
SELECT ALL vt0.c1, vt1.c0, vt0.lid FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid;
SELECT ALL vt0.c1, vt1.c0, vt0.lid FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0)LIKE(vt0.c1))) NOTNULL)) GROUP BY vt0.c1, vt1.c0, vt0.lid UNION SELECT ALL vt0.c1, vt1.c0, vt0.lid FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c1))) NOTNULL)))) GROUP BY vt0.c1, vt1.c0, vt0.lid UNION SELECT vt0.c1, vt1.c0, vt0.lid FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt0.c0)LIKE(vt0.c1))) NOTNULL)) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.lid;
SELECT ALL vt0.c1, vt1.c0, vt0.lid FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c1, vt1.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0;
SELECT vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0 HAVING TOTAL(MAX(SUM(vt1.c0))) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0 HAVING (NOT (TOTAL(MAX(SUM(vt1.c0))))) UNION ALL SELECT vt0.c1, vt0.lid, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.lid, vt1.c0 HAVING ((TOTAL(MAX(SUM(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)<(vt1.c0))))<=(((vt1.c0 IN ()))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)<(vt1.c0))))<=(((vt1.c0 IN ()))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)<(vt1.c0))))<=(((vt1.c0 IN ()))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((CASE WHEN vt1.c0 THEN NULL END)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((CASE WHEN vt1.c0 THEN NULL END)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((CASE WHEN vt1.c0 THEN NULL END)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((CASE WHEN vt0.lid THEN x'' ELSE vt0.c1 END IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT ((CASE WHEN vt0.lid THEN x'' ELSE vt0.c1 END IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((((CASE WHEN vt0.lid THEN x'' ELSE vt0.c1 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE '-978310196'  WHEN AVG(vt1.c0) THEN ((MIN(MAX(vt1.c0)))!=(TOTAL(vt1.c0))) WHEN AVG(SUM(x'')) THEN ((GROUP_CONCAT(vt1.c0)) NOT NULL) WHEN COUNT(vt1.c0) THEN COUNT(vt1.c0) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE '-978310196'  WHEN AVG(vt1.c0) THEN ((MIN(MAX(vt1.c0)))!=(TOTAL(vt1.c0))) WHEN AVG(SUM(x'')) THEN ((GROUP_CONCAT(vt1.c0)) NOT NULL) WHEN COUNT(vt1.c0) THEN COUNT(vt1.c0) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE '-978310196'  WHEN AVG(vt1.c0) THEN ((MIN(MAX(vt1.c0)))!=(TOTAL(vt1.c0))) WHEN AVG(SUM(x'')) THEN ((GROUP_CONCAT(vt1.c0)) NOT NULL) WHEN COUNT(vt1.c0) THEN COUNT(vt1.c0) END) ISNULL);
SELECT TOTAL((NOT (((((vt0.c1)OR(0.6859784337885857)))AND(vt0.lid))))) FROM vt0 ORDER BY (((vt0.c0)+(vt0.lid)) IN ());
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (UPPER(vt0.lid)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (UPPER(vt0.lid)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((UPPER(vt0.lid)) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0))))<<((vt0.lid IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0))))<<((vt0.lid IN ())))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0))))<<((vt0.lid IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.lid, vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) AND ((NOT (vt0.c1)))) GROUP BY vt0.lid, vt0.c0, vt1.c0;
SELECT vt0.lid, vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) AND ((NOT (vt0.c1)))) WHERE (vt1.c0) GROUP BY vt0.lid, vt0.c0, vt1.c0 UNION SELECT ALL vt0.lid, vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) AND ((NOT (vt0.c1)))) WHERE ((NOT (vt1.c0))) GROUP BY vt0.lid, vt0.c0, vt1.c0 UNION SELECT ALL vt0.lid, vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) AND ((NOT (vt0.c1)))) WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt1.c0;
SELECT vt0.lid, vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) AND ((NOT (vt0.c1)))) GROUP BY vt0.lid, vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(MAX(TOTAL('1348588598'))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(MAX(TOTAL('1348588598'))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(MAX(TOTAL('1348588598')))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(')94뙛')))OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(')94뙛')))OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM COLLATE BINARY))) UNION ALL SELECT * FROM vt1 WHERE (((((((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(')94뙛')))OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (-9.60631729E8) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (-9.60631729E8))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((-9.60631729E8) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt0.lid FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((('-1736796917')AND(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))AND(vt0.c1))) ISNULL) GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((('-1736796917')AND(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))AND(vt0.c1))) ISNULL) WHERE ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((ABS(DISTINCT vt0.lid), PRINTF(vt0.c0), NULL)) AND ((((vt0.lid) NOT BETWEEN (0Xffffffffb6b1891a) AND (vt1.c0)), '-960631729', CASE vt0.c1  WHEN vt0.c1 THEN 0x64cc3f83 ELSE vt1.c0 END)))) GROUP BY vt1.c0, vt0.lid UNION SELECT ALL vt1.c0, vt0.lid FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((('-1736796917')AND(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))AND(vt0.c1))) ISNULL) WHERE ((NOT ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((ABS(DISTINCT vt0.lid), PRINTF(vt0.c0), NULL)) AND ((((vt0.lid) NOT BETWEEN (0xffffffffb6b1891a) AND (vt1.c0)), '-960631729', CASE vt0.c1  WHEN vt0.c1 THEN 0x64cc3f83 ELSE vt1.c0 END)))))) GROUP BY vt1.c0, vt0.lid UNION SELECT vt1.c0, vt0.lid FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((('-1736796917')AND(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))AND(vt0.c1))) ISNULL) WHERE ((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((ABS(DISTINCT vt0.lid), PRINTF(vt0.c0), NULL)) AND ((((vt0.lid) NOT BETWEEN (0xffffffffb6b1891a) AND (vt1.c0)), '-960631729', CASE vt0.c1  WHEN vt0.c1 THEN 0x64cc3f83 ELSE vt1.c0 END)))) ISNULL)) GROUP BY vt1.c0, vt0.lid;
SELECT vt1.c0, vt0.lid FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((('-1736796917')AND(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))AND(vt0.c1))) ISNULL) GROUP BY vt1.c0, vt0.lid;
SELECT vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT vt0.lid, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, vt1.c0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((NULL) IS TRUE)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((NULL) IS TRUE)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))&(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)&(vt1.c0)))&(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)&(vt1.c0)))&(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c1)))AND(NULL)))OR(CASE vt0.lid  WHEN vt0.c1 THEN -1633507007 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid END))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c1)))AND(NULL)))OR(CASE vt0.lid  WHEN vt0.c1 THEN -1633507007 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid END))))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((((((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c1)))AND(NULL)))OR(CASE vt0.lid  WHEN vt0.c1 THEN -1633507007 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid END))) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1 HAVING (((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ISNULL);
SELECT vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1 HAVING (((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ISNULL);
SELECT vt0.lid, vt0.c1 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (vt1.c0) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ ((((vt0.c0, vt0.lid, '0.2485355095052041')) BETWEEN (('', vt0.c0, vt0.lid)) AND ((vt0.c1, vt1.c0, vt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ ((((vt0.c0, vt0.lid, '0.2485355095052041')) BETWEEN (('', vt0.c0, vt0.lid)) AND ((vt0.c1, vt1.c0, vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ ((((vt0.c0, vt0.lid, '0.2485355095052041')) BETWEEN (('', vt0.c0, vt0.lid)) AND ((vt0.c1, vt1.c0, vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((vt1.c0, vt0.c0, vt0.c1))<=(('E', vt0.c1, vt0.c0)))) BETWEEN (((NULL) NOT NULL)) AND ((((vt0.lid))=((vt1.c0)))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((((vt1.c0, vt0.c0, vt0.c1))<=(('E', vt0.c1, vt0.c0)))) BETWEEN (((NULL) NOT NULL)) AND ((((vt0.lid))==((vt1.c0)))))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0, vt0.c0, vt0.c1))<=(('E', vt0.c1, vt0.c0)))) BETWEEN (((NULL) NOT NULL)) AND ((((vt0.lid))==((vt1.c0)))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((((vt1.c0)AND(MAX(vt0.c1))))AND(COUNT(AVG(vt0.c0)))) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING (NOT (((((vt1.c0)AND(MAX(vt0.c1))))AND(COUNT(AVG(vt0.c0)))) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((((((vt1.c0)AND(MAX(vt0.c1))))AND(COUNT(AVG(vt0.c0)))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (CASE 1.492393941E9  WHEN CAST(vt0.c1 AS REAL) THEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END WHEN UPPER(vt0.c0) THEN (((vt1.c0))==((vt1.c0))) WHEN CAST(vt0.c1 AS REAL) THEN vt1.c0 ELSE CAST(vt0.c1 AS BLOB) END) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE ((NOT (CASE 1.492393941E9  WHEN CAST(vt0.c1 AS REAL) THEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END WHEN UPPER(vt0.c0) THEN (((vt1.c0))==((vt1.c0))) WHEN CAST(vt0.c1 AS REAL) THEN vt1.c0 ELSE CAST(vt0.c1 AS BLOB) END))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (((CASE 1.492393941E9  WHEN CAST(vt0.c1 AS REAL) THEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END WHEN UPPER(vt0.c0) THEN (((vt1.c0))==((vt1.c0))) WHEN CAST(vt0.c1 AS REAL) THEN vt1.c0 ELSE CAST(vt0.c1 AS BLOB) END) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1)))) AND ((~ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c1 IN ())) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1)))) AND ((~ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c1 IN ())) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1)))) AND ((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0, vt1.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid;
SELECT ALL vt0.c0, vt1.c0, vt0.lid FROM vt1, vt0 WHERE (((((vt0.lid)AND(vt1.c0)))AND(vt0.c1)) COLLATE NOCASE) GROUP BY vt0.c0, vt1.c0, vt0.lid UNION SELECT ALL vt0.c0, vt1.c0, vt0.lid FROM vt1, vt0 WHERE ((NOT (((((vt0.lid)AND(vt1.c0)))AND(vt0.c1)) COLLATE NOCASE))) GROUP BY vt0.c0, vt1.c0, vt0.lid UNION SELECT ALL vt0.c0, vt1.c0, vt0.lid FROM vt1, vt0 WHERE (((((((vt0.lid)AND(vt1.c0)))AND(vt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.lid;
SELECT vt0.c0, vt1.c0, vt0.lid FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.lid;
SELECT vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0 HAVING CASE WHEN GROUP_CONCAT(vt0.c1) THEN ((((COUNT(vt0.c0))AND(TOTAL(COUNT(*)))))AND(COUNT(vt0.c0))) END UNION ALL SELECT ALL vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt0.c1) THEN ((((COUNT(vt0.c0))AND(TOTAL(COUNT(*)))))AND(COUNT(vt0.c0))) END)) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.lid, vt0.c1, vt1.c0, vt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(vt0.c1) THEN ((((COUNT(vt0.c0))AND(TOTAL(COUNT(*)))))AND(COUNT(vt0.c0))) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CAST('\r[H!䝚[pYz' AS TEXT)) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (ABS(DISTINCT vt0.lid)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST('\r[H!䝚[pYz' AS TEXT)) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (ABS(DISTINCT vt0.lid)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST('\r[H!䝚[pYz' AS TEXT)) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (ABS(DISTINCT vt0.lid)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0))>((vt1.c0 COLLATE BINARY)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))>((vt1.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.lid, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN ((-1.014662972E9) BETWEEN (vt0.c1) AND (vt0.lid)) END) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN ((-1.014662972E9) BETWEEN (vt0.c1) AND (vt0.lid)) END))) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN ((-1.014662972E9) BETWEEN (vt0.c1) AND (vt0.lid)) END) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((((COUNT(SUM(vt0.lid)))+(COUNT(*)))) BETWEEN (GROUP_CONCAT(vt0.c1)) AND (CASE WHEN vt0.c1 THEN vt0.lid END)) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (((((COUNT(SUM(vt0.lid)))+(COUNT(*)))) BETWEEN (GROUP_CONCAT(vt0.c1)) AND (CASE WHEN vt0.c1 THEN vt0.lid END)))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((((((COUNT(SUM(vt0.lid)))+(COUNT(*)))) BETWEEN (GROUP_CONCAT(vt0.c1)) AND (CASE WHEN vt0.c1 THEN vt0.lid END))) ISNULL);
SELECT ALL vt0.c1, vt0.lid FROM vt0, vt1;
SELECT vt0.c1, vt0.lid FROM vt0, vt1 WHERE (((((((((vt0.c1)AND(CAST(vt0.c0 AS REAL))))AND((('f') IS TRUE))))OR(((vt0.lid) NOTNULL))))OR((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((NOT (((((((((vt0.c1)AND(CAST(vt0.c0 AS REAL))))AND((('f') IS TRUE))))OR(((vt0.lid) NOTNULL))))OR((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))))))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0, vt1 WHERE (((((((((((vt0.c1)AND(CAST(vt0.c0 AS REAL))))AND((('f') IS TRUE))))OR(((vt0.lid) NOTNULL))))OR((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))))) ISNULL));
SELECT ALL vt0.c1, vt0.lid FROM vt0, vt1;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE ('539635849') UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT ('539635849'))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((('539635849') ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (json_patch(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (vt0.c1 IN ()))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (json_patch(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (vt0.c1 IN ()))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((json_patch(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (vt0.c1 IN ()))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)IS NOT(vt0.c0))  WHEN UPPER(vt0.c1) THEN ((vt0.c0)=(vt0.lid)) WHEN x'' THEN ((((vt0.lid)OR(vt0.c0)))AND(vt0.c1)) WHEN CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE (vt0.c0 IN ()) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((vt0.c1)IS NOT(vt0.c0))  WHEN UPPER(vt0.c1) THEN ((vt0.c0)==(vt0.lid)) WHEN x'' THEN ((((vt0.lid)OR(vt0.c0)))AND(vt0.c1)) WHEN CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE (vt0.c0 IN ()) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((vt0.c1)IS NOT(vt0.c0))  WHEN UPPER(vt0.c1) THEN ((vt0.c0)==(vt0.lid)) WHEN x'' THEN ((((vt0.lid)OR(vt0.c0)))AND(vt0.c1)) WHEN CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)|(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c0)|(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c0)|(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt1.c0;
SELECT vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c1)&(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) GROUP BY vt0.lid, vt0.c0, vt1.c0 UNION SELECT ALL vt0.lid, vt0.c0, vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE ((NOT (((vt0.c1)&(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))))) GROUP BY vt0.lid, vt0.c0, vt1.c0 UNION SELECT vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c1)&(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt1.c0;
SELECT vt0.lid, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c0, vt1.c0;
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((((((((vt0.c1)OR(0X7db50a17)))OR(SUM(vt1.c0))))OR(vt0.lid)))AND(vt1.c0)))) UNION ALL SELECT ALL vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT ((NOT (((((((((vt0.c1)OR(0x7db50a17)))OR(SUM(vt1.c0))))OR(vt0.lid)))AND(vt1.c0)))))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (((NOT (((((((((vt0.c1)OR(0x7db50a17)))OR(SUM(vt1.c0))))OR(vt0.lid)))AND(vt1.c0))))) ISNULL);
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((((((((vt0.c1)OR(0X7db50a17)))OR(SUM(vt1.c0))))OR(vt0.lid)))AND(vt1.c0)))) UNION ALL SELECT ALL vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT ((NOT (((((((((vt0.c1)OR(0x7db50a17)))OR(SUM(vt1.c0))))OR(vt0.lid)))AND(vt1.c0)))))) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1 HAVING (((NOT (((((((((vt0.c1)OR(0x7db50a17)))OR(SUM(vt1.c0))))OR(vt0.lid)))AND(vt1.c0))))) ISNULL);
SELECT vt0.lid, vt1.c0, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((0.6502553741763328)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt0.lid, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN '678450788' THEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN '678450788' THEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN '678450788' THEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c1))<=((vt0.c0))))>=(((vt0.lid)|(vt0.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((vt0.c1))<=((vt0.c0))))>=(((vt0.lid)|(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt0.c1))<=((vt0.c0))))>=(((vt0.lid)|(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (0Xffffffff86476ae9) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (0Xffffffff86476ae9))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((0Xffffffff86476ae9) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.lid) AND (((vt1.c0) IS FALSE))) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.lid) AND (((vt1.c0) IS FALSE))) GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING SUM(AVG(vt0.lid)) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.lid) AND (((vt1.c0) IS FALSE))) GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (SUM(AVG(vt0.lid)))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.lid) AND (((vt1.c0) IS FALSE))) GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((SUM(AVG(vt0.lid))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((x'b82d') BETWEEN (vt0.lid) AND (vt0.lid)) THEN ((vt0.lid) NOT NULL) WHEN (~ (vt0.lid)) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN NULL WHEN vt0.lid COLLATE NOCASE THEN CAST(vt0.c1 AS INTEGER) WHEN x'c64193fc' THEN CAST(vt0.lid AS NUMERIC) ELSE ((vt0.lid)<<(vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN ((x'b82d') BETWEEN (vt0.lid) AND (vt0.lid)) THEN ((vt0.lid) NOT NULL) WHEN (~ (vt0.lid)) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN NULL WHEN vt0.lid COLLATE NOCASE THEN CAST(vt0.c1 AS INTEGER) WHEN x'c64193fc' THEN CAST(vt0.lid AS NUMERIC) ELSE ((vt0.lid)<<(vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN ((x'b82d') BETWEEN (vt0.lid) AND (vt0.lid)) THEN ((vt0.lid) NOT NULL) WHEN (~ (vt0.lid)) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN NULL WHEN vt0.lid COLLATE NOCASE THEN CAST(vt0.c1 AS INTEGER) WHEN x'c64193fc' THEN CAST(vt0.lid AS NUMERIC) ELSE ((vt0.lid)<<(vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN vt0.lid COLLATE NOCASE THEN ((vt0.lid)IS NOT(vt0.c1)) ELSE ((vt0.c0) IS FALSE) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.lid COLLATE NOCASE THEN ((vt0.lid)IS NOT(vt0.c1)) ELSE ((vt0.c0) IS FALSE) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.lid COLLATE NOCASE THEN ((vt0.lid)IS NOT(vt0.c1)) ELSE ((vt0.c0) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.lid;
SELECT ALL vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE (NULL) GROUP BY vt1.c0, vt0.c0, vt0.lid UNION SELECT vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE ((NOT (NULL))) GROUP BY vt1.c0, vt0.c0, vt0.lid UNION SELECT vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.lid;
SELECT vt1.c0, vt0.c0, vt0.lid FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON ((- (vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.03679954952266651 THEN vt0.c1 ELSE vt0.c0 END, vt0.c1)) GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON ((- (vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.03679954952266651 THEN vt0.c1 ELSE vt0.c0 END, vt0.c1)) GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING TOTAL(CAST(COUNT(*) AS INTEGER)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON ((- (vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.03679954952266651 THEN vt0.c1 ELSE vt0.c0 END, vt0.c1)) GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING (NOT (TOTAL(CAST(COUNT(*) AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt1 FULL OUTER JOIN vt0 ON ((- (vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.03679954952266651 THEN vt0.c1 ELSE vt0.c0 END, vt0.c1)) GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((TOTAL(CAST(COUNT(*) AS INTEGER))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (x'') UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((x'') ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((vt0.lid) IS TRUE)) BETWEEN (vt0.c1) AND ((('404077003') IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.lid) IS TRUE)) BETWEEN (vt0.c1) AND ((('404077003') IS TRUE)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.lid) IS TRUE)) BETWEEN (vt0.c1) AND ((('404077003') IS TRUE)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.lid;
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((~ (((vt0.c0)>(vt0.lid))))) GROUP BY vt1.c0, vt0.c1, vt0.lid UNION SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((NOT ((~ (((vt0.c0)>(vt0.lid))))))) GROUP BY vt1.c0, vt0.c1, vt0.lid UNION SELECT vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1 WHERE ((((~ (((vt0.c0)>(vt0.lid))))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.lid;
SELECT ALL vt1.c0, vt0.c1, vt0.lid FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.lid;
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING 7.121277668246062E17 UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING (NOT (7.121277668246062E17)) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING ((7.121277668246062E17) ISNULL);
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING 7.121277668246062E17 UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING (NOT (7.121277668246062E17)) UNION ALL SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0 HAVING ((7.121277668246062E17) ISNULL);
SELECT vt0.lid, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt1.c0, vt0.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1)*(vt0.lid)))IS(((((vt0.c1)OR(vt1.c0)))AND(vt0.lid))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((((vt0.c1)*(vt0.lid)))IS(((((vt0.c1)OR(vt1.c0)))AND(vt0.lid))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((vt0.c1)*(vt0.lid)))IS(((((vt0.c1)OR(vt1.c0)))AND(vt0.lid))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) IS FALSE)))<=((((vt1.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0) IS FALSE)))<=((((vt1.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0) IS FALSE)))<=((((vt1.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.lid)&(vt0.c0))) NOT BETWEEN (((vt0.lid)LIKE(vt0.c1))) AND ((- (''))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.lid)&(vt0.c0))) NOT BETWEEN (((vt0.lid)LIKE(vt0.c1))) AND ((- (''))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.lid)&(vt0.c0))) NOT BETWEEN (((vt0.lid)LIKE(vt0.c1))) AND ((- (''))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0))<((vt0.c0))))&(vt0.lid COLLATE RTRIM));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0))<((vt0.c0))))&(vt0.lid COLLATE RTRIM)) WHERE (((((((vt0.lid)OR('260813608')))OR(vt0.lid))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0))<((vt0.c0))))&(vt0.lid COLLATE RTRIM)) WHERE ((NOT (((((((vt0.lid)OR('260813608')))OR(vt0.lid))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0))<((vt0.c0))))&(vt0.lid COLLATE RTRIM)) WHERE (((((((((vt0.lid)OR('260813608')))OR(vt0.lid))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0))<((vt0.c0))))&(vt0.lid COLLATE RTRIM));
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON LAST_INSERT_ROWID() GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON LAST_INSERT_ROWID() WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (vt0.c1))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON LAST_INSERT_ROWID() WHERE ((NOT (((((vt1.c0) NOTNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON LAST_INSERT_ROWID() WHERE (((((((vt1.c0) NOTNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (vt0.c1))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON LAST_INSERT_ROWID() GROUP BY vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0;
SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING SUM(COUNT(vt0.lid)) UNION ALL SELECT vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING (NOT (SUM(COUNT(vt0.lid)))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.lid, vt0.c1, vt1.c0 HAVING ((SUM(COUNT(vt0.lid))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELY(CAST(vt0.c1 AS TEXT))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LIKELY(CAST(vt0.c1 AS TEXT))))) UNION ALL SELECT * FROM vt0 WHERE (((LIKELY(CAST(vt0.c1 AS TEXT))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c1 IN (vt0.lid))) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt0.c1 IN (vt0.lid))) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c1 IN (vt0.lid))) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c1)>>(CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END))) GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c1)>>(CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END))))) GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c1)>>(CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END))) ISNULL)) GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.lid, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.lid, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ISNULL);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ISNULL);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
